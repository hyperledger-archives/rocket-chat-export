{"msg":"WadeBarnes","username":"rjones","ts":"2020-06-22T17:25:54.921Z","type":"subscription-role-added"}
{"msg":"","username":"rjones","ts":"2020-06-22T17:27:02.713Z","type":"room_changed_topic"}
{"msg":"development for Raspberry Pi, other μ platforms","username":"rjones","ts":"2020-06-22T17:27:02.722Z","type":"room_changed_description"}
{"msg":"@WadeBarnes this work?","username":"rjones","ts":"2020-06-22T17:27:25.087Z"}
{"msg":"@rjones, perfect!","username":"WadeBarnes","ts":"2020-06-22T17:27:39.855Z"}
{"msg":":h-aries:","username":"rjones","ts":"2020-06-22T17:29:02.038Z","type":"room_changed_topic"}
{"msg":"development of :h-aries: for Raspberry Pi, other μ platforms","username":"rjones","ts":"2020-06-22T17:29:20.207Z","type":"room_changed_description"}
{"msg":"Has joined the channel.","username":"andrew.whitehead","ts":"2020-06-22T17:37:57.113Z","type":"uj"}
{"msg":"Has joined the channel.","username":"HLFPOC","ts":"2020-06-22T17:42:48.335Z","type":"uj"}
{"msg":"Here are some resources people have been using/following:\n- [Collaboration: Raspberry Pi Indy Agent](https://wiki.hyperledger.org/display/INTERN/Collaboration%3A+Raspberry+Pi+Indy+Agent)\n- Zeng Zixuan's related code can be found here; [Raspberry Pi Indy Agent Internship](https://github.com/zzx02/Raspberry-Pi-Indy-Agent)\n\nPeople have been having trouble standing up agents on bare metal.  For example; https://github.com/hyperledger/aries-cloudagent-python/issues/88\n\nNeedless to say getting this all running on a bare metal embedded system can be a challenge.  For the Raspberry Pi (at least) I've been working with a fellow on a containerized solution.  I'm hoping to drag him over here to share the experiences and progress.  That way others can benefit and collaborate.","username":"WadeBarnes","ts":"2020-06-22T18:01:37.005Z"}
{"msg":"Has joined the channel.","username":"haniavis","ts":"2020-06-22T20:36:15.763Z","type":"uj"}
{"msg":"Thanks for joining @haniavis","username":"WadeBarnes","ts":"2020-06-22T20:50:15.831Z"}
{"msg":"I'm hoping Oliver Bünting (eorituz) ends up joining here too.  It's the issues around running on bare metal we're hoping to address for people here.","username":"WadeBarnes","ts":"2020-06-22T20:52:34.593Z"}
{"msg":"Do you have an material you could share that would help others joining the channel to follow along with you containerized environment path?","username":"WadeBarnes","ts":"2020-06-22T20:53:58.023Z"}
{"msg":"Do you have any material you could share that would help others joining the channel to follow along with you containerized environment path?","username":"WadeBarnes","ts":"2020-06-22T20:53:58.023Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2020-06-22T20:54:08.892Z","type":"ul"}
{"msg":"Yes I will try to summarize my efforts until now towards running the aca-py in the Rpi and share it here.","username":"haniavis","ts":"2020-06-22T21:56:54.272Z"}
{"msg":"thanks for the group @WadeBarnes I hope others can share their experiences on rpi + aca-py","username":"haniavis","ts":"2020-06-22T21:57:57.571Z"}
{"msg":"Has joined the channel.","username":"Audrius","ts":"2020-06-23T07:51:12.408Z","type":"uj"}
{"msg":"Has joined the channel.","username":"wip-abramson","ts":"2020-06-23T13:43:48.852Z","type":"uj"}
{"msg":"Has joined the channel.","username":"eorituz","ts":"2020-06-23T15:11:42.390Z","type":"uj"}
{"msg":"@WadeBarnes Hey!","username":"eorituz","ts":"2020-06-23T15:12:00.837Z"}
{"msg":"Hey","username":"WadeBarnes","ts":"2020-06-23T15:13:25.367Z"}
{"msg":"Hey, welcome.","username":"WadeBarnes","ts":"2020-06-23T15:13:25.367Z"}
{"msg":"Has joined the channel.","username":"Baha-sk","ts":"2020-06-23T15:19:57.012Z","type":"uj"}
{"msg":"Here is what I tried so far:\n- The tutorial of the Zeng is kind of outdated so I didn't bother following it step by step all the way thorugh (there are new versions of libsodium, indy-sdk, indysdk-python and rust) <-- using the old indy versions require a downgrade of rust....\n- I went with the BC guys and build the aries-cloud-agent docker image for armv7 (but an old version as it wasn't very clear to me how to build the lastest version) - https://hub.docker.com/repository/docker/eorituz/aries-cloudagent\n---> Building worked fine, however running my docker-compose setup that works on AMD64 gave me a segmentation fault... \n---> By running the container manually I got the same error as mentioned by zzx02 and arner here https://github.com/hyperledger/aries-cloudagent-python/issues/88\nI wasn't able to figure out what causes the crash so I compiled and installed all the requirements on the pi directly which led to the same error.\n```\n      | SOME_TIME:10:29,630 indy.libindy.native.indy.services.ledger INFO \tsrc/services/ledger/mod.rs:461 | build_get_acceptance_mechanisms_request() => Err(IndyError { inner:\n      |\n      | timestamp and version cannot be specified together.\n      |\n      | Invalid structure })\n```","username":"eorituz","ts":"2020-06-23T15:23:27.125Z"}
{"msg":"Here is what I tried so far:\n- The tutorial of the Zeng is kind of outdated so I didn't bother following it step by step all the way thorugh (there are new versions of libsodium, indy-sdk, indysdk-python and rust) <-- using the old indy versions require a downgrade of rust....\n- I went with the BC guys (https://github.com/bcgov/aries-cloudagent-container) and build the aries-cloud-agent docker container for armv7 (but an old version as it wasn't very clear to me how to build the lastest version) - https://hub.docker.com/repository/docker/eorituz/aries-cloudagent\n---> Building worked fine, however running my docker-compose setup that works on AMD64 gave me a segmentation fault... \n---> By running the container manually I got the same error as mentioned by zzx02 and arner here https://github.com/hyperledger/aries-cloudagent-python/issues/88\nI wasn't able to figure out what causes the crash so I compiled and installed all the requirements on the pi directly which led to the same error.\n```\n      | SOME_TIME:10:29,630 indy.libindy.native.indy.services.ledger INFO \tsrc/services/ledger/mod.rs:461 | build_get_acceptance_mechanisms_request() => Err(IndyError { inner:\n      |\n      | timestamp and version cannot be specified together.\n      |\n      | Invalid structure })\n```","username":"eorituz","ts":"2020-06-23T15:23:27.125Z"}
{"msg":"Here is what I tried so far:\n- The tutorial of the Zeng is kind of outdated so I didn't bother following it step by step all the way thorugh (there are new versions of libsodium, indy-sdk, indysdk-python and rust) <-- using the old indy versions even require a downgrade of rust....\n- I went with the BC guys (https://github.com/bcgov/aries-cloudagent-container) and build the aries-cloud-agent docker container for armv7 (but an old version as it wasn't very clear to me how to build the lastest version) - https://hub.docker.com/repository/docker/eorituz/aries-cloudagent\n---> Building worked fine, however running my docker-compose setup that works on AMD64 gave me a segmentation fault... \n---> By running the container manually I got the same error as mentioned by zzx02 and arner here https://github.com/hyperledger/aries-cloudagent-python/issues/88\nI wasn't able to figure out what causes the crash so I compiled and installed all the requirements on the pi directly which led to the same error.\n```\n      | SOME_TIME:10:29,630 indy.libindy.native.indy.services.ledger INFO \tsrc/services/ledger/mod.rs:461 | build_get_acceptance_mechanisms_request() => Err(IndyError { inner:\n      |\n      | timestamp and version cannot be specified together.\n      |\n      | Invalid structure })\n```","username":"eorituz","ts":"2020-06-23T15:23:27.125Z"}
{"msg":"@haniavis, have you been able to get further with your containerized environment.","username":"WadeBarnes","ts":"2020-06-23T15:26:09.685Z"}
{"msg":"@eorituz, yes, and unfortunately the solution was never really documented for that issue.","username":"WadeBarnes","ts":"2020-06-23T15:27:35.541Z"}
{"msg":"@andrew.whitehead ?","username":"WadeBarnes","ts":"2020-06-23T15:27:54.800Z"}
{"msg":"I think that error suggests a mismatch between the indy-sdk version and aca-py","username":"andrew.whitehead","ts":"2020-06-23T15:27:59.819Z"}
{"msg":"My `python3-indy` version matched the indy-sdk release. Can it be that there should be an offset in versions?","username":"eorituz","ts":"2020-06-23T15:29:36.334Z"}
{"msg":"My `python3-indy` version matched the `indy-sdk` release. Can it be that there should be an offset in versions?","username":"eorituz","ts":"2020-06-23T15:29:36.334Z"}
{"msg":"How is the arm image being built?","username":"andrew.whitehead","ts":"2020-06-23T15:30:12.860Z"}
{"msg":"For the container images, there are 2 levels:\n- [PSPC-SPAC-buyandsell/von-image](https://github.com/PSPC-SPAC-buyandsell/von-image), which builds all of the indy dependancies.\n- [bcgov/aries-cloudagent-container](https://github.com/bcgov/aries-cloudagent-container), which adds aca-py.","username":"WadeBarnes","ts":"2020-06-23T15:30:55.518Z"}
{"msg":"The first will give you a guide on the versions of all of the dependancies.","username":"WadeBarnes","ts":"2020-06-23T15:31:34.241Z"}
{"msg":"The first will give you a guide on the versions of all of the dependencies.","username":"WadeBarnes","ts":"2020-06-23T15:31:34.241Z"}
{"msg":"I think collaborating on ARM builds would be the first logical step.","username":"WadeBarnes","ts":"2020-06-23T15:32:55.994Z"}
{"msg":"I think collaborating on ARM builds would be the first logical step.\nThen we could get those published.","username":"WadeBarnes","ts":"2020-06-23T15:32:55.994Z"}
{"msg":"unfortunately happens with manual installation as well.\nI built the bcgov von image on the pi: https://github.com/PSPC-SPAC-buyandsell/von-image\nAnd afterwards the matching bcgov aries: https://github.com/bcgov/aries-cloudagent-container","username":"eorituz","ts":"2020-06-23T15:33:20.435Z"}
{"msg":"unfortunately happens with manual installation as well.\nI built the bcgov von image on the pi: https://github.com/PSPC-SPAC-buyandsell/von-image\nAnd afterwards the matching bcgov aries: https://github.com/bcgov/aries-cloudagent-container\nBoth builds directly on the pi","username":"eorituz","ts":"2020-06-23T15:33:20.435Z"}
{"msg":"unfortunately happens with manual installation as well.\nI built the ~bcgov~ von image on the pi: https://github.com/PSPC-SPAC-buyandsell/von-image\nAnd afterwards the matching bcgov aries: https://github.com/bcgov/aries-cloudagent-container\nBoth builds directly on the pi","username":"eorituz","ts":"2020-06-23T15:33:20.435Z"}
{"msg":"Right but how did you built it","username":"andrew.whitehead","ts":"2020-06-23T15:33:45.826Z"}
{"msg":"Right but how did you build it","username":"andrew.whitehead","ts":"2020-06-23T15:33:45.826Z"}
{"msg":"There's a make_image script which sets variables to specify the dependency versions","username":"andrew.whitehead","ts":"2020-06-23T15:34:27.202Z"}
{"msg":"yep, I posted a brief how-to on my dockerhub: https://hub.docker.com/repository/docker/eorituz/von-image\nNot sure if that satisfies you... I didn't intend to show it to anyone else :D","username":"eorituz","ts":"2020-06-23T15:35:40.169Z"}
{"msg":"yep, I posted a brief how-to on my dockerhub: https://hub.docker.com/repository/docker/eorituz/von-image + https://hub.docker.com/repository/docker/eorituz/von-image\nNot sure if that satisfies you... I didn't intend to show it to anyone else :D","username":"eorituz","ts":"2020-06-23T15:35:40.169Z"}
{"msg":"That helps, thanks. So looks like you were basing it on 1.14.1 which should be right I think","username":"andrew.whitehead","ts":"2020-06-23T15:38:15.094Z"}
{"msg":"What's the aca-py version?","username":"andrew.whitehead","ts":"2020-06-23T15:38:23.435Z"}
{"msg":"`py36-1.14-0_0.4.2`","username":"eorituz","ts":"2020-06-23T15:39:07.096Z"}
{"msg":"Mhhh I think you're on to somehting there my conatiner names state that I build on `py36-1.14-0` not sure if that's the issue","username":"eorituz","ts":"2020-06-23T15:40:34.724Z"}
{"msg":"I'd try updating the aca-py dependency to 0.5.1","username":"andrew.whitehead","ts":"2020-06-23T15:40:37.129Z"}
{"msg":"Ok, thanks. That's my next step. (However, I ran in the same issue when installing & compiling everything for `aca-py==0.5.1` on the pi directly)","username":"eorituz","ts":"2020-06-23T15:44:16.029Z"}
{"msg":"The von-image build creates the python3-indy python package from the same repository as the indy-sdk build, so it's important not to install the one from pypi as well","username":"andrew.whitehead","ts":"2020-06-23T15:46:12.748Z"}
{"msg":"@eorituz, @haniavis, I'd recommend working on forks of [PSPC-SPAC-buyandsell/von-image](https://github.com/PSPC-SPAC-buyandsell/von-image), and [bcgov/aries-cloudagent-container](https://github.com/bcgov/aries-cloudagent-container) so you can contribute the results back to these repos for the benefit of all.  Then we can look at publishing the ARM images with the rest of the images.","username":"WadeBarnes","ts":"2020-06-23T16:01:04.680Z"}
{"msg":"Until now I have managed to build the aries-cloudagent image for the aca-py 0.3.5 (py36-1.11-1_0.3.5). I already had a controller for this version, so I needed to use v0.3.5. Unfortunately my code was based on the demo examples and I didn't manage to use the py36-1.11-1_0.3.5 image with my demo-based code, so I am now trying to port to a \"proper\" controller code like [this one](https://github.com/bcgov/aries-vcr-issuer-controller) (sent by @WadeBarnes ). Also I am not sure if the py36-1.11-1_0.3.5 image I have satisfies all the dependencies, since I commented out some of them that I believe I don't need e.g. the indy-cli in the von-image. Here is how I did it:\n- First used [this repo]() to build the von-image. Here I couldn","username":"haniavis","ts":"2020-06-23T16:09:44.790Z"}
{"msg":"Until now I have managed to build the aries-cloudagent image for the aca-py 0.3.5 (py36-1.11-1_0.3.5). I already had a controller for this version, so I needed to use v0.3.5. Unfortunately my code was based on the demo examples and I didn't manage to use the py36-1.11-1_0.3.5 image with my demo-based code, so I am now trying to port to a \"proper\" controller code like [this one](https://github.com/bcgov/aries-vcr-issuer-controller) (sent by @WadeBarnes ). Also I am not sure if the py36-1.11-1_0.3.5 image I have satisfies all the dependencies, since I commented out some of them that I believe I don't need e.g. the indy-cli in the von-image. Here is how I did it:\n- First used [this repo](https://github.com/PSPC-SPAC-buyandsell/von-image) to build the von-image. Here I couldn't build the indy-sdk from source, so I used the packages found [here](https://repo.sovrin.org/android/libindy/stable/)","username":"haniavis","ts":"2020-06-23T16:09:44.790Z"}
{"msg":"I also commented out the indy-cli, I don't need it since I am running the ledger on another machine. And the postgres_storage, for which I am not sure if I need it.","username":"haniavis","ts":"2020-06-23T16:14:30.173Z"}
{"msg":"- And then I used [this repo](https://github.com/bcgov/aries-vcr-issuer-controller) to add the aries-cloudagent package on the von-image.","username":"haniavis","ts":"2020-06-23T16:15:48.993Z"}
{"msg":"- And then I used this repo https://github.com/bcgov/aries-cloudagent-container to add the aries-cloudagent package on the von-image.","username":"haniavis","ts":"2020-06-23T16:15:48.993Z"}
{"msg":"for the von-image I did `python make_image.py --py36 --release 1.11.1`  and for the aries-cloudagent I did `python make_image.py 0.3.5 python`","username":"haniavis","ts":"2020-06-23T16:17:42.143Z"}
{"msg":"What is the error and when is it showing up?","username":"andrew.whitehead","ts":"2020-06-23T16:27:29.801Z"}
{"msg":"You mean for the indy-sdk?","username":"haniavis","ts":"2020-06-23T16:30:47.031Z"}
{"msg":"Whatever error you are experiencing, or is it working for you?","username":"andrew.whitehead","ts":"2020-06-23T16:31:15.203Z"}
{"msg":"I will try to reproduce the errors and send here, I didn't keep logs","username":"haniavis","ts":"2020-06-23T16:31:46.305Z"}
{"msg":"Has joined the channel.","username":"jljordan_bcgov","ts":"2020-06-23T23:38:33.085Z","type":"uj"}
{"msg":"Has joined the channel.","username":"domwoe","ts":"2020-06-24T12:30:56.772Z","type":"uj"}
{"msg":"Has joined the channel.","username":"c2bo","ts":"2020-06-25T08:11:06.655Z","type":"uj"}
{"msg":"So I looked at it again and realized that the error was an \"out of memory error\" during the make_image.py of the von-image. This wasn't fixed even when I increased my swap memory, but it was fixed when I disabled the experimental features of my docker. Now the indy sdk and the indy-cli are built successfully and I get the error that @eorituz describes in his dockerhub.","username":"haniavis","ts":"2020-06-26T01:18:14.954Z"}
{"msg":"So I looked at it again and realized that the error was an \"out of memory error\" during the make_image.py of the von-image. This wasn't fixed even when I increased my swap memory, but it was fixed when I disabled the experimental features of my docker. Now the indy sdk and the indy-cli are built successfully and I get the error that @eorituz describes in his dockerhub about the postgres_storage.","username":"haniavis","ts":"2020-06-26T01:18:14.954Z"}
{"msg":"@haniavis The postgres issue can also be \"fixed\" with replacing the trouble making `i8` types with `libc::c_char` (however I have no clue about rust and only figured out by googleing that there are some flaws with `i8` and some arm architectures... The build accepts this fix but I don't know if it breaks something later on)","username":"eorituz","ts":"2020-06-26T08:30:33.990Z"}
{"msg":"@haniavis I'm on a RPi 4 (so i guess that helps with the out of memory issues)... The postgres issue can also be \"fixed\" with replacing the trouble making `i8` types with `libc::c_char` (however I have no clue about rust and only figured out by googleing that there are some flaws with `i8` and some arm architectures... The build accepts this fix but I don't know if it breaks something later on)","username":"eorituz","ts":"2020-06-26T08:30:33.990Z"}
{"msg":"@haniavis I'm on a RPi 4 (so i guess that helps with the out of memory issues)... The postgres issue can also be \"fixed\" with replacing the trouble making `i8` types with `libc::c_char` (however I have no clue about rust and only figured out by googleing that there are some flaws with `i8` and some arm architectures... The build accepts this fix but I don't know if it breaks something later on)\n\nFeel free to try and run my latest aca-py image from dockerhub and have a look if you run in the same issues (https://hub.docker.com/repository/docker/eorituz/aries-cloudagent version py36-1.14-1_0.5.1\n)","username":"eorituz","ts":"2020-06-26T08:30:33.990Z"}
{"msg":"@andrew.whitehead I built the latest version of aca-py with the coressponding von-image. However, I'm still stuck with the same error message: https://github.com/hyperledger/aries-cloudagent-python/issues/88\n```\npi@raspberrypi:~ $ docker run eorituz/aries-cloudagent:py36-1.14-1_0.5.1 start --admin '0.0.0.0' 5020 -e 10.1.7.64:10000 --wallet-type indy --genesis-url http://test.bcovrin.vonx.io/genesis --label 'seller Agent' --auto-accept-invites --auto-accept-requests --admin-insecure-mode --log-level INFO --genesis-url http://test.bcovrin.vonx.io/genesis -it http '0.0.0.0' 10000 -ot http\n2020-06-26 08:31:43,294 aries_cloudagent.wallet.provider INFO Opening wallet type: indy\n2020-06-26 08:31:43,474 indy.libindy.native.command_executor INFO \tsrc/commands/mod.rs:101 | Worker thread started\n2020-06-26 08:31:43,512 indy.libindy WARNING _indy_loop_callback: Function returned error \n2020-06-26 08:31:53,487 aries_cloudagent.wallet.indy INFO Creating master secret...\n2020-06-26 08:31:53,533 aries_cloudagent.config.ledger INFO Fetching genesis transactions from: http://test.bcovrin.vonx.io/genesis\n2020-06-26 08:31:54,988 indy.libindy.native.indy.commands.pool INFO \tsrc/commands/pool.rs:75 | OpenAck handle 4, pool_id 4, result Ok(())\n2020-06-26 08:31:54,996 indy.libindy.native.indy.services.ledger INFO \tsrc/services/ledger/mod.rs:449 | build_get_acceptance_mechanisms_request() => Err(IndyError { inner: \n\ntimestamp and version cannot be specified together.\n\nInvalid structure })\n```\n@zzx02 could you point out how resolved that issue?","username":"eorituz","ts":"2020-06-26T08:36:40.671Z"}
{"msg":"@andrew.whitehead I built the latest version of aca-py with the coressponding von-image. However, I'm still stuck with the same error message: https://github.com/hyperledger/aries-cloudagent-python/issues/88\n```\npi@raspberrypi:~ $ docker run eorituz/aries-cloudagent:py36-1.14-1_0.5.1 start --admin '0.0.0.0' 5020 -e 10.1.7.64:10000 --wallet-type indy --genesis-url http://test.bcovrin.vonx.io/genesis --label 'seller Agent' --auto-accept-invites --auto-accept-requests --admin-insecure-mode --log-level INFO --genesis-url http://test.bcovrin.vonx.io/genesis -it http '0.0.0.0' 10000 -ot http\n2020-06-26 08:31:43,294 aries_cloudagent.wallet.provider INFO Opening wallet type: indy\n2020-06-26 08:31:43,474 indy.libindy.native.command_executor INFO \tsrc/commands/mod.rs:101 | Worker thread started\n2020-06-26 08:31:43,512 indy.libindy WARNING _indy_loop_callback: Function returned error \n2020-06-26 08:31:53,487 aries_cloudagent.wallet.indy INFO Creating master secret...\n2020-06-26 08:31:53,533 aries_cloudagent.config.ledger INFO Fetching genesis transactions from: http://test.bcovrin.vonx.io/genesis\n2020-06-26 08:31:54,988 indy.libindy.native.indy.commands.pool INFO \tsrc/commands/pool.rs:75 | OpenAck handle 4, pool_id 4, result Ok(())\n2020-06-26 08:31:54,996 indy.libindy.native.indy.services.ledger INFO \tsrc/services/ledger/mod.rs:449 | build_get_acceptance_mechanisms_request() => Err(IndyError { inner: \n\ntimestamp and version cannot be specified together.\n\nInvalid structure })\n```\nDebug logs: https://gist.github.com/eorituz/0862e2b78b598667b76f1389d1e819b1\n\n@zzx02 could you point out how resolved that issue?","username":"eorituz","ts":"2020-06-26T08:36:40.671Z"}
{"msg":"@andrew.whitehead I built the latest version of aca-py with the corresponding von-image. However, I'm still stuck with the same error message: https://github.com/hyperledger/aries-cloudagent-python/issues/88\n```\npi@raspberrypi:~ $ docker run eorituz/aries-cloudagent:py36-1.14-1_0.5.1 start --admin '0.0.0.0' 5020 -e 10.1.7.64:10000 --wallet-type indy --genesis-url http://test.bcovrin.vonx.io/genesis --label 'seller Agent' --auto-accept-invites --auto-accept-requests --admin-insecure-mode --log-level INFO --genesis-url http://test.bcovrin.vonx.io/genesis -it http '0.0.0.0' 10000 -ot http\n2020-06-26 08:31:43,294 aries_cloudagent.wallet.provider INFO Opening wallet type: indy\n2020-06-26 08:31:43,474 indy.libindy.native.command_executor INFO \tsrc/commands/mod.rs:101 | Worker thread started\n2020-06-26 08:31:43,512 indy.libindy WARNING _indy_loop_callback: Function returned error \n2020-06-26 08:31:53,487 aries_cloudagent.wallet.indy INFO Creating master secret...\n2020-06-26 08:31:53,533 aries_cloudagent.config.ledger INFO Fetching genesis transactions from: http://test.bcovrin.vonx.io/genesis\n2020-06-26 08:31:54,988 indy.libindy.native.indy.commands.pool INFO \tsrc/commands/pool.rs:75 | OpenAck handle 4, pool_id 4, result Ok(())\n2020-06-26 08:31:54,996 indy.libindy.native.indy.services.ledger INFO \tsrc/services/ledger/mod.rs:449 | build_get_acceptance_mechanisms_request() => Err(IndyError { inner: \n\ntimestamp and version cannot be specified together.\n\nInvalid structure })\n```\nDebug logs: https://gist.github.com/eorituz/0862e2b78b598667b76f1389d1e819b1\n\n@zzx02 could you point out how resolved that issue?","username":"eorituz","ts":"2020-06-26T08:36:40.671Z"}
{"msg":"Has joined the channel.","username":"zzx02","ts":"2020-06-26T08:36:40.829Z","type":"uj"}
{"msg":"@eorituz, Would you be able to increase the log level to DEBUG and see if we can get more details from the logs?","username":"WadeBarnes","ts":"2020-06-26T12:28:39.407Z"}
{"msg":"I'm getting things setup on my end to replicate these issues.","username":"WadeBarnes","ts":"2020-06-26T12:30:10.164Z"}
{"msg":"I'm getting things setup on my end to try to replicate these issues.","username":"WadeBarnes","ts":"2020-06-26T12:30:10.164Z"}
{"msg":"@eorituz, How are you specifying the seed `--seed` for your agent and have you pre-registered it on the `http://test.bcovrin.vonx.io` ledger?","username":"WadeBarnes","ts":"2020-06-26T12:36:55.943Z"}
{"msg":"@eorituz, How are you specifying the seed `--seed` for your agent and have you pre-registered your agent on the `http://test.bcovrin.vonx.io` ledger?","username":"WadeBarnes","ts":"2020-06-26T12:36:55.943Z"}
{"msg":"Is this it? http://test.bcovrin.vonx.io/browse/domain?page=1&query=seller%20Agent&txn_type=","username":"WadeBarnes","ts":"2020-06-26T12:39:14.063Z"}
{"msg":"","username":"WadeBarnes","ts":"2020-06-26T12:39:35.628Z","attachments":[{"type":"file","title":"Clipboard - June 26, 2020 5:39 AM","title_link":"/file-upload/S8ar6KuZRwGBfQhy9/Clipboard%20-%20June%2026,%202020%205:39%20AM","image_url":"/file-upload/S8ar6KuZRwGBfQhy9/Clipboard%20-%20June%2026,%202020%205:39%20AM","image_type":"image/png","image_size":41767,"url":"/file-upload/S8ar6KuZRwGBfQhy9/Clipboard%20-%20June%2026,%202020%205:39%20AM","remote":false,"fileId":"S8ar6KuZRwGBfQhy9","fileName":"Clipboard - June 26, 2020 5:39 AM"}]}
{"msg":"If so it looks like it's spinning up enough to be able to write it's endpoint to the ledger.","username":"WadeBarnes","ts":"2020-06-26T12:43:48.044Z"}
{"msg":"http://test.bcovrin.vonx.io/browse/domain?page=1&query=EscDtHeS2mhVZLFEMQmkU8&txn_type=","username":"WadeBarnes","ts":"2020-06-26T12:43:50.080Z"}
{"msg":"","username":"WadeBarnes","ts":"2020-06-26T12:44:03.243Z","attachments":[{"type":"file","title":"Clipboard - June 26, 2020 5:44 AM","title_link":"/file-upload/pRnbfgy77gBQ8FwFB/Clipboard%20-%20June%2026,%202020%205:44%20AM","image_url":"/file-upload/pRnbfgy77gBQ8FwFB/Clipboard%20-%20June%2026,%202020%205:44%20AM","image_type":"image/png","image_size":88332,"url":"/file-upload/pRnbfgy77gBQ8FwFB/Clipboard%20-%20June%2026,%202020%205:44%20AM","remote":false,"fileId":"pRnbfgy77gBQ8FwFB","fileName":"Clipboard - June 26, 2020 5:44 AM"}]}
{"msg":"However that endpoint will need to be publicly accessible, currently it is not.","username":"WadeBarnes","ts":"2020-06-26T12:44:55.529Z"}
{"msg":"However that endpoint will need to be publicly accessible (in order to communicate with other agents), currently it is not.","username":"WadeBarnes","ts":"2020-06-26T12:44:55.529Z"}
{"msg":"That's easy to change.  When you update the endpoint on the agent side it will detect the change and write the new endpoint to the ledger.","username":"WadeBarnes","ts":"2020-06-26T12:46:08.963Z"}
{"msg":"The fact that the message is logged at `INFO` level makes me wonder if that's even an issue.  There are many messages from indy (even ones logged at `ERROR` level) that can be ignored.","username":"WadeBarnes","ts":"2020-06-26T13:03:30.523Z"}
{"msg":"The fact that the message is logged at `INFO` level makes me wonder if that's even an issue.  There are many messages from indy (even ones logged at `ERROR` level) that can be safely ignored.","username":"WadeBarnes","ts":"2020-06-26T13:03:30.523Z"}
{"msg":"The DEBUG logs are in the gist I posted above (https://gist.github.com/eorituz/0862e2b78b598667b76f1389d1e819b1)","username":"eorituz","ts":"2020-06-26T15:28:45.416Z"}
{"msg":"I suspect the error is something to do with the FFI and/or python wrapper for FFI. It passes in the timestamp as a c_int64","username":"andrew.whitehead","ts":"2020-06-26T15:32:15.527Z"}
{"msg":"c_timestamp = c_int64(timestamp) if timestamp is not None else c_int(-1)  <-- but why revert to c_int for the default value","username":"andrew.whitehead","ts":"2020-06-26T15:32:52.131Z"}
{"msg":"Thank you for pointing it out. The issue we're facing atm happens before we run into trouble with seeds and \nnot registered/ publicly available endpoints.","username":"eorituz","ts":"2020-06-26T15:33:40.350Z"}
{"msg":"https://github.com/hyperledger/indy-sdk/blob/2c84988e72723610b9c302a6807b0f480cbe3276/wrappers/python/indy/ledger.py#L1722","username":"andrew.whitehead","ts":"2020-06-26T15:34:12.700Z"}
{"msg":"So yes, I will need to specify a seed an register it (I also tried to run my container with doing all of that, but ran into the same issue)","username":"eorituz","ts":"2020-06-26T15:36:56.337Z"}
{"msg":"It does the same in build_txn_author_agreement_request a couple times","username":"andrew.whitehead","ts":"2020-06-26T15:36:59.139Z"}
{"msg":"So the registrations above are not from you agent?","username":"WadeBarnes","ts":"2020-06-26T15:38:16.222Z"}
{"msg":"So the registrations above are not from your agent?","username":"WadeBarnes","ts":"2020-06-26T15:38:16.222Z"}
{"msg":"Nope at least it's not from the RPi I guess it is from the run I made on my local machine to test my docker-compose setup","username":"eorituz","ts":"2020-06-26T15:39:43.620Z"}
{"msg":"Good point @andrew.whitehead Do you have a direct channel to the indy devs? Or should you or me open an Issue?\nI'm fine with doing it but since you found it the honor is yours :D","username":"eorituz","ts":"2020-06-26T15:40:51.054Z"}
{"msg":"For this I'd probably just open a PR :)","username":"andrew.whitehead","ts":"2020-06-26T15:41:40.449Z"}
{"msg":"Maybe you can test out the change though","username":"andrew.whitehead","ts":"2020-06-26T15:41:55.449Z"}
{"msg":"I will. So your best guess is that `c_int64` should be the right?","username":"eorituz","ts":"2020-06-26T15:42:54.338Z"}
{"msg":"Yep. I would try this to avoid the issue: c_int64(-1 if timestamp is None else timestamp)","username":"andrew.whitehead","ts":"2020-06-26T15:44:09.548Z"}
{"msg":"Ok, building it atm. I'll let you guys know on monday. (I'm in CEST --> I'll call it a day now)","username":"eorituz","ts":"2020-06-26T15:54:51.357Z"}
{"msg":"Ok, it seems to work now. @andrew.whitehead Thank you for you help. You can open the PR.\n@WadeBarnes @haniavis  feel free to download and test the aries-cloudagent for armv7 - https://hub.docker.com/layers/eorituz/aries-cloudagent/py36-1.14-1_0.5.1/images/sha256-a80415814edafeaff4a9b9074f46c4d8177cf9c233d58364f99669efb3289159?context=repo","username":"eorituz","ts":"2020-06-26T18:23:50.122Z"}
{"msg":"@eorituz, That's awesome news.  You already provided links to your docker files and process correct?  Are you able to submit PRs to the main `von-image` and `aries-cloudagent-container` repositories with any changes and documentation?","username":"WadeBarnes","ts":"2020-06-26T18:27:31.104Z"}
{"msg":"@eorituz, That's awesome news.  You already provided links to your docker files and the steps you followed; correct?  Are you able to submit PRs to the main `von-image` and `aries-cloudagent-container` repositories with any changes and documentation?","username":"WadeBarnes","ts":"2020-06-26T18:27:31.104Z"}
{"msg":"@eorituz, That's awesome news.  You already provided links to your docker files and the steps you followed; correct?  Are you able to submit PRs to the main `von-image` and `aries-cloudagent-container` repositories with any changes and some documentation?","username":"WadeBarnes","ts":"2020-06-26T18:27:31.104Z"}
{"msg":"Then we can look into incorporating the images into the regular release and docker hub repos.","username":"WadeBarnes","ts":"2020-06-26T18:29:17.602Z"}
{"msg":"and adding some documentation to the `aries-cloudagent-python` regarding the process.","username":"WadeBarnes","ts":"2020-06-26T18:30:47.520Z"}
{"msg":"and adding some documentation to the `aries-cloudagent-python` regarding the process of getting the agents running on a Pi.","username":"WadeBarnes","ts":"2020-06-26T18:30:47.520Z"}
{"msg":"Hi, I am trying to build the von-image for the 1.11.1 sdk (agent 0.3.5), I fixed the postgres issue with the i8 but now I have another error when compiling ursa, see below. Any ideas?\n`   Compiling ursa v0.1.1\nerror[E0277]: the trait bound `rand_chacha::ChaChaRng: rand_core::CryptoRng` is not satisfied\n  --> /home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/ursa-0.1.1/src/signatures/ed25519.rs:27:21\n   |\n27 |                     Keypair::generate(&mut rng)\n   |                     ^^^^^^^^^^^^^^^^^ the trait `rand_core::CryptoRng` is not implemented for `rand_chacha::ChaChaRng`\n   |\n   = note: required by `ed25519_dalek::Keypair::generate`\n\nerror[E0277]: the trait bound `rand_chacha::ChaChaRng: rand_core::RngCore` is not satisfied\n  --> /home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/ursa-0.1.1/src/signatures/ed25519.rs:27:21\n   |\n27 |                     Keypair::generate(&mut rng)\n   |                     ^^^^^^^^^^^^^^^^^ the trait `rand_core::RngCore` is not implemented for `rand_chacha::ChaChaRng`\n   |\n   = note: required by `ed25519_dalek::Keypair::generate`\n\nerror[E0277]: the trait bound `rand::rngs::OsRng: rand_core::CryptoRng` is not satisfied\n  --> /home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/ursa-0.1.1/src/signatures/ed25519.rs:35:17\n   |\n35 |                 Keypair::generate(&mut rng)\n   |                 ^^^^^^^^^^^^^^^^^ the trait `rand_core::CryptoRng` is not implemented for `rand::rngs::OsRng`\n   |\n   = note: required by `ed25519_dalek::Keypair::generate`\n\nerror[E0277]: the trait bound `rand::rngs::OsRng: rand_core::RngCore` is not satisfied\n  --> /home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/ursa-0.1.1/src/signatures/ed25519.rs:35:17\n   |\n35 |                 Keypair::generate(&mut rng)\n   |                 ^^^^^^^^^^^^^^^^^ the trait `rand_core::RngCore` is not implemented for `rand::rngs::OsRng`\n   |\n   = note: required by `ed25519_dalek::Keypair::generate`\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: Could not compile `ursa`.`","username":"haniavis","ts":"2020-06-28T02:22:46.798Z"}
{"msg":"Hi, I am trying to build the von-image for the 1.11.1 sdk (agent 0.3.5), I fixed the postgres issue with the i8 but now I have another error when compiling ursa, see below. Any ideas?\n\n Compiling ursa v0.1.1\nerror[E0277]: the trait bound `rand_chacha::ChaChaRng: rand_core::CryptoRng` is not satisfied\n  --> /home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/ursa-0.1.1/src/signatures/ed25519.rs:27:21\n   |\n27 |                     Keypair::generate(&mut rng)\n   |                     ^^^^^^^^^^^^^^^^^ the trait `rand_core::CryptoRng` is not implemented for `rand_chacha::ChaChaRng`\n   |\n   = note: required by `ed25519_dalek::Keypair::generate`\n\nerror[E0277]: the trait bound `rand_chacha::ChaChaRng: rand_core::RngCore` is not satisfied\n  --> /home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/ursa-0.1.1/src/signatures/ed25519.rs:27:21\n   |\n27 |                     Keypair::generate(&mut rng)\n   |                     ^^^^^^^^^^^^^^^^^ the trait `rand_core::RngCore` is not implemented for `rand_chacha::ChaChaRng`\n   |\n   = note: required by `ed25519_dalek::Keypair::generate`\n\nerror[E0277]: the trait bound `rand::rngs::OsRng: rand_core::CryptoRng` is not satisfied\n  --> /home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/ursa-0.1.1/src/signatures/ed25519.rs:35:17\n   |\n35 |                 Keypair::generate(&mut rng)\n   |                 ^^^^^^^^^^^^^^^^^ the trait `rand_core::CryptoRng` is not implemented for `rand::rngs::OsRng`\n   |\n   = note: required by `ed25519_dalek::Keypair::generate`\n\nerror[E0277]: the trait bound `rand::rngs::OsRng: rand_core::RngCore` is not satisfied\n  --> /home/indy/.cargo/registry/src/github.com-1ecc6299db9ec823/ursa-0.1.1/src/signatures/ed25519.rs:35:17\n   |\n35 |                 Keypair::generate(&mut rng)\n   |                 ^^^^^^^^^^^^^^^^^ the trait `rand_core::RngCore` is not implemented for `rand::rngs::OsRng`\n   |\n   = note: required by `ed25519_dalek::Keypair::generate`\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: Could not compile `ursa`.","username":"haniavis","ts":"2020-06-28T02:22:46.798Z"}
{"msg":"Why are you building such an old version? In any case, I think that requires a very specific version of ed25519_dalek, like alpha 2 instead of alpha 3","username":"andrew.whitehead","ts":"2020-06-28T02:33:50.677Z"}
{"msg":"because I have controllers which are based on this version of the agent","username":"haniavis","ts":"2020-06-28T02:36:30.181Z"}
{"msg":"@haniavis, Would it be easier to upgrade the controllers to the latest version of `aca-py`?","username":"WadeBarnes","ts":"2020-06-28T14:57:20.212Z"}
{"msg":"Yes, I will try to port the controllers code to the latest version of aca-py. @eorituz did you face any other issue when building the von-image except from the const i8 in postgres_storage?","username":"haniavis","ts":"2020-07-03T05:16:50.893Z"}
{"msg":"@haniavis Yes there is the issue with the buggy python wrapper (https://github.com/hyperledger/indy-sdk/pull/2210) just manually add that pr to your indy fork (justl ike the i8 thing)\nYou can checkout all my changes in my dockerhub readmes:\nvon:  https://hub.docker.com/repository/docker/eorituz/von-image\naries: https://hub.docker.com/repository/docker/eorituz/aries-cloudagent","username":"eorituz","ts":"2020-07-03T09:47:32.212Z"}
{"msg":"@haniavis Yes there is the issue with the buggy python wrapper (https://github.com/hyperledger/indy-sdk/pull/2210) just manually add that pr to your indy fork \nYou can checkout all my changes in my dockerhub readmes:\nvon:  https://hub.docker.com/repository/docker/eorituz/von-image\naries: https://hub.docker.com/repository/docker/eorituz/aries-cloudagent","username":"eorituz","ts":"2020-07-03T09:47:32.212Z"}
{"msg":"The aries container could use some optimization as I just blindly added a random USER and installed the missing dependencies (I didn't spend much time thinking about why that doesn't work out of the box on the pi).\nAlso i used a RPi4 with 2GB ram and the von-images took 1h, aries 10minutes.\nJust that you know: on a pi zero it will take ages :D","username":"eorituz","ts":"2020-07-03T09:49:02.512Z"}
{"msg":"I know, I use a RPi3B+, the von-image takes 1 and a half hour to build so I have to spend a lot of time to fix any issues. I probably have to buy the model 4. Thanks for the info!","username":"haniavis","ts":"2020-07-03T16:03:22.215Z"}
{"msg":"It sounds easier to just install the dependencies without using docker","username":"andrew.whitehead","ts":"2020-07-03T16:28:52.823Z"}
{"msg":"Has joined the channel.","username":"arner","ts":"2020-07-05T15:03:01.119Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kole.barnes","ts":"2020-07-06T20:55:07.307Z","type":"uj"}
{"msg":"Has joined the channel.","username":"severus-sn4pe","ts":"2020-07-07T11:54:27.362Z","type":"uj"}
{"msg":"Has joined the channel.","username":"helengarneau","ts":"2020-07-07T17:58:02.942Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mxs1491","ts":"2020-07-09T05:53:02.782Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JelleFm","ts":"2020-07-10T11:35:16.823Z","type":"uj"}
{"msg":"Has joined the channel.","username":"TimoGlastra","ts":"2020-07-10T11:40:59.390Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MichaelSchaefer","ts":"2020-07-14T06:50:35.453Z","type":"uj"}
{"msg":"Has joined the channel.","username":"swcurran","ts":"2020-07-30T20:00:18.012Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MartinWainstein","ts":"2020-07-30T20:00:27.159Z","type":"uj"}
{"msg":"Has joined the channel.","username":"matgnt","ts":"2020-09-11T15:00:42.816Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AngelPalomares","ts":"2020-09-18T09:48:17.906Z","type":"uj"}
{"msg":"Has joined the channel.","username":"prakharsr","ts":"2020-10-26T17:23:42.529Z","type":"uj"}
{"msg":"@prakharsr, The work @eorituz did is likely the most relevant to your situation.","username":"WadeBarnes","ts":"2020-10-26T17:27:32.385Z"}
{"msg":"Has joined the channel.","username":"lmtriet","ts":"2020-10-26T18:16:47.429Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pixelschnitzel","ts":"2020-10-27T14:05:44.144Z","type":"uj"}
{"msg":"Has joined the channel.","username":"HansHuber080883","ts":"2020-10-27T14:07:37.680Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rileyphughes","ts":"2020-10-27T14:38:17.520Z","type":"uj"}
{"msg":"Has joined the channel.","username":"andrewtan","ts":"2020-10-28T00:18:35.164Z","type":"uj"}
{"msg":"Has joined the channel.","username":"shonjs","ts":"2020-11-17T09:07:43.618Z","type":"uj"}
{"msg":"Has joined the channel.","username":"marc0olo","ts":"2020-11-30T04:50:41.872Z","type":"uj"}
{"msg":"Hi all, I built latest images (armv7) for both von-network and aca-py, so if anybody wants to use the latest versions, I'm posting the links over here so other people don't have to spend time and effor to build those images. ```\nVon-network - https://hub.docker.com/repository/docker/prakharsr/von-image-armv7l\n```","username":"prakharsr","ts":"2020-12-01T07:57:39.161Z"}
{"msg":"Hi all, I built latest images (armv7) for both von-network and aca-py, so if anybody wants to use the latest versions, I'm posting the links over here so other people don't have to spend time and effor to build those images. \nVon-network - https://hub.docker.com/repository/docker/prakharsr/von-image-armv7l\nAca-py - https://hub.docker.com/repository/docker/prakharsr/aca-py-armv7l","username":"prakharsr","ts":"2020-12-01T07:57:39.161Z"}
{"msg":"Hi all, I built latest images (armv7l) for both von-network and aca-py in beaglebone black, so if anybody wants to use the latest versions, I'm posting the links over here so other people don't have to spend time and effor to build those images. \nVon-network - https://hub.docker.com/repository/docker/prakharsr/von-image-armv7l\nAca-py - https://hub.docker.com/repository/docker/prakharsr/aca-py-armv7l","username":"prakharsr","ts":"2020-12-01T07:57:39.161Z"}
{"msg":"Hi all, I built latest images (armv7l) for both von-network and aca-py in beaglebone black, so if anybody wants to use the latest versions, I'm posting the links over here so other people don't have to spend time and effor to build those images. \nVon-network - https://hub.docker.com/repository/docker/prakharsr/von-image-armv7l (von-image:py36-1.15-0 armhf)\nAca-py - https://hub.docker.com/repository/docker/prakharsr/aca-py-armv7l (aries-cloudagent:latest_0.5.6 py36-1.15-0 armhf)","username":"prakharsr","ts":"2020-12-01T07:57:39.161Z"}
{"msg":"Hi all, I built latest images (armv7l) for both von-network and aca-py in beaglebone black, so if anybody wants to use the latest versions, I'm posting the links over here so other people don't have to spend time and effor to build those images. \nVon-network - https://hub.docker.com/repository/docker/prakharsr/von-image-armv7l ( von-image:py36-1.15-0 armhf)\nAca-py - https://hub.docker.com/repository/docker/prakharsr/aca-py-armv7l (aries-cloudagent:latest_0.5.6 py36-1.15-0 armhf)","username":"prakharsr","ts":"2020-12-01T07:57:39.161Z"}
{"msg":"Hi all, I built latest images (armv7l) for both von-network and aca-py in beaglebone black, so if anybody wants to use the latest versions, I'm posting the links over here so other people don't have to spend time and effor to build those images. \nVon-network - https://hub.docker.com/repository/docker/prakharsr/von-image-armv7l ( 'von-image:py36-1.15-0 armhf' )\nAca-py - https://hub.docker.com/repository/docker/prakharsr/aca-py-armv7l (aries-cloudagent:latest_0.5.6 py36-1.15-0 armhf)","username":"prakharsr","ts":"2020-12-01T07:57:39.161Z"}
{"msg":"Hi all, I built latest images (armv7l) for both von-network and aca-py in beaglebone black, so if anybody wants to use the latest versions, I'm posting the links over here so other people don't have to spend time and effor to build those images. \nVon-network - https://hub.docker.com/repository/docker/prakharsr/von-image-armv7l (von-image:py36-1.15-0 armhf)\nAca-py - https://hub.docker.com/repository/docker/prakharsr/aca-py-armv7l (aries-cloudagent:latest_0.5.6 py36-1.15-0 armhf)","username":"prakharsr","ts":"2020-12-01T07:57:39.161Z"}
{"msg":"Thanks @prakharsr","username":"WadeBarnes","ts":"2020-12-01T15:59:57.667Z"}
{"msg":"Has joined the channel.","username":"chakshujain","ts":"2020-12-08T05:03:52.341Z","type":"uj"}
{"msg":"Hi all, has anyone here considered implementing the bare minimum for DID and DIDComm on an ESP8266 or ESP32 device? It would be interesting to see how much we can squeeze out of those, as a prototype for IoT","username":"arner","ts":"2020-12-23T14:02:37.940Z"}
{"msg":"Has joined the channel.","username":"vosrey","ts":"2021-01-03T03:16:46.083Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ajayjadhav","ts":"2021-01-21T12:08:43.882Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sairanjit","ts":"2021-03-05T06:02:01.707Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rpobulic","ts":"2021-03-07T05:15:39.688Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jabuaasnez","ts":"2021-03-28T14:01:25.537Z","type":"uj"}
{"msg":"Has joined the channel.","username":"deas","ts":"2021-07-01T14:11:04.175Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mateussousa","ts":"2021-07-01T14:11:12.980Z","type":"uj"}
{"msg":"Has joined the channel.","username":"l-wegner","ts":"2021-08-05T07:27:54.172Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ManojTaleka","ts":"2021-09-02T04:43:14.466Z","type":"uj"}
{"msg":"I am able to build libindy.so file and run the ACA-Py agents on the Raspberry Pi 3 with Raspbian 32-bit OS. Use the following link to build libindyl library https://wiki.hyperledger.org/display/INTERN/Collaboration%3A+Raspberry+Pi+Indy+Agent.","username":"ManojTaleka","ts":"2021-09-02T04:49:47.762Z"}
{"msg":"Then add the path of libindy library to ~/.bashrc file. export LD_LIBRARY_PATH= $LD_LIBRARY_PATH:path to your lib file","username":"ManojTaleka","ts":"2021-09-02T04:51:40.288Z"}
{"msg":"Create a Python3 Virtual environment```\ncd ~```\nmkdir python_virtual_env```\ncd python_virtuak_env```\npython3 -m venv hlenv```\nsource hlenv/bin/activate```\n\n``` \n``` \n``` \n``` \n``` \n```","username":"ManojTaleka","ts":"2021-09-02T04:54:05.620Z"}
{"msg":"Install Aries Cloud Agent```\ncd aries-cloudagent-python```\npip install aris-cloudagent\n``` \n```","username":"ManojTaleka","ts":"2021-09-02T04:58:46.091Z"}
{"msg":"Running Alice and Faber Demo:```\npip3 install prompt-toolkit pygments python3-indy```[Install it to python virtual environment]\n\n``` \n``` \n```\n```","username":"ManojTaleka","ts":"2021-09-02T04:59:58.299Z"}
{"msg":"pip3 install -r demo/requirements.txt","username":"ManojTaleka","ts":"2021-09-02T05:00:26.086Z"}
{"msg":"Run Alice and Faber Agents```\nLEDGER_URL=\"http://172.16,58.67:9000\" python -m runners.alice -p 8030```\nLEDGER_URL=\"http://172.16,58.67:9000\" python -m runners.faber -p 802```\nNote : I am running the Von-network on the desktop not on the Pi 3\n``` 0``\n``` \n```","username":"ManojTaleka","ts":"2021-09-02T05:05:07.419Z"}
{"msg":"```\nLEDGER_URL=\"http://172.16,58.67:9000\" python -m runners.faber -p 8020\n```","username":"ManojTaleka","ts":"2021-09-02T05:05:40.319Z"}
{"msg":"Run Alice and Faber Agents```\nLEDGER_URL=\"http://172.16.58.67:9000\" python -m runners.alice -p 8030```\nLEDGER_URL=\"http://172.16.58.67:9000\" python -m runners.faber -p 8020``````\nNote : Kindly run your von-network on desktop/workstation not on Pi 3\n``` \n``` \n```\n```","username":"ManojTaleka","ts":"2021-09-02T05:08:23.379Z"}
{"msg":"Following changes need to be incorporated in Agent.py file of Raspberry Pi 3 if you are exchanging the credentials and messages between desktop and Pi agent```\nimport socket```\nip_address = ' '```\ns=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)```\ns.connect(\"8.8.8.8\",80)```\nip_address = s.getsockname()[0]```\ns.close()```\nchange self.admin_url = f \"http://{ip_address}:{admin_port}\"```\nself.endpoint= f \"http://{ip_address}:{http_port}\"\n``` \n``` \n``` \n``` \n``` \n``` \n``` \n```","username":"ManojTaleka","ts":"2021-09-02T05:13:44.866Z"}
{"msg":"Nice work -- very cool.  @WadeBarnes -- FYI.","username":"swcurran","ts":"2021-09-02T23:26:55.328Z"}
{"msg":"Nice work -- very cool.  @WadeBarnes -- FYI. ^^^","username":"swcurran","ts":"2021-09-02T23:26:55.328Z"}
{"msg":"I let the IoT working group know about this on the call yesterday.","username":"WadeBarnes","ts":"2021-09-03T12:56:37.970Z"}
{"msg":"@mxs1491","username":"WadeBarnes","ts":"2021-09-03T12:56:47.052Z"}
{"msg":"Has joined the channel.","username":"matejstern","ts":"2021-12-07T13:53:30.266Z","type":"uj"}
{"msg":"","username":"rjones","ts":"2022-03-22T19:54:10.915Z","type":"room_changed_announcement"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:22:41.289Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:22:41.298Z","type":"room_changed_description"}
