{"msg":"troyronda","username":"rjones","ts":"2019-09-18T14:36:21.214Z","type":"subscription-role-added"}
{"msg":"@all all yours!","username":"rjones","ts":"2019-09-18T14:36:29.074Z"}
{"msg":"Thanks @rjones :)","username":"troyronda","ts":"2019-09-18T14:36:51.472Z"}
{"msg":"Has joined the channel.","username":"Baha-sk","ts":"2019-09-18T14:38:01.492Z","type":"uj"}
{"msg":"Has joined the channel.","username":"filip.burlacu","ts":"2019-09-18T14:39:08.509Z","type":"uj"}
{"msg":"Has joined the channel.","username":"firas.qutishat","ts":"2019-09-18T14:39:23.024Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rolsonquadras","ts":"2019-09-18T14:40:18.657Z","type":"uj"}
{"msg":":thumbsup: ]","username":"Baha-sk","ts":"2019-09-18T14:40:35.367Z"}
{"msg":":thumbsup: ","username":"Baha-sk","ts":"2019-09-18T14:40:35.367Z"}
{"msg":":thumbsup: ","username":"filip.burlacu","ts":"2019-09-18T14:41:10.704Z"}
{"msg":"Has joined the channel.","username":"sandrav","ts":"2019-09-18T14:41:14.662Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bstasyszyn","ts":"2019-09-18T14:41:30.192Z","type":"uj"}
{"msg":":clap: ","username":"rolsonquadras","ts":"2019-09-18T14:41:40.460Z"}
{"msg":":thumbsup: ","username":"firas.qutishat","ts":"2019-09-18T14:41:42.543Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-09-18T14:41:55.115Z","type":"ul"}
{"msg":":thumbsup: ","username":"sandrav","ts":"2019-09-18T14:42:42.486Z"}
{"msg":"Has joined the channel.","username":"smithbk","ts":"2019-09-18T14:50:32.347Z","type":"uj"}
{"msg":"Has joined the channel.","username":"soluchok","ts":"2019-09-18T14:53:29.395Z","type":"uj"}
{"msg":":thumbsup: ","username":"soluchok","ts":"2019-09-18T14:54:11.316Z"}
{"msg":"@troyronda @firas.qutishat https://github.com/hyperledger/aries-framework-go/issues/276 -- can you please assign this to me and move to in-progress in the dev board?","username":"rolsonquadras","ts":"2019-09-18T15:24:28.159Z"}
{"msg":"@rolsonquadras done","username":"troyronda","ts":"2019-09-18T15:57:22.619Z"}
{"msg":"Has joined the channel.","username":"george.aristy","ts":"2019-09-18T16:05:07.785Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sudeshrshetty","ts":"2019-09-19T03:24:32.325Z","type":"uj"}
{"msg":"@troyronda @firas.qutishat  created https://github.com/hyperledger/aries-framework-go/issues/283\nplease assign it to me, add it to milestone and to framework dev board (in progress)","username":"sudeshrshetty","ts":"2019-09-19T03:24:32.521Z"}
{"msg":"Has joined the channel.","username":"kdimak","ts":"2019-09-19T13:23:37.896Z","type":"uj"}
{"msg":"@soluchok epics such as #269 need to be broken into smaller tasks, a github issue per task","username":"george.aristy","ts":"2019-09-19T13:38:53.849Z"}
{"msg":"Those tasks are then added to the Framework Development board where everyone can then see their progress","username":"george.aristy","ts":"2019-09-19T13:39:26.699Z"}
{"msg":"ok","username":"soluchok","ts":"2019-09-19T13:39:59.101Z"}
{"msg":"https://github.com/hyperledger/aries-framework-go/pull/286","username":"soluchok","ts":"2019-09-19T13:41:59.251Z"}
{"msg":"Has joined the channel.","username":"jonathanreynolds","ts":"2019-09-19T17:19:11.565Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jadhavajay","ts":"2019-09-19T18:44:07.273Z","type":"uj"}
{"msg":"Reminder - weekly planning meeting starts in 40 mins. https://wiki.hyperledger.org/display/ARIES/Framework+Go+Meetings","username":"troyronda","ts":"2019-09-24T13:50:01.809Z"}
{"msg":"Today's agenda: https://wiki.hyperledger.org/display/ARIES/2019-09-24+Framework+Go+Weekly+Planning","username":"troyronda","ts":"2019-09-24T13:51:25.858Z"}
{"msg":"Has joined the channel.","username":"ajayjadhav","ts":"2019-09-24T18:01:02.318Z","type":"uj"}
{"msg":"@channel need one more review on https://github.com/hyperledger/aries-framework-go/pull/335","username":"george.aristy","ts":"2019-09-25T17:38:34.933Z"}
{"msg":"Has joined the channel.","username":"KellyCooper","ts":"2019-09-29T18:11:33.767Z","type":"uj"}
{"msg":"Reminder weekly planning meeting tomorrow. Please update the agenda at https://wiki.hyperledger.org/display/ARIES/2019-10-01+Framework+Go+Weekly+Planning","username":"troyronda","ts":"2019-09-30T15:33:30.909Z"}
{"msg":"Reminder: weekly planning meeting starts in ~50 mins.","username":"troyronda","ts":"2019-10-01T13:38:13.221Z"}
{"msg":"Has joined the channel.","username":"RodrigoMedeiros","ts":"2019-10-01T16:22:36.311Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vsadriano","ts":"2019-10-07T18:16:40.136Z","type":"uj"}
{"msg":"Reminder: weekly planning starting now.","username":"troyronda","ts":"2019-10-08T14:31:44.666Z"}
{"msg":"Reminder: weekly planning starting now (https://wiki.hyperledger.org/display/ARIES/Framework+Go+Meetings).","username":"troyronda","ts":"2019-10-08T14:31:44.666Z"}
{"msg":"https://wiki.hyperledger.org/display/ARIES/2019-10-08+Framework+Go+Weekly+Planning","username":"troyronda","ts":"2019-10-08T14:31:53.037Z"}
{"msg":"FYI design diagrams for introduce protocol in go framework: https://wiki.hyperledger.org/display/ARIES/Introduce+Protocol+Flow+-+Framework+Go","username":"troyronda","ts":"2019-10-09T14:15:40.682Z"}
{"msg":"Has joined the channel.","username":"yerlibilgin","ts":"2019-10-11T12:31:53.504Z","type":"uj"}
{"msg":"Reminder: weekly planning starting in ~30mins. https://wiki.hyperledger.org/display/ARIES/2019-10-22+Framework+Go+Weekly+Planning","username":"troyronda","ts":"2019-10-22T13:59:57.993Z"}
{"msg":"Has joined the channel.","username":"Audrius","ts":"2019-10-24T10:41:25.468Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ankita.p","ts":"2019-11-01T06:20:46.892Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cstoecker","ts":"2019-11-01T15:06:11.601Z","type":"uj"}
{"msg":"Web Assembly epic has been posted: https://github.com/hyperledger/aries-framework-go/issues/661","username":"troyronda","ts":"2019-11-01T15:38:43.186Z"}
{"msg":"@troyronda @firas.qutishat  @george.aristy PR for review - https://github.com/hyperledger/aries-framework-go/pull/662","username":"rolsonquadras","ts":"2019-11-01T15:39:10.013Z"}
{"msg":"Hi team,\nI am trying to run `make run-openapi-demo` on the latest cloned code.. however, I am getting following error. Any guess what could be the issue?\n\n`Successfully built dbc82911664e\nSuccessfully tagged aries-framework-go/agent:latest\nGenerate demo agent controller API specifications using Open API\n2019/11/02 11:25:52 args[0] = build/rest/openapi/spec/openAPI.yml\n2019/11/02 11:25:52 args[1:] = [test/bdd/fixtures/demo/openapi/specs/localhost:8082.yml]\n2019/11/02 11:25:56 args[0] = build/rest/openapi/spec/openAPI.yml\n2019/11/02 11:25:56 args[1:] = [test/bdd/fixtures/demo/openapi/specs/localhost:9082.yml]\nStarting demo agent containers\nStarting agent demo containers\nPulling alice.webhook.example.com (aries-framework-go/sample-webhook:latest)...\nERROR: pull access denied for aries-framework-go/sample-webhook, repository does not exist or may require 'docker login'\nMakefile:82: recipe for target 'run-openapi-demo' failed\nmake: *** [run-openapi-demo] Error 1\n`","username":"ajayjadhav","ts":"2019-11-02T11:32:22.371Z"}
{"msg":"Hi team,\nI am trying to run `make run-openapi-demo` on the latest cloned code.. however, I am getting following error. Any guess what could be the issue?\n\n`Successfully built dbc82911664e\nSuccessfully tagged aries-framework-go/agent:latest\nGenerate demo agent controller API specifications using Open API\n2019/11/02 11:25:52 args[0] = build/rest/openapi/spec/openAPI.yml\n2019/11/02 11:25:52 args[1:] = [test/bdd/fixtures/demo/openapi/specs/localhost:8082.yml]\n2019/11/02 11:25:56 args[0] = build/rest/openapi/spec/openAPI.yml\n2019/11/02 11:25:56 args[1:] = [test/bdd/fixtures/demo/openapi/specs/localhost:9082.yml]\nStarting demo agent containers\nStarting agent demo containers\nPulling alice.webhook.example.com (aries-framework-go/sample-webhook:latest)...\nERROR: pull access denied for aries-framework-go/sample-webhook, repository does not exist or may require 'docker login'\nMakefile:82: recipe for target 'run-openapi-demo' failed\nmake: *** [run-openapi-demo] Error 1`","username":"ajayjadhav","ts":"2019-11-02T11:32:22.371Z"}
{"msg":"@ajayjadhav @sudeshrshetty it looks like building the web hook demo docker image wasnâ€™t included as a dependency of that make target.","username":"troyronda","ts":"2019-11-02T12:55:18.467Z"}
{"msg":"make sample-webhook-docker","username":"troyronda","ts":"2019-11-02T12:55:52.722Z"}
{"msg":"@ajayjadhav I pushed a fix to the Makefile to include this dependency.","username":"troyronda","ts":"2019-11-02T18:31:01.835Z"}
{"msg":"okay, @troyronda , I will pull the latest and test","username":"ajayjadhav","ts":"2019-11-02T18:31:32.443Z"}
{"msg":"Has joined the channel.","username":"ashlinSajan","ts":"2019-11-04T05:28:15.211Z","type":"uj"}
{"msg":"Hi team \nwhile running the command \"make all\" I got the following error \"pkg/didcomm/protocol/didexchange/service_test.go:1196:3: shadow: declaration of \"state\" shadows declaration at line 48 (govet)\nstate, errState := svc.nextState(RequestMsgType, generateRandomID())\"","username":"ashlinSajan","ts":"2019-11-05T05:12:55.103Z"}
{"msg":"@ashlinSajan thanks for letting us know - pushed a fix.","username":"troyronda","ts":"2019-11-05T12:10:18.875Z"}
{"msg":"Weekly planning meeting for aries-framework-go starts in ~10 mins.","username":"troyronda","ts":"2019-11-05T15:22:07.308Z"}
{"msg":"Weekly planning meeting for aries-framework-go starts in ~10 mins (https://wiki.hyperledger.org/display/ARIES/Framework+Go+Meetings).","username":"troyronda","ts":"2019-11-05T15:22:07.308Z"}
{"msg":"https://wiki.hyperledger.org/display/ARIES/2019-11-05+Framework+Go+Weekly+Planning","username":"troyronda","ts":"2019-11-05T15:23:50.479Z"}
{"msg":"Main topics: Closing down 0.1.0 and planning for 0.1.1","username":"troyronda","ts":"2019-11-05T15:28:00.289Z"}
{"msg":"Has joined the channel.","username":"HLFPOC","ts":"2019-11-05T18:15:03.231Z","type":"uj"}
{"msg":"aries-framework-go 0.1.0 draft release notes are posted: https://github.com/hyperledger/aries-framework-go/issues/720","username":"troyronda","ts":"2019-11-07T17:56:24.819Z"}
{"msg":"Issues remaining in the 0.1.0 release: https://github.com/hyperledger/aries-framework-go/milestone/1","username":"troyronda","ts":"2019-11-08T17:31:39.983Z"}
{"msg":"(cross-post) We are now getting started on 0.1.1 of aries-framework-go. It would be wonderful if there are new people who are interested in participating in this next cycle.","username":"troyronda","ts":"2019-11-14T15:17:14.865Z"}
{"msg":"https://chat.hyperledger.org/channel/aries?msg=omaecq7oNWLqzwHQ8","username":"troyronda","ts":"2019-11-14T15:17:29.477Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries?msg=omaecq7oNWLqzwHQ8","url":"https://chat.hyperledger.org/channel/aries?msg=omaecq7oNWLqzwHQ8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"wip-abramson","ts":"2019-11-14T15:32:42.752Z","type":"uj"}
{"msg":"Has joined the channel.","username":"entidad_jorge","ts":"2019-11-15T06:30:36.830Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Identitywoman","ts":"2019-11-25T05:54:13.473Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AvikHazra-klizos","ts":"2019-11-26T06:51:49.748Z","type":"uj"}
{"msg":"Hello...\nI create two client, bob and alice. then use CreateInvitation, HandleInvitation and GetConnection for create invitation from bob, handle invitation from alice and get connection from alice. After that I want to check the connection record from client alice. I'm using\n\ndidexchangeAlice.QueryConnections()\n\n\n\nthat showing the following, can anyone help me out ? what parameter is required, and how to use that\n\nnot enough arguments in call to didexchangeAlice.QueryConnections\nhave ()\nwant (*\"github.com/hyperledger/aries-framework-go/pkg/client/didexchange\".QueryConnectionsParams)","username":"AvikHazra-klizos","ts":"2019-11-26T06:52:04.113Z"}
{"msg":"Has joined the channel.","username":"anchit","ts":"2019-11-26T07:26:40.575Z","type":"uj"}
{"msg":"Has joined the channel.","username":"huxd","ts":"2019-11-26T08:59:55.415Z","type":"uj"}
{"msg":"@AvikHazra-klizos  try calling `didexchangeAlice.QueryConnections(&didexchangeAlice.QueryConnectionsParams{})`","username":"sudeshrshetty","ts":"2019-11-26T15:32:24.338Z"}
{"msg":"You need to pass search parameters, right now we support filtering based on `state`, other search criteria will be available soon.","username":"sudeshrshetty","ts":"2019-11-26T15:33:48.324Z"}
{"msg":"Has joined the channel.","username":"priyashankar","ts":"2019-11-27T09:59:09.422Z","type":"uj"}
{"msg":"What is the difference between introduce and didexchange packages?","username":"priyashankar","ts":"2019-11-27T09:59:56.911Z"}
{"msg":"What is the difference between *introduce *and *didexchange *packages?","username":"priyashankar","ts":"2019-11-27T09:59:56.911Z"}
{"msg":"On creating a connection between two Aries clients, I get *\"null\"* on querying *connection.ConnectionRecord.State*. Can anybody tell me why?","username":"priyashankar","ts":"2019-11-27T10:30:07.237Z"}
{"msg":"@sudeshrshetty On creating a connection between two Aries clients, I get *\"null\"* on querying *connection.ConnectionRecord.State*. Can you help me out on this one?","username":"priyashankar","ts":"2019-11-27T10:30:07.237Z"}
{"msg":"@priyashankar Those packages implement 2 separate Aries RFCs : didexchange - https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange; introduce - https://github.com/hyperledger/aries-rfcs/tree/master/features/0028-introduce","username":"rolsonquadras","ts":"2019-11-27T14:51:52.218Z"}
{"msg":"@priyashankar also worth notice: the `introduce` package is a work in progress and is not quite ready for use yet. It's in scope for our current milestone.","username":"george.aristy","ts":"2019-11-27T20:39:28.374Z"}
{"msg":"@rolsonquadras @george.aristy Thank you.","username":"priyashankar","ts":"2019-11-28T05:34:01.038Z"}
{"msg":"I know it's a lot to ask for, but when can we expect a getting-started developer guide for Aries just like Indy?","username":"priyashankar","ts":"2019-11-28T07:08:57.828Z"}
{"msg":"I know it's a lot to ask for, but when can we expect a getting-started developer guide for Aries just like Indy? Although, I must say that the Go Docs are so far impressive, but it requires a lot of time to decode and build a prototype on top of that.","username":"priyashankar","ts":"2019-11-28T07:08:57.828Z"}
{"msg":"*\"Bob\"* sends an *invitation* to *\"Alice\"* using *\"CreateInvitation\"*.  *\"Alice\"* sends *\"HandleConnection\"* & *\"GetConnection\"* requests. Upon querying **(connection).ConnectionRecord.State*, I get *\"Invited\"*. How can *Alice* accept this inviation using *\"AcceptInvitation\"*?","username":"priyashankar","ts":"2019-11-28T11:56:12.131Z"}
{"msg":"What is the difference between creating two clients using the same context and using different contexts for both?","username":"priyashankar","ts":"2019-11-29T08:47:40.218Z"}
{"msg":"@priyashankar using same context for two clients means sharing the context between the two clients.. for instance if your context has a storage reference, the underlying storage will be used by both clients... it also depends on what kind of info you have in the context... but as a rule of thumb, don't use the same context for two clients representing two agents and they should not share contexts","username":"Baha-sk","ts":"2019-11-29T20:53:48.864Z"}
{"msg":"@Baha-sk Thank you.","username":"priyashankar","ts":"2019-12-02T03:58:37.940Z"}
{"msg":"Has joined the channel.","username":"abhishekKumar1","ts":"2019-12-05T07:52:49.374Z","type":"uj"}
{"msg":"Sequence diagram for mediated DID Exchange: https://wiki.hyperledger.org/pages/viewpage.action?pageId=24778726","username":"troyronda","ts":"2019-12-11T17:09:15.949Z"}
{"msg":"Has joined the channel.","username":"jethrojones","ts":"2019-12-12T23:12:04.592Z","type":"uj"}
{"msg":"Has joined the channel.","username":"redongjun","ts":"2019-12-18T13:30:29.130Z","type":"uj"}
{"msg":"Has joined the channel.","username":"harrywright","ts":"2019-12-18T17:47:47.592Z","type":"uj"}
{"msg":"Has joined the channel.","username":"akshay.sood","ts":"2019-12-19T17:32:36.698Z","type":"uj"}
{"msg":"Hey Experts,\n\nCan anyone share the samples of Aries that can be used to learn the implementation of Aries for a POC? I am a newbie in Indy and Aries","username":"akshay.sood","ts":"2019-12-19T17:33:59.653Z"}
{"msg":"Has joined the channel.","username":"tommyjay","ts":"2019-12-21T15:17:23.618Z","type":"uj"}
{"msg":"Introduce protocol now running in BDD tests: https://github.com/hyperledger/aries-framework-go/runs/361293102#step:4:684","username":"troyronda","ts":"2019-12-23T17:21:47.703Z"}
{"msg":"Has joined the channel.","username":"daisuke1983","ts":"2020-01-06T05:09:53.943Z","type":"uj"}
{"msg":"Aries Framework Go weekly planning starting: https://wiki.hyperledger.org/display/ARIES/Framework+Go+Meetings","username":"troyronda","ts":"2020-01-14T15:32:26.869Z"}
{"msg":"https://wiki.hyperledger.org/display/ARIES/2020-01-14+Framework+Go+Weekly+Planning","username":"troyronda","ts":"2020-01-14T15:35:20.319Z"}
{"msg":"Weekly planning notes: https://wiki.hyperledger.org/display/ARIES/2020-01-21+Framework+Go+Weekly+Planning","username":"troyronda","ts":"2020-01-21T17:58:26.340Z"}
{"msg":"Has joined the channel.","username":"domwoe","ts":"2020-01-22T20:08:26.845Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SuperSeiyan","ts":"2020-01-24T05:30:28.211Z","type":"uj"}
{"msg":"Draft release notes (planning to release 0.1.1 today): https://github.com/hyperledger/aries-framework-go/issues/1136","username":"troyronda","ts":"2020-01-29T16:56:57.861Z"}
{"msg":"aries-framework-go v0.1.1 released (https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.1)","username":"troyronda","ts":"2020-01-29T20:12:41.064Z"}
{"msg":"Has joined the channel.","username":"gnarula","ts":"2020-02-03T12:53:40.980Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sheldon.regular","ts":"2020-02-03T18:03:23.721Z","type":"uj"}
{"msg":"Hi Everyone. Was made aware today of some BDD definitions in aries-framework-go, https://github.com/hyperledger/aries-framework-go/tree/master/test/bdd/features\nGood stuff, pleased to see it. I am in the initial stages of expanding the test harness with BDD/Gherkin for the aries-cloudagent-python AIP 1.0.0 protocols implemented. It may be a good idea for us to collaborate a little. It would be nice to have a common standard set of tests for the protocols between projects. Maybe even standards on tags used, references, feature definitions, etc in the Feature files. \nQuestion: I notice some of the Gherkin is not complete, ie. doesn't include When or Then or both. Is there a reason for this or was it just a quick way to use BDD to drive the tests not caring about format? \nThanks and nice to meet you guys. ","username":"sheldon.regular","ts":"2020-02-06T20:37:55.678Z"}
{"msg":"@sheldon.regular nice to meet you too, looks we didn't follow BDD/Gherkin format strictly in some feature files. We are in the process of correcting it. Thanks for noticing it and bringing it to our attention.","username":"sudeshrshetty","ts":"2020-02-06T21:39:53.149Z"}
{"msg":"@sudeshrshetty no problem. My primary reason to connect here was not to point out any lacking Gherkin, but more to make you aware that I'm here, doing similar things, and would like to collaborate in some way, if only at the feature file level. I'll be checking back and referencing your BDD when I get further along. ","username":"sheldon.regular","ts":"2020-02-06T21:56:03.128Z"}
{"msg":"@sheldon.regular awesome, sound great!","username":"troyronda","ts":"2020-02-06T23:36:12.480Z"}
{"msg":"@sudeshrshetty updated the BDD files and it's merged: https://github.com/hyperledger/aries-framework-go/pull/1199","username":"troyronda","ts":"2020-02-06T23:36:55.864Z"}
{"msg":"also FYI: @sudeshrshetty updated the BDD files and it's merged: https://github.com/hyperledger/aries-framework-go/pull/1199","username":"troyronda","ts":"2020-02-06T23:36:55.864Z"}
{"msg":"Has joined the channel.","username":"Vritra","ts":"2020-02-11T08:35:27.435Z","type":"uj"}
{"msg":"Has joined the channel.","username":"NikhilPrakash","ts":"2020-02-12T00:45:57.013Z","type":"uj"}
{"msg":"Hi all - just a reminder that we will be presenting and demoing aries framework go in the morning call.","username":"troyronda","ts":"2020-02-12T13:34:08.060Z"}
{"msg":"Has joined the channel.","username":"scottz","ts":"2020-02-12T16:02:18.001Z","type":"uj"}
{"msg":"Has joined the channel.","username":"CyrilLeung","ts":"2020-02-18T07:37:55.391Z","type":"uj"}
{"msg":"Hi everyone, I tried aca-py with von-network, play around with aries-framework-dotnet example.I would like to understand more how aries-framework-go run as a DIDComm Router/Mediator. Since I am not understand how to setup them.  Any runnable sample I can  go for a further study ? Thank you.","username":"CyrilLeung","ts":"2020-02-18T07:37:58.045Z"}
{"msg":"@CyrilLeung Awesome. @rolsonquadras has now posted instructions on how to perform DID Exchange via Routers using the REST API: https://github.com/hyperledger/aries-framework-go/blob/master/docs/rest/openapi_demo.md#steps-for-didexchange-through-didcomm-routers","username":"troyronda","ts":"2020-02-19T21:23:40.767Z"}
{"msg":"(you can use the OpenAPI/Swagger docker-compose environment: https://github.com/hyperledger/aries-framework-go/blob/master/docs/rest/openapi_demo.md#setup)","username":"troyronda","ts":"2020-02-19T21:25:26.445Z"}
{"msg":"(using the OpenAPI/Swagger docker-compose environment: https://github.com/hyperledger/aries-framework-go/blob/master/docs/rest/openapi_demo.md#setup)","username":"troyronda","ts":"2020-02-19T21:25:26.445Z"}
{"msg":"Thank you very much @troyronda  I will give a try on it right now :pray: ","username":"CyrilLeung","ts":"2020-02-20T03:43:22.209Z"}
{"msg":"But I come across building error in sidetree during \"make run-openapi-demo\"\n\nPulling sidetree (docker.pkg.github.com/trustbloc/sidetree-mock/sidetree:amd64-0.1.2-snapshot-e7626cd)...\nERROR: Get https://docker.pkg.github.com/v2/trustbloc/sidetree-mock/sidetree/manifests/amd64-0.1.2-snapshot-e7626cd: no basic auth credentials\nmake: *** [Makefile:84: run-openapi-demo] Error 1\n","username":"CyrilLeung","ts":"2020-02-20T04:04:32.909Z"}
{"msg":"Finally, solved by generated api token with read write access and use it in \"docker login\" command\nAnyone has same issue can refer to this \nhttps://help.github.com/en/packages/using-github-packages-with-your-projects-ecosystem/configuring-docker-for-use-with-github-packages","username":"CyrilLeung","ts":"2020-02-20T09:05:26.831Z"}
{"msg":"Thanks @CyrilLeung - we should update the instructions with that information.","username":"troyronda","ts":"2020-02-20T15:10:57.657Z"}
{"msg":"Thanks @CyrilLeung - we should update the instructions with that information. Note that you can use a read API token if you are only fetching docker images.","username":"troyronda","ts":"2020-02-20T15:10:57.657Z"}
{"msg":"Thank you @CyrilLeung for pointing out the issue with pulling docker images from GitHub registry. We have added this to the pre-requisites for running the demo - https://github.com/hyperledger/aries-framework-go/blob/master/docs/test/build.md#prerequisites-for-running-tests-and-demos.","username":"rolsonquadras","ts":"2020-02-20T18:32:26.021Z"}
{"msg":"I had go through  \"Run OpenAPI demo\", I can run  the steps in  \"Steps for DIDExchange\" and \"Steps for DIDExchange through DIDComm Routers\" successfully and make my concept in using router agent much clear. \n\nBut in \"Steps for custom message handling\" after register-service  in a alice agent, and I move on to bob agent to send message in raise error \n\n{\"code\":3003,\"message\":\"failed to send msg using outbound transport: received unsuccessful POST HTTP status from agent [http://alice.aries.example.com:8081, 500 Internal Server Error]\"}\ns\nIs anything I setup incorrectly ? ","username":"CyrilLeung","ts":"2020-02-21T02:47:38.026Z"}
{"msg":"@CyrilLeung there was a typo in sample register service request, fixed in --> https://github.com/hyperledger/aries-framework-go/pull/1318","username":"sudeshrshetty","ts":"2020-02-21T21:24:18.120Z"}
{"msg":"Thank you very much for the update, I can test \"register service request\" successfully. But I have a question, when I check out the \"checktopics\" in webhook, the return record like the following, that is no content sent by BOB, is it normal ? or feature is under development ?\n\n{\n\"connection_id\": \"a6bc4870-dc5e-42f6-933e-8554d53447c7\",\n\"state\": \"responded\",\n\"myDid\": \"did:peer:1zQmV1PjfWXCYh8392mGEskWeLcbpc3ErNVuVhyonEQTZo64\",\n\"theirDid\": \"did:peer:1zQmXR5z18qT4EPgja1BzU1Uex8F7kmVgAKki2JmmqrUBqsG\",\n\"theirLabel\": \"bob-agent\",\n\"theirRole\": \"bob-agent\",\n\"inbound_connection_id\": \"\",\n\"initiator\": \"\",\n\"invitation_key\": \"\",\n\"request_id\": \"\",\n\"routing_state\": \"\",\n\"accept\": \"\",\n\"error_msg\": \"\",\n\"invitation_mode\": \"\",\n\"alias\": \"\"\n}","username":"CyrilLeung","ts":"2020-02-24T03:29:19.089Z"}
{"msg":"Sorry my mistake, I run the \"checktopics\" again and I found the correct message\n\n{\n\"message\": {\n\"@id\": \"2d071d1c-a47d-40e5-a0b7-f8234231ba9e\",\n\"@type\": \"https://didcomm.org/generic/1.0/message\",\n\"_internal_metadata\": {},\n\"message\": \"Hey, meet me today at 4PM\",\n\"sender\": \"Bob\",\n\"~purpose\": [\n\"meeting\"\n]\n},\n\"mydid\": \"did:peer:1zQmNvgJym6z3rfrnya6ZMy6JKKTmT8YmS4KsjajtT9KG3jf\",\n\"theirdid\": \"did:peer:1zQmXvGNCt7RTwnyLTZjGayd3EfdG8sT3rhi6m1HSTbcZaD7\"\n}","username":"CyrilLeung","ts":"2020-02-24T04:01:21.233Z"}
{"msg":"Aries Framework Go 0.1.2 released. Notes: https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.2","username":"troyronda","ts":"2020-02-26T23:21:59.697Z"}
{"msg":"I also found the problem pulling sidetree, like @CyrilLeung . Funny that the open-api demo worked fine 3 weeks ago, but not after pulling latest code today. It is not clear to me how to get past this by using the Actions and theGITHUB_TOKEN instead.  @rolsonquadras  Is there a way we can do that? Or would that require a change in the Makefile or other framework setup? Is it recommended just to create a personal token?","username":"scottz","ts":"2020-03-02T18:17:53.888Z"}
{"msg":"Any ideas what am I missing?\nI created a new personal token with basic permissions of only:    dockerimagesgithub â€” read:packages \nand successfully executed:  docker login -u scottz64 -p dockerimagesgithub docker.pkg.github.com\nHowever,  \"make run-openapi-demo\" still fails.\nI edited and updated the token to add write:packages and all repo permissions too, did another docker login and tried the demo again, but no luck. I did not regenerate the token; just updated it.\n```Pulling sidetree (docker.pkg.github.com/trustbloc/sidetree-mock/sidetree:amd64-0.1.2)...\nERROR: unauthorized: Your request could not be authenticated by the GitHub Packages service. Please ensure your access token is valid and has the appropriate scopes configured.```","username":"scottz","ts":"2020-03-02T20:04:06.630Z"}
{"msg":"Hi @scottz . Using personal token would work for me locally. The error says not able to read from the github packages due to authentication issues. Can you try to pull the docker image directly just to rule out issue with aries-framework-go?  \"docker pull docker.pkg.github.com/trustbloc/sidetree-mock/sidetree:amd64-0.1.2\"","username":"rolsonquadras","ts":"2020-03-02T20:20:01.826Z"}
{"msg":"\"docker login -u scottz64 -p dockerimagesgithub docker.pkg.github.com\"  --> looks like you used token name rather than the token value.","username":"rolsonquadras","ts":"2020-03-02T20:22:16.376Z"}
{"msg":"https://help.github.com/en/packages/using-github-packages-with-your-projects-ecosystem/configuring-docker-for-use-with-github-packages#authenticating-to-github-packages --> docker login -u USERNAME -p TOKEN docker.pkg.github.com","username":"rolsonquadras","ts":"2020-03-02T20:22:56.680Z"}
{"msg":"hmmm. docker pull on command line gave same error. OK, I tried login again with token value; yes I had used the tokenname instead! That was the problem. It works now. Just needed another pair of eyes on it. Thanks!","username":"scottz","ts":"2020-03-02T20:27:17.422Z"}
{"msg":"@scottz no worries.","username":"rolsonquadras","ts":"2020-03-02T20:41:39.035Z"}
{"msg":"Has joined the channel.","username":"jayapalreddy","ts":"2020-03-03T02:06:55.559Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vladyslavmunin","ts":"2020-03-04T10:59:14.813Z","type":"uj"}
{"msg":"Hello everyone!  I want to use hypeledger-aries-go framework to connect to the von-network and be able to register and resolve  DID of users there. \nWhere I can find a real examples of this. I've already tried to \"play with code\", but don't have a right understanding of process. Can someone help? ","username":"vladyslavmunin","ts":"2020-03-04T10:59:16.284Z"}
{"msg":"@vladyslavmunin aries-framework-go has not yet been integrated to indy / von-network, so unfortunately this will not currently work.","username":"troyronda","ts":"2020-03-04T14:50:35.177Z"}
{"msg":"@troyronda thanks for the answer.","username":"vladyslavmunin","ts":"2020-03-04T14:51:18.241Z"}
{"msg":"@troyronda  but if I'm not mistaken Indy doesn't have golang sdk for interactions with node. What could be a best approach to resolve Indy Identity in existing golang backed that is run in production. Use separate microservice for this?","username":"vladyslavmunin","ts":"2020-03-04T14:54:00.534Z"}
{"msg":"@troyronda  but if I'm not mistaken Indy currenly doesn't have golang sdk for interactions with node. What could be a best approach to resolve Indy Identity in existing golang backed that is run in production. Use separate microservice for this?","username":"vladyslavmunin","ts":"2020-03-04T14:54:00.534Z"}
{"msg":"@troyronda  but if I'm not mistaken Indy currently doesn't have golang sdk for interactions with node. What could be a best approach to resolve Indy Identity in existing golang backed that is run in production. Use separate microservice for this?","username":"vladyslavmunin","ts":"2020-03-04T14:54:00.534Z"}
{"msg":"I'm not aware of the current status of Indy/Golang SDK wrappers.","username":"troyronda","ts":"2020-03-04T14:56:00.587Z"}
{"msg":"Has joined the channel.","username":"doomguy","ts":"2020-03-13T09:55:11.023Z","type":"uj"}
{"msg":"Has joined the channel.","username":"artyom","ts":"2020-03-13T10:59:45.874Z","type":"uj"}
{"msg":"Hi everybody, do anyone use aries-framework-go with gomobile?","username":"artyom","ts":"2020-03-13T10:59:46.918Z"}
{"msg":"Has joined the channel.","username":"kukgini","ts":"2020-03-15T09:58:18.855Z","type":"uj"}
{"msg":"@artyom I'm not aware that anyone has tried it. Please let us know if you do and your results :).","username":"troyronda","ts":"2020-03-17T12:16:30.203Z"}
{"msg":"FYI: we have now added issue credential protocol. https://github.com/hyperledger/aries-framework-go/blob/master/test/bdd/features/issue-credential.feature","username":"troyronda","ts":"2020-03-17T12:16:56.737Z"}
{"msg":"FYI: we have now added issue credential protocol. https://github.com/hyperledger/aries-framework-go/blob/master/test/bdd/features/issue_credential.feature","username":"troyronda","ts":"2020-03-17T12:16:56.737Z"}
{"msg":"Is the \"POST /verifiable/credential\" API working on the open-api demo? Maybe my format is wrong, but I cannot get anything to work. It expects a string for a name, and a string for the VC. But the VC is a complex structure. How should this work?\n{\n \"name\": \"examplecredentialname\",\n \"vc\": {\"@context\":[\"https://www.w3.org/2018/credentials/v1\"],\"id\":\"http://chainyard.com\",\"type\":\"VerifiableCredential\",\"credentialSubject\":{\"id\":\"did:example:iuajk1f712ebc6f1c276e12ec21\"},\"issuer\":{\"id\":\"did:example:09s12ec712ebc6f1c671ebfeb1f\",\"name\":\"ExampleUniversity\"},\"issuanceDate\":\"2020-01-01T10:54:01Z\",\"credentialStatus\":{\"id\":\"https://example.gov/status/65\",\"type\":\"CredentialStatusList2017\"},\"credentialSchema\":[],\"customfields\":{\"_id\":\"customfields_default__id\",\"member\":\"customfields_default_member\"}}\n}\n\n{\"code\":6000,\"message\":\"request decode : json: cannot unmarshal object into Go struct field CredentialExt.vc of type string\"}","username":"scottz","ts":"2020-03-19T02:29:36.831Z"}
{"msg":"Is the \"POST /verifiable/credential\" API working on the open-api demo? Maybe my format is wrong, but I cannot get anything to work. It expects a string for a name, and a string for the VC. But the VC is a complex structure. How should this work?\n{\n \"name\": \"examplecredentialname\",\n \"vc\": {\"@context\":[\"https://www.w3.org/2018/credentials/v1\"],\"id\":\"http://chainyard.com\",\"type\":\"VerifiableCredential\",\"credentialSubject\":{\"id\":\"did:example:iuajk1f712ebc6f1c276e12ec21\"},\"issuer\":{\"id\":\"did:example:09s12ec712ebc6f1c671ebfeb1f\",\"name\":\"ExampleUniversity\"},\"issuanceDate\":\"2020-01-01T10:54:01Z\",\"credentialStatus\":{\"id\":\"https://example.gov/status/65\",\"type\":\"CredentialStatusList2017\"},\"credentialSchema\":[]}\n}\n\n{\"code\":6000,\"message\":\"request decode : json: cannot unmarshal object into Go struct field CredentialExt.vc of type string\"}","username":"scottz","ts":"2020-03-19T02:29:36.831Z"}
{"msg":"I do not see any code that encrypts the data (e.g. verifiable credentials) as is exhibited by ctx.Crypto().Encrypt() in the framework_test.go, before calling store.Put() to save it. Maybe I missed something? Is there a design reason for that omission?","username":"scottz","ts":"2020-04-01T14:43:31.002Z"}
{"msg":"Has joined the channel.","username":"nikolas","ts":"2020-04-14T07:34:22.711Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ItsOmerShafiq","ts":"2020-04-15T12:29:16.293Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ayushmanss","ts":"2020-04-15T19:15:53.796Z","type":"uj"}
{"msg":"Has joined the channel.","username":"hynese","ts":"2020-04-17T09:31:31.038Z","type":"uj"}
{"msg":"Has joined the channel.","username":"TimoGlastra","ts":"2020-04-18T12:56:57.654Z","type":"uj"}
{"msg":"Has joined the channel.","username":"CabMorris14","ts":"2020-04-20T21:12:12.491Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SUSHOBHAN","ts":"2020-04-29T06:28:43.860Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pfeairheller","ts":"2020-05-05T13:45:26.723Z","type":"uj"}
{"msg":"Hi Folks...  I'm trying to respond to an Offer Proposal action event but I need to find out who the Issuer is.  This seems pretty fundamental but I can't figure out where that info is.  Any help would be greatly appreciated!","username":"pfeairheller","ts":"2020-05-05T13:45:27.299Z"}
{"msg":"I have the same question for the Request Credential action event.  My business logic needs to know who is on the other end of these messages.  With Issue Credential, I can decode the raw credential from the attachment and get the issuer, but I don't know what the expectation is with these earlier messages.","username":"pfeairheller","ts":"2020-05-05T15:01:27.899Z"}
{"msg":"Looking thru the route protocol service I see the use of the ActionEvent Properties field to add a protocol specific property which contains TheirDID().","username":"pfeairheller","ts":"2020-05-05T16:30:22.350Z"}
{"msg":"Seems like the same is needed here?","username":"pfeairheller","ts":"2020-05-05T16:30:28.023Z"}
{"msg":"I can create an issue and submit a PR to fix this if that is appropriate.","username":"pfeairheller","ts":"2020-05-05T16:35:30.592Z"}
{"msg":"@pfeairheller \n// ProposeCredential is an optional message sent by the potential Holder to the Issuer\n// to initiate the protocol or in response to a offer-credential message when the Holder\n// wants some adjustments made to the credential data offered by Issuer.","username":"soluchok","ts":"2020-05-07T12:44:19.796Z"}
{"msg":"@all https://chat.hyperledger.org/channel/aries?msg=g5AstsuFZCqnXFNxn","username":"troyronda","ts":"2020-05-07T12:45:50.601Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries?msg=g5AstsuFZCqnXFNxn","url":"https://chat.hyperledger.org/channel/aries?msg=g5AstsuFZCqnXFNxn","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@pfeairheller \nRequestCredential is a message sent by the potential Holder to the Issuer,\nto request the issuance of a credential. Where circumstances do not require\na preceding Offer Credential message (e.g., there is no cost to issuance\nthat the Issuer needs to explain in advance, and there is no need for cryptographic negotiation),\nthis message initiates the protocol.\n\nTo find out more see this RFCs https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential","username":"soluchok","ts":"2020-05-07T12:48:44.371Z"}
{"msg":"@pfeairheller would having `myDID` and `theirDID` in the `service.DIDCommAction` satisfy your use case?","username":"george.aristy","ts":"2020-05-07T13:07:53.515Z"}
{"msg":"ie. they can be added direction to the DIDCommAction, no need for properties.","username":"george.aristy","ts":"2020-05-07T13:10:43.258Z"}
{"msg":"please create an issue","username":"george.aristy","ts":"2020-05-07T13:11:03.099Z"}
{"msg":"@george.aristy Yes that would be perfect.  And I imagine helpful for other protocols as well.  Seems that message correlation is often needed when applying business logic to these protocols.","username":"pfeairheller","ts":"2020-05-07T22:02:59.845Z"}
{"msg":"Thanks!","username":"pfeairheller","ts":"2020-05-07T22:03:03.369Z"}
{"msg":"@soluchok I have read the spec (several times) and I understand the meaning of these messages.  I'm trying to correlate the occurrences and issuance of these early  stage messages so I can understand who is responding to one I've sent. ","username":"pfeairheller","ts":"2020-05-07T22:04:52.884Z"}
{"msg":"Has joined the channel.","username":"nileshv","ts":"2020-05-12T15:57:39.325Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dl2017","ts":"2020-05-16T05:13:38.837Z","type":"uj"}
{"msg":"Hi I read this in the Aries developer course in edx.org regarding the go framework. \"Whatâ€™s unique about this framework is that it is written entirely in golang without any non-golang dependencies. That means that the framework can take advantage of the rich golang ecosystem and distribution mechanisms. That also means the framework does not embed the indy-sdk (libindy) and as such does not support connections to Indy ledgers or the Indy verifiable credentials exchange model. Instead, the team is building support for other ledgers and other verifiable credential models. \" Is this a true statement i.e. go cannot connect to Indy ledger? What other ledger does it connect to now and what other verifiable credential exchange model will it support?","username":"dl2017","ts":"2020-05-16T05:13:41.112Z"}
{"msg":"Has joined the channel.","username":"Moshe7","ts":"2020-05-18T18:55:50.074Z","type":"uj"}
{"msg":"@dl2017 this is correct. the go framework supports a pluggable interface for DID ledgers and has implemented the W3C verifiable credential data model.","username":"troyronda","ts":"2020-05-19T18:53:26.980Z"}
{"msg":"out-of-the-box, you can configure the https binding for DID resolution (e.g., https://uniresolver.io).","username":"troyronda","ts":"2020-05-19T18:53:50.276Z"}
{"msg":"for example, our team uses a Hyperledger Fabric implementation of the Sidetree protocol as a DID ledger.","username":"troyronda","ts":"2020-05-19T18:54:47.876Z"}
{"msg":"for example, our team uses a Hyperledger Fabric implementation of the DIF Sidetree protocol as a DID ledger.","username":"troyronda","ts":"2020-05-19T18:54:47.876Z"}
{"msg":"Has joined the channel.","username":"Vid201","ts":"2020-05-22T13:41:35.244Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ker13530018","ts":"2020-05-27T09:53:48.384Z","type":"uj"}
{"msg":"Concerning that. I'm just playing around with that. I started the rest agent with flag  --http-resolver-url web@https://uniresolver.io/1.0/identifiers (and with just https://uniresolver.io) and tried to GET: http://localhost:8080/vdri/did/resolve/did:web:... with a valid did:web. However, I get \n`\n{\n\"code\": 4000,\n\"message\": \"invalid id\"\n}\n`","username":"domwoe","ts":"2020-05-28T15:08:58.892Z"}
{"msg":"Has joined the channel.","username":"aholovko","ts":"2020-05-28T17:47:08.839Z","type":"uj"}
{"msg":"Hi @domwoe, you need to encode id to base64, can you plz try again with the following one: \"did:web:vc.transmute.world#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\", after encoding to base64 the whole URL should be\n\nhttp://localhost:8080/vdri/did/resolve/ZGlkOndlYjp2Yy50cmFuc211dGUud29ybGQjejZNa3NIaDdxSFd2eWJMZzVRVFBQZEcyRGdFampkdUJEQXJWOUVGOW1SaVJ6TUJO","username":"aholovko","ts":"2020-05-28T17:47:09.843Z"}
{"msg":"Plz let me know if it works for you and if there is anything else that I can help with. Thanks","username":"aholovko","ts":"2020-05-28T17:49:19.065Z"}
{"msg":"ah, thx. Works :thumbsup: ","username":"domwoe","ts":"2020-05-28T18:07:55.482Z"}
{"msg":"and makes sense :)","username":"domwoe","ts":"2020-05-28T18:08:57.310Z"}
{"msg":"btw - we should probably get rid of the extra base64 encoding.","username":"troyronda","ts":"2020-05-28T18:16:45.429Z"}
{"msg":"Another question. I've a JWT VC (not created with Aries Go)  and I frankly tried to post it to the /verifiable/credential/validate endpoint. I'm getting `{\"code\":6001,\"message\":\"validate vc : decode new credential: public key fetcher is not defined\"}` What does that mean? ","username":"domwoe","ts":"2020-05-28T18:25:16.595Z"}
{"msg":"It's actually not a fully compliant VC (credentialSubject) missing, but I don't think thats the issue here JWT: eyJraWQiOiJkaWQ6d2ViOmFjbWUuaWlsLm5ldHdvcmsja2V5LTEiLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJzdWIiOiJkaWQ6d2ViOmFjbWUuaWlsLm5ldHdvcmsiLCJpc3MiOiJkaWQ6d2ViOmFjbWUuaWlsLm5ldHdvcmsiLCJ2YyI6eyJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiTWFzdGVyRGF0YUNyZWRlbnRpYWwiXSwiQGNvbnRleHQiOlsiaHR0cHM6XC9cL3d3dy53My5vcmdcLzIwMThcL2NyZWRlbnRpYWxzXC92MSIsImh0dHBzOlwvXC9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tXC9paWwtbmV0d29ya1wvY29udGV4dHNcL21hc3RlclwvbWFzdGVyZGF0YS5qc29uIl19LCJpYXQiOjE1OTA2Nzc4MzF9.ADdIP6lyPm0-NgM1Jupp83o9M4CC0mHfO6bycWkSfaG7lMlyWjUUmbdjsf_CA-mA-NxLBvQIyVODu5NVDj0yDw","username":"domwoe","ts":"2020-05-28T18:29:43.706Z"}
{"msg":"@domwoe this is a bug we need to fix. Also please be aware that currently only `EdDSA` and `RS256` signature algorithms are supported, but we have plans to add elliptic curve ones soon. I will update you when the fix will be applied. Thank you!","username":"kdimak","ts":"2020-05-28T19:36:19.872Z"}
{"msg":"Hi everyone, I am testing openapi-demo with guideline writing on \"Steps for DIDExchange through DIDComm Routers\"\n\n1. Create an invitation from carl router\n2. Run receive inviation in carl agent\n3. Register router in carl agent, but I get an error \n{\"code\":5002,\"message\":\"router registration : send route request: wrong format did input: \"}\n\nSo I would like to know did I test in a incorrect way , and what should I do to register the router. Thank you","username":"CyrilLeung","ts":"2020-06-04T04:49:14.323Z"}
{"msg":"Has joined the channel.","username":"rh7","ts":"2020-06-06T13:32:49.776Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Dubh3124","ts":"2020-06-06T15:53:38.089Z","type":"uj"}
{"msg":"Hi! I am new to the Aries Go framework and have been hacking around with it. Do we have to implement our own event queue logic to  in order to listen for Action Events then use RegisterActionEvent and AutoExecuteActionEvent to process events or is there an abstraction that takes care of this?","username":"Dubh3124","ts":"2020-06-07T18:48:46.260Z"}
{"msg":"We've recently started adding \"middleware\" to the issue-credential and present-proof protocols, take a look at tose","username":"george.aristy","ts":"2020-06-07T18:50:30.035Z"}
{"msg":"We've recently started adding \"middleware\" to the issue-credential and present-proof protocols, take a look at those","username":"george.aristy","ts":"2020-06-07T18:50:30.035Z"}
{"msg":"Has joined the channel.","username":"shonjs","ts":"2020-06-28T12:02:25.854Z","type":"uj"}
{"msg":"In latest update, every time I try to register mediator router will raise this error\n[aries-framework/command/route] 2020/06/29 09:27:34 UTC - n/a -> ERROR command=[mediator] action=[Register] [connectionID=[fbcf4120-85bc-4315-8229-0f838c0de526]] errMsg=[router registration : timeout waiting for grant from the router]\n\nIs anyone also come across this issue ?","username":"CyrilLeung","ts":"2020-06-29T09:32:02.045Z"}
{"msg":"@CyrilLeung are you using startNotifier function? If yes there is no more connections topic ","username":"soluchok","ts":"2020-06-29T09:44:06.491Z"}
{"msg":"yes I understand there is no more connections topic and I switch to listen \"didexchange_states\" \nbut how does it affect registering a router ?","username":"CyrilLeung","ts":"2020-06-29T09:48:06.689Z"}
{"msg":"It should not, but probably you are trying to acceptInvitation make sure you are checking post event","username":"soluchok","ts":"2020-06-29T09:51:59.056Z"}
{"msg":"OK thanks, I just wondering anything I need to setup on the router agent to make the registration working","username":"CyrilLeung","ts":"2020-06-29T09:53:12.157Z"}
{"msg":"Has joined the channel.","username":"thomas_kim","ts":"2020-06-30T00:32:18.986Z","type":"uj"}
{"msg":"Hi~ everyone. I can't find APIs related to creating a schema or a credential definition in the aries-go project. Are they APIs need to be implemented sometime later?","username":"thomas_kim","ts":"2020-06-30T00:32:19.274Z"}
{"msg":"Are you trying to use the framework with Indy by any chance?","username":"george.aristy","ts":"2020-06-30T01:21:56.062Z"}
{"msg":"If yes: the framework does not support Indy yet","username":"george.aristy","ts":"2020-06-30T01:22:30.553Z"}
{"msg":"If no: what is it you're trying to do? a schema should be just like any other JSON Schema/JSON-LD context","username":"george.aristy","ts":"2020-06-30T01:22:57.956Z"}
{"msg":"Oh... I didn't know that the concept of schema / credential definition is related to only indy!","username":"thomas_kim","ts":"2020-06-30T01:23:14.628Z"}
{"msg":"Thanks.","username":"thomas_kim","ts":"2020-06-30T01:24:40.914Z"}
{"msg":"np","username":"george.aristy","ts":"2020-06-30T01:25:07.616Z"}
{"msg":"Has joined the channel.","username":"c2bo","ts":"2020-06-30T09:01:14.186Z","type":"uj"}
{"msg":"FYI: aries-framework-go verifiable credential controller builds for Android/IOS: https://github.com/hyperledger/aries-framework-go/pull/2012/","username":"troyronda","ts":"2020-07-14T16:58:38.900Z"}
{"msg":"Hi @george.aristy , Just getting started with this project and wanted to understand few things. \nFor issuing a VC in Indy based solution, we first have to define schema and a cred-def.\nHow the process of credential issuance works in aries go framework? Hope it supports exchange of VCs between two agents.\nBasically I am looking to build a simple Alice/Faber like solution in which credentials and proofs can be exchanges and verified using Hyperledger Fabric as the blockchain ledger.","username":"HLFPOC","ts":"2020-07-20T11:10:45.736Z"}
{"msg":"Hi @george.aristy , Just getting started with this project and wanted to understand few things. \nFor issuing a VC in Indy based solution, we first have to define schema and a cred-def.\nHow the process of credential issuance works in aries go framework? Hope it supports exchange of VCs between two agents.\nBasically I am looking to build a simple Alice/Faber like solution in which credentials and proofs can be exchanged and verified using Hyperledger Fabric as the blockchain ledger.","username":"HLFPOC","ts":"2020-07-20T11:10:45.736Z"}
{"msg":"Hi @george.aristy , Just getting started with this project and wanted to understand few things. \nFor issuing a VC in Indy based solution, we first have to define schema and a cred-def.\nHow the process of credential issuance works in aries go framework? Hope it supports exchange of VCs between two agents.\nBasically I am looking to build a simple Alice/Faber like solution in which credentials and proofs can be exchanged and verified using Hyperledger Fabric instead of Indy as the blockchain ledger.","username":"HLFPOC","ts":"2020-07-20T11:10:45.736Z"}
{"msg":"Has left the channel.","username":"kukgini","ts":"2020-07-23T02:56:57.445Z","type":"ul"}
{"msg":"I am testing on build for Android/iOS, can anyone know why there is \"getDIDExchangeController\" in \"Command\" namespace, but not in \"Api\" namespec ?","username":"CyrilLeung","ts":"2020-07-28T04:33:38.394Z"}
{"msg":"Or is it just a missing function?","username":"CyrilLeung","ts":"2020-07-28T04:34:15.512Z"}
{"msg":"Hello Team, I am following the Open API demo and was able to bring up the agents by running `make run-openapi-demo` command however getting below error in the server response while calling `POST /connections/create-invitation` from Alice agent\nError: `TypeError: Failed to fetch`\nNot able to debug this as there is no error message logged in the containers running for Alice agent. Same is the case with Bob's agent also.","username":"anchit","ts":"2020-07-28T14:51:13.017Z"}
{"msg":"I assume it is resolved:)","username":"soluchok","ts":"2020-07-31T12:00:28.747Z"}
{"msg":"yes thanks","username":"anchit","ts":"2020-07-31T12:01:26.322Z"}
{"msg":"Can anyone explain a little bit more on how \"Notifier\" or \"Hook\" working in the mobile bindings of aries-framework-go? \nSince current example only mentioned about normal command request and respond, Thank you.","username":"CyrilLeung","ts":"2020-08-07T03:03:26.542Z"}
{"msg":"Hey @CyrilLeung , the mobile bindings now cover all Aries-Framework-Go controllers. The Notifier is yet to be included in the mobile bindings, however there is an issue tracking this: https://github.com/hyperledger/aries-framework-go/issues/1925","username":"tommyjay","ts":"2020-08-07T14:45:00.524Z"}
{"msg":"I am looking forward on it. And it is nice to see you here, I have a few questions on mobile binding and I can ask you directly next week.","username":"CyrilLeung","ts":"2020-08-08T14:19:28.021Z"}
{"msg":"Has joined the channel.","username":"lauravuo-techlab","ts":"2020-08-11T06:01:17.852Z","type":"uj"}
{"msg":"Has joined the channel.","username":"o.terbu","ts":"2020-08-12T15:44:29.406Z","type":"uj"}
{"msg":"Hey, we are interested in adding support for Ethereum/HL Besu. But I want to first clarify what information does Aries-Go store on the ledger:\n\n- Afaiu, Aries-Go uses W3C JSON-LD proof VCs, so I don't assume credential schemas, definitions and the revocation registry is stored on the ledger. Is this correct?\n\n- Afaiu, did:trustbloc is the primary public DID method. Are these DIDs used per default for the issuer of the Verifiable Credentials? \n\n- Does Aries-Go support linked secrets, or do you use public DIDs as the subject of Verifiable Credentials?\n\n- Does every ledger interaction go through VDRI?\n\n- Should we move this conversation to Github instead ;) ?","username":"o.terbu","ts":"2020-08-12T15:44:29.674Z"}
{"msg":"Hey, we are interested in adding support for Ethereum/HL Besu. But I want to first clarify what information does Aries-Go store on the ledger:\n\n1. Afaiu, Aries-Go uses W3C JSON-LD proof VCs, so I don't assume credential schemas, definitions and the revocation registry is stored on the ledger. Is this correct?\n\n2. Afaiu, did:trustbloc is the primary public DID method. Are these DIDs used per default for the issuer of the Verifiable Credentials? \n\n3. Does Aries-Go support linked secrets, or do you use public DIDs as the subject of Verifiable Credentials?\n\n4. Does every ledger interaction go through VDRI?\n\n5. Should we move this conversation to Github instead ;) ?","username":"o.terbu","ts":"2020-08-12T15:44:29.674Z"}
{"msg":"@o.terbu \n\n1. Correct - no shemas nor revocations on the ledger... yet\n2. We recently started issuing credentials with `did:peer` as well\n3. The framework does not support indy linked secrets yet. The framework has produced VCs with did:key, did:trustbloc, and did:peer as the subject.\n4. Yes\n5. probably :)","username":"george.aristy","ts":"2020-08-12T17:33:32.978Z"}
{"msg":"We have submitted PR to indy-vdr for a go wrapper for libindy-vdr as a shared C library.  We have build a VDRI for aries-go using that wrapper to resolve DIDs against any indy network.  Is this something aries-go would accept as a PR or is the desire for this framework to remain written entirely in golang without any external dependencies?","username":"pfeairheller","ts":"2020-08-13T19:40:37.708Z"}
{"msg":"@pfeairheller I see you already commented on this a while back :) https://github.com/hyperledger/aries-framework-go/issues/569#issuecomment-657636722","username":"george.aristy","ts":"2020-08-13T20:45:29.757Z"}
{"msg":"We'd welcome a PR with the build constraints","username":"george.aristy","ts":"2020-08-13T20:45:59.443Z"}
{"msg":"thanks for the feedback. just out of curiosity what is the use case to use did:peer as the subject for VCs?","username":"o.terbu","ts":"2020-08-14T15:06:25.113Z"}
{"msg":"wouldn't verification be limited to people in the peer-relationship?","username":"o.terbu","ts":"2020-08-14T15:07:08.806Z"}
{"msg":"but i guess they have been n-wise?","username":"o.terbu","ts":"2020-08-14T15:08:34.341Z"}
{"msg":"but i guess they have been n-wise/anywise?","username":"o.terbu","ts":"2020-08-14T15:08:34.341Z"}
{"msg":"@george.aristy @pfeairheller I am thinking that these VDR packages should be treated as sub-modules with their own go.mod.","username":"troyronda","ts":"2020-08-14T15:39:35.079Z"}
{"msg":"(still","username":"troyronda","ts":"2020-08-14T15:39:51.365Z"}
{"msg":"(Still","username":"troyronda","ts":"2020-08-14T15:40:05.627Z"}
{"msg":"@troyronda I like that idea","username":"pfeairheller","ts":"2020-08-14T15:41:03.534Z"}
{"msg":"Correct - you set up a \"trusted context\" between a group of peers and reference the identifiers known in that group","username":"george.aristy","ts":"2020-08-14T19:53:44.385Z"}
{"msg":"Has joined the channel.","username":"jcourt","ts":"2020-08-20T04:16:30.872Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jceb","ts":"2020-08-21T07:46:01.144Z","type":"uj"}
{"msg":"Can anyone point me to a spec for how RFC 0036 (Issue Credential) and RFC 0037 (Present Proof) are implemented with W3C LD-Proof-based Verifiable Credentials and Presentations in Aries Go? My expectation is that they will deviate a bit from the aforementioned RFCs.","username":"o.terbu","ts":"2020-08-26T09:42:53.253Z"}
{"msg":"@o.terbu our upcoming release will implement present-proof v2 and issue-credential v2. Godocs aren't up yet so I'm pointing you to examples in code:\n\n* present-proof v2: https://github.com/hyperledger/aries-framework-go/blob/master/pkg/client/presentproof/example_test.go#L108\n* issue-credential v2: https://github.com/hyperledger/aries-framework-go/blob/master/pkg/client/issuecredential/example_test.go#L107\n\nThose packages are designed to be agnostic to the contents in the attachments.\n\nWe're using them extensively with our `verifiable` package that has extensive support for JSONLD and JWT formats of VCs: https://github.com/hyperledger/aries-framework-go/tree/master/pkg/doc/verifiable","username":"george.aristy","ts":"2020-08-26T11:46:15.936Z"}
{"msg":"awesome, thanks!","username":"o.terbu","ts":"2020-08-26T11:52:02.273Z"}
{"msg":"Hi folks.  I think I've hit a bug, but I wanted to check before opening an issue.  I'm working with the latest from master.   I have 2 agents running and connected and agent1 begins a the issue-credential protocol by calling SendOffer to send an offer for a credential to agent2.  In agent2, I receive the following error: `doHandle err: invalid state transition: offer-sent -> offer-received`.  Looking at the code I see that the issuecredential Service `nextState` method offers up `offerReceived` as the next state instance for the offer-credential message type but the `CanTransitionTo` method of `offerSent` does not allow the transition.  At first I thought it was a bug and that the transition had to be added, but then I got similar errors on `credential-issued -> credential-received` and `request-sent -> request-received`.  Adding the appropriate names to the `CanTransitionTo` methods fixed everything and the agent can now successfully exchange a credential.  It looks like `proposal-sent -> proposal-received` will also be an issue but I have verified that yet.  Am I doing something really stupid or is this an issue I should create and submit a PR for?","username":"pfeairheller","ts":"2020-08-26T21:30:11.514Z"}
{"msg":"@pfeairheller offer-sent is an issuer's a state, offer-received is a holder's state. Make sure you are sending a message to another agent.","username":"soluchok","ts":"2020-08-26T21:42:00.030Z"}
{"msg":"@pfeairheller offer-sent is an issuer's state, offer-received is a holder's state. Make sure you are sending a message to another agent.","username":"soluchok","ts":"2020-08-26T21:42:00.030Z"}
{"msg":"I am sure.  Different processes.","username":"pfeairheller","ts":"2020-08-26T21:45:42.474Z"}
{"msg":"Does each process has its own DB?","username":"soluchok","ts":"2020-08-26T21:47:37.908Z"}
{"msg":"Bc, it seems like a race condition.","username":"soluchok","ts":"2020-08-26T21:48:15.557Z"}
{"msg":"probably you are using the same DB for both agents ","username":"soluchok","ts":"2020-08-26T21:49:03.566Z"}
{"msg":"probably you are using the same DB for both agents (process )","username":"soluchok","ts":"2020-08-26T21:49:03.566Z"}
{"msg":"probably you are using the same DB for both agents (processes )","username":"soluchok","ts":"2020-08-26T21:49:03.566Z"}
{"msg":"Very interesting question.  I'm using our own experimental mongodb data store and each agent is supposed to have their own database.  Let me run with some more debugging and verify. ","username":"pfeairheller","ts":"2020-08-26T21:58:38.038Z"}
{"msg":"Sure","username":"soluchok","ts":"2020-08-26T21:59:29.246Z"}
{"msg":"Bingo!  I switched to the memory provider (after grilling chicken for dinner) and reverted the changes to Aries and it worked fine.  @soluchok Thanks for the help, I'll debug my mongo datastore and see what's wrong there.","username":"pfeairheller","ts":"2020-08-26T22:55:39.298Z"}
{"msg":"Hi, I'm trying to work out how DIDs are managed by the framework but couldn't wrap my head around it yet. I saw in the demo that keys were generated for different personas and that communication can happen between them using the APIs. However, I haven't found yet the entry point for creating, updating and retrieving DIDs. Could someone point me in the right direction?","username":"jceb","ts":"2020-08-28T07:10:00.447Z"}
{"msg":"We have pushed a new release for aries-framework-go (v0.1.4). Release notes: https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.4","username":"troyronda","ts":"2020-08-31T22:39:50.424Z"}
{"msg":"Hi @jceb , the library supports this through the use of its Verifiable Data Registry Interface (VDRI) controller.","username":"tommyjay","ts":"2020-09-01T14:08:00.913Z"}
{"msg":"it is described here https://github.com/hyperledger/aries-framework-go/blob/master/docs/concepts/00_what_is_hl_aries.md#9-vdri","username":"tommyjay","ts":"2020-09-01T14:08:16.179Z"}
{"msg":"and here https://github.com/hyperledger/aries-framework-go/blob/master/docs/concepts/01_terminologies.md#vdri","username":"tommyjay","ts":"2020-09-01T14:08:22.306Z"}
{"msg":"this is the implementation https://github.com/hyperledger/aries-framework-go/tree/master/pkg/vdri","username":"tommyjay","ts":"2020-09-01T14:09:41.352Z"}
{"msg":"thanks, I'll have a look","username":"jceb","ts":"2020-09-01T16:28:22.467Z"}
{"msg":"Has joined the channel.","username":"chakshujain","ts":"2020-09-06T14:34:38.546Z","type":"uj"}
{"msg":"I was finally getting my act together to submit the indy vdri implementation this weekend and a question occurred to me.  Besides this vdri, we also have a MongoDB datastore implementation as well as an inbound transport for AMQP.  Has any thought been put into maintaining these types of add-ons in separate repos?  The thought being that the core maintainers of the framework would not have to carry the added baggage forward but these add-ons would still be available to the community.  I'm happy to submit them to aries-framework-go if there is interest but wanted to raise this question first.","username":"pfeairheller","ts":"2020-09-08T11:54:43.537Z"}
{"msg":"Has joined the channel.","username":"sj1 4","ts":"2020-09-15T01:57:33.761Z","type":"uj"}
{"msg":"agent uri","username":"sj1 4","ts":"2020-09-15T01:57:34.139Z"}
{"msg":"In the V2 issue-credential rfc, the request-credential message has a couple of options for the `requests~attach` listed, specifically the result from`indy_prover_create_credential_req` call for Indy credentials.   However there is no `WithRequestCredential` option for continuing the DIDComm action with a custom request-credential message.  Indeed in `states.go` the framework generates a request-credential message  with the attachments from the incoming offer by default.  Again, I wanted to check here to make sure I'm not missing anything obvious before reporting a bug.","username":"pfeairheller","ts":"2020-09-15T13:15:52.865Z"}
{"msg":"Has joined the channel.","username":"m00sey","ts":"2020-09-15T13:20:13.099Z","type":"uj"}
{"msg":"@pfeairheller we have middleware support. You can inject custom logic. But the message should be generic. You can play with attachments.","username":"soluchok","ts":"2020-09-15T13:24:51.122Z"}
{"msg":"@pfeairheller we have middleware support. You can inject custom logic. But the message should be generic. You can play with attachments. https://github.com/hyperledger/aries-framework-go/blob/master/pkg/didcomm/protocol/middleware/issuecredential/middlewares.go","username":"soluchok","ts":"2020-09-15T13:24:51.122Z"}
{"msg":"Thanks for the reply @soluchok.  I do not understand how I could use middleware to accomplish this.  The `Metadata` interface does not provide access to a `RequestCredential` message as it does for offer, propose and issue.  So I'm not sure how I could change a request-credential in middleware.  As a matter of fact, the comment for each of the funcs states \"...is pointer to the message provided by the user through the Continue function\" which is what I wanted to accomplish with the `WithRequestCredential` in the first place.","username":"pfeairheller","ts":"2020-09-15T14:07:20.712Z"}
{"msg":"Hi. I was trying the OpenAPI demo and found that that sidetree-mock is used for ledger. Is there any example available using sidetree-fabric (https://github.com/trustbloc/sidetree-fabric)?","username":"Vid201","ts":"2020-09-16T07:59:48.529Z"}
{"msg":"Hi. I was trying the OpenAPI demo and found that sidetree-mock is used for ledger. Is there any example available using sidetree-fabric (https://github.com/trustbloc/sidetree-fabric)?","username":"Vid201","ts":"2020-09-16T07:59:48.529Z"}
{"msg":"Or I can just run sidetree-fabric instead of sidetree-mock?","username":"Vid201","ts":"2020-09-16T08:16:24.777Z"}
{"msg":"Has joined the channel.","username":"AngelPalomares","ts":"2020-09-18T09:48:56.025Z","type":"uj"}
{"msg":"Hello there. I am trying to perform a did_exhange connection between a aries-go and and aries-python agents.","username":"AngelPalomares","ts":"2020-09-18T10:29:30.475Z"}
{"msg":"```\nIn order to do I tried 2 different ways: aries-go->aries-python and aries-python-aries-go\n```","username":"AngelPalomares","ts":"2020-09-18T10:31:33.577Z"}
{"msg":"```\n\n```","username":"AngelPalomares","ts":"2020-09-18T11:40:08.784Z"}
{"msg":"```\n\n ```","username":"AngelPalomares","ts":"2020-09-18T11:40:08.784Z"}
{"msg":"Hello there, I am doing a did_exchange using a web agent with a mobile but when I am using the local agent in the mobile development, when the web agent tries  to connect with the mobile  agent (e.g. accept_request), I have the following error: ```\nERROR command=[didexchange] action=[AcceptExchangeRequest] [connectionID=[b1cc9ac7-e2bd-4940-a73a-45bb3fc0b7aa]] errMsg=[did exchange client - accept exchange request: failed to execute state action 'responded': outboundDispatcher.Send: no transport found for serviceEndpoint: didcomm:transport/queue]\n``` . I guess that this is because when creating the local agent on the mobile I haven't defined the serviceEnpoint correctly. I have tried with different options (defining websockectURL, addHttpResolver, etc) but not succesfully. COuld you please help me with this issue? Thx in advance","username":"AngelPalomares","ts":"2020-09-18T11:40:08.784Z"}
{"msg":"Hello there, I am doing a did_exchange using a web agent with a mobile but when I am using the local agent in the mobile development, when the web agent tries  to connect with the mobile  agent (e.g. accept_request), I have the following error: ```\nERROR command=[didexchange] action=[AcceptExchangeRequest] [connectionID=[b1cc9ac7-e2bd-4940-a73a-45bb3fc0b7aa]] errMsg=[did exchange client - accept exchange request: failed to execute state action 'responded': outboundDispatcher.Send: no transport found for serviceEndpoint: didcomm:transport/queue]\n```  I guess that this is because when creating the local agent on the mobile I haven't defined the serviceEnpoint correctly. I have tried with different options (defining websockectURL, addHttpResolver, etc) but not succesfully. COuld you please help me with this issue? Thx in advance","username":"AngelPalomares","ts":"2020-09-18T11:40:08.784Z"}
{"msg":"Hello there, I am doing a did_exchange using a web agent with a mobile but when I am using the local agent in the mobile development, when the web agent tries  to connect with the mobile  agent (e.g. accept_request), I have the following error: ```\nERROR command=[didexchange] action=[AcceptExchangeRequest] [connectionID=[b1cc9ac7-e2bd-4940-a73a-45bb3fc0b7aa]] errMsg=[did exchange client - accept exchange request: failed to execute state action 'responded': outboundDispatcher.Send: no transport found for serviceEndpoint: didcomm:transport/queue]\n```  I guess that this is because when creating the local agent on the mobile I haven't defined the serviceEnpoint correctly. I have tried with different options (defining websockectURL, addHttpResolver, etc) but not succesfully. Could you please help me with this issue? Thx in advance","username":"AngelPalomares","ts":"2020-09-18T11:40:08.784Z"}
{"msg":"Hello I am testing a did_exchange using on one hand a agent developed in go and other developed in python and I have the following error:```\nFaber      | 2020-09-18 09:30:50,478 aries_cloudagent.transport.outbound.manager ERROR >>> Error when posting to: http://192.168.1.35:8082; Error: (<class 'aries_cloudagent.transport.outbound.base.OutboundTransportError'>, OutboundTransportError('Unexpected response status 404, caused by: Not Found',), <traceback object at 0x7fafe6fdb608>); Re-queue failed message ...\n\n```  Is it feasible to do so?, am I doing something wrong?. Thank you in advance","username":"AngelPalomares","ts":"2020-09-18T12:01:12.287Z"}
{"msg":"The mobile bindings for notifier have now been added. You can read more here: https://github.com/hyperledger/aries-framework-go/tree/master/cmd/aries-agent-mobile","username":"troyronda","ts":"2020-09-21T22:18:58.106Z"}
{"msg":"@CyrilLeung ^^","username":"troyronda","ts":"2020-09-21T22:19:16.506Z"}
{"msg":"Hello,  firstly thank you very much for new version. I have tried and I am able to integrate the new notifier future and it works very well. However after acepting a did_exchange invitation, when the server side tries to connect with the mobile I have the following error:`[aries-framework/controller/did-exchange] 2020/09/22 10:07:49 UTC - n/a -> ERROR command=[didexchange] action=[AcceptExchangeRequest] [connectionID=[1802efbf-ab7e-4275-95c0-0fae7b74421d]] errMsg=[did exchange client - accept exchange request: failed to execute state action 'responded': outboundDispatcher.Send: no transport found for serviceEndpoint: didcomm:transport/queue]\ncouchdb.kraken.eu                    | [notice] 2020-09-22T10:07:49.291406Z nonode@nohost <0.19348.0> d8e6a9f45f couchdb.kraken.eu:5984 172.21.0.8 admin PUT /government_didconnection/3rm87una9ktL3BrmBzjZmcbXgyYw67bNBwgTgnThfnYW 201 ok 4\n` I think that the problem is when defining the serviceEnpoint ( serviceEndpoint: didcomm:transport/queue) o the mobile. How can I fix it?, Am I doing something wrong?","username":"AngelPalomares","ts":"2020-09-22T10:26:47.373Z"}
{"msg":"There isn't an example in aries-framework-go for setting up sidetree-fabric. In the TrustBloc sandbox repo, there is a BDD feature defined that sets up sidetree-fabric: https://github.com/trustbloc/edge-sandbox/blob/master/test/bdd/features/setupfabric.feature","username":"troyronda","ts":"2020-09-22T13:04:07.569Z"}
{"msg":"I haven't given a lot of thought to separate aries-*-go repos. There is always a balance to be achieved when discussing a repo strategy.","username":"troyronda","ts":"2020-09-22T13:13:49.659Z"}
{"msg":"I would think an aries-framework-go VDR for Indy should be available to the community (thanks for these efforts). It's also true that the framework maintainers would find it difficult to maintain a VDR for each ledger or storage that comes about.","username":"troyronda","ts":"2020-09-22T13:32:11.758Z"}
{"msg":"btw - on the storage-side, we are working on an approach to enable a generic REST interface to the (remote) storage tier via the DIF SDS/EDV spec. This would enable plugging in remote storage without requiring direct framework integration ... similar to the capability we have for DIDs via the HTTP resolver.","username":"troyronda","ts":"2020-09-22T13:35:40.713Z"}
{"msg":"Of course, like with DIDs, both direct framework integration and the REST interface would both be available for storage.","username":"troyronda","ts":"2020-09-22T13:36:58.917Z"}
{"msg":"That makes sense...  for our use case, it makes sense to use the direct integration but I see the value of the REST interface.","username":"pfeairheller","ts":"2020-09-22T13:38:22.427Z"}
{"msg":"yup - we have cases for direct integration as well. (and also for REST via EDV).","username":"troyronda","ts":"2020-09-22T13:39:09.960Z"}
{"msg":"would it make sense to add this to the agenda for the next contributors call?  I am planning on attending it.","username":"pfeairheller","ts":"2020-09-22T13:47:27.428Z"}
{"msg":"Guessing you need to connect the agent to a mediator. cc: @soluchok","username":"troyronda","ts":"2020-09-22T15:46:41.407Z"}
{"msg":"I guess I have two questions re issue-credential v2 (RFC 0453)\n\n1. Do you intend to use the preview-credential with LDS/LD-Proof-based VCs as well? In that case there is a lot of room for interpretation.\n\n2. How do you provide the W3C Verifiable Presentation in the request-credential message in case a presentation_definition was included in the credential-offer (if format = dif/credential-manifest@v1.0)? The current issue-credential v2 spec uses the DIF Credential Manifest to allow the issuer to tell the holder what information is required. I don't see how one could use the Credential Manifest for including the Verifiable Presentation. Is this a typo in the issue-credential v2 spec?","username":"o.terbu","ts":"2020-09-22T19:12:10.388Z"}
{"msg":"Hi, I have two questions re issue-credential v2 (RFC 0453)\n\n1. Do you intend to use the preview-credential with LDS/LD-Proof-based VCs as well? In that case there is a lot of room for interpretation.\n\n2. How do you provide the W3C Verifiable Presentation in the request-credential message in case a presentation_definition was included in the credential-offer (if format = dif/credential-manifest@v1.0)? The current issue-credential v2 spec uses the DIF Credential Manifest to allow the issuer to tell the holder what information is required. I don't see how one could use the Credential Manifest for including the Verifiable Presentation. Is this a typo in the issue-credential v2 spec?","username":"o.terbu","ts":"2020-09-22T19:12:10.388Z"}
{"msg":"^^I created a github issue here: https://github.com/hyperledger/aries-rfcs/issues/537","username":"o.terbu","ts":"2020-09-23T09:31:14.632Z"}
{"msg":"I think the request can be summarized as to create a curated aries-framework-go add-ons repository that contains code as such as additional VDRs, storage, etc. that is pluggable into the aries-framework-go interfaces. The framework would not have a dependency on that new repo.","username":"troyronda","ts":"2020-09-23T18:45:23.656Z"}
{"msg":"Has joined the channel.","username":"DerekTrider","ts":"2020-09-23T19:15:24.047Z","type":"uj"}
{"msg":"I think this add-ons repo would be effectively styled as a mono repo - where we have a go.mod for each add-on","username":"troyronda","ts":"2020-09-23T19:34:30.364Z"}
{"msg":"That all sounds right to me.","username":"pfeairheller","ts":"2020-09-23T19:36:38.403Z"}
{"msg":"Has joined the channel.","username":"ldej","ts":"2020-09-25T12:28:05.207Z","type":"uj"}
{"msg":"How can I do it?, I couldn't find any example or documentation regarding this issue :-(","username":"AngelPalomares","ts":"2020-09-27T08:07:06.304Z"}
{"msg":"In any case Won't I will have the same problem but now from the mediator to the mobile instead from the agent server to the mobile? :-/","username":"AngelPalomares","ts":"2020-09-27T08:13:30.753Z"}
{"msg":"There isn't much documentation but you can start here: https://github.com/hyperledger/aries-framework-go/blob/master/docs/didcomm_mediator.md","username":"troyronda","ts":"2020-09-28T18:59:55.328Z"}
{"msg":"The connection between agent and mediator is over WebSockets so duplex communication is enabled.","username":"troyronda","ts":"2020-09-28T19:00:27.040Z"}
{"msg":"The connection between agent and mediator is over WebSockets which enables the agent to receive the messages via the mediator endpoint.","username":"troyronda","ts":"2020-09-28T19:00:27.040Z"}
{"msg":"The connection between agent and mediator is over WebSockets which enables the agent to receive the messages sent to the mediator endpoint.","username":"troyronda","ts":"2020-09-28T19:00:27.040Z"}
{"msg":"Thank you Troy ;-) ,  I will give it a try","username":"AngelPalomares","ts":"2020-09-29T12:52:40.179Z"}
{"msg":"We discussed the addon/extension repository on the Aries WG Call B today. The outcome was that it is okay to create a repo. Let the name bikeshedding begin.","username":"troyronda","ts":"2020-09-30T20:08:39.764Z"}
{"msg":"aries-framework-go-extension or  aries-framework-go-ext -> as we are building extension to the orginal repo. Also, this lines up nicely with aries-framework-go (closer alphabetically - which is the default(most of the cases) sort result).","username":"rolsonquadras","ts":"2020-09-30T20:16:03.216Z"}
{"msg":"Also if we decide to split out the core/common packages (like DIDs, Verifiable Credentials, ...), what would be a good repo name for that?","username":"troyronda","ts":"2020-09-30T20:17:11.567Z"}
{"msg":"`aries-framework-go-core` I guess makes sense","username":"Baha-sk","ts":"2020-09-30T20:20:04.592Z"}
{"msg":"`aries-framework-go-ext` is shorter than extension suffix... I'd vote for it","username":"Baha-sk","ts":"2020-09-30T20:21:38.419Z"}
{"msg":"`aries-framework-go-ext` suggested by @rolsonquadras is shorter than with extension suffix... I'd vote for it","username":"Baha-sk","ts":"2020-09-30T20:21:38.419Z"}
{"msg":"aries-framework-go-extension / aries-framework-go-addon --> I agree with @rolsonquadras regarding naming convention","username":"sudeshrshetty","ts":"2020-09-30T20:21:59.286Z"}
{"msg":"Beyond the name, we should also discuss the folder hierarchy of the extension repo.","username":"troyronda","ts":"2020-09-30T20:23:21.990Z"}
{"msg":"I would go for 'hyperledger/aries-framework-go-extension' glueing together all the components (one repo - many go.mod files).","username":"sudeshrshetty","ts":"2020-09-30T20:23:47.879Z"}
{"msg":"E.g., where would an Indy VDR and a Mongo store provider sit in the folder hierarchy. Assume that each of those is its own go.mod in the extension monorepo.","username":"troyronda","ts":"2020-09-30T20:24:16.205Z"}
{"msg":"I think we might also consider moving other non-default packages over there too (that aren't need for out-of-the-box hyperledger docker images, wasm, and gomobile builds).","username":"troyronda","ts":"2020-09-30T20:25:54.156Z"}
{"msg":"for VDRIs, aries-framework-go has them in pkg/vdri/.... so Indy VDR would follow the same path, ie `pkg/vdri/indy`","username":"Baha-sk","ts":"2020-09-30T20:26:13.521Z"}
{"msg":"aries-framework-go-extension/store, aries-framework-go-extension/vdri, etc.","username":"rolsonquadras","ts":"2020-09-30T20:27:12.233Z"}
{"msg":"and likewise for MongoDB.. it would go in `pkg/storage/mongodb`","username":"Baha-sk","ts":"2020-09-30T20:27:13.251Z"}
{"msg":"The repo should be considered a monorepo.","username":"troyronda","ts":"2020-09-30T20:27:17.123Z"}
{"msg":"no top-level go.mod","username":"troyronda","ts":"2020-09-30T20:27:34.698Z"}
{"msg":"yep, that sounds right.","username":"pfeairheller","ts":"2020-09-30T20:27:41.436Z"}
{"msg":"ok, Thant that won't work","username":"Baha-sk","ts":"2020-09-30T20:27:45.137Z"}
{"msg":"ok, then that won't work","username":"Baha-sk","ts":"2020-09-30T20:27:45.137Z"}
{"msg":"aries-framework-go-extension/store/mongodb, aries-framework-go-extension/vdri/indy","username":"rolsonquadras","ts":"2020-09-30T20:27:45.843Z"}
{"msg":"actual code base can go in - aries-framework-go-extension/store/mongodb, aries-framework-go-extension/vdri/indy","username":"rolsonquadras","ts":"2020-09-30T20:27:45.843Z"}
{"msg":"something/storage/mongodb/go.mod","username":"troyronda","ts":"2020-09-30T20:28:04.078Z"}
{"msg":"because we lose the package path in the name","username":"Baha-sk","ts":"2020-09-30T20:28:11.567Z"}
{"msg":"something/vdri/indy/go.mod","username":"troyronda","ts":"2020-09-30T20:28:25.214Z"}
{"msg":"and presumably something/vdri/indy/go.mod","username":"troyronda","ts":"2020-09-30T20:28:25.214Z"}
{"msg":"I.e., something/vdri/indy/go.mod","username":"troyronda","ts":"2020-09-30T20:28:25.214Z"}
{"msg":"something/vdri/indy/go.mod","username":"troyronda","ts":"2020-09-30T20:28:25.214Z"}
{"msg":"I would also imagine something/vdri/indy/pkg/foo","username":"troyronda","ts":"2020-09-30T20:28:41.491Z"}
{"msg":"and presumably something/vdri/indy/pkg/foo","username":"troyronda","ts":"2020-09-30T20:28:41.491Z"}
{"msg":"sounds good to me","username":"sudeshrshetty","ts":"2020-09-30T20:28:48.400Z"}
{"msg":"What would the parent folder be of all the modules?","username":"troyronda","ts":"2020-09-30T20:29:43.223Z"}
{"msg":"What would be the parent folder of all the modules?","username":"troyronda","ts":"2020-09-30T20:29:43.223Z"}
{"msg":"i.e., what is \"something\"","username":"troyronda","ts":"2020-09-30T20:30:08.672Z"}
{"msg":"addons, extensions, providers, components","username":"sudeshrshetty","ts":"2020-09-30T20:30:14.358Z"}
{"msg":"@sudeshrshetty I like \"providers\" as well along with \"extensions\".","username":"rolsonquadras","ts":"2020-09-30T20:31:21.359Z"}
{"msg":"httpbinding, key and peer VDRIs are single end packages (no children), I wonder if Indy VDR would have children packages","username":"Baha-sk","ts":"2020-09-30T20:31:25.836Z"}
{"msg":"View each of these folders like its own repo that happens to be in the larger mono-repo.","username":"troyronda","ts":"2020-09-30T20:32:03.883Z"}
{"msg":"yeah, ok","username":"Baha-sk","ts":"2020-09-30T20:32:21.766Z"}
{"msg":"I think \"providers\" is a generic word for a service provider ... we're talking about framework `addons` more specifically","username":"Baha-sk","ts":"2020-09-30T20:33:38.816Z"}
{"msg":"I'd lean towards `addons` or `extensions`","username":"pfeairheller","ts":"2020-09-30T20:36:05.547Z"}
{"msg":"Has joined the channel.","username":"tarkochevamik","ts":"2020-09-30T20:37:59.778Z","type":"uj"}
{"msg":"So repo name suggestions so far: aries-framework-go-ext, aries-framework-go-extension, aries-framework-go-addon","username":"troyronda","ts":"2020-09-30T20:38:04.235Z"}
{"msg":"I think `addons` was the top level package in the new repo","username":"Baha-sk","ts":"2020-09-30T20:38:50.409Z"}
{"msg":"that would be a folder not a package.","username":"troyronda","ts":"2020-09-30T20:39:29.748Z"}
{"msg":"oh @sudeshrshetty suggested","username":"Baha-sk","ts":"2020-09-30T20:39:35.409Z"}
{"msg":"oh @sudeshrshetty suggested `aries-framework-go-addon`","username":"Baha-sk","ts":"2020-09-30T20:39:35.409Z"}
{"msg":"yeah, a top level folder","username":"Baha-sk","ts":"2020-09-30T20:39:45.560Z"}
{"msg":"I also agree with @rolsonquadras regarding the \"extension/addon\" part being after \"go\"... e.g. aries-framework-go-extension","username":"DerekTrider","ts":"2020-09-30T21:06:12.652Z"}
{"msg":"example:\naries-framework-go-ext/extensions/storage/mongodb/go.mod\n  or \naries-framework-go-ext/addons/storage/mongodb/go.mod","username":"sudeshrshetty","ts":"2020-09-30T21:16:30.602Z"}
{"msg":"So far the main suggestion for the repo name is aries-framework-go-ext unless someone has a catchy abbreviation for framework-go :).","username":"troyronda","ts":"2020-10-01T14:24:31.616Z"}
{"msg":"(the acapy abbreviation enabled aries-acapy-controllers and aries-acapy-plugin-toolbox repo names)","username":"troyronda","ts":"2020-10-01T14:25:43.867Z"}
{"msg":"If we could rename it framework-aries-go then we could abbreviate to `fargo`  :-)","username":"pfeairheller","ts":"2020-10-05T11:11:42.557Z"}
{"msg":"Can Alice and Bob connect without Faber?","username":"sj1 4","ts":"2020-10-06T07:50:41.888Z"}
{"msg":"db path","username":"sj1 4","ts":"2020-10-06T08:10:48.156Z"}
{"msg":"ha.","username":"troyronda","ts":"2020-10-07T13:37:54.950Z"}
{"msg":"When Ry comes online, I'll ask him to create the repo.","username":"troyronda","ts":"2020-10-07T13:38:12.240Z"}
{"msg":"Great, we'll look at moving `scoir/aries-storage-mongo` over and update Canis on our side","username":"m00sey","ts":"2020-10-07T13:54:12.506Z"}
{"msg":"The current thinking is that the core framework repo will focus on supporting extension integration AND have a limited out-of-the-box for REST services (KMS, EDV, DID resolution) along with support for \"local\" databases (currently the native build with levelDB and the WASM build with indexDB) and for the \"core\" DID methods (currently did:peer, did:key) and the \"local\" KMS.","username":"troyronda","ts":"2020-10-07T15:52:32.115Z"}
{"msg":"The current thinking is that the core framework repo will focus on supporting extension integration AND have a limited out-of-the-box for REST services (KMS, EDV, DID resolution) along with support for \"local\" databases (currently the native build with levelDB; the WASM build with indexDB; and the memory store) and for the \"core\" DID methods (currently did:peer, did:key) and the \"local\" KMS.","username":"troyronda","ts":"2020-10-07T15:52:32.115Z"}
{"msg":"The current thinking is that the core framework repo will focus on supporting extension integration AND have out-of-the-box support for REST services (KMS, EDV, DID resolution) along with support for \"local\" databases (currently the native build with levelDB; the WASM build with indexDB; and the memory store) and for the \"core\" DID methods (currently did:peer, did:key) and the \"local\" KMS.","username":"troyronda","ts":"2020-10-07T15:52:32.115Z"}
{"msg":"@m00sey @pfeairheller the repo is created: https://github.com/hyperledger/aries-framework-go-ext/","username":"troyronda","ts":"2020-10-07T15:55:48.392Z"}
{"msg":"so for things existing like `storage/couchdb`, is the plan to add those to `go-ext` then \"at some point\" switch to using those vs the internal ones in the framework? Do we want/need to create github issues to extract them?","username":"m00sey","ts":"2020-10-07T15:59:13.207Z"}
{"msg":"@m00sey yup. https://github.com/hyperledger/aries-framework-go-ext/issues/2","username":"troyronda","ts":"2020-10-07T16:03:51.466Z"}
{"msg":"But it would be removed from aries-framework-go rather than switched.","username":"troyronda","ts":"2020-10-07T16:04:23.766Z"}
{"msg":"External projects can import them from aries-framework-go-ext","username":"troyronda","ts":"2020-10-07T16:04:41.965Z"}
{"msg":"External projects can import them from aries-framework-go-ext.","username":"troyronda","ts":"2020-10-07T16:04:41.965Z"}
{"msg":"sounds good","username":"m00sey","ts":"2020-10-07T16:05:25.445Z"}
{"msg":"Basically the concept is that you have two options for extended storage - use an EDV that has that storage and configure the REST API OR have your own build that includes the framework and injects the extended storage of your choice.","username":"troyronda","ts":"2020-10-07T16:06:17.701Z"}
{"msg":"Basically the concept is that you have two options for extended storage - use a Secure Data Store (EDV) that has that storage and configure the REST API OR have your own build that includes the framework and injects the extended storage of your choice.","username":"troyronda","ts":"2020-10-07T16:06:17.701Z"}
{"msg":"Basically the concept is that you have two options for extended storage - use a Secure Data Store (EDV) that has that storage and configure the REST endpoint OR have your own build that includes the framework and injects the extended storage of your choice.","username":"troyronda","ts":"2020-10-07T16:06:17.701Z"}
{"msg":"Hi everyone, I have a question about the open api demo.\nIn \"accept-request-presentation\", there is a payload required to encode before made the reqest.","username":"CyrilLeung","ts":"2020-10-08T09:07:39.270Z"}
{"msg":"Hi everyone, I have a question about the open api demo.\nIn \"accept-request-presentation\", there is a payload required to encode before made the request.\nWhat encoding method is used in that part of payload ?  Thank you","username":"CyrilLeung","ts":"2020-10-08T09:07:39.270Z"}
{"msg":"@kdimak","username":"troyronda","ts":"2020-10-08T17:44:08.331Z"}
{"msg":"FYI: aries-framework-go will get soon get a support of *BBS+ signature suite* (https://w3c-ccg.github.io/ldp-bbs2020) what includes support of Zero-Knowledge Proofs. The implementation will be compliant with https://github.com/mattrglobal/jsonld-signatures-bbs (my Mattr). The estimation of the first release is the end of October.","username":"kdimak","ts":"2020-10-09T13:01:53.124Z"}
{"msg":"@kdimak : @pfeairheller & team are also working on BBS+ features. Perhaps you folks could compare notes? All of us would like BBS+ in as soon as we can (and tested for interop).","username":"troyronda","ts":"2020-10-09T13:33:28.129Z"}
{"msg":"Hi @kdimak.  We would love to set up a conversation about how we can work together on this.  We have one full time engineer dedicated to this effort.","username":"pfeairheller","ts":"2020-10-09T13:38:46.154Z"}
{"msg":"Hi @pfeairheller . Nice to hear, let's move things forward together!\nIn brief, we are using https://github.com/kilic/bls12-381 as a base library, but also use https://github.com/phoreproject/bls for ~FR~ calculations which are not implemented in bls12-381.\nWe consider https://github.com/hyperledger/ursa/tree/master/libzmix/bbs as a reference of BLS+BLS12-381 implementation, and https://github.com/mattrglobal/jsonld-signatures-bbs (Mattr) as a reference of BBS+ signature one.\nI am gonna make soon a first PR in aries-framework-go which will support VC/VP signature verification (BbsBlsSignature2020) generated by Mattr. I will post the link to this PR later on (as it's still WIP). Further plans:\n- VC/VP BBS+ signature signing\n- BSS+ signature suite interop tests (with Mattr)\n- BSS+ selective disclosure","username":"kdimak","ts":"2020-10-09T13:49:33.191Z"}
{"msg":"Hi @pfeairheller . Nice to hear, let's move things forward together!\nIn brief, we are using https://github.com/kilic/bls12-381 as a base library, but also use https://github.com/phoreproject/bls for `FR` calculations which are not implemented in bls12-381.\nWe consider https://github.com/hyperledger/ursa/tree/master/libzmix/bbs as a reference of BLS+BLS12-381 implementation, and https://github.com/mattrglobal/jsonld-signatures-bbs (Mattr) as a reference of BBS+ signature one.\nI am gonna make soon a first PR in aries-framework-go which will support VC/VP signature verification (BbsBlsSignature2020) generated by Mattr. I will post the link to this PR later on (as it's still WIP). Further plans:\n- VC/VP BBS+ signature signing\n- BSS+ signature suite interop tests (with Mattr)\n- BSS+ selective disclosure","username":"kdimak","ts":"2020-10-09T13:49:33.191Z"}
{"msg":"Has joined the channel.","username":"MALodder","ts":"2020-10-09T13:54:59.480Z","type":"uj"}
{"msg":"Youâ€™ll have to modify the kilic library to accept the Blake2b hash function instead of hard coded to Sha256","username":"MALodder","ts":"2020-10-09T13:56:11.519Z"}
{"msg":"Happy to help on this","username":"MALodder","ts":"2020-10-09T13:56:23.148Z"}
{"msg":"Hi @MALodder ! I am really happy to meet you! I recently looked a lot through your Rust code at `libursa`! :)","username":"kdimak","ts":"2020-10-09T13:57:52.384Z"}
{"msg":"We are also using the `ursa` Rust code as the reference implementation","username":"pfeairheller","ts":"2020-10-09T13:58:44.721Z"}
{"msg":"@MALodder I saw your PR https://github.com/kilic/bls12-381/pull/15, we make use of it here: https://github.com/trustbloc/bls12-381/pull/1","username":"kdimak","ts":"2020-10-09T14:00:54.740Z"}
{"msg":"What `Fr` calculations are not in kilic","username":"MALodder","ts":"2020-10-09T14:01:00.656Z"}
{"msg":"You can use `math.big` mod Q","username":"MALodder","ts":"2020-10-09T14:01:35.057Z"}
{"msg":"We can get Q from G1.Q","username":"MALodder","ts":"2020-10-09T14:01:58.522Z"}
{"msg":"I will try that, thanks @MALodder !","username":"kdimak","ts":"2020-10-09T14:03:37.911Z"}
{"msg":"What's your plan regarding https://github.com/mikelodder7/go-bbs-signatures?","username":"kdimak","ts":"2020-10-09T14:04:30.766Z"}
{"msg":"What's your plan regarding https://github.com/mikelodder7/go-bbs-signatures? @MALodder","username":"kdimak","ts":"2020-10-09T14:04:30.766Z"}
{"msg":"I think we can contribute to this repo, so that it could be the common point of contribution together with @pfeairheller (just guessing...)","username":"kdimak","ts":"2020-10-09T14:06:16.108Z"}
{"msg":"Yes it would!  ","username":"pfeairheller","ts":"2020-10-09T14:06:35.976Z"}
{"msg":"Hello! I'm the engineer @pfeairheller was referring to. I've been using https://github.com/mikelodder7/go-bbs-signatures and would love to help!","username":"tarkochevamik","ts":"2020-10-09T14:12:34.125Z"}
{"msg":"Hello @tarkochevamik ! I believe you forked it and did some enhancements. What's available there for now? Can you share it with us?","username":"kdimak","ts":"2020-10-09T14:15:50.213Z"}
{"msg":"I updated `proofChallenge.go` to fix a compile error but it looks like we'll need to make the fields in the structs public. Based on what I was doing I though it would be best to keep all core operations outlined in the Mattr doc in go-bbs-signatures but am curious on your thoughts of where they should live?","username":"tarkochevamik","ts":"2020-10-09T14:19:43.005Z"}
{"msg":"yeah, makes sense\nI would also add API for signing and verification, as well as for the generation of selective disclosure. Maybe this could be deemed as the reference for the API: https://github.com/mattrglobal/node-bbs-signatures/blob/master/native/src/lib.rs","username":"kdimak","ts":"2020-10-09T14:25:52.133Z"}
{"msg":"I can make more detailed input on this on Monday next week.","username":"kdimak","ts":"2020-10-09T14:27:29.903Z"}
{"msg":"I'm happy to donate it as the starting point","username":"MALodder","ts":"2020-10-09T14:35:33.359Z"}
{"msg":"and offer coaching and reviews to make sure it works as the ursa impl","username":"MALodder","ts":"2020-10-09T14:35:46.342Z"}
{"msg":"wow, nice! I bye it :)\nlet me prepare a bit to build a list of questions and action items...","username":"kdimak","ts":"2020-10-09T14:40:48.671Z"}
{"msg":"+1","username":"MALodder","ts":"2020-10-09T14:47:19.956Z"}
{"msg":"btw could you @MALodder share with us the links to the specs / articles you used when developing `bbs`/`bls` which can be useful for us as well?","username":"kdimak","ts":"2020-10-09T14:52:42.087Z"}
{"msg":"all the references are here https://github.com/hyperledger/ursa/tree/master/libzmix/bbs","username":"MALodder","ts":"2020-10-09T14:56:16.524Z"}
{"msg":"Great, thanks for the offer.  ","username":"pfeairheller","ts":"2020-10-09T14:56:27.831Z"}
{"msg":"the README.md contains all the papers","username":"MALodder","ts":"2020-10-09T14:56:31.314Z"}
{"msg":"thank you!","username":"kdimak","ts":"2020-10-09T14:56:50.604Z"}
{"msg":"https://github.com/hyperledger/ursa/tree/master/libzmix/bbs","username":"MALodder","ts":"2020-10-09T15:01:57.576Z"}
{"msg":"I put all my reference papers in That README.md","username":"MALodder","ts":"2020-10-09T15:02:13.129Z"}
{"msg":"The direct math used is found https://eprint.iacr.org/2016/663.pdf","username":"MALodder","ts":"2020-10-09T15:04:27.908Z"}
{"msg":"Section 4.3","username":"MALodder","ts":"2020-10-09T15:04:31.925Z"}
{"msg":"otherwise feel free to ask about the math or the rust code","username":"MALodder","ts":"2020-10-09T15:05:12.024Z"}
{"msg":"Thank you @MALodder !","username":"kdimak","ts":"2020-10-09T16:06:52.905Z"}
{"msg":"Has joined the channel.","username":"swcurran","ts":"2020-10-09T17:37:26.377Z","type":"uj"}
{"msg":"https://github.com/hyperledger/aries-framework-go/pull/2225","username":"troyronda","ts":"2020-10-11T20:53:07.733Z"}
{"msg":"feat: BBS+ signature verification","username":"troyronda","ts":"2020-10-11T20:53:44.740Z"}
{"msg":"Has joined the channel.","username":"tplooker","ts":"2020-10-11T21:32:23.659Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-go?msg=3xzKMgioZsPyAAhMK) Sorry, Can anyone give some more hints on how the base64 data encode from JSON in \"accept-request-presentation\" of open API Demo ?\nSince I try to use the data provided and encode to base64, that is not the same with the hash mention in the document.\nThank you very much.","username":"CyrilLeung","ts":"2020-10-12T03:46:24.220Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=3xzKMgioZsPyAAhMK","url":"https://chat.hyperledger.org/channel/aries-go?msg=3xzKMgioZsPyAAhMK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"ankita.p17","ts":"2020-10-12T08:35:57.657Z","type":"uj"}
{"msg":"@kdimak Do you have a list of features that are needed in @MALodder BBS+ implementation (but aren't there yet)? It would be nice to remove these forked dependencies once things are working.","username":"troyronda","ts":"2020-10-13T14:05:02.233Z"}
{"msg":"(forked dependencies being github.com/kilic/bls12-381 and github.com/phoreproject/bls)","username":"troyronda","ts":"2020-10-13T14:06:05.311Z"}
{"msg":"the main dependency is a bls12-381 library","username":"MALodder","ts":"2020-10-13T14:06:51.365Z"}
{"msg":"(forked at https://github.com/trustbloc/bls12-381 and https://github.com/trustbloc/bls)","username":"troyronda","ts":"2020-10-13T14:07:23.402Z"}
{"msg":"the kilic library is the one I prefer","username":"MALodder","ts":"2020-10-13T14:07:39.178Z"}
{"msg":"that's the only dependecy","username":"MALodder","ts":"2020-10-13T14:08:20.378Z"}
{"msg":"no others","username":"MALodder","ts":"2020-10-13T14:08:40.979Z"}
{"msg":"@kdimak made these changes in bls12-381 (fork): https://github.com/trustbloc/bls12-381/pull/1 and https://github.com/trustbloc/bls12-381/pull/2","username":"troyronda","ts":"2020-10-13T14:09:39.894Z"}
{"msg":"@kdimak made these changes in bls (fork): https://github.com/trustbloc/bls/pull/1","username":"troyronda","ts":"2020-10-13T14:11:13.372Z"}
{"msg":"right, that's it","username":"MALodder","ts":"2020-10-13T14:11:22.842Z"}
{"msg":"BBS+ uses Blakeb instead of SHA256","username":"MALodder","ts":"2020-10-13T14:11:43.879Z"}
{"msg":"@MALodder Would aspects of the above would we replace with your code?","username":"troyronda","ts":"2020-10-13T14:12:01.401Z"}
{"msg":"not sure what you mean","username":"MALodder","ts":"2020-10-13T14:13:01.835Z"}
{"msg":"Oh - I thought you had some code to use as a starting point. I wasn't sure which aspects you had.","username":"troyronda","ts":"2020-10-13T14:14:30.007Z"}
{"msg":"for the BBS+ yes","username":"MALodder","ts":"2020-10-13T14:14:38.983Z"}
{"msg":"https://github.com/mikelodder7/go-bbs-signatures","username":"MALodder","ts":"2020-10-13T14:15:06.068Z"}
{"msg":"Ah ok. So you had a fork of bls12-381 that isn't available anymore (i assume difference was https://github.com/kilic/bls12-381/pull/15).","username":"troyronda","ts":"2020-10-13T14:17:45.103Z"}
{"msg":"Ah ok. So you had a fork of bls12-381 that isn't available anymore (i assume the difference was https://github.com/kilic/bls12-381/pull/15).","username":"troyronda","ts":"2020-10-13T14:17:45.103Z"}
{"msg":"ah yes I had but it looks like https://github.com/trustbloc/bls12-381/pull/1 does the same thing","username":"MALodder","ts":"2020-10-13T14:18:13.404Z"}
{"msg":"cool.","username":"troyronda","ts":"2020-10-13T14:18:31.920Z"}
{"msg":"@kdimak","username":"troyronda","ts":"2020-10-13T14:18:47.404Z"}
{"msg":"@kdimak ^^^^","username":"troyronda","ts":"2020-10-13T14:18:47.404Z"}
{"msg":"So if I understand properly:\n- we should continue with kilic/bls12-381.\n- try to get the PRs into that upstream (or otherwise figure out the fork strategy).\n- what about the other bls dependency (from phoreproject)? do we need both?\n- see if there is code from go-bbs-signatures that can be incorporated.","username":"troyronda","ts":"2020-10-13T14:22:06.351Z"}
{"msg":"So if I understand properly:\n- we should continue with kilic/bls12-381.\n- try to get the PRs into that upstream (or otherwise figure out the fork strategy).\n- what about the other bls dependency (from phoreproject)? do we need both?\n- see if there is code from go-bbs-signatures that can be incorporated into aries-framework-go.","username":"troyronda","ts":"2020-10-13T14:22:06.351Z"}
{"msg":"(and see about merging the efforts of go-bbs-sigantures, @kdimak, @tarkochevamik )","username":"troyronda","ts":"2020-10-13T14:24:39.803Z"}
{"msg":"(and see about merging the efforts of go-bbs-sigantures, @kdimak, and @tarkochevamik )","username":"troyronda","ts":"2020-10-13T14:24:39.803Z"}
{"msg":"my two cents, I was expecting `go-bbs-signatures` to be what`aries-framework-go` used for BBS+ related operations, and that any work done would ultimately come back to that repo under the stewardship of @MALodder ?","username":"m00sey","ts":"2020-10-13T14:24:56.113Z"}
{"msg":"I'm fine either way","username":"MALodder","ts":"2020-10-13T14:25:18.165Z"}
{"msg":"I haven't had much time to develop go-bbs-signatures lately","username":"MALodder","ts":"2020-10-13T14:25:34.376Z"}
{"msg":"But most likely you will be the point of reference/guidance for folks implementing it","username":"m00sey","ts":"2020-10-13T14:25:58.600Z"}
{"msg":"that was my main rational","username":"m00sey","ts":"2020-10-13T14:26:03.234Z"}
{"msg":"I think it would be nice to push the code into aries-framework-go (if we can) to reduce dependencies.","username":"troyronda","ts":"2020-10-13T14:26:12.093Z"}
{"msg":"Yeah, I think it's a balance, there may be use for `go-bbs-signatures` outside of aries (I appreciate aries is our main concern though)","username":"m00sey","ts":"2020-10-13T14:26:48.934Z"}
{"msg":"Similar with the Verifiable Credential, DIDs, JSON-LD signatures libraries that are already in the framework codebase :).","username":"troyronda","ts":"2020-10-13T14:27:49.283Z"}
{"msg":"https://github.com/hyperledger/aries-framework-go/tree/master/pkg/doc","username":"troyronda","ts":"2020-10-13T14:29:26.321Z"}
{"msg":"yeah, very true.","username":"m00sey","ts":"2020-10-13T14:30:07.256Z"}
{"msg":"This is basically happening since it is nice to have this code under hyperledger.","username":"troyronda","ts":"2020-10-13T14:30:28.104Z"}
{"msg":"To clarify, I think if `kilic/bls12-381` is a dependency for `go-bbs-signatures` then that should be managed inside of `go-bbs-signatures`, not `aries-framework-go` that way if `go-bbs-signatures` decides to switch from `kilic/bls12-381` to `trustbloc/bls12-381` it doesn't impact aries, but is work done inside of `go-bbs` that's my only thought","username":"m00sey","ts":"2020-10-13T14:38:26.343Z"}
{"msg":"we're ( @tarkochevamik ) happy to support  the efforts anyway we can","username":"m00sey","ts":"2020-10-13T14:39:00.470Z"}
{"msg":"We would probably consider bringing that fork into an internal folder of this repo (if we cannot get PRs into the upstream).","username":"troyronda","ts":"2020-10-13T14:40:25.400Z"}
{"msg":"I am concerned that @MALodder PR didn't make progress there: https://github.com/kilic/bls12-381/pull/15","username":"troyronda","ts":"2020-10-13T14:43:17.269Z"}
{"msg":"it didn't it sat there for a long time","username":"MALodder","ts":"2020-10-13T14:43:45.909Z"}
{"msg":"fork bls12-381 under hyper ledger? last changes were four months ago, and I think we all agree things will be moving fairly fast?","username":"m00sey","ts":"2020-10-13T14:45:10.999Z"}
{"msg":"or is that what the trustbloc fork is?","username":"m00sey","ts":"2020-10-13T14:45:23.811Z"}
{"msg":"ah ok  it is.","username":"m00sey","ts":"2020-10-13T14:46:15.695Z"}
{"msg":"\"fork bls12-381\" - this would be an internal folder like aries-framework-go/internal/github.com/kilic/bls12-381","username":"troyronda","ts":"2020-10-13T14:47:55.123Z"}
{"msg":"\"fork bls12-381\" - this would be an internal folder in the form of aries-framework-go/internal/github.com/kilic/bls12-381","username":"troyronda","ts":"2020-10-13T14:47:55.123Z"}
{"msg":"and hopefully @kdimak can discuss if he thinks it is possible to remove the other dependency on phoreproject/bls","username":"troyronda","ts":"2020-10-13T14:50:53.510Z"}
{"msg":"yeah, I think we can remove dependency on phoreproject/bls, the only important thing we use from this lib is FR type ()","username":"kdimak","ts":"2020-10-13T16:15:07.157Z"}
{"msg":"yeah, I think we can remove dependency on phoreproject/bls, the only important thing we use from this lib is FR type","username":"kdimak","ts":"2020-10-13T16:15:07.157Z"}
{"msg":"@MALodder already explained that we can use math.big mod Q and get Q from G1.Q\nI have not checked this yet though, but I saw smth in `go-bbs-signatures`","username":"kdimak","ts":"2020-10-13T16:16:22.886Z"}
{"msg":"I checked BBS+ signature verification path so far, and I found one discrepancy between `kilic/bls12-381` and `URSA` algorithms.","username":"kdimak","ts":"2020-10-13T16:17:49.083Z"}
{"msg":"It's in `HashToCurve()` function. I think we will need help from @MALodder in this matter.","username":"kdimak","ts":"2020-10-13T16:18:55.235Z"}
{"msg":"kliic library supports this","username":"MALodder","ts":"2020-10-13T16:19:20.189Z"}
{"msg":"yeah, bjt","username":"kdimak","ts":"2020-10-13T16:19:35.604Z"}
{"msg":"yeah, but it generates G1 points which do not pass the signature check later on","username":"kdimak","ts":"2020-10-13T16:19:35.604Z"}
{"msg":"https://github.com/trustbloc/bls12-381/pull/2/files","username":"kdimak","ts":"2020-10-13T16:20:10.873Z"}
{"msg":"^^^ here is a PR which fixes that","username":"kdimak","ts":"2020-10-13T16:20:21.633Z"}
{"msg":"to be honest I just re-wrote Rust code","username":"kdimak","ts":"2020-10-13T16:20:31.452Z"}
{"msg":"the kilic algorithm does not do this really complex `chain_pm3div4()`","username":"kdimak","ts":"2020-10-13T16:20:55.562Z"}
{"msg":"what is needed?","username":"MALodder","ts":"2020-10-13T16:20:56.009Z"}
{"msg":"implementing the hash2cuve?","username":"MALodder","ts":"2020-10-13T16:21:12.982Z"}
{"msg":"to compare the code of Rust-based impl of `osswu map` ( https://github.com/trustbloc/bls12-381/blob/ba2e87ef05efdd119a162c62f32c98a491587847/g1.go#L562)","username":"kdimak","ts":"2020-10-13T16:22:35.364Z"}
{"msg":"with kilic impl","username":"kdimak","ts":"2020-10-13T16:22:39.030Z"}
{"msg":"https://github.com/kilic/bls12-381/blob/6b2c1999639149c75485c0519940cbf82a2a7a90/swu.go#L5","username":"kdimak","ts":"2020-10-13T16:23:07.930Z"}
{"msg":"if we use `swuMapG1()` from kilic, different G1 point is returned and later the signature verification fails (on 2 pair comparison)","username":"kdimak","ts":"2020-10-13T16:25:14.172Z"}
{"msg":"I see","username":"MALodder","ts":"2020-10-13T16:25:29.191Z"}
{"msg":"to recall, HashToCurve is used to generate h0, hi","username":"kdimak","ts":"2020-10-13T16:25:41.069Z"}
{"msg":"that's interesting because I've used the kilic library to hash to curve for other crypto signatures like BLS and it works just fine","username":"MALodder","ts":"2020-10-13T16:26:07.870Z"}
{"msg":"yeah\nI don't know the internals of these algorithms so your help @MALodder should save the world :)","username":"kdimak","ts":"2020-10-13T16:27:22.016Z"}
{"msg":"I suspect what is going on is that https://github.com/kilic/bls12-381/blob/master/hash_to_field.go#L9 is wrong","username":"MALodder","ts":"2020-10-13T16:28:24.674Z"}
{"msg":"outLen should be dependent on the curve","username":"MALodder","ts":"2020-10-13T16:28:42.842Z"}
{"msg":"double checking","username":"MALodder","ts":"2020-10-13T16:29:02.615Z"}
{"msg":"in your PR (), you are using\n```\n\th := f()\n\tlenPerElm := h.Size() * 2\n\tlenInBytes := count * lenPerElm\n\trandBytes := expandMsgXMD(f, msg, domain, lenInBytes)\n```\n\nbut `lenInBytes` differs from the value we get in `URSA` (two times bigger value)...","username":"kdimak","ts":"2020-10-13T16:37:30.081Z"}
{"msg":"we should probably use `lenPerElm := h.Size()` here...","username":"kdimak","ts":"2020-10-13T16:39:39.054Z"}
{"msg":"but this change breaks existent kilic tests where default `sha256` hash is used","username":"kdimak","ts":"2020-10-13T16:40:46.922Z"}
{"msg":"my PR is incorrect. If you look at the hash to curve spec lenPerElm is supposed to be based on the curve, not the hash size","username":"MALodder","ts":"2020-10-13T18:12:34.048Z"}
{"msg":"so hard coding it to 64 is just fine","username":"MALodder","ts":"2020-10-13T18:13:13.867Z"}
{"msg":"OK! it's what we have now here: https://github.com/trustbloc/bls12-381/blob/ba2e87ef05efdd119a162c62f32c98a491587847/hash_to_field.go#L8","username":"kdimak","ts":"2020-10-13T21:13:52.800Z"}
{"msg":"(this is the only difference between your PR and what we have in `trustbloc`)","username":"kdimak","ts":"2020-10-13T21:15:03.092Z"}
{"msg":"Any comments on https://github.com/hyperledger/aries-framework-go-ext/issues/4 (extension repo structure)?","username":"troyronda","ts":"2020-10-15T13:28:09.783Z"}
{"msg":"@pfeairheller @m00sey @soluchok @rolsonquadras @sudeshrshetty @firas.qutishat @george.aristy","username":"troyronda","ts":"2020-10-15T13:28:46.540Z"}
{"msg":"reviewing now...","username":"pfeairheller","ts":"2020-10-15T13:29:18.478Z"}
{"msg":"@soluchok is currently working on creating the initial structure and moving the couchdb and mysql code.","username":"troyronda","ts":"2020-10-15T13:46:13.673Z"}
{"msg":"@troyronda reading the issue on proposed structure, I think the global check around license/DCO is appropriate\n\nI was imagining the rest of the checks would be a per `component` basis, just like codecov / release versioning etc will probably be easiest to handle on a per component basis? \nDoes it make sense for each component to have it's own \"job\" in the github action work flow and allow them to be more or less independently built/tested/release?","username":"m00sey","ts":"2020-10-15T14:25:57.802Z"}
{"msg":"@soluchok ^^^","username":"troyronda","ts":"2020-10-15T14:44:16.845Z"}
{"msg":"@m00sey From my PoV, the principle is that component modules must have tests that are required to pass when files in that module directory are changed. We should not run tests for unchanged modules.","username":"troyronda","ts":"2020-10-15T14:57:28.643Z"}
{"msg":"I think module tests should be as self-contained as possible.","username":"troyronda","ts":"2020-10-15T14:57:53.856Z"}
{"msg":"I think there is an interesting question about testing the common interface for a component.","username":"troyronda","ts":"2020-10-15T14:58:05.184Z"}
{"msg":"I'm not entirely sure if codecov supports the monorepo style or not - certainly it supports patch level checks regardless.","username":"troyronda","ts":"2020-10-15T15:01:15.177Z"}
{"msg":"I'm not sure if codecov supports the monorepo style or not - certainly it supports patch level checks regardless. This is one of the open questions.","username":"troyronda","ts":"2020-10-15T15:01:15.177Z"}
{"msg":"Versioning strategy is another open question as technically tags are at the repo level.","username":"troyronda","ts":"2020-10-15T15:03:08.660Z"}
{"msg":"Re: Does it make sense for each component to have it's own \"job\"... This is one of two ways to handle.","username":"troyronda","ts":"2020-10-15T15:08:51.438Z"}
{"msg":"(the other possibility being a global workflow that runs well-known targets for each changed module directory).","username":"troyronda","ts":"2020-10-15T15:09:18.417Z"}
{"msg":"(the other possibility being a global workflow that runs well-known make targets for each changed module directory).","username":"troyronda","ts":"2020-10-15T15:09:18.417Z"}
{"msg":"I might actually be a fan of the common interface for running, and just use a build matrix containing each component","username":"m00sey","ts":"2020-10-15T15:14:49.964Z"}
{"msg":"@troyronda Here are my thoughts - If don't have any common code between modules, then job for each module makes more sense. Also, I prefer if it can be run for all the codebase in that module, sometime code changes affect unchanged code as well. If we have common code (like top level /pkg/), then I feel its better to run globally. Changes in common code might affect unchanged code in each module. In short, if we have common code then run global checks/test, else have module specific jobs.","username":"rolsonquadras","ts":"2020-10-15T15:19:42.893Z"}
{"msg":"@rolsonquadras I meant run tests for the entire module but not for other unchanged modules.","username":"troyronda","ts":"2020-10-15T15:21:14.042Z"}
{"msg":"@rolsonquadras I meant run tests for the entire changed module but not for other unchanged modules.","username":"troyronda","ts":"2020-10-15T15:21:14.042Z"}
{"msg":"Broken tests in another module shouldn't affect a PR :).","username":"troyronda","ts":"2020-10-15T15:21:43.676Z"}
{"msg":"We don't yet have top-level common code (at /pkg/) - that would have its own considerations.","username":"troyronda","ts":"2020-10-15T15:22:41.917Z"}
{"msg":"@troyronda oh ok, that makes sense. I guess, then the question is whether we gonna have common code for modules.","username":"rolsonquadras","ts":"2020-10-15T15:22:50.954Z"}
{"msg":"ok, if we dont have it now, then job per module makes sense.","username":"rolsonquadras","ts":"2020-10-15T15:23:07.013Z"}
{"msg":"It's better it have one global workflow to manage modules","username":"firas.qutishat","ts":"2020-10-15T15:25:37.239Z"}
{"msg":"It's better have one global workflow to manage modules","username":"firas.qutishat","ts":"2020-10-15T15:25:37.239Z"}
{"msg":"(my opinion) anything in this repo shouldn't have shared code.\n\nMy mental model is that this repo is an umbrella, under which reside components I can pick and choose which to use. \nSo versioning/building/testing all happens at the component level.\n\nSo while I may clone `aries-framework-go-ext` I would use it via `go get github.com/hyperledger/aries-framework-go/storage/mongo@v0.1.0`\n\nHowever I've never tried to build a repo in such a way so it may not be feasible to structure it that way? :)","username":"m00sey","ts":"2020-10-15T15:27:13.756Z"}
{"msg":"Also, my mental model may be incorrect :)","username":"m00sey","ts":"2020-10-15T15:27:30.132Z"}
{"msg":"You would use that command, but the tag is global to the repo.","username":"troyronda","ts":"2020-10-15T15:28:11.017Z"}
{"msg":"The problem with that is if bump mongo to 0.1.0, someone else bumps vdr-indy to 0.2.0, I bump mongo to 0.3.0 but I want to keep vdr-indy at 0.1.0 code, I can't.\n\nThat was my point about versioning at the component level, which should be viable with a go.mod at each component","username":"m00sey","ts":"2020-10-15T15:35:54.954Z"}
{"msg":"@m00sey go module versions are from the the repo tag.","username":"troyronda","ts":"2020-10-15T15:36:15.899Z"}
{"msg":"I seem to have overlooked that glaringly obvious fact","username":"m00sey","ts":"2020-10-15T15:39:13.548Z"}
{"msg":"we might need to consider a regular cadence of tags.","username":"troyronda","ts":"2020-10-15T15:47:58.275Z"}
{"msg":"(and also where the tags might be aligned with the common interface changes).","username":"troyronda","ts":"2020-10-15T15:53:46.807Z"}
{"msg":"Has joined the channel.","username":"braduf","ts":"2020-10-15T22:43:03.312Z","type":"uj"}
{"msg":"Hi, what is the current state of vdri-indy package? can't find this functionality in latest version.","username":"vladyslavmunin","ts":"2020-10-16T08:47:31.535Z"}
{"msg":"Hi, what is the current state of vdri-indy package? can't find this functionality in the latest version.","username":"vladyslavmunin","ts":"2020-10-16T08:47:31.535Z"}
{"msg":"I will be pushing a PR to the new ext repo this weekend, hopefully.  ","username":"pfeairheller","ts":"2020-10-16T10:00:52.531Z"}
{"msg":"I will be pushing a PR with the indy VDRI to the new ext repo this weekend, hopefully. ","username":"pfeairheller","ts":"2020-10-16T10:00:52.531Z"}
{"msg":"@pfeairheller @m00sey https://github.com/hyperledger/aries-framework-go-ext/pull/5","username":"troyronda","ts":"2020-10-16T18:43:15.734Z"}
{"msg":"yah this PR is fin","username":"MALodder","ts":"2020-10-19T14:19:26.880Z"}
{"msg":"yah this PR is fine","username":"MALodder","ts":"2020-10-19T14:19:26.880Z"}
{"msg":"A little late to the conversation, but I think I stumbled on the answer to the ext repo module version question while solving my own problem accessing the go wrapper for indy-vdr.\n\nFor module roots nested in a repo you have to add the relative path to the tag name.  So for me it became `git tag wrappers/golang/v0.0.0 ` with the go.mod file residing under `wrappers/golang`. \n\nUsing this approach is seems each module could have its own independent version if that is what we desire.  (We'll likely need module specific tags either way).\n","username":"pfeairheller","ts":"2020-10-19T19:39:06.050Z"}
{"msg":"@pfeairheller I have already tested it. You can check it here ","username":"soluchok","ts":"2020-10-19T19:58:06.967Z"}
{"msg":"https://github.com/soluchok/module","username":"soluchok","ts":"2020-10-19T19:58:11.191Z"}
{"msg":"Great, thanks @soluchok ","username":"pfeairheller","ts":"2020-10-19T20:20:05.743Z"}
{"msg":"quick question about the aries-framework-go-ext repo - I wrote some code a while back that can help importing keys from indy wallets to aries-framework-go. Is that something appropriate for the repo? I'd be happy to send a PR","username":"gnarula","ts":"2020-10-19T23:48:51.582Z"}
{"msg":"Has joined the channel.","username":"darkchylde","ts":"2020-10-20T13:35:47.215Z","type":"uj"}
{"msg":"Hi guys,","username":"darkchylde","ts":"2020-10-20T13:35:47.593Z"}
{"msg":"Has joined the channel.","username":"AdrienViolet","ts":"2020-10-20T14:12:40.896Z","type":"uj"}
{"msg":"@gnarula @Baha-sk ^^","username":"troyronda","ts":"2020-10-20T14:20:13.949Z"}
{"msg":"@gnarula I noticed you have a couple open PRs on aries-framework-go ... did you have some questions on moving them forward?","username":"troyronda","ts":"2020-10-20T14:20:44.102Z"}
{"msg":"@pfeairheller @m00sey FYI: the latest commit to aries-framework-go has moved levelDB and jsIndexDB into modules in the aries-framework-go repo.","username":"troyronda","ts":"2020-10-20T14:21:19.196Z"}
{"msg":"https://github.com/hyperledger/aries-framework-go/commit/94a81010560a1558c0d50126c78a07e26ee54e13","username":"troyronda","ts":"2020-10-20T14:21:53.914Z"}
{"msg":"Hi all, Android developer here, I have started looking at the aries-framework-go repo and the mobile bindings. I have looked at the demo app. I am not sure I get the full scope of the mobile SDK and I am curious to here more. \nIs it capable to run a full aries agent on a mobile? How does the inbound communication work? Is it managed with a mediator node? How are the credential stored?\nI tried to ingest a connection invite of type `\"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\"` but it is apparently not supported in local agent mode. \nSorry it is a lot of different questions at the same time, you can otherwise point me to some doc for me to look at, thanks in advance!","username":"AdrienViolet","ts":"2020-10-20T14:31:59.899Z"}
{"msg":"\"How does the inbound communication work? Is it managed with a mediator node?\" Yes - you would use a mediator node. aries-framework-go supports mediation.","username":"troyronda","ts":"2020-10-20T14:32:48.462Z"}
{"msg":"\"I tried to ingest a connection invite of type\" aries-framework-go has, so far, only implemented the DID Exchange protocol (not the original connections protocol).","username":"troyronda","ts":"2020-10-20T14:33:32.755Z"}
{"msg":"\"I tried to ingest a connection invite of type\" aries-framework-go has only implemented the DID Exchange protocol (not the original connections protocol).","username":"troyronda","ts":"2020-10-20T14:33:32.755Z"}
{"msg":"\"How are the credential stored?\" We are working on enabling injectable storage for the mobile binding.","username":"troyronda","ts":"2020-10-20T14:34:28.880Z"}
{"msg":"@soluchok","username":"troyronda","ts":"2020-10-20T14:34:42.521Z"}
{"msg":"That bring an other question for me then, where can I see the current protocol implemented in the aries-framework-go used as a Go Server SDK and used as a mobile SDK","username":"AdrienViolet","ts":"2020-10-20T14:35:38.050Z"}
{"msg":"@AdrienViolet I recently through together a quick implementation of an Android app using a-f-g bindings.  It is uses agent mode.","username":"pfeairheller","ts":"2020-10-20T14:36:48.856Z"}
{"msg":"@AdrienViolet I recently threw together a quick implementation of an Android app using a-f-g bindings.  It is uses agent mode.","username":"pfeairheller","ts":"2020-10-20T14:36:48.856Z"}
{"msg":"https://github.com/scoir/aludra","username":"pfeairheller","ts":"2020-10-20T14:36:50.971Z"}
{"msg":"@AdrienViolet https://pkg.go.dev/github.com/hyperledger/aries-framework-go/pkg/client","username":"troyronda","ts":"2020-10-20T14:37:03.633Z"}
{"msg":"Please ignore the code, I was learning Android and relearning Java while I wrote it","username":"pfeairheller","ts":"2020-10-20T14:37:12.976Z"}
{"msg":"thanks @pfeairheller I appreciate that","username":"AdrienViolet","ts":"2020-10-20T14:38:07.842Z"}
{"msg":"It relies on the `aries-agent-rest` running.","username":"pfeairheller","ts":"2020-10-20T14:38:49.749Z"}
{"msg":"@AdrienViolet The above directory is the go binding for protocols. You can see the controllers here: https://github.com/hyperledger/aries-framework-go/tree/master/pkg/controller/command","username":"troyronda","ts":"2020-10-20T14:39:06.333Z"}
{"msg":"The controllers are what are exposed to the various bindings (mobile, REST, WASM).","username":"troyronda","ts":"2020-10-20T14:39:28.373Z"}
{"msg":"Gotcha, thanks @troyronda appreciate all the info","username":"AdrienViolet","ts":"2020-10-20T14:40:07.967Z"}
{"msg":"Gotcha, thanks @troyronda \n I appreciate all the info","username":"AdrienViolet","ts":"2020-10-20T14:40:07.967Z"}
{"msg":"@troyronda the bindings only work in \"remote\" mode for mobile right now, correct?  And the mediator you are referring to is the rest agent?","username":"pfeairheller","ts":"2020-10-20T14:40:37.732Z"}
{"msg":"Or can it run on its own?  I was unable to get the settings right.","username":"pfeairheller","ts":"2020-10-20T14:40:55.259Z"}
{"msg":"@pfeairheller the bindings also work locally for mobile... but I am not the mobile guy :).","username":"troyronda","ts":"2020-10-20T14:41:10.965Z"}
{"msg":"Hmm...  I'd love to get that working!","username":"pfeairheller","ts":"2020-10-20T14:41:36.700Z"}
{"msg":"yes. getting the injectable storage working is an important aspect. @soluchok plans to work on it.","username":"troyronda","ts":"2020-10-20T14:42:24.863Z"}
{"msg":"@gnarula can you describe what `importing keys` does more precisely in aries-framework-go?","username":"Baha-sk","ts":"2020-10-20T16:16:08.118Z"}
{"msg":"say you have a bunch of keys that were created using indy-cli and for some reason you want to use/import them on to an aries-framework-go KMS. The library would allow you to extract the private key from the indy wallet for a given DID and import it to the KMS","username":"gnarula","ts":"2020-10-21T09:34:56.592Z"}
{"msg":"There was a question about peer DIDs which I could use some input on https://github.com/hyperledger/aries-framework-go/pull/2159","username":"gnarula","ts":"2020-10-21T09:36:34.814Z"}
{"msg":"https://github.com/hyperledger/aries-framework-go/pull/2163 is fine AFAIK","username":"gnarula","ts":"2020-10-21T09:36:51.019Z"}
{"msg":"correct, using the Import function in the kms allows importing ecdsa/ed25519 keys created outside of Aries-framework-go. Your can push a PR for Indy key import library to the Aries-framework-go-ext repo. We just need to know to see where to add it, either in a separate module or one of the existing ones.. @troyronda ?","username":"Baha-sk","ts":"2020-10-21T13:19:51.011Z"}
{"msg":"correct, using the Import function in the kms allows importing ecdsa/ed25519 keys created outside of aries-framework-go. Your can push a PR for Indy key import library to the aries-framework-go-ext repo. We just need to agree where to add it, either in a separate module or one of the existing ones.. @troyronda ?","username":"Baha-sk","ts":"2020-10-21T13:19:51.011Z"}
{"msg":"correct, using the Import function in the kms allows importing ecdsa/ed25519 keys created outside of aries-framework-go. Your can push a PR for Indy key import library to the aries-framework-go-ext repo. We just need to agree where to add it, either in a separate module or in one of the existing ones.. @troyronda ?","username":"Baha-sk","ts":"2020-10-21T13:19:51.011Z"}
{"msg":"@gnarula merged 2163","username":"troyronda","ts":"2020-10-21T14:11:03.564Z"}
{"msg":"I've another question about the credential exchange - AFAIK the current implementation implements the state machine. I wonder if actual verification and revocation checks is a planned feature?","username":"gnarula","ts":"2020-10-21T14:11:26.229Z"}
{"msg":"Verification is already a part of BBS+ in Ursa ","username":"MALodder","ts":"2020-10-21T14:17:04.570Z"}
{"msg":"Revocation is something Iâ€™m working on","username":"MALodder","ts":"2020-10-21T14:17:11.941Z"}
{"msg":"awesome! thank you so much!","username":"gnarula","ts":"2020-10-21T14:17:39.819Z"}
{"msg":"Is this the Go wrapper? https://github.com/hyperledger/ursa-wrapper-go","username":"gnarula","ts":"2020-10-21T14:22:29.725Z"}
{"msg":"Doesnâ€™t look like they added it that repo yet","username":"MALodder","ts":"2020-10-21T14:28:31.314Z"}
{"msg":"https://github.com/hyperledger/aries-framework-go/pull/2261","username":"troyronda","ts":"2020-10-21T18:44:43.345Z"}
{"msg":"https://github.com/hyperledger/aries-framework-go/pull/2261 (feat: BbsBlsSignature2020 LDP suite for VC)","username":"troyronda","ts":"2020-10-21T18:44:43.345Z"}
{"msg":"feat: BbsBlsSignature2020 LDP suite for VC","username":"troyronda","ts":"2020-10-21T18:44:56.295Z"}
{"msg":"I just noticed that the storage options couchdb and mysql have been removed in commit 51ab57d3e48b739d90b1887000c28cc29be02bf6 in favor of just mem and leveldb. Will other alternatives be provided in the future?","username":"jceb","ts":"2020-10-23T06:02:04.255Z"}
{"msg":"@jceb we moved couchdb and MySQL to the extension repo. See https://github.com/hyperledger/aries-framework-go-ext . We are going to add Postgres implementation.","username":"soluchok","ts":"2020-10-23T06:23:14.717Z"}
{"msg":"ah, great, thank you for the information","username":"jceb","ts":"2020-10-23T06:23:49.447Z"}
{"msg":"is there a simple way of integrating it again with the current implement or would I have to patch the aries-rest-agent manually?","username":"jceb","ts":"2020-10-23T06:25:46.628Z"}
{"msg":"You need to patch it manually. ","username":"soluchok","ts":"2020-10-23T06:27:12.391Z"}
{"msg":":thumbsup:","username":"jceb","ts":"2020-10-23T06:31:23.248Z"}
{"msg":"Has joined the channel.","username":"lmtriet","ts":"2020-10-26T20:23:02.654Z","type":"uj"}
{"msg":"BBS+ signer: https://github.com/hyperledger/aries-framework-go/pull/2278","username":"troyronda","ts":"2020-10-28T14:11:04.963Z"}
{"msg":"@troyronda what's your take?","username":"gnarula","ts":"2020-10-28T14:12:04.097Z"}
{"msg":"Awesome thats fantastic!","username":"tplooker","ts":"2020-10-28T14:12:27.803Z"}
{"msg":"Looking forward to testing interop with it","username":"tplooker","ts":"2020-10-28T14:13:02.408Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-go?msg=qe6ycKPYxoP35cTMS) yeah, this is a next task for me","username":"kdimak","ts":"2020-10-28T14:19:19.056Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=qe6ycKPYxoP35cTMS","url":"https://chat.hyperledger.org/channel/aries-go?msg=qe6ycKPYxoP35cTMS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Let me know if you have any questions, very keen to get some solid test vectors across our implementations","username":"tplooker","ts":"2020-10-28T14:20:45.925Z"}
{"msg":"@tplooker what are you doing awake at your hour?","username":"MALodder","ts":"2020-10-28T14:21:06.759Z"}
{"msg":"Haha I have a meeting :upside_down:","username":"tplooker","ts":"2020-10-28T14:22:24.884Z"}
{"msg":"... such an appropriate smiley face for you @tplooker","username":"george.aristy","ts":"2020-10-28T14:23:37.726Z"}
{"msg":"Haha yeap upside down at the bottom of the world!","username":"tplooker","ts":"2020-10-28T14:24:41.823Z"}
{"msg":"Hello @troyronda, @george.aristy - do you think one can plug-in an external KMS like Hashicorp Vault in the AF-go KMS ?","username":"ajayjadhav","ts":"2020-10-28T14:36:44.006Z"}
{"msg":"If there is a way we can achieve, would love to work on a PR","username":"ajayjadhav","ts":"2020-10-28T14:37:25.086Z"}
{"msg":"yes @ajayjadhav . The PR would go into hyperledger/aries-framework-go-ext","username":"george.aristy","ts":"2020-10-28T14:37:44.123Z"}
{"msg":"We're currently working on a downstream remote KMS based on WebKMS that will be plugged into the framework. Will share details once it's available","username":"george.aristy","ts":"2020-10-28T14:38:21.377Z"}
{"msg":"Do you have specific questions?","username":"george.aristy","ts":"2020-10-28T14:38:47.602Z"}
{"msg":"Excellent","username":"ajayjadhav","ts":"2020-10-28T14:39:01.697Z"}
{"msg":"I will explore the KMS api & -ext repo first and may have some questions later..","username":"ajayjadhav","ts":"2020-10-28T14:39:27.764Z"}
{"msg":"Are there any guidelines for -ext contribution ?","username":"ajayjadhav","ts":"2020-10-28T14:39:51.364Z"}
{"msg":"@ajayjadhav , LocalKMS in aries-framework-go uses Google Tink to store keys locally, you can add a Hashicorp implementation of the kms api(https://github.com/hyperledger/aries-framework-go/blob/master/pkg/kms/api.go) and even use Google Tink integration's Hashicorp client https://github.com/google/tink/tree/master/go/integration/hcvault directly","username":"Baha-sk","ts":"2020-10-28T15:02:31.178Z"}
{"msg":"oh that's awesome","username":"ajayjadhav","ts":"2020-10-28T15:03:33.777Z"}
{"msg":"oh that's awesome, Thanks @Baha-sk","username":"ajayjadhav","ts":"2020-10-28T15:03:33.777Z"}
{"msg":"Tink has a nice integration client with AWS KMS, Google GCP and Hashicorp vault that allows you to execute Tink primitives directly on the cloud, I haven't explored their integration in the framework yet","username":"Baha-sk","ts":"2020-10-28T15:06:07.046Z"}
{"msg":"BBS+ verifiable credential signing example: https://github.com/hyperledger/aries-framework-go/pull/2282","username":"troyronda","ts":"2020-10-28T15:06:19.171Z"}
{"msg":"also @ajayjadhav, I noticed the Tink integration clients apparently only implement AEAD Encrypt/Decrypt, there's no Sign/Verify/Wrap key/Unwrap Key... these need to be added to the clients","username":"Baha-sk","ts":"2020-10-28T15:32:11.711Z"}
{"msg":"also @ajayjadhav, I noticed the Tink integration clients apparently only implement AEAD Encrypt/Decrypt, there's no Sign/Verify/Wrap key/Unwrap Key... these need to be added on top of the Tink integraiton (AWS KMS/GCP KMS/HashiCorp Vault) clients","username":"Baha-sk","ts":"2020-10-28T15:32:11.711Z"}
{"msg":"also @ajayjadhav, I noticed the Tink integration clients apparently only implement AEAD Encrypt/Decrypt, there's no Sign/Verify/Wrap key/Unwrap Key... these need to be added on top of the Tink integration (AWS KMS/GCP KMS/HashiCorp Vault) clients","username":"Baha-sk","ts":"2020-10-28T15:32:11.711Z"}
{"msg":"Confidential / encrypted storage capability (based on DIF EDV format): https://github.com/hyperledger/aries-framework-go/pull/2279","username":"troyronda","ts":"2020-10-28T19:52:41.477Z"}
{"msg":"This is a generic capability on top of an underlying store. We will also be adding support for storing encrypted documents to an EDV server.","username":"troyronda","ts":"2020-10-28T19:54:00.708Z"}
{"msg":"Example: https://github.com/hyperledger/aries-framework-go/blob/96f9a85/pkg/storage/formattedstore_test.go#L148-L162","username":"troyronda","ts":"2020-10-28T20:01:48.553Z"}
{"msg":"Whatever you guys have in your coffee, I'll take some","username":"m00sey","ts":"2020-10-28T20:03:31.923Z"}
{"msg":"Hard to keep up :)","username":"m00sey","ts":"2020-10-28T20:03:45.617Z"}
{"msg":"Scoir has kindly submitted two PRs to the extension repo:\nMongoDB: https://github.com/hyperledger/aries-framework-go-ext/pull/17\nAMQP Inbound Transport: https://github.com/hyperledger/aries-framework-go-ext/pull/16\n\nany volunteers to review?","username":"troyronda","ts":"2020-10-30T14:07:19.007Z"}
{"msg":"I promise the Indy VDRI is also on its way.  I got stuck needing to get a couple PRs thru the indy-vdr repo before I can proceed.","username":"pfeairheller","ts":"2020-10-30T14:15:44.760Z"}
{"msg":"Looking forward to seeing the Indy VDR","username":"troyronda","ts":"2020-10-30T14:20:22.768Z"}
{"msg":"@pfeairheller btw - we dropped the \"i\" from the folder hierarchy.","username":"troyronda","ts":"2020-10-30T14:20:49.731Z"}
{"msg":"ah, good to know, thanks!","username":"pfeairheller","ts":"2020-10-30T14:21:14.736Z"}
{"msg":"@troyronda @george.aristy this question is more for the trustbloc folks but it also touches my understanding of the VDRI. the trustbloc VDRI does not implement store/build methods, so i am assuming that the VDRI cannot be used for DID registration? if this is the case, i am wondering if the VDRI is involved in any VC use case such issuance and verification, or this is handled completely outside of the agent?","username":"o.terbu","ts":"2020-10-30T14:29:02.892Z"}
{"msg":"@troyronda @george.aristy this question is more for the trustbloc folks but it also touches my understanding of the VDRI. the trustbloc VDRI does not implement store/build methods, so i am assuming that the VDRI cannot be used for DID registration? if this is the case, i am wondering if the VDRI is involved in any VC use case such issuance and verification, or is this handled completely outside of the agent?","username":"o.terbu","ts":"2020-10-30T14:29:02.892Z"}
{"msg":"@o.terbu the trustbloc VDR is currently being used by higher layers to sign presentations. It's on our TODO list to integrate it properly into the framework.","username":"george.aristy","ts":"2020-10-30T14:31:04.172Z"}
{"msg":"What do you mean by \"DID registration\"?","username":"george.aristy","ts":"2020-10-30T14:31:11.089Z"}
{"msg":"I'm not Troy or George, but I would say that a Verifier would need to resolve the DID of the issuer using a VDR, right?","username":"pfeairheller","ts":"2020-10-30T14:31:17.653Z"}
{"msg":"@george.aristy DID registration -> DID creation as in registering / anchoring on the trustbloc sidetree network","username":"o.terbu","ts":"2020-10-30T14:32:03.258Z"}
{"msg":"@o.terbu yes, I had that very same question before. @troyronda mentioned to me that DID creation is outside the agent to keep it small and universal","username":"jceb","ts":"2020-10-30T14:33:52.282Z"}
{"msg":"@jceb that is exactly what we are doing in Canis","username":"pfeairheller","ts":"2020-10-30T14:34:45.355Z"}
{"msg":"@pfeairheller what is Canis?","username":"jceb","ts":"2020-10-30T14:35:29.565Z"}
{"msg":"correct","username":"george.aristy","ts":"2020-10-30T14:35:34.654Z"}
{"msg":"CreateTrustBlocDID: https://github.com/trustbloc/agent-sdk/blob/0af2a4dcf1d8125cf2e46acefe78f775c283dd5d/pkg/controller/command/didclient/command.go#L125","username":"george.aristy","ts":"2020-10-30T14:36:55.025Z"}
{"msg":"Ends up  being used in edge-agent: https://github.com/trustbloc/edge-agent/blob/3875d5f1de51a379c94d4cc8f870fea552ed9119/cmd/user-agent/src/pages/chapi/wallet/register/register.js#L36-L73","username":"george.aristy","ts":"2020-10-30T14:39:57.149Z"}
{"msg":"Then, if the user selects the trustbloc DID on screen, it may get used to generate a presentation: https://github.com/trustbloc/edge-agent/blob/2184c263b880bd2781eb85b9b642f40b5f1c5407/cmd/user-agent/src/pages/chapi/wallet/get/didAuth.js#L44-L79","username":"george.aristy","ts":"2020-10-30T14:41:08.901Z"}
{"msg":"Then, if the user selects the trustbloc DID on screen, it will be used to generate a presentation: https://github.com/trustbloc/edge-agent/blob/2184c263b880bd2781eb85b9b642f40b5f1c5407/cmd/user-agent/src/pages/chapi/wallet/get/didAuth.js#L44-L79","username":"george.aristy","ts":"2020-10-30T14:41:08.901Z"}
{"msg":"@o.terbu I guess we can parse this as two questions. What is the framework doing and what is the trustbloc DID method doing.","username":"troyronda","ts":"2020-10-30T14:43:22.154Z"}
{"msg":"The framework currently focuses on DID resolution and also providing a KMS interface such that the framework can hold keypairs and make the public keys available for DID registration.","username":"troyronda","ts":"2020-10-30T14:44:16.281Z"}
{"msg":"This is mainly due to the resolver side having a fairly clear interface: resolve a DID and return back a DID document.","username":"troyronda","ts":"2020-10-30T14:45:20.850Z"}
{"msg":"On the DID registration side, you effectively need a DID document mutation interface and also need to make decisions on how the KMS should interface with it.","username":"troyronda","ts":"2020-10-30T14:46:22.638Z"}
{"msg":"(see, for example, universal resolver vs universal registrar).","username":"troyronda","ts":"2020-10-30T14:47:09.010Z"}
{"msg":"So for simplicity, we have so far, have enabled external code to perform registrar tasks by exposing the KMS interface from the framework.","username":"troyronda","ts":"2020-10-30T14:48:18.169Z"}
{"msg":"@o.terbu On the TrustBloc DID method. The TrustBloc DID method exposes the Sidetree protocol API. We have an additional layer defined in the method to discover the endpoints for a particular network and to supply network policy.","username":"troyronda","ts":"2020-10-30T14:53:33.085Z"}
{"msg":"@o.terbu On the TrustBloc DID method. The TrustBloc DID method exposes the Sidetree API. We have an additional layer defined in the method to discover the endpoints for a particular network and to supply network policy.","username":"troyronda","ts":"2020-10-30T14:53:33.085Z"}
{"msg":"The policy defines the consortium membership, enables validation of changes in membership (including hash-linked history), and policies about how many members should be queried when doing DID resolution.","username":"troyronda","ts":"2020-10-30T14:57:12.703Z"}
{"msg":"Here's a CLI for the `did:trustbloc` method: https://github.com/trustbloc/trustbloc-did-method/blob/8f1f39e94a1e23ebe4abd213c5e6da3f2c205e29/cmd/did-method-cli/main.go#L17","username":"george.aristy","ts":"2020-10-30T15:01:44.634Z"}
{"msg":"In case where a user wants to bootstrap trustbloc DIDs outside agents","username":"george.aristy","ts":"2020-10-30T15:02:15.348Z"}
{"msg":"https://github.com/scoir/canis","username":"troyronda","ts":"2020-10-30T15:27:42.332Z"}
{"msg":"thank you @troyronda and @troyronda . your answers are very helpful. could you maybe point me also to the code that issues the W3C VC using the trustbloc DID?","username":"o.terbu","ts":"2020-11-02T13:24:36.759Z"}
{"msg":"thank you @troyronda and @george.aristy . your answers are very helpful. could you maybe point me also to the code that issues the W3C VC using the trustbloc DID?","username":"o.terbu","ts":"2020-11-02T13:24:36.759Z"}
{"msg":"thank you @troyronda and @george.aristy . your answers are very helpful. could you maybe point me also to the code that issues the W3C VC using the trustbloc DID and where that code gets called in your trustbloc demo?","username":"o.terbu","ts":"2020-11-02T13:24:36.759Z"}
{"msg":"@o.terbu are you looking to learn how to sign credentials using aries-framework-go?","username":"george.aristy","ts":"2020-11-02T13:31:19.988Z"}
{"msg":"the framework is sufficiently generic to do so","username":"george.aristy","ts":"2020-11-02T13:31:28.820Z"}
{"msg":"i am trying to learn how to use other DIDs than did:trustbloc to issue VCs and come up with a demo (for evaluation purposes). ideally, i want to reuse existing code base and just replace it with a did:elem for example.","username":"o.terbu","ts":"2020-11-02T13:33:32.935Z"}
{"msg":"i now have a good idea how this is done from a wallet (end-user) perspective, but i have not entirely figured out where the issuer codebase is that uses the verifiable package + their DID.","username":"o.terbu","ts":"2020-11-02T13:34:54.837Z"}
{"msg":"but, here are some pointers:\n\n* `dataProfile.Creator` is the DID: https://github.com/trustbloc/edge-service/blob/96f3294b035f3c1afd892e65b409e74b86a160bd/pkg/doc/vc/crypto/crypto.go#L173-L198\n* the DID is resolved here and validated: https://github.com/trustbloc/edge-service/blob/96f3294b035f3c1afd892e65b409e74b86a160bd/pkg/doc/vc/crypto/crypto.go#L249\n* after all that you build an LD Proof Context and pass it to the framework's `verifiable.Credential.AddLinkedDataProof()`https://github.com/hyperledger/aries-framework-go/blob/13c12e662e0f98a1095360b58219df280a23e8ce/pkg/doc/verifiable/credential_ldp.go#L14-L29","username":"george.aristy","ts":"2020-11-02T13:35:03.795Z"}
{"msg":"here's another example from a different project: https://github.com/trustbloc/edge-adapter/blob/6587a7111ada6bd16386bbcd9d97806d6cfb373a/pkg/crypto/crypto.go#L52-L65","username":"george.aristy","ts":"2020-11-02T13:37:53.274Z"}
{"msg":"`signingKeyID` is a DID URL - the verification method","username":"george.aristy","ts":"2020-11-02T13:38:03.693Z"}
{"msg":"Pattern is always the same - you resolve that DID and validate it, then build the LD Proof Context required by the framework's `verifiable.Credential.AddLinkedDataProof()`","username":"george.aristy","ts":"2020-11-02T13:38:37.383Z"}
{"msg":"You have to configure the framework's VDR to resolve `did:trustbloc`. Here's an example where we use a universal resolver: https://github.com/trustbloc/edge-adapter/blob/4c14603e7d5e7cf3322d024ab4f7191d24e0118f/cmd/adapter-rest/startcmd/start.go#L928-L936","username":"george.aristy","ts":"2020-11-02T13:40:57.569Z"}
{"msg":"thanks for all these references. again very helpful and it helps me to better understand how the framework is being used.","username":"o.terbu","ts":"2020-11-02T13:41:55.455Z"}
{"msg":"why is it needed to resolve the DID before generating the proof?","username":"o.terbu","ts":"2020-11-02T13:42:54.776Z"}
{"msg":"It's not strictly required. It's done to ensure the DID is resolvable and correctly formed. Just a defensive measure.","username":"george.aristy","ts":"2020-11-02T13:45:51.754Z"}
{"msg":"alright, makes sense. thanks.","username":"o.terbu","ts":"2020-11-02T13:47:06.470Z"}
{"msg":"thx","username":"jceb","ts":"2020-11-03T08:55:10.118Z"}
{"msg":"Has joined the channel.","username":"ianco","ts":"2020-11-17T22:08:52.217Z","type":"uj"}
{"msg":"Hi folks, just wondering if there is an example somewhere of the type of proof request restrictions that are supported by aries-framework-go (like restrict credentials by schema, issuer did, etc)?  I've done a quick review of the code and this is the only example I could find:\n\nhttps://github.com/hyperledger/aries-framework-go/blob/5cb023bf9a72f61e078a9c0c58fc1bf37f85001e/pkg/doc/presexch/example_test.go#L20\n\nThanks!","username":"ianco","ts":"2020-11-17T22:29:54.081Z"}
{"msg":"@ianco correct, the framework supports presentation-exchange format.","username":"george.aristy","ts":"2020-11-17T22:35:59.171Z"}
{"msg":"@george.aristy thanks for confirming!  I was wondering though if there are any examples available?","username":"ianco","ts":"2020-11-17T23:49:44.223Z"}
{"msg":"Initial interop tests with Mattr on BBS+: https://github.com/hyperledger/aries-framework-go/pull/2326","username":"troyronda","ts":"2020-11-18T02:26:03.332Z"}
{"msg":"Has joined the channel.","username":"rado0x54","ts":"2020-11-20T17:06:28.201Z","type":"uj"}
{"msg":"Hey @troyronda maybe you are already aware of this, but as a heads up `docker pull` from the github package registry (docker.pkg.github.com) is not working anymore on the latest Edge version (20.10) (I was using that and it was almost driving me mad). It works fine on the latest stable Docker Desktop (19.03). Also see https://github.com/moby/moby/issues/41687. I think the source reason is that Github Package Repository does not support pulling by SHA and the updated and error message of the edge version clearly indicates that it's trying to do that in 20.10. (https://docs.github.com/en/free-pro-team@latest/packages/using-github-packages-with-your-projects-ecosystem/configuring-docker-for-use-with-github-packages#downloading-an-image)","username":"rado0x54","ts":"2020-11-20T17:20:35.503Z"}
{"msg":"Hey @troyronda maybe you are already aware of this, but as a heads up `docker pull` from the github package registry (docker.pkg.github.com) is not working anymore on the latest Edge version (20.10) (I was using that and it was almost driving me mad). It works fine on the latest stable Docker Desktop (19.03). Also see https://github.com/moby/moby/issues/41687. I think the source reason is that Github Package Repository does not support pulling by SHA and the error message of the edge version clearly indicates that it's trying to do that in 20.10. (https://docs.github.com/en/free-pro-team@latest/packages/using-github-packages-with-your-projects-ecosystem/configuring-docker-for-use-with-github-packages#downloading-an-image)","username":"rado0x54","ts":"2020-11-20T17:20:35.503Z"}
{"msg":"Anyone familiar with the set up for the `ext` repo...  Is the intent of the common build to NOT build any of the components' code?   Right now, the common build doesn't trigger on changes to the components' code, but when it is triggered, it tries to build and test all the components too.","username":"pfeairheller","ts":"2020-11-24T20:43:32.198Z"}
{"msg":"@soluchok","username":"troyronda","ts":"2020-11-25T15:09:29.344Z"}
{"msg":"@pfeairheller if you changed only component then CI should run the tests for component. If there is at least one change out of component folder then all checks will be executed.","username":"soluchok","ts":"2020-11-25T15:18:46.224Z"}
{"msg":"For now i donâ€™t know how to ignore components tests when global one was executed ","username":"soluchok","ts":"2020-11-25T15:20:50.839Z"}
{"msg":"Thanks @soluchok ,  I don't think we want to use a special container for all the component builds but we need one for indy-vdr to make the shared library available.  I've added some logic to the `check_unit.sh` script to allow for an exclusion used in common.yml.  I'm not entirely happy with the solution so I look forward to review comments.","username":"pfeairheller","ts":"2020-11-25T15:24:12.034Z"}
{"msg":"I'll merge my local changes over to my PR branch for `vdr/indy` and push later this afternoon","username":"pfeairheller","ts":"2020-11-25T15:24:53.288Z"}
{"msg":"Thanks for the heads up. Looks like we will need to migrate to the new GitHub container registry. @firas.qutishat @george.aristy","username":"troyronda","ts":"2020-11-25T17:01:42.720Z"}
{"msg":"Thanks for the heads up. Looks like we will need to migrate to the new GitHub container registry. @firas.qutishat @george.aristy @soluchok @rolsonquadras","username":"troyronda","ts":"2020-11-25T17:01:42.720Z"}
{"msg":"Thanks for the heads up. Looks like we will need to migrate to the new GitHub container registry. @firas.qutishat @george.aristy @rolsonquadras  @soluchok","username":"troyronda","ts":"2020-11-25T17:02:48.739Z"}
{"msg":"Has joined the channel.","username":"DucaDellaForcoletta","ts":"2020-11-26T08:20:05.607Z","type":"uj"}
{"msg":"Has joined the channel.","username":"lbartekl","ts":"2020-11-27T09:35:11.290Z","type":"uj"}
{"msg":"Hey, is /vdr/did correct endpoint for creating public did (checking on Swagger, in OpenAPI demo docs it says /vdr/create-public-did)? I also get the error {\"code\":4000,\"message\":\"invalid id\"}, when trying to fetch the records on /vdr/did/records.","username":"Vid201","ts":"2020-11-27T10:35:05.146Z"}
{"msg":"And another question: is it possible at the moment to use sideetree.js (https://github.com/transmute-industries/sidetree.js) instead of sideetree-mock? I am not quite sure how loosely coupled is Aries go. Thank you so much! :slight_smile:","username":"Vid201","ts":"2020-11-27T10:54:40.170Z"}
{"msg":"And another question: is it possible at the moment to use sideetree.js (https://github.com/transmute-industries/sidetree.js) instead of sideetree-mock? Or is it maybe possible only to resolve DID documents from different sideetree - e.g., sideetree on ethereum ledger? I am not quite sure how loosely coupled is Aries go. Thank you so much! :slight_smile:","username":"Vid201","ts":"2020-11-27T10:54:40.170Z"}
{"msg":"And another question: is it possible at the moment to use sideetree.js (https://github.com/transmute-industries/sidetree.js) instead of sideetree-mock? Or is it maybe possible only to resolve DID documents from different sideetree - e.g., sideetree on ethereum ledger (e.g., did:elem:...)? I am not quite sure how loosely coupled is Aries go. Thank you so much! :slight_smile:","username":"Vid201","ts":"2020-11-27T10:54:40.170Z"}
{"msg":"The go framework is not coupled to any DID method.","username":"troyronda","ts":"2020-11-27T19:12:12.598Z"}
{"msg":"Ok, great! So what are the steps to use Aries go with different DID method? Is this done with --http-resolver-url when running aries-agent-rest?","username":"Vid201","ts":"2020-11-27T19:18:21.864Z"}
{"msg":"Has joined the channel.","username":"marc0olo","ts":"2020-11-30T04:51:47.478Z","type":"uj"}
{"msg":"Yes you can use the http-resolver-url option.","username":"troyronda","ts":"2020-11-30T14:10:11.528Z"}
{"msg":"Great, thanks!","username":"Vid201","ts":"2020-11-30T14:11:39.642Z"}
{"msg":"btw - we resolved an issue on master branch for DID documents that contain the base property (like did:elem). This fix isn't yet in the docker image tags.","username":"troyronda","ts":"2020-11-30T14:12:49.909Z"}
{"msg":"btw - we resolved an issue on master branch for DID documents that contain the base property (some of the Sidetree-based methods are including this property). This fix isn't yet in the docker image tags.","username":"troyronda","ts":"2020-11-30T14:12:49.909Z"}
{"msg":"btw - we resolved an issue on master branch for DID documents that contain the JSON-LD `@base` property (some of the Sidetree-based methods are including this property). This fix isn't yet in the docker image tags.","username":"troyronda","ts":"2020-11-30T14:12:49.909Z"}
{"msg":"We currently push snapshot images here: https://github.com/trustbloc-cicd/aries-framework-go","username":"troyronda","ts":"2020-11-30T14:13:59.770Z"}
{"msg":"FYI when I run the bdd tests `make bdd-test` I get teh following error:\n\n```\n--- Failed steps:\n\n  Scenario: Decentralized Identifier(DID) Exchange between two Edge Agents(without Inbound) through Routers(HTTP/WS) # features/aries_mediator_e2e_sdk.feature:135\n    Given \"Bob-Router\" agent is running on \"localhost,localhost\" port \"random,random\" with \"http,websocket\" as the transport provider # features/aries_mediator_e2e_sdk.feature:175\n      Error: failed to create new agent: failed to create new agent: create packer failed: authcrypt: fcntl: too many open files\n\n\n6 scenarios (5 passed, 1 failed)\n238 steps (189 passed, 1 failed, 48 skipped)\n45.895259348s\n```\n\nRunning on a Mac sync'ed to the latest `master` branch","username":"ianco","ts":"2020-11-30T19:58:02.309Z"}
{"msg":"FYI when I run the bdd tests `make bdd-test` I get the following error:\n\n```\n--- Failed steps:\n\n  Scenario: Decentralized Identifier(DID) Exchange between two Edge Agents(without Inbound) through Routers(HTTP/WS) # features/aries_mediator_e2e_sdk.feature:135\n    Given \"Bob-Router\" agent is running on \"localhost,localhost\" port \"random,random\" with \"http,websocket\" as the transport provider # features/aries_mediator_e2e_sdk.feature:175\n      Error: failed to create new agent: failed to create new agent: create packer failed: authcrypt: fcntl: too many open files\n\n\n6 scenarios (5 passed, 1 failed)\n238 steps (189 passed, 1 failed, 48 skipped)\n45.895259348s\n```\n\nRunning on a Mac sync'ed to the latest `master` branch","username":"ianco","ts":"2020-11-30T19:58:02.309Z"}
{"msg":"Also - question on the openapi demo (https://github.com/hyperledger/aries-framework-go/blob/master/docs/rest/openapi_demo.md) - there are links to the openapi interface for each agent (e.g. alice at http://localhost:8089/openapi/) however the swagger page displays the \"Swagger Petstore\" api","username":"ianco","ts":"2020-11-30T22:33:59.777Z"}
{"msg":"Is there a swagger page for the aries go REST interface?  Or a document that lists all the api calls available?","username":"ianco","ts":"2020-11-30T22:34:23.267Z"}
{"msg":"Has joined the channel.","username":"MajdT51","ts":"2020-12-01T09:56:46.202Z","type":"uj"}
{"msg":"I am still getting the error invalid id when trying to resolve DID documents (on latest master). Started agent with:","username":"Vid201","ts":"2020-12-01T13:22:13.703Z"}
{"msg":"I am still getting the error invalid id when trying to resolve DID documents (on latest master). Started agent with:`./aries-agent-rest start --api-host localhost:8080 -q mem --http-resolver-url elem@https://element-did.com/api/v1/sidetree --inbound-host http@localhost:8081,ws@localhost:8082 --inbound-host-external http@https://example.com:8081,ws@ws://localhost:8082 --webhook-url localhost:8082 --agent-default-label MyAgent`","username":"Vid201","ts":"2020-12-01T13:22:13.703Z"}
{"msg":"Getting response: `{\"code\":4000,\"message\":\"invalid id\"}`, when sending request: `curl -X GET \"http://localhost:8080/vdr/did/resolve/did:elem:EiC1Tgosui5O6ikTFQWrIMeDa2SQdxJZjGSZCjNu-AArVA\" -H  \"accept: application/json\"`","username":"Vid201","ts":"2020-12-01T13:23:22.505Z"}
{"msg":"Getting response: `{\"code\":4000,\"message\":\"invalid id\"}`, when sending request: `curl -X GET \"http://localhost:8080/vdr/did/resolve/did:elem:ropsten:EiD-qV6sZTld6O0s-AHF32_btuAzcTJn7-YJBGyjMnucdQ\" -H  \"accept: application/json\"`","username":"Vid201","ts":"2020-12-01T13:23:22.505Z"}
{"msg":"Hi, just run: `generate-openapi-spec` in root directory and Swagger page will be generated.","username":"Vid201","ts":"2020-12-01T13:55:36.606Z"}
{"msg":"Hi, just run: `make generate-openapi-spec` in root directory and Swagger page will be generated.","username":"Vid201","ts":"2020-12-01T13:55:36.606Z"}
{"msg":"That worked, thanks!","username":"ianco","ts":"2020-12-01T14:14:00.128Z"}
{"msg":"For the openapi demo I'm stuck on this step:\n\n```Note: Since this open api demo makes API calls in https make sure you import tls certs generated while running above target. Generated certs can be found in test/bdd/fixtures/keys/tls.\n```","username":"ianco","ts":"2020-12-01T14:54:51.496Z"}
{"msg":"I've started up all the services as per: https://github.com/hyperledger/aries-framework-go/blob/master/docs/test/bdd_tests.md#run-tests-in-detached-mode ...","username":"ianco","ts":"2020-12-01T14:55:18.098Z"}
{"msg":"I'm able to call the service using curl by specifying `--insecure`, like:\n\n```\ncurl --insecure -X POST \"https://localhost:8082/connections/create-invitation?alias=test1\" -H  \"accept: application/json\" -d \"\"\n```","username":"ianco","ts":"2020-12-01T14:55:57.387Z"}
{"msg":"... but not sure how to import the certs (I/m running on a Mac)","username":"ianco","ts":"2020-12-01T14:56:21.434Z"}
{"msg":"... but not sure how to import the certs (I'm running on a Mac)","username":"ianco","ts":"2020-12-01T14:56:21.434Z"}
{"msg":"(... or is it possible to run the agents in `http` mode rather than `https`?)","username":"ianco","ts":"2020-12-01T16:43:09.603Z"}
{"msg":"... never mind figured it out :-D","username":"ianco","ts":"2020-12-01T17:05:06.032Z"}
{"msg":"@ianco cool!","username":"troyronda","ts":"2020-12-02T14:05:24.848Z"}
{"msg":"Has joined the channel.","username":"tschulshuh","ts":"2020-12-02T15:14:48.826Z","type":"uj"}
{"msg":"Hi there, i was wondering why i could not find anything related to anoncreds. Can someone ealborate on why indy anoncreds are used in the .NET framework but seemlingly not in the go framework?","username":"tschulshuh","ts":"2020-12-02T15:14:49.212Z"}
{"msg":"Hi there, i was wondering why i could not find anything related to anoncreds. Can someone elaborate on why indy anoncreds are used in the .NET framework but seemlingly not in the go framework?","username":"tschulshuh","ts":"2020-12-02T15:14:49.212Z"}
{"msg":"@tschulshuh Our efforts into the go framework have focused on ledger-agnostic features. As such, we have contributed the W3C verifiable credential JSON-LD data model, JSON-LD linked signatures, and are now working on BBS+-based selective disclosure.","username":"troyronda","ts":"2020-12-02T15:53:30.111Z"}
{"msg":"@tschulshuh Our efforts into the go framework have focused on ledger-agnostic features. As such, we have contributed (into the go framework) the W3C verifiable credential JSON-LD data model, JSON-LD linked signatures, and are now working on BBS+-based selective disclosure.","username":"troyronda","ts":"2020-12-02T15:53:30.111Z"}
{"msg":"The benefit is that you can use the Go framework across DID methods / registries.","username":"troyronda","ts":"2020-12-02T15:54:19.840Z"}
{"msg":"Note: you can use the Go framework across DID methods / registries.","username":"troyronda","ts":"2020-12-02T15:54:19.840Z"}
{"msg":"@troyronda can the go framework currently be used with indy?","username":"marc0olo","ts":"2020-12-02T16:28:35.222Z"}
{"msg":"@marc0olo @pfeairheller is working on that. He would be best to give an update on the status.","username":"troyronda","ts":"2020-12-02T17:23:29.975Z"}
{"msg":"https://github.com/hyperledger/aries-framework-go-ext/pull/34","username":"troyronda","ts":"2020-12-02T17:23:53.370Z"}
{"msg":"@troyronda @marc0olo I am waiting for reviews on that PR.   It is ready to go once approved.","username":"pfeairheller","ts":"2020-12-02T17:25:20.227Z"}
{"msg":"We have used it internally against both local instances of indy ledgers as well as Sovrin stagenet and buildernet","username":"pfeairheller","ts":"2020-12-02T17:26:07.765Z"}
{"msg":"ok thanks for that information! :)","username":"marc0olo","ts":"2020-12-02T17:29:18.065Z"}
{"msg":"general question about the agents and framework(s) => where do you see the interoperability part on the DID layer being placed as we need to distinguish between lookup/verification & crud operations? will the uniresolver be used for lookup/verification within the agent implementation? will the different frameworks eventually support the crud operations of different DID methods? how is your take on that?","username":"marc0olo","ts":"2020-12-02T17:37:38.661Z"}
{"msg":"In our project, we rely on functionality outside of the aries-go framework for creating DIDs on the ledger.  The `vdr` implementation is only for resolving DIDs.","username":"pfeairheller","ts":"2020-12-02T17:40:41.540Z"}
{"msg":"The main reason for this is the extra complication associated with registering DIDs with Indy.  You need to sign the requests with a DID already on the ledger that has the proper permissions and you need to specify a `role` for the new DID.  None of those are concerns of the aries-go framework right now.","username":"pfeairheller","ts":"2020-12-02T17:41:54.320Z"}
{"msg":"Besides, our project also has functionality for writing other artifacts to the ledger for schema creation and credential issuance.","username":"pfeairheller","ts":"2020-12-02T17:42:55.336Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-go?msg=RGd35skGBKTnBwaiN) can you point me to the code? that would be nice","username":"marc0olo","ts":"2020-12-02T17:47:26.940Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=RGd35skGBKTnBwaiN","url":"https://chat.hyperledger.org/channel/aries-go?msg=RGd35skGBKTnBwaiN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"The project I am referring to is https://github.com/scoir/canis\n\nIn particular, we have an Indy credential engine implementation that handles the this using the go wrapper for indy_vdr.  Its implementation is here:  https://github.com/scoir/canis/blob/main/pkg/credential/engine/indy/engine.go","username":"pfeairheller","ts":"2020-12-02T17:50:05.688Z"}
{"msg":"ok, I see. thank you! it's hard for newcomers to know how all these projects are related (or even finding them :D)","username":"marc0olo","ts":"2020-12-02T17:52:09.543Z"}
{"msg":"Question about credential formats inside the attachment data of the issue-credential v2 protocol message. If I'm reading the spec correctly, those credentials can be any format listed in the \"Credential Attachment Registry\" table after each message. So we've done that with the output from our implementation of Indy credentials and aries-go is not saving the credential because it is assuming W3c formatted credentials. Are we expected to implement a different middleware for the different credential formats or am I missing something else?","username":"pfeairheller","ts":"2020-12-02T20:05:27.785Z"}
{"msg":"@soluchok @george.aristy ^^^","username":"troyronda","ts":"2020-12-02T20:07:41.005Z"}
{"msg":"My understanding from @soluchok is that a different middleware should be created.","username":"troyronda","ts":"2020-12-02T20:37:00.917Z"}
{"msg":"Middleware that stores presentation now is more like a demo, just to show the usage.","username":"soluchok","ts":"2020-12-02T21:46:57.224Z"}
{"msg":"hi guys, could you tell me if aries go mobile is ready enough to use it for PoC?","username":"lbartekl","ts":"2020-12-03T08:45:27.599Z"}
{"msg":"I just need to make an app that can establish connection, accept credentials and present them","username":"lbartekl","ts":"2020-12-03T10:43:02.991Z"}
{"msg":"Has joined the channel.","username":"kapster","ts":"2020-12-04T09:18:52.498Z","type":"uj"}
{"msg":"BBS+ selective disclosure PR: https://github.com/hyperledger/aries-framework-go/pull/2375","username":"troyronda","ts":"2020-12-05T23:36:31.830Z"}
{"msg":"@tarkochevamik and I are picking up https://github.com/hyperledger/aries-framework-go/issues/626 as this is now blocking interop testing with vendors, we should slate five minutes for discussion/concerns on tomorrows call?","username":"m00sey","ts":"2020-12-07T22:30:25.890Z"}
{"msg":"@firas.qutishat @george.aristy ^^^","username":"troyronda","ts":"2020-12-08T15:23:20.953Z"}
{"msg":"BBS+ selective disclosure interop test of aries-framework-go against Mattr implementation: https://github.com/hyperledger/aries-framework-go/pull/2389","username":"troyronda","ts":"2020-12-08T18:29:22.505Z"}
{"msg":"what you figured out :D?","username":"MajdT51","ts":"2020-12-09T11:24:06.995Z"}
{"msg":"Do you guys mind if I assign the issue to you?","username":"george.aristy","ts":"2020-12-09T15:37:06.483Z"}
{"msg":"not at all, I added a note to the meeting notes as well","username":"m00sey","ts":"2020-12-09T15:37:49.533Z"}
{"msg":"Thank you","username":"george.aristy","ts":"2020-12-09T15:37:56.697Z"}
{"msg":"+1","username":"m00sey","ts":"2020-12-09T15:38:00.940Z"}
{"msg":"Has joined the channel.","username":"mupheux","ts":"2020-12-09T17:13:33.921Z","type":"uj"}
{"msg":"Hi all, I am new to aries-go and saddled with the responsibility of writing test for it","username":"mupheux","ts":"2020-12-09T17:13:34.428Z"}
{"msg":"I am a little confused, I see this in the description for afgo but was told that it does not need a connection protocol. Can anyone help in shedding light on this","username":"mupheux","ts":"2020-12-09T17:15:05.555Z"}
{"msg":"HTTP POST /connections/create-invitation","username":"mupheux","ts":"2020-12-09T17:15:06.212Z"}
{"msg":"This surely is connection protocol being described.","username":"mupheux","ts":"2020-12-09T17:15:34.715Z"}
{"msg":"I already asked in the main aries channel about this behavior. but I am just wondering about the perspective of the go framework it is planned to tackle that usecase. it's not specific to the go framework - but I guess that we need to tackle this. if I want to prove a verifier something which is part of a verifiable credential (issued by a known, trusted public DID) within my pairwise channel over did:peer without disclosing the my VCs subject DID - how can I achieve that?\n\nI see that you merged a PR that includes the BBS+ selective disclosure approach pioneered by Mattr. can this be used to achieve that?\n\nI know that in Indy / Sovrin we can make use of blinded link secrets to achieve that. I guess that's currently not possible with the go framework, right?","username":"marc0olo","ts":"2020-12-09T18:12:51.021Z"}
{"msg":"I already asked in the main aries channel about this behavior. but I am just wondering about the perspective of the go framework it is planned to tackle that usecase. it's not specific to the go framework - but I guess that we need to tackle this. if I want to prove a verifier something which is part of a verifiable credential (issued by a known, trusted public DID) within my pairwise channel over did:peer without disclosing the VCs subject DID - how can I achieve that?\n\nI see that you merged a PR that includes the BBS+ selective disclosure approach pioneered by Mattr. can this be used to achieve that?\n\nI know that in Indy / Sovrin we can make use of blinded link secrets to achieve that. I guess that's currently not possible with the go framework, right?","username":"marc0olo","ts":"2020-12-09T18:12:51.021Z"}
{"msg":"This is DID Exchange protocol.","username":"troyronda","ts":"2020-12-09T19:23:46.228Z"}
{"msg":"@marc0olo this should absolutely be possible with our support for BBS+","username":"george.aristy","ts":"2020-12-09T19:26:48.646Z"}
{"msg":"Please give it a spin and let us know if you run into any issues.","username":"george.aristy","ts":"2020-12-09T19:27:15.182Z"}
{"msg":"Note: many features in the framework don't require a DIDComm connection. Examples: DID management, verifiable credentials, etc.","username":"troyronda","ts":"2020-12-09T19:29:24.918Z"}
{"msg":"@soluchok can probably remind me if the lower level DIDComm messenger depends on a connection record existing.","username":"troyronda","ts":"2020-12-09T19:30:00.627Z"}
{"msg":"glad to hear that. need to test this and will come back if I have questions or face any issues.\n\nif you know about a demo setup where this is being demonstrated please let me know :)","username":"marc0olo","ts":"2020-12-09T19:30:32.339Z"}
{"msg":"We don't have a demo yet I'm afraid. BBS+ selective disclosure barely made it into this release :).","username":"george.aristy","ts":"2020-12-09T19:31:57.598Z"}
{"msg":"We will have a demo some time in Q1.","username":"george.aristy","ts":"2020-12-09T19:32:21.018Z"}
{"msg":"sounds good. yes I see, it's a new feature :thumbsup:","username":"marc0olo","ts":"2020-12-09T19:33:17.301Z"}
{"msg":"@mupheux the protocol used by this endpoint is in fact did-exchange despite \"connections\" being a path component.","username":"george.aristy","ts":"2020-12-09T19:37:53.031Z"}
{"msg":"@here v0.1.5 release notes: https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.5","username":"troyronda","ts":"2020-12-09T20:06:23.023Z"}
{"msg":"Included with 0.1.5 is an encrypted remote storage feature, you can read more about it here: https://github.com/hyperledger/aries-framework-go/blob/master/docs/encrypted_storage.md","username":"troyronda","ts":"2020-12-10T13:53:54.113Z"}
{"msg":"Pls, I have an aries-go instance running, how do I get to it's swagger interface?","username":"mupheux","ts":"2020-12-11T16:27:28.860Z"}
{"msg":"?","username":"mupheux","ts":"2020-12-11T17:07:00.420Z"}
{"msg":"@mupheux - https://github.com/hyperledger/aries-framework-go/blob/master/docs/rest/openapi_demo.md - you can refer this page for OpenAPI/Swagger details.","username":"rolsonquadras","ts":"2020-12-11T18:42:30.058Z"}
{"msg":"Thanks. I get this error on the master branch whenever I run \n-> make run-openapi-demo\n\nCreating bob.aries.example.com           ... done\nPulling aries.bdd.sidetree.mock (docker.pkg.github.com/trustbloc-cicd/snapshot/sidetree-mock:0.1.5-snapshot-304ec7a)...\nERROR: Head https://docker.pkg.github.com/v2/trustbloc-cicd/snapshot/sidetree-mock/manifests/0.1.5-snapshot-304ec7a: no basic auth credentials\nmake: *** [run-openapi-demo] Error 1\n\nDoes anyone has an idea what may be wrong or what branch I should run this on other than master. Thanks","username":"mupheux","ts":"2020-12-11T21:09:11.725Z"}
{"msg":"Got latest version, same issue happened \n\nDigest: sha256:b604d056d8024f10346eab768de7aea06bc0a1b7c55d6087e1b1cd4328c8061c\nStatus: Downloaded newer image for couchdb:3.1.0\nPulling kms.example.com (docker.pkg.github.com/trustbloc/hub-kms/kms-rest:0.1.5)...\nERROR: Head https://docker.pkg.github.com/v2/trustbloc/hub-kms/kms-rest/manifests/0.1.5: no basic auth credentials\nmake: *** [run-openapi-demo] Error 1","username":"mupheux","ts":"2020-12-11T21:18:19.782Z"}
{"msg":"Unfortunately you need to authenticate to the GitHub registry.","username":"troyronda","ts":"2020-12-12T00:39:45.643Z"}
{"msg":"Unfortunately you need to authenticate to the GitHub Docker package registry.","username":"troyronda","ts":"2020-12-12T00:39:45.643Z"}
{"msg":"Please see https://github.com/hyperledger/aries-framework-go/blob/master/docs/test/build.md#Prerequisites-(for-running-tests-and-demos)","username":"troyronda","ts":"2020-12-12T00:46:45.199Z"}
{"msg":"Configure Docker to use GitHub Packages - Authenticate using GitHub token","username":"troyronda","ts":"2020-12-12T00:46:52.605Z"}
{"msg":"@mupheux","username":"troyronda","ts":"2020-12-12T00:47:14.539Z"}
{"msg":"Thanks. Got it working. ;)","username":"mupheux","ts":"2020-12-12T02:13:27.304Z"}
{"msg":"do you know of a public example available that showcases didexchange between ACA-Py and aries-framework-go ? just asking before trying to get it working on my own","username":"marc0olo","ts":"2020-12-14T17:44:03.370Z"}
{"msg":"It's not been done yet.  We (ACA-Py team) will also be working on it soon, but haven't started.  The DID Exchange/OOB code just landed in ACA-Py.","username":"swcurran","ts":"2020-12-14T17:50:36.172Z"}
{"msg":"ahh cool. but if I am using the code in the master I should be able to run such an example already?","username":"marc0olo","ts":"2020-12-14T17:51:55.181Z"}
{"msg":"ahh cool. but if I am using the codebase in the master (ACA-Py) I should be able to run such an example already?","username":"marc0olo","ts":"2020-12-14T17:51:55.181Z"}
{"msg":"There is an aca-py to aca-py example that is working, but not one that works with aries-framework-go","username":"swcurran","ts":"2020-12-14T17:55:07.296Z"}
{"msg":"I understood. but if I want to try to get such an example working I would already be able to do so, right?","username":"marc0olo","ts":"2020-12-14T17:56:05.585Z"}
{"msg":"@swcurran As it stands right now, the aries-go version of OOB and didexchange are out of date.  @m00sey and @tarkochevamik have picked up issues https://github.com/hyperledger/aries-framework-go/issues/2283 and https://github.com/hyperledger/aries-framework-go/issues/626 to bring those protocols up to date with the latest RFCs.  You might want to hold off until that work is complete.","username":"pfeairheller","ts":"2020-12-16T12:12:06.726Z"}
{"msg":"we discovered this yesterday, too. @pfeairheller when do you think will v0.1.6 be released?","username":"marc0olo","ts":"2020-12-16T12:18:30.490Z"}
{"msg":"@george.aristy @troyronda are the ones to answer that question!","username":"pfeairheller","ts":"2020-12-16T13:11:22.040Z"}
{"msg":"We'll keep the community updated as we go!","username":"george.aristy","ts":"2020-12-16T14:31:23.825Z"}
{"msg":"Could we use one of the afg planning calls to do a session on long term/short term road map? \nMaybe at the start of the new year?\n\nThat way the community can have a view into what afgâ€™s priorities are. It would give each of the contributors a chance to discuss their goals for the framework too.","username":"m00sey","ts":"2020-12-16T14:43:56.985Z"}
{"msg":"Hi, I am currently trying to create an implicit invitation for didexchange by resolving a DID based on `did:web` and I get the error msg `did method web not supported for vdr`. is it possible to configure the go-framework to use the http vdr via uniresolver?","username":"marc0olo","ts":"2020-12-18T14:56:28.586Z"}
{"msg":"Hi, I am currently trying to create an implicit invitation for didexchange by resolving a DID based on `did:web` and I get the error msg `did method web not supported for vdr`. is it possible to configure the go-framework to use the httpbinding together with the uniresolver to achieve that?","username":"marc0olo","ts":"2020-12-18T14:56:28.586Z"}
{"msg":"it seems like I am not using the httpbinding in my go agent. otherwise \"accept\" should return `true` for every method, right?\nhttps://github.com/hyperledger/aries-framework-go/blob/eebf14a1fae48bad4b7a2fe7a23834ce0aa6e6d9/pkg/vdr/httpbinding/vdr.go#L37","username":"marc0olo","ts":"2020-12-18T15:24:06.183Z"}
{"msg":"I need to configure the registry to use the vdr with the httpbinding, right?","username":"marc0olo","ts":"2020-12-18T15:27:45.442Z"}
{"msg":"I need to say that I am currently running the go agent with the rest binding","username":"marc0olo","ts":"2020-12-18T15:29:59.357Z"}
{"msg":"ok got it. had to set the env param `ARIESD_HTTP_RESOLVER`. now I am facing another issue but the httpresolver is configured :D","username":"marc0olo","ts":"2020-12-18T15:41:16.540Z"}
{"msg":"@marc0olo - also FYI: there is a go implementation of did:web that the framework instance can be instantiated with.","username":"troyronda","ts":"2020-12-18T16:11:08.369Z"}
{"msg":"https://github.com/hyperledger/aries-framework-go/tree/master/pkg/vdr/web","username":"troyronda","ts":"2020-12-18T16:11:42.238Z"}
{"msg":"We should probably add an option to the pre-built docker image for that.","username":"troyronda","ts":"2020-12-18T16:12:14.028Z"}
{"msg":"See https://pkg.go.dev/github.com/hyperledger/aries-framework-go/pkg/framework/aries#WithVDR for the option to pass Go VDRs into the framework instantiation.","username":"troyronda","ts":"2020-12-18T16:14:01.636Z"}
{"msg":"that would be nice! I think for the moment the httpbinding is sufficient for me. it seems like I have to fix my did document as the go framework tells me `public key is nil`","username":"marc0olo","ts":"2020-12-18T16:24:24.348Z"}
{"msg":"just to let you know - I am currently playing around with the `implicit invitation` which is provided by an ACA-Py instance using `did:web`. my go-agent creates and implicit invitation by resolving the `did:web` (which works) and sens a didexchange request to alice (acap-py). on alice's side I get following error:\n```\nagent-acapy-alice          | 2020-12-18 16:41:11,107 aries_cloudagent.transport.pack_format DEBUG Expanded message: {'@type': 'https://didcomm.org/didexchange/1.0/request', '@id': '78b68daa-d362-4d01-ad61-1c5e0c1d5261', 'connection': {'did': 'did:peer:1zQmZsWQJxGh1UCBazpqkmvUjRkYExiDh76pDHzmRdheoVBo', 'did_doc': {'@context': ['https://w3id.org/did/v1'], 'id': 'did:peer:1zQmZsWQJxGh1UCBazpqkmvUjRkYExiDh76pDHzmRdheoVBo', 'verificationMethod': [{'controller': '', 'id': '#ES1wlPC8xJiT1eDmokYO27G19CnC15YRf9t5w-_8cEE', 'publicKeyBase58': '2uQUakZsX31ZJkqstApa93iQJvFTLU1JxxNsgmpYDejn', 'type': 'Ed25519VerificationKey2018'}], 'service': [{'id': '063902e8-85d7-4cb1-bf51-0302ff8b6abb', 'priority': 0, 'recipientKeys': ['2uQUakZsX31ZJkqstApa93iQJvFTLU1JxxNsgmpYDejn'], 'routingKeys': [], 'serviceEndpoint': 'ws://agent-go-ingrid:8001', 'type': 'did-communication'}], 'authentication': ['#ES1wlPC8xJiT1eDmokYO27G19CnC15YRf9t5w-_8cEE'], 'assertionMethod': ['#ES1wlPC8xJiT1eDmokYO27G19CnC15YRf9t5w-_8cEE'], 'created': '2020-12-18T16:41:11.0991661Z', 'updated': '2020-12-18T16:41:11.0991661Z'}}, '~thread': {'pthid': 'did:web:marc0olo.github.io:did-web-test:organization-alice'}}\nagent-acapy-alice          | 2020-12-18 16:41:11,107 aries_cloudagent.protocols.connections.v1_0.manager WARNING No corresponding DID found for sender verkey: 2uQUakZsX31ZJkqstApa93iQJvFTLU1JxxNsgmpYDejn\nagent-acapy-alice          | 2020-12-18 16:41:11,109 aries_cloudagent.messaging.models.base ERROR DIDXRequest message validation error:\nagent-acapy-alice          | Traceback (most recent call last):\nagent-acapy-alice          |   File \"/home/indy/aries_cloudagent/messaging/models/base.py\", line 127, in deserialize\nagent-acapy-alice          |     return schema.loads(obj) if isinstance(obj, str) else schema.load(obj)\nagent-acapy-alice          |   File \"/home/indy/.pyenv/versions/3.6.9/lib/python3.6/site-packages/marshmallow/schema.py\", line 723, in load\nagent-acapy-alice          |     data, many=many, partial=partial, unknown=unknown, postprocess=True\nagent-acapy-alice          |   File \"/home/indy/.pyenv/versions/3.6.9/lib/python3.6/site-packages/marshmallow/schema.py\", line 904, in _do_load\nagent-acapy-alice          |     raise exc\nagent-acapy-alice          | marshmallow.exceptions.ValidationError: {'label': ['Missing data for required field.']}\nagent-acapy-alice          | 2020-12-18 16:41:11,111 aries_cloudagent.core.dispatcher ERROR Message parsing failed: Error deserializing message: DIDXRequest schema validation failed, sending problem report\n```","username":"marc0olo","ts":"2020-12-18T17:07:08.698Z"}
{"msg":"just to let you know - I am currently playing around with the `implicit invitation` which is provided by an ACA-Py instance using `did:web`. my go-agent creates and implicit invitation by resolving the `did:web` (which works) and sends a didexchange request to alice (acap-py). on alice's side I get following error:\n```\nagent-acapy-alice          | 2020-12-18 16:41:11,107 aries_cloudagent.transport.pack_format DEBUG Expanded message: {'@type': 'https://didcomm.org/didexchange/1.0/request', '@id': '78b68daa-d362-4d01-ad61-1c5e0c1d5261', 'connection': {'did': 'did:peer:1zQmZsWQJxGh1UCBazpqkmvUjRkYExiDh76pDHzmRdheoVBo', 'did_doc': {'@context': ['https://w3id.org/did/v1'], 'id': 'did:peer:1zQmZsWQJxGh1UCBazpqkmvUjRkYExiDh76pDHzmRdheoVBo', 'verificationMethod': [{'controller': '', 'id': '#ES1wlPC8xJiT1eDmokYO27G19CnC15YRf9t5w-_8cEE', 'publicKeyBase58': '2uQUakZsX31ZJkqstApa93iQJvFTLU1JxxNsgmpYDejn', 'type': 'Ed25519VerificationKey2018'}], 'service': [{'id': '063902e8-85d7-4cb1-bf51-0302ff8b6abb', 'priority': 0, 'recipientKeys': ['2uQUakZsX31ZJkqstApa93iQJvFTLU1JxxNsgmpYDejn'], 'routingKeys': [], 'serviceEndpoint': 'ws://agent-go-ingrid:8001', 'type': 'did-communication'}], 'authentication': ['#ES1wlPC8xJiT1eDmokYO27G19CnC15YRf9t5w-_8cEE'], 'assertionMethod': ['#ES1wlPC8xJiT1eDmokYO27G19CnC15YRf9t5w-_8cEE'], 'created': '2020-12-18T16:41:11.0991661Z', 'updated': '2020-12-18T16:41:11.0991661Z'}}, '~thread': {'pthid': 'did:web:marc0olo.github.io:did-web-test:organization-alice'}}\nagent-acapy-alice          | 2020-12-18 16:41:11,107 aries_cloudagent.protocols.connections.v1_0.manager WARNING No corresponding DID found for sender verkey: 2uQUakZsX31ZJkqstApa93iQJvFTLU1JxxNsgmpYDejn\nagent-acapy-alice          | 2020-12-18 16:41:11,109 aries_cloudagent.messaging.models.base ERROR DIDXRequest message validation error:\nagent-acapy-alice          | Traceback (most recent call last):\nagent-acapy-alice          |   File \"/home/indy/aries_cloudagent/messaging/models/base.py\", line 127, in deserialize\nagent-acapy-alice          |     return schema.loads(obj) if isinstance(obj, str) else schema.load(obj)\nagent-acapy-alice          |   File \"/home/indy/.pyenv/versions/3.6.9/lib/python3.6/site-packages/marshmallow/schema.py\", line 723, in load\nagent-acapy-alice          |     data, many=many, partial=partial, unknown=unknown, postprocess=True\nagent-acapy-alice          |   File \"/home/indy/.pyenv/versions/3.6.9/lib/python3.6/site-packages/marshmallow/schema.py\", line 904, in _do_load\nagent-acapy-alice          |     raise exc\nagent-acapy-alice          | marshmallow.exceptions.ValidationError: {'label': ['Missing data for required field.']}\nagent-acapy-alice          | 2020-12-18 16:41:11,111 aries_cloudagent.core.dispatcher ERROR Message parsing failed: Error deserializing message: DIDXRequest schema validation failed, sending problem report\n```","username":"marc0olo","ts":"2020-12-18T17:07:08.698Z"}
{"msg":"I want to test the implicit invitation of didexchange using aries-go. can I just create a keyset using the kms endpoint and publish that public key in the recipientKeys array within the service of the did-document? I am wondering about the format of the public key when creating a keypair with keytype `ED25519`. I got following public key: `GXuoM_hWSIQs1pq3I7CX0Pa_E1-OQgn38dP_twE78o4`","username":"marc0olo","ts":"2020-12-22T09:23:36.503Z"}
{"msg":"Has joined the channel.","username":"newdev42","ts":"2020-12-29T02:56:26.346Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ghabxph","ts":"2021-01-02T08:18:03.329Z","type":"uj"}
{"msg":"Is aries go framework able to connect with indy/von-network and use it as a vdr?","username":"kapster","ts":"2021-01-04T09:56:12.244Z"}
{"msg":"Yes you can, using the Indy VDR extension found in the `aries-framework-go-ext` repo...  we are hoping to get it merged into `main` today!","username":"pfeairheller","ts":"2021-01-05T17:01:15.517Z"}
{"msg":"it's now merged :).","username":"troyronda","ts":"2021-01-05T17:57:20.687Z"}
{"msg":"Having issues running the bdd tests `ERROR: Head \"https://docker.pkg.github.com/v2/trustbloc-cicd/snapshot/sidetree-mock/manifests/0.1.5-snapshot-304ec7a\": no basic auth credentials` - I am `docker login`'d something else I am missing?","username":"m00sey","ts":"2021-01-05T19:26:02.283Z"}
{"msg":"@m00sey This is due to the original GitHub docker registry requiring authentication even for anonymous access.","username":"troyronda","ts":"2021-01-05T19:28:41.685Z"}
{"msg":"I am working on migrating to the new container registry.","username":"troyronda","ts":"2021-01-05T19:28:52.644Z"}
{"msg":"@m00sey https://github.com/hyperledger/aries-framework-go/pull/2428/files","username":"troyronda","ts":"2021-01-05T19:42:20.493Z"}
{"msg":"ah great, thank you","username":"m00sey","ts":"2021-01-05T19:45:52.332Z"}
{"msg":"Think I am making the bdd stuff harder than it is - trying to run now I get \n\n```failed to get successful response from 'http://localhost:48326/sidetree/0.0.1/operations', unexpected status code [400], and message [bad request: recovery and update commitments cannot be equal, re-using public keys is not allowed]```\n\n@ianco is this something you hit when you were running this recently?","username":"m00sey","ts":"2021-01-06T03:01:29.935Z"}
{"msg":"Nope this is a new error","username":"ianco","ts":"2021-01-06T03:38:50.940Z"}
{"msg":"@m00sey I just successfully ran bdd tests locally. What step are you having an issue? Perhaps reset your docker containers?","username":"troyronda","ts":"2021-01-06T14:49:46.296Z"}
{"msg":"great :thumbsup:  @pfeairheller  @troyronda but is it possible to use that extension with mobile agent as well?","username":"kapster","ts":"2021-01-07T12:30:13.979Z"}
{"msg":"since this extension requires `libindy-vdr.so` share lib it will not run on a mobile device.  However, you could build the `aries-rest-agent` with this extension enabled and run your mobile agent connected to the rest agent.","username":"pfeairheller","ts":"2021-01-07T12:38:07.145Z"}
{"msg":"@pfeairheller are there any plans to make mobile bindings for that extension? or because of `libindy-vdr` dependency it is not likely to happen?","username":"kapster","ts":"2021-01-07T13:54:15.932Z"}
{"msg":"@troyronda thanks, I cleaned up my docker images and I've checked out master and am attempting to run bdd - apologies for not getting back to you, I got distracted yesterdat","username":"m00sey","ts":"2021-01-07T15:25:12.148Z"}
{"msg":"@troyronda thanks, I cleaned up my docker images and I've checked out master and am attempting to run bdd - apologies for not getting back to you, I got distracted yesterday","username":"m00sey","ts":"2021-01-07T15:25:12.148Z"}
{"msg":"@here we have now re-published the last release docker image to the new GitHub container repository.","username":"troyronda","ts":"2021-01-07T19:57:44.575Z"}
{"msg":"@here we have now re-published the last release docker image to the new GitHub container repository (was agent-rest).","username":"troyronda","ts":"2021-01-07T19:57:44.575Z"}
{"msg":"docker pull ghcr.io/hyperledger/aries-framework-go:0.1.5","username":"troyronda","ts":"2021-01-07T19:57:51.908Z"}
{"msg":"the new GitHub container registry allows for anonymous pulls.","username":"troyronda","ts":"2021-01-07T19:58:31.209Z"}
{"msg":"https://github.com/orgs/hyperledger/packages/container/package/aries-framework-go","username":"troyronda","ts":"2021-01-07T19:59:13.270Z"}
{"msg":"Has joined the channel.","username":"da3v21","ts":"2021-01-10T12:28:34.676Z","type":"uj"}
{"msg":"Hi Everyone, Question on DIDExchange. The docs day to call `HTTP POST /connections/create-invitation` to initiate the DID Exchange Protocol. Can the `outofband/create-invitation` be used just as well as the connections call? I ask because the DID Exchange RFC 0023 states to do the invitation through OOB. To further that, if it can, is this the proper order of operations for DID Exchange with OOB?\n```\noutofband/create-invitation\noutofband/accept-invitation\nconnections/accept-invitation\nconnections/accept-request\n```\nThanks.","username":"sheldon.regular","ts":"2021-01-11T22:01:51.152Z"}
{"msg":"pls I need a  sample request for (POST) introduceâ€‹/send-request**","username":"mupheux","ts":"2021-01-11T23:53:19.315Z"}
{"msg":"{\n  \"my_did\": \"string\",\n  \"please_introduce_to\": {\n    \"description\": \"string\",\n    \"description~l10n\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    },\n    \"img~attach\": {\n      \"content\": {\n        \"byte_count\": 0,\n        \"link\": \"string\",\n        \"sha256\": \"string\"\n      },\n      \"description\": \"string\",\n      \"filename\": \"string\",\n      \"mime-type\": \"string\"\n    },\n    \"name\": \"string\",\n    \"proposed\": true,\n    \"where\": \"string\"\n  },\n  \"their_did\": \"string\"\n}","username":"mupheux","ts":"2021-01-11T23:54:15.779Z"}
{"msg":"with possible values and not string","username":"mupheux","ts":"2021-01-11T23:54:33.778Z"}
{"msg":"@troyronda maybe you could answer my question, if there are any plans to make it possible to use ``framework-go-ext` on mobile devices or whether it is even possible at all. I cannot use rest agent and for me useing mobile bindings in native code seems much better option than xamarin","username":"kapster","ts":"2021-01-12T08:48:35.819Z"}
{"msg":"I assume you are asking about mobile indy bindings in aries framework go. (since most other components are buildable for mobile).\n\nWe don't personally have plans for this effort but maybe others do.","username":"troyronda","ts":"2021-01-12T13:40:03.892Z"}
{"msg":"I assume you are asking about mobile indy bindings in aries framework go. (since most other components are buildable for mobile).\n\nWe don't personally have plans for this effort but others are welcome to do so.","username":"troyronda","ts":"2021-01-12T13:40:03.892Z"}
{"msg":"I assume you are asking about mobile indy bindings for aries framework go. (since most other components are buildable for mobile).\n\nWe don't personally have plans for this effort but others are welcome to do so.","username":"troyronda","ts":"2021-01-12T13:40:03.892Z"}
{"msg":"@kapster","username":"troyronda","ts":"2021-01-12T13:40:10.034Z"}
{"msg":"@mupheux we have BDD tests that cover this logic\nhttps://github.com/hyperledger/aries-framework-go/blob/master/test/bdd/pkg/introduce/introduce_controller_steps.go#L241","username":"soluchok","ts":"2021-01-12T13:42:01.443Z"}
{"msg":"@mupheux let me know if you have an issues","username":"soluchok","ts":"2021-01-12T13:43:58.702Z"}
{"msg":"@mupheux let me know if you have any issues","username":"soluchok","ts":"2021-01-12T13:43:58.702Z"}
{"msg":"@sheldon.regular Yes you can use ` outofband/create-invitation`","username":"sudeshrshetty","ts":"2021-01-12T13:52:02.214Z"}
{"msg":"I can get this to work {{alice_url}}/connections?state=requested but filtering on  invitationid fails {{alice_url}}/connections?invitationid=e486bc66-9faf-47be-8fe6-d8c3a2e766bd. Pls how do I filter based on invitationid? Thanks","username":"mupheux","ts":"2021-01-12T21:08:53.488Z"}
{"msg":"@mupheux you can't do that. `/connections` API do not support filtering by `invitationid`.","username":"soluchok","ts":"2021-01-13T10:11:43.300Z"}
{"msg":"@soluchok as @troyronda mentioned above you have been working on injectable storage for mobile. Has it been done or that issue is still opened? I am experiencing crashes and just wonder whether it is not completed or I don't know how to use it.","username":"kapster","ts":"2021-01-13T14:07:31.012Z"}
{"msg":"@mupheux I have created a PR. Pls, take a look.\nhttps://github.com/hyperledger/aries-framework-go/pull/2443","username":"soluchok","ts":"2021-01-13T15:03:35.379Z"}
{"msg":"Thanks","username":"mupheux","ts":"2021-01-13T19:30:44.075Z"}
{"msg":"We will be renaming master branch of aries-framework-go to main. Once this is done you will need to update your local copy as follows:\ngit branch -m master main\ngit fetch origin\ngit branch -u origin/main main","username":"troyronda","ts":"2021-01-15T15:07:58.246Z"}
{"msg":"@here branch has been renamed to main.","username":"troyronda","ts":"2021-01-15T15:17:15.272Z"}
{"msg":":beers:","username":"m00sey","ts":"2021-01-15T15:50:53.774Z"}
{"msg":"BBS+ support in Presentation Exchange has been merged: https://github.com/hyperledger/aries-framework-go/pull/2454","username":"troyronda","ts":"2021-01-15T21:09:36.912Z"}
{"msg":"make run-openapi-demo gives this error. Anyone know what may be wrong? I use to run this without issues\n\nGenerate demo agent rest controller API specifications using Open API\n2021/01/16 00:19:10 args[0] = build/rest/openapi/spec/openAPI.yml\n2021/01/16 00:19:10 args[1:] = [test/bdd/fixtures/demo/openapi/specs/localhost:10081.yml]\nopen build/rest/openapi/spec/openAPI.yml: no such file or directory\nmake: *** [Makefile:97: generate-openapi-demo-specs] Error 1\n\nthis is on the master  branch","username":"mupheux","ts":"2021-01-16T00:23:54.921Z"}
{"msg":"Perhaps it is an OS issue. I just tried the latest from main branch on MacOS without this error.","username":"troyronda","ts":"2021-01-16T18:36:39.969Z"}
{"msg":"Ok. I will try on a mac os x","username":"mupheux","ts":"2021-01-18T14:23:14.422Z"}
{"msg":"Thanks. You are right. It worked on my mac","username":"mupheux","ts":"2021-01-18T16:23:51.526Z"}
{"msg":"Is it right that we have stuff working on Mac OS X's bash and not a linux bash?","username":"mupheux","ts":"2021-01-18T16:24:31.659Z"}
{"msg":"Several of the developers are testing using their Macs. The CI tests on Linux for Unit Tests and BDD tests. Unfortunately some demo aspects don't get run in the CI so don't get caught... Of course, we welcome PRs to fix issues as well. @mupheux","username":"troyronda","ts":"2021-01-18T16:29:00.091Z"}
{"msg":"Has joined the channel.","username":"daidoji","ts":"2021-01-19T16:30:47.434Z","type":"uj"}
{"msg":"question, I remember wondering what the differences were between W3C VCs and the VCs issued by Hyperledger Indy and that at the time someone mentioned that aries-go produced W3C VCs as well as Indy VCs.  Is this true?  If it is, does there exist documentation for what the similarities and differences are between the two credentials in detail?","username":"daidoji","ts":"2021-01-19T16:30:47.877Z"}
{"msg":"I see a few blog posts that gloss over some of the basic differences but at a high level.","username":"daidoji","ts":"2021-01-19T16:31:04.267Z"}
{"msg":"(which are obvious, jwt vs jsonld)","username":"daidoji","ts":"2021-01-19T16:43:05.111Z"}
{"msg":"Hi, for every running aries go agent running, can I get to the swagger interface for it? If so what is the URL? I tried the same one the demo does but doesn't work.","username":"sheldon.regular","ts":"2021-01-19T16:52:08.807Z"}
{"msg":"Hi, for every running aries go agent, can I get to the swagger interface for it? If so what is the URL? I tried the same one the demo does but doesn't work.","username":"sheldon.regular","ts":"2021-01-19T16:52:08.807Z"}
{"msg":"I am getting this errors with afgo with webhooks. Can anyone pls explain these errors. What can be the problem?\n\n[aries-framework/out-of-band/service] 2021/01/19 17:33:22 UTC - n/a -> ERROR command=[out-of-band] action=[handleDIDEvent] [] errMsg=[ignored]\n [aries-framework/out-of-band/service] 2021/01/19 17:33:22 UTC - n/a -> ERROR command=[out-of-band] action=[handleDIDEvent] [] errMsg=[ignored]\n [aries-framework/webnotifier] 2021/01/19 17:33:22 UTC - webnotifier.(*Observer).notify -> ERROR notify: notification was sent to http://10.10.2.42:9023/webhooks, but 404 Not Found was received;<nil>\n [aries-framework/out-of-band/service] 2021/01/19 17:33:22 UTC - n/a -> ERROR command=[out-of-band] action=[handleDIDEvent] [] errMsg=[ignored]\n [aries-framework/webnotifier] 2021/01/19 17:33:22 UTC - webnotifier.(*Observer).notify -> ERROR notify: notification was sent to http://10.10.2.42:9023/webhooks, but 404 Not Found was received;<nil>\n [aries-framework/out-of-band/service] 2021/01/19 17:33:22 UTC - n/a -> ERROR command=[out-of-band] action=[handleDIDEvent] [] errMsg=[service.handleDIDEvent: ParentThreadID is empty]\n [aries-framework/webnotifier] 2021/01/19 17:33:22 UTC - webnotifier.(*Observer).notify -> ERROR notify: notification was sent to http://10.10.2.42:9023/webhooks, but 404 Not Found was received;<nil>\n [aries-framework/webnotifier] 2021/01/19 17:33:22 UTC - webnotifier.(*Observer).notify -> ERROR notify: notification was sent to http://10.10.2.42:9023/webhooks, but 404 Not Found was received;<nil>","username":"mupheux","ts":"2021-01-19T17:40:51.516Z"}
{"msg":"*these errors","username":"mupheux","ts":"2021-01-19T17:41:04.084Z"}
{"msg":"Did you run `make run-openapi-demo`?  this one will generate open api spec and also brings up the agent REST instances.\n\nor just run `make generate-openapi-spec`, this one will generate open api spec at build/rest/openapi/spec","username":"sudeshrshetty","ts":"2021-01-19T20:35:08.827Z"}
{"msg":"Did you configure `ARIESD_WEBHOOK_URL` during startup? \n\nIf yes, then topic message will be posted to configured URL (http POST). In this URL looks like `http://10.10.2.42:9023/webhooks` is throwing 404","username":"sudeshrshetty","ts":"2021-01-19T20:42:16.005Z"}
{"msg":"The env var was not used, the --webhook-url option was.","username":"sheldon.regular","ts":"2021-01-19T20:56:10.864Z"}
{"msg":"same thing, it should work, did you","username":"sudeshrshetty","ts":"2021-01-19T21:59:16.147Z"}
{"msg":"same thing, it should work, did you pass `http://10.10.2.42:9023/webhooks` ?","username":"sudeshrshetty","ts":"2021-01-19T21:59:16.147Z"}
{"msg":"yes `--webhook-url http://10.10.2.42:9023/webhooks`","username":"sheldon.regular","ts":"2021-01-19T22:01:06.773Z"}
{"msg":"`make generate-openapi-spec` gives this error in my container\n`make: *** [Makefile:217: clean-fixtures] Error 127`\nIs there something else I need? I've cloned the aries-framework-go in my container. `make agent-rest` works.","username":"sheldon.regular","ts":"2021-01-19T22:29:33.026Z"}
{"msg":"Check your webhook handler, refer this one from bddtests https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/webhook/main.go#L32-L40","username":"sudeshrshetty","ts":"2021-01-19T22:58:49.496Z"}
{"msg":"Ok. Thanks. I will check that","username":"mupheux","ts":"2021-01-19T22:59:34.196Z"}
{"msg":"can you post whole error message? looks like make target `clean-fixtures` is causing issues. something related to cleaning up files here https://github.com/hyperledger/aries-framework-go/blob/main/Makefile#L215-L219","username":"sudeshrshetty","ts":"2021-01-19T23:07:30.047Z"}
{"msg":"comment out that target and try","username":"sudeshrshetty","ts":"2021-01-19T23:08:05.198Z"}
{"msg":"aries-go only produces W3C VCs (i.e., https://www.w3.org/TR/vc-data-model/ )","username":"troyronda","ts":"2021-01-20T00:15:56.433Z"}
{"msg":"@troyronda thanks.  I guess what I was wondering is what are the particular differences in detail?  Is there a document or blog post that details that part?","username":"daidoji","ts":"2021-01-20T01:47:24.724Z"}
{"msg":"@troyronda hey you're probably busy but I was wondering if you could help me","username":"daidoji","ts":"2021-01-21T02:26:57.560Z"}
{"msg":"even just pointing to resources or just \"compare the specs side by side\" would be helpful because its not clear what the similarities are and what the differences are.","username":"daidoji","ts":"2021-01-21T02:27:21.958Z"}
{"msg":"Presentation exchange attachment format implemented in AFG: https://github.com/hyperledger/aries-framework-go/pull/2472","username":"troyronda","ts":"2021-01-21T16:09:59.439Z"}
{"msg":"@kapster it was done long time ago, soon we will have a new storage interface ","username":"soluchok","ts":"2021-01-22T14:55:58.329Z"}
{"msg":"@kapster I can confirm that it works. Let me know if you have issues. You can check our mem implementation in Go(as an example) also make sure that you return message â€œdata not foundâ€œ when you have no data.","username":"soluchok","ts":"2021-01-22T15:13:03.842Z"}
{"msg":"Hi Everyone. We are attempting to get acapy and afgo to interoperate. There seems to be an issue with non-standard attributes in messages in afgo. For example the invitation created by afgo has `ID` instead of `id`, and `Type` instead of `type`, etc.  Thoughts on standardizing on attributes?","username":"sheldon.regular","ts":"2021-02-02T16:57:06.443Z"}
{"msg":"Yes -- attributes should be standardized.","username":"troyronda","ts":"2021-02-02T17:48:12.505Z"}
{"msg":"Has joined the channel.","username":"ascatox","ts":"2021-02-03T08:59:30.378Z","type":"uj"}
{"msg":"So are these going to be fixed?  We're trying to get ACA-Py and AF-Go working, and we're stuck on this.","username":"swcurran","ts":"2021-02-03T14:35:37.190Z"}
{"msg":"Idea on timing?","username":"swcurran","ts":"2021-02-03T14:35:50.076Z"}
{"msg":"I mentioned in today's daily standup. George will take a look. @swcurran","username":"troyronda","ts":"2021-02-03T15:07:33.081Z"}
{"msg":"I mentioned in today's daily standup. @george.aristy will take a look. @swcurran","username":"troyronda","ts":"2021-02-03T15:07:33.081Z"}
{"msg":"Hi @sheldon.regular . I'm assuming you're referring to Out-of-Band invitations. AFGO is rendering those fields as `@type` and `@id` on the wire just like the OOB RFC says: https://github.com/hyperledger/aries-framework-go/blob/f1c7f7aa39eca010c0c14cdb8ea7e0287db52368/pkg/didcomm/protocol/outofband/models.go#L22-L31","username":"george.aristy","ts":"2021-02-03T15:11:57.446Z"}
{"msg":"Can you be more specific? What is it you are doing? What interface are you getting this invitation from?","username":"george.aristy","ts":"2021-02-03T15:12:14.297Z"}
{"msg":"Hi @george.aristy the outofband/create-invitation operation returns this as the invitation. We use this on the OOB/receive-invitation in acapy. \n```\n{\n   \"invitation\":{\n      \"@id\":\"a471422f-0529-45c3-be0d-43201a617966\",\n      \"@type\":\"https://didcomm.org/oob-invitation/1.0/invitation\",\n      \"label\":\"Bob\",\n      \"service\":[\n         {\n            \"ID\":\"bf606d6e-6e0e-46cd-a5d0-eebdc74cf262\",\n            \"Type\":\"did-communication\",\n            \"Priority\":0,\n            \"RecipientKeys\":[\n               \"CMfUhBRNiWMA4vBkNbQWHrDFsjoGqWmQf8iiLXwhAAV3\"\n            ],\n            \"RoutingKeys\":null,\n            \"ServiceEndpoint\":\"http://192.168.65.3:8031\",\n            \"Properties\":null\n         }\n      ],\n      \"protocols\":[\n         \"https://didcomm.org/didexchange/1.0\"\n      ]\n   },\n   \"state\":\"invitation-sent\",\n   \"service\":\"\"[\\\\\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/v1.0\\\\\"]\"\n}\n```","username":"sheldon.regular","ts":"2021-02-03T15:29:54.942Z"}
{"msg":"We are looking inside the service block.","username":"sheldon.regular","ts":"2021-02-03T15:32:26.444Z"}
{"msg":"Can you post the request you used to create that invitation?","username":"george.aristy","ts":"2021-02-03T15:52:50.330Z"}
{"msg":"Real simple. We do a POST\nhttp://localhost:8032/outofband/create-invitation \nWith this message,\n{\"label\": \"Bob\"}","username":"sheldon.regular","ts":"2021-02-03T16:03:24.978Z"}
{"msg":"Bug identified. Pushing out a fix in a few minutes.","username":"george.aristy","ts":"2021-02-03T16:13:28.985Z"}
{"msg":"Awesome, thanks!","username":"sheldon.regular","ts":"2021-02-03T16:15:17.833Z"}
{"msg":"@sheldon.regular fix has been merged. Can you try again?","username":"george.aristy","ts":"2021-02-03T19:58:08.656Z"}
{"msg":"Sure. I'm running something else at the moment, but will check in an hour or so.","username":"sheldon.regular","ts":"2021-02-03T19:59:07.668Z"}
{"msg":"@george.aristy That seemed to work, however, acapy is now asking for a proper W3C did:key format. So I think the \n```\n\"RecipientKeys\":[      \"CMfUhBRNiWMA4vBkNbQWHrDFsjoGqWmQf8iiLXwhAAV3\"\n            ]\n```\nshould be \n```\n\"RecipientKeys\":[              \"did:key:CMfUhBRNiWMA4vBkNbQWHrDFsjoGqWmQf8iiLXwhAAV3\"\n            ]\n```","username":"sheldon.regular","ts":"2021-02-03T21:46:51.765Z"}
{"msg":"@george.aristy That seemed to work, however, acapy is now asking for a proper W3C did:key format. So I think the \n```\n\"recipientKeys\":[      \"CMfUhBRNiWMA4vBkNbQWHrDFsjoGqWmQf8iiLXwhAAV3\"\n            ]\n```\nshould be \n```\n\"recipientKeys\":[              \"did:key:CMfUhBRNiWMA4vBkNbQWHrDFsjoGqWmQf8iiLXwhAAV3\"\n            ]\n```","username":"sheldon.regular","ts":"2021-02-03T21:46:51.765Z"}
{"msg":"resolver","username":"kapster","ts":"2021-02-08T13:45:22.475Z"}
{"msg":"@george.aristy -- any progress on this?","username":"swcurran","ts":"2021-02-08T14:13:31.106Z"}
{"msg":"Pls each time I invoke I get this reply \n{\n    \"actions\": []\n}\ninstead of \n{\n  \"actions\": [\n    {\n      \"Msg\": {\n        \"additionalProp1\": {},\n        \"additionalProp2\": {},\n        \"additionalProp3\": {}\n      },\n      \"MyDID\": \"string\",\n      \"PIID\": \"string\",\n      \"TheirDID\": \"string\"\n    }\n  ]\n}\nas stipulated in the swagger ui and an OOB connection already exist. Pls what may be wrong?","username":"mupheux","ts":"2021-02-08T17:52:42.781Z"}
{"msg":"The question is, how do I get the following values MyDID, PIID and TheirDID with afgo issuecredential","username":"mupheux","ts":"2021-02-08T17:56:29.811Z"}
{"msg":"?","username":"mupheux","ts":"2021-02-08T17:56:31.903Z"}
{"msg":"@swcurran @sheldon.regular this is being looked at - will get back to you later on today for an ETA on the fix","username":"george.aristy","ts":"2021-02-08T19:26:23.032Z"}
{"msg":"@swcurran @sheldon.regular the fix has been merged - please pull in the latest version and test","username":"george.aristy","ts":"2021-02-10T01:36:51.632Z"}
{"msg":"Has joined the channel.","username":"etaleo","ts":"2021-02-10T14:27:08.767Z","type":"uj"}
{"msg":"What is the current state of the Aries Framework Go regarding the support of Rich Schemas?","username":"etaleo","ts":"2021-02-10T14:40:07.768Z"}
{"msg":"Has joined the channel.","username":"enroll7","ts":"2021-02-10T14:40:28.208Z","type":"uj"}
{"msg":"Nice!  Thanks.","username":"swcurran","ts":"2021-02-10T15:11:33.392Z"}
{"msg":"Awesome. Will retest soon.","username":"sheldon.regular","ts":"2021-02-10T15:13:14.536Z"}
{"msg":"@george.aristy  One more item seems to have been identified. In the invitation created by afgo the @type is set to `https://didcomm.org/oob-invitation/1.0/invitation`, according to the RFC (and this is also what acapy does) @type should be set to `https://didcomm.org/out-of-band/1.0/invitation`","username":"sheldon.regular","ts":"2021-02-10T22:26:11.393Z"}
{"msg":"@sheldon.regular this just fixed - please test with the latest version","username":"george.aristy","ts":"2021-02-11T16:14:44.540Z"}
{"msg":"will do","username":"sheldon.regular","ts":"2021-02-11T16:56:34.150Z"}
{"msg":"@george.aristy -- another interop problem.  The message mime type is different between ACA-Py (and other frameworks AFD, notably) and AF-Go.  We're going to need a community update RFC that I'll provide.  In the meantime, could AF-Go change to support receiving both mime types (old/current: application/ssi-agent-wire , new: application/didcomm-envelope-enc).  We're going to do the same in ACA-Py, but for now continue to use the old one,. so that we still work with AFD.  AF-Go can send out what you want.\n\nReasonable?","username":"swcurran","ts":"2021-02-11T19:22:44.418Z"}
{"msg":"@swcurran ok so to be clear we are referring to content-types at the transport level, and that both will continue sending what they are sending today, and both will accept both content-type values","username":"george.aristy","ts":"2021-02-12T12:49:13.455Z"}
{"msg":"seems a simple change","username":"george.aristy","ts":"2021-02-12T12:49:49.905Z"}
{"msg":"Weird though because RFC0025 is included in AIP 1.0","username":"george.aristy","ts":"2021-02-12T12:52:02.430Z"}
{"msg":"Yup -- looks like it. Weird -- but reality.","username":"swcurran","ts":"2021-02-12T16:22:42.102Z"}
{"msg":"@george.aristy There seems to be another item that may need your attention. It seems, when afgo is acting as the requester and acapy as the responder in did-exchange, when the requester receives the invitation by doing the outofband/accept-invitation operation, acapy throws an error \n```\nFile \"/usr/local/lib/python3.7/site-packages/aries_cloudagent/protocols/didexchange/v1_0/manager.py\", line 348, in receive_request\n    \"DID Doc attachment missing or has no data: \"\naries_cloudagent.protocols.didexchange.v1_0.manager.DIDXManagerError: DID Doc attachment missing or has no data: cannot connect to public DID\n```\nDebugging through reveals that it is in deed the case that the request from afgo is missing the DID Doc attachment.  This is what the request acapy receive looks like.\n```\nDIDXManager.receive-request()\n.. request: {\"@type\":\"https://didcomm.org/didexchange/1.0/request\",\"@id\":\"ea940d95-46d8-4adf-b192-345aa62e0244\",\"~thread\":{\"thid\":\"ea940d95-46d8-4adf-b192-345aa62e0244\",\"pthid\":\"5e71e386-5f3e-458d-b761-fef3832abf37\"},\"label\":\"aca-py\"}\n.. receipt: <MessageReceipt(_connection_id=None, _direct_response_mode=None, _in_time='2021-02-12 16:47:53.743121Z', _raw_message='{\"@type\":\"https://didcomm.org/didexchange/1.0/request\",\"@id\":\"ea940d95-46d8-4adf-b192-345aa62e0244\",\"label\":\"aca-py\",\"connection\":{\"did\":\"did:peer:1zQmYW5kZKzTPV6SDTXZLpbRb9qQGLo5fNCBCSjkPQ63FZJT\",\"did_doc\":{\"@context\":[\"https://w3id.org/did/v1\"],\"id\":\"did:peer:1zQmYW5kZKzTPV6SDTXZLpbRb9qQGLo5fNCBCSjkPQ63FZJT\",\"verificationMethod\":[{\"controller\":\"\",\"id\":\"#wlbwYvL6t9fwfdLC9u1BV5tR7ATsfLTitv4TYMRFo3Y\",\"publicKeyBase58\":\"CD4LYFSyBYkkLrKfjQUDNXwvJYh8gqSWRVZzhPvavZa7\",\"type\":\"Ed25519VerificationKey2018\"}],\"service\":[{\"id\":\"ea0941e6-47be-4f81-934b-6d000ed78975\",\"priority\":0,\"recipientKeys\":[\"did:key:z6MkqfKP8VhQX6FDTMANQyS4DdVv87xz6igs7WUvXftbqnMV\"],\"routingKeys\":[],\"serviceEndpoint\":\"http://192.168.65.3:8021\",\"type\":\"did-communication\"}],\"authentication\":[\"#wlbwYvL6t9fwfdLC9u1BV5tR7ATsfLTitv4TYMRFo3Y\"],\"assertionMethod\":[\"#wlbwYvL6t9fwfdLC9u1BV5tR7ATsfLTitv4TYMRFo3Y\"],\"created\":\"2021-02-12T16:47:53.7392467Z\",\"updated\":\"2021-02-12T16:47:53.7392467Z\"}},\"~thread\":{\"thid\":\"ea940d95-46d8-4adf-b192-345aa62e0244\",\"pthid\":\"5e71e386-5f3e-458d-b761-fef3832abf37\"}}', _recipient_verkey='5Ta5u2mfQXvaPoYu9uRQTghj8N6BNJmFJaw6ymqvUWhn', _recipient_did=None, _recipient_did_public=None, _sender_did=None, _sender_verkey='CD4LYFSyBYkkLrKfjQUDNXwvJYh8gqSWRVZzhPvavZa7', _thread_id='ea940d95-46d8-4adf-b192-345aa62e0244')>\n```","username":"sheldon.regular","ts":"2021-02-12T19:44:30.627Z"}
{"msg":"I get this error when trying to run\n\n> make run-openapi-demo\n\nand got this error runtime: increase the mlock limit (ulimit -l). Does anyone know how I can fix this. don't get this error before. Thanks","username":"mupheux","ts":"2021-02-12T20:42:33.589Z"}
{"msg":"","username":"ghabxph","ts":"2021-02-13T15:08:25.347Z","attachments":[{"type":"file","title":"Clipboard - February 13, 2021 11:07 PM","title_link":"/file-upload/QTrkeW5z3fZMDjTcT/Clipboard%20-%20February%2013,%202021%2011:07%20PM","image_url":"/file-upload/QTrkeW5z3fZMDjTcT/Clipboard%20-%20February%2013,%202021%2011:07%20PM","image_type":"image/png","image_size":192183,"url":"/file-upload/QTrkeW5z3fZMDjTcT/Clipboard%20-%20February%2013,%202021%2011:07%20PM","remote":false,"fileId":"QTrkeW5z3fZMDjTcT","fileName":"Clipboard - February 13, 2021 11:07 PM"}]}
{"msg":"","username":"ghabxph","ts":"2021-02-13T15:09:27.943Z","attachments":[{"type":"file","title":"Clipboard - February 13, 2021 11:08 PM","title_link":"/file-upload/nHAjkcrLQZ6dK7SRQ/Clipboard%20-%20February%2013,%202021%2011:08%20PM","image_url":"/file-upload/nHAjkcrLQZ6dK7SRQ/Clipboard%20-%20February%2013,%202021%2011:08%20PM","image_type":"image/png","image_size":192183,"url":"/file-upload/nHAjkcrLQZ6dK7SRQ/Clipboard%20-%20February%2013,%202021%2011:08%20PM","remote":false,"fileId":"nHAjkcrLQZ6dK7SRQ","fileName":"Clipboard - February 13, 2021 11:08 PM"}]}
{"msg":"How can we get started with Aries Go Framework?","username":"ghabxph","ts":"2021-02-13T15:10:40.045Z"}
{"msg":"I managed to solved it.\n\nSteps:\n```\n// Use main\n1. go get github.com/hyperledger/aries-framework-go@main\n\n2. Just guessed that these codes\n\tframework, err := New(\n\t\tWithInboundTransport(newMockInTransport()),\n\t\tWithStoreProvider(newMockDBProvider()),\n\t\tWithProtocolStateStoreProvider(newMockDBProvider()),\n\t)\n\nbelong to aries package.\n\"github.com/hyperledger/aries-framework-go/pkg/framework/aries\"\n```\n\nIt would be really nice if docs are updated. It's so hard to start working with aries. Things doesn't work on the spot :/","username":"ghabxph","ts":"2021-02-13T15:37:35.471Z"}
{"msg":"Is this test suite still relevant?  Does aries-go pass these tests? https://github.com/w3c/vc-test-suite","username":"daidoji","ts":"2021-02-14T15:28:39.996Z"}
{"msg":"Yes. It is run using this code: https://github.com/hyperledger/aries-framework-go/tree/main/pkg/doc/verifiable/test-suite","username":"troyronda","ts":"2021-02-16T14:36:19.910Z"}
{"msg":"Here are CI results: https://github.com/hyperledger/aries-framework-go/actions?query=workflow%3Atest-suite","username":"troyronda","ts":"2021-02-16T14:37:14.927Z"}
{"msg":"It's a good point and PRs are welcome :).","username":"troyronda","ts":"2021-02-16T14:42:02.869Z"}
{"msg":"It's a good point and PRs are welcome @ghabxph\n :).","username":"troyronda","ts":"2021-02-16T14:42:02.869Z"}
{"msg":"Cool, thanks!","username":"daidoji","ts":"2021-02-16T15:09:49.047Z"}
{"msg":"Tracking issue: https://github.com/hyperledger/aries-framework-go/issues/2495","username":"george.aristy","ts":"2021-02-16T15:18:45.228Z"}
{"msg":"Has joined the channel.","username":"chrisconway","ts":"2021-02-16T19:09:59.342Z","type":"uj"}
{"msg":"@daidoji suggested I ask my question about using ethereum with Aries here. Hi, I am curious about how to use Aries with Ethereum. I know it is possible to use Sovrin for this, but prefer open source solutions. How can I connect Aries with Ethereum using only open source tools?","username":"chrisconway","ts":"2021-02-16T19:09:59.733Z"}
{"msg":"They specifically mentioned \"aries-go uses DIF's Sidetree protocol so it should be possible.\"","username":"chrisconway","ts":"2021-02-16T19:10:53.657Z"}
{"msg":"Has joined the channel.","username":"kukgini","ts":"2021-02-17T02:50:21.456Z","type":"uj"}
{"msg":"@george.aristy the acapy team has update acapy to give an option to send the DIDcomm MIME Type. ie. `application/didcomm-envelope-enc` \nThis seems to cause a problem for afgo.\nThe scenario setup is, Acapy is the requester, Afgo is the responder. Invitation is accepted and requester sends a request (accept-invitation) to the responder. Acapy throws an error (ServerDisconnectError) posting to the afgo agent. Afgo throws this.\n```\nhttp: panic serving 172.17.0.1:59804: runtime error: invalid memory address or nil pointer dereference\ngoroutine 92 [running]:\nnet/http.(*conn).serve.func1(0xc0001dc780)\n\t/usr/local/go/src/net/http/server.go:1801 +0x147\npanic(0xce4560, 0x149a9f0)\n\t/usr/local/go/src/runtime/panic.go:975 +0x47a\ngithub.com/hyperledger/aries-framework-go/pkg/didcomm/protocol/didexchange.(*Service).requestMsgRecord(0xc000269c70, 0x10126e0, 0xc0003a88d0, 0xc0003f5801, 0xc0003a88d0, 0xdc915f)\n\t/go/src/github.com/hyperledger/aries-framework-go/pkg/didcomm/protocol/didexchange/service.go:723 +0x1d4\ngithub.com/hyperledger/aries-framework-go/pkg/didcomm/protocol/didexchange.(*Service).connectionRecord(0xc000269c70, 0x10126e0, 0xc0003a88d0, 0xc0000c4c90, 0x24, 0x1007a00)\n\t/go/src/github.com/hyperledger/aries-framework-go/pkg/didcomm/protocol/didexchange/service.go:615 +0x2e8\ngithub.com/hyperledger/aries-framework-go/pkg/didcomm/protocol/didexchange.(*Service).HandleInbound(0xc000269c70, 0x10126e0, 0xc0003a88d0, 0x0, 0x0, 0x0, 0x0, 0xbb8fd3, 0xc000080400, 0x0, ...)\n\t/go/src/github.com/hyperledger/aries-framework-go/pkg/didcomm/protocol/didexchange/service.go:182 +0x295\ngithub.com/hyperledger/aries-framework-go/pkg/framework/context.(*Provider).InboundMessageHandler.func1(0xc0000c0700, 0x6ce, 0x6ce, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/go/src/github.com/hyperledger/aries-framework-go/pkg/framework/context/context.go:171 +0x5e6\ngithub.com/hyperledger/aries-framework-go/pkg/didcomm/transport/http.processPOSTRequest(0x1008ec0, 0xc0001b0000, 0xc00018c200, 0x1007e40, 0xc00013f1e0)\n\t/go/src/github.com/hyperledger/aries-framework-go/pkg/didcomm/transport/http/inbound.go:72 +0x398\ngithub.com/hyperledger/aries-framework-go/pkg/didcomm/transport/http.NewInboundHandler.func1(0x1008ec0, 0xc0001b0000, 0xc00018c200)\n\t/go/src/github.com/hyperledger/aries-framework-go/pkg/didcomm/transport/http/inbound.go:39 +0x51\nnet/http.HandlerFunc.ServeHTTP(0xc0003b7780, 0x1008ec0, 0xc0001b0000, 0xc00018c200)\n\t/usr/local/go/src/net/http/server.go:2042 +0x44\ngithub.com/rs/cors.(*Cors).Handler.func1(0x1008ec0, 0xc0001b0000, 0xc00018c200)\n\t/go/pkg/mod/github.com/rs/cors@v1.7.0/cors.go:219 +0x1b9\nnet/http.HandlerFunc.ServeHTTP(0xc0003b77a0, 0x1008ec0, 0xc0001b0000, 0xc00018c200)\n\t/usr/local/go/src/net/http/server.go:2042 +0x44\nnet/http.serverHandler.ServeHTTP(0xc000158460, 0x1008ec0, 0xc0001b0000, 0xc00018c200)\n\t/usr/local/go/src/net/http/server.go:2843 +0xa3\nnet/http.(*conn).serve(0xc0001dc780, 0x100af80, 0xc0004d09c0)\n\t/usr/local/go/src/net/http/server.go:1925 +0x8ad\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/net/http/server.go:2969 +0x36c\n```","username":"sheldon.regular","ts":"2021-02-17T16:04:41.008Z"}
{"msg":"@sheldon.regular Sounds like the issue is an older version of DID Exchange in AFGO. Specifically this change needs to be implemented in AFGO: https://github.com/hyperledger/aries-rfcs/commit/30f5e5c3aaeb918f42162c75e8922ba8b8584f52#diff-1db1c2a11b3ff24b00b257fa3f000fd596cc70bcba3e228e22a45c0f0ffaec07","username":"troyronda","ts":"2021-02-17T19:06:20.163Z"}
{"msg":"Related: https://github.com/hyperledger/aries-framework-go/issues/2495","username":"troyronda","ts":"2021-02-17T19:08:46.824Z"}
{"msg":"Just as an FYI, you can see the test results (not the afgo logs) of acapy with afgo in these reports of the daily runs. \nhttps://allure.vonx.io/allure-docker-service-ui/projects/acapy-b-afgo","username":"sheldon.regular","ts":"2021-02-17T19:15:20.260Z"}
{"msg":"You can also see afgo by itself under those same tests in these results.\nhttps://allure.vonx.io/allure-docker-service-ui/projects/afgo","username":"sheldon.regular","ts":"2021-02-17T19:16:33.565Z"}
{"msg":"@sheldon.regular cool - thanks for the pointers!","username":"troyronda","ts":"2021-02-17T19:33:12.466Z"}
{"msg":"@daidoji From what I understand, the data model @troyronda talks about doesn't have a clear specification for machine-readable binary formats. Anyway, it is helpful to refer to this article (https://www.lfph.io/2021/02/11/cci-verifiable-credentials-flavors-and-interoperability-paper/) for the differences between the various existing vc formats. Seems to be.","username":"kukgini","ts":"2021-02-18T02:16:58.475Z"}
{"msg":"@daidoji From what I understand, the data model @troyronda talks about doesn't have a clear specification for machine-readable binary formats. Anyway, it is helpful to refer to this article (https://www.lfph.io/2021/02/11/cci-verifiable-credentials-flavors-and-interoperability-paper/) for the differences between the various existing vc formats.","username":"kukgini","ts":"2021-02-18T02:16:58.475Z"}
{"msg":"thanks @kukgini yeah I ran across that paper the other day.  Even this doesn't quite get down to the nitty gritty though.  I think I'm figuring it out just struggling through the specs and various implementations that exist","username":"daidoji","ts":"2021-02-18T02:18:33.167Z"}
{"msg":"@daidoji Daniel hardman's opinion will also be helpful for vc compatibility caused by the ambiguity of the standard specification. https://www.evernym.com/blog/getting-to-practical-interop-with-verifiable-credentials/","username":"kukgini","ts":"2021-02-18T02:21:53.092Z"}
{"msg":"Yeah I saw that one too.  These are both great.","username":"daidoji","ts":"2021-02-18T13:29:23.686Z"}
{"msg":"Aries Go is agnostic to DID methods, so they can be injected into the framework or used via Universal Resolver.","username":"troyronda","ts":"2021-02-19T15:09:47.004Z"}
{"msg":"When I run \"make run-openapi-demo I get the following error \n\n           >test/bdd/fixtures/keys/tls/ec-cakey.pem: Operation not permitted\n\nthis pem file does not exist though the tls folder has root ownership","username":"mupheux","ts":"2021-02-22T16:56:57.441Z"}
{"msg":"When I run \"make run-openapi-demo I get the following error \n\n           >test/bdd/fixtures/keys/tls/ec-cakey.pem: Operation not permitted\n\nthis pem file does not exist though the tls folder has root ownership. Pls what is wrong?","username":"mupheux","ts":"2021-02-22T16:56:57.441Z"}
{"msg":"It's fine now. Thanks all","username":"mupheux","ts":"2021-02-22T22:08:33.206Z"}
{"msg":"I have another issue and need help asap. If I call afgo's POST /issuecredential/accept-offer,  it kinds of hangs or request takes so long like 20mins with no response. Same issue also noticed when the api interface is manually called with Postman!","username":"mupheux","ts":"2021-02-22T23:24:35.459Z"}
{"msg":"I have another issue and need help asap. If I call afgo's POST /issuecredential/accept-offer,  it kinds of hangs or request takes so long like 20mins with timeout error. Same issue also noticed when the api interface is manually called with Postman!","username":"mupheux","ts":"2021-02-22T23:24:35.459Z"}
{"msg":"Has joined the channel.","username":"JackyYuan","ts":"2021-02-23T05:41:47.018Z","type":"uj"}
{"msg":"I can not be sure that this is where it is appropriate. I'm trying to use indy as vdr. \nThe following code failed with following error:\n```\n  1 package main\n  2\n  3 import (\n  5     \"log\"\n  6     \"net/http\"\n ...\n 13     \"github.com/hyperledger/indy-vdr/wrappers/golang/vdr\"\n 14 )\n 15\n 16 func main() {\n 17     log.Println(\"load genesis tx from internet\")\n 18     genesisFile, err := http.Get(\"https://raw.githubusercontent.com/sovrin-foundation/sovrin/master/sovrin/pool_transactions_builder_genesis\")\n 19     if err != nil {\n 20         log.Fatalln(err)\n 21     }\n 22     defer genesisFile.Body.Close()\n 23\n 24     log.Println(\"create indy vdr client\")\n 25     client, err := vdr.New(genesisFile.Body)\n 26     if err != nil {\n 27         log.Fatalln(err)\n 28     }\n 29     log.Fatalln(client)\n 30 } \n```\nerror message was:\n```\nvendor/github.com/hyperledger/indy-vdr/wrappers/golang/vdr/indy_vdr.go:86:34: could not determine kind of name for C.u_long\n```\nrun command was (on MAC OS X):\n```\nCGO_LDFLAGS=\"-lindy_vdr -L/usr/local/lib\" go run main.go\n```\nit seems related with `cgo`. But, i don't know much about golang and cgo well. can you help me?","username":"kukgini","ts":"2021-02-24T05:54:05.705Z"}
{"msg":"Hi everyone ,I read that using BBS+ signatures removes the requirement for a credential-definition on the ledger, Can anyone confirm this","username":"da3v21","ts":"2021-02-24T12:52:16.279Z"}
{"msg":"Correct: BBS+ signatures does not require credential definition on a ledger.","username":"troyronda","ts":"2021-02-24T18:18:48.209Z"}
{"msg":"Thanks , credential definitions holds the public key of an issuer, where does the verifier get  the public key of the issuer from?","username":"da3v21","ts":"2021-02-25T03:51:00.258Z"}
{"msg":"The verifiable credential has the DID of the issuer. From the DID, you resolve the public key.","username":"troyronda","ts":"2021-02-25T04:55:56.115Z"}
{"msg":"That's great!","username":"da3v21","ts":"2021-02-25T05:15:27.749Z"}
{"msg":"FYI: here is the new storage SPI for those implementing storage components for aries-framework-go: https://github.com/hyperledger/aries-framework-go/blob/main/spi/storage/storage.go","username":"troyronda","ts":"2021-02-25T15:02:05.392Z"}
{"msg":"here is the new storage SPI for those implementing storage components for aries-framework-go: https://github.com/hyperledger/aries-framework-go/blob/main/spi/storage/storage.go","username":"troyronda","ts":"2021-02-25T15:02:05.392Z"}
{"msg":"If So, what is the role of VDR(Blockchain/DLT) ?","username":"kukgini","ts":"2021-02-27T12:40:59.221Z"}
{"msg":"If so, what is the role of VDR(Blockchain/DLT) ?","username":"kukgini","ts":"2021-02-27T12:40:59.221Z"}
{"msg":"To resolve DIDs.","username":"troyronda","ts":"2021-02-27T13:14:58.214Z"}
{"msg":"I think blockchain is also essential for revocation of credentials and agents, else one has to be dependent on CRLs for credential revocation, and how do we handle agent revocation without blockchain","username":"da3v21","ts":"2021-03-01T05:37:32.854Z"}
{"msg":"@troyronda you mean public DIDs for organizations (eg. issuer) ?","username":"kukgini","ts":"2021-03-02T00:46:37.402Z"}
{"msg":"I agree with @da3v21 . can someone please explain how to achieve credential revocation in json-ld/bbs+?","username":"kukgini","ts":"2021-03-02T00:47:41.088Z"}
{"msg":"Has joined the channel.","username":"suosuidewenqing","ts":"2021-03-02T08:29:52.255Z","type":"uj"}
{"msg":"Generic discussions about BBS+ would probably be best done in #aries-bbs channel.","username":"troyronda","ts":"2021-03-02T15:33:56.020Z"}
{"msg":"yes - I meant public DIDs (e.g., issuer). @kukgini","username":"troyronda","ts":"2021-03-02T15:34:36.951Z"}
{"msg":"Has joined the channel.","username":"rpobulic","ts":"2021-03-07T05:16:36.343Z","type":"uj"}
{"msg":"I used this to wrap the rust version of BBS+ and its much faster than using cgo or implementing in pure go. Thoughts on using this https://github.com/notti/nocgo","username":"MALodder","ts":"2021-03-08T16:45:42.347Z"}
{"msg":"also have used github.com/rainycape/dl","username":"MALodder","ts":"2021-03-08T16:48:16.241Z"}
{"msg":"@here we have release 0.1.6 of aries-framework-go. release notes: https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.6","username":"troyronda","ts":"2021-03-08T21:38:53.837Z"}
{"msg":"@here we have released 0.1.6 of aries-framework-go. release notes: https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.6","username":"troyronda","ts":"2021-03-08T21:38:53.837Z"}
{"msg":"The current implementation has been tested for interoperability and for the ability to compile to our various targets. We would tend to stick to pure go for the default implementations. Of course, alternate implementations can be loaded via options - this has been our approach so far on including dependencies like this.","username":"troyronda","ts":"2021-03-08T21:41:35.541Z"}
{"msg":"The current implementation has been tested for interoperability and for the ability to compile to our various targets. We haven't investigated performance comparisons. We would tend to stick to pure go for the default implementations.\n\nOf course, alternate implementations can be loaded via options - this has been our approach so far on including dependencies like this.","username":"troyronda","ts":"2021-03-08T21:41:35.541Z"}
{"msg":"The current implementation has been tested for interoperability and for the ability to compile to our various targets. We haven't investigated performance comparisons. We would tend to stick to pure go for the default implementations.\n\nOf course, alternate implementations can be loaded via progmatic options - this has been our approach so far on including dependencies like this.","username":"troyronda","ts":"2021-03-08T21:41:35.541Z"}
{"msg":"The current implementation has been tested for interoperability and for the ability to compile to our various targets. We haven't investigated performance comparisons. We would tend to stick to pure go for the default implementations.\n\nOf course, alternate implementations can be loaded via progmatic options - this has been our approach so far on dependencies/libraries like this.","username":"troyronda","ts":"2021-03-08T21:41:35.541Z"}
{"msg":"The current implementation has been tested for interoperability and for the ability to compile to our various targets. We haven't investigated performance comparisons. We would tend to stick to pure go for the default implementations.\n\nOf course, alternate implementations can potentially be loaded via progmatic options - this has been our approach so far on dependencies/libraries like this. (this would require effort though.)","username":"troyronda","ts":"2021-03-08T21:41:35.541Z"}
{"msg":"The current implementation has been tested for interoperability and for the ability to compile to our various targets. We haven't investigated performance comparisons. We would tend to stick to pure go for the default implementations.\n\nOf course, alternate implementations can potentially be loaded via progmatic options - this has been our approach so far on non-go questions like this. (this would require effort though.)","username":"troyronda","ts":"2021-03-08T21:41:35.541Z"}
{"msg":"The current implementation has been tested for interoperability and for the ability to compile to our various targets. We haven't investigated performance comparisons. We would tend to stick to pure go for the default implementations.\n\nOf course, alternate implementations can potentially be injected via progmatic options - this has been our approach so far on non-go questions like this. (this would require effort though.)","username":"troyronda","ts":"2021-03-08T21:41:35.541Z"}
{"msg":"The referenced projects don't look particularly active.","username":"troyronda","ts":"2021-03-08T21:42:38.776Z"}
{"msg":"I haven't looked in detail, but the referenced projects don't look particularly active.","username":"troyronda","ts":"2021-03-08T21:42:38.776Z"}
{"msg":"Any progress on getting the AF-Go tests in Aries Agent Test Harness working with ACA-Py.  We still have 5 failing tests :-(.","username":"swcurran","ts":"2021-03-08T22:05:19.743Z"}
{"msg":"What is the current state of the Aries Framework Go regarding the support of Rich Schemas?","username":"etaleo","ts":"2021-03-09T09:11:16.997Z"}
{"msg":"Hello there! :wave: What is the current state of the Aries Framework Go regarding the support of Rich Schemas?","username":"etaleo","ts":"2021-03-09T09:11:16.997Z"}
{"msg":"An I right that it is not possible to set `my_label` as an invitee in didExchange connection?","username":"lbartekl","ts":"2021-03-09T10:50:31.021Z"}
{"msg":"Am I right that it is not possible to set `my_label` as an invitee in didExchange connection?","username":"lbartekl","ts":"2021-03-09T10:50:31.021Z"}
{"msg":"AF-Go does not support Indy AnonCreds, and AFAIK does not plan to implement Rich Schemas. The plan of the team for ZKP and Selective Disclosure support is to use BBS+ Signatures with JSON-LD.","username":"swcurran","ts":"2021-03-09T17:56:33.014Z"}
{"msg":"We are working on next milestone planning activities next week - this will be one of the topics. @swcurran","username":"troyronda","ts":"2021-03-09T18:37:51.581Z"}
{"msg":"Good stuff.  Thanks.","username":"swcurran","ts":"2021-03-09T18:50:54.177Z"}
{"msg":"AFGO has not _planned_ for Rich Schemas yet, but it is not off the table. Having the schemas stored in a VDR is a useful feature in many use cases.","username":"george.aristy","ts":"2021-03-10T13:40:27.598Z"}
{"msg":"I'm not too familiar with the Indy method so cannot speak to the relation of Indy AnonCreds to Rich Schemas.","username":"george.aristy","ts":"2021-03-10T13:41:40.566Z"}
{"msg":"Hi everybody! I am having troubles troubles retrieving DID document from Aries Go. What are the steps to create new DID (e.g., did:peer or did:sidetree) and then retrieve this DID document from Aries Go agent? Can it be done via Swagger interface? I can't find correct endpoint.","username":"Vid201","ts":"2021-03-10T13:57:18.245Z"}
{"msg":"Rich Schemas was defined to be an extension to AnonCreds to enable W3C standard VCs with CL Signatures. It introduced several new ledger objects and (IMHO) a complicated set of related data objects.","username":"swcurran","ts":"2021-03-10T15:18:34.103Z"}
{"msg":"The term \"anoncred\" does not appear in RFCs 0281 nor 0249. The term \"indy\" appears just once, as a footnote to RFC0281.\n\nThey seem like generic concepts?","username":"george.aristy","ts":"2021-03-10T15:21:48.270Z"}
{"msg":"And another question: why was /vdr/create-public-did removed from API and how can be public did created in the last version?","username":"Vid201","ts":"2021-03-11T12:24:54.051Z"}
{"msg":"And another question: why was /vdr/create-public-did removed from API and how to create public did in the last version?","username":"Vid201","ts":"2021-03-11T12:24:54.051Z"}
{"msg":"@firas.qutishat is investigating.","username":"troyronda","ts":"2021-03-11T17:36:14.207Z"}
{"msg":"Has joined the channel.","username":"haardikkk","ts":"2021-03-11T22:02:55.090Z","type":"uj"}
{"msg":"Hey everyone! I just joined SecureKey as an independent contractor and will be working on fixing the DIDComm related tests fixed for AF-Go in the Aries Agent Test harness! Still catching up to speed here but excited to get started","username":"haardikkk","ts":"2021-03-11T22:02:55.588Z"}
{"msg":"Hey everyone! I just joined SecureKey as an independent contractor and will be working on fixing the DIDComm related tests for AF-Go in the Aries Agent Test harness! Still catching up to speed here but excited to get started","username":"haardikkk","ts":"2021-03-11T22:02:55.588Z"}
{"msg":"Welcome @haardikkk !","username":"troyronda","ts":"2021-03-11T22:06:57.009Z"}
{"msg":"Is there a code part that contains Ursa or Indy Module in the aries-framework-go?\nI wonder how Ursa and Indy are called up and used in go.","username":"sj1 4","ts":"2021-03-14T08:42:27.046Z"}
{"msg":"Is there a code part that contains Ursa or Indy Module in the aries-framework-go?\nI wonder how Ursa and Indy are called up and used in aries-go.","username":"sj1 4","ts":"2021-03-14T08:42:27.046Z"}
{"msg":"Sorry to bother you, but are there any updates on this topic?","username":"Vid201","ts":"2021-03-14T08:44:11.239Z"}
{"msg":"Looks like some old code got removed and will now need a new version of it.","username":"troyronda","ts":"2021-03-15T14:41:54.692Z"}
{"msg":"aries-framework-go does not have dependencies on indy nor ursa.","username":"troyronda","ts":"2021-03-15T15:31:29.862Z"}
{"msg":"there have been efforts to add an indy VDR via an optional component: https://github.com/hyperledger/aries-framework-go-ext/tree/main/component/vdr/indy","username":"troyronda","ts":"2021-03-15T15:31:55.495Z"}
{"msg":"Oh, too bad. Thanks anyways!","username":"Vid201","ts":"2021-03-15T16:55:21.239Z"}
{"msg":"When doing issue credential, do I have to create and sign the format of VC myself using the doc/verifiable package? Or is the VC created in the framework by specifying the format (jwt,json-ld) through the framework settings and passing the claims required for issuance?","username":"kukgini","ts":"2021-03-16T02:23:22.912Z"}
{"msg":"Has joined the channel.","username":"HighBrow","ts":"2021-03-16T06:16:50.648Z","type":"uj"}
{"msg":"Hello there, I was wondering why is not feasible to create a Public DID, in the documentation is mentioned the use of /vdr/create-public-did, but it is not available :-(","username":"AngelPalomares","ts":"2021-03-17T08:25:21.205Z"}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=8u2yyKRYrXtpefkqf","username":"troyronda","ts":"2021-03-17T12:58:06.817Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=8u2yyKRYrXtpefkqf","url":"https://chat.hyperledger.org/channel/aries-go?msg=8u2yyKRYrXtpefkqf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=yMz6TWoqvSxKYcxrZ","username":"troyronda","ts":"2021-03-17T12:58:28.529Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=yMz6TWoqvSxKYcxrZ","url":"https://chat.hyperledger.org/channel/aries-go?msg=yMz6TWoqvSxKYcxrZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"thank you very much Troy, Do you know by when it will be available again?","username":"AngelPalomares","ts":"2021-03-17T15:06:06.928Z"}
{"msg":"thank you!:thumbsup:","username":"sj1 4","ts":"2021-03-18T04:13:22.861Z"}
{"msg":"@AngelPalomares @Vid201 A replacement create did endpoint has been added in the main branch. https://github.com/hyperledger/aries-framework-go/blob/main/docs/rest/openapi_demo.md#steps-for-creating-did-using-vdr-endpoint","username":"troyronda","ts":"2021-03-21T13:03:12.574Z"}
{"msg":"Has joined the channel.","username":"stefan2904","ts":"2021-03-22T12:30:25.501Z","type":"uj"}
{"msg":"Hi there, since we have the same problem: I dont think this endpoint is registering a public DID on the ledger. Or did I misunderstand it's purpose?","username":"stefan2904","ts":"2021-03-22T12:47:10.243Z"}
{"msg":"You need to have a build that includes a VDR for the particular DID method of your interest.","username":"troyronda","ts":"2021-03-22T13:07:37.541Z"}
{"msg":"(and several DID methods are backed by ledgers).","username":"troyronda","ts":"2021-03-22T13:08:06.153Z"}
{"msg":"As an example, we take the framework and add DID methods in the TrustBloc build. https://github.com/trustbloc/agent-sdk/blob/main/cmd/agent-rest/startcmd/start.go#L827","username":"troyronda","ts":"2021-03-22T13:12:24.728Z"}
{"msg":"Has joined the channel.","username":"JovanShandro","ts":"2021-03-24T09:40:30.867Z","type":"uj"}
{"msg":"Hi Everyone! I am trying to create a service that will act as an agent for many users. So far I have tried doing this by creating one service that creates an agent framework per user, and manually calls the handler functions created by aries, but I am encountering a problem with the fact that each agent must have a different service endpoint (must be on different ports). Is there any other way to achieve this (many agents on one port) without having to make changes to the code that handles the service endpoint creation part? (my idea was to do smth like localhost:8081/name as a service endpoint for the user with given name, but not sure if this would be the way to go) Thank you :)!","username":"JovanShandro","ts":"2021-03-24T09:40:31.392Z"}
{"msg":"FYI -- I don't know how to answer this from an Aries Framework Go perspective, but the Aries Cloud Agent Python has a multi-tenant implementation that seems to have what you are looking for.  With ACA-Py, you write the controller in whatever language you want, so the code you write can be in golang if that helps.","username":"swcurran","ts":"2021-03-24T14:14:57.933Z"}
{"msg":"You could also have a look at Canis (https://github.com/scoir/canis)  It is a platform written in Go, using aries-go to provide multi-tenant (agent) capabilities by routing all DIDComm traffic in through one port and out to handlers using RabbitMQ.  It provides a SwaggerUI for the REST interface that allows for provision of agents, establishing connections and issuing and verifying credentials.  It has deployment artifacts for docker-compose and kubernetes.","username":"pfeairheller","ts":"2021-03-24T18:41:32.662Z"}
{"msg":"Looks like af-go is generating an invitation with an attribute called `service` and I think according to the RFC it should be `services` (plural)?","username":"ianco","ts":"2021-03-24T20:25:51.736Z"}
{"msg":"@JovanShandro current version of AFG rest doesn't support multi-tenancy, you can have a look at (https://github.com/scoir/canis) as @pfeairheller suggested.","username":"sudeshrshetty","ts":"2021-03-24T21:52:15.469Z"}
{"msg":"@JovanShandro current version of AFG doesn't support multi-tenancy, you can have a look at (https://github.com/scoir/canis) as @pfeairheller suggested.","username":"sudeshrshetty","ts":"2021-03-24T21:52:15.469Z"}
{"msg":"@JovanShandro current version of AFG rest doesn't support multi-tenancy, you can have a look at (https://github.com/scoir/canis) as @pfeairheller suggested.","username":"sudeshrshetty","ts":"2021-03-24T21:52:15.469Z"}
{"msg":"That change landed in master only 7 days ago: https://github.com/hyperledger/aries-rfcs/pull/616","username":"TimoGlastra","ts":"2021-03-24T22:22:33.056Z"}
{"msg":"Give em some time  :smile:","username":"TimoGlastra","ts":"2021-03-24T22:22:48.961Z"}
{"msg":":thumbsup: Thank you! I will try them out and see how it goes!","username":"JovanShandro","ts":"2021-03-25T07:29:10.841Z"}
{"msg":"I opened an issue so it doesn't get forgotten:  https://github.com/hyperledger/aries-framework-go/issues/2675","username":"ianco","ts":"2021-03-25T15:32:59.287Z"}
{"msg":"No time to waste!!!","username":"swcurran","ts":"2021-03-25T19:35:34.025Z"}
{"msg":"Question. Did you guys already wrote something to transform the data from a presentation definition to a JSON-LD frame for selective disclosure? (I'm assuming yes) If so, could someone point me to the place in the AFGO codebase where this is implemented?","username":"TimoGlastra","ts":"2021-03-25T21:20:46.687Z"}
{"msg":"Found it! I should look before asking. https://github.com/hyperledger/aries-framework-go/blob/main/pkg/doc/presexch/definition.go","username":"TimoGlastra","ts":"2021-03-25T21:40:09.304Z"}
{"msg":"Hi all, I have this issue whenever I do a POST on /vdr/did/create like this, I kept getting an error","username":"mupheux","ts":"2021-03-26T15:57:43.638Z"}
{"msg":"Hi all, I have this issue whenever I do a POST on /vdr/did/create like this, I kept getting an error\ncurl -k -X POST \"https://macbookpro:8082/vdr/did/create\" -H \"accept: application/json\" -d \"\"\nthis is the error I get\n\n{\n\"code\": 4000,\n\"message\": \"did method is mandatory\"\n}\n\npls what is wrong. Pls it's urgent. Thanks","username":"mupheux","ts":"2021-03-26T15:57:43.638Z"}
{"msg":"curl -k -X POST \"https://macbookpro:8082/vdr/did/create\" -H  \"accept: application/json\" -d \"\"","username":"mupheux","ts":"2021-03-26T15:57:51.023Z"}
{"msg":"this is the error I get \n\n{\n    \"code\": 4000,\n    \"message\": \"did method is mandatory\"\n}\n\npls what is wrong?","username":"mupheux","ts":"2021-03-26T15:58:30.799Z"}
{"msg":"You need to provide parameters to that endpoint. An example is in the openapi_demo: https://github.com/hyperledger/aries-framework-go/blob/345a2cb517d7d69e826b5fc8161e7769243ef188/docs/rest/openapi_demo.md#steps-for-creating-did-using-vdr-endpoint","username":"troyronda","ts":"2021-03-26T18:35:47.112Z"}
{"msg":"Hello @troyronda , I have just test it and I have this answer:","username":"AngelPalomares","ts":"2021-03-26T18:41:05.292Z"}
{"msg":"curl -v -X 'POST' \\\n  'http://localhost:8082/vdr/did/create' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n        \"method\":\"peer\",\n        \"did\":{\n           \"verificationMethod\":[\n                  {\n                         \"controller\":\"did:peer:21tDAKCERh95uGgKbJNHYp\",\n                         \"id\":\"e2cbb249-8c25-4e6e-8b92-b1ceee211c8c\",\n                         \"publicKeyBase58\":\"7qf5xCRSGP3NW6PAUonYLmq1LCz6Ux5ynek9nbzGgCnP\",\n                         \"type\":\"Ed25519VerificationKey2018\"\n                  }\n           ]\n         },\n        \"opts\":{\n           \"k1\":\"v1\"\n         }\n        }'\nNote: Unnecessary use of -X or --request, POST is already inferred.\n*   Trying ::1...\n* TCP_NODELAY set\n* Connected to localhost (::1) port 8082 (#0)\n> POST /vdr/did/create HTTP/1.1\n> Host: localhost:8082\n> User-Agent: curl/7.64.1\n> accept: application/json\n> Content-Type: application/json\n> Content-Length: 320\n>\n* upload completely sent off: 320 out of 320 bytes\n< HTTP/1.1 405 Method Not Allowed\n< Vary: Origin\n< Date: Fri, 26 Mar 2021 18:39:53 GMT\n< Content-Length: 0\n<\n* Connection #0 to host localhost left intact\n* Closing connection 0","username":"AngelPalomares","ts":"2021-03-26T18:41:07.662Z"}
{"msg":":-(","username":"AngelPalomares","ts":"2021-03-26T18:41:14.461Z"}
{"msg":"(I am using a image base on the v0.1.6 release)","username":"AngelPalomares","ts":"2021-03-26T18:41:47.798Z"}
{"msg":"in fact /vdr/did/create doesn't appear in the swagger either","username":"AngelPalomares","ts":"2021-03-26T18:44:24.879Z"}
{"msg":"Hello @troyronda I tried with the last version from git and I cou","username":"AngelPalomares","ts":"2021-03-29T08:10:28.153Z"}
{"msg":"could do the call:thumbsup:","username":"AngelPalomares","ts":"2021-03-29T08:10:56.582Z"}
{"msg":"But it doesn't look like that is storing the DID created in the ledger (sidetree)","username":"AngelPalomares","ts":"2021-03-29T08:11:29.486Z"}
{"msg":"Shall I missing something?","username":"AngelPalomares","ts":"2021-03-29T08:11:38.002Z"}
{"msg":"Am I missing something?","username":"AngelPalomares","ts":"2021-03-29T08:11:38.002Z"}
{"msg":"@AngelPalomares are you using did peer","username":"firas.qutishat","ts":"2021-03-29T13:41:41.288Z"}
{"msg":"Yes I do, because I am following the examples provided","username":"AngelPalomares","ts":"2021-03-29T13:42:48.984Z"}
{"msg":"Do I need to specify other type od DID? How?","username":"AngelPalomares","ts":"2021-03-29T13:43:17.609Z"}
{"msg":"`    {\n   \"method\":\"peer\",\n   \"did\":{\n      \"verificationMethod\":[\n         {\n            \"controller\":\"did:example:123\",\n            \"id\":\"e2cbb249-8c25-4e6e-8b92-b1ceee211c8c\",\n            \"publicKeyBase58\":\"7qf5xCRSGP3NW6PAUonYLmq1LCz6Ux5ynek9nbzGgCnP\",\n            \"type\":\"Ed25519VerificationKey2018\"\n         }\n      ]\n    },\n   \"opts\":{\n      \"store\":\"true\"\n    }\n   }`","username":"firas.qutishat","ts":"2021-03-29T13:48:55.019Z"}
{"msg":"{\n   \"method\":\"peer\",\n   \"did\":{\n      \"verificationMethod\":[\n         {\n            \"controller\":\"did:example:123\",\n            \"id\":\"e2cbb249-8c25-4e6e-8b92-b1ceee211c8c\",\n            \"publicKeyBase58\":\"7qf5xCRSGP3NW6PAUonYLmq1LCz6Ux5ynek9nbzGgCnP\",\n            \"type\":\"Ed25519VerificationKey2018\"\n         }\n      ]\n    },\n   \"opts\":{\n      \"store\":\"true\"\n    }\n   }","username":"firas.qutishat","ts":"2021-03-29T13:48:55.019Z"}
{"msg":"@AngelPalomares you need to add option for did peer to store","username":"firas.qutishat","ts":"2021-03-29T13:49:27.138Z"}
{"msg":"opts\":{\n\"store\":\"true\"\n}","username":"firas.qutishat","ts":"2021-03-29T13:49:35.260Z"}
{"msg":"I see :-/","username":"AngelPalomares","ts":"2021-03-29T13:49:51.647Z"}
{"msg":"I will try it asap","username":"AngelPalomares","ts":"2021-03-29T13:49:57.073Z"}
{"msg":"thank you so much firas","username":"AngelPalomares","ts":"2021-03-29T13:50:04.882Z"}
{"msg":"@AngelPalomares :thumbsup:","username":"firas.qutishat","ts":"2021-03-29T13:50:23.486Z"}
{"msg":"@AngelPalomares this is the  code in did peer https://github.com/hyperledger/aries-framework-go/blob/main/pkg/vdr/peer/creator.go#L33","username":"firas.qutishat","ts":"2021-03-29T13:50:56.264Z"}
{"msg":"Hello @firas.qutishat , I have tried your trick but it doesn't look is working :-(","username":"AngelPalomares","ts":"2021-03-29T14:49:48.707Z"}
{"msg":"if I tryied:","username":"AngelPalomares","ts":"2021-03-29T14:50:16.387Z"}
{"msg":"curl -k -X POST 'https://localhost:8082/vdr/did/create' \\\n\t-H accept = 'application/json' \\\n\t-H Content-Type = 'application/json' \\\n\t-d '{\n\t\t\t\"method\":\"peer\",\n\t\t\t\"did\":{\n\t\t\t\t\"id\":\"did:example:1zQmanz2svbjxcYd4J3CtP6Jg6kw4nQpnZQioscz4oKhtLHk\",\n\t\t\t\t\"@context\":[\"https://w3id.org/did/v1\"],\n\t\t\t\t\"verificationMethod\":[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"controller\":\"did:example:123\",\n\t\t\t\t\t\t\"id\":\"e2cbb249-8c25-4e6e-8b92-b1ceee211c8c\",\n\t\t\t\t\t\t\"publicKeyBase58\":\"7qf5xCRSGP3NW6PAUonYLmq1LCz6Ux5ynek9nbzGgCnP\",\n\t\t\t\t\t\t\"type\":\"Ed25519VerificationKey2018\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"opts\":{\n\t\t\t\t*\"store\":\"true\"*\n\t\t\t}\n}'","username":"AngelPalomares","ts":"2021-03-29T14:50:34.164Z"}
{"msg":"it answers with:","username":"AngelPalomares","ts":"2021-03-29T14:51:02.067Z"}
{"msg":"[aries-framework/command/vdr] 2021/03/29 14:47:57 UTC - n/a -> ERROR command=[vdr] action=[CreateDID] [] errMsg=[create did doc: store opt not boolean]","username":"AngelPalomares","ts":"2021-03-29T14:51:04.343Z"}
{"msg":"and if I use: \"store\": true","username":"AngelPalomares","ts":"2021-03-29T14:51:38.106Z"}
{"msg":"it answers with:","username":"AngelPalomares","ts":"2021-03-29T14:51:58.872Z"}
{"msg":"[aries-framework/command/vdr] 2021/03/29 14:48:50 UTC - n/a -> INFO command=[vdr] action=[CreateDID] [] msg=[json: cannot unmarshal bool into Go struct field CreateDIDRequest.opts of type string]","username":"AngelPalomares","ts":"2021-03-29T14:52:00.015Z"}
{"msg":"Please notice that the system is asking me a @context and a ID that  are not specify in the example you provide me, so I Amy doing something wrong, :-/","username":"AngelPalomares","ts":"2021-03-29T14:53:07.592Z"}
{"msg":"Please notice that the system is asking me a @context and a ID that  are not specify in the example you provide me, so am I doing something wrong, :-/?","username":"AngelPalomares","ts":"2021-03-29T14:53:07.592Z"}
{"msg":"@AngelPalomares we have bug","username":"firas.qutishat","ts":"2021-03-29T15:30:05.175Z"}
{"msg":"@AngelPalomares we pushed fix https://github.com/hyperledger/aries-framework-go/pull/2693","username":"firas.qutishat","ts":"2021-03-29T15:30:15.141Z"}
{"msg":"should work now after merging this PR","username":"firas.qutishat","ts":"2021-03-29T15:30:28.419Z"}
{"msg":"excellent, thank you very much @firas.qutishat","username":"AngelPalomares","ts":"2021-03-29T15:30:54.820Z"}
{"msg":"I will test it asap","username":"AngelPalomares","ts":"2021-03-29T15:31:10.054Z"}
{"msg":"@AngelPalomares it's merged","username":"firas.qutishat","ts":"2021-03-29T16:14:07.319Z"}
{"msg":"I have just tested it and I have:","username":"AngelPalomares","ts":"2021-03-29T17:08:34.972Z"}
{"msg":"curl -k -X POST 'https://localhost:8082/vdr/did/create' \\\n        -H accept = 'application/json' \\\n        -H Content-Type = 'application/json' \\\n        -d '{\n                        \"method\":\"peer\",\n                        \"did\":{\n                                \"id\":\"did:example:1zQmanz2svbjxcYd4J3CtP6Jg6kw4nQpnZQioscz4oKhtLHk\",\n                                \"@context\":[\"https://w3id.org/did/v1\"],\n                                \"verificationMethod\":[\n                                        {\n                                                \"controller\":\"did:example:123\",\n                                                \"id\":\"e2cbb249-8c25-4e6e-8b92-b1ceee211c8c\",\n                                                \"publicKeyBase58\":\"7qf5xCRSGP3NW6PAUonYLmq1LCz6Ux5ynek9nbzGgCnP\",\n                                                \"type\":\"Ed25519VerificationKey2018\"\n                                        }\n                                ]\n                        },\n                        \"opts\":{\n                                \"store\":true\n                        }\n}'\n{\"did\":{\"@context\":[\"https://w3id.org/did/v1\"],\"id\":\"did:example:1zQmanz2svbjxcYd4J3CtP6Jg6kw4nQpnZQioscz4oKhtLHk\",\"verificationMethod\":[{\"controller\":\"did:example:123\",\"id\":\"e2cbb249-8c25-4e6e-8b92-b1ceee211c8c\",\"publicKeyBase58\":\"7qf5xCRSGP3NW6PAUonYLmq1LCz6Ux5ynek9nbzGgCnP\",\"type\":\"Ed25519VerificationKey2018\"}]}}","username":"AngelPalomares","ts":"2021-03-29T17:08:36.128Z"}
{"msg":"but, unfortunately it is not storing the created DID in the ledger (sidetree) :-(","username":"AngelPalomares","ts":"2021-03-29T17:09:17.004Z"}
{"msg":"@AngelPalomares did:peer is not stored in a ledger.","username":"troyronda","ts":"2021-03-29T18:06:52.153Z"}
{"msg":"(\"method\":\"peer\")","username":"troyronda","ts":"2021-03-29T18:07:12.366Z"}
{"msg":"It should be stored locally though.","username":"troyronda","ts":"2021-03-29T18:10:39.263Z"}
{"msg":"Hello @troyronda, sorry for the misunderstanding. I thought that using this call I could store a \"public\" DID that after which, for instance, I can use it  for issuing a credential with a reliable DID for the issuer. If this is not the case, how can I do so?","username":"AngelPalomares","ts":"2021-03-30T06:45:15.861Z"}
{"msg":"Thank you very much in advance","username":"AngelPalomares","ts":"2021-03-30T06:45:22.942Z"}
{"msg":"Hi @troyronda. I can successfully call  /vdr/did/create endpoint with method peer (I get did field as the response). But after that, if I call /vdr/did/records, empty object is returned. Shouldn't the newly created DID be returned?","username":"Vid201","ts":"2021-03-30T11:16:41.976Z"}
{"msg":"Hi @troyronda . I can successfully call  /vdr/did/create endpoint with method peer (I get did field as the response). But after that, if I call /vdr/did/records, empty object is returned. Shouldn't the newly created DID be returned?","username":"Vid201","ts":"2021-03-30T11:16:41.976Z"}
{"msg":"So I get error: {\"code\":4004,\"message\":\"create did doc: build not supported in http binding vdr\"}, when trying to creare DID with method sidetree. I know I probably do not have correct build (I am using OpenAPI demo), but I still do not understand what do I have to do. Do I need to add extra flags when starting agent (currently there is only HTTP_DID_RESOLVER for sidetree? Thanks for your help!","username":"Vid201","ts":"2021-03-30T11:24:45.988Z"}
{"msg":"So I get error: {\"code\":4004,\"message\":\"create did doc: build not supported in http binding vdr\"}, when trying to create DID with method sidetree. I know I probably do not have correct build (I am using OpenAPI demo), but I still do not understand what do I have to do. Do I need to add extra flags when starting agent (currently there is only HTTP_DID_RESOLVER for sidetree? Thanks for your help!","username":"Vid201","ts":"2021-03-30T11:24:45.988Z"}
{"msg":"So I get error: {\"code\":4004,\"message\":\"create did doc: build not supported in http binding vdr\"}, when trying to create DID with method sidetree. I know I probably do not have correct build (I am using OpenAPI demo), but I still do not understand what do I have to do. Do I need to add extra flags when starting agent (currently there is only HTTP_DID_RESOLVER for sidetree)? Thanks for your help!","username":"Vid201","ts":"2021-03-30T11:24:45.988Z"}
{"msg":"So I get error: {\"code\":4004,\"message\":\"create did doc: build not supported in http binding vdr\"}, when trying to create DID with method sidetree. I know I probably do not have correct build (I am using OpenAPI demo), but I still do not understand what I have to do. Do I need to add extra flags when starting agent (currently there is only HTTP_DID_RESOLVER for sidetree)? Thanks for your help!","username":"Vid201","ts":"2021-03-30T11:24:45.988Z"}
{"msg":"@troyronda So I get error: {\"code\":4004,\"message\":\"create did doc: build not supported in http binding vdr\"}, when trying to create DID with method sidetree. I know I probably do not have correct build (I am using OpenAPI demo), but I still do not understand what I have to do. Do I need to add extra flags when starting agent (currently there is only HTTP_DID_RESOLVER for sidetree)? Thanks for your help!","username":"Vid201","ts":"2021-03-30T11:24:45.988Z"}
{"msg":"Or where can I later retrieve this created DID?","username":"Vid201","ts":"2021-03-30T11:25:56.859Z"}
{"msg":"Or where can I later retrieve this created DID document?","username":"Vid201","ts":"2021-03-30T11:25:56.859Z"}
{"msg":"@AngelPalomares You can call this kms import key endpoint to import your private keys with matching `kid`.\nLater you can use that saved DID with key ID (verification method) to sign the credential.\nhttps://github.com/hyperledger/aries-framework-go/blob/main/pkg/controller/command/kms/command.go#L113","username":"sudeshrshetty","ts":"2021-03-31T13:49:07.474Z"}
{"msg":"@AngelPalomares You can call this kms import key endpoint to import your private keys with matching `kid`.\nLater you can use that saved DID with key ID (verification method, DID_ID#KEYID) to sign the credential.\nhttps://github.com/hyperledger/aries-framework-go/blob/main/pkg/controller/command/kms/command.go#L113","username":"sudeshrshetty","ts":"2021-03-31T13:49:07.474Z"}
{"msg":"@AngelPalomares \n\n```\nreq := SignCredentialRequest{\n\t\t\tCredential:   []byte(vc),\n\t\t\tDID:          \"did:peer:example\",\n\t\t\tProofOptions: &ProofOptions{\n\t\t\t\tVerificationMethod: \"did:peer:example#keys-1\",\n\t\t\t\tSignatureType:      Ed25519Signature2018,\n\t\t\t},\n\t\t}\n\t\treqBytes, err := json.Marshal(req)\n\t\trequire.NoError(t, err)\n\n\t\tvar b bytes.Buffer\n\t\terr = verifiableCmd.SignCredential(&b, bytes.NewBuffer(reqBytes))\n\t\trequire.NoError(t, err)\n```","username":"sudeshrshetty","ts":"2021-03-31T13:55:33.453Z"}
{"msg":"@AngelPalomares \n\n```\nreq := SignCredentialRequest{\n\t\t\tCredential:   []byte(vc),\n\t\t\tDID:          \"did:example:1234\",\n\t\t\tProofOptions: &ProofOptions{\n\t\t\t\tVerificationMethod: \"did:example:1234#keys-1\",\n\t\t\t\tSignatureType:      Ed25519Signature2018,\n\t\t\t},\n\t\t}\n\t\treqBytes, err := json.Marshal(req)\n\t\trequire.NoError(t, err)\n\n\t\tvar b bytes.Buffer\n\t\terr = verifiableCmd.SignCredential(&b, bytes.NewBuffer(reqBytes))\n\t\trequire.NoError(t, err)\n```","username":"sudeshrshetty","ts":"2021-03-31T13:55:33.453Z"}
{"msg":"@AngelPalomares \n\n```\nreq := SignCredentialRequest{\n\t\t\tCredential:   []byte(vc),\n\t\t\tDID:          \"did:example:1234\",\n\t\t\tProofOptions: &ProofOptions{\n\t\t\t\tVerificationMethod: \"did:example:1234#keys-1\",\n\t\t\t\tSignatureType:      Ed25519Signature2018,\n\t\t\t},\n\t\t}\n\t\treqBytes, err := json.Marshal(req)\n\t\trequire.NoError(t, err)\n\n\t\tvar b bytes.Buffer\n\t\terr = verifiableCmd.SignCredential(&b, bytes.NewBuffer(reqBytes))\n\t\trequire.NoError(t, err)\n```\n\nJavaScript sample for saveDID + importKey can be found here\nhttps://github.com/trustbloc/edge-agent/blob/54bd4534f14f51b5590158536d8c9dacd915a8a8/cmd/wallet-web/src/pages/DIDManagement.vue#L266-L316","username":"sudeshrshetty","ts":"2021-03-31T13:55:33.453Z"}
{"msg":"@Vid201 You have to use saveDID endpoint in vdr rest controller to show up in records.","username":"sudeshrshetty","ts":"2021-03-31T14:06:56.419Z"}
{"msg":"@Vid201 The Sidetree VDR component is not currently included within the framework build. You would need to instantiate the framework with a VDR from hyperledger/aries-framework-go-ext","username":"troyronda","ts":"2021-04-01T12:45:47.563Z"}
{"msg":"As an example: https://github.com/trustbloc/agent-sdk/blob/dc37666/cmd/agent-rest/startcmd/start.go#L821-L843","username":"troyronda","ts":"2021-04-01T12:48:29.624Z"}
{"msg":"Sorry @sudeshrshetty but I don't understand what you mean, if I understood you correctly, you are proposing to create a DID and save it later on. However this method will allow to the creator has access to the information.  We still have the problem where the verifier can't verify the issuer DID as it is not \"public\" (no in sidetree/ledger). Did I understand you correctly? or maybe I have missed something? :-(","username":"AngelPalomares","ts":"2021-04-05T08:01:58.708Z"}
{"msg":"Hi Everyone! I am currently trying to find out how to issue and verify a credential in aries go, and I managed to follow the 'How to issue credentials through the Issue Credential protocol?' part of the openapi_demo, but am not sure what the next steps would be? How can I sign this credential by the issuer and how would some other user verify it?\n\nI noticed that there are some api endpoints that seem to be about verifying and signing, but I can't seem to make it work as every call that I make to the endpoints result in an error. What would be the complete flow (in terms of requests) for issuing and then verifying a credential? Is there some part of the documentation that explains this that I might have missed. Thank you!","username":"JovanShandro","ts":"2021-04-05T12:00:38.132Z"}
{"msg":"@AngelPalomares if you create public DIDs then resolver will have access to it during signing.\nWhat error you are getting while signing using DID","username":"sudeshrshetty","ts":"2021-04-05T13:55:21.491Z"}
{"msg":"Hello @sudeshrshetty, the problem is that I don't know how to register/create a public DID :persevere:","username":"AngelPalomares","ts":"2021-04-06T06:45:12.001Z"}
{"msg":"Is there somewhere a comprehensive guide on how build an Aries agent together with a project structure overview showing which components there are and you can choose from and how they fit together?\nAnd some architectural overview in general, and also on how these pluggable dependencies work exactly?\nWhat are the first steps in order to write an Aries agent?","username":"etaleo","ts":"2021-04-06T15:11:11.882Z"}
{"msg":"Is there somewhere a comprehensive guide on how to build an Aries agent together with a project structure overview showing which components there are and you can choose from and how they fit together?\nAnd some architectural overview in general, and also on how these pluggable dependencies work exactly?\nWhat are the first steps in order to write an Aries agent?","username":"etaleo","ts":"2021-04-06T15:11:11.882Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-go?msg=mhx3dzbHMeQL2n7Ad) Cool, thank you, I can now see it under /vdrd/did/records. But in order to obtain DID document (records is just array of ids), I have to call /vdr/did/{id} (or /vdr/did/resolve/{id}?). But on both of these methods I get error: {\"code\":4000,\"message\":\"invalid id\"}. I tried using DID itself and friendly name I chose when saving DID document.","username":"Vid201","ts":"2021-04-07T07:14:15.264Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=mhx3dzbHMeQL2n7Ad","url":"https://chat.hyperledger.org/channel/aries-go?msg=mhx3dzbHMeQL2n7Ad","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-go?msg=mhx3dzbHMeQL2n7Ad) @sudeshrshetty Cool, thank you, I can now see it under /vdrd/did/records. But in order to obtain DID document (records is just array of ids), I have to call /vdr/did/{id} (or /vdr/did/resolve/{id}?). But on both of these methods I get error: {\"code\":4000,\"message\":\"invalid id\"}. I tried using DID itself and friendly name I chose when saving DID document.","username":"Vid201","ts":"2021-04-07T07:14:15.264Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=mhx3dzbHMeQL2n7Ad","url":"https://chat.hyperledger.org/channel/aries-go?msg=mhx3dzbHMeQL2n7Ad","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@Vid201 `/vdr/did/{id}` should work.\ndid ID should be base64 encoded\nhttps://github.com/hyperledger/aries-framework-go/blob/34ff560ed041fd9d3255a0c8c7f99c584c1c0a74/pkg/controller/rest/vdr/operation.go#L109","username":"sudeshrshetty","ts":"2021-04-08T02:58:32.384Z"}
{"msg":"@AngelPalomares which public DID you are using? And what error you are getting and in which step?","username":"sudeshrshetty","ts":"2021-04-08T02:59:45.383Z"}
{"msg":"@sudeshrshetty Great, it works now, did not I have to encode it in base64. Thanks! So this flow works now, but how can I create another DID? Why do I have to provide DID details/document in the call for /vdr/did/create - I want this method to generate new DID and DID peer document for me?","username":"Vid201","ts":"2021-04-08T12:24:32.483Z"}
{"msg":"@sudeshrshetty Great, it works now, did not know I have to encode it in base64. Thanks! So this flow works now, but how can I create another different DID? Why do I have to provide DID details/document in the call /vdr/did/create - I want this method to generate new DID and DID peer document without providing any additional information?","username":"Vid201","ts":"2021-04-08T12:24:32.483Z"}
{"msg":"Why cannot I call this method with just method=peer and store=true?","username":"Vid201","ts":"2021-04-08T12:25:31.078Z"}
{"msg":"Hello @sudeshrshetty, sorry but I don't understand your question, maybe I misunderstood it but the idea is to be able to have a \"public\" DID using the Aries framework. Do I need to create the DID using other means/framework and then import it?","username":"AngelPalomares","ts":"2021-04-08T14:50:29.051Z"}
{"msg":"Has joined the channel.","username":"SahilK 6","ts":"2021-04-09T12:04:46.864Z","type":"uj"}
{"msg":"Hi Everyone,\n\nFollowing the instructions at [https://github.com/hyperledger/aries-framework-go/blob/main/cmd/aries-agent-mobile/README.md], can we make an Android and iOS Edge Agent that communicates with any existing Mediator agent?","username":"SahilK 6","ts":"2021-04-09T12:04:47.896Z"}
{"msg":"Hi Everyone,\n\nFollowing the instructions at https://github.com/hyperledger/aries-framework-go/blob/main/cmd/aries-agent-mobile/README.md, can we make an Android and iOS Edge Agent that communicates with any existing Mediator agent?","username":"SahilK 6","ts":"2021-04-09T12:04:47.896Z"}
{"msg":"Hi Everyone,\n\nFollowing the instructions at https://github.com/hyperledger/aries-framework-go/blob/main/cmd/aries-agent-mobile/README.md, can we make an Android and iOS Edge Agent (or mobile agents) that communicates with any existing Mediator agent?","username":"SahilK 6","ts":"2021-04-09T12:04:47.896Z"}
{"msg":"I don't know a lot about Aries Framework Go, but I believe what you need to do is create a client implementation of RFC 0211 within AFGo.  Once you have that, you can use a mediator that also talks RFC 0211, such as the public mediator that Indicio stood up.\n\nLinks: https://github.com/hyperledger/aries-rfcs/tree/master/features/0211-route-coordination\n\n\nhttps://indicio-tech.github.io/mediator/","username":"swcurran","ts":"2021-04-09T15:48:48.326Z"}
{"msg":"Thanks for pointing out to the resources, @swcurran .\n\nI already have a working Mediator Agent (developed using Aries Framework .NET). I don't intend to build a new Mediator Agent using the Aries Framework Go.\n\nI just want to know if I can build Mobile Edge Agents (that have the wallet created/stored in the smartphone) using the Aries Framework Go. \n\nMobile Edge Agents can be developed using the Aries Framework .NET, however, the requirement is such that I cannot use that. Hence, I am exploring the Aries Framework Go.","username":"SahilK 6","ts":"2021-04-10T07:19:38.668Z"}
{"msg":"Has joined the channel.","username":"YoungjoonLee","ts":"2021-04-11T14:31:50.275Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Welbert2019","ts":"2021-04-12T15:34:39.050Z","type":"uj"}
{"msg":"webhook","username":"AngelPalomares","ts":"2021-04-13T09:02:21.549Z"}
{"msg":"Hi guys,\nActually is possible establish a connection between two android emulators using aries go mobile embbed and local agents ?\n\n- I send an invitation from Agent A\n- I accept the invitation on agent B\n- Agent B  get the connection with status of requested.\n- Agent A query connections does not return anything.","username":"Welbert2019","ts":"2021-04-14T17:47:11.041Z"}
{"msg":"Hi all. Is it intended? '/verifiable/presentation/generatebyid' is missed from the swagger openapi spec.","username":"kukgini","ts":"2021-04-15T08:56:30.318Z"}
{"msg":"@sudeshrshetty ^^^","username":"troyronda","ts":"2021-04-15T15:19:42.037Z"}
{"msg":"Has joined the channel.","username":"egidio.casati","ts":"2021-04-17T18:53:09.821Z","type":"uj"}
{"msg":"Has joined the channel.","username":"msjeong","ts":"2021-04-27T02:15:01.001Z","type":"uj"}
{"msg":"Hello team ~, I'm a researcher interested in this framework.\n\nI have a question.\nWhen a \"BLS12381G2\" type key is generated by a REST API \"/kms/ketset\" post request, the publicKey increases from 96 size to 128 size during the decoding process for response.\nThis becomes a problem when the UnmarshalPublicKey function is called in the bbs12381g2pub package. This function checks whether the length of the publickey is equal to 96. At this time, false is returned and no further progress is made.\nIs this intended? Or is it a bug that needs to be fixed?\n\nThank you :D","username":"msjeong","ts":"2021-04-27T04:13:07.316Z"}
{"msg":"Hello team ~, I'm a researcher interested in this framework.\n\nI have a question.\nWhen a \"BLS12381G2\" type key is generated by a REST API \"/kms/ketset\" post request, the publicKey increases from 96 size to 128 size during the decoding process for response.\nThis becomes a problem when the UnmarshalPublicKey() function is called in the bbs12381g2pub package. This function checks whether the length of the publicKey is equal to 96. At this time, false is returned and no further progress is made.\nIs this intended? Or is it a bug that needs to be fixed?\n\nThank you :D","username":"msjeong","ts":"2021-04-27T04:13:56.879Z"}
{"msg":"my hunch is that its also returning the private key with the public key because the private key is 32 bytes and the public key is 96 bytes. The question is which 32 bytes are the private key? I try to unpack the last 96 bytes to see if that works, if it doesn't then try the first 96 bytes. I'm unfamiliar with how the go framework is doing it so I hope @troyronda or someone who is can help","username":"MALodder","ts":"2021-04-27T14:19:01.041Z"}
{"msg":"@msjeong the response includes a public key that's raw base64URL encoded, have you tried to decode it prior to unmarshal?","username":"Baha-sk","ts":"2021-04-27T22:17:57.591Z"}
{"msg":"Hello everyone. When I hit the REST API 'POST /verifiable/credential/validate'\n\n`pkg/controller/command/verifiable/command.go:ValidateCredential(...)` is trying to \n`pkg/doc/verifiable/credential.go:validateCredential(...)` in \n`pkg/doc/verifiable/credential.go:verifiable.ParseCredential(...)`\n\nbut vcOpts has no publicKeyFetcher yet. So it failed.\nIs it sould be fixed? or Is there somethig I missed?","username":"kukgini","ts":"2021-04-28T07:22:49.052Z"}
{"msg":"Hello everyone. When I hit the REST API 'POST /verifiable/credential/validate'\n\n`pkg/controller/command/verifiable/command.go:ValidateCredential(...)` is trying to \n`pkg/doc/verifiable/credential.go:validateCredential(...)` in \n`pkg/doc/verifiable/credential.go:verifiable.ParseCredential(...)`\n\nbut `vcOpts` has no `publicKeyFetcher` yet. So it failed.\nIs it sould be fixed? or Is there somethig I missed?","username":"kukgini","ts":"2021-04-28T07:22:49.052Z"}
{"msg":"Hello everyone. When I hit the REST API 'POST /verifiable/credential/validate'\n\n`pkg/controller/command/verifiable/command.go:ValidateCredential(...)` is trying to \n`pkg/doc/verifiable/credential.go:validateCredential(...)` in \n`pkg/doc/verifiable/credential.go:verifiable.ParseCredential(...)`\n\nbut `vcOpts` has no `publicKeyFetcher` yet. So it failed.\nIs it sould be fixed? or Is there something I missed?","username":"kukgini","ts":"2021-04-28T07:22:49.052Z"}
{"msg":"Hi Everyone. Just a minor inquiry. When calling `did-exchange/connections`, either with a query parameter and there are no results matching, or with no parameter and there are no connection records, it always returns 200 with an empty message. Would it not be better to provide a code that better represents no results?","username":"sheldon.regular","ts":"2021-04-28T20:53:26.616Z"}
{"msg":"Oh, I made a mistake :D\nI decoded it with base64URL and it worked fine. Thank you.","username":"msjeong","ts":"2021-05-02T11:26:56.690Z"}
{"msg":"Hello there :wave: \nWhich information does the aries-framework-go request from external resources (like a VDR) and where/how does it happen in the code?\nI'm thinking of DID Docs, schemas, credential/presentation definitions, (encodings, mappings for Rich Schemas), some kind of revocation list/registry?","username":"etaleo","ts":"2021-05-05T11:01:02.377Z"}
{"msg":"Hi Everyone.  Question: I'm in the middle of issuing a credential. I want to check the state of that process from the issuer or holder perspective. There doesn't seem to be a way to get a state in the admin api, as in `proposal-sent` or `request-received` in this issue credential protocol in afgo. When doing a DID Exchange Connection, one can call the connections protocol with a connection id and get the state of the connection process. Am I missing something in the Issue Credential protocol? Thanks.","username":"sheldon.regular","ts":"2021-05-06T18:29:45.373Z"}
{"msg":"Actually, scratch that, I've found what I need in the webhooks. :thumbsup:","username":"sheldon.regular","ts":"2021-05-06T20:11:11.999Z"}
{"msg":"Has joined the channel.","username":"pritam_01","ts":"2021-05-09T08:36:05.826Z","type":"uj"}
{"msg":"Or, phrased differently: When operating an own ledger / DID method, what are the interfaces one needs to implement?","username":"etaleo","ts":"2021-05-10T12:06:33.690Z"}
{"msg":"Or, phrased differently: When operating an own ledger / DID method, what are the interfaces one needs to implement in order to be compatible with the Aries Framework Go?","username":"etaleo","ts":"2021-05-10T12:06:33.690Z"}
{"msg":"Or, phrased differently: When operating an own ledger / DID method, what are the interfaces one needs to implement in order to be compatible with the Aries Framework Go?","username":"etaleo","ts":"2021-05-10T12:25:41.183Z"}
{"msg":"Hi everyone. When calling `curl -k -X 'POST' 'https://localhost:8082/verifiable/signcredential' -H 'accept: application/json' -H 'Content-Type: application/json' -d '{\"credential\": \"{\\n  \\\"@context\\\":[\\n     \\\"https://www.w3.org/2018/credentials/v1\\\",\\n\\t  \\\"https://trustbloc.github.io/context/vc/examples-v1.jsonld\\\"\\n  ],\\n  \\\"id\\\":\\\"http://example.edu/credentials/1989\\\",\\n  \\\"type\\\":\\\"VerifiableCredential\\\",\\n  \\\"credentialSubject\\\":{\\n     \\\"id\\\":\\\"did:example:iuajk1f712ebc6f1c276e12ec21\\\"\\n  },\\n  \\\"issuer\\\":{\\n     \\\"id\\\":\\\"did:example:09s12ec712ebc6f1c671ebfeb1f\\\",\\n     \\\"name\\\":\\\"Example University\\\"\\n  },\\n  \\\"issuanceDate\\\":\\\"2020-01-01T10:54:01Z\\\",\\n  \\\"credentialStatus\\\":{\\n     \\\"id\\\":\\\"https://example.gov/status/65\\\",\\n     \\\"type\\\":\\\"CredentialStatusList2017\\\"\\n  }\\n}\", \"did\": \"did:key:z6Mkm9nBrNm2FtXQZiU1c5WNJKRgoRVGRdQvCPfiQgJbw7Xj\", \"kid\": \"z6Mkm9nBrNm2FtXQZiU1c5WNJKRgoRVGRdQvCPfiQgJbw7Xj\", \"signatureType\": \"JsonWebSignature2020\"}'`, I am getting `{\"code\":6011,\"message\":\"parse vc : unmarshal new credential: json: cannot unmarshal string into Go value of type verifiable.Alias\"}`. Not sure what is wrong with credential: I am using the same credential as in the following test: https://github.com/hyperledger/aries-framework-go/blob/main/cmd/aries-agent-mobile/pkg/wrappers/rest/verifiable_test.go - this test pass successfully. Thanks.","username":"Vid201","ts":"2021-05-11T08:53:19.167Z"}
{"msg":"Hi Everyone. In the Issue Credential protocol, why to the `accept-` operations need a message body? They are in response to a either a proposal, offer, or request, those there established what the credential looks like, so why wouldn't these work with just the piid sent over? I ask because I'm integrating with the Aries Agent Test Harness, and it assumes once a key is created and can be added to the operation call, the data is no longer needed. So at the point of any of the `accept-` operations I don't have the credential offer etc in the afgo backchannel. I think I can pull it out of a webhook, but just wanted your opinion on this in case I'm missing something. Thanks.","username":"sheldon.regular","ts":"2021-05-11T19:50:08.680Z"}
{"msg":"Hi Again. I'm wondering why a receiver doesn't get a *_states webhook message? I'm doing issue credential and this starts with a proposal. \nThe holder proposed a credential\nThe issuer accepts the proposal. \nThe issuer controller gets an issue credential states webhook that contains the state `offer-sent`.\nI would expect the holder to also get an issue credential states webhook message containing the state `offer-received`. \nThe Aries Agent Test Harness would like to check the state of the holder after the issuer sends the offer, but there doesn't seem to be a way to do this. The holder does get an issue credential actions webhook message but there is no state in that message. \nIs there a way I can check the state of the holder?","username":"sheldon.regular","ts":"2021-05-12T20:35:42.503Z"}
{"msg":"Hi, I'm having a new issue after rebuilding aries-framework-go as of yesterday. It was probably a couple of days since I rebuilt afgo. With code that use to work, the `issue-credential/send-proposal` I now get the following error, \n```\n{\n   \"code\":8011,\n   \"message\":\"handle outbound: action proposal-sent: outboundDispatcher.SendToDID failed to get didcomm destination for theirDID [did:peer:1H6d33Hnh2yTvZRiUBGNi]: getDestination: failed to resolve did [did:peer:1H6d33Hnh2yTvZRiUBGNi] : fetching data from store failed: delta data fetch from store for did [did:peer:1H6d33Hnh2yTvZRiUBGNi] failed: DID not found\"\n}\n```\nThis is the message data being sent with the send-proposal\n```\n{\n   \"my_did\":\"did:peer:1zQmW3xoYZxk6iDGH1bHw8jcvFNuxoaZz4JYdiVmenq7RNa9\",\n   \"their_did\":\"did:peer:1H6d33Hnh2yTvZRiUBGNi\",\n   \"propose_credential\":{\n      \"credential_proposal\":{\n         \"@type\":\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\",\n         \"attributes\":[\n            {\n               \"name\":\"attr_1\",\n               \"value\":\"value_1\"\n            },\n            {\n               \"name\":\"attr_2\",\n               \"value\":\"value_2\"\n            },\n            {\n               \"name\":\"attr_3\",\n               \"value\":\"value_3\"\n            }\n         ]\n      }\n   }\n}\n```\nAs mentioned, this worked until I did a rebuild yesterday evening. Could this be a problem with a recent PR in afgo?","username":"sheldon.regular","ts":"2021-05-19T19:26:19.407Z"}
{"msg":"the fact that `their_did` is so short is unusual, are you trying to interop with aca-py? or an interop fix that's supposed to be behind a build flag is leaking out (which would be a bug in a recent PR in afgo)","username":"filip.burlacu","ts":"2021-05-19T21:03:49.998Z"}
{"msg":"Thanks for the response @filip.burlacu. No, all agents are afgo in this scenario. Their_did came from afgo, I pulled it out of a webhook message at the time it was needed.","username":"sheldon.regular","ts":"2021-05-19T21:12:44.596Z"}
{"msg":"I'll investigate, the truncation is a bug for sure","username":"filip.burlacu","ts":"2021-05-19T21:17:24.412Z"}
{"msg":"did you build the agent in acapy-interop mode? that's the only way, as far as I can see, where their_did could be truncated","username":"filip.burlacu","ts":"2021-05-19T21:30:08.139Z"}
{"msg":"@ianco ^^^ we are using acapy-interop mode, right?  Perhaps we should ONLY be using that AFGo - ACA-Py.  E.g. we need to have two AF-Go test agents, one for when doing AF-Go to AF-Go tests and the other for AF-Go to ACA-Py tests.  Easily done -- just have to have two dockerfiles.","username":"swcurran","ts":"2021-05-19T22:37:18.408Z"}
{"msg":"Yep that change is here:  https://github.com/hyperledger/aries-agent-test-harness/blob/master/aries-backchannels/afgo/Dockerfile.afgo-master#L28","username":"ianco","ts":"2021-05-19T23:03:09.211Z"}
{"msg":"And yes it prob makes sense to have separate Dockerfiles for `afgo-master` and `afgo-interop`","username":"ianco","ts":"2021-05-19T23:03:38.029Z"}
{"msg":"(`afgo-interop` would be temporary until we get the full AIP2.0 interoperability working properly)","username":"ianco","ts":"2021-05-19T23:04:34.583Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-go?msg=vEzBhq6EWg6Zkkeno) Yes, @filip.burlacu  you are right, I had merged with Ian's changes and didn't know afgo-master was afgo-interop. I just reverted back to the unmerged afgo-master docker file that pulls from main. It now works. Thanks.","username":"sheldon.regular","ts":"2021-05-20T13:05:54.617Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=vEzBhq6EWg6Zkkeno","url":"https://chat.hyperledger.org/channel/aries-go?msg=vEzBhq6EWg6Zkkeno","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hello team ~, I'm a researcher interested in this framework.\n\nI have a question when signing the credential, in the process of loading the document.\nWhen calling LoadDocument(), what's wrong with just loading the URL in the list of context in JSON-LD without remoteDocument?\n\nThank you :grinning:","username":"msjeong","ts":"2021-05-24T03:24:51.757Z"}
{"msg":"Has left the channel.","username":"pritam_01","ts":"2021-05-24T03:31:15.350Z","type":"ul"}
{"msg":"@filip.burlacu I'm having a small issue with connections in afgo. Calls through the api to establish a connection work. I get 200s on all of the calls and the 2 parties have a connection in the end. However, on the /connections/id/accept-request by the responder in the logs for the agent I get the following:\nResponder:\n```\n[aries-framework/out-of-band/service] 2021/05/26 20:08:45 UTC - n/a -> ERROR command=[out-of-band] action=[handleDIDEvent] [] errMsg=[handleDIDEvent: ParentThreadID is empty]\n```\nRequester:\n```\n[aries-framework/out-of-band/service] 2021/05/26 20:08:45 UTC - n/a -> ERROR command=[out-of-band] action=[handleDIDEvent] [] errMsg=[failed to load attachment handling state : failed to fetch attachment handling state using id=9b99cd85-608f-4e7a-8dd0-cb223c877364 : data not found]\n```\nThese messages happen around successful webhook calls and like I said the main call gets a 200 back and I can continue on.  Do you have any hints on why this is happening and what I need to do to solve it? \n\nI ask this because I want to make sure the calls are clear because I'm trying to diagnose another issue where, sometimes when I try to get the connection record after this call to check the state of the protocol, I don't get a connection record back, I get 200, and an empty message. Then my test fails because of no status information. This only happens randomly.","username":"sheldon.regular","ts":"2021-05-26T20:35:05.872Z"}
{"msg":"@filip.burlacu any insight on this? Thanks.","username":"sheldon.regular","ts":"2021-05-27T20:06:59.079Z"}
{"msg":"I'm investigating this, as far as I can tell the \"attachment handling state\" in question should have been saved under the ID in the error message, but I'm digging until I figure out why this error message is happening","username":"filip.burlacu","ts":"2021-05-27T21:46:32.588Z"}
{"msg":"I'm investigating this now, as far as I can tell the \"attachment handling state\" in question should have been saved under the ID in the error message, but I'm digging until I figure out why this error message is happening","username":"filip.burlacu","ts":"2021-05-27T21:46:32.588Z"}
{"msg":"Thank you @filip.burlacu","username":"sheldon.regular","ts":"2021-05-28T16:52:10.884Z"}
{"msg":"@troyronda -- does the AF-Go implementation of BBS+ Credentials support BbsBlsBoundSignature2020 -- e.g. the ability to not expose an ID for the holder to the verifier?","username":"swcurran","ts":"2021-06-03T00:00:16.264Z"}
{"msg":"No. I donâ€™t think Iâ€™m aware of this. Do you have pointers to where it is documented or some existing implementations? @swcurran","username":"troyronda","ts":"2021-06-03T00:35:25.792Z"}
{"msg":"No. I donâ€™t think Iâ€™m aware of this. Do you have pointers to where it is documented in a spec or some existing implementations? @swcurran","username":"troyronda","ts":"2021-06-03T00:35:25.792Z"}
{"msg":"Here is a PR from Brent Zundel to add it to the BBS+ LDP spec -- https://github.com/w3c-ccg/ldp-bbs2020/pull/57/files\n\nPer @brentzundel `The method for submitting a blinded commitment to the issuer is described in section 3.9 of the BBS+ spec linked to in the BBS+ LD-Signatures spec. The implementation in ursa already supports a holder sending the issuer a set of committed values for signing.`","username":"swcurran","ts":"2021-06-03T16:51:47.104Z"}
{"msg":"Ok thanks for the pointer @swcurran","username":"troyronda","ts":"2021-06-03T17:07:18.205Z"}
{"msg":"I'm working on adding support for DIF PE to AATH. What does AFGO expect as input to the send presentation for DIF PE. ACA-Py has the following options:","username":"TimoGlastra","ts":"2021-06-14T19:34:28.216Z"}
{"msg":"I'm adding DIF PE support to AATH. What is the input AFGO expects to create and send the presentation? ACA-Py supports the following options:\n- Send `{}`. Which means auto construct the presentation\n- Or you can input a presentation_definition that applies extra restrictions on the credentials to use with the possibility to specify specific record ids of credentials to use for the presentation.\nI don't want to make the API too ACA-Py specific, so curious to hear what you're using.\nSee https://github.com/ianco/aries-cloudagent-python/blob/85470918d5b60e2fd490567f6776e7a7de12dd7b/demo/AliceWantsAJsonCredential.md#request-presentation-example for a description of the possibilities in ACA-Py","username":"TimoGlastra","ts":"2021-06-14T19:38:45.586Z"}
{"msg":"Has joined the channel.","username":"lwyatt","ts":"2021-06-24T19:16:05.408Z","type":"uj"}
{"msg":"Hi, I'm curious, what does aries-framework-go use for persistent storage by default?","username":"smithbk","ts":"2021-06-24T20:09:12.292Z"}
{"msg":"@smithbk https://github.com/hyperledger/aries-framework-go/tree/main/component/storage and https://github.com/hyperledger/aries-framework-go-ext/tree/main/component/storage","username":"troyronda","ts":"2021-06-24T20:28:45.670Z"}
{"msg":"Not every storage component has had equal attention though.","username":"troyronda","ts":"2021-06-24T20:29:26.670Z"}
{"msg":"The EDV component is for encrypted storage.","username":"troyronda","ts":"2021-06-24T20:30:33.262Z"}
{"msg":"CouchDB and EDV probably had the most attention so far.","username":"troyronda","ts":"2021-06-24T20:31:14.584Z"}
{"msg":"thanks","username":"smithbk","ts":"2021-06-24T20:32:19.461Z"}
{"msg":"Hello everyone. I wonder if there are any plans to using URSA to support BbsBlsBoundSignature2020 / StatusList2021(for revocation) ?","username":"kukgini","ts":"2021-06-29T01:01:40.530Z"}
{"msg":"Hello everyone. I wonder if there are any plans to using `URSA` to support BbsBlsBoundSignature2020 / StatusList2021(for revocation) Or there are another approach (e.g., with `tink`)?","username":"kukgini","ts":"2021-06-29T01:01:40.530Z"}
{"msg":"Hello everyone. I wonder if there are any plans to using `URSA` to support `BbsBlsBoundSignature2020` / `StatusList2021` (for revocation) Or there are another approach (e.g., with `tink`)?","username":"kukgini","ts":"2021-06-29T01:01:40.530Z"}
{"msg":"There are no plans to use directly URSA since it is not a go-native library. We have build targets such as WASM that are incompatible with a C-loadable library. @kukgini","username":"troyronda","ts":"2021-07-05T20:36:35.742Z"}
{"msg":"There are no plans to directly use URSA since it is not a go-native library. We have build targets such as WASM that are incompatible with a C-loadable library. @kukgini","username":"troyronda","ts":"2021-07-05T20:36:35.742Z"}
{"msg":"FYI: we implemented RevocationList2020 in TrustBloc here (extending AFG): https://github.com/trustbloc/edge-service/blob/main/pkg/doc/vc/status/csl/csl.go","username":"troyronda","ts":"2021-07-05T20:41:25.047Z"}
{"msg":"Has joined the channel.","username":"ArdianAbazi","ts":"2021-07-13T14:27:54.080Z","type":"uj"}
{"msg":"Hi guys I am new to Aries and I have a few questions regarding issuing and veryfing credentials.\n\nFirst of all to my understanding issuing a credential as described in the open api demo, doesn't sign the issued credential. I supposed that is done through the signcredential endpoint. So the issuing agent calls the sign credential endpoint and then calls accept request, right? Is that how it's supposed to be, or am I missing something?\n\nOnce I have the signed credential on the receiving agent, should I do anything to store that credential locally or is that done automatically for me?","username":"ArdianAbazi","ts":"2021-07-13T14:40:40.033Z"}
{"msg":"Also, the JWT token in the proof section of the signcredential response doesn't have a payload. Is that normal?\n`\"proof\": {\n                  \"created\": \"0001-01-01T00:00:00Z\",\n                  \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..k4Y35tGIokcj_mLQ_IBiV-sOh6ijQPg_blctL11ztYtbYg2bs5IL1jjAuOkDbhcNLD0fZmv6Pjgph-49uui6Dg\",\n                  \"proofPurpose\": \"assertionMethod\",\n                  \"type\": \"Ed25519Signature2018\",\n                  \"verificationMethod\": \"did:peer:1zQmUReFsBxJhtGMHBMrUX1hubMwPNqwRzFgSny42uNzZjvh#VuZZhGIkeJT5676z-6o4ziWvJi8VHqxtTltWN9-Ra_g\"\n                }`","username":"ArdianAbazi","ts":"2021-07-13T14:43:58.078Z"}
{"msg":"Has joined the channel.","username":"alebaffa","ts":"2021-07-14T05:17:50.659Z","type":"uj"}
{"msg":"For anyone having facing the same question in the future, judging by the tests, the signing part has to be taken care of by the controller.","username":"ArdianAbazi","ts":"2021-07-15T10:53:35.726Z"}
{"msg":"I am getting the following response when trying to validate a signed credential: ```\n{\n  \"code\": 6000,\n  \"message\": \"request decode : json: cannot unmarshal object into Go struct field Credential.verifiableCredential of type string\"\n}\n```","username":"ArdianAbazi","ts":"2021-07-15T10:55:44.142Z"}
{"msg":"Here's what I am sending to the agent (verifiable/credential/validate): ```\n{\n  \"verifiableCredential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://www.w3.org/2018/credentials/examples/v1\"\n    ],\n    \"credentialSubject\": \"sample-credential-subject-id\",\n    \"id\": \"http://example.edu/credentials/1872\",\n    \"issuanceDate\": \"2010-01-01T19:23:24Z\",\n    \"issuer\": {\n      \"id\": \"did:example:76e12ec712ebc6f1c221ebfeb1f\",\n      \"name\": \"Example University\"\n    },\n    \"proof\": {\n      \"created\": \"2021-07-15T10:36:44.604841662Z\",\n      \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Qx_uHrPpTfR7jz1bJCe06tjirdHweDffkAiPpHDl0kJZnRYB2EBzfEm_6pmbQ1tLUSfifLVJXUdDCdfWL-3DQ\",\n      \"proofPurpose\": \"assertionMethod\",\n      \"type\": \"Ed25519Signature2018\",\n      \"verificationMethod\": \"did:peer:1zQmV4UnjWXEZhkNq41eAWcodN88jWSTV4Wndivab12MP8d7#q0B-_t5PE4VHAh0Ki-XGG2dG-21oMFQ8IYlu6-ylFN4\"\n    },\n    \"referenceNumber\": 83294847,\n    \"type\": [\n      \"VerifiableCredential\",\n      \"UniversityDegreeCredential\"\n    ]\n  }\n}\n```","username":"ArdianAbazi","ts":"2021-07-15T10:56:47.465Z"}
{"msg":"Does anyone have an idea why? I checked the tests for this part, and this is the way they call this endpoint.","username":"ArdianAbazi","ts":"2021-07-15T10:57:35.962Z"}
{"msg":"Has joined the channel.","username":"aspannag","ts":"2021-07-26T11:52:42.173Z","type":"uj"}
{"msg":"Hi aries-go folks. What would I need to spin up a mediator agent with aries-go that works with indy? I've read that aries-go is DLT agnostic. What would I need to run it against indy? Or should I opt into aca-py right away?","username":"aspannag","ts":"2021-07-27T10:23:13.762Z"}
{"msg":"At this point I think aca-py is a better choice if you are based on indy.","username":"kukgini","ts":"2021-08-04T13:28:53.665Z"}
{"msg":"Has joined the channel.","username":"l-wegner","ts":"2021-08-05T07:27:07.714Z","type":"uj"}
{"msg":"You can integrate indy into aries-go, checkout https://github.com/hyperledger/aries-framework-go-ext. Under components>vdr there's an indy implementation. You might have to do some changes to this implementation to make compatible with vdrapi, but you can make it work. Also have you considered http binding?","username":"ArdianAbazi","ts":"2021-08-09T07:00:04.292Z"}
{"msg":"Sounds interesting. What's the reason for the repos aries-framework-go and aries-framework-go-ext to be split?","username":"aspannag","ts":"2021-08-09T16:15:32.980Z"}
{"msg":"Can you explain `http binding`?","username":"aspannag","ts":"2021-08-09T16:15:49.598Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-go?msg=WfnTzpyEYWD6fucqo) -ext is for plugins and other modules that aren't defaults\nwhen you build a cloud agent with afgo, for example, you're free to choose the backend DB you use, so afgo itself has some utility stores and defaults, and afgo-ext can have a variety of plugins from which you pick whichever DB suits your needs","username":"filip.burlacu","ts":"2021-08-10T15:51:27.480Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=WfnTzpyEYWD6fucqo","url":"https://chat.hyperledger.org/channel/aries-go?msg=WfnTzpyEYWD6fucqo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-go?msg=khZHnPcyNs3ZY8HkJ) the http binding VDR uses an external server for resolving DIDs - so if you only need to resolve dids, you can use that with an external did method driver or a universal resolver instance","username":"filip.burlacu","ts":"2021-08-10T15:58:36.275Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=khZHnPcyNs3ZY8HkJ","url":"https://chat.hyperledger.org/channel/aries-go?msg=khZHnPcyNs3ZY8HkJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"ffendt","ts":"2021-08-24T12:43:48.587Z","type":"uj"}
{"msg":"AFG 0.1.7: https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.7","username":"troyronda","ts":"2021-09-14T20:34:17.608Z"}
{"msg":"Has left the channel.","username":"vsadriano","ts":"2021-09-29T10:29:40.111Z","type":"ul"}
{"msg":"Has joined the channel.","username":"action-sj","ts":"2021-10-12T01:28:27.703Z","type":"uj"}
{"msg":"Has joined the channel.","username":"adn-misa","ts":"2021-10-14T09:16:56.145Z","type":"uj"}
{"msg":"Hi everyone,\n\nI started integrating AF-Go into a mobile application and i have two questions:\n\n1. Does anyone also have issues with the android bindings? I got some weird error the first time i call a method (https://github.com/hyperledger/aries-framework-go/issues/3009)?\n\n2. Is there a possibility to automatically connect a mobile agent with a mediator? I'm am currently doing the outofband invitation manually but the mobile application should automatically connect and register to a mediator.","username":"adn-misa","ts":"2021-10-14T09:16:56.850Z"}
{"msg":"Has joined the channel.","username":"nbAmit","ts":"2021-10-20T04:55:18.057Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jackmacloud","ts":"2021-10-26T07:02:15.295Z","type":"uj"}
{"msg":"Hi guys\nHow are Aries-go used with sidetree? Are there any relevant code cases?","username":"jackmacloud","ts":"2021-10-26T07:02:15.774Z"}
{"msg":"Has joined the channel.","username":"lyc9702","ts":"2021-10-27T06:40:51.994Z","type":"uj"}
{"msg":"How are Aries-go used with sidetree?","username":"lyc9702","ts":"2021-10-27T06:40:52.356Z"}
{"msg":"","username":"lyc9702","ts":"2021-10-27T06:40:52.356Z","attachments":[],"type":"rm"}
{"msg":"@troyronda ^^^","username":"swcurran","ts":"2021-10-27T15:30:29.229Z"}
{"msg":"In v0.1.7 Release Notes, What do you mean by Present Proof V3? I can't find any Aries RFC related with it.","username":"kukgini","ts":"2021-10-28T06:10:08.657Z"}
{"msg":"The WACI-Pex work being done in DIF uses DIDComm 2.  Because of how DIDComm 2 works, some of the fields in Present Proof v2 are moved to the header. Hence, there is a Present Proof V2 that accommodates DIDComm2.  A number of Aries protocols will be subject to that change.","username":"swcurran","ts":"2021-10-28T22:44:11.722Z"}
{"msg":"@TelegramSam -- I think the V3.0 Protocol should go in to the the Aries RFCs to keep them together and perhaps we should start on an AIP 3 that is based on DIDComm 2?","username":"swcurran","ts":"2021-10-28T22:45:28.745Z"}
{"msg":"Has joined the channel.","username":"TelegramSam","ts":"2021-10-28T22:45:28.811Z","type":"uj"}
{"msg":"Many thanks. @swcurran @TelegramSam :relaxed:","username":"kukgini","ts":"2021-10-29T10:49:43.328Z"}
{"msg":"Has joined the channel.","username":"mateokurti","ts":"2021-11-03T10:33:09.428Z","type":"uj"}
{"msg":"Hello all! I have two quick questions. I'm planning on creating an SSI ecosystem and I'm on the phase when I should decide which framework to use for each agent. As I've seen, AFGo has a great interoperability with other frameworks, but the only problem that I can see so far is its relationship with Indy ledgers. The scenario in my head is that the agent might need to communicate with different ledgers, and I saw that it can only read from Indy ledgers. If I decide to run my \"Enterprise Agent\" using AFGo, what would be your suggestion regarding blockchain?","username":"mateokurti","ts":"2021-11-03T10:33:36.909Z"}
{"msg":"The other thing is about the Android Agent. I have a prototype in Kotlin and I wanted to know if the AFGo can be used in a Kotlin environment","username":"mateokurti","ts":"2021-11-03T10:34:22.538Z"}
{"msg":"Hi mateokurti, you could use the DIF Universal Resolver and Registrar for your issue with the ledger","username":"adn-misa","ts":"2021-11-04T07:41:44.972Z"}
{"msg":"Yes you can use the mobile bindings for that (https://github.com/hyperledger/aries-framework-go/tree/main/cmd/aries-agent-mobile), But you will maybe encounter some weirds errors on your way like i did (https://github.com/hyperledger/aries-framework-go/issues/3009).","username":"adn-misa","ts":"2021-11-04T07:43:34.042Z"}
{"msg":"Hello @adn-misa It looks like based on gomobile. Is it OK to consider gomobile as production ready?","username":"kukgini","ts":"2021-11-09T08:26:23.084Z"}
{"msg":"@kukgini gomobile is experimental (https://cs.opensource.google/go/x/mobile) but i have seen multiple projects where complete application were made with it.\n\nDepends what you consider to be production ready. The repository mention that you don't have any support from Google.\n\nMy approach is to use an abstraction over the aries framework on mobile. We are very early and other frameworks could come in the future. And if something happen you will only have to change your abstraction implementation (instead of the whole application).","username":"adn-misa","ts":"2021-11-10T11:49:17.563Z"}
{"msg":"thank you for your shared experence. @adn-misa","username":"kukgini","ts":"2021-11-11T04:19:37.756Z"}
{"msg":"Hi everyone, i'm currently trying to implement an Issuer with AF-Go and i came up with following questions:\n\nHow do i create a public DID? I'm right that the creation, update and deactivation need to be implemented in the VDR?\n\nHow do I integrate the implementation from the extension repository? I saw that there are implementation for indy, orb and sidetree(I assume it works with ION?)\n\nWhat is the best way to get started with an issuer with a public DID?\n\nThanks in advance :smiley:","username":"adn-misa","ts":"2021-11-22T10:06:53.302Z"}
{"msg":"Hi @adn-misa and welcome\n\nIf you want to connect to a public DID registry, you would use the vdr's [HTTPbinding implementation](https://github.com/hyperledger/aries-framework-go/blob/main/pkg/vdr/httpbinding/vdr.go#L36). If you only want to work with 2 agents directly, you would use peer DIDs that can be created using the [peer DID VDR creator](https://github.com/hyperledger/aries-framework-go/blob/main/pkg/vdr/peer/creator.go#L29).\n\nThe best way to learn about issuing credentials and introducing agents (issuer and holder for example) is to see the BDD tests in action. For example out-of-band introductions are shown [here](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/features/introduce.feature) with corresponding code in the introduce_xxx_steps.go files found [here](https://github.com/hyperledger/aries-framework-go/tree/main/test/bdd/pkg/introduce). Note that sdk is for direct agent calls (you can use step debugging to view the agent's test run) or controller that runs the agent in a docker container. Note that introduce is based on out-of-band v1 version that requires and initialized DID connections between agents. The new out-of-band v2 implementation does not use connections and therefore only handles triggering attached requests goals.\n\nIf you want to see how Issue credentials works, the [issue credential sdk feature](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/features/issue_credential.feature) (SDK) or the [issue credential controller feature](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/features/issue_credential_controller.feature) (controller) files can be reviewed along with their test implementations [here](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/pkg/issuecredential/issuecredential_sdk_steps.go) and [here](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/pkg/issuecredential/issuecredential_controller_steps.go) respectively.\n\nThere's also a BDD test example resolving a public DID via a [mock SideTree node](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/features/didresolver.feature#L10) resolver, this is only a mock resolver, not the real SideTree, but the drill to resolve from a real public resolver is the same.\n\nI hope this helps and feel free to post any more questions.","username":"Baha-sk","ts":"2021-11-22T17:51:20.832Z"}
{"msg":"Hi @adn-misa and welcome\n\nIf you want to connect to a public DID registry, you would use the vdr's [HTTPbinding implementation](https://github.com/hyperledger/aries-framework-go/blob/main/pkg/vdr/httpbinding/vdr.go#L36). If you only want to work with 2 agents directly, you would use peer DIDs that can be created using the [peer DID VDR creator](https://github.com/hyperledger/aries-framework-go/blob/main/pkg/vdr/peer/creator.go#L29).\n\nThe best way to learn about issuing credentials and introducing agents (issuer and holder for example) is to see the BDD tests in action. For example out-of-band introductions are shown [here](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/features/introduce.feature) with corresponding code in the introduce_xxx_steps.go files found [here](https://github.com/hyperledger/aries-framework-go/tree/main/test/bdd/pkg/introduce). Note that sdk is for direct agent calls (you can use step debugging to view the agent's test run) or controller that runs the agent in a docker container. Also note that introduce is based on out-of-band v1 version that requires and initialized DID connections between agents. The new out-of-band v2 implementation does not use connections and therefore only handles triggering attached requests goals.\n\nIf you want to see how Issue credentials works, the [issue credential sdk feature](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/features/issue_credential.feature) (SDK) or the [issue credential controller feature](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/features/issue_credential_controller.feature) (controller) files can be reviewed along with their test implementations [here](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/pkg/issuecredential/issuecredential_sdk_steps.go) and [here](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/pkg/issuecredential/issuecredential_controller_steps.go) respectively.\n\nThere's also a BDD test example resolving a public DID via a [mock SideTree node](https://github.com/hyperledger/aries-framework-go/blob/main/test/bdd/features/didresolver.feature#L10) resolver, this is only a mock resolver, not the real SideTree, but the drill to resolve from a real public resolver is the same.\n\nI hope this help, feel free to post any more questions.","username":"Baha-sk","ts":"2021-11-22T17:51:20.832Z"}
{"msg":"Hi @Baha-sk thanks for your response and yes I have some more clarification questions,\n\nYes I can use the HttpBinding to get DID Documents from public DIDs but how can i register a public DID from the framework. I looked at the implementation but HttpBinding does not implement the Write and Deactivate functions.\n\nThat comes back to my second question, the extension repository (https://github.com/hyperledger/aries-framework-go-ext) seems to have implementation to register public DIDs with a orb or sidetree implementation, could you describe how it can be integrated into the AF-GO?","username":"adn-misa","ts":"2021-11-24T08:36:57.749Z"}
{"msg":"Has joined the channel.","username":"KurosakiIchigo","ts":"2021-11-24T10:51:14.067Z","type":"uj"}
{"msg":"Hello everyone, any idea whether I could use an AFGO agent as a mediator between an ACA-PY (cloud) and another AFGO agent (edge)?","username":"ArdianAbazi","ts":"2021-11-24T13:00:36.376Z"}
{"msg":"I am currently trying to perform didexchange with a setup like that and the mediator cannot decode the envelopes coming from ACA-PY. Both AFGO agents are running on ACAPyInterop mode.","username":"ArdianAbazi","ts":"2021-11-24T13:02:25.704Z"}
{"msg":"@adn-misa , the core Aries-Framework-Go project is not meant to create public DIDs directly, it offers basic DID resolution via the httpbinding VDR.","username":"Baha-sk","ts":"2021-11-24T14:10:04.799Z"}
{"msg":"@adn-misa , the core Aries-Framework-Go project is not meant to create public DIDs directly, it offers basic DID resolution via the httpbinding VDR for public DIDs.","username":"Baha-sk","ts":"2021-11-24T14:10:04.799Z"}
{"msg":"aries-framework-go-ext offers more functionality to create/resolve DIDs for sidetree, orb, trustbloc and indy under the [vdr](https://github.com/hyperledger/aries-framework-go-ext/tree/main/component/vdr) package\n\nso the former project serves as an extension to the latter.","username":"Baha-sk","ts":"2021-11-24T14:13:11.353Z"}
{"msg":"you don't need to integrate the -ext logic inside AFGO core project, as a user agent developer, you create the public DID using -ext, then create an agent and use its clients to execute the protocol services available, ie DIDexchange, out-of-band, issue-credential, persent-proof, etc. There's a client and a service for each of these in AFGO, as an agent developer, you would use clients found [here](https://github.com/identinet/aries-framework-go/tree/fix-vcwallet-correct-issue-vc/pkg/client) via the framework instance you create, just as in bdd tests, so the steps are:\n1. [create agent](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/agent/agent_sdk_steps.go#L469) with all applicable options needed.\n2. get the agent's context created in 1 above by calling agent.Context() example from bdd tests is [here](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/agent/agent_sdk_steps.go#L474)\n3. create the desired client you would like to use, eg didexchange client by passing the context retrieved in step 2 above, bdd example: [didexchangeClient, err := didexchange.New(d.bddContext.AgentCtx[agentID])](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/pkg/didexchange/didexchange_sdk_steps.go#L294)\n4. use the above client with the public DID (that public DID could be created using one of the 4 VDRs found in aries-framework-go-ext or any other tool)","username":"Baha-sk","ts":"2021-11-24T14:36:46.609Z"}
{"msg":"you don't need to integrate the -ext logic inside AFGO core project, as a user agent developer, you create the public DID using -ext, then create an agent and use its clients to execute the protocol services available, ie DIDexchange, out-of-band, issue-credential, persent-proof, etc. There's a client and a service for each of these in AFGO, as an agent developer, you would use clients found [here](https://github.com/identinet/aries-framework-go/tree/fix-vcwallet-correct-issue-vc/pkg/client) via the framework instance you create, just as in bdd tests, so the steps are:\n1. [create agent](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/agent/agent_sdk_steps.go#L469) with all applicable options needed.\n2. get the agent's context created in 1 above by calling agent.Context() example from bdd tests is [here](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/agent/agent_sdk_steps.go#L474)\n3. create the desired client you would like to use, eg didexchange client by passing the context retrieved in step 2 above, [bdd example](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/pkg/didexchange/didexchange_sdk_steps.go#L294): \n```didexchangeClient, err := didexchange.New(d.bddContext.AgentCtx[agentID])\n```\n4. use the above client with the public DID (that public DID could be created using one of the 4 VDRs found in aries-framework-go-ext or any other tool)e","username":"Baha-sk","ts":"2021-11-24T14:36:46.609Z"}
{"msg":"you don't need to integrate the -ext logic inside AFGO core project, as a user agent developer, you create the public DID using -ext, then create an agent and use its clients to execute the protocol services available, ie DIDexchange, out-of-band, issue-credential, persent-proof, etc. There's a client and a service for each of these in AFGO, as an agent developer, you would use clients found [here](https://github.com/identinet/aries-framework-go/tree/fix-vcwallet-correct-issue-vc/pkg/client) via the framework instance you create, just as in bdd tests, so the steps are:\n1. [create agent](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/agent/agent_sdk_steps.go#L469) with all applicable options needed.\n2. get the agent's context created in 1 above by calling agent.Context() example from bdd tests is [here](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/agent/agent_sdk_steps.go#L474)\n3. create the desired client you would like to use, eg didexchange client by passing the context retrieved in step 2 above, [bdd example](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/pkg/didexchange/didexchange_sdk_steps.go#L294): \n```didexchangeClient, err := didexchange.New(d.bddContext.AgentCtx[agentID])\n```\n4. use the above client with the public DID (that public DID could be created using one of the 4 VDRs found in aries-framework-go-ext or any other tool)","username":"Baha-sk","ts":"2021-11-24T14:36:46.609Z"}
{"msg":"you don't need to integrate the -ext logic inside AFGO core project, as a user agent developer, you create the public DID using -ext project or any other tool, then create an agent and use its clients to execute the protocol services available, ie DIDexchange, out-of-band, issue-credential, persent-proof, etc. There's a client and a service for each of these in AFGO, as an agent developer, you would use clients found [here](https://github.com/identinet/aries-framework-go/tree/fix-vcwallet-correct-issue-vc/pkg/client) via the framework instance you create, just as in bdd tests, so the steps are:\n1. [create agent](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/agent/agent_sdk_steps.go#L469) with all applicable options needed.\n2. get the agent's context created in 1 above by calling agent.Context() example from bdd tests is [here](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/agent/agent_sdk_steps.go#L474)\n3. create the desired client you would like to use, eg didexchange client by passing the context retrieved in step 2 above, [bdd example](https://github.com/identinet/aries-framework-go/blob/main/test/bdd/pkg/didexchange/didexchange_sdk_steps.go#L294): \n```didexchangeClient, err := didexchange.New(d.bddContext.AgentCtx[agentID])\n```\n4. use the above client with the public DID (that public DID could be created using one of the 4 VDRs found in aries-framework-go-ext or any other tool)","username":"Baha-sk","ts":"2021-11-24T14:36:46.609Z"}
{"msg":"Thanks a lot, that really helped!","username":"adn-misa","ts":"2021-11-24T14:41:59.916Z"}
{"msg":"@ArdianAbazi what errors are you getting? and how are you initializing the agent? (more specifically which mediaTypeProfiles are you using? the default are the interop profile that decodes DIDComm v1 used by ACApy)","username":"Baha-sk","ts":"2021-11-24T14:42:15.274Z"}
{"msg":"@ArdianAbazi what errors are you getting? and how are you initializing the agent? (more specifically which mediaTypeProfiles are you using? the default are the interop profile that decodes DIDComm v1 envelope format used by ACApy)","username":"Baha-sk","ts":"2021-11-24T14:42:15.274Z"}
{"msg":"@ArdianAbazi what errors are you getting? and how are you initializing the agent? (more specifically which mediaTypeProfiles are you using? the default are the interop profile that decodes DIDComm v1 envelop format used by ACApy)","username":"Baha-sk","ts":"2021-11-24T14:42:15.274Z"}
{"msg":"you're welcome @adn-misa","username":"Baha-sk","ts":"2021-11-24T14:42:32.708Z"}
{"msg":"I build the AFGO agents using the make command for ACAPy interop. And run the mediator with http,ws capabilities for both inbound and outbound. I do the same for the edge agent too and I run it with ws for outbound, no inbound obviously. The connection with the mediator and stuff all works, also connecting to another AFGO on the cloud via the mediator works. So I suppose that setup is right. \nI run ACA-Py 0.7.2, with the two following flags, among others, --emit-new-didcomm-prefix --emit-new-didcomm-mime-type. I am able to perform didexchange with an AFGO agent running on the cloud but when I try to establish a connection with the agent on the edge (via the mediator) I get an error saying that Anoncrypt is not supported.\nI was able to pinpoint that the error comes from the /legacy/authcrypt Unpack function. The Unpack function checks whether the data being unpacked is using Authcrypt, if it doesnt it throws an error. In my case, the data coming from the ACAPy seems to have typ set as JWM/0.1 and alg as Anoncrypt.\n```\n{\"enc\":\"xchacha20poly1305_ietf\",\"typ\":\"JWM/1.0\",\"alg\":\"Anoncrypt\",\"recipients\":[{\"encrypted_key\":\"32AvGbP8AL1L4M5IDHMx3AhDClFJzgnZKun4covFQiM214oBTIZTDL3jQ9EfJoeN37QwxTdKpMfePdvpIG1ua23Hqmxchw2TxSU9yZFOoMg=\",\"header\":{\"kid\":\"5re4NG7eYNBgManWrPnZBUSBwyduGWiED3oFLjf7UVAk\"}}\n```\nI tried unpacking the envelope with Anoncrypt, but it wasnt able to decode it either, and I was getting a different error. I tried with both an indy and aries_askar backend, still didnt work.\n`\n`","username":"ArdianAbazi","ts":"2021-11-24T16:08:45.614Z"}
{"msg":"@Baha-sk Here's the full payload send to the mediator:\n```\n{\"protected\":\"eyJlbmMiOiJ4Y2hhY2hhMjBwb2x5MTMwNV9pZXRmIiwidHlwIjoiSldNLzEuMCIsImFsZyI6IkFub25jcnlwdCIsInJlY2lwaWVudHMiOlt7ImVuY3J5cHRlZF9rZXkiOiIzMkF2R2JQOEFMMUw0TTVJREhNeDNBaERDbEZKemduWkt1bjRjb3ZGUWlNMjE0b0JUSVpUREwzalE5RWZKb2VOMzdRd3hUZEtwTWZlUGR2cElHMXVhMjNIcW14Y2h3MlR4U1U5eVpGT29NZz0iLCJoZWFkZXIiOnsia2lkIjoiNXJlNE5HN2VZTkJnTWFuV3JQblpCVVNCd3lkdUdXaUVEM29GTGpmN1VWQWsifX1dfQ==\",\"iv\":\"tg3_qu6X2mSuD8x4\",\"ciphertext\":\"wN5xZNTw9cTebZKhoIpmOnbFqGkpa6oyGPMFwqyp8fhbY467-O3k3hgu3L8afnEAkNbvdvXsAPrvmb8WcsnDQ0zSrw4X6JrvIady9APsDdg9I7E7S1aF0O0oEJcAZl8ym46Fd3Ov3CvXKuoroyM74aaB2F2N1oFKZqUOgkzVnnHSVCeHr6Mhl611g_i82v1jNDAIqIx49PuxHA8YBGGmndku0F8jBQzKyso0q7a_NQMqnQw39S3ZW1KD6IHQ9tY7MXt8BkybojFehEEbvf7rk-wa_1pfgv9VD1RyQlbZd72RKdW4_Bx8qoxtXjyT2UsPNl7uFT3GxmxLHUCYN09nRVw2FQK3CMIegC2l8XwRdt2PntwOhEcpvTWL8_w5MlYO2rr-zeXdmH4qTdfpU5K-vNOWxPWJMb27iP0DFzmpmWsVmBR6fh2u66IjIWtiEmFhL2fFA3lU2E0pV4kW-f-4n6sJp9yF3FjcN1fSJtH-lyeMvPeDZihxKPiFmXbKfmWmdO2DZsx5z7eH09Ig4Zgukqst-FQF2JZxbDmF2c6v8HS9-xYKGCc8B5wA0ctQMSFjIOYBpNWTGXdQcpd4xjKNqqhP9cQRXakJnNagtHfkyTyvXjI5rCsV8_QMjZRmpHvLkRXTnDGQxk_kMyn9ZCDlee8EF4_Nw1DX_WnHVeM5crTGBQ2LKpXDsczRpvtBDi8tfth-Ql5oMXUZ8R_I-zpf9hrzFSGWm1QTuvyzJrIrXJGwYmc0IXsAvG0jtjkZ3jNEV0KMo4MYH_G6poD26bZPwqzZ6-mmpNkwyE_SgNe8k3lgVaKNiXM1uEwqpA8XohJ4YQtgza67fWworqvyMvzpxoo6PvJMYLsHItGglqji3g6lflADzhJ_-qAOII_8KLo9x-mjm5reQDZOmZ8-x_3V4Ncib3SzvOsHPdSBlp21r70sRi__3l4EJJLStjIkmtGEk0AvXJMdfoAwWlAfWkj6hBfuyRyIn1rPxvixQGXE2eOUdVCCLEqeFwFo07pZ1vSsq6F4qouTlnrryRnR7vKxZznkmEya4a6hZTkPjgH1c1ap5O7WHzoMnGXZES_ufpnkwiOy9D4koyJ8sbaOimyU43LJX2YfM4QAfcQz16DBQqkis3f6VGwqakZPSQdHZJU5jYKHIgYk5z_Y5N8RhOONJVyO601T9TzoxyEbPfWzXoc5XtWwUmRruYw5IrnjoacaJDw3Cr8INn0351R4sNrWRwluqjZ6cWKJs_CMmeXszTwj9wpAP88EIMTH42mqRGjjwWjEppgXfF8kw0rTr7PDqizgjLcP6wsNwPZkx9icSCdxjuyp4vKq8vTvsJL_GfddRoUsjf-ziWPT42al5TprNKj6RPQSx3ZAmk2NjEGT_5sAAG8BC6hNksHlmbAk8-5El3zOw1Mw6faGCTB02DwsypEoJ-Rg2zQw3MnIoda4-kT6Lrns5FUzEdNtGJ8wQnAiog2LrnIvTsbf5d3XjRarAJ7OBbRw2P1HJ3OkDHTPiAOGmagNwwgzZwKqBiMsfNq0yKHwBWJkDL3XXBmiw9xvc7xIxX5pK-QBe3_OYcgmuoJl9a7qOkFQsNvLAXiF6qgY2iwLMWtE2FfBQcAI8PYK02R0Ih6MZp9-GhuOer2OhnPRCHaoJK8BYy1Wj7h2IbOotKK3ZIscCQTWGppusuQndmx0MVAy3HQRpSx-makY8tpPI0FPv8doQDccZHaMsE_wAtixT42oTZluCo5TSh9oqRVjQlskALjTAkX7w3F77C0VgzkIbr3zasb5_A9iGZgFLcwlaCIyJeZsM3c7MwxB3OpEeJ_GvttpXJh0C1afRRUWHHVxL5wufGB-oMJRAJbbfgvtPjzmqkahdVvygI5Ze22vU76Ru5CxRlBPjOiPkPXyg27K9WVV9VNN4YsEA4Gq-18O1T13JceDa1-q9RudsFQf9Yof3Q7g6g05JiILx0Ac3VsOheWq0LblvbgjjsAPFGgvaUs3RXj47A2OMqWGq6m2OYiTylOmU0dsmo_UJQGzq10A99u0J6CKLYl1ddw3DRvX1NeYMreUkJLixeOiLXsLUdr6EdN2vFmqts8bpzCUmTVxVioZAkW7y0DnTVQXkK_ddfDSgN5euu12GGyyun2QvaqhpQBivuUmIVZIbyOSXeSmhVSr9EalVVBLGOYpJGwuf3j7f6XXCBPAE-OgmGI-y3rv34ZDaucFGxoWp2FxPoQvXgSDMBcPbhsLEQKDPt9s0S5dZwn_fVlcgQEJ8dg5yH4BwdEs4zEDBBpQPEykwnggClxgE56ltmIwXdDqqBX7nAsLadG-WoMikZgZgvY6qOwvz-wTzDigmpFVDRJlppzJvsusodz4n8_kqjLfxZOCE_M-VmIYsAdazd6jKMbD2jwCqZSzLSNjm3TCSKXWhcRrl5SLlfzph_Wg_uMsumcEpDO8n6YDsXP6iUwHJQ38ZcBd4LvqNK_SFRyhalq2FWUrQoUXWHYRhwnrs3HLHxGuKINYjRiDmDbj4NnFioK37TPGM_2rhLh9SNp6RYpXGKCzCkLthWyVCkqWywELtw2GDW66ESHnMWBASVeMxcv0cw-Zs958piDVc-N3_mOVvPAVIaMhs1WKrI3Q2U5-UCSLKKgni0BTUY9QiFXw78hfq1uwVuedZ1peu3zpLBYRblYic4FzVZlz4wGMbPVZh-2xSyQJdEgMshbVnBSFWYUl55E9BnnDAw6bUqVgZ9w6w2w7VcHX40CSIzzBqsAFRLDYM6W_d-y8CtW22ZUMZxRr6DOgjMhZCyTiTwKoIOZ2lhHHx_doXiQGYhkLH74TqGF_4k43nHmE-0mgHRi_E41QFa2ipYia1fOb-2MgsK8telVmpw2J9E45xGuCc5KPqGcB_fvbkaBNcBmCYuZQd-bmBqfFf9oRMD5Sqiaf-_C4NlRp9GO3rx4UQVEcNUD1EddG1wHW20kOoG5mKPqYSqKe9knBL3m4SacX8SiWdd3yshNJwdpEAre5js5qVJH1jxD2VlDMHNc0uDg1xxTFdPMvvVsHCqCbG11dL-CLsEEdgmE-RMmdnr1Jwb6zNNYTgP5PIlC7Rdl1_cHhJhKP98k1nI07HBjOnI5B5sVEjQiRgRXvHbZjmouD-FKxtw860VygX0ngTEB0qapgkeUAK3pZ4hVq8ri34u3OMWzQUcCi7nCvdIlMNJvUkxdfj-4DM-JSwe_dYxrqKUIzNfYUqFAqE_xIMr3fPBAhq6poBV-LM3TMaSemxbELxys3lBeBvspXcQaeqkRunTsZL7h67A2oVIqTLwFJvHLiC7f7jTMk1bwx4F3yLrlAvNWryc8d5khVRf1vTen5Kn5JWKVYGJ3LSlFyUY9lcGuANjHA1g-CxRyIItjWqxI-xdFgRNRXeNPe16ZzWxh4hCK1JZ4PIMqU92kOq6elYF0QX4EGcjEDQNt0jt_m4vss9MWXCAQsh9Kxjg9giFdWxSfaKzV3kxtlFpaKqEo-pHWRzh_xNJvhC5VnWIYQ2USpG4EX2vv6xzZFTSx3ueCZiVcxcSoLlSAPCrsaWjCtMnSOS2wWxNVO7aOtuyFVYkoAa13sJViDHZQ-RAiHSVilXbqHIEoGtOUUC3rxosPM3G8vx4UCfciNtNeOiHAF0jYxexgqUmuUdvs14Kuqm9EvMJoD0GXx263gFQGKPgUoKcm9xliL3YL2ASBrbGdLOUk6jmq-MPrVWEG4vQ9iXX_E-WOv6ou8tnyA5Zve4xn56nk2xZhlJf1J4SD4dOPZsWrDyz81nmCZWNhrPSodEkoy12-zvnBXDOB-rsI65DCvVwAu4OxWMGjEVxY9fKM50mUNsLSOUWnrEwh2fx_wgHVYpRPXWhnVkjSfA7Hr4bKZ8778pDTgykWh9LXLPMHE3GdpSWZDHF43XvScEy3j_wFG5v2Oc0yL9FmsA0XR9wvMO3GN0lVazDDcDGN0quCX3vFONrXsZtlWRDd-VDsGJJcrCU4BBKpZcdlzoAKotXzlQZGPcadhbub8_vgXYeg_S2rreNcqnKgAehBAFPIOzEgQUQW6lSqe4E1xxGWI9tI9C3Vi6BwW-Rsyyr2MOuyTfYTfrlADlp0eV6ONaw2CdOFJ8thyIVwbaoAmvEZnMIZszq7z49AYlw8SuQ==\",\"tag\":\"NdNUzZvz1xURdKzq6hhnQw==\"}\n```","username":"ArdianAbazi","ts":"2021-11-24T16:09:49.831Z"}
{"msg":"The thing is I am not sure it supports its, thats why i was asking for a sanity check basically :D\nThanks in advance","username":"ArdianAbazi","ts":"2021-11-24T16:10:36.979Z"}
{"msg":"to my knowledge, i don't think legacy packer supports `Anoncrypt`, it only supports `Authcrypt` packing since the sender key is always involved","username":"Baha-sk","ts":"2021-11-24T16:12:41.624Z"}
{"msg":"the new DIDComm V2 protocol supports both `Anoncrypt` and `Authcrypt` packing using X25519 keys/ NIST P keys found in the `KeyAgreement` verification methods of the DID ( as opposed to DIDComm V1's Ed25519 keys found in the authentication verification method of the DID)","username":"Baha-sk","ts":"2021-11-24T16:16:00.821Z"}
{"msg":"> In my case, the data coming from the ACAPy seems to have typ set as JWM/0.1 and alg as Anoncrypt.\nyeah JWM/0.1 and Anoncrypt is not supported in AFGO, we're aiming to move towards DIDComm V2 instead","username":"Baha-sk","ts":"2021-11-24T16:18:24.762Z"}
{"msg":"> typ set as JWM/0.1\n@Baha-sk they made a typo here, it's JWM/1.0 in the example message, which is what AFGO supports.\n@ArdianAbazi But that doesn't make a difference, because this message uses XChaCha20-Poly1305 and Anoncrypt, and afgo's legacy packer supports only Authcrypt and ChaCha20-Poly1305.","username":"filip.burlacu","ts":"2021-11-24T16:36:18.539Z"}
{"msg":"I'm running the test harness interop tests locally right now, to see if I replicate this error - interop can't work if acapy's switched its default ciphers...","username":"filip.burlacu","ts":"2021-11-24T16:38:00.841Z"}
{"msg":"ahh nvm I misunderstood; acapy uses anoncrypt with XC20P for the enclosing message sent to the mediator, while using authcrypt otherwise.","username":"filip.burlacu","ts":"2021-11-24T17:12:57.790Z"}
{"msg":"@filip.burlacu I know that you probably know this, but AFGO decides what packer to use based on the typ field, JWM/1.0 is unpacked using the legacy packer. However, I did try to unpack it via the Anoncrypt packer, but still no luck there unfortunately.","username":"ArdianAbazi","ts":"2021-11-25T08:41:07.149Z"}
{"msg":"The error I get is \n`\nanoncrypt Unpack: single recipient missing 'KID' in jwe.ProtectHeaders\n`","username":"ArdianAbazi","ts":"2021-11-25T08:41:31.976Z"}
{"msg":"The error I get is \n`anoncrypt Unpack: single recipient missing 'KID' in jwe.ProtectHeaders\n`","username":"ArdianAbazi","ts":"2021-11-25T08:41:31.976Z"}
{"msg":"The error I get is \n```\nanoncrypt Unpack: single recipient missing 'KID' in jwe.ProtectHeaders\n```","username":"ArdianAbazi","ts":"2021-11-25T08:41:31.976Z"}
{"msg":"Furthermore, I checked the test harness, I dont think this case is part of the tests.","username":"ArdianAbazi","ts":"2021-11-25T08:43:37.682Z"}
{"msg":"I think it's safe to assume that this case is not supported for now. It doesn't seem like a lot of changes would have to be made to add support, but the codebases, as they are currently, don't have support for this case.","username":"ArdianAbazi","ts":"2021-11-25T08:44:59.155Z"}
{"msg":"Do you guys @Baha-sk @filip.burlacu think I should create an issue for this, I also have code that can replicate it through tests :D","username":"ArdianAbazi","ts":"2021-11-25T08:47:08.730Z"}
{"msg":"Do you guys @Baha-sk @filip.burlacu think I should create an issue for this, I also have code that can replicate it through tests","username":"ArdianAbazi","ts":"2021-11-25T08:47:08.730Z"}
{"msg":"@ArdianAbazi , legacy packer in AFGO is for DIDcomm v1 (AIP1/2) packing and has only Authcrypt packer. The other two Anoncrypt and Authcrypt packers that are siblings to legacy are for DIDComm V2 packing only. Any V1 envelop cannot be unpacked by these packers.\n\nso to sum up, AFGO supports only Legacy.Authcrypt packing for DIDComm V1 (AIP1/AIP2) support, there's no Legacy.Anoncrypt packer in AFGO\n\nAs for DIDComm V2, AFGO has Anoncrypt and Authcrypt packers","username":"Baha-sk","ts":"2021-11-25T14:27:43.024Z"}
{"msg":"@ArdianAbazi , legacy packer in AFGO is for DIDcomm v1 (AIP1/2) packing and has only Authcrypt packer. The other two Anoncrypt and Authcrypt packers that are siblings to Legacy are for DIDComm V2 packing only. Any V1 envelop cannot be unpacked by these packers.\n\nso to sum up, AFGO supports only Legacy.Authcrypt packing for DIDComm V1 (AIP1/AIP2) support, there's no Legacy.Anoncrypt packer in AFGO\n\nAs for DIDComm V2, AFGO has Anoncrypt and Authcrypt packers","username":"Baha-sk","ts":"2021-11-25T14:27:43.024Z"}
{"msg":"Has joined the channel.","username":"jceb 3","ts":"2021-11-25T16:48:00.136Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jje","ts":"2022-01-17T07:11:31.935Z","type":"uj"}
{"msg":"I'm currently implementing the did:peer spec in AFJ and want to test for correctness against the peer did implementation in AFGO.\n\nI see a document is created [here](https://github.com/hyperledger/aries-framework-go/blob/49e59b074359d344c6c9968e9650e6bc53f811d0/pkg/vdr/peer/did_test.go#L154) and verified against this did: `did:peer:1zQmZdT2jawCX5T1RKUB7ro83gQuiKbuHwuHi8G1NypB8BTr`.\n\nI have zero experience with rust, so wondering if you could provide me with the JSON output of the `genesisDoc` method so I can make sure the method produces the same results in AFJ.","username":"TimoGlastra","ts":"2022-01-26T17:11:41.121Z"}
{"msg":"I'm currently implementing the did:peer spec in AFJ and want to test for correctness against the peer did implementation in AFGO.\n\nI see a document is created [here](https://github.com/hyperledger/aries-framework-go/blob/49e59b074359d344c6c9968e9650e6bc53f811d0/pkg/vdr/peer/did_test.go#L154) and verified against this did: `did:peer:1zQmZdT2jawCX5T1RKUB7ro83gQuiKbuHwuHi8G1NypB8BTr`.\n\nI have zero experience with go, so wondering if you could provide me with the JSON output of the `genesisDoc` method so I can make sure the method produces the same results in AFJ.","username":"TimoGlastra","ts":"2022-01-26T17:11:41.121Z"}
{"msg":"","username":"jje","ts":"2022-01-31T09:51:51.428Z","attachments":[{"type":"file","title":"jje - Mon Jan 31 2022 10:51:36 GMT+0100 (Central European Standard Time).txt","title_link":"/file-upload/K3xRFDMPcjJFLGJHz/jje%20-%20Mon%20Jan%2031%202022%2010:51:36%20GMT+0100%20(Central%20European%20Standard%20Time).txt","url":"/file-upload/K3xRFDMPcjJFLGJHz/jje%20-%20Mon%20Jan%2031%202022%2010:51:36%20GMT+0100%20(Central%20European%20Standard%20Time).txt","remote":false,"fileId":"K3xRFDMPcjJFLGJHz","fileName":"jje - Mon Jan 31 2022 10:51:36 GMT+0100 (Central European Standard Time).txt"}]}
{"msg":"","username":"jje","ts":"2022-01-31T09:51:51.428Z","attachments":[{"type":"file","title":"jje - Mon Jan 31 2022 10:51:36 GMT+0100 (Central European Standard Time).txt","title_link":"/file-upload/K3xRFDMPcjJFLGJHz/jje%20-%20Mon%20Jan%2031%202022%2010:51:36%20GMT+0100%20(Central%20European%20Standard%20Time).txt","url":"/file-upload/K3xRFDMPcjJFLGJHz/jje%20-%20Mon%20Jan%2031%202022%2010:51:36%20GMT+0100%20(Central%20European%20Standard%20Time).txt","remote":false,"fileId":"K3xRFDMPcjJFLGJHz","fileName":"jje - Mon Jan 31 2022 10:51:36 GMT+0100 (Central European Standard Time).txt"}]}
{"msg":"@baha: already replied: the verificationMethod.id is not a KMS ID, it's the verification method ID, you can't treat it like a KMS ID","username":"jje","ts":"2022-01-31T09:54:01.978Z"}
{"msg":"I understand this, but don't understand how to provide the KMS ID instead.","username":"jje","ts":"2022-01-31T09:54:45.641Z"}
{"msg":"Let me rephrase my problem and question:\n- I do have a credential in place.\n- I want to create a VC and sign it with a `BbsBlsSignature2020` signature\n- In order to do so, I need to provide a `controller` and a `verificationMethod` ( I use the `/vcwallet/issue` call)\n- To prepare this process, I need to provide the key material for the DID\n- I have tried several things:\n  - create DID doc with method \"key\" \n  - create DID doc with method \"peer\"\n  - create key pair in KMS (`/vcwallet/create-key-pair`)\n  - import private key (`/kms/import`)\nNone of the methods allowed me to sign the VC for several reasons. The most promising method seemed to be the private key import, but here I didn't succeed yet in providing the key correctly (decryption error)\n\nCan you please advice what is the best method to create/import the DID/key material correctly such that I can sign a VC with BLS (best using HTTP requests). I have seen in the tests that typically you create private keys and import them.\nThanks a lot!","username":"jje","ts":"2022-02-01T17:11:44.538Z"}
{"msg":"Let me rephrase my problem and question:\n- I do have a credential in place.\n- I want to create a VC and sign it with a `BbsBlsSignature2020` signature\n- In order to do so, I need to provide a `controller` and a `verificationMethod` ( I use the `/vcwallet/issue` call)\n- To prepare this process, I need to provide the key material for the DID\n- I have tried several things:\n    - create DID doc with method \"key\" \n    - create DID doc with method \"peer\"\n    - create key pair in KMS (`/vcwallet/create-key-pair`)\n    - import private key (`/kms/import`)\nNone of the methods allowed me to sign the VC for several reasons. The most promising method seemed to be the private key import, but here I didn't succeed yet in providing the key correctly (decryption error)\n\nCan you please advice what is the best method to create/import the DID/key material correctly such that I can sign a VC with BLS (best using HTTP requests). I have seen in the tests that typically you create private keys and import them.\nThanks a lot!","username":"jje","ts":"2022-02-01T17:11:44.538Z"}
{"msg":"Let me rephrase my problem and question:\n- I do have a credential in place.\n- I want to create a VC and sign it with a `BbsBlsSignature2020` signature\n- In order to do so, I need to provide a `controller` and a `verificationMethod` ( I use the `/vcwallet/issue` call)\n- To prepare this process, I need to provide the key material for the DID\n- I have tried several things:\n    -- create DID doc with method \"key\" \n    -- create DID doc with method \"peer\"\n    -- create key pair in KMS (`/vcwallet/create-key-pair`)\n    -- import private key (`/kms/import`)\nNone of the methods allowed me to sign the VC for several reasons. The most promising method seemed to be the private key import, but here I didn't succeed yet in providing the key correctly (decryption error)\n\nCan you please advice what is the best method to create/import the DID/key material correctly such that I can sign a VC with BLS (best using HTTP requests). I have seen in the tests that typically you create private keys and import them.\nThanks a lot!","username":"jje","ts":"2022-02-01T17:11:44.538Z"}
{"msg":"Has joined the channel.","username":"Rizary","ts":"2022-02-05T03:25:46.989Z","type":"uj"}
{"msg":"Has joined the channel.","username":"brian.richter","ts":"2022-02-09T18:19:42.533Z","type":"uj"}
{"msg":"Has joined the channel.","username":"aliyildiz","ts":"2022-03-07T12:07:08.322Z","type":"uj"}
{"msg":"Has joined the channel.","username":"FCretton","ts":"2022-03-18T15:58:57.623Z","type":"uj"}
{"msg":"","username":"rjones","ts":"2022-03-22T19:54:27.096Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-22T19:54:27.108Z","type":"room_changed_description"}
{"msg":"","username":"rjones","ts":"2022-03-22T19:54:27.225Z","type":"room_changed_announcement"}
