{"msg":"danielhardman","username":"rjones","ts":"2019-06-14T20:52:46.315Z","type":"subscription-role-added"}
{"msg":"Pigs versus chickens","username":"rjones","ts":"2019-06-14T20:53:04.210Z","type":"room_changed_topic"}
{"msg":"User <em>User_1</em> added by <em>rjones</em>.","username":"rjones","ts":"2019-06-14T20:56:21.608Z","type":"au"}
{"msg":"User <em>User_2</em> added by <em>rjones</em>.","username":"rjones","ts":"2019-06-14T20:56:21.663Z","type":"au"}
{"msg":"User <em>User_3</em> added by <em>rjones</em>.","username":"rjones","ts":"2019-06-14T20:56:21.691Z","type":"au"}
{"msg":"@danielhardman I added this, which is the sample circleci yml: https://github.com/hyperledger/aries-rfcs/pull/86 ","username":"rjones","ts":"2019-06-14T21:02:25.653Z"}
{"msg":"It will publish results here (once you edit the yml and merge): https://circleci.com/gh/hyperledger/workflows/aries-rfcs","username":"rjones","ts":"2019-06-14T21:03:34.541Z"}
{"msg":"if you don't want to use CircleCI, feel free to close my PR as not needed. I just didn't want to get in your way of moving forward","username":"rjones","ts":"2019-06-14T21:03:58.465Z"}
{"msg":"I don't have a strong opinion about which CI to use, except that I want it to be dead simple. The \"build\" step is probably going to be a no-op; I just want some kind of test mechanism that I can use to enforce quality of the docs. Is CircleCI one you like and recommend to other HL projects? I'm happy to use it if HL infrastructure will automatically service the project for us...","username":"danielhardman","ts":"2019-06-14T21:06:04.357Z"}
{"msg":"It's free for open source projects, and it's kind of the market leader, so yes.","username":"rjones","ts":"2019-06-14T21:07:19.679Z"}
{"msg":"and it's under your control, as a project maintainer","username":"rjones","ts":"2019-06-14T21:07:37.915Z"}
{"msg":"Okay, great. CircleCI it is.\n\nI would like another couple Aries maintainers to weigh in before I accept the PR, just so I know they're cool with where I'm headed. I don't want them to be unhappy with what I've done.","username":"danielhardman","ts":"2019-06-14T21:07:39.589Z"}
{"msg":"sure. The other thing is - that's the sample config - you'll need to put something interesting in there","username":"rjones","ts":"2019-06-14T21:08:03.369Z"}
{"msg":"Yup. I'm reading CircleCI docs now.","username":"danielhardman","ts":"2019-06-14T21:08:18.072Z"}
{"msg":"And I selected the \"python\" project type, which is probably the wrong one.","username":"rjones","ts":"2019-06-14T21:08:42.268Z"}
{"msg":"it takes like three clicks for me to enable a new repo, so just tell me when you want a new one to build and I'll go on my PPC adventure","username":"rjones","ts":"2019-06-14T21:09:27.620Z"}
{"msg":"Okay, excellent.","username":"danielhardman","ts":"2019-06-14T21:09:38.354Z"}
{"msg":"If you need access to features that require money - there is money to spend, just let me know.","username":"rjones","ts":"2019-06-14T21:09:58.246Z"}
{"msg":"Okay. But probably not needed. This is very simple stuff.","username":"danielhardman","ts":"2019-06-14T21:10:20.826Z"}
{"msg":":thumbsup: on this channel.","username":"TelegramSam","ts":"2019-06-14T21:18:09.904Z"}
{"msg":"TelegramSam","username":"rjones","ts":"2019-06-14T21:18:34.459Z","type":"subscription-role-added"}
{"msg":"swcurran","username":"rjones","ts":"2019-06-14T21:18:37.879Z","type":"subscription-role-added"}
{"msg":"I'm in support of using a CI pipeline.","username":"kdenhartog","ts":"2019-06-14T22:26:32.443Z"}
{"msg":"Cool. If/when you went circle ci enabled elsewhere just say so","username":"rjones","ts":"2019-06-14T22:35:12.455Z"}
{"msg":"Okay, please enable CircleCI on the repo. I have it passing integration with one unit test.","username":"danielhardman","ts":"2019-06-14T23:01:44.829Z"}
{"msg":"@rjones ","username":"danielhardman","ts":"2019-06-14T23:02:09.915Z"}
{"msg":"Thanks. It's working!","username":"danielhardman","ts":"2019-06-14T23:03:58.323Z"}
{"msg":"@here There is now an active CI for the aries-rfcs repo. It succeeds if index.md is up-to-date, and fails if it's outdated. We can add more stuff to it later.","username":"danielhardman","ts":"2019-06-14T23:04:54.369Z"}
{"msg":"@here Can someone review this trivial tweak to instructions in the README? It makes it easier to figure out what's the next RFC num. https://github.com/hyperledger/aries-rfcs/pull/89","username":"danielhardman","ts":"2019-06-15T04:41:52.416Z"}
{"msg":"Has joined the channel.","username":"callahan","ts":"2019-06-15T09:16:21.289Z","type":"uj"}
{"msg":"@danielhardman I meant to ask how many, if any, mandatory reviews you wanted for that repo. I picked 1","username":"rjones","ts":"2019-06-15T13:22:53.168Z"}
{"msg":"Has joined the channel.","username":"george.aristy","ts":"2019-06-16T13:43:48.100Z","type":"uj"}
{"msg":"@kdenhartog ^^","username":"danielhardman","ts":"2019-06-17T15:59:22.342Z"}
{"msg":"Yeah I can merge it now","username":"kdenhartog","ts":"2019-06-17T16:00:21.468Z"}
{"msg":"@here: @rjones asks an important question. For the aries-rfcs repo, do we want to require a formal review of each PR, separate from the implicit review of whichever maintainer clicks the \"Merge\" button? We deliberately tried to streamline the process on that repo such that getting something merged had minimal impedance. The only things we are checking for with RFC proposals is minimal conformance to document standards, reasonable terminology, and hyperlinks. We can accomplish this with the 1 mandatory reviewer that Ry picked, or with zero, or with >1. What is our preference?\n\nAn argument for keeping Ry's choice of 1 is that some PRs aren't simple RFC proposals, but rather suggestions about meaningful updates to RFCs. For those, I would say reviewers should be >= 1, and we should possibly have a more ambitious process...","username":"danielhardman","ts":"2019-06-17T16:04:23.849Z"}
{"msg":"@here: @rjones asks an important question. For the aries-rfcs repo, do we want to require a formal review of each PR, separate from the implicit review of whichever maintainer clicks the \"Merge\" button? We deliberately tried to streamline the process on that repo such that getting something merged had minimal impedance. The only things we are checking for with initial RFC proposals (most common PR type thus far) is minimal conformance to document standards, reasonable terminology, and hyperlinks. We can accomplish this with the 1 mandatory reviewer that Ry picked, or with zero, or with >1. What is our preference?\n\nAn argument for keeping Ry's choice of 1 is that some PRs aren't simple RFC proposals, but rather suggestions about meaningful updates to RFCs. For those, I would say reviewers should be >= 1, and we should possibly have a more ambitious process...","username":"danielhardman","ts":"2019-06-17T16:04:23.849Z"}
{"msg":"I think 1 is fine because the maintainer who is merging can also be the one approving the PR. Something I've tried to do when merging PRs that aren't moving status is give a short summary as a backlog of why I'm accepting the PR. That way there's a record of my thinking as well as who merged it. I like the idea of using a DCO to keep the quality up while keeping the additional effort minimal on both maintainers and committers.","username":"kdenhartog","ts":"2019-06-17T16:14:55.476Z"}
{"msg":"I think the guidance be that the reviewer should be the \"facilitator\" of the document, if known. If it is the facilitator submitting the change, it would just be one of the maintainers.","username":"swcurran","ts":"2019-06-17T16:22:45.676Z"}
{"msg":"Separate question thread: folder naming conventions for decorators and protocols","username":"danielhardman","ts":"2019-06-17T16:26:23.708Z"}
{"msg":"Thread: folder naming conventions for decorators and protocols","username":"danielhardman","ts":"2019-06-17T16:26:23.708Z"}
{"msg":"I noticed when I was doing some cleanup last Friday that we have some RFCs that have the word \"protocol\" in their folder name, and others that are about protocols that lack that word. Similarly, we have some RFCs that have the word \"decorator\" in their folder name, and others that don't.\n\nFor the sake of consistency and clarity, how do you feel about stipulating that protocol RFCs have \"protocol\" in their names, and decorator RFCs have \"decorator\" in their names?\n\nI'd like to decide this early, since we are creating permalinks as the RFCs get merged...","username":"danielhardman","ts":"2019-06-17T16:28:19.721Z"}
{"msg":"Thread: naming of other aries repos","username":"danielhardman","ts":"2019-06-17T16:31:21.947Z"}
{"msg":"I'm warming up to the idea of calling the various top-level agent frameworks \"aries-xyz\", where xyz is a programming language. This would make the project-formerly-known-as-indycat into \"aries-python\".\n\nWe would keep names like \"aries-sdk\", \"aries-rfcs\", etc. And we would use the top-level aries repo as a documentation/orientation repo for people landing in the aries ecosystem.\n\nAre there opposing opinions to this strategy, or was I the only holdout?","username":"danielhardman","ts":"2019-06-17T16:33:49.896Z"}
{"msg":"I think that sounds right.","username":"swcurran","ts":"2019-06-17T16:43:03.981Z"}
{"msg":"BTW, I suggest that protocol versions NOT appear in a protocol RFC's folder name/permalink. Rather, I suggest that evolutions of the protocol version become subdocuments in that protocol. When a protocol first gets defined it's maybe 0.9, and the folder name might be \"foo-protocol\". The main README.md says that the current version is 0.9. Then, when version 1.0 is formalized, the main README.md is updated to describe 1.0, and a new doc called \"version-0.9.md\" is created and hyperlinked, so people needing to find the 0.9 docs can find them. This has the effect that the latest version of the protocol is the most natural permalink, but permalinks to older versions can be created if need be. Thoughts?","username":"danielhardman","ts":"2019-06-17T16:49:47.555Z"}
{"msg":"@TelegramSam , could you review this PR? https://github.com/hyperledger/aries-rfcs/pull/90","username":"danielhardman","ts":"2019-06-17T17:57:34.502Z"}
{"msg":"@danielhardman approved. Waiting for circleci approval.","username":"TelegramSam","ts":"2019-06-17T18:08:30.460Z"}
{"msg":"I like aries-<thing>-<language> when a language is involved.","username":"TelegramSam","ts":"2019-06-17T18:09:56.616Z"}
{"msg":"the difference between aries-python and aries-agent-python depends on what aries should be seen as to the initial user.","username":"TelegramSam","ts":"2019-06-17T18:11:20.405Z"}
{"msg":"so, @dbluhm and I wrote a thing: https://github.com/TelegramSam/aries-staticagent-python I'm not sure if the proposed repo name is the right answer. Thoughts?","username":"TelegramSam","ts":"2019-06-17T18:49:29.805Z"}
{"msg":"Has joined the channel.","username":"dbluhm","ts":"2019-06-17T18:49:29.848Z","type":"uj"}
{"msg":"(Of course, we plan to move this to an Aries Repo in Hyperledger)","username":"TelegramSam","ts":"2019-06-17T18:50:01.731Z"}
{"msg":"This code should end up as a python package, as well as exist for examples and documentation.","username":"TelegramSam","ts":"2019-06-17T18:56:58.684Z"}
{"msg":"Does that mean each shippable artifact needs it's own repo? Thoughts?","username":"TelegramSam","ts":"2019-06-17T18:57:46.880Z"}
{"msg":"I've added a migration notice to the main aries repos. This will help guide people while we work out the details: https://github.com/hyperledger/aries","username":"TelegramSam","ts":"2019-06-17T19:57:38.600Z"}
{"msg":"Has joined the channel.","username":"esplinr","ts":"2019-06-17T22:25:10.162Z","type":"uj"}
{"msg":"I share Sam's concern that aries-<language> might be too limiting, as we might have eventually have aries-agent-python and aries-wallet-python","username":"esplinr","ts":"2019-06-18T00:01:53.857Z"}
{"msg":"But I see some advantage to having a single place where Pythonistas might go to find all things Aries. Maybe we prefer to have them in the same repo.","username":"esplinr","ts":"2019-06-18T00:02:19.668Z"}
{"msg":"I don't feel strongly about it, but that's the arguments that I see.","username":"esplinr","ts":"2019-06-18T00:02:39.029Z"}
{"msg":"I don't feel strongly about it, but those are the arguments that I see.","username":"esplinr","ts":"2019-06-18T00:02:39.029Z"}
{"msg":"Okay, sounds like @TelegramSam and @esplinr are aligned and thinking differently from @swcurran . I was coming around to Stephen's point of view but could be happy with whatever consensus emerges. So I'll leave it to the 3 of you to hammer out a compromise.","username":"danielhardman","ts":"2019-06-18T00:03:24.723Z"}
{"msg":"How does Circle CI relate to the GitLab CI  that Indy has been doing?","username":"esplinr","ts":"2019-06-18T00:03:54.140Z"}
{"msg":"I just noticed that one of my messages didn't work because I used angle braces. 🤨","username":"TelegramSam","ts":"2019-06-18T00:04:50.309Z"}
{"msg":"This is too funny. I started with aries-python-agent, Sam convinced me that aries-python was right for what we have, now he is on the other side :-).  Maybe I misunderstood him.\n\nI think this thing is as close to \"aries\" as there is going to be, so I would leave off \"thing\" for this element.  I would be OK otherwise.","username":"swcurran","ts":"2019-06-18T00:05:34.725Z"}
{"msg":"I agree with leaving thing off for the agent.","username":"TelegramSam","ts":"2019-06-18T00:06:22.528Z"}
{"msg":"Based on Stephen's response, I formally declare that I don't care how it gets named. We can always change later.","username":"esplinr","ts":"2019-06-18T00:06:24.510Z"}
{"msg":"Lol","username":"TelegramSam","ts":"2019-06-18T00:06:30.994Z"}
{"msg":"Okay, it's down to Stephen and Sam to form a grand compromise. :-)","username":"danielhardman","ts":"2019-06-18T00:06:48.431Z"}
{"msg":"Also, did you see my aries-staticagent-python proposal?","username":"TelegramSam","ts":"2019-06-18T00:07:43.308Z"}
{"msg":"I did...it's my homework.","username":"swcurran","ts":"2019-06-18T00:08:08.180Z"}
{"msg":"Naming matters there too.","username":"TelegramSam","ts":"2019-06-18T00:08:24.839Z"}
{"msg":"I saw the thread in #aries ","username":"esplinr","ts":"2019-06-18T00:16:20.357Z"}
{"msg":"@here: I have a new PR that fixes tons of broken or suboptimal hyperlinks in our RFCs, and that creates a unit test that checks for problems. Please review and merge: https://github.com/hyperledger/aries-rfcs/pull/91","username":"danielhardman","ts":"2019-06-18T03:48:35.570Z"}
{"msg":"I just did a quick review and approval. Given it's a bit larger of a PR than I was expecting and I only quickly reviewed it I'm going to let it sit for a bit until I can get some time to do a more in depth scan tomorrow or someone else gets a chance to review it as well. Does that work for you @danielhardman ","username":"kdenhartog","ts":"2019-06-18T03:57:03.894Z"}
{"msg":"Mainly just want to test the code and make sure it's running properly on my machine","username":"kdenhartog","ts":"2019-06-18T03:57:27.512Z"}
{"msg":"All the editorial changes looked fine and only updated links to properly follow MD format. ","username":"kdenhartog","ts":"2019-06-18T03:57:53.594Z"}
{"msg":"Also, I was going to merge PR #90 just now but it's still hanging from the CircleCI for me.","username":"kdenhartog","ts":"2019-06-18T03:59:55.865Z"}
{"msg":"Do we need to add any workers or anything to the CircleCI for these to actually run? I assumed these would be light and fairly quick to run even on a small machine.","username":"kdenhartog","ts":"2019-06-18T04:00:56.258Z"}
{"msg":"Awesome stuff @danielhardman - that's the lazy (and best) way to check that. Very cool.  Ran the script and did a quick scan and it looks good.","username":"swcurran","ts":"2019-06-18T04:40:02.188Z"}
{"msg":"Cool I'll go ahead and merge it then. Thanks for checking it.","username":"kdenhartog","ts":"2019-06-18T04:52:56.448Z"}
{"msg":"I'm going to reverse my opinion from yesterday and say that I don't think we want to require a review before a merge. Here's why:\n\nWe have 2 different kinds of PRs. There are substantive PRs, where the content is being updated in a way that matters to the community, and then there are \"tweak\" PRs where we're fixing a missing comma or something equally trivial. The enforcement doesn't distinguish between them, which means that even trivial stuff has the impedance of getting a review. I think that's going to make it less likely that we'll fix minor issues. It'll just be too much bother, so we'll let those issues just fester--sort of like a \"broken windows\" phenomenon for the repo (https://en.wikipedia.org/wiki/Broken_windows_theory).\n\nYesterday I raised trivial PR 90, and Sam obligingly reviewed and approved it. However, today I committed a minor improvement, and found that I had invalidated Sam's approval. So it now needs to be reviewed all over again. This despite the fact that a lot of the things we check for are now enforced by unit test--so we already have an automated review of sorts, on top of anything humans might do.\n\nI think I'd rather leave the management of \"tweak\" PRs up to maintainer judgment plus automation, with the option that any of us could fix a hyperlink or comma whenever we see it, with no approval other than CI. This is trusting us to use good judgment and not unilaterally commit something that deserves community discussion. I think that's a good risk to take.","username":"danielhardman","ts":"2019-06-18T16:55:00.752Z"}
{"msg":"@danielhardman tell me to make the change and I will.","username":"rjones","ts":"2019-06-18T16:55:39.587Z"}
{"msg":"I can also uncheck the \"dismiss approvals on update\" option","username":"rjones","ts":"2019-06-18T16:55:56.693Z"}
{"msg":"Let's wait and see what the other maintainers think; i don't want to change the policy just on my own say-so.","username":"danielhardman","ts":"2019-06-18T17:01:30.663Z"}
{"msg":"BTW, @TelegramSam or @kdenhartog , would you mind re-reviewing PR #90? Since it needed a new review, I added a more substantive change -- a couple paragraphs to the best practices RFC explaining what logic we're enforcing on hyperlinks. https://en.wikipedia.org/wiki/Broken_windows_theory","username":"danielhardman","ts":"2019-06-18T17:03:06.114Z"}
{"msg":"BTW, @TelegramSam or @kdenhartog , would you mind re-reviewing PR #90? Since it needed a new review, I added a more substantive change -- a couple paragraphs to the best practices RFC explaining what logic we're enforcing on hyperlinks. https://github.com/hyperledger/aries-rfcs/pull/90","username":"danielhardman","ts":"2019-06-18T17:03:06.114Z"}
{"msg":"I agree with what @danielhardman says.  Maintainers will do the right thing (right?), and people can always request reviews to indicate that they are needed.","username":"swcurran","ts":"2019-06-18T17:09:00.352Z"}
{"msg":"approved and merged.","username":"TelegramSam","ts":"2019-06-18T20:44:10.375Z"}
{"msg":"PR for migrating the 0022-cross-domain-messaging HIPE (with updates) submitted. Changes made to reflect new terminology, inbound routing concepts and adding all the misisng links in the doc.","username":"swcurran","ts":"2019-06-18T21:37:54.373Z"}
{"msg":"Okay, @rjones , we've let it sit long enough. No objections from other maintainers. Please change the review requirement to 0 instead of 1.","username":"danielhardman","ts":"2019-06-19T00:13:28.622Z"}
{"msg":"BTW, @rjones , the CI builds seem to work like a charm for my pull requests, but everybody else's don't trigger builds; the PR just waits for the build to happen, seemingly forever. Is this because I actually turned on cicircle on my fork, but nobody else did?","username":"danielhardman","ts":"2019-06-19T00:14:28.242Z"}
{"msg":"not sure. let me look","username":"rjones","ts":"2019-06-19T00:59:54.348Z"}
{"msg":"I uninstalled circle CI on github for that repo, then re-enabled it.","username":"rjones","ts":"2019-06-19T01:03:18.098Z"}
{"msg":"Just getting back to this now. The number won't make much of a difference for me. I plan to still review them and state why I'm merging or why I intend to hold off and wait for another reviewer. If it makes it easier for others that's fine for me.","username":"kdenhartog","ts":"2019-06-19T07:05:31.954Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/95 (BasicMessage RFC)","username":"TelegramSam","ts":"2019-06-19T14:47:03.907Z"}
{"msg":"I reviewed. Needs one change: folder name should have the RFC number in it and then /index.md updated again. Then I'll merge.","username":"danielhardman","ts":"2019-06-19T15:44:35.291Z"}
{"msg":"argh. forgot that.","username":"TelegramSam","ts":"2019-06-19T15:54:07.818Z"}
{"msg":"fixed.","username":"TelegramSam","ts":"2019-06-19T15:55:59.098Z"}
{"msg":"Now you need to update /index.md. :-) Sorry to be picky; I'm just trying to preserve the high bar that we've set now that we've turned on unit tests and such.","username":"danielhardman","ts":"2019-06-19T17:08:25.060Z"}
{"msg":"I'll catch up. fixed. :)","username":"TelegramSam","ts":"2019-06-19T17:10:46.450Z"}
{"msg":"Merged.","username":"danielhardman","ts":"2019-06-19T17:12:18.207Z"}
{"msg":"I think we ought to update the topic on #indy-agent to point to #aries. A banner like the one on #indy-maintainers may be helpful as well.","username":"dbluhm","ts":"2019-06-19T18:02:15.018Z"}
{"msg":"I think we ought to update the topic on #indy-agent to point to #aries. A banner like the one on #indy-maintainers point there may be helpful as well.","username":"dbluhm","ts":"2019-06-19T18:02:15.018Z"}
{"msg":"I think we ought to update the topic on #indy-agent to point to #aries. A banner like the one on #indy-maintainers pointing there may be helpful as well.","username":"dbluhm","ts":"2019-06-19T18:02:15.018Z"}
{"msg":"Has joined the channel.","username":"mbanerjee","ts":"2019-06-19T19:13:41.794Z","type":"uj"}
{"msg":"FYI, I updated the /README.md in the aries repo with a bit more info. In particular, I added a section about the relationship between Aries and Indy, because many people are asking about it. You can use this hyperlink to refer people to it: https://github.com/hyperledger/aries/blob/master/README.md#relationship-to-hyperledger-indy\n\nI also added all Aries logos to the aries repo, in the /collateral folder","username":"danielhardman","ts":"2019-06-19T19:38:49.616Z"}
{"msg":"Has joined the channel.","username":"jakubkoci","ts":"2019-06-19T20:00:14.384Z","type":"uj"}
{"msg":"so, `aries-cloudagent-python` and `aries-staticagent-python`?","username":"TelegramSam","ts":"2019-06-19T20:49:38.527Z"}
{"msg":"@swcurran @danielhardman ^","username":"TelegramSam","ts":"2019-06-19T21:26:23.338Z"}
{"msg":"Just about to type the same thing.  Yes.  PyPi package will by `aries_cloudagent`","username":"swcurran","ts":"2019-06-19T21:27:17.819Z"}
{"msg":"Just about to type the same thing.  Yes.  PyPi package will be `aries_cloudagent`","username":"swcurran","ts":"2019-06-19T21:27:17.819Z"}
{"msg":"Sounds good","username":"danielhardman","ts":"2019-06-20T01:55:14.243Z"}
{"msg":"Cross-posting this from #indy-maintainers, FYI.\n\nAll: I have updated the indy-hipe repo with an /index.md that shows all HIPEs by status. It's patterned off the aries-rfcs /index.md and uses a very slightly modified version of the generate_index.py script. See https://github.com/hyperledger/indy-hipe/blob/master/index.md. I have also updated the status of many of the HIPEs so they are clean/correct. There is still some cleanup to do, but it's much less daunting now. And I have run the check_links.py script from Aries and fixed all the issues it found. The repo now passes continuous integration for me exactly the way aries-rfcs does.","username":"danielhardman","ts":"2019-06-20T04:38:57.037Z"}
{"msg":"aries-staticagent-python has been migrated to hyperledger: https://github.com/hyperledger/aries-staticagent-python","username":"TelegramSam","ts":"2019-06-20T17:05:19.038Z"}
{"msg":"via force-push?","username":"rjones","ts":"2019-06-20T17:53:53.712Z"}
{"msg":"I don't think so.","username":"TelegramSam","ts":"2019-06-20T18:08:31.318Z"}
{"msg":"I added a new remote, then did a git pull --allow-unrelated-histories, which created a merge commit between the repo first commit and the existing ones.","username":"TelegramSam","ts":"2019-06-20T18:10:01.599Z"}
{"msg":"@rjones ^","username":"TelegramSam","ts":"2019-06-20T18:10:27.148Z"}
{"msg":"then just a push, and it took it.","username":"TelegramSam","ts":"2019-06-20T18:12:23.440Z"}
{"msg":"Cool","username":"rjones","ts":"2019-06-20T19:02:47.613Z"}
{"msg":"@rjones to be honest, I lost the link to the guide that was shared on how to do this. Found this way, and it seemed straightforward.","username":"TelegramSam","ts":"2019-06-20T19:42:21.476Z"}
{"msg":"That’s exactly how I did it","username":"rjones","ts":"2019-06-20T20:18:42.272Z"}
{"msg":"I'm glad that I was accidentally right.","username":"TelegramSam","ts":"2019-06-20T20:39:14.150Z"}
{"msg":"@rjones @TelegramSam - we're going to be shortly essentially transferring a bcgov repo (currently called bcgov/indycat-agent, to be renamed and populated from the bcgov/indy-catalyst repo, agent folder). I'm thinking that we should be transferring that repo to Hyperledger vs. copying the code/history into an existing repo.  E.g. that there should be an identifiable transaction that moves the repo from BC Gov to Hyperledger.  Thoughts on that?","username":"swcurran","ts":"2019-06-20T21:05:32.335Z"}
{"msg":"identifiable transaction?","username":"TelegramSam","ts":"2019-06-20T21:06:02.441Z"}
{"msg":"Technically it doesn't matter, but it seems to be me that it should be done that way so we can point to it and say - \"hey, BC Gov contributed that\".","username":"swcurran","ts":"2019-06-20T21:06:22.159Z"}
{"msg":"ah, this one is only part of the source repo, not the whole repo.","username":"TelegramSam","ts":"2019-06-20T21:06:31.006Z"}
{"msg":"identifiable transaction - the transfer of the repo","username":"swcurran","ts":"2019-06-20T21:06:42.599Z"}
{"msg":"That is harder to do and maintain history.","username":"TelegramSam","ts":"2019-06-20T21:06:45.134Z"}
{"msg":"Yes - the whole repo.","username":"swcurran","ts":"2019-06-20T21:06:51.105Z"}
{"msg":"No - you just go to admin and say \"Transfer this repo to this other entity\".  At least I think that's what you do.","username":"swcurran","ts":"2019-06-20T21:07:18.299Z"}
{"msg":"oh, so this is indy cat as a whole?","username":"TelegramSam","ts":"2019-06-20T21:07:31.813Z"}
{"msg":"there is another way to transfer history if needed. I just did it on the staticagent.","username":"TelegramSam","ts":"2019-06-20T21:08:01.636Z"}
{"msg":"No - we are doing - indy-catalyst/agent to new repo indycat-agent in bcgov, and then transfer that repo intact to Hyperledger.","username":"swcurran","ts":"2019-06-20T21:08:17.002Z"}
{"msg":"At least i think that is the appropriate logistics to be done.","username":"swcurran","ts":"2019-06-20T21:08:40.597Z"}
{"msg":"ah.","username":"TelegramSam","ts":"2019-06-20T21:08:45.058Z"}
{"msg":"I didn't transfer the repo, but I suppose that could be done instead of the merge trick I did for the other repo.","username":"TelegramSam","ts":"2019-06-20T21:09:22.269Z"}
{"msg":"Yes - that's what I realized. But for this, I don't think that's the way to go.","username":"swcurran","ts":"2019-06-20T21:11:57.369Z"}
{"msg":"@swcurran the way to send a whole repo is to transfer it to me, ryjones, on github. another alternative is to make me an owner of the donating org, and I'll do the transfer and remove myself.","username":"rjones","ts":"2019-06-20T22:03:51.474Z"}
{"msg":"Hmm...not thinking the BC Gov is going to want to give you control over the organization, :laughing: .  We'll look to see what's possible. We want to transfer it directly from BC Gov to Hyperledger if at all possible.  We've got a bit of time (but not much) to figure out if that's possible and how. And of course, we can always fall back to the push the commits method.","username":"swcurran","ts":"2019-06-20T22:53:32.419Z"}
{"msg":"this is literally how all of the repos landed in the hyperledger org at the start. Fabric, Sawtooth, etc.","username":"rjones","ts":"2019-06-20T23:51:43.884Z"}
{"msg":"the issue with repo transfer from org to org is the person that does it needs to be an owner of both orgs.","username":"rjones","ts":"2019-06-20T23:53:03.280Z"}
{"msg":"That is so bizarre.  OK - thanks.  I'll check around here.","username":"swcurran","ts":"2019-06-21T00:09:33.558Z"}
{"msg":"Has joined the channel.","username":"bbehlendorf","ts":"2019-06-21T00:14:09.935Z","type":"uj"}
{"msg":"If it's the \"optics: of having Ry be a part of your GH org or assigning the repo to Ry that is challenging, since it appears to suggest that BCGov is giving it to Ry and not to Hyperledger, what if instead we set up a third GH org, call it \"hyperledger-inbound\", where both Ry and you guys can be owners, but it's considered \"owned\" and managed by the LF.  Then Ry transfers it from \"hyperledger-inbound\" to the right place in \"hyperledger\".  Does this make sense, solve anything?","username":"bbehlendorf","ts":"2019-06-21T00:14:14.566Z"}
{"msg":"I worked with @rjones  to transfer the former Sovrin Foundation repos that are now HL Indy repos. What I remember is that I simply went into the repo settings and changed the owner. I didn't make Ry an owner inside SF. HL's github account then got a notification that a repo transfer was proposed, and Ry approved it as an HL owner. It was super easy and did not involve all of the complexity we're talking about above.","username":"danielhardman","ts":"2019-06-21T01:04:50.095Z"}
{"msg":"I'm hoping that is how it will work - that's what the documentation appears to say. But it is ambiguous, and Ry has a lot more experience than I.  We'll try to do it that way, and if it doesn't work, we'll go to plan B or C. ","username":"swcurran","ts":"2019-06-21T04:04:24.917Z"}
{"msg":"after BC do we bring the gov? :sunglasses: :drum: ","username":"kdenhartog","ts":"2019-06-21T04:45:12.517Z"}
{"msg":"I created a test org, hyperledger-transfer. If you want to see how it works, feel free to make either a personal repo or a test repo containing only the Apache 2.0 license file and let's practice repo transfers.","username":"rjones","ts":"2019-06-21T07:55:45.302Z"}
{"msg":"I created a test org, hyperledger-transfer. If you want to see how it works, feel free to make either a personal repo or a test repo containing only the Apache 2.0 license file in your org and let's practice repo transfers.","username":"rjones","ts":"2019-06-21T07:55:45.302Z"}
{"msg":"Transfer of the repo has nice benefits - issues, followers, stars, etc come with. Also, anyone with the repo cloned or forked will end up in the right place due to GitHub redirects.","username":"rjones","ts":"2019-06-21T07:56:40.033Z"}
{"msg":"The case I can think of where I was made owner of an outside org was for composer","username":"rjones","ts":"2019-06-21T10:23:55.109Z"}
{"msg":"@rjones I noticed that aries-staticagent-python has \"generated from rjones/ht\" beneath the repo name. Not that I don't like having your name in the repo lol but can we get rid of that?","username":"dbluhm","ts":"2019-06-21T16:41:02.277Z"}
{"msg":"@rjones I noticed that aries-staticagent-python has \"generated from ryjones/ht\" beneath the repo name. Not that I don't like having your name in the repo lol but can we get rid of that?","username":"dbluhm","ts":"2019-06-21T16:41:02.277Z"}
{"msg":"I don't know. I used that as a template to make things easier and I'm never doing that again","username":"rjones","ts":"2019-06-21T18:39:46.119Z"}
{"msg":"@dbluhm easier said than done","username":"rjones","ts":"2019-06-21T18:39:46.119Z"}
{"msg":"@dbluhm easier done than said","username":"rjones","ts":"2019-06-21T18:39:46.119Z"}
{"msg":"(yes)","username":"rjones","ts":"2019-06-21T18:41:59.575Z"}
{"msg":"Has joined the channel.","username":"jadhavajay","ts":"2019-06-24T15:08:46.167Z","type":"uj"}
{"msg":"@rjones We appear to be caught in one of those funny limbo states where CircleCI is not building the aries-rfc repo. See https://github.com/hyperledger/aries-rfcs/pull/102.","username":"danielhardman","ts":"2019-06-27T23:20:49.046Z"}
{"msg":"Any thoughts?","username":"danielhardman","ts":"2019-06-27T23:20:54.405Z"}
{"msg":"As a non-owner, I am stuck. Can't merge, can't request that the CI be re-run, can't cancel.","username":"danielhardman","ts":"2019-06-27T23:21:23.883Z"}
{"msg":"","username":"danielhardman","ts":"2019-06-27T23:22:03.671Z","attachments":[{"type":"file","title":"Screen Shot 2019-06-27 at 5.21.52 PM.png","title_link":"/file-upload/aSFCPArRTTCsiQGWq/Screen%20Shot%202019-06-27%20at%205.21.52%20PM.png","image_url":"/file-upload/aSFCPArRTTCsiQGWq/Screen%20Shot%202019-06-27%20at%205.21.52%20PM.png","image_type":"image/png","image_size":144438,"url":"/file-upload/aSFCPArRTTCsiQGWq/Screen%20Shot%202019-06-27%20at%205.21.52%20PM.png","remote":false,"fileId":"aSFCPArRTTCsiQGWq","fileName":"Screen Shot 2019-06-27 at 5.21.52 PM.png"}]}
{"msg":"And when I go into the CircleCI dashboard, I don't see any build in progress, either.","username":"danielhardman","ts":"2019-06-27T23:22:26.588Z"}
{"msg":"Has joined the channel.","username":"arjanvaneersel","ts":"2019-06-28T10:58:49.032Z","type":"uj"}
{"msg":"Pinging Ry again about the above problem; note that I've now raised another PR that is also stalled. @rjones ^^","username":"danielhardman","ts":"2019-06-28T15:08:57.037Z"}
{"msg":"Did you fix this, Ry? It suddenly started working...","username":"danielhardman","ts":"2019-06-28T15:42:34.313Z"}
{"msg":"@all, could someone merge this? https://github.com/hyperledger/aries-rfcs/pull/103","username":"danielhardman","ts":"2019-06-28T15:42:59.094Z"}
{"msg":"I didn’t do anything to either","username":"rjones","ts":"2019-06-28T15:48:46.595Z"}
{"msg":"I got home from the airport yesterday, passed out, and just woke up.","username":"rjones","ts":"2019-06-28T15:49:39.888Z"}
{"msg":"@danielhardman Do you see build status here? https://circleci.com/gh/hyperledger/aries-rfcs","username":"rjones","ts":"2019-06-28T17:02:02.645Z"}
{"msg":"I see you follow the project, but I can't figure out how to add you to the project so you can re-trigger builds","username":"rjones","ts":"2019-06-28T17:04:24.524Z"}
{"msg":"Yes, I can see the build status, but I don't see a way to re-trigger a build. Maybe I'm missing something that's there.\n\nAnyway, it seems to be the case that when a PR is stalled like this, another commit to the PR may re-trigger the build and allow me to get unstuck. So I've got a workaround.","username":"danielhardman","ts":"2019-06-28T17:23:07.462Z"}
{"msg":"In the upper right corner here, do you see the rerun button? https://circleci.com/gh/hyperledger/aries-rfcs/21","username":"rjones","ts":"2019-06-28T17:30:28.100Z"}
{"msg":"","username":"rjones","ts":"2019-06-28T17:30:48.474Z","attachments":[{"type":"file","title":"Screen Shot 2019-06-28 at 10.30.39 AM.png","title_link":"/file-upload/Lf6iNYGPPcrrMiyxM/Screen%20Shot%202019-06-28%20at%2010.30.39%20AM.png","image_url":"/file-upload/Lf6iNYGPPcrrMiyxM/Screen%20Shot%202019-06-28%20at%2010.30.39%20AM.png","image_type":"image/png","image_size":29780,"url":"/file-upload/Lf6iNYGPPcrrMiyxM/Screen%20Shot%202019-06-28%20at%2010.30.39%20AM.png","remote":false,"fileId":"Lf6iNYGPPcrrMiyxM","fileName":"Screen Shot 2019-06-28 at 10.30.39 AM.png"}]}
{"msg":"@rjones Yes, I do see that. However, this won't help if the job isn't running in the first place; it's only useful if the job has been triggered at least once. Also, it reruns the workflow with the snapshot of the code it first ran against, not with latest, so it wouldn't help to trigger a new build with a new version of the code, only a new build against the code as it existed before. With the stall I was experiencing, no build had ever been triggered in response to my PR being raised, so it would not have helped.","username":"danielhardman","ts":"2019-06-28T17:51:21.730Z"}
{"msg":"ah, I misunderstood, sorry.","username":"rjones","ts":"2019-06-28T17:51:49.887Z"}
{"msg":"Has joined the channel.","username":"troyronda","ts":"2019-06-28T17:59:44.317Z","type":"uj"}
{"msg":"Hey folks - As you may have seen on #aries-sdk (or DIF channels), we've been working on native Golang DIDComm/Agent framework libraries. We have, so far, split up the functionality by concept (e.g., DIDComm \"building blocks\" vs Agent Framework [vs Hubs]). See this post: https://chat.hyperledger.org/channel/aries-sdk?msg=r45GyBg4DqnC6AJ6C. I also feel that it is better to build common functionality within a Foundation (be it Hyperledger or DIF). So I'd like to better understand (and/or kick up a conversation):\n\n(1) How others view splitting up the library architecture;\n(2) Which foundation should host each part;\n\nand\n(3) I'd like to propose that we create Go framework repos [in the right pl\u0005ace] and start landing/maintaining code :). As mentioned previously, we are working on a native Go implementation of DIDComm/Frameworks (rather than wrapper of libindy/vcx).\n@kdenhartog @danielhardman @swcurran @TelegramSam","username":"troyronda","ts":"2019-06-28T18:49:23.532Z"}
{"msg":"@jljordan_bcgov ^^^","username":"swcurran","ts":"2019-06-28T18:50:43.823Z"}
{"msg":"Has joined the channel.","username":"jljordan_bcgov","ts":"2019-06-28T18:50:43.864Z","type":"uj"}
{"msg":"@tplooker and @tomislav curious what your thoughts are on this as well because you've worked on them as well. ^ ","username":"kdenhartog","ts":"2019-06-28T18:50:53.591Z"}
{"msg":"Has joined the channel.","username":"tplooker","ts":"2019-06-28T18:50:54.682Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tomislav","ts":"2019-06-28T18:50:54.685Z","type":"uj"}
{"msg":"p.s., our implementation work is currently here: https://github.com/trustbloc","username":"troyronda","ts":"2019-06-28T18:50:56.921Z"}
{"msg":"FWIW I just got done speaking with @troyronda about this for a bit and it didn't seem very clearcut. If we aren't able to figure it out in this discussion here, I suggest we discuss it on an upcoming Aries WG call. I'll reach out to Daniel Buchner as well to see if he would join (since MSFT is now a HL member)/has opinions on it.","username":"kdenhartog","ts":"2019-06-28T18:52:48.527Z"}
{"msg":"From what I can tell this is a new way of architecting agent frameworks based on building blocks, where some conversations happen in DIF and some in Aries.","username":"kdenhartog","ts":"2019-06-28T18:53:34.616Z"}
{"msg":"@troyronda and @kdenhartog IMO, the path forward is quite clear: put the code in aries-cloudagent-go (or aries-mobileagent-go if that's more appropriate) under Hyperledger. This doesn't necessarily say where *conversations* ought to happen -- that could be on DIF calls or Aries calls or both -- but from a code management perspective, I think you want all the contextual support that HL offers in terms of process, devops support, integration with LinuxFoundation accounts for issue tracking, etc. Plus, the frameworks that are peers of the one you're building are also Aries repos.","username":"danielhardman","ts":"2019-06-28T19:02:40.509Z"}
{"msg":"@troyronda and @kdenhartog IMO, the path forward is quite clear: put the code in aries-cloudagent-go (or aries-mobileagent-go if that's more appropriate) under Hyperledger. This doesn't necessarily say where *conversations* ought to happen -- that could be on DIF calls or Aries calls or both -- but from a code management perspective, I think you want all the contextual support that HL offers in terms of process, IP management, devops, integration with LinuxFoundation accounts for issue tracking, etc. Plus, the frameworks that are peers of the one you're building are also Aries repos.","username":"danielhardman","ts":"2019-06-28T19:02:40.509Z"}
{"msg":"It's not an entire agent which is where it becomes less clear. For example there's a separate Hub-store server component, a separate protocol component, a DID Doc parsing component, a hub routing component, etc. Would you put every component within the same repository then?","username":"kdenhartog","ts":"2019-06-28T19:05:24.739Z"}
{"msg":"Would they be tested and versioned together?","username":"danielhardman","ts":"2019-06-28T19:05:55.145Z"}
{"msg":"There's also one component that's intended to package them together as an agent framework, however someone could just take 1 or 2 components and not use the entire agent framework. As for your question I'm not sure. @troyronda thoughts?","username":"kdenhartog","ts":"2019-06-28T19:06:49.522Z"}
{"msg":"If they're tested, versioned, and released as a unit, then they should all be in one repo, even if people only use subsets.","username":"danielhardman","ts":"2019-06-28T19:07:29.868Z"}
{"msg":"If not, then putting them in separate repos might make sense. There's still a question about overhead for the team maintaining the separate components, and for people trying to discover what they need.","username":"danielhardman","ts":"2019-06-28T19:08:59.101Z"}
{"msg":"Maybe the one component that's intended to package them together as an agent framework should be the only thing in aries-agent-go, and all the other stuff should live under the github.com/trustbloc account as its own repos, upon which aries-agent-go depends.","username":"danielhardman","ts":"2019-06-28T19:12:54.291Z"}
{"msg":"So when thinking about DIDComm and Agent Frameworks, I had viewed them as separate logical blocks.\nAn Aries Agent Framework uses DIDComm but a Hub could also use DIDComm. In that view DIDComm is a set of building blocks to build features into agents, hubs, and other services.\n\nWhen the projects are separated, there must be a clean API for these building blocks; if they are encompassed together then it might be only the Agent Framework API that is clean. Of course, this goes to a similar point about being tested and versioned together. I would say the DIDComm building block layer needs its own clean API and tests against it.","username":"troyronda","ts":"2019-06-28T19:20:46.740Z"}
{"msg":"So when thinking about DIDComm and Agent Frameworks, I had viewed them as separate logical blocks.\nAn Aries Agent Framework uses DIDComm but a router, mediator (or even Hub doing those types of services) could also use DIDComm. In that view DIDComm is a set of building blocks to build features into agents, hubs, mediators/routers, and other services.\n\nWhen the projects are separated, there must be a clean API for these building blocks; if they are encompassed together then it might be only the Agent Framework API that is clean. Of course, this goes to a similar point about being tested and versioned together. I would say the DIDComm building block layer needs its own clean API and tests against it.","username":"troyronda","ts":"2019-06-28T19:20:46.740Z"}
{"msg":"So when thinking about DIDComm and Agent Frameworks, I had viewed them as separate logical blocks.\nAn Aries Agent Framework uses DIDComm but a router, mediator (or even a Hub doing those types of services) could also use DIDComm. In that view DIDComm is a set of building blocks to build features into agents, hubs, mediators/routers, and other services.\n\nWhen the projects are separated, there must be a clean API for these building blocks; if they are encompassed together then it might be only the Agent Framework API that is clean. Of course, this goes to a similar point about being tested and versioned together. I would say the DIDComm building block layer needs its own clean API and tests against it.","username":"troyronda","ts":"2019-06-28T19:20:46.740Z"}
{"msg":"So when thinking about DIDComm and Agent Frameworks, I had viewed them as separate logical blocks.\nAn Aries Agent Framework uses DIDComm but a router, mediator (or a Hub doing those types of services) could also use DIDComm. In that view DIDComm is a set of building blocks to build features into agents, hubs, mediators/routers, and other services.\n\nWhen the projects are separated, there must be a clean API for these building blocks; if they are encompassed together then it might be only the Agent Framework API that is clean. Of course, this goes to a similar point about being tested and versioned together. I would say the DIDComm building block layer needs its own clean API and tests against it.","username":"troyronda","ts":"2019-06-28T19:20:46.740Z"}
{"msg":"(it is also true that the Agent Framework would pin its tests against a specific version of the DIDComm library).","username":"troyronda","ts":"2019-06-28T19:21:47.703Z"}
{"msg":"(but the main point is that there should be a clean API for both the DIDComm layer and the Agent Framework layer, regardless of the number of repos and the name of the repo).","username":"troyronda","ts":"2019-06-28T19:23:51.822Z"}
{"msg":"(but the main point is that there should be a clean, tested, and independent API for both the DIDComm layer and the Agent Framework layer, regardless of the number of repos and the name of the repo).","username":"troyronda","ts":"2019-06-28T19:23:51.822Z"}
{"msg":"The main point is that there should be a clean, tested, and independent API for both the DIDComm layer and the Agent Framework layer, regardless of the number of repos and the name of the repo. If there is a single (mono)repo, then I would suggest a generic name like aries-framework-go with subdirectories for each framework component. If there are multiple repos, then put the component name in the repo. @danielhardman @kdenhartog ","username":"troyronda","ts":"2019-06-28T19:23:51.822Z"}
{"msg":"One of the difficulties @troyronda pointed out about this is that it means that trustbloc now has to handle the contributor agreements. It sounds like they want to avoid this which is why they want it in a foundation.","username":"kdenhartog","ts":"2019-06-28T19:43:26.569Z"}
{"msg":"I think the components that make this confusing for me is the hub-store, and side-tree components because the conversations and changes aren't discussed in HL.","username":"kdenhartog","ts":"2019-06-28T19:46:00.322Z"}
{"msg":"Yeh sidetree and hub-store are server implementations based on the protocols discussed in DIF; although I think a hub-store client would be useful in HL.","username":"troyronda","ts":"2019-06-28T19:47:05.954Z"}
{"msg":"Yeh sidetree and hub-store are server implementations based on the protocols discussed in DIF; although I think a hub-store client would be useful in HL so an Agent could use a Hub for a persistent store.","username":"troyronda","ts":"2019-06-28T19:47:05.954Z"}
{"msg":"(and a Sidetree client would be a useful resolver as well).","username":"troyronda","ts":"2019-06-28T19:48:30.649Z"}
{"msg":"(and a Sidetree client would be a useful DID resolver as well).","username":"troyronda","ts":"2019-06-28T19:48:30.649Z"}
{"msg":"At the end of the day, this is still mainly about\u0005 \"I'd like to propose that we create Go framework repo(s)\" ... and start landing/maintaining code. This framework contains DIDComm and Agent layers (along with supporting elements such as DID document processing and resolution, DIDComm, Hub storage client). (If framework isn't the right word, let's substitute a better one).\n\nThis can be done with a single generic repo and subdirectories for each logical module; or multiple more specific repos.","username":"troyronda","ts":"2019-06-28T19:59:48.286Z"}
{"msg":"There are many good reasons to have a common place to contribute and collaborate on code. Sure - avoiding more CLAs is one of them.","username":"troyronda","ts":"2019-06-28T20:01:53.882Z"}
{"msg":"@troyronda The desire to have an abstraction around DIDComm that is separate from the abstraction around agents makes sense to me--but it is a new architectural requirement. Until very recently \"agent stuff\" and \"didcomm\" were virtual synonyms in the minds of many of us. As a result, we do not currently have a mental model that separates things out in the way you'd like. I am friendly to creating one. However, I wouldn't hold codebase progress hostage to that conversation. Let's get the code somewhere public and then start working on how to divide it up. This makes the process of organizing take longer, but it breaks the logjam of trying to solve too many architectural problems with a single move.","username":"danielhardman","ts":"2019-06-28T20:04:27.354Z"}
{"msg":"I would be happy to endorse the creation of an \"aries-framework-go\" repo to get the ball rolling.","username":"danielhardman","ts":"2019-06-28T20:05:21.575Z"}
{"msg":"That seems like a reasonable approach to me.","username":"kdenhartog","ts":"2019-06-28T20:07:29.140Z"}
{"msg":"Makes sense, thanks.","username":"troyronda","ts":"2019-06-28T20:57:59.988Z"}
{"msg":"Makes sense, thanks @danielhardman @kdenhartog ","username":"troyronda","ts":"2019-06-28T20:57:59.988Z"}
{"msg":"@troyronda SDK's are generally structured in accordance to the language ecosystem they are designed for, but a rough separation can be drawn in few layers:\n- storage layer (indy wallets, databases, hubs such as ion)\n- protocol layer (Aries protocol, data contracts)\n- agent layer (handler architecture, communication services)\n- application extensions (language/platform specific support for integration)\nUp until now, a lot of the frameworks have been designed with indy support in mind, and a lot of contracts and even messages part of the Aries protocol are created to eventually support Indy SDK capabilities. While a good abstraction can be made to support other ledgers and SDKs, it's largely a guess work right now due to lack of completeness of other libraries. Example, not many implementations of verifiable credentials with ledger support out there.\nWe're trying to design frameworks with these separations in mind (https://github.com/streetcred-id/agent-framework), but the implementation is far from perfect or generic.","username":"tomislav","ts":"2019-06-28T21:19:50.241Z"}
{"msg":"Note that I use Aries instead DIDComm in my comment, this is unintentional ","username":"tomislav","ts":"2019-06-28T21:20:59.158Z"}
{"msg":"Seems to me that this is the basic architecture we have already implemented in Aries-cloudagent-python","username":"jljordan_bcgov","ts":"2019-06-29T16:01:43.804Z"}
{"msg":"Which has clear simple APIs for DIDComm and VC exchange and any other arbitrary protocol an implement wishes to add via a python module which is loadable at runtime. ","username":"jljordan_bcgov","ts":"2019-06-29T16:02:40.010Z"}
{"msg":"The language of implementation of the cloudagent is more or less irrelevant it seems to me as the web developer for a service that will control the agent simply uses the APIs to send and receive signals from the agent ","username":"jljordan_bcgov","ts":"2019-06-29T16:03:46.397Z"}
{"msg":"So to be frank ... not sure why one would want to incur the NREs of building something from scratch when they can just use what is already had a millions development effort put into it?","username":"jljordan_bcgov","ts":"2019-06-29T16:05:37.691Z"}
{"msg":"So to be frank ... not sure why one would want to incur the NREs of building something from scratch when they can just use what is already had millions in development effort put into it?","username":"jljordan_bcgov","ts":"2019-06-29T16:05:37.691Z"}
{"msg":"We plan to put out at “Code with Us” (https://www.bcdevexchange.org/) sometime soon to sponsor the development of a non-Indy verifiable credential exchange protocol using Aries-cloudagent-python as the base which offers DIDComm and storage services ","username":"jljordan_bcgov","ts":"2019-06-29T16:08:35.256Z"}
{"msg":"Has joined the channel.","username":"darrell.odonnell","ts":"2019-06-29T16:48:37.114Z","type":"uj"}
{"msg":"Has joined the channel.","username":"circlespainter","ts":"2019-06-29T17:08:16.042Z","type":"uj"}
{"msg":"To take John's point a bit further.  Those of us building low level components (the plumbing) should be experimenting with integrations to other components based on code we have - e.g. integratiing with Ion and Hubs using the python agent we have.  That will expose more on the layering and improving the core.\n\nI can totally see re-implementing ","username":"swcurran","ts":"2019-06-29T17:32:14.056Z"}
{"msg":"To take John's point a bit further.  For those of us interested in experimenting with integrations, build DIDcomm protocols (e.g. Ion, uPort) and agent services (e.g. storage) that plug into the python agent we have. That's the easiest fastest way to experiment, learn and contribute the learnings.\n\nIf you want to build an equivalent to the python agent in another language, go for it, but please don't alter the core concepts without discussion - don't unilaterally make something completely different.\n\nFor developers that just want to build apps - use the agents we have as configurable black boxes and build applications. Don't worry about the plumbing.","username":"swcurran","ts":"2019-06-29T17:42:18.113Z"}
{"msg":"I'll leave it to other folks to decide where the code should go. Our choice is Hyperledger and we'll be transferring the `aries-cloudagent-python` repo to Hyperledger on Monday or Tuesday this week - Monday is a holiday here :-).","username":"swcurran","ts":"2019-06-29T17:46:34.789Z"}
{"msg":"The conversation question is harder. I personally think the most advanced conversations on agents and scalable implementations leading to the common use of verifiable credentials are going on in Aries calls/chat.  Other communities are having deep conversations on other topics - especially different issues with DIDs and storage replication but those are not core to verifiable credentials.  If you want to talk agents, including integrations with other verifiable credential implementations, I think Aries if the place to be. ","username":"swcurran","ts":"2019-06-29T17:52:30.918Z"}
{"msg":"@swcurran As mentioned above, we are working on building a Golang implementation of DIDComm, along with supporting framework libraries. In our case, we would use those framework libraries directly in our applications rather than a cloud agent API intermediary. We had also planned to have a Web API-driven service (reference agent) built on top of those libraries to enable our BDD integration tests (and demos) of the framework.","username":"troyronda","ts":"2019-07-01T13:00:47.702Z"}
{"msg":"\nThe thought was that we are working, as a community, to enable a new messaging standard based on DIDs. This means both SDK/framework/component libraries in various languages to enable native integrations for those applications. It also means that there are reference agents that use those libraries to enable an out-of-the-box experience, for easier integration and experimentation.","username":"troyronda","ts":"2019-07-01T13:01:43.038Z"}
{"msg":"In terms of the python agent: I certainly understand the point of view that many \"end\" applications will simply want to use a Web API. However, for those of us working on applications that actually expose that Web API (aka building various forms of agents as it is called here); we need the flexibility to add these capabilities natively using libraries built for our implementation languages. In our case, we are adding these features to an existing Golang service.","username":"troyronda","ts":"2019-07-01T13:15:54.051Z"}
{"msg":"In terms of the python agent: I certainly understand the point of view that many \"end\" applications will simply want to use a Web API. However, for those of us working on applications that actually expose that Web API (aka building various forms of agents as it is called here); we need the flexibility to add these capabilities natively using libraries built for our implementation languages. In our case, we are adding these features to a service implemented in Go.","username":"troyronda","ts":"2019-07-01T13:15:54.051Z"}
{"msg":"In terms of the python agent: I certainly understand the point of view that many \"end\" applications will simply want to use a Web API. However, for those of us working on applications that actually expose that Web API (aka building various forms of agents as it is called here); we need the flexibility to add these capabilities natively using libraries built for our implementation languages. In our case, we are adding these features to such a service implemented in Go.","username":"troyronda","ts":"2019-07-01T13:15:54.051Z"}
{"msg":"Good note @troyronda and I certainly agree that's what we are trying to accomplish and we'll need multiple implementations in multiple languages. I was a little concerned with the ideas of fundamentally different (and hence, possibly not interoperable) architectures. As long as interop remains a top priority, I'm happy. ","username":"swcurran","ts":"2019-07-01T14:38:56.217Z"}
{"msg":"@swcurran and @TelegramSam, what do you think about getting an aries-framework-go repo where @troyronda and crew can begin working in a non-trustbloc place? (@troyronda, do you have DCO hygiene taken care of?)","username":"danielhardman","ts":"2019-07-01T18:38:32.818Z"}
{"msg":"I'm fine with it, but don't completely understand it. \n\nWe have the aries-go-sdk repo and we eventually will presumably have an aries-agent-go repo, so I'm not sure what goes in the framework repo.  If there is a clear vision for the three repos by @troyronda and team, I'm good with it. If there is still experimenting to be done, I'd suggest going with populating the aries-go-sdk in Hyperledger and experimenting in trustbloc (in the open, of course).","username":"swcurran","ts":"2019-07-01T18:43:49.280Z"}
{"msg":"aries-sdk-go should be an unopinionated language library.","username":"TelegramSam","ts":"2019-07-01T21:20:55.644Z"}
{"msg":"aries-framework-go is a good place for opinions.","username":"TelegramSam","ts":"2019-07-01T21:21:25.195Z"}
{"msg":"I think Aries-framework-go is a good place for it. The framework from what I understood is going to be taking a bunch of modular components and combining them together.","username":"kdenhartog","ts":"2019-07-01T21:57:54.599Z"}
{"msg":"@troyronda As you worked on your implementation, did you find anything useful in the Indy Go wrapper?","username":"esplinr","ts":"2019-07-02T01:04:19.927Z"}
{"msg":"@rjones I have yet another stalled PR against the aries-rfcs repo: https://github.com/hyperledger/aries-rfcs/pull/105. Could the lack of response from circleci be due to us needing more docker allocation? I don't see any job even scheduled to run against this PR in the hyperledger org's dashboard on circleci.com.","username":"danielhardman","ts":"2019-07-02T12:53:48.397Z"}
{"msg":"@kdenhartog or @TelegramSam or @swcurran : Could one of you please approve/merge my PR #103 which has been idling for several days now? https://github.com/hyperledger/aries-rfcs/pull/103","username":"danielhardman","ts":"2019-07-02T12:54:42.090Z"}
{"msg":"I lack the power.","username":"swcurran","ts":"2019-07-02T12:57:03.394Z"}
{"msg":"@danielhardman I merged 103, and then I updated 105 with a merge. After that merge, the circleci checks passed. Anyway, both merged.","username":"TelegramSam","ts":"2019-07-02T13:17:08.184Z"}
{"msg":"We're getting ready to do the repo transfer for `aries-cloudagent-python` from bcgov to hyperledger.  I'd like to propose that @andrew.whitehead, @nbrempel and myself be maintainers for now.  Any objections?  Any additions?","username":"swcurran","ts":"2019-07-02T16:43:54.255Z"}
{"msg":"Has joined the channel.","username":"andrew.whitehead","ts":"2019-07-02T16:43:55.799Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nbrempel","ts":"2019-07-02T16:43:55.803Z","type":"uj"}
{"msg":"I have no objection. It will be great to broaden the list as we have contributors from others orgs, but that shouldn't stand in the way of getting the repo published.","username":"esplinr","ts":"2019-07-02T16:45:41.708Z"}
{"msg":"agree. let's start there and expand","username":"TelegramSam","ts":"2019-07-02T17:38:15.640Z"}
{"msg":"No objections here. I'm excited to see it moving into HL!","username":"kdenhartog","ts":"2019-07-02T18:18:10.362Z"}
{"msg":"@rjones - not the owners for the new repo above ^^^^ ","username":"swcurran","ts":"2019-07-02T20:57:37.203Z"}
{"msg":"@rjones - not the maintainers for the new repo above ^^^^ (my github is swcurran).","username":"swcurran","ts":"2019-07-02T20:57:37.203Z"}
{"msg":"@rjones - not the maintainers for the new repo above ^^^^","username":"swcurran","ts":"2019-07-02T20:57:37.203Z"}
{"msg":"@rjones - note the maintainers for the new repo `aries-cloudagent-python` above ^^^^","username":"swcurran","ts":"2019-07-02T20:57:37.203Z"}
{"msg":"@swcurran you are a maintainer of https://github.com/orgs/hyperledger/teams/aries-cloudagent-python-committers/members so you may add and remove people as you please","username":"rjones","ts":"2019-07-02T21:01:12.904Z"}
{"msg":"OK - thanks!","username":"swcurran","ts":"2019-07-02T21:02:59.434Z"}
{"msg":"Whoohoo!!! Transfer done!!","username":"swcurran","ts":"2019-07-02T21:03:11.142Z"}
{"msg":"","username":"swcurran","ts":"2019-07-02T21:03:30.888Z","attachments":[{"type":"file","title":"Clipboard - July 2, 2019 2:03 PM","title_link":"/file-upload/udYGmX9bz8m8KJrtK/Clipboard%20-%20July%202,%202019%202:03%20PM","image_url":"/file-upload/udYGmX9bz8m8KJrtK/Clipboard%20-%20July%202,%202019%202:03%20PM","image_type":"image/png","image_size":21824,"url":"/file-upload/udYGmX9bz8m8KJrtK/Clipboard%20-%20July%202,%202019%202:03%20PM","remote":false,"fileId":"udYGmX9bz8m8KJrtK","fileName":"Clipboard - July 2, 2019 2:03 PM"}]}
{"msg":"🏆","username":"nbrempel","ts":"2019-07-02T21:06:21.014Z"}
{"msg":"@danielhardman yes DCO hygiene is taken care of.","username":"troyronda","ts":"2019-07-02T21:55:25.200Z"}
{"msg":"@esplinr we decided to use native Go libraries to support the crypto behind the protocols, so we don’t have need for a wrapped libindy.","username":"troyronda","ts":"2019-07-02T21:56:43.533Z"}
{"msg":"(I assume a wrapped ursa will be needed for anoncred payloads)","username":"troyronda","ts":"2019-07-02T21:57:25.344Z"}
{"msg":"Good to know. Thank you.","username":"esplinr","ts":"2019-07-02T22:02:50.896Z"}
{"msg":"Hi @rjones, what is the recommended approach for publishing python packages to https://pypi.org under Hyperledger? ","username":"nbrempel","ts":"2019-07-02T22:47:59.229Z"}
{"msg":"@nbrempel I don't know that we have an approach.","username":"rjones","ts":"2019-07-02T22:56:30.418Z"}
{"msg":"Docker Hub and NPM were set up as needed - I think you're the first to ask to publish to pypi, so I guess I should set that up","username":"rjones","ts":"2019-07-02T22:57:18.360Z"}
{"msg":"@nbrempel looks like I set it up some time ago - https://pypi.org/user/hyperledger/","username":"rjones","ts":"2019-07-02T22:58:59.455Z"}
{"msg":"Ok, great! Does it have a permissions system? If you're able to give me publish access to a package called `aries-cloudagent` I can publish the initial release","username":"nbrempel","ts":"2019-07-02T23:06:11.993Z"}
{"msg":"So far, I haven't found how to do that.","username":"rjones","ts":"2019-07-02T23:10:22.941Z"}
{"msg":"I'm digging into github actions. if you know more about pypi please let me know directly","username":"rjones","ts":"2019-07-02T23:13:38.164Z"}
{"msg":"https://github.com/pypa/gh-action-pypi-publish","username":"rjones","ts":"2019-07-02T23:14:00.102Z"}
{"msg":"yeah, I saw that as well which would be nice to automate it. I have the manual instructions for cutting a release in a pending PR https://github.com/hyperledger/aries-cloudagent-python/pull/36/files","username":"nbrempel","ts":"2019-07-02T23:27:23.921Z"}
{"msg":"OK. Until we figure something automatic I can give it a whirl later in the week if that's OK?","username":"rjones","ts":"2019-07-03T00:04:04.286Z"}
{"msg":"yep! No rush on it. Thanks","username":"nbrempel","ts":"2019-07-03T01:52:20.009Z"}
{"msg":"For the aries-staticagent-python pypi package, I just published it myself under my account with the intention to add as maintainers whoever/whatever would need permission to change or update the package. That allowed me to quickly get a release up manually with the potential for automation in the future.","username":"dbluhm","ts":"2019-07-03T12:22:16.144Z"}
{"msg":"@dbluhm is there some obvious way for me to give people permissions to publish that I'm missing?","username":"rjones","ts":"2019-07-03T13:30:10.541Z"}
{"msg":"After logging in, it shows \"your projects.\" From there, clicking \"manage\" on the project then \"collaborators\" from the left menu allowed me to add people as maintainers on a project which I assume means they can publish to the project but I haven't actually verified that yet","username":"dbluhm","ts":"2019-07-03T13:34:03.241Z"}
{"msg":"ah ha! Since I haven't published, I don't have that option. thank you","username":"rjones","ts":"2019-07-03T13:34:31.619Z"}
{"msg":"@nbrempel it looks like - you publish, then later we figure out automation, which is the reverse of what I said yesterday. Sound OK?","username":"rjones","ts":"2019-07-03T13:35:27.315Z"}
{"msg":"Another note, you can add maintainers to a project you've uploaded but you can also transfer ownership as well so @nbrempel can upload then transfer to hyperledger and leave himself as a maintainer","username":"dbluhm","ts":"2019-07-03T13:37:16.445Z"}
{"msg":"I guess I was expecting something more like Dockerhub, where we have teams and acls somewhat like github","username":"rjones","ts":"2019-07-03T13:38:13.186Z"}
{"msg":"lol I guess PyPI is too simple for anything like that","username":"dbluhm","ts":"2019-07-03T14:10:14.423Z"}
{"msg":"Sounds good!","username":"nbrempel","ts":"2019-07-03T15:59:56.894Z"}
{"msg":"All: a large number of RFCs are about protocols. A smaller but still significant number are about decorators. We do not have consistency in the folder names we use for these two categories. We have \"service-decorator\" and \"payment-decorators\", but also \"message-timing\" and \"message-tracing\" (both of which are about decorators). Most of our protocol folder names don't have \"-protocol\" on the end, but I'm wondering if they should; \"0028-introduce\" sounds weird, but \"0028-introduce-protocol\" much more natural.\n\nAnyway, should we establish some naming pattern that we try to follow consistently, before permalinks get entrenched? Or do we not care?","username":"danielhardman","ts":"2019-07-04T05:18:19.084Z"}
{"msg":"@danielhardman +1","username":"george.aristy","ts":"2019-07-04T15:29:45.972Z"}
{"msg":"Has joined the channel.","username":"lukasA","ts":"2019-07-05T08:58:06.519Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ajayjadhav","ts":"2019-07-08T11:06:34.147Z","type":"uj"}
{"msg":"I'm a fan of a `protocol` and `decorator` suffix.","username":"TelegramSam","ts":"2019-07-08T13:20:14.224Z"}
{"msg":"Has joined the channel.","username":"xfreeman","ts":"2019-07-08T13:59:19.160Z","type":"uj"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-07-08T18:08:48.498Z","type":"ul"}
{"msg":"Has joined the channel.","username":"rolsonquadras","ts":"2019-07-09T18:32:34.904Z","type":"uj"}
{"msg":"@danielhardman @swcurran @TelegramSam @kdenhartog : It would be good to continue on the next steps for a Go (agent/didcomm) framework repo. (I was out last week).\n\nThe previous thread primarily left off at: https://chat.hyperledger.org/channel/aries-maintainers?msg=q5hx5W2Tj7n5kFLbQ and https://chat.hyperledger.org/channel/aries-maintainers?msg=mSdyxxWqKvP8SwZyE\n\nTo answer @swcurran previous question on Aries-agent vs Aries-framework vs Aries-sdk, here are a few thoughts:\n* It seemed that \"SDK\" repos are effectively for wrapper libraries (unopinionated). So we didn't go down this path for naming.\n* The repo will contain both libraries that can be used for building an agent, along with a reference implementation (with a particular goal of testing & demonstration). i.e., we particularly wanted to ensure that the libraries are useable \"independently\" of the reference implementation.\n* We also want to ensure that the framework is extendable - e.g., you can plug-in additional handlers using extension libraries.\n* We don't currently need to use an Aries SDK in this (agent/didcomm) framework, but there is an assumed need for Ursa for AnonCreds.\n\nSo I believe we know what should be part of this particular repo. In regards to naming the repo (agent vs framework). The repo's primary intent is to provide an extendable Aries/DIDComm agent framework (along with supporting libraries) so you could probably argue either way but I tilted towards \"framework\" due to this primary intent (even though it is intended to contain a reference agent) and my earlier thoughts in the thread about DIDComm layering.\n","username":"troyronda","ts":"2019-07-09T20:07:48.505Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=q5hx5W2Tj7n5kFLbQ","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=q5hx5W2Tj7n5kFLbQ","remote":true,"fileId":null,"fileName":null},{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=mSdyxxWqKvP8SwZyE","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=mSdyxxWqKvP8SwZyE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"In terms of an additional repo on top, did you have some thoughts on that?","username":"troyronda","ts":"2019-07-09T20:08:24.200Z"}
{"msg":"In terms of an additional repo on top, did you have some thoughts on that @swcurran ?","username":"troyronda","ts":"2019-07-09T20:08:24.200Z"}
{"msg":"In terms of a possible additional repo on top, did you have some thoughts on that @swcurran ?","username":"troyronda","ts":"2019-07-09T20:08:24.200Z"}
{"msg":"@troyronda , who besides you ought to have commit rights?","username":"danielhardman","ts":"2019-07-09T20:13:19.266Z"}
{"msg":"(I am going to get the aries-framework-go repo created so we can move ahead. If we end up renaming it, that's fine. I just don't want us hung up on procedural stuff.)","username":"danielhardman","ts":"2019-07-09T20:14:03.238Z"}
{"msg":"@danielhardman awesome - sounds good. I'll collect some IDs.","username":"troyronda","ts":"2019-07-09T20:41:24.993Z"}
{"msg":"My guess is what you are calling \"framework\" we are calling \"cloudagent\", but we'll have to see from the implementation. \n\nEach cloudagent instance is an agent that has a corresponding controller instance (with horizontal scaling available). The cloudagent does all the agent processing, has pluggable services and a configurable set of protocols.  The controller provides the business logic for the agent - when to initiate protocols, and how to respond to protocol events. We provide examples of controllers, but no concrete repo to fork, since they could be anything - a UI for a person, an actual person (by having the person operate a Swagger UI), an integration with a legacy service, etc, etc. ","username":"swcurran","ts":"2019-07-09T20:45:36.921Z"}
{"msg":"My guess is what you are calling \"framework\" we are calling \"cloudagent\", but we'll have to see from the implementation. \n\nEach cloudagent instance is an agent that has a corresponding controller instance (with horizontal scaling available). The cloudagent does all the agent processing, has pluggable services and a configurable set of protocols.  The controller provides the business logic for the agent - when to initiate protocols, and how to respond to protocol events. We provide examples of controllers, but no concrete repo to fork, since a controller could be anything - a UI for a person, an actual person (by having the person operate a Swagger UI), an integration with a legacy service, etc, etc. ","username":"swcurran","ts":"2019-07-09T20:45:36.921Z"}
{"msg":"Our implementation uses a HTTP/JSON interface between the agent and controller (events from agent to controller, admin requests from controller to agent).  My guess is that your structure is that the framework is a library, and an agent embeds the library and calls it internally.","username":"swcurran","ts":"2019-07-09T20:47:16.093Z"}
{"msg":"Do you think I'm close?","username":"swcurran","ts":"2019-07-09T20:47:56.583Z"}
{"msg":"As I've learned, we'll get the name wrong regardless, so I'm good with the names.  I'm a little concerned it will be confusing to those arriving into the community, but we'll cross that bridge when we have that problem.","username":"swcurran","ts":"2019-07-09T20:49:26.087Z"}
{"msg":"@troyronda Have at it: https://github.com/hyperledger/aries-framework-go. Make sure to follow DCO. (I'm not sure whether DCO is turned on; usually that shows up in the first commit... @rjones ^^)","username":"danielhardman","ts":"2019-07-09T21:53:41.303Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-07-09T21:53:42.146Z","type":"uj"}
{"msg":"@danielhardman Nice thanks. Will do. For other initial committers, I would suggest @george.aristy (llorllale), @rolsonquadras (rolsonquadras), @bstasyszyn (bstasyszyn). BTW, who should I ask about turning on CI and enabling branch protection to require code review?","username":"troyronda","ts":"2019-07-09T22:32:07.916Z"}
{"msg":"@danielhardman Nice thanks. Will do.","username":"troyronda","ts":"2019-07-09T22:32:07.916Z"}
{"msg":"Has joined the channel.","username":"bstasyszyn","ts":"2019-07-09T22:32:08.053Z","type":"uj"}
{"msg":"@swcurran Yes - I think that seems close. (with appropriate difference in description due to the framework as library as you said).","username":"troyronda","ts":"2019-07-09T22:37:11.320Z"}
{"msg":"@swcurran One difference that I wonder about is whether Troy's framework is really about *cloud* agents specifically, or if it's more general.\n\nI wonder if we should alter our naming conventions so it's consistently more-general-to-more-specific, as in \"aries-agent-cloud-python\", \"aries-agent-static-python\", etc. Then, if we have a repo that includes more than one kind of agent thingy, we could just omit the specifier, giving \"aries-agent-go\". Just a thought.","username":"danielhardman","ts":"2019-07-09T22:42:43.043Z"}
{"msg":"Like I said, no matter what we do we'll get it wrong 🤣. We've used two names now. I'd say we wait until it's blindingly obvious what we did wrong.","username":"swcurran","ts":"2019-07-09T22:45:08.490Z"}
{"msg":"okay","username":"danielhardman","ts":"2019-07-09T22:47:15.288Z"}
{"msg":"@danielhardman @swcurran I wouldn't have used *cloud* agents specifically - yes, would say it's more general.","username":"troyronda","ts":"2019-07-09T22:47:17.368Z"}
{"msg":"@kdenhartog or @TelegramSam : do you mind reviewing/merging this PR? https://github.com/hyperledger/aries-rfcs/pull/115","username":"danielhardman","ts":"2019-07-09T22:48:08.083Z"}
{"msg":"Yes, with approach and language I would not expect the \"not mobile\" restriction.","username":"swcurran","ts":"2019-07-09T22:48:18.353Z"}
{"msg":"yup.","username":"troyronda","ts":"2019-07-09T22:49:46.661Z"}
{"msg":"@danielhardman thanks for the catch. DCO was not enabled on that repo","username":"rjones","ts":"2019-07-10T03:50:45.411Z"}
{"msg":"Has joined the channel.","username":"peacekeeper","ts":"2019-07-10T18:46:10.480Z","type":"uj"}
{"msg":"Has joined the channel.","username":"firas.qutishat","ts":"2019-07-11T17:02:10.867Z","type":"uj"}
{"msg":"Has joined the channel.","username":"alank9","ts":"2019-07-15T23:17:11.685Z","type":"uj"}
{"msg":"I've prepared a \"0.1\" release of the Aries Protocol Test Suite that I'd like to propose now moving out of my personal repo, transferring ownership to hyperledger under the name aries-protocol-test-suite.","username":"dbluhm","ts":"2019-07-16T22:29:41.710Z"}
{"msg":"I've included the connection tests as they were at the connect-a-thon in February as something to start with and expect that more tests and improvements to the test suite can be introduced as PRs.","username":"dbluhm","ts":"2019-07-16T22:31:51.607Z"}
{"msg":"https://github.com/dbluhm/aries-protocol-test-suite\n\nIf you'd like to see what I have together so far","username":"dbluhm","ts":"2019-07-16T22:32:59.223Z"}
{"msg":"Any remaining objections? Things that need to be resolved before we make the transfer?","username":"dbluhm","ts":"2019-07-16T22:33:17.831Z"}
{"msg":"I'd like to have a discussion about the handling of this PR - https://github.com/hyperledger/aries-rfcs/pull/23\n\nIn one step this PR deprecated *and* eliminated a protocol, and created a new protocol that seems to only have a name change.  The proper handling of this (IMHO - and our developers) is that the existing protocol (connections) should have been marked as deprecated and the new one (did-exchange) should have been added.  As well there should have been a lot more flag raising about the change.\n\nThis change is (hopefully) somewhat of a special case as it was hidden in the transfer from indy-hipe to aries-rfc, but it is definitely not hidden in the implementations that are running. Our solution is to support both protocols for the forseeable future, until we can safely remove the deprecated protocol.\n\nI don't think we need to change anything with this, but do I think we need to be more cognizent of such changes given that there implementations running. The implementations aren't running too many protocols, but the core ones should be handled properly when changed.","username":"swcurran","ts":"2019-07-16T23:08:06.582Z"}
{"msg":"No objections, but a suggestion: it would be good to update indy-agent to point to where the work is currently happening.","username":"esplinr","ts":"2019-07-17T00:13:39.244Z"}
{"msg":"No objections, but a suggestion: it would be good to update indy-agent repo to point to where the work is currently happening.","username":"esplinr","ts":"2019-07-17T00:13:39.244Z"}
{"msg":"I was similarly caught off guard by the change, but I agree that this was a special case due to the migration from indy-hipes to aries-rfcs.","username":"esplinr","ts":"2019-07-17T00:14:57.357Z"}
{"msg":"@rjones looks like we're good for a transfer; what does that process look like?","username":"dbluhm","ts":"2019-07-17T14:03:36.875Z"}
{"msg":"Has joined the channel.","username":"MITomK","ts":"2019-07-17T14:10:25.564Z","type":"uj"}
{"msg":"transfer it to my github user - ryjones","username":"rjones","ts":"2019-07-17T14:42:27.184Z"}
{"msg":"also - tell me who a committer or two is?","username":"rjones","ts":"2019-07-17T14:45:11.244Z"}
{"msg":"and make sure the DCO is compliant please","username":"rjones","ts":"2019-07-17T14:45:38.065Z"}
{"msg":"https://gist.github.com/ryjones/07ac650dcc5e83c91e8308ec98bacda4","username":"rjones","ts":"2019-07-17T14:46:08.382Z"}
{"msg":"We'll start with myself (dbluhm on github as well) and @TelegramSam (also TelegramSam on github)","username":"dbluhm","ts":"2019-07-17T14:53:31.496Z"}
{"msg":"DCO should be good","username":"dbluhm","ts":"2019-07-17T14:53:34.328Z"}
{"msg":"if you want to do an experiment - make me an admin on the incoming repo while you still own it","username":"rjones","ts":"2019-07-17T14:54:20.900Z"}
{"msg":"I'm not seeing an obvious \"make admin\" option; do I need to make you a collaborator?","username":"dbluhm","ts":"2019-07-17T14:55:53.905Z"}
{"msg":"yes. that's an experiment, though. if you want the easier way just transfer it to me directly","username":"rjones","ts":"2019-07-17T14:56:27.199Z"}
{"msg":"```(lftools) rjones@penguin:~/aries-protocol-test-suite$ lftools dco check\nChecking commits in branch origin/master for commits missing DCO...\n(lftools) rjones@penguin:~/aries-protocol-test-suite$ ```","username":"rjones","ts":"2019-07-17T14:56:32.474Z"}
{"msg":"I'm good for an experiment","username":"dbluhm","ts":"2019-07-17T14:57:06.891Z"}
{"msg":"do it to it","username":"rjones","ts":"2019-07-17T14:57:12.853Z"}
{"msg":"Not sure how to interpret this. Does that mean we're good?","username":"dbluhm","ts":"2019-07-17T14:57:55.542Z"}
{"msg":"yes. no commits showed up so you're fine","username":"rjones","ts":"2019-07-17T14:58:13.350Z"}
{"msg":"I kind of suspect that since your github account isn't an org, there won't be an admin role to add me to","username":"rjones","ts":"2019-07-17T14:59:08.074Z"}
{"msg":"Ah","username":"dbluhm","ts":"2019-07-17T14:59:17.491Z"}
{"msg":"invite accepted","username":"rjones","ts":"2019-07-17T14:59:34.778Z"}
{"msg":"when I go here: https://github.com/dbluhm/aries-protocol-test-suite I don't see a settings tab","username":"rjones","ts":"2019-07-17T15:00:53.062Z"}
{"msg":"Interesting. I can't seem to elevate your privileges anymore than what you already have either","username":"dbluhm","ts":"2019-07-17T15:01:33.420Z"}
{"msg":"So transfer?","username":"dbluhm","ts":"2019-07-17T15:01:44.825Z"}
{"msg":"OK. just transfer the repo to my user]","username":"rjones","ts":"2019-07-17T15:01:49.217Z"}
{"msg":"OK. just transfer the repo to my user","username":"rjones","ts":"2019-07-17T15:01:49.217Z"}
{"msg":":thumbsup: ","username":"dbluhm","ts":"2019-07-17T15:01:54.813Z"}
{"msg":"https://github.com/hyperledger/aries-protocol-test-suite gtg","username":"rjones","ts":"2019-07-17T15:12:05.455Z"}
{"msg":"Thanks!","username":"dbluhm","ts":"2019-07-17T15:12:21.867Z"}
{"msg":"thank you!","username":"rjones","ts":"2019-07-17T15:12:33.071Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-maintainers?msg=dpNJKhaWGspNPjZFg) @swcurran I agree as with the approach you suggested. I accepted because it was being moved and we had consensus about the name change. To rephrase how I'm understanding what you're raising, no accepted status RFCs should have a breaking change? ","username":"kdenhartog","ts":"2019-07-17T17:31:32.860Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=dpNJKhaWGspNPjZFg","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=dpNJKhaWGspNPjZFg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I have a question for maintainers of aries-* on github: would you be willing to try a new tool for permission management for your repos? It would involve creating and editing a YAML file in each repo.","username":"rjones","ts":"2019-07-17T17:43:23.949Z"}
{"msg":"I wouldn't mind for aries-staticagent-python and aries-protocol-test-suite","username":"dbluhm","ts":"2019-07-17T17:57:26.915Z"}
{"msg":"I'm happy to try it out!","username":"nbrempel","ts":"2019-07-17T18:02:26.602Z"}
{"msg":"@kdenhartog - would say no breaking changes when we know there are multiple implementations.  In this case, the right thing to do probably was to migrate the HIPE as is with a \"deprecated\" flag on it and then copy the HIPE again with the new changes.","username":"swcurran","ts":"2019-07-17T18:14:40.126Z"}
{"msg":"@rjones sure, interested for Aries-framework-go. Do you have a link to the tool?","username":"troyronda","ts":"2019-07-17T18:34:25.498Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-maintainers?msg=mTWYaifTWndWiTuff) @swcurran Multiple implementations would move it to active status from my understanding. Also, we should be including some way of indicating and potentially linking to implementations if we're using that as a distinctive metric. \n\nIt's worth noting that while I agree that implementations are important metric to consider there's different types we should consider. For example, code that's in production I would consider a production implementation which should encounter as few of breaking changes as possible. However, we may also have prototype implementations which are used to learn and improve the protocols. These are useful, but can handle as many breaking changes as we see fit in my opinion. So I'd suggest that we also indicate what type of implementation it is in the RFC as well.","username":"kdenhartog","ts":"2019-07-17T19:05:19.239Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=mTWYaifTWndWiTuff","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=mTWYaifTWndWiTuff","remote":true,"fileId":null,"fileName":null}]}
{"msg":"FWIW @danielhardman raised this point when we were moving to the new process. I'm not able to remember why we didn't start doing that.","username":"kdenhartog","ts":"2019-07-17T19:06:52.951Z"}
{"msg":"I'd be happy to try it in aries-rfcs.","username":"danielhardman","ts":"2019-07-17T19:18:14.457Z"}
{"msg":"@swcurran and @kdenhartog : I generally feel aligned with sentiments that both of you expressed.\n\nI think we may want to do a better job of tracking which protocols are implemented, and give them a status other than PROPOSED. That would have helped in the specific case that Stephen pointed out, because the bar for changing an ACCEPTED RFC is higher than for changing one that's merely PROPOSED.","username":"danielhardman","ts":"2019-07-17T19:20:58.633Z"}
{"msg":"This is what the file you would need to add would look like:","username":"rjones","ts":"2019-07-17T19:27:03.105Z"}
{"msg":"https://github.com/opnfv/releng/blob/master/INFO.yaml","username":"rjones","ts":"2019-07-17T19:27:04.825Z"}
{"msg":"this is the schema:","username":"rjones","ts":"2019-07-17T19:27:55.408Z"}
{"msg":"https://github.com/lfit/releng-global-jjb/blob/master/info-schema","username":"rjones","ts":"2019-07-17T19:27:56.145Z"}
{"msg":"I'm heading out on vacation today, but the author of the tool (Aric) is writing the github integration right now","username":"rjones","ts":"2019-07-17T19:32:09.617Z"}
{"msg":"Has joined the channel.","username":"agardner","ts":"2019-07-17T19:36:18.451Z","type":"uj"}
{"msg":"there we go","username":"agardner","ts":"2019-07-17T19:36:18.632Z"}
{"msg":"I will update the status of the github integration here when its ready","username":"agardner","ts":"2019-07-17T19:37:49.499Z"}
{"msg":"@swcurran and @kdenhartog : See this section of the DIDComm Best Practices RFC 0074, which talks about what we should do when a protocol is revised. https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0074-didcomm-best-practices#rfc-naming","username":"danielhardman","ts":"2019-07-17T20:00:15.724Z"}
{"msg":"@swcurran @kdenhartog @danielhardman As the perpertrator of the crime, I have to agree with all this as well. Moving the existing to Deprecated, then working on a replacement would be a much better option. It is still possible to do this. Should I revert this one to the original, and make a new one for didexchange?","username":"TelegramSam","ts":"2019-07-17T21:11:17.123Z"}
{"msg":"yeah I'm fine if we still do this just to keep things in proper higene","username":"kdenhartog","ts":"2019-07-17T21:11:50.329Z"}
{"msg":"The further we deviate (signed invitations, etc. given call today) the more I think this would be useful.","username":"TelegramSam","ts":"2019-07-17T21:12:15.404Z"}
{"msg":"There was no \"crime\" here. What was changed was a PR, not a merged spec. That is always legal. And merging the PR was also legal, because there was no pre-existing PR to deprecate. I think we already have a copy of the old protocol over in the indy-hipe repo, and I think we already say that the Aries RFC supersedes it. If that's the case, then I think nothing further needs to be done. If it's not, maybe that should be the target.","username":"danielhardman","ts":"2019-07-17T21:51:08.348Z"}
{"msg":"When should we commit such a file?","username":"danielhardman","ts":"2019-07-17T21:51:46.682Z"}
{"msg":"@agardner is working on the implementation","username":"rjones","ts":"2019-07-17T21:52:07.821Z"}
{"msg":"@agardner is working on the implementation","username":"rjones","ts":"2019-07-17T21:52:26.997Z"}
{"msg":"I don't think it's a huge issue but bigger than just saying it was all legal and hence OK.  It is causing confusion that should be smoother handled in a smoother way.  Renaming a protocol is not something that should be handled lightly, and IMHO definitely shouldn't be done as part of another operation (e.g. the move from Indy-HIPE to Aries-RFC).  \n\nWe'll survive - just need to coordinate between the existing implementations.","username":"swcurran","ts":"2019-07-17T23:17:42.399Z"}
{"msg":"yup, I made a mental note to start checking for this when I'm merging PRs too. Thanks for raising it.","username":"kdenhartog","ts":"2019-07-18T18:37:49.174Z"}
{"msg":"@danielhardman https://github.com/hyperledger/aries/pull/6 small PR updating links in the Aries repository","username":"dbluhm","ts":"2019-07-19T14:50:32.613Z"}
{"msg":"Merged!","username":"danielhardman","ts":"2019-07-19T15:39:51.376Z"}
{"msg":"Thank you","username":"danielhardman","ts":"2019-07-19T15:39:55.407Z"}
{"msg":"Hey folks - interesting bit of learning about decorators that @andrew.whitehead and @sklump have been working on.  Thought I would add a note here to highlight this as a test of where to start a discussion about implementation experience.  I'm thinking this type of thing should wind up in the RFC itself?\n\nIn aries-cloudagent-python, the core message handlers scans the messages and processes decorators.  That works nicely for cross-cutting decorators - timing, threads, etc.  When Stephen K was implementing Issue Credential (RFC 36), an attachment is a required field of the message and it makes sense that it be processed in the protocol.  A first cut of his code had some ugly handling of the decorator - a workaround for what was happening in the core. What they came up with to avoid thw workaround and duplicate code/processing is that the core scans the protocol message format and skips processing decorators that are part of the protocol.  I believe thc core processing can also be passed a \"skip\" parameter to skip other decorators.\n\nThat experience might be useful for other implementations.","username":"swcurran","ts":"2019-07-19T17:23:16.372Z"}
{"msg":"Has joined the channel.","username":"sklump","ts":"2019-07-19T17:23:16.858Z","type":"uj"}
{"msg":"@andrew.whitehead 's final fix is a clever piece of marshmallow-fu that inspects the schema for named fields. If it's in the spec as a field, the decorator extraction process leaves it as-is. So the decorator spec can vary independently of the message spec as the standards progress. I think it's bulletproof.","username":"sklump","ts":"2019-07-19T17:37:43.722Z"}
{"msg":"@andrew.whitehead 's final fix is a clever piece of marshmallow-fu that inspects the schema for named fields. If it's in the spec as a field, the decorator extraction process leaves it as-is. So the decorator spec can vary independently of the message spec as the standards progress. I think it's bulletproof as-is, but to use the 'skip' parameter, a descendant could overload `extract_decorators()`.","username":"sklump","ts":"2019-07-19T17:37:43.722Z"}
{"msg":"Would `~attachment` ever not be processed by the protocol? I can't think of what meaning it could have outside of that given by the message type","username":"dbluhm","ts":"2019-07-19T17:39:38.901Z"}
{"msg":"At present, `~attach` is not a default decorator, so you are correct. The processing extracts decorators like `~thread`, `~timing`, etc. These are conceptually different because they operate orthogonally to the spec. But if some wag in the future wants to put `bad~timing` as a field in the spec, this approach will do the right thing and leave it alone.","username":"sklump","ts":"2019-07-19T17:42:54.219Z"}
{"msg":"At present, `~attach` is not a default decorator, so you are correct. The processing extracts decorators like `~thread`, `~timing`, etc. These are conceptually different because they operate orthogonally to the spec. But if some wag in the future wants to put `bad~timing` as a field in the spec, this approach will do the right thing and leave it alone.\n\nThe Aries#0036 issue-credential v1.0 (draft) PR includes an attachment decorator implementation, but as yet no others use it, so no design decision is necessary.","username":"sklump","ts":"2019-07-19T17:42:54.219Z"}
{"msg":"At present, `~attach` is not a default decorator, so you are correct. The processing extracts decorators like `~thread`, `~timing`, etc. These are conceptually different because they operate orthogonally to any Aries message spec. But if some wag in the future wants to put `bad~timing` as a field in the spec, this approach will do the right thing and leave it alone.\n\nThe Aries#0036 issue-credential v1.0 (draft) PR includes an attachment decorator implementation, but as yet no others use it, so no design decision is necessary.","username":"sklump","ts":"2019-07-19T17:42:54.219Z"}
{"msg":"@TelegramSam @swcurran @kdenhartog I'm confused about this thread. https://github.com/hyperledger/aries-rfcs/issues/137 . I thought DID Exchange replaced Connection.","username":"troyronda","ts":"2019-07-24T19:16:08.121Z"}
{"msg":"The python agent had the previous ideas from Indy implemented and properly versioned releases. Then when moved to Aries there were changes made that caused breaking changes. This thread is proposing a common way to track who's building implementations and a way to identify when we create breaking changes of the protocol in an RFC.","username":"kdenhartog","ts":"2019-07-24T19:35:23.799Z"}
{"msg":"Are you thinking of having two different RFCs - the existing RFC for DID Exchange and another one for Connections?","username":"troyronda","ts":"2019-07-24T19:37:53.840Z"}
{"msg":"Bringing up some questions for this type of situation:\n- Do both RFCs have effectively the same text (with a name change)? Or a smaller document about the old name or link to a version?\n- Does the \"new\" name RFC state that the \"old\" name is deprecated?\n- Do new implementations use the \"new\" name? How is the \"old\" name treated? e.g., do we default to sending the \"new\" name?","username":"troyronda","ts":"2019-07-24T19:52:23.878Z"}
{"msg":"@troyronda Yes, the Aries RFC and the Indy HIPE have effectively the same text and the same concepts/flows. The most substantive difference is that the Aries RFC is still fluid (hence @TelegramSam 's intention to shift its status back to PROPOSED), where the Indy HIPE was more stable. Yes, the new RFC references the old one and says it is superseded. Implementations should be targeting DID Exchange Protocol, IMO--not Indy's Connection Protocol--unless they want to interoperate with code that's frozen to February's Agent Connectathon. It would be easy to write one impl that supports both protocols, given how virtually identical they are--but whether an impl does that or not is up to its authors.","username":"danielhardman","ts":"2019-07-26T16:54:35.451Z"}
{"msg":"I differ from Daniel's view a little in the details. A number of implementers implemented Connections 0.1 that is documented here -  https://hackmd.io/s/HkklVzww4 It was defined for IIW and has had a much longer lifespan than expected. Note that it is significantly different that DID-Exchange in that it does not support preview or the proposal messages.\n\nWe recommend:\n\n- adding \"connections\" as an RFC with an \"Accepted\" status and a notice pointing to the DID-Exchange protocol for new implementation and the context described here.\n- When DID Exchange becomes \"Accepted\", the connections RFC is marked as \"deprecated\" (or whatever term we have).\n- Come up with a way to track implementations so that we know the impact of supporting one, the other or both (which is issue 137)\n\n I deliberate chose to mark connections as \"Accepted\" for now, because it is the de facto accepted protocol, and that pushes the group to agree on DID-Exchange.\n\nI also suggest that we don't lightly change protocol names vs. versions.  I don't think DID-Exchange is significantly better than connections to be worth all this confusion.\n\nFrom an implementation perspective, we did two implementations in parallel as intertwining the two was found to be difficult. Your results may vary.","username":"swcurran","ts":"2019-07-26T17:31:33.388Z"}
{"msg":"Has joined the channel.","username":"talwinder50","ts":"2019-07-31T00:10:32.663Z","type":"uj"}
{"msg":"hello there ","username":"talwinder50","ts":"2019-07-31T00:10:33.385Z"}
{"msg":"Can someone ","username":"talwinder50","ts":"2019-07-31T00:10:51.656Z"}
{"msg":" add me  to the committers group","username":"talwinder50","ts":"2019-07-31T00:11:04.970Z"}
{"msg":"I defer to Stephen about the substantive differences; I guess they're somewhat more meaningful than I realized. Thank you for the correction.\n\nThe remaining difference between my view and Stephen's seems to be in how much we think a hackmd doc needs to be accommodated by an RFC management process. I do agree with Stephen's recommendations for content *inside Aries*; I just don't think we should be reasoning about content that's not embodied in either HIPEs or RFCs, and applying the same standard. For example, the pushback about changing protocol names and versions assumes that there should be some sort of continuity between the hackmd doc and an Aries RFC; I don't think that's crazy, but I also don't think it's a foregone conclusion.\n\nAnyway, if we never write and implement protocols in hackmd again, this is probably a moot point. I'll happily vote to merge Stephen's PR when it's raised. But can we also agree that, although writing a protocol doc in hackmd is fine, the Aries community doesn't have any obligation to protect it with formal change control management until it shows up as an RFC?","username":"danielhardman","ts":"2019-07-31T16:25:49.115Z"}
{"msg":"@swcurran Thanks for pushing us on RFC management a bit. Some things where I'm not clear on who's doing what:\n\n1. Raise a PR that changes the description of our process, introduces FIRST_IMPL as a status, makes our 4-arrow circle into a 5-arrow circle, and changes our index script so it generates a differently sorted and better described list. Have it look up in-between statuses or last-status-update dates to provide better metadata. (Let me know if you're doing this instead.) We can then approve the updated process via the PR.\n\n2. Propose a better status block and a new implementations block for all RFCs, and write a script that adds those blocks to all existing docs.\n\n3. Raise PRs that move a handful of RFCs to ACCEPTED status.","username":"danielhardman","ts":"2019-07-31T20:45:43.653Z"}
{"msg":"@swcurran Thanks for pushing us on RFC management a bit. Some things where I'm not clear on who's doing what:\n\n1. Raise a PR that changes the description of our process, introduces FIRST_IMPL as a status, makes our 4-arrow circle into a 5-arrow circle, and changes our index script so it generates a differently sorted and better described list. Have it look up in-between statuses or last-status-update dates to provide better metadata. We can then approve the updated process via the PR.\n\n2. Propose a better status block and a new implementations block for all RFCs, and write a script that adds those blocks to all existing docs.\n\n3. Raise PRs that move a handful of RFCs to ACCEPTED status.","username":"danielhardman","ts":"2019-07-31T20:45:43.653Z"}
{"msg":"Which ones of these do you want to do? I'll volunteer to help with others. In particular, I can redo the graphic and the script, since I've worked on both.","username":"danielhardman","ts":"2019-07-31T20:46:10.675Z"}
{"msg":"Which ones of these do you want to do? I'll volunteer to help with others. In particular, I can redo the graphic and the indexing script, since I've worked on both.","username":"danielhardman","ts":"2019-07-31T20:46:10.675Z"}
{"msg":"I would definitely appreciate the help with the graphic and the script.  I will do the raising of the PR for the process, and can write/run a script for adding the blocks to the existing docs.  I will raise an issue and will write the \"update all existing docs\" script after we agree on the format.","username":"swcurran","ts":"2019-08-01T18:05:38.914Z"}
{"msg":"I'll include in the PR any clarification needed on the author/facilitators role in doing changing the status - including Kyle's proposal on formating the PR.","username":"swcurran","ts":"2019-08-01T18:07:15.058Z"}
{"msg":"Perfect! I'll start working on the new graphic and the updated indexer.","username":"danielhardman","ts":"2019-08-01T19:49:47.464Z"}
{"msg":"Has joined the channel.","username":"guolidong","ts":"2019-08-02T07:58:39.436Z","type":"uj"}
{"msg":"","username":"danielhardman","ts":"2019-08-05T16:45:32.260Z","attachments":[{"type":"file","title":"possible lifecycle","title_link":"/file-upload/2qvGxFupavpnTEtzh/possible%20lifecycle","image_url":"/file-upload/2qvGxFupavpnTEtzh/possible%20lifecycle","image_type":"image/png","image_size":200383,"url":"/file-upload/2qvGxFupavpnTEtzh/possible%20lifecycle","remote":false,"fileId":"2qvGxFupavpnTEtzh","fileName":"possible lifecycle"}]}
{"msg":"@swcurran, @kdenhartog, @telegramsam What do you think of this graphic? Note that I named the stage between PROPOSED and ACCEPTED \"POC\" instead of \"IMPLEMENTED\". I could also go for \"FIRST IMPL\" if you like that better. And I changed the final phase to RETIRED instead of SUPERSEDED, because that seems to me to cover both the case where someone withdraws an RFC, and the case where the RFC remains around but is superseded or deprecated for some reason.","username":"danielhardman","ts":"2019-08-05T16:47:01.295Z"}
{"msg":"@swcurran, @kdenhartog, @TelegramSam  What do you think of this graphic? Note that I named the stage between PROPOSED and ACCEPTED \"POC\" instead of \"IMPLEMENTED\". I could also go for \"FIRST IMPL\" if you like that better. And I changed the final phase to RETIRED instead of SUPERSEDED, because that seems to me to cover both the case where someone withdraws an RFC, and the case where the RFC remains around but is superseded or deprecated for some reason.","username":"danielhardman","ts":"2019-08-05T16:47:01.295Z"}
{"msg":"@swcurran and @TelegramSam In the updated indexer, I'm thinking I'd like to be able to report the following metadata about each RFC: when its status last changed (so we can tell if proposals are stale), how many impls it has, and what tags are associated with it. This means I need a section for impls that lists them in a way that they are easily countable. I'm thinking something like:\n\n```\n# Implementations\n- [my impl](https://example.com/myimpl) (whatever note you'd like)\n```\n\nHow does that sound?","username":"danielhardman","ts":"2019-08-05T17:02:02.546Z"}
{"msg":"I like the graphic and the name adjustments.  Nice!","username":"swcurran","ts":"2019-08-05T17:32:55.786Z"}
{"msg":"How about DEMONSTRATED instead of POC?","username":"TelegramSam","ts":"2019-08-05T17:58:40.584Z"}
{"msg":"Just to fit in the naming theme a little better.","username":"TelegramSam","ts":"2019-08-05T17:58:50.153Z"}
{"msg":"I've accepted Nikita's PR to the RFC 0036 - Issue Credential Protocol. I don't think his corrections fully address the concerns we had, but he also included the files and instructions on how to update them. https://github.com/hyperledger/aries-rfcs/blob/master/features/0036-issue-credential/README.md","username":"TelegramSam","ts":"2019-08-05T17:59:54.711Z"}
{"msg":"quick tweak PR for BasicMessage: https://github.com/hyperledger/aries-rfcs/pull/148","username":"TelegramSam","ts":"2019-08-05T18:40:26.611Z"}
{"msg":"AFter that, I\"ll be proposing a status change.","username":"TelegramSam","ts":"2019-08-05T18:40:35.066Z"}
{"msg":"OK - 2 points to Sam for \"Demonstrated\".  I'm going to go with that in updating the README.md for the repo.  \n\n@danielhardman - if you want to send me the image you can, or you can add it later.","username":"swcurran","ts":"2019-08-05T19:28:33.175Z"}
{"msg":"Okay, I'll update POC to DEMONSTRATED in the graphic and so forth.","username":"danielhardman","ts":"2019-08-05T19:29:08.825Z"}
{"msg":"FYI - I've just updated all RFCs with an \"Implementations\" section. PR pending.","username":"swcurran","ts":"2019-08-05T19:29:20.092Z"}
{"msg":"FYI - I've just updated all RFCs with an \"Implementations\" section. PR submitted","username":"swcurran","ts":"2019-08-05T19:29:20.092Z"}
{"msg":"FYI - I've just updated all RFCs with an \"Implementations\" section. PR submitted.","username":"swcurran","ts":"2019-08-05T19:29:20.092Z"}
{"msg":"@TelegramSam Your PR for BM is merged.","username":"danielhardman","ts":"2019-08-05T19:30:46.103Z"}
{"msg":"@swcurran Your PR is merged as well.","username":"danielhardman","ts":"2019-08-05T19:31:03.283Z"}
{"msg":"@all I did some work to improve the indexing script. It's substantially cleaner and more useful. It counts and reports/hyperlinks implementations for each indexed item in the new impl section that @swcurran added. It also shows the last status date of each RFC, so we can see what's stalled. And it supports tagging. I have defined and used 4 tags so far; you'll see them when you go look at the latest version of /index.md. \n\nI went in and added links to implementations for a number of RFCs. They are definitely incomplete/imperfect, but even so, it is very encouraging to see how much real progress we've made that we just weren't giving ourselves credit for. This change caused a number of RFCs to move from PROPOSED to DEMONSTRATED status. I went ahead and merged those changes, because this status change is not controversial; it's just a reflection of us having data about impl code. Many of the things that are now in DEMONSTRATED status should probably be in ACCEPTED status instead, but that's a more controversial move and one that I think others might want to advocate.\n\nPlease note: I also added a new unit test that is picky about the metadata at the top of each RFC. Your PRs won't pass unless you follow the format. To find out if you're following the format, run `pytest code` from the root of the repo.","username":"danielhardman","ts":"2019-08-06T07:45:06.486Z"}
{"msg":"Wow you've all been busy while I'm on a hiatus trying to get adjusted here. I'm glad to see the new changes and am in support of all of them. Thanks!","username":"kdenhartog","ts":"2019-08-06T09:51:21.614Z"}
{"msg":"@danielhardman I submitted a PR to aries-rfcs that contains updates for references to Indy Agent updates some of the commentary about Indy Agent in the Agent Explainer: https://github.com/hyperledger/aries-rfcs/pull/161\n\nThis is part of an effort to point people in the right direction as the enter the community","username":"dbluhm","ts":"2019-08-06T14:33:33.491Z"}
{"msg":"@danielhardman I submitted a PR to aries-rfcs that contains updates for references to Indy Agent and updates some of the commentary about Indy Agent in the Agent Explainer: https://github.com/hyperledger/aries-rfcs/pull/161\n\nThis is part of an effort to point people in the right direction as the enter the community","username":"dbluhm","ts":"2019-08-06T14:33:33.491Z"}
{"msg":"@danielhardman I submitted a PR to aries-rfcs that contains updates for references to Indy Agent and updates some of the commentary about Indy Agent in the Agent Explainer: https://github.com/hyperledger/aries-rfcs/pull/161\n\nThis is part of an effort to point people in the right direction as they enter the community","username":"dbluhm","ts":"2019-08-06T14:33:33.491Z"}
{"msg":"@dbluhm the PR is great. I will merge it as soon as I'm on a real computer instead of my mobile phone, unless someone beats me to it. Thank you so much for improving the metadata.","username":"danielhardman","ts":"2019-08-06T14:41:39.118Z"}
{"msg":"@dbluhm merged","username":"danielhardman","ts":"2019-08-06T15:40:23.820Z"}
{"msg":"@swcurran Now that I have a little experience using the `Implementations` section, I want to suggest a couple tweaks:\n\n1. The `Name` column and the `Link` column feel wasteful of screen real estate. If we combined them so `Name` is a phrase that's just hyperlinked, the reading would be streamlined.\n\n2. I think I used the `Implementation Notes` field incorrectly about half the time. I put a description of a codebase there, when what I really ought to do is put a description of the specific implemented feature (e.g., not \"Codebase X has the following characteristics\" but \"The impl of this RFC in codebase X has the following characteristics\"). Do you agree? If so, I'll try to circle back and update.\n\n3. I'm not sure that I chose the best name for each impl. Can owners of each impl please comment? @troyronda @TelegramSam ","username":"danielhardman","ts":"2019-08-06T15:49:01.063Z"}
{"msg":"Also, I am not sure what to do with this section for things that are conceptual. For example, it doesn't seem to make sense on the RFC about repudiation, or JSON-LD compatibility. Should the section be removed as not applicable, or just left empty?","username":"danielhardman","ts":"2019-08-06T15:50:58.648Z"}
{"msg":"Agree on 1 and agree on 2 - good call.\n\nI think we leave the section in for conceptual ones, but less important beyond reference implementations. Nice to have a link to a reference implementation where possible. We can remove later if it's not useful.","username":"swcurran","ts":"2019-08-06T15:55:41.276Z"}
{"msg":"okay","username":"danielhardman","ts":"2019-08-06T15:55:59.555Z"}
{"msg":"PR ready with existing connection protocol: https://github.com/hyperledger/aries-rfcs/pull/160","username":"TelegramSam","ts":"2019-08-06T21:01:56.400Z"}
{"msg":"alongside another PR to demote DID Exchange from Accepted to Proposed: https://github.com/hyperledger/aries-rfcs/pull/164","username":"TelegramSam","ts":"2019-08-06T21:08:18.531Z"}
{"msg":"Both have been merged.","username":"danielhardman","ts":"2019-08-07T00:12:16.688Z"}
{"msg":"does a move to Demonstrated need a waiting period? or just to accepted?","username":"TelegramSam","ts":"2019-08-07T14:18:14.317Z"}
{"msg":"I think it can be merged.  It's the moves to Accepted and Adopted that should get commnunity comments.","username":"swcurran","ts":"2019-08-07T14:31:28.483Z"}
{"msg":"RFC to move return route to demonstrated, with impl links: https://github.com/hyperledger/aries-rfcs/pull/166","username":"TelegramSam","ts":"2019-08-07T14:46:33.802Z"}
{"msg":"@danielhardman @swcurran For aries-framework-go, \"Aries Framework - Go\" / \"Aries Framework Go\" would make sense. (suffixing the implementation language in the name, similar to aries-cloudagent-python.)","username":"troyronda","ts":"2019-08-07T20:04:06.951Z"}
{"msg":"Okay. Do you want to raise a PR that does a search and replace? I can merge it immediately. (I could raise the PR myself; it's easy enough. But I want more contributors to have gravitas in the repo history, not just me.)","username":"danielhardman","ts":"2019-08-07T20:05:12.558Z"}
{"msg":"Will do :).","username":"troyronda","ts":"2019-08-07T20:05:22.904Z"}
{"msg":"We have been wondering about the best place to hold chat conversations for discussing aries-framework-go topics. e.g., coordination, implementation, questions. Have you typically created new channels for this, or used an existing channel (I was a bit worried about polluting an existing channel).","username":"troyronda","ts":"2019-08-07T20:07:58.060Z"}
{"msg":"We have been wondering about the best place to hold chat conversations for discussing aries-framework-go topics. e.g., coordination, implementation, questions. Have you typically created new channels for this, or used an existing channel? (I was a bit worried about polluting an existing channel.)","username":"troyronda","ts":"2019-08-07T20:07:58.060Z"}
{"msg":"I wouldn't mind seeing some of that coordination in #aries ; maybe it's appropriate to use #aries as much as is needed until it becomes a problem?","username":"dbluhm","ts":"2019-08-07T20:10:22.010Z"}
{"msg":"@callahan thanks to the help of @rjones , there is no longer a requirement for PR reviews on aries-sdk-ruby. Once you have recruited some other contributors, we should re-add the review requirement.","username":"esplinr","ts":"2019-08-08T20:41:44.290Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/170","username":"troyronda","ts":"2019-08-09T11:48:07.940Z"}
{"msg":"@rjones - we'd like to have an artifact of the `aries-cloudagent-python` repo be a docker image with aca-py pre-installed, so that it can be the base image for other projects. We're starting with a BCGov repo to build that, but would eventually like that to be a Hyperledger container image (https://hub.docker.com/u/hyperledger).\n\nIs there a process/guidance for doing that?","username":"swcurran","ts":"2019-08-09T20:47:22.997Z"}
{"msg":"@swcurran I can create the repo, and either have it build from github auto-magically or give you admin access to set it up as you like","username":"rjones","ts":"2019-08-09T20:48:27.802Z"}
{"msg":"Cool - should we get it working first in BCGov and then either move it over or recreate it?  The history will be WAY less important vs. aries-cloudagent-python.","username":"swcurran","ts":"2019-08-09T20:49:50.585Z"}
{"msg":"Give me a dockerhub username and a repo name. I'll make them admin and let them set it up as they like. Please send email to community-architects@hyperledger.org with the request so everyone is aware","username":"rjones","ts":"2019-08-09T20:50:52.623Z"}
{"msg":"OK - will do.","username":"swcurran","ts":"2019-08-09T20:54:01.805Z"}
{"msg":"@WadeBarnes @esune - ^^^ - let's talk and work through this.","username":"swcurran","ts":"2019-08-09T20:54:49.200Z"}
{"msg":"Has joined the channel.","username":"WadeBarnes","ts":"2019-08-09T20:54:49.254Z","type":"uj"}
{"msg":"Has joined the channel.","username":"esune","ts":"2019-08-09T20:54:49.255Z","type":"uj"}
{"msg":"@rjones,\nDocker Hub Ids: `wwjbarnes` and `esune`\nRepo Name: `aries-cloudagent-container`,  we started one here, `https://cloud.docker.com/u/bcgovimages/repository/docker/bcgovimages/aries-cloudagent-container`, but we'll redirect to the official one when it's ready.","username":"WadeBarnes","ts":"2019-08-09T21:06:07.795Z"}
{"msg":"@WadeBarnes invites sent. You're both admins of the repo; let me know when it's set up to your satisfaction so I can drop your admin access ","username":"rjones","ts":"2019-08-09T21:08:50.336Z"}
{"msg":"@rjones, Thank-you Sir.  Will do.","username":"WadeBarnes","ts":"2019-08-09T21:12:10.228Z"}
{"msg":"@rjones me and @WadeBarnes were thinking that `aries-cloudagent-container` is a bit redundant for Docker Hub and we should instead name the repo `aries-cloudagent`. Could you delete the old repo and create a new one with the \"new\" name?","username":"esune","ts":"2019-08-12T23:08:12.108Z"}
{"msg":"@rjones @WadeBarnes and I were thinking that `aries-cloudagent-container` is a bit redundant for Docker Hub and we should instead name the repo `aries-cloudagent`. Could you delete the old repo and create a new one with the \"new\" name?","username":"esune","ts":"2019-08-12T23:08:12.108Z"}
{"msg":"@rjones : @WadeBarnes and I were thinking that `aries-cloudagent-container` is a bit redundant for Docker Hub and we should instead name the repo `aries-cloudagent`. Could you delete the old repo and create a new one with the \"new\" name?","username":"esune","ts":"2019-08-12T23:08:12.108Z"}
{"msg":"If it's good with @WadeBarnes will do","username":"rjones","ts":"2019-08-12T23:08:30.658Z"}
{"msg":"Good with me.","username":"WadeBarnes","ts":"2019-08-12T23:09:10.805Z"}
{"msg":"https://cloud.docker.com/u/hyperledger/repository/docker/hyperledger/aries-cloudagent","username":"rjones","ts":"2019-08-12T23:09:33.153Z"}
{"msg":"Thanks!","username":"esune","ts":"2019-08-12T23:09:42.997Z"}
{"msg":"Thanks @rjones ","username":"WadeBarnes","ts":"2019-08-12T23:15:38.577Z"}
{"msg":"I missed the meeting again today, I wanted to ask about moving `streetcred-id/agent-framework` to an aries- repo. I'm not sure if `aries-sdk-dotnet` would be the appropriate destination, or a new repo `aries-agentframework-dotnet`. The current codebase has no namespacing or branding related to streetcred.id, so refactoring should be minimal.","username":"tomislav","ts":"2019-08-13T02:00:06.670Z"}
{"msg":"We talked about this previously, but I never got around to push this, and we've been sitting at a stable version for a while now, seems like the right time to do it.","username":"tomislav","ts":"2019-08-13T02:01:08.251Z"}
{"msg":"I think the name `aries-framework-dotnet` is the right name. Same pattern that `go` framework team is using.","username":"swcurran","ts":"2019-08-13T17:33:26.992Z"}
{"msg":"I'm excited to see it move forward @tomislav . Thank you for the contribution!","username":"esplinr","ts":"2019-08-14T20:05:58.429Z"}
{"msg":"@danielhardman @TelegramSam or @swcurran (I think you can do this as well) If you feel that the RFC #0036 is no longer blocked would you mind removing the label? I'm not sure if I marked the PR as blocked, which I wanted to do so we could manage the deadline properly.","username":"kdenhartog","ts":"2019-08-15T22:56:26.228Z"}
{"msg":"@danielhardman @TelegramSam or @swcurran (I think you can do this as well) If you feel that the RFC #0036/#0037 is no longer blocked would you mind removing the label? I'm not sure if I marked the PR as blocked, which I wanted to do so we could manage the deadline properly.","username":"kdenhartog","ts":"2019-08-15T22:56:26.228Z"}
{"msg":"Release 0.3.1 of `aries-cloudagent-python` is now available in github and pypi.  This is largely a cleanup release (TAA tweaks - thanks to the community) but with a couple of new features.\n\nhttps://github.com/hyperledger/aries-cloudagent-python/releases/tag/0.3.1\n\nhttps://pypi.org/project/aries-cloudagent/0.3.1/","username":"swcurran","ts":"2019-08-15T23:20:09.506Z"}
{"msg":"Release 0.3.1 of `aries-cloudagent-python` is now available in github and pypi.  This is (mostly) a cleanup release (TAA tweaks - thanks to the community) but with a couple of new features.\n\nhttps://github.com/hyperledger/aries-cloudagent-python/releases/tag/0.3.1\n\nhttps://pypi.org/project/aries-cloudagent/0.3.1/","username":"swcurran","ts":"2019-08-15T23:20:09.506Z"}
{"msg":"@tomislav When you get this into an Aries repo, please submit a PR that updates all the Implementation sections at the bottom of RFCs, so they point to your new project instead of the old home. Also please update github.com/aries/README.md to reference it.\n\nSuper exciting!","username":"danielhardman","ts":"2019-08-16T02:01:23.975Z"}
{"msg":"Just got off a call with someone with whom I was talking about Aries.  Found out that because of their indoctrination with the historical terms \"Edge/Cloud\" agent, they didn't understand that `aries-cloudagent-python` could be an edge agent.  I don't know what we can do about that other than to rename ACA-Py to `aries-notmobileagent-python` :-)\n\nToo bad that those terms have become so well used.  Any thoughts on if we should change anything or just explain it to people that get confused by the terms?  We should reconsider and just go with `aries-agent-python`.  Anyone with the least bit of knowledge about Python would equate that to `aries-notmobileagent-python`","username":"swcurran","ts":"2019-08-16T20:19:41.118Z"}
{"msg":"+1 to removing the deployment context from the naming convention","username":"jljordan_bcgov","ts":"2019-08-17T03:20:08.171Z"}
{"msg":"AAPy is so much harder to vocalize than ACAPy. It needs a consonant. ANMAPy works alright. grin","username":"esplinr","ts":"2019-08-17T04:37:29.121Z"}
{"msg":"@swcurran I'm all for changing those names and left the issue on the subject open. https://github.com/hyperledger/aries-rfcs/issues/122\nEven if we don't go with the term \"Custodial\" (I still think it provides a good distinction) we need better language to describe the diversity of agents in the ecosystem.","username":"kdenhartog","ts":"2019-08-18T22:14:20.926Z"}
{"msg":"I think any name we choose will have some naming issue... I wonder how far we can get by including naming information near the top of the various repo README files. Will that help enough?","username":"TelegramSam","ts":"2019-08-19T20:46:03.509Z"}
{"msg":"It might and should be done. But since any name is bad, we'd like to change to ACA-Py to `aries-agent-python`.  Any objections? ","username":"swcurran","ts":"2019-08-19T20:52:21.253Z"}
{"msg":"I don't think it's a good idea.","username":"TelegramSam","ts":"2019-08-19T21:09:38.858Z"}
{"msg":"Any reason?","username":"swcurran","ts":"2019-08-19T21:49:33.158Z"}
{"msg":"When there is an option to be succinct it’s usually a good option. ","username":"jljordan_bcgov","ts":"2019-08-19T22:32:40.321Z"}
{"msg":"Taxonomies work when there are cultural norms ... something we can’t easily achieve with a global scope ","username":"jljordan_bcgov","ts":"2019-08-19T22:33:56.208Z"}
{"msg":"So simple names ... describe in readme ","username":"jljordan_bcgov","ts":"2019-08-19T22:34:15.466Z"}
{"msg":"Simple names can also lead to confusion. ","username":"TelegramSam","ts":"2019-08-19T22:41:12.652Z"}
{"msg":"I think we are young in the process to be changing a name. I don't directly object to the new proposed name, but I worry that we will learn so much in the next 6 months that it might lead us to choose a better name.","username":"TelegramSam","ts":"2019-08-19T22:42:19.836Z"}
{"msg":"I'm not saying the current repo name is awesome.","username":"TelegramSam","ts":"2019-08-19T22:44:18.831Z"}
{"msg":"I'm worried that given a lack of good names for the landscape of agents in our current ecosystem, we are unlikely to choose one without significant problems of it's own.","username":"TelegramSam","ts":"2019-08-19T22:45:42.495Z"}
{"msg":"My preference is to update readmes now, and work to mature the naming of things within the ecosystem. as it settles, perform the repo rename then.","username":"TelegramSam","ts":"2019-08-19T22:46:20.285Z"}
{"msg":"I tend to agree that it could lead to confusion. The naming is going to set the mental model, and I'm concerned in not distinguishing between a cloud agent and an edge agent. From a personal user perspective (not a business) it's a generally accepted paradigm that they should preference an edge agent with a cloud agent approach over a cloud agent with a rest controller app. This is because by doing the latter has a strong incentive to not be run on user owned hardware which in turn undermines the users control.","username":"kdenhartog","ts":"2019-08-19T22:55:30.349Z"}
{"msg":"My read of what you are saying is @kdenhartog is exactly why it shouldn't be called \"cloudagent\".  Given the original (circa-2016/17) \"cloud\" and \"edge\" agent terms from Sovrin, ACA-Py is either one.  In that terminology an edge agent != mobile agent which is what you seem to be implying.\n\nThe only limitation on ACA-Py's use is that it won't run on as a mobile agent and so would generally not be used by a personal user.  It can be an enterprise edge agent, an enterprise cloud agent, an agency endpoint, and a personal cloud agent.  It could be a personal edge agent, if a person doesn't want to run their edge agent on a mobile device.","username":"swcurran","ts":"2019-08-19T23:03:12.886Z"}
{"msg":"My read of what you are saying is @kdenhartog is exactly why it (ACA-Py) shouldn't be called \"cloudagent\".  Given the original (circa-2016/17) \"cloud\" and \"edge\" agent terms from Sovrin, ACA-Py is either one.  In that terminology an edge agent != mobile agent which is what you seem to be implying.\n\nThe only limitation on ACA-Py's use is that it won't run on as a mobile agent and so would generally not be used by a personal user.  It can be an enterprise edge agent, an enterprise cloud agent, an agency endpoint, and a personal cloud agent.  It could be a personal edge agent, if a person doesn't want to run their edge agent on a mobile device.","username":"swcurran","ts":"2019-08-19T23:03:12.886Z"}
{"msg":"We concern right now is those (IMHO) old terms is that are in common use in the community.","username":"swcurran","ts":"2019-08-19T23:04:02.166Z"}
{"msg":"My concern right now is those (IMHO) old terms is that are in common use in the community.","username":"swcurran","ts":"2019-08-19T23:04:02.166Z"}
{"msg":"My concern right now is those (IMHO) old terms is that are in common use in the community today.","username":"swcurran","ts":"2019-08-19T23:04:02.166Z"}
{"msg":"It can also become an impersonator agent, which is the paradigm I want to avoid occurring. If we find a way to explicitly prevent developers from selecting that solution than I'm open to anything. So far, I don't feel that we've found a mental model that highlights all the solutions you provided while also excluding the impersonator paradigm.","username":"kdenhartog","ts":"2019-08-19T23:08:14.393Z"}
{"msg":"??  What's an impersonator agent?  It don't see how that relates to the discussion.","username":"swcurran","ts":"2019-08-19T23:37:24.157Z"}
{"msg":"It’s an agent. We all agree on that. ","username":"jljordan_bcgov","ts":"2019-08-19T23:45:01.286Z"}
{"msg":"Now it’s deployed will be up to the adoptor ... the the case of the python agent ... it won’t be on a phone afaik. ","username":"jljordan_bcgov","ts":"2019-08-19T23:45:35.279Z"}
{"msg":"How it’s deployed will be up to the adoptor ... the the case of the python agent ... it won’t be on a phone afaik. ","username":"jljordan_bcgov","ts":"2019-08-19T23:45:35.279Z"}
{"msg":"It will be (we hope) in all kinds of surprising and useful (hopefully) ways we can’t predict. ","username":"jljordan_bcgov","ts":"2019-08-19T23:47:43.303Z"}
{"msg":"It will be deployed (we hope) in all kinds of surprising and useful (hopefully) ways we can’t predict. ","username":"jljordan_bcgov","ts":"2019-08-19T23:47:43.303Z"}
{"msg":"an impersonator agent is a paradigm where the agent host has the capability (whether used or not) to impersonate the user.  For example, if Google decides to host personal agents for their users and only offers a cloud agent with a REST controller app. Then Google has the capability to impersonate the user (e.g. sending credentials without user consent) or to perform analytics and data tracking on the users habits (similar to what Google already does).","username":"kdenhartog","ts":"2019-08-20T00:03:41.515Z"}
{"msg":"an impersonator agent is a paradigm where the agent host has the capability (whether used or not) to impersonate the user.  For example, if Google decides to host personal agents for their users and only offers a cloud agent with a REST controller app then Google has the capability to impersonate the user (e.g. sending credentials without user consent) or to perform analytics and data tracking on the users habits (similar to what Google already does).","username":"kdenhartog","ts":"2019-08-20T00:03:41.515Z"}
{"msg":"I don't want to encourage that because it violates many of the principles of SSI.","username":"kdenhartog","ts":"2019-08-20T00:04:03.087Z"}
{"msg":"Although the cloud agent term is too narrow, the plain agent term is too broad. How about server agent?","username":"danielhardman","ts":"2019-08-20T01:29:40.943Z"}
{"msg":"And the name of a repo will prevent that?","username":"jljordan_bcgov","ts":"2019-08-20T02:03:18.497Z"}
{"msg":"Implicitly I believe it will if it sets the wrong expectations for the consumer of the repo.","username":"kdenhartog","ts":"2019-08-20T02:04:01.101Z"}
{"msg":"We can argue until we are blue i the face to no resolution. I can be confident that stuff we build\nWill be used in harmful ways. ","username":"jljordan_bcgov","ts":"2019-08-20T02:06:07.949Z"}
{"msg":"We have roads and cars.  ","username":"jljordan_bcgov","ts":"2019-08-20T02:06:58.821Z"}
{"msg":"Making sure we're telling a good story and setting a right vision is important though. That's what naming is about. If we pick bad names we set ourselves up for encouraging the poor usage. For example SSI albeit controversial it's an excellent name for setting the mental model that differentiates the paradigm from other identity models like federated and centralized identity.","username":"kdenhartog","ts":"2019-08-20T02:09:30.130Z"}
{"msg":"Making sure we're telling a good story and setting a right vision is important though. That's what naming is about. If we pick bad names we set ourselves up for encouraging the poor usage. For example Self sovereign identity albeit controversial it's an excellent name for setting the mental model that differentiates the paradigm from other identity models like federated and centralized identity.","username":"kdenhartog","ts":"2019-08-20T02:09:30.130Z"}
{"msg":"In the beginning we didn't call centralized identity that. We just called it Identity and Access Management. Then when we learned and differentiate the difference between Federated and Centralized, we brought in new language. \n\nWhat I hear is being suggested is we want to go from a model that sets a paradigm (cloud and edge) and move back to one without paradigms. I think that's a move in the wrong direction.","username":"kdenhartog","ts":"2019-08-20T02:11:43.770Z"}
{"msg":"My argument is that we should be picking names that preserve the story that was originally told when we set out on build self sovereign identity. If people want to build impersonator agents than UMA may be a better paradigm for them to look at because it's been designed with those paradigms in mind.","username":"kdenhartog","ts":"2019-08-20T02:17:01.630Z"}
{"msg":"In the end implementation and regulation if needed will set the conditions for what arises. \n","username":"jljordan_bcgov","ts":"2019-08-20T02:20:51.290Z"}
{"msg":"Of course we do our best to design and describe this stuff to meet the objectives of protecting citizens etc","username":"jljordan_bcgov","ts":"2019-08-20T02:21:56.206Z"}
{"msg":"Certainly, and the story we tell makes a difference in how regulators (who may not understand what they're regulating to the fullest extent) and developers will use the technology. That's why I'm a stickler for preserving the story to it's original intent. I don't want another OIDC situation where OIDC is designed well in theory and then the largest implementation get's used to abuse user rights (Facebook).","username":"kdenhartog","ts":"2019-08-20T02:33:25.413Z"}
{"msg":"Well. I guess that is why I do what I do. Because I have those discussions with the regulators. ","username":"jljordan_bcgov","ts":"2019-08-20T02:35:39.971Z"}
{"msg":"And I appreciate and trust you'll set their expectations properly. I'm not sure that a drive by developer consuming the package will understand this because it's very much tribal knowledge at this point.","username":"kdenhartog","ts":"2019-08-20T02:36:35.241Z"}
{"msg":"I've started writing a RFC for concepts so that this would be less of a concern. Then calling it something like a server agent feels like it could be a potential middle ground. Would that feel like a better name than cloud agent for you?","username":"kdenhartog","ts":"2019-08-20T02:37:44.115Z"}
{"msg":"I've started writing a RFC to explain this concept so that we can explicitly call it out as an anti pattern. Then calling it something like a server agent feels like it could be a potential middle ground. Would that feel like a better name than cloud agent for you?","username":"kdenhartog","ts":"2019-08-20T02:37:44.115Z"}
{"msg":"Lots more to do to tell the story well ... and it will be at a level well above repos and RFC for the decision makers that drive adoption.  ","username":"jljordan_bcgov","ts":"2019-08-20T02:38:48.034Z"}
{"msg":"Yup definitely. Many people including yourself have done a good job telling the story. Let's keep it consistent in the repos as well.","username":"kdenhartog","ts":"2019-08-20T02:39:36.479Z"}
{"msg":"The terminology of \"cloud\" vs. \"edge\" has a long and troubled history. Originally we believed that \"cloud\" and \"edge\" were good opposites and that they represented distinctions of trust. We've since realized that there could be untrusted edge agents (rare, but possible), or fully trusted cloud agents (also rare, but possible). So \"edge\" and \"cloud\" have more to do with location and less to do with trust. RFC 0004: Agents now has a section that discusses these terms; see https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0004-agents#categorizing-agents.\n\nIf you read that section of the RFC, I think you inevitably come to the conclusion that @swcurran and @jljordan_bcgov are correct to want the term \"cloud\" removed from their codebase name; there is nothing about the codebase that has strong alignment with cloud-based hosting.\n\nThe RFC suggests using the platform of an agent as a form of categorization. If you do that, then \"mobile\" and \"server\" are pretty good opposites, and a \"server agent\" does convey pretty well what the acapy codebase's focus is. It could be used as an edge agent or a cloud agent--but either way, it's definitely running a web server, and it's likely running on a machine that acts as a server. (Although it could be run on desktop hardware, its utility as an agent depends on it listening on a port for incoming communication, which makes it more truly server-like.)\n\nSo that's why I suggested changing the name to \"Aries Server Agent - Python\".","username":"danielhardman","ts":"2019-08-20T14:10:57.623Z"}
{"msg":"new PR that needs merging (Coin Flip Protocol): https://github.com/hyperledger/aries-rfcs/pull/193","username":"danielhardman","ts":"2019-08-20T14:33:09.702Z"}
{"msg":"Could a maintainer please review and merge?","username":"danielhardman","ts":"2019-08-20T14:33:22.647Z"}
{"msg":"\n","username":"jljordan_bcgov","ts":"2019-08-20T15:01:53.910Z"}
{"msg":"Thanks Mr @danielhardman ... It think it is better in that it is less subject to interpretation as you describe... we have already had someone get ACA-Py (maybe AServ-Py :) ) running on a Raspberry Pi  ","username":"jljordan_bcgov","ts":"2019-08-20T15:02:02.809Z"}
{"msg":"Which seems server like for sure\nOne of the other interesting dimension is the agent primarily human controlled .. ie a person is interacting usually in real time to respond to connection creations, credential exchanges (they could pre-authorize) or is the agent controlled by software that is responded according to programmed business rules","username":"jljordan_bcgov","ts":"2019-08-20T15:03:53.025Z"}
{"msg":"Also Fellow Maintainers: We have two RFC status changes to act on today.","username":"TelegramSam","ts":"2019-08-20T15:46:35.174Z"}
{"msg":"95 BasicMessage has no objections.","username":"TelegramSam","ts":"2019-08-20T15:47:37.217Z"}
{"msg":"I will merge it.","username":"danielhardman","ts":"2019-08-20T17:54:23.539Z"}
{"msg":"@TelegramSam Can you resolve the merge conflict in index.md?","username":"danielhardman","ts":"2019-08-20T17:55:33.218Z"}
{"msg":"Never mind. Merged.","username":"danielhardman","ts":"2019-08-20T19:13:38.164Z"}
{"msg":"Has joined the channel.","username":"jonathanreynolds","ts":"2019-08-20T20:52:04.289Z","type":"uj"}
{"msg":"PRd details about how to DCO commit https://github.com/hyperledger/aries-rfcs/pull/195 Can a maintainer review it and merge?","username":"kdenhartog","ts":"2019-08-21T00:36:56.626Z"}
{"msg":"PR to move Indy NodeJS wrapper code https://github.com/hyperledger/aries-sdk-javascript/pull/1","username":"jadhavajay","ts":"2019-08-21T15:42:19.918Z"}
{"msg":"PR up to move agent-framework to aries-framerowk-dotnet - https://github.com/hyperledger/aries-framework-dotnet/pull/2","username":"tomislav","ts":"2019-08-22T15:05:49.842Z"}
{"msg":"Has joined the channel.","username":"kengeo","ts":"2019-08-23T03:56:12.511Z","type":"uj"}
{"msg":"@tomislav Can I get you to submit an Aries RFCs PR that updates the references to the Streetcred framework in the impl section at the bottom of many Aries RFCs to be a reference to your new framework repo?","username":"danielhardman","ts":"2019-08-23T20:56:10.271Z"}
{"msg":"@kdenhartog or @swcurran or @TelegramSam : Could one of you approve and merge this minor PR? https://github.com/hyperledger/aries-rfcs/pull/200","username":"danielhardman","ts":"2019-08-23T20:57:12.477Z"}
{"msg":"@swcurran and @jljordan_bcgov : Did we get to closure on renaming acapy?","username":"danielhardman","ts":"2019-08-23T20:58:08.553Z"}
{"msg":"I ask because I'm revising the root README in the aries (not aries-rfcs) repo, and I want to use the canonical, new name.","username":"danielhardman","ts":"2019-08-23T20:58:35.849Z"}
{"msg":"We're not going to bother now. IMHO the proposed options are at best slightly better.  We'll wait on the next round of naming that Sam suggested was coming :-).","username":"swcurran","ts":"2019-08-23T21:07:47.596Z"}
{"msg":"Done. And I've added a question to the PR.  Why does this RFC exist, or at least exist as a core protocol?","username":"swcurran","ts":"2019-08-23T21:18:38.539Z"}
{"msg":"Yes. I'm on it.","username":"tomislav","ts":"2019-08-23T21:53:57.854Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT) @swcurran I'm all for making this happen sooner rather than later. I sympathize with the problem that cloud/edge paradigm needs replaced. I came in a too hot regarding changing the name and wasn't trying to prevent us from moving away from that paradigm. I'll keep thinking about it. From your perspective should the paradigm choose words that are more common to tech minded people or business minded people or both? I wonder if we're trying to address different audiences here which is leading to us not finding a resolution.","username":"kdenhartog","ts":"2019-08-24T01:14:52.391Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@swcurran I'm all for making this happen sooner rather than later. I sympathize with the problem that cloud/edge paradigm needs replaced. I came in too hot regarding changing the name and wasn't trying to prevent us from moving away from that paradigm. I'll keep thinking about it. From your perspective should the paradigm choose words that are more common to tech minded people or business minded people or both? I wonder if we're trying to address different audiences here which is leading to us not finding a resolution.","username":"kdenhartog","ts":"2019-08-24T01:14:52.391Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@swcurran I'm all for making this happen sooner rather than later. I sympathize with the problem that cloud/edge paradigm needs replaced. I came in too hot regarding changing the name and wasn't trying to prevent us from moving away from that paradigm. Sorry for that. I'll keep thinking about it. From your perspective should the paradigm choose words that are more common to tech minded people or business minded people or both? I wonder if we're trying to address different audiences here which is leading to us not finding a resolution.","username":"kdenhartog","ts":"2019-08-24T01:14:52.391Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@swcurran I'm all for making this happen sooner rather than later. I sympathize with the problem that cloud/edge paradigm needs replaced. I came in too hot regarding changing the name and wasn't trying to prevent us from moving away from that paradigm. Sorry for that @jljordan_bcgov . I'll keep thinking about it. From your perspective should the paradigm choose words that are more common to tech minded people or business minded people or both? I wonder if we're trying to address different audiences here which is leading to us not finding a resolution.","username":"kdenhartog","ts":"2019-08-24T01:14:52.391Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=GF9xRqwT6Pnj54XWT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/203","username":"tomislav","ts":"2019-08-24T13:34:16.247Z"}
{"msg":"Hi - I could use some help finding missing voters from Evernym: https://github.com/ryjones/tsc-missing/blob/master/missing.csv","username":"rjones","ts":"2019-08-30T15:39:09.132Z"}
{"msg":"Ry: All of the people on that list who show as affiliated with Evernym are working in different places right now. I'm not sure of their involvement with Hyperledger, with one exception. Matt Raffel is now working for Kiva but attends the Hyperledger community calls and is actively maintaining Indy SDK. I believe his rocketchat handle is `@MattRaffel`","username":"danielhardman","ts":"2019-08-30T19:56:32.711Z"}
{"msg":"Merged PR #158.","username":"danielhardman","ts":"2019-08-30T19:58:06.105Z"}
{"msg":"^ @swcurran @esplinr @kithat @sergey.minaev ","username":"danielhardman","ts":"2019-08-30T19:58:38.615Z"}
{"msg":"Has joined the channel.","username":"sergey.minaev","ts":"2019-08-30T19:58:38.650Z","type":"uj"}
{"msg":"@danielhardman I appreciate that they've moved on - and I forgot Matt at Kiva has a ballot. Even if the involvement is low, they still have the right to cast a ballot. That's why I'm trying to find them","username":"rjones","ts":"2019-08-30T20:00:05.273Z"}
{"msg":"I am connected to most of them on linkedin and may have their personal emails that way. I can DM them to you...","username":"danielhardman","ts":"2019-08-30T20:01:40.510Z"}
{"msg":"Jumping on a call right now; give me an hour.","username":"danielhardman","ts":"2019-08-30T20:01:51.286Z"}
{"msg":"sure, thank you","username":"rjones","ts":"2019-08-30T20:02:58.435Z"}
{"msg":"Anybody free (working on US Labor Day, not traveling to RWOT) to merge a new PR in aries-rfcs? https://github.com/hyperledger/aries-rfcs/pull/209 @kdenhartog @swcurran @TelegramSam ","username":"danielhardman","ts":"2019-09-02T14:47:15.388Z"}
{"msg":"Anybody free (working on US Labor Day, not traveling to RWOT) to merge a new PR in aries-rfcs? https://github.com/hyperledger/aries-rfcs/pull/210 @kdenhartog @swcurran @TelegramSam ","username":"danielhardman","ts":"2019-09-02T14:47:15.388Z"}
{"msg":"@ry: I accidentally created a branch: indy-hipe/sipmaster. I can't delete it because it became protected once I pushed it. Can you please remove it for me?","username":"danielhardman","ts":"2019-09-03T17:01:50.283Z"}
{"msg":"I have three new RFCs in proposed state in the repo. Thanks in advance.","username":"TelegramSam","ts":"2019-09-04T18:21:56.467Z"}
{"msg":"This is super important: you have a new, Aries-specific emoji. `:aries:`","username":"rjones","ts":"2019-09-04T22:27:37.731Z"}
{"msg":"This is super important: you have a new, Aries-specific emoji. `:h-aries:`","username":"rjones","ts":"2019-09-04T22:27:37.731Z"}
{"msg":":h-aries: ","username":"rjones","ts":"2019-09-04T22:28:41.435Z"}
{"msg":"new PR proposing an RFC: https://github.com/hyperledger/aries-rfcs/pull/216","username":"danielhardman","ts":"2019-09-10T19:25:11.208Z"}
{"msg":"And another one: https://github.com/hyperledger/aries-rfcs/pull/217","username":"danielhardman","ts":"2019-09-10T19:35:22.773Z"}
{"msg":"And another: https://github.com/hyperledger/aries-rfcs/pull/218\nThis last one introduces the concept of delegatable credentials, and covers how they can be built with either ZKP-based or non-ZKP-based creds. I had to make some updates to existing RFC 0103 (indirect identity control), which is why it looks bigger than you might expect.","username":"danielhardman","ts":"2019-09-11T01:18:43.538Z"}
{"msg":"@ry, can you turn on issues for the aries-protocol-test-suite repo?","username":"danielhardman","ts":"2019-09-11T15:57:50.541Z"}
{"msg":"@rjones , can you turn on issues for the aries-protocol-test-suite repo?","username":"danielhardman","ts":"2019-09-11T15:57:50.541Z"}
{"msg":"done","username":"rjones","ts":"2019-09-11T16:32:25.314Z"}
{"msg":"@all: I have raised a PR that makes the protocol test suite more important. It updates our docs to say that we can't give an RFC the ACCEPTED status unless we have tests for it in the test suite, and we have at least one impl that passes those tests. It also adds a unit test to enforce this logic. I would like to discuss on today's \"B\" call with the Aries community.","username":"danielhardman","ts":"2019-09-11T17:06:10.187Z"}
{"msg":"@all: I have raised a PR that makes the protocol test suite more important. It updates our docs to say that we can't give a protocol RFC the ACCEPTED status unless we have tests for it in the test suite, and we have at least one impl that passes those tests. It also adds a unit test to enforce this logic. I would like to discuss on today's \"B\" call with the Aries community.","username":"danielhardman","ts":"2019-09-11T17:06:10.187Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/220","username":"danielhardman","ts":"2019-09-11T17:06:25.546Z"}
{"msg":"@esplinr @smithbk @jadhavajay I did a force-push to master on the repo. I didn't see there was a pull request in flight. Sorry. https://github.com/hyperledger/aries-sdk-javascript/pull/1 was closed by that action, and I can't reopen it directly. If you @jadhavajay rebases on top of the new master, I think it can be re-opened.","username":"rjones","ts":"2019-09-11T19:52:05.254Z"}
{"msg":"Has joined the channel.","username":"smithbk","ts":"2019-09-11T19:52:05.307Z","type":"uj"}
{"msg":"As noted in the #aries, there was no recording made of todays call - no one there could push the record button. \n\nHow do we make sure that we can record Working Group meetings in the future?  At minimum, we need to know who is authorized to be a Zoom host on the Aries Working Group calls and push the record button.  Ideally, we explicitly hand over both the meeting host and Zoom host roles for all future meetings.  I had thought @kenebert had the power and made sure he was on the meeting, but he wasn't the host.  Thanks!\n\n@nage @TelegramSam ","username":"swcurran","ts":"2019-09-11T22:37:13.468Z"}
{"msg":"As noted in the #aries, there was no recording made of todays call - no one there could push the record button. \n\nHow do we make sure that we can record Working Group meetings in the future?  At minimum, we need to know who is authorized to be a Zoom host on the Aries Working Group calls and push the record button.  Ideally, we explicitly hand over both the meeting host and Zoom host roles for all future meetings.  I had thought @kenebert had the power and made sure he was on the meeting, but he wasn't the host.\n@nage @TelegramSam ","username":"swcurran","ts":"2019-09-11T22:37:13.468Z"}
{"msg":"Has joined the channel.","username":"nage","ts":"2019-09-11T22:37:13.518Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kenebert","ts":"2019-09-11T22:37:13.519Z","type":"uj"}
{"msg":"Ouch...that \"Thanks!\" sounded sarcastic - it wasn't suppose to!!!!!","username":"swcurran","ts":"2019-09-11T22:38:32.890Z"}
{"msg":"I meant - thanks for helping out with coming up with a solution that will work :-).","username":"swcurran","ts":"2019-09-11T22:38:53.413Z"}
{"msg":"I thought I had record privileges (since I had been able to record other meetings), but I didn't. Nor could I find anyone who had them. I agree we need to clearly designate who has record privileges and a process for passing control when all hosts are unable to attend.","username":"kenebert","ts":"2019-09-11T22:40:03.884Z"}
{"msg":"@SeanBohan had a way that he was able to designate shared hosts from the host's account. This allowed me to be able to record the Indy meetings in the past. I believe there's a setting in Zoom web app to toggle this feature.","username":"kdenhartog","ts":"2019-09-12T00:33:23.640Z"}
{"msg":"Has joined the channel.","username":"SeanBohan","ts":"2019-09-12T00:33:23.671Z","type":"uj"}
{"msg":"@swcurran I was disappointed with how the call was setup.  We usually set the meeting to auto-record and also add everyone else in the org as alternative hosts.  It looks like we haven't done either yet with the Aries appointments","username":"nage","ts":"2019-09-12T14:24:07.261Z"}
{"msg":"we will look at all the meeting appointments and fix the defaults going forward","username":"nage","ts":"2019-09-12T14:24:45.251Z"}
{"msg":"Awesome - thanks, @nage.  Sam's away next week again and I'm hosting so we can verify all is well.","username":"swcurran","ts":"2019-09-12T14:44:31.564Z"}
{"msg":"The big challenge is that Zoom doesn't allow co-hosts from a different organization.","username":"esplinr","ts":"2019-09-12T15:28:59.790Z"}
{"msg":"We have community Zoom accounts which you can use.","username":"rjones","ts":"2019-09-12T15:44:15.970Z"}
{"msg":"which have other problems - I know! but they exist.","username":"rjones","ts":"2019-09-12T15:44:27.592Z"}
{"msg":"Sure, @rjones . I will try to rebase and will re-open the PR","username":"jadhavajay","ts":"2019-09-12T17:13:07.345Z"}
{"msg":"I apologize for the turbulence.","username":"rjones","ts":"2019-09-12T17:54:47.806Z"}
{"msg":"Raised the PR again - https://github.com/hyperledger/aries-sdk-javascript/pull/4","username":"jadhavajay","ts":"2019-09-13T09:26:24.921Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-maintainers?msg=97HLNeJFyNq4ciPL3) No problem :thumbsup: ","username":"jadhavajay","ts":"2019-09-13T09:27:03.173Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=97HLNeJFyNq4ciPL3","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=97HLNeJFyNq4ciPL3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-09-16T15:35:16.287Z","type":"ul"}
{"msg":"@george.aristy called to attention the fact that the signature decorator is currently undocumented in aries-rfcs. I had to dig quite a bit to find the original proposed HIPE that introduced it. As the `did-exchange` protocol depends on being able to sign a field, this ought to be resolved quickly -- especially with implementations intending to cut over to did-exchange after IIW. Issue reference: https://github.com/hyperledger/aries-rfcs/issues/228","username":"dbluhm","ts":"2019-09-24T14:05:30.310Z"}
{"msg":"@rjones Can I chat with you live (e.g., over zoom) about https://github.com/hyperledger/aries-rfcs/issues/225?","username":"danielhardman","ts":"2019-09-24T16:17:27.255Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-09-24T16:17:27.290Z","type":"uj"}
{"msg":"sure - not sure what I can add, but yes","username":"rjones","ts":"2019-09-24T16:32:37.332Z"}
{"msg":"Has left the channel.","username":"sklump","ts":"2019-09-24T16:33:25.387Z","type":"ul"}
{"msg":"https://zoom.us/j/8013612445","username":"danielhardman","ts":"2019-09-24T16:34:19.336Z"}
{"msg":"@rjones https://zoom.us/j/8013612445","username":"danielhardman","ts":"2019-09-24T16:34:19.336Z"}
{"msg":"@dbluhm thank you!","username":"george.aristy","ts":"2019-09-24T18:57:31.936Z"}
{"msg":"@kdenhartog can you please advise us on that issue?","username":"george.aristy","ts":"2019-09-24T18:57:53.731Z"}
{"msg":"@kdenhartog can you please advise us on this issue?","username":"george.aristy","ts":"2019-09-24T18:58:15.816Z"}
{"msg":"In regards to the ~sig work, I think it's fine to keep things as they are in did-exchange protocol but the intent is to be using JWS for signing rather than the object I originally created for the ~sig decorator. If you only want to write one, then JWS would be better because that's what's being used in the crypto layer as well. However, it hasn't been documented because I've been caught up with work on products at Mattr and haven't had time to write the new documents like I originally stated awhile ago.","username":"kdenhartog","ts":"2019-09-24T23:44:19.206Z"}
{"msg":"In regards to the `~sig` work, I think it's fine to keep things as they are in did-exchange protocol but the intent is to be using JWS for signing rather than the object I originally created for the `~sig` decorator. If you only want to write one, then JWS would be better because that's what's being used in the crypto layer as well. However, it hasn't been documented because I've been caught up with work on products at Mattr and haven't had time to write the new documents like I originally stated awhile ago.","username":"kdenhartog","ts":"2019-09-24T23:44:19.206Z"}
{"msg":"In regards to the `~sig` work, I think it's fine to keep things as they are in did-exchange protocol but the intent is to be using JWS for signing rather than the object I originally created for the `~sig` decorator. If you only want to write one, then JWS would be better because that's what's being used in the crypto layer as well. However, it hasn't been documented because I've been caught up with work at Mattr and haven't had time to write the new documents like I originally stated awhile ago","username":"kdenhartog","ts":"2019-09-24T23:44:19.206Z"}
{"msg":"What this means is that the did exchange protocol likely needs to be changed.","username":"kdenhartog","ts":"2019-09-24T23:45:21.298Z"}
{"msg":"To clarify, we can embed a JWS inside of the connection response, essentially replacing the object that we were originally using?","username":"dbluhm","ts":"2019-09-24T23:47:01.099Z"}
{"msg":"Yes, that's what I think should be done.","username":"kdenhartog","ts":"2019-09-24T23:47:17.669Z"}
{"msg":"I wonder if it would make sense to first port over the original HIPE into an RFC and then supersede it with an RFC detailing use of JWS. That way we have a cleaner \"commit history\" so to speak","username":"dbluhm","ts":"2019-09-24T23:51:28.368Z"}
{"msg":"Especially since the original HIPE was, unfortunately, never merged into the indy-hipe repository. All we have right now to refer back to is a closed PR","username":"dbluhm","ts":"2019-09-24T23:52:24.992Z"}
{"msg":"Makes sense to the first suggestion of porting and superseding.","username":"kdenhartog","ts":"2019-09-25T00:01:28.386Z"}
{"msg":"If you can make a PR on it I can merge it, but I won't have much time to chase that down before IIW.","username":"kdenhartog","ts":"2019-09-25T00:01:53.793Z"}
{"msg":"I'll work on throwing a port together tomorrow","username":"dbluhm","ts":"2019-09-25T00:03:02.873Z"}
{"msg":"thanks!","username":"kdenhartog","ts":"2019-09-25T00:03:08.814Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-09-25T00:30:56.194Z","type":"ul"}
{"msg":"Starting the Aries WG A call:\nhttps://zoom.us/j/244779296","username":"esplinr","ts":"2019-09-25T14:01:49.187Z"}
{"msg":"https://wiki.hyperledger.org/pages/viewpage.action?pageId=20021893","username":"esplinr","ts":"2019-09-25T14:01:58.526Z"}
{"msg":"@TelegramSam Can I have 10 min in the afternoon call to talk about this PR? https://github.com/hyperledger/aries-rfcs/pull/220","username":"danielhardman","ts":"2019-09-25T15:17:16.897Z"}
{"msg":"I'd rather we decide now instead of switching gears later (if we've already made up our minds regarding what the final solution will look like)","username":"george.aristy","ts":"2019-09-25T18:07:59.574Z"}
{"msg":"So, if I understand correctly, what you guys are proposing for the final solution with JWS is to have the `response` msg also include a `did` and `did_doc` attribute (just like the `request` msg), and in addition to that include an attribute with a jws signature on the contents of the `did_doc`?","username":"george.aristy","ts":"2019-09-25T18:09:29.374Z"}
{"msg":"Multiple implementations are already using the \"forgotten\" signature semantics and I think we still need more definition on using a JWS instead before we can cleanly switch","username":"dbluhm","ts":"2019-09-25T18:11:43.668Z"}
{"msg":"the dot net framework is already using `conection~sig`: https://github.com/hyperledger/aries-framework-dotnet/blob/eb261677f7d13466b232db0ddfb410afd0a4078f/src/AgentFramework.Core/Messages/Connections/ConnectionResponseMessage.cs#L25","username":"george.aristy","ts":"2019-09-25T18:13:10.598Z"}
{"msg":"The contents of `connection~sig` is what would change","username":"dbluhm","ts":"2019-09-25T18:13:44.359Z"}
{"msg":"Right now, that object is what is defined in the closed PR from Indy HIPE. Or at least that's how things are working in the code bases I'm familiar with. I'd have to look into the .net framework","username":"dbluhm","ts":"2019-09-25T18:14:39.963Z"}
{"msg":"My interpretation was that switching to JWS would essentially mean still having that `connection~sig` object but instead of what we originally defined as the contents of that attribute, we would have a JWS but I'm saying that without knowing in detail what @kdenhartog 's thoughts were on this","username":"dbluhm","ts":"2019-09-25T18:16:18.399Z"}
{"msg":"Ok","username":"george.aristy","ts":"2019-09-25T18:21:32.681Z"}
{"msg":"So, is part of the proposal to simply continue forth with the did-exchange RFC as it exists in Aries?","username":"george.aristy","ts":"2019-09-25T18:22:17.004Z"}
{"msg":"And then update `connection~sig` later?","username":"george.aristy","ts":"2019-09-25T18:22:34.493Z"}
{"msg":"That's my personal opinion but I certainly don't claim to speak for everyone. Might be a good topic to resolve on the call today. @TelegramSam ?","username":"dbluhm","ts":"2019-09-25T18:23:47.415Z"}
{"msg":"Well... the problem I'm seeing with the RFC as-is is that `ed25519Sha512_single` is not defined at all","username":"george.aristy","ts":"2019-09-25T18:29:02.489Z"}
{"msg":"And I see a few differences between what's described in the Aries RFC vs the HIPE that's currently sitting in Kyle's forkof indy-hipe","username":"george.aristy","ts":"2019-09-25T18:29:48.740Z"}
{"msg":"I agree that that is a problem. We obviously need an RFC that defines it. I haven't been able to examine the original HIPE in detail yet. What differences are you seeing?","username":"dbluhm","ts":"2019-09-25T18:31:19.596Z"}
{"msg":"Well, for starters, the Aries RFC doesn't define `ed25519Sha512_single` at all. But if you were to assume that its definition resides in Kyle's HIPE, then I see that the timestamp format is different","username":"george.aristy","ts":"2019-09-25T18:32:28.900Z"}
{"msg":"I'm confused; which timestamps are you comparing?","username":"dbluhm","ts":"2019-09-25T18:33:46.355Z"}
{"msg":"The one in `sig_data`","username":"george.aristy","ts":"2019-09-25T18:34:18.317Z"}
{"msg":"I think that's the only difference I see","username":"george.aristy","ts":"2019-09-25T18:34:43.177Z"}
{"msg":"Ah, I see it now","username":"dbluhm","ts":"2019-09-25T18:34:47.798Z"}
{"msg":"Also, RFCs shouldn't define standards in terms of specific implementations - see the mention of \"indy_crypto_sign\" here: https://github.com/kdenhartog/indy-hipe/blob/d421fc77bae87c780aad346d15c0c49939adc281/text/digital-signatures/README.md#signing-implementation","username":"george.aristy","ts":"2019-09-25T18:35:25.258Z"}
{"msg":"I agree; that and any other indy-isms and the timestamp format would naturally need to be addressed in porting to an RFC","username":"dbluhm","ts":"2019-09-25T18:37:33.703Z"}
{"msg":"All (and especially @dbluhm and @TelegramSam): I really liked our brief discussion about the test suite just now. It made me feel like we need an RFC to explain community expectations about the test suite. I just started a hackmd doc that I filled with questions (but not a lot of answers). When you see the questions, I think you'll see why I don't think it's the same thing as test suite docs. Maybe we could use this to collaborate on the topic? https://hackmd.io/@dhh1128/SyQ0Y4tvS","username":"danielhardman","ts":"2019-09-25T20:04:46.467Z"}
{"msg":"Has joined the channel.","username":"faisal00813","ts":"2019-09-26T04:51:44.014Z","type":"uj"}
{"msg":"@dbluhm are you porting the `connection~sig` HIPE? ","username":"george.aristy","ts":"2019-09-26T19:16:17.682Z"}
{"msg":"I'm planning to but I haven't yet","username":"dbluhm","ts":"2019-09-26T19:22:46.204Z"}
{"msg":"So what I see is that aries-framework-dotnet is pretty much following the signing implementation steps of the HIPE: https://github.com/kdenhartog/indy-hipe/blob/d421fc77bae87c780aad346d15c0c49939adc281/text/digital-signatures/README.md#signing-implementation","username":"george.aristy","ts":"2019-09-26T23:32:29.466Z"}
{"msg":"Which just means at compute a ed25519 signature.","username":"george.aristy","ts":"2019-09-26T23:33:03.780Z"}
{"msg":"Which just means: compute a ed25519 signature.","username":"george.aristy","ts":"2019-09-26T23:33:03.780Z"}
{"msg":"Is that all there is to the spec?","username":"george.aristy","ts":"2019-09-26T23:33:34.387Z"}
{"msg":"I had lingering questions around the identifier `ed25519Sha512_single`","username":"george.aristy","ts":"2019-09-26T23:33:47.530Z"}
{"msg":"She \"Sha512\" part and the \"single\" part","username":"george.aristy","ts":"2019-09-26T23:34:04.519Z"}
{"msg":"The \"Sha512\" part and the \"single\" part","username":"george.aristy","ts":"2019-09-26T23:34:04.519Z"}
{"msg":"Essentially; if you'd like to see an implementation that doesn't use Indy, here are a couple:\nhttps://github.com/dbluhm/indy-sign-attr-js\nhttps://github.com/hyperledger/aries-staticagent-python/blob/master/aries_staticagent/crypto.py#L143-L177\n\nNot sure myself on the identifier","username":"dbluhm","ts":"2019-09-26T23:36:39.012Z"}
{"msg":"@george.aristy if you're able to get around to porting it before @dbluhm let me know and I can merge it.","username":"kdenhartog","ts":"2019-09-26T23:37:30.474Z"}
{"msg":"It is supposed to just be a normal ed25519 signature. However, I named it in that way to account for how signatures using weierstrass curves (P-256, Secp256k1, etc) can support multiple hash algorithms. With regards to Single, I was trying to account for the use of multi-signatures which is why the question at the bottom brings this up.","username":"kdenhartog","ts":"2019-09-26T23:42:39.002Z"}
{"msg":"E.g. how would a notary and mortgage purchaser sign data together","username":"kdenhartog","ts":"2019-09-26T23:43:17.993Z"}
{"msg":"FYI: I'm in the middle of porting this","username":"george.aristy","ts":"2019-09-27T13:58:02.706Z"}
{"msg":"should be done sometime today","username":"george.aristy","ts":"2019-09-27T13:58:06.448Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/235","username":"george.aristy","ts":"2019-09-27T16:27:55.151Z"}
{"msg":"Has joined the channel.","username":"KellyCooper","ts":"2019-09-29T18:12:35.149Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cam-parra","ts":"2019-10-09T15:46:47.503Z","type":"uj"}
{"msg":"@swcurran @TelegramSam do you guys agree with @danielhardman 's solution for correlating a did-exchange request to an invitation by using `~thread.phid`? https://github.com/hyperledger/aries-rfcs/issues/208#issuecomment-538017606","username":"george.aristy","ts":"2019-10-10T15:13:22.679Z"}
{"msg":"Does it need discussion on a call, or can we update the RFC right away if you guys agree?","username":"george.aristy","ts":"2019-10-10T15:14:11.643Z"}
{"msg":"I would also ping Ryan West and Matthew Hailstone, but I don't have their handles.","username":"george.aristy","ts":"2019-10-10T15:16:58.697Z"}
{"msg":"I'm out on vacation so won't get to it until next week. Seems odd, but I've not thought through it, and I suspect Daniel has 😀. Needs to handle  cases of a single-use and multi-use invitations.","username":"swcurran","ts":"2019-10-10T15:38:00.684Z"}
{"msg":"Gave it a read. I agree with both the approach and the need for explanitary text.","username":"TelegramSam","ts":"2019-10-10T15:43:18.305Z"}
{"msg":"Matthew Hailstone and Ryan West are less involved at this point, but were the origins of much of this.","username":"TelegramSam","ts":"2019-10-10T15:45:45.665Z"}
{"msg":"@george.aristy comment left on issue as well. PR to the RFC is welcome.","username":"TelegramSam","ts":"2019-10-10T15:48:05.970Z"}
{"msg":"Good stuff... Done.","username":"swcurran","ts":"2019-10-10T15:55:32.972Z"}
{"msg":"Good stuff... Decision made.","username":"swcurran","ts":"2019-10-10T15:55:32.972Z"}
{"msg":"I would like to get https://github.com/hyperledger/aries-rfcs/pulls merged. Does anybody have concerns about doing so? It's been sitting for a couple weeks waiting for community comment, but only a few thoughts have been shared. We socialized at IIW and got a positive reaction--but that was oral feedback, not written feedback... @jjordan left a question, which I tried to resolve... (If a maintainer is comfortable merging, please do so; I feel like it would be better for someone else to merge this than for me, since it is not a semantically insignificant tweak, and since I raised it.)","username":"danielhardman","ts":"2019-10-10T16:54:57.834Z"}
{"msg":"I would like to get https://github.com/hyperledger/aries-rfcs/pulls/220 merged. Does anybody have concerns about doing so? It's been sitting for a couple weeks waiting for community comment, but only a few thoughts have been shared. We socialized at IIW and got a positive reaction--but that was oral feedback, not written feedback... @jjordan left a question, which I tried to resolve... (If a maintainer is comfortable merging, please do so; I feel like it would be better for someone else to merge this than for me, since it is not a semantically insignificant tweak, and since I raised it.)","username":"danielhardman","ts":"2019-10-10T16:54:57.834Z"}
{"msg":"Has joined the channel.","username":"jjordan","ts":"2019-10-10T16:54:57.870Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mwherman2000","ts":"2019-10-10T18:56:41.617Z","type":"uj"}
{"msg":"What I don't quite operationally understand is how the test suite is built and maintained ... as I understand this implementation for a test suite .. https://github.com/hyperledger/aries-protocol-test-suite .. there is code that would need to be written and maintained to reflect something defined in an RFC and that this code would be different that the code for an \"agent under test\" ... is that a correct understanding?","username":"jljordan_bcgov","ts":"2019-10-11T18:38:07.353Z"}
{"msg":"@jljordan_bcgov @danielhardman A possibly related concern to the above point: Let's say that someone writes an RFC and creates an implementation and even writes the code for the test suite. Is there criteria for the test suite maintainers to accept the new code? Will the test suite maintainers have the bandwidth (and also interest) in dealing with (reviewing and merging) a ... wide range ... of test suite submissions?","username":"troyronda","ts":"2019-10-11T18:47:40.198Z"}
{"msg":"@jljordan_bcgov @danielhardman A possibly related point to the above: Let's say that someone writes an RFC and creates an implementation and even writes the code for the test suite. Is there criteria for the test suite maintainers to accept the new code? Will the test suite maintainers have the bandwidth (and also interest) in dealing with (reviewing and merging) a ... wide range ... of test suite submissions?","username":"troyronda","ts":"2019-10-11T18:47:40.198Z"}
{"msg":"@jljordan_bcgov @danielhardman A possibly related point to the above: Let's say that someone writes an RFC and creates an implementation and even writes the code for the test suite for that RFC. Is there criteria for the test suite maintainers to accept the new code? Will the test suite maintainers have the bandwidth (and also interest) in dealing with (reviewing and merging) a ... wide range ... of test suite submissions?","username":"troyronda","ts":"2019-10-11T18:47:40.198Z"}
{"msg":"@jljordan_bcgov The required code to test an agent is significantly simpler than the code of an actual agent. It is still code that needs to be maintained but I think we can get to a point where the writing of tests is not much more difficult than writing an RFC itself is.","username":"dbluhm","ts":"2019-10-11T19:26:43.144Z"}
{"msg":"@dbluhm thanks ... I like the sound of that. Once we have a few cycles and people return from holidays I am sure we will have more ability to contribute to the discussion","username":"jljordan_bcgov","ts":"2019-10-11T20:46:49.139Z"}
{"msg":"Just back from vacation - wondering what is going on with DID-Exchange and getting rid of the \"Connections\" protocol in the current implementations.  Last I heard that was to happen with everyone the week after IIW - e.g. last week.  Any progress?  @tomislav @tplooker  @andrew.whitehead ","username":"swcurran","ts":"2019-10-15T16:13:33.248Z"}
{"msg":"@TelegramSam wanted to hold off on that one for some potential changes, and we discovered another required change related to peer DID support","username":"andrew.whitehead","ts":"2019-10-15T17:10:43.854Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/issues/243  (this one)","username":"andrew.whitehead","ts":"2019-10-15T17:12:35.512Z"}
{"msg":"Just listened to the call from Sept. 25 about this. Lots of new information that I didn't know. Very confusing... :-).\n\nFor us, do nothing is a good approach.\n\nWhat does the Go folks and the IBM folks think?  We were trying to move to support them.","username":"swcurran","ts":"2019-10-15T23:08:33.116Z"}
{"msg":"Just listened to the call from Sept. 25 about this. Lots of new information that I didn't know. Very confusing... :-).\n\nFor us, do nothing is a good approach.\n\nWhat do the Go folks and the IBM folks think?  We were trying to move to support them.","username":"swcurran","ts":"2019-10-15T23:08:33.116Z"}
{"msg":"Just listened to the call from Sept. 25 about this. Lots of new information that I didn't know. Very confusing... :-).\n\nFor us, do nothing is a good approach.\n\nWhat do the Go folks and the IBM folks think?  We were trying to move to support/align with them.","username":"swcurran","ts":"2019-10-15T23:08:33.116Z"}
{"msg":"@troyronda @smithbk @george.aristy ","username":"swcurran","ts":"2019-10-15T23:09:19.893Z"}
{"msg":"Hmm...I haven't finished listening to the discussion.  Maybe the answer is later in the recording.","username":"swcurran","ts":"2019-10-15T23:09:58.141Z"}
{"msg":"I have a PR in for a clarification on the status for the DID Exchange RFC. (I was supposed to do it weeks ago, better late than never...)","username":"TelegramSam","ts":"2019-10-16T14:22:35.785Z"}
{"msg":"@george.aristy A comment left on your RFC PR: https://github.com/hyperledger/aries-rfcs/pull/254","username":"TelegramSam","ts":"2019-10-16T14:29:13.836Z"}
{"msg":"@swcurran we're proceeding with the `did-exchange` protocol because of the weaknesses identified in the `connection`, such as that pointed to by Andrew.","username":"george.aristy","ts":"2019-10-16T14:54:03.634Z"}
{"msg":"OK.  I guess we'll remain incompatible until the rest of the issues with DID-Exchange can be clarified.","username":"swcurran","ts":"2019-10-16T15:59:15.457Z"}
{"msg":"OK.  I guess we'll remain incompatible with the Go framework until the rest of the issues with DID-Exchange can be clarified.","username":"swcurran","ts":"2019-10-16T15:59:15.457Z"}
{"msg":"@TelegramSam and @cam-parra : I was able to rename the wallet repo to Ares - AMS. However, I couldn't change the list of maintainers, and I cannot create the new repo Ares - core. We need to contact Rye for that. I am using rocketchat from my mobile phone because the Mac client broke when I upgraded to Catalina, so it's hard for me to paste hyperlinks into this. I'm using voice to text. Could one of you paste a hyperlink to the Ares 3 ticket for Rye, and ask him to take care of this additional busy work? Tell him I tried to use the Privileges he gave me, and I could have done it in some groups, but it appears that I can't do it across the board.","username":"danielhardman","ts":"2019-10-16T20:27:40.571Z"}
{"msg":"@swcurran or @TelegramSam, I have updated the pr about test Suite, number 220, according to what we discussed in our community call. Can you please merge it?","username":"danielhardman","ts":"2019-10-16T22:40:31.229Z"}
{"msg":"@danielhardman the mac client works if you uninstall the client downloaded from the Apple store and download the package directly from the website. The link is the \"direct download\" button at https://rocket.chat/install","username":"kdenhartog","ts":"2019-10-17T00:56:38.062Z"}
{"msg":"I had similar problems with upgrading as well","username":"kdenhartog","ts":"2019-10-17T00:56:52.946Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-maintainers?msg=608af88f-3c07-472a-8311-88ccb20cc3c9) @rjones could you help with this? Here's the link to the ticket https://jira.hyperledger.org/secure/RapidBoard.jspa?rapidView=231&projectKey=ARIES&view=planning&selectedIssue=ARIES-3","username":"kdenhartog","ts":"2019-10-17T00:59:04.736Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=608af88f-3c07-472a-8311-88ccb20cc3c9","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=608af88f-3c07-472a-8311-88ccb20cc3c9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-10-17T00:59:04.768Z","type":"uj"}
{"msg":"@kdenhartog I want to be sure: you want new, blank repos, right?","username":"rjones","ts":"2019-10-17T02:02:04.287Z"}
{"msg":"@kdenhartog I ask because last time I did this, I did a lot of work that I had to discard","username":"rjones","ts":"2019-10-17T02:02:31.403Z"}
{"msg":"```Each repo should contain a README.md explaining the purpose of the repo, and other open source scaffolding (license, maintainers, etc).```","username":"rjones","ts":"2019-10-17T02:02:49.707Z"}
{"msg":"belay thagt","username":"rjones","ts":"2019-10-17T02:02:51.703Z"}
{"msg":"belay that","username":"rjones","ts":"2019-10-17T02:02:51.703Z"}
{"msg":"I’m not sure quite honestly. I’m just relaying the message. I’ll let others make that call.","username":"kdenhartog","ts":"2019-10-17T02:08:33.671Z"}
{"msg":"I think, reading the bug, I understand the expectationsa","username":"rjones","ts":"2019-10-17T02:10:07.258Z"}
{"msg":"I just added a comment to the Jira 3 about the repo names and would like to propose that some of the repo names change to match W3C naming. https://jira.hyperledger.org/browse/ARIES-3?focusedCommentId=64801&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-64801\n\n```\nTroy Ronda had asked a question on the call about the term \"dri\" and I incorrectly answered that it is the term used by W3C for the source of verification data (\"keys and other relevant data\" per the spec) for verifiable credentials – aka the ledger.  The correct W3C term is \"Verifiable Data Registry\".  See this section.] of the verifiable credentials spec.\n\nI suggest that we change the \"dri\" acronyms to be \"vdri\" to align with the W3C verifiable credential data model spec.\n\nAs a side note, I also suggest that we stick to github issues for everything Aries.\n```","username":"swcurran","ts":"2019-10-19T20:25:04.319Z"}
{"msg":"I just added a comment to the Jira 3 about the repo names and would like to propose that some of the repo names change to match W3C naming. https://jira.hyperledger.org/browse/ARIES-3?focusedCommentId=64801&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-64801\n\n```\nTroy Ronda had asked a question on the call about the term \"dri\" and I incorrectly answered that it is the term used by W3C for the source of verification data (\"keys and other relevant data\" per the spec) for verifiable credentials – aka the ledger.  The correct W3C term is \"Verifiable Data Registry\".  See this section.] of the verifiable credentials spec.\n\n\nI suggest that we change the \"dri\" acronyms to be \"vdri\" to align with the W3C verifiable credential data model spec.\n\nAs a side note, I also suggest that we stick to github issues for everything Aries.\n```","username":"swcurran","ts":"2019-10-19T20:25:04.319Z"}
{"msg":"I just added a comment to the Jira 3 about the repo names and would like to propose that some of the repo names change to match W3C naming. https://jira.hyperledger.org/browse/ARIES-3?focusedCommentId=64801&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-64801\n\n```\nTroy Ronda had asked a question on the call about the term \"dri\" and I incorrectly answered that it is the term used by W3C for the source of verification data (\"keys and other relevant data\" per the spec) for verifiable credentials – aka the ledger.  The correct W3C term is \"Verifiable Data Registry\".  See this section of the verifiable credentials spec.\n\n\nI suggest that we change the \"dri\" acronyms to be \"vdri\" to align with the W3C verifiable credential data model spec.\n\nAs a side note, I also suggest that we stick to github issues for everything Aries.\n```","username":"swcurran","ts":"2019-10-19T20:25:04.319Z"}
{"msg":"Hey all, @brentzundel has proposed moving the Rich Schema RFC (0250) from `proposed` status to `accepted` status. If anyone has objections to this change in status please raise them in the next week. Otherwise we'll assume consensus on the RFC has been achieved. Also, I'm taking note that @troyronda has raised a concern already and the RFC has been modified. Can you take a look to see if it addresses your concerns Troy?","username":"kdenhartog","ts":"2019-10-20T03:18:27.619Z"}
{"msg":"Has joined the channel.","username":"brentzundel","ts":"2019-10-20T03:18:27.686Z","type":"uj"}
{"msg":"aries-rfcs has access to github actions now. I'll see about testing the index build as an action instead of a pre-required step.","username":"TelegramSam","ts":"2019-10-22T14:29:26.264Z"}
{"msg":"@TelegramSam : aries-ams-sqlite and aries-vdri-peer have been marked as read-only repos for the time being, with a readme clarifying how they fit into the overall mental model, so nobody gets confused about whether to work with them.","username":"danielhardman","ts":"2019-10-23T15:09:53.460Z"}
{"msg":"@swcurran : aries-dri has been renamed aries-vdri","username":"danielhardman","ts":"2019-10-23T15:10:10.913Z"}
{"msg":"Thanks for doing that @danielhardman ","username":"TelegramSam","ts":"2019-10-23T15:55:03.960Z"}
{"msg":"Has joined the channel.","username":"brian.richter","ts":"2019-10-24T15:47:12.695Z","type":"uj"}
{"msg":"Has joined the channel.","username":"josephboyle","ts":"2019-10-25T20:50:14.384Z","type":"uj"}
{"msg":"Has joined the channel.","username":"donqui","ts":"2019-10-27T07:25:59.602Z","type":"uj"}
{"msg":"Hey in regards to status, what's our take on converting things from Accepted to Adopted? I'm realizing that Accepted has become what I originally invisioned Adopted would be and demonstrated is becoming what I originally thought accepted would be. This doesn't align with what's written though, so I'm curious what difference do we expect to convert an accepted status to an adopted status?","username":"kdenhartog","ts":"2019-10-29T03:28:21.109Z"}
{"msg":"For example, would the encryption envelope be adopted at this point?","username":"kdenhartog","ts":"2019-10-29T03:28:42.461Z"}
{"msg":"For example, would the encryption envelope be adopted at this point? (I'd say no at this point, but it's getting there)","username":"kdenhartog","ts":"2019-10-29T03:28:42.461Z"}
{"msg":"For example, would the encryption envelope be adopted at this point? (I'd say no as a gut check at this point, but it's getting there)","username":"kdenhartog","ts":"2019-10-29T03:28:42.461Z"}
{"msg":"@kdenhartog , @danielhardman @troyronda - would one of you drive a discussion on the ~attach change about ~sig and include a discussion on the kid vs. jwk tradeoffs?  It seems we are very close on that, right?  Perhaps we can nail this down within this community.","username":"swcurran","ts":"2019-10-29T18:57:34.532Z"}
{"msg":"@kdenhartog , @danielhardman @troyronda - would one of you drive a discussion on the \\~attach change about \\~sig and include a discussion on the kid vs. jwk tradeoffs?  It seems we are very close on that, right?  Perhaps we can nail this down within this community.","username":"swcurran","ts":"2019-10-29T18:57:34.532Z"}
{"msg":"@kdenhartog , @danielhardman @troyronda - would one of you drive a discussion on the \\~attach change about elimination of \\~sig and include a discussion on the kid vs. jwk tradeoffs?  It seems we are very close on that, right?  Perhaps we can nail this down within this community.","username":"swcurran","ts":"2019-10-29T18:57:34.532Z"}
{"msg":"@kdenhartog , @danielhardman @troyronda - would one of you drive a discussion **on the Aries afternoon call tomorrow** on the \\~attach change about elimination of \\~sig and include a discussion on the kid vs. jwk tradeoffs?  It seems we are very close on that, right?  Perhaps we can nail this down within this community.","username":"swcurran","ts":"2019-10-29T18:57:34.532Z"}
{"msg":"^^^ I meant to say \"on the Aries afternoon call tomorrow\"","username":"swcurran","ts":"2019-10-29T18:59:19.456Z"}
{"msg":"I'm happy to do it if nobody else volunteers, because I agree we need to get it over the finish line. But I think it'd be more optimal for someone else to be the spokesperson since I talk too much... :-)","username":"danielhardman","ts":"2019-10-29T19:34:58.700Z"}
{"msg":"@swcurran : I added the topic as an agenda item in the doc on the wiki. I put Kyle and Troy's name by it, but I'll fill in if neither of them wants to take it. I also added some other agenda items...","username":"danielhardman","ts":"2019-10-29T19:57:14.720Z"}
{"msg":"@kdenhartog : To convert to ADOPTED, we'd need to see a really robust testing strategy and broad impl. The old encr envelope stuff might have approached that, but IMO we keep resetting the status by changing our minds about how we're going to do it next. This is one of my sources of frustration; I thought we had something working with reasonable adoption, and now I'm feeling like we're starting over. Certainly we can't claim that something not yet implemented, that's being discussed in PR and issue comment streams, deserves the ADOPTED status.","username":"danielhardman","ts":"2019-10-29T19:59:27.779Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-10-29T20:30:17.721Z","type":"ul"}
{"msg":"Yes, I agree that anything new would not even be of a proposed status yet. I was thinking of what’s implemented during that comment.  And more than anything I wanted to get a sense of what’s the rough boundary between accepted and adopted status. I’m uncertain of the additional hurdles that adopted places on an RFC when converting from accepted status. For example would the agents RFC qualify for adopted status?","username":"kdenhartog","ts":"2019-10-29T20:49:48.172Z"}
{"msg":"Also I can lead that part of the discussion tomorrow","username":"kdenhartog","ts":"2019-10-29T20:57:28.478Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-10-29T23:10:09.271Z","type":"uj"}
{"msg":"A discussion of GitHub issues versus Jira","username":"rjones","ts":"2019-10-29T23:10:58.165Z"}
{"msg":"In the last week, guidance on Jira versus GitHub has changed.","username":"rjones","ts":"2019-10-29T23:11:26.970Z"}
{"msg":"With the exception of security bugs - which must, right now, go in Jira - projects can choose Jira or GitHub issues.","username":"rjones","ts":"2019-10-29T23:11:53.534Z"}
{"msg":"My comment here to @danielhardman and @esplinr is no longer true: https://jira.hyperledger.org/browse/ARIES-3?focusedCommentId=64884&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-64884","username":"rjones","ts":"2019-10-29T23:13:03.283Z"}
{"msg":"Good to know. Thanks.","username":"danielhardman","ts":"2019-10-29T23:13:41.025Z"}
{"msg":"I ran a simple experiment in aries-framework-go to compile to WebAssembly. So far, I tested starting up the framework and then calling DID Exchange CreateInvitation where I saw the freshly generated invitation (in this case, the wasm file was loaded into Safari v13). Note: I had to comment out the leveldb persistence code to get compilation to work. Thought I would share as it seemed interesting :).","username":"troyronda","ts":"2019-10-30T00:29:15.975Z"}
{"msg":"I ran a simple experiment in aries-framework-go to compile to WebAssembly. So far, I tested starting up the framework and then calling DID Exchange CreateInvitation where I saw the freshly generated invitation object (in this case, the wasm file was loaded into Safari v13). Note: I had to comment out the leveldb persistence code to get compilation to work. Thought I would share as it seemed interesting :).","username":"troyronda","ts":"2019-10-30T00:29:15.975Z"}
{"msg":"The experiment code is temporarily available here in my forked branch: https://github.com/troyronda/aries-framework-go/tree/wasm","username":"troyronda","ts":"2019-10-30T00:39:23.306Z"}
{"msg":"FYI, GitHub issues handling of security bugs is in beta.\n\nI'm strongly in favor of sticking to going issues.","username":"swcurran","ts":"2019-10-30T04:54:48.343Z"}
{"msg":"I far prefer issues. It reduces the complexity of managing what's happening in my opinion.","username":"kdenhartog","ts":"2019-10-30T06:43:50.027Z"}
{"msg":"I also prefer GitHub issues.","username":"troyronda","ts":"2019-10-30T11:33:04.013Z"}
{"msg":"And \"going\" is \"github\" in my comment above :-)","username":"swcurran","ts":"2019-10-30T14:56:06.186Z"}
{"msg":"@swcurran are you talking about this tab: https://github.com/hyperledger/aries-framework-go/security/advisories ? or is there another feature for security issues?","username":"rjones","ts":"2019-10-30T15:47:44.773Z"}
{"msg":"that tab doesn't let someone external to the project file an issue privately in the same way Jira does","username":"rjones","ts":"2019-10-30T15:48:13.667Z"}
{"msg":"```Access and visibility\nUntil it is published, this draft security advisory will only be visible to collaborators with admin permissions on hyperledger/aries-framework-go. Other users and teams may be added once the advisory is created.\n\nOnce published, security advisories on public repos are visible to everyone.\n\nOnce reviewed by GitHub, they may be broadcast on the GitHub Advisory Database and they may be used to send security alerts to users that depend on this repository.```","username":"rjones","ts":"2019-10-30T15:49:34.894Z"}
{"msg":"@danielhardman Do you have the RFC with the updated message type posted (you were showing during the call)?","username":"troyronda","ts":"2019-10-30T22:39:58.836Z"}
{"msg":"@danielhardman Do you have the RFC with the updated message type posted (you were showing during the call)? EDIT: I see it here: https://github.com/hyperledger/aries-rfcs/pull/277/","username":"troyronda","ts":"2019-10-30T22:39:58.836Z"}
{"msg":"Just doule-checking that the message type changes from \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0/request\" to \"https://didcomm.org/didexchange/1.0/request\"?","username":"troyronda","ts":"2019-10-30T22:41:15.955Z"}
{"msg":"So the equivalent update for DID Exchange would appear to be \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0/request\" to \"https://didcomm.org/didexchange/1.0/request\". i.e., Replace \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec\" with \"https://didcomm.org\"","username":"troyronda","ts":"2019-10-30T22:41:15.955Z"}
{"msg":"So the equivalent update for DID Exchange would be \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0/request\" to \"https://didcomm.org/didexchange/1.0/request\". (i.e., Replace \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec\" with \"https://didcomm.org\".)","username":"troyronda","ts":"2019-10-30T22:41:15.955Z"}
{"msg":"i.e., Replace \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec\" with \"https://didcomm.org\"","username":"troyronda","ts":"2019-10-30T22:42:14.655Z"}
{"msg":"Yes","username":"danielhardman","ts":"2019-10-31T00:06:10.435Z"}
{"msg":"I created a PR for DID Exchange RFC to update to https://didcomm.org. I assumed this would be an okay RFC to start with as it contains a new protocol type anyways. Thoughts?","username":"troyronda","ts":"2019-10-31T00:21:43.283Z"}
{"msg":"And now also created a PR for the Introduce RFC.","username":"troyronda","ts":"2019-10-31T01:56:40.710Z"}
{"msg":"In general, I'm happy with GitHub issues. But I expect we will continue to need the Aries Jira project for the issues that cross repo boundaries and so there isn't a place for them in GitHub.","username":"esplinr","ts":"2019-11-01T13:24:22.830Z"}
{"msg":"@swcurran @kdenhartog @danielhardman  @TelegramSam ( https://github.com/hyperledger/aries-rfcs/pull/282 / https://github.com/hyperledger/aries-rfcs/pull/283 )","username":"troyronda","ts":"2019-11-01T14:42:49.427Z"}
{"msg":"Has joined the channel.","username":"cstoecker","ts":"2019-11-01T15:06:41.397Z","type":"uj"}
{"msg":"@swcurran and @TelegramSam and @kdenhartog and any others who are interested: @jjordan and @drummondreed  and @darrell.odonnell  and @vinomaster and others have submitted an RFC about the general solution layers required for self-sovereign or decentralized identity. (My name is on it, too, but I am really more of a mechanical contributor than an author; I just helped fix some graphics and get it merged.) Currently it is numbered 0289. However, I believe this RFC should be renumbered to 0001; I think it is the most high-level or foundational piece of content in the entire RFCs repo. It describes the general problem domain and how the various pieces of a software stack contribute and layer on one another; as we describe Aries at lower levels of detail, I think we'll be referring to it constantly.\n\nAre you okay with us renumbering this one?","username":"danielhardman","ts":"2019-11-05T15:46:19.202Z"}
{"msg":"Has joined the channel.","username":"vinomaster","ts":"2019-11-05T15:46:19.275Z","type":"uj"}
{"msg":"Has joined the channel.","username":"drummondreed","ts":"2019-11-05T15:46:19.278Z","type":"uj"}
{"msg":"@sergey.minaev : I head that you were interested in working on an RFC about general Aries architecture. The RFC I mentioned above ^^ would be a good reference. It is NOT the RFC you are imagining, but would provide background for it. Perhaps that RFC you want to write ought to be RFC 0002 and could include a bunch of the architecture diagrams that we've been trying to polish in this slide deck: https://docs.google.com/presentation/d/1L5L4QcZOATrn9rj4bEMmlbvij9XWyqgQRoWO-HNiUGw/edit. Such an RFC could then be cited by the root READMEs of various repos we create or have already created for Aries (e.g., an aries-vdri repo could point to the arch diagram checked in with RFC 0002 that situates the VDRI component in inside the larger Aries stack that maps to the general problem domain description of RFC 0001). ","username":"danielhardman","ts":"2019-11-05T15:50:23.943Z"}
{"msg":"@sergey.minaev : I head that you were interested in working on an RFC about general Aries architecture. The RFC I mentioned above ^^ would be a good reference. It is NOT the RFC you are imagining, but would provide background for it. Perhaps that RFC you want someone to write ought to be RFC 0002 and could include a bunch of the architecture diagrams that we've been trying to polish in this slide deck: https://docs.google.com/presentation/d/1L5L4QcZOATrn9rj4bEMmlbvij9XWyqgQRoWO-HNiUGw/edit. Such an RFC could then be cited by the root READMEs of various repos we create or have already created for Aries (e.g., an aries-vdri repo could point to the arch diagram checked in with RFC 0002 that situates the VDRI component in inside the larger Aries stack that maps to the general problem domain description of RFC 0001). ","username":"danielhardman","ts":"2019-11-05T15:50:23.943Z"}
{"msg":"@sergey.minaev : I head that you were interested in getting collaborators to work on an RFC about general Aries architecture. The RFC I mentioned above ^^ would be a good reference. It is NOT the RFC you are imagining, but would provide background for it. Perhaps that RFC you want someone to write ought to be RFC 0002 and could include a bunch of the architecture diagrams that we've been trying to polish in this slide deck: https://docs.google.com/presentation/d/1L5L4QcZOATrn9rj4bEMmlbvij9XWyqgQRoWO-HNiUGw/edit. Such an RFC could then be cited by the root READMEs of various repos we create or have already created for Aries (e.g., an aries-vdri repo could point to the arch diagram checked in with RFC 0002 that situates the VDRI component in inside the larger Aries stack that maps to the general problem domain description of RFC 0001). ","username":"danielhardman","ts":"2019-11-05T15:50:23.943Z"}
{"msg":"@sergey.minaev : I heard that you were interested in getting collaborators to work on an RFC about general Aries architecture. The RFC I mentioned above ^^ would be a good reference. It is NOT the RFC you are imagining, but would provide background for it. Perhaps that RFC you want someone to write ought to be RFC 0002 and could include a bunch of the architecture diagrams that we've been trying to polish in this slide deck: https://docs.google.com/presentation/d/1L5L4QcZOATrn9rj4bEMmlbvij9XWyqgQRoWO-HNiUGw/edit. Such an RFC could then be cited by the root READMEs of various repos we create or have already created for Aries (e.g., an aries-vdri repo could point to the arch diagram checked in with RFC 0002 that situates the VDRI component in inside the larger Aries stack that maps to the general problem domain description of RFC 0001). ","username":"danielhardman","ts":"2019-11-05T15:50:23.943Z"}
{"msg":"I am in favor of claiming the number. That kind of foundational RFC was what I expected in an RFC 001 when we set it aside.","username":"esplinr","ts":"2019-11-05T16:15:44.190Z"}
{"msg":"I will likely support this, but definitely think that this should be talked about in the community.  Suggest a proposal at the Working Group meeting and then a formal vote, announcement and waiting period.","username":"swcurran","ts":"2019-11-05T16:33:11.567Z"}
{"msg":"I will likely support this, but definitely think that this should be talked about in the community first.  Suggest a proposal at the Working Group meeting and then a formal vote, announcement and waiting period.","username":"swcurran","ts":"2019-11-05T16:33:11.567Z"}
{"msg":"The problem with that kind of process is that permalinks become entrenched. Content gets indexed by google at old links. John Jordan is on the road right now, and told me last night he wanted to share the doc with people he is meeting. I don't want to perpetuate an RFC number that's going to be changed.\n\nThere is no document or process that covers this situation, so socializing it and having a waiting period feel to me like things we'd do out of an abundance of caution. Are we expecting there to be lots of pushback? This is NOT a request that we change the status of the RFC doc to ACCEPTED or ADOPTED...\n\nWe could socialize this idea in #aries right now, rather than waiting for a call and so forth...","username":"danielhardman","ts":"2019-11-05T17:00:31.106Z"}
{"msg":"I reading the document now.  Finding some issues with it, but generally in agreement.  We would leave 289 in place as a redirector to the new location. I don't see that as a big deal.\n\nPart of my reaction was that this was offered as an approach and immediately followed with \"and this should be RFC 0002\", which I definitely think is jumping the gun.  Lets get content and then consider if it should be a magic RFC. ","username":"swcurran","ts":"2019-11-05T17:07:59.501Z"}
{"msg":"Stephen: I think you're conflating 2 different things. RFC 0002 is a number I suggested for a non-existent document, and that is an \"approach\" document. The document I'm proposing to renumber is 0289, and I'm suggesting it be renamed to 0001. The latter doc is not an approach; it's a survey of the conceptual territory in our space.\n\nOf course we can tweak a doc--but we don't normally renumber things after we accept them; we get the permanent number when it is proposed.","username":"danielhardman","ts":"2019-11-05T17:11:03.460Z"}
{"msg":"No, that's exactly what I understood.","username":"swcurran","ts":"2019-11-05T17:11:39.105Z"}
{"msg":"Suggesting a non-existent document be RFC 0002 is IMHO odd.\n\nI understand 289 -> 001, and generally agree, but I think the community should decide.","username":"swcurran","ts":"2019-11-05T17:12:22.850Z"}
{"msg":"Leaving a redirect will require us to create some ugly kludges in our unit tests and automation, since the old doc will be degenerate.","username":"danielhardman","ts":"2019-11-05T17:13:07.494Z"}
{"msg":"I don't know what to tell you. I think its a bad idea.","username":"swcurran","ts":"2019-11-05T17:14:57.092Z"}
{"msg":"What is a bad idea: 0001 or 0002?","username":"danielhardman","ts":"2019-11-05T17:15:12.634Z"}
{"msg":"Please keep these two ideas separate. ","username":"danielhardman","ts":"2019-11-05T17:15:28.810Z"}
{"msg":"0002 is entirely unrelated to what I'm proposing.","username":"danielhardman","ts":"2019-11-05T17:15:43.041Z"}
{"msg":"I get that. I'm talking 0001 without community agreement.","username":"swcurran","ts":"2019-11-05T17:15:56.840Z"}
{"msg":"So do you have a problem with me proposing it to the community right now, instead of waiting for a call? ","username":"danielhardman","ts":"2019-11-05T17:17:01.993Z"}
{"msg":"Yes","username":"swcurran","ts":"2019-11-05T17:17:28.591Z"}
{"msg":"why?","username":"danielhardman","ts":"2019-11-05T17:17:33.166Z"}
{"msg":"You can propose it now, and I'm against completing the process until the community responds.","username":"swcurran","ts":"2019-11-05T17:17:49.672Z"}
{"msg":"And you're saying that the way to measure \"the community responds\" must be to let a 2-week comment period elapse?","username":"danielhardman","ts":"2019-11-05T17:18:22.700Z"}
{"msg":"Do we think we need to introduce a bit more neutrality into this document?","username":"troyronda","ts":"2019-11-05T17:18:31.424Z"}
{"msg":"It has a bit of a sovrin flare to it.","username":"troyronda","ts":"2019-11-05T17:18:43.993Z"}
{"msg":"It feels like it has a bit of a sovrin flare to it. (but I only had a quick glance so far.)","username":"troyronda","ts":"2019-11-05T17:18:43.993Z"}
{"msg":"I think this is a pretty important issue and the community needs to weigh in.  You want to make this a go to document for the entire community. That's not a small issue.","username":"swcurran","ts":"2019-11-05T17:19:02.966Z"}
{"msg":"I certainly think there is worthwhile and useful content for a community introduction in it.","username":"troyronda","ts":"2019-11-05T17:20:41.234Z"}
{"msg":"but there are bits that could have been ... perhaps moved to a particular flavor.","username":"troyronda","ts":"2019-11-05T17:21:02.972Z"}
{"msg":"I think you are confusing acceptance (a defined status adjudication process) with numbering. Nobody is saying that the content of the document in its current form has to be what the community accepts. What I am saying is that a document with the current scope / topic belongs as RFC 0001. The community gets to debate its content just like any other RFC, until we are happy with it. But there's no question in my mind that this is topic #1 for the community, and it feels silly for me to wonder whether that's the case.","username":"danielhardman","ts":"2019-11-05T17:22:37.516Z"}
{"msg":"What alternative topic would you suggest ought to be topic #1?","username":"danielhardman","ts":"2019-11-05T17:23:11.204Z"}
{"msg":"I'm not confusing that. I'm saying if we are going to suddenly decide to have a flagship RFC, the community should weigh in.","username":"swcurran","ts":"2019-11-05T17:23:18.961Z"}
{"msg":"I don't have an alternative to propose.","username":"swcurran","ts":"2019-11-05T17:23:38.775Z"}
{"msg":"I don't think waiting is a crisis.","username":"swcurran","ts":"2019-11-05T17:23:51.776Z"}
{"msg":"Okay. I'll follow the alternative process that you're recommending, Stephen. However, I'm gritting my teeth. I don't like polluting the RFC index and namespace with redirects, and I don't agree that numbering a doc is the same as accepting it, and I don't agree that assigning #1 to this topic is controversial. I do agree that it's worth discussing whether we want to have a \"highest level survey of the problem space\" RFC at all, and I do agree that the content of such an RFC should be vetted by the community very carefully, correcting any concerns like the ones Troy is raising. I think that by following the process you're recommending, we'll  perpetuate a misunderstanding about the relative gravitas of an RFC with only the PROPOSED status, and get bogged down in debates about content that don't belong as part of this numbering question. ","username":"danielhardman","ts":"2019-11-05T17:35:00.693Z"}
{"msg":"Look for my post in #aries proposing the number; I'll also add myself to the agenda on tomorrow's two calls to make the proposal.","username":"danielhardman","ts":"2019-11-05T17:35:58.104Z"}
{"msg":"@swcurran : I'm feeling more cheerful now that I've had time to think a bit more about this, and I'm regretting that I pushed back so hard. Thanks for your patience with me. I eventually come around, if you outwait my impatience... :-)","username":"danielhardman","ts":"2019-11-05T19:02:47.731Z"}
{"msg":"@troyronda : can you capture some of your feedback where RFC 0289 feels too Sovrin-y, as one or more issues in github? I don't want to lose that important input, and I also don't want the doc to end up feeling too Sovrin-y. That was not its intent. Dan G just added a section about the notion of network-of-networks, where multiple instances of multiple networks, including R3 and EEA and Fabric, fit into the diagram...","username":"danielhardman","ts":"2019-11-05T19:05:59.500Z"}
{"msg":"I wrote a few comments prior to the latest update. https://github.com/hyperledger/aries-rfcs/issues/292","username":"troyronda","ts":"2019-11-05T19:10:53.188Z"}
{"msg":"I would summarize as being careful about the description of ZKP, governance frameworks, and being inclusive of cases beyond physical credential analogues.","username":"troyronda","ts":"2019-11-05T19:11:59.367Z"}
{"msg":"Thank you!","username":"danielhardman","ts":"2019-11-05T19:12:25.567Z"}
{"msg":"I think it's appropriate to leave a 'redirect' RFC in place when another is promoted. I don't mean a literal redirect, just a placeholder RFC as a tombstone of sorts. This would require no changes to the CI and processing pipelines.","username":"TelegramSam","ts":"2019-11-05T20:35:11.964Z"}
{"msg":"In any case, I've added time for this on tomorrow's call.","username":"TelegramSam","ts":"2019-11-05T20:35:25.422Z"}
{"msg":"@danielhardman you mentioned above that some may want to put together an RFC for a general architecture  of Aries. This seems like the wrong approach since every piece of the architecture should have an individual RFC. And then maybe there could be something that says \"these are the RFCs that make up the foundation of aries\"","username":"cam-parra","ts":"2019-11-06T00:39:13.939Z"}
{"msg":"Building up an architecture from the constituent pieces and breaking down an architecture from a global picture are both reasonable things to do, and they are not mutually exclusive. One process is called analysis; the other is called synthesis.\n\nThe drawback of starting from a big picture is that you can't be sure of the details. The drawback of starting from the details is that you can't be sure they add up to a big picture that you like.\n\nIn my experience, the best architectural output is achieved by iterating and alternating between these two modes, not by insisting that one or the other is correct. So my recommendation would be to do some work in both ways, and see what interesting tensions we uncover as we do it.\n\nI have already attempted to start a big picture once (the slides I sent around; https://docs.google.com/presentation/d/1L5L4QcZOATrn9rj4bEMmlbvij9XWyqgQRoWO-HNiUGw/edit). This is just a beginning, not a last word on that side of the work.\n\nThe work you are doing to clarify the architecture of KMS is starting from the other side, and is also important. I predict that when we compare your doc draft to my diagram draft, we will find a lot that fits together and a few places that don't. Those few places will be worth learning from.\n\nSo: I'm not advocating anything that should disrupt the efforts you already have underway. AND I'm also suggesting that thinking about the big picture is a good idea. I'm only pushing back on the assumption that the only way to proceed is to build everything from the details toward the general big picture; we should do both.","username":"danielhardman","ts":"2019-11-06T00:49:44.473Z"}
{"msg":"Building up an architecture from the constituent pieces and breaking down an architecture from a global picture are both reasonable things to do, and they are not mutually exclusive. One process is called synthesis; the other is called analysis.\n\nThe drawback of starting from a big picture is that you can't be sure of the details. The drawback of starting from the details is that you can't be sure they add up to a big picture that you like.\n\nIn my experience, the best architectural output is achieved by iterating and alternating between these two modes, not by insisting that one or the other is correct. So my recommendation would be to do some work in both ways, and see what interesting tensions we uncover as we do it.\n\nI have already attempted to start a big picture once (the slides I sent around; https://docs.google.com/presentation/d/1L5L4QcZOATrn9rj4bEMmlbvij9XWyqgQRoWO-HNiUGw/edit). This is just a beginning, not a last word on that side of the work.\n\nThe work you are doing to clarify the architecture of KMS is starting from the other side, and is also important. I predict that when we compare your doc draft to my diagram draft, we will find a lot that fits together and a few places that don't. Those few places will be worth learning from.\n\nSo: I'm not advocating anything that should disrupt the efforts you already have underway. AND I'm also suggesting that thinking about the big picture is a good idea. I'm only pushing back on the assumption that the only way to proceed is to build everything from the details toward the general big picture; we should do both.","username":"danielhardman","ts":"2019-11-06T00:49:44.473Z"}
{"msg":"BTW, do you have a draft of the KMS stuff that we can start looking at?","username":"danielhardman","ts":"2019-11-06T00:54:09.520Z"}
{"msg":"I do apologize I realized that my statement above makes sounds like I am against your work on the slides. I actually really appreciate that work and have used it in my draft for the RFC for the KMS. I am more trying to compile all the good ideas that have been agreed upon so my draft may look familiar because it is compiled and then concepts are explained by me. \n\nMy fear here is that we have a general RFC that goes against the KMS architecture (or any other piece of the architecture), therefore causing a divide. There are certain concepts that have been sold to the community already would be an anti-pattern to renege on those.\n\nhere is what I have compiled so far:  https://github.com/mac-arrap/aries-rfcs/tree/master/concepts/0276-key-management-service (it's pretty similar to what you've descibed) but I realized today that this is incomplete if we do not give a rough outline of what the APIs will look like. So I have invited the community to participate in that effort and realize that it might take some sitting down and discussing this.","username":"cam-parra","ts":"2019-11-06T01:33:52.258Z"}
{"msg":"What you have so far seems like a reasonable start to me, but it is maybe 5% of what that doc needs. The APIs only add another 5%.\n\nI don't get why you say in your table that the Indy wallet doesn't have pluggable persistance. That was one of the major features of the Indy wallet--a defining characteristic, even. Maybe you mean something different from it than what I guess?","username":"danielhardman","ts":"2019-11-06T01:39:19.023Z"}
{"msg":"Some major sections that I think the doc will eventually need include:\n\n1. What kind of data goes into a KMS? Why?\n2. Is a KMS searchable? How?\n3. How is a KMS protected at rest? How is it protected when accessed over the wire?\n4. What scale and performance contract does a KMS offer?\n5. How is data in a KMS replicated? (I suspect the easy answer: \"not at all\" is a dead end, since DIDs and public keys do need replication)\n6. How does backup and recovery work?","username":"danielhardman","ts":"2019-11-06T01:42:27.131Z"}
{"msg":"I meant that indy does not offer a pluggable storage for keys themselves. If that is a mistake I can fix that . Thank you I will start working on those questions and update the doc tomorrow. I do think that it will take more than just me to populate this document since there are many details that must be agreed upon and many may have specific needs that need to be fulfilled by the kms. ","username":"cam-parra","ts":"2019-11-06T01:46:27.639Z"}
{"msg":"My suggestion would be to split out a subset of the content of this RFC into a new RFC. This subset of content should be agnostic of use case, governance structure, credential types, and ledgers. There can be other RFCs for more detailed variations. ","username":"troyronda","ts":"2019-11-06T13:06:28.593Z"}
{"msg":"My suggestion would be to split out a subset of the content of this RFC into a new Overview RFC. This subset of content should be agnostic of use case, governance structure, credential types, and ledgers. There can be other RFCs for more detailed variations.","username":"troyronda","ts":"2019-11-06T13:06:28.593Z"}
{"msg":"My suggestion would be to split out a subset of the content of this RFC into a new Overview RFC. (and augment with additional overview content as needed). This subset of content should be agnostic of use case, governance structure, credential types, and ledgers.","username":"troyronda","ts":"2019-11-06T13:06:28.593Z"}
{"msg":"Starting the Aries WG A call in 2 minutes:\nhttps://zoom.us/j/244779296","username":"esplinr","ts":"2019-11-06T14:58:45.679Z"}
{"msg":"@TelegramSam @swcurran @danielhardman I'm confused by the implications of this comment. https://github.com/hyperledger/aries-rfcs/pull/302#issuecomment-552553453 (This process does make a change to what PRs can be accepted by RFC repo maintainers.)","username":"troyronda","ts":"2019-11-11T21:13:02.130Z"}
{"msg":"@TelegramSam @swcurran @danielhardman I'm also a bit confused by the implications of this comment. https://github.com/hyperledger/aries-rfcs/pull/302#issuecomment-552553453 (This process does make a change to what PRs can be accepted by RFC repo maintainers.)","username":"troyronda","ts":"2019-11-11T21:13:02.130Z"}
{"msg":"This \"Aries Stable\" proposal leaves out newer members like ourselves. Despite our newness, we have already made substantial contributions, so this proposal (and general process) gives concern. We are very focused on a ledger, credential, and governance framework neutral approach to DID communications.","username":"troyronda","ts":"2019-11-11T21:20:18.750Z"}
{"msg":"We should be careful that proposals like \"Aries Stable\" does not leave out newer members like ourselves. Despite our newness, we have already made substantial contributions, so this proposal (and general process) gives concern. We are very focused on a ledger, credential, and governance framework neutral approach to DID communications.","username":"troyronda","ts":"2019-11-11T21:20:18.750Z"}
{"msg":"I would hope that the community remains vigilant that process and labelling proposals do not leave out newer members like ourselves. Despite our newness, we have already made substantial contributions, so this proposal (and general process) gives concern. We are very focused on a ledger, credential, and governance framework neutral approach to DID communications.","username":"troyronda","ts":"2019-11-11T21:20:18.750Z"}
{"msg":"I would hope that the community remains vigilant that process and labelling proposals do not leave out newer members like ourselves. Despite our relative newness, we have already made substantial contributions, so this proposal (and general process) gives concern. We are very focused on a ledger, credential, and governance framework neutral approach to DID communications.","username":"troyronda","ts":"2019-11-11T21:20:18.750Z"}
{"msg":"I would hope that the community remains vigilant that process and labelling proposals do not leave out newer members like ourselves. Despite our relative newness, we have already made substantial contributions, so some interpretations of this proposal (and the general process) gives concern. We are very focused on a ledger, credential, and governance framework neutral approach to DID communications.","username":"troyronda","ts":"2019-11-11T21:20:18.750Z"}
{"msg":"On my phone, but quick answer is that  certain PRs for this RFC have to be handled like PRs that change the status of a protocol RFC to \"Accepted\" - they need community agreement before merging. I think that is what Sam is highlighting.","username":"swcurran","ts":"2019-11-11T21:43:11.448Z"}
{"msg":"I don't understand how we work on the next version of these protocols.","username":"troyronda","ts":"2019-11-11T21:44:29.479Z"}
{"msg":"I don't understand how we work on the next iteration of these protocols.","username":"troyronda","ts":"2019-11-11T21:44:29.479Z"}
{"msg":"Are we creating brand new RFCs for all of those RFCs to change the message type to https://didcomm.org (quick example).","username":"troyronda","ts":"2019-11-11T21:44:56.791Z"}
{"msg":"Are we branching the repo?","username":"troyronda","ts":"2019-11-11T21:46:36.508Z"}
{"msg":"Are we branching the aries-rfc repo?","username":"troyronda","ts":"2019-11-11T21:46:36.508Z"}
{"msg":"Seems like we are missing a critical step of the process for those of us who are working on the iteration beyond what has been proposed.","username":"troyronda","ts":"2019-11-11T21:47:14.410Z"}
{"msg":"Seems like we are missing a critical step of the process for those of us who are working on the iteration beyond what has been proposed in RFC 302.","username":"troyronda","ts":"2019-11-11T21:47:14.410Z"}
{"msg":"Seems like we need clarification on a critical step of the process for those of us who are working on the iteration beyond what has been proposed in RFC 302.","username":"troyronda","ts":"2019-11-11T21:47:14.410Z"}
{"msg":"We (aries-framework-go) are now starting on the credential protocols so we are going to hit this issue rapidly.","username":"troyronda","ts":"2019-11-11T21:49:46.668Z"}
{"msg":"We (aries-framework-go contributors) are now starting on the credential protocols so we are going to hit this issue rapidly.","username":"troyronda","ts":"2019-11-11T21:49:46.668Z"}
{"msg":"On another topic, we wrote up the aries-framework-go project description in preparation for our 0.1.0 release: https://github.com/hyperledger/aries-framework-go#framework-go","username":"troyronda","ts":"2019-11-11T21:59:32.851Z"}
{"msg":"We are wrapping up a few more documentation updates ... so we expect the release shortly.","username":"troyronda","ts":"2019-11-11T22:00:33.188Z"}
{"msg":"@troyronda I think we handle the message type change different than other protocol changes. Meaning, I don't think we need to 'version' them the same way. Further, I think we can have a conversion period handled in a small way within codebases that allows a transition period.","username":"TelegramSam","ts":"2019-11-12T15:39:56.633Z"}
{"msg":"Adding a detect and replace block of code should be possible in a single place within a codebase. This allows for support of both for a period.","username":"TelegramSam","ts":"2019-11-12T15:52:11.372Z"}
{"msg":"for the RFCs, This is also a search and replace operation.","username":"TelegramSam","ts":"2019-11-12T15:52:33.322Z"}
{"msg":"combined approach means much less operational churn.","username":"TelegramSam","ts":"2019-11-12T15:52:43.803Z"}
{"msg":"when we have a plan, we can set a community goal for accepting the new type strings. (as described above).","username":"TelegramSam","ts":"2019-11-12T15:54:02.387Z"}
{"msg":"We (Nick) did a cut at an implementation last week. It does get a bit tricky and invasive to support both when you have to track which version of the @type to use with each outbound message based on the inbound message of the thread.  It is not a search and replace, but it is doable. ","username":"swcurran","ts":"2019-11-12T15:54:06.144Z"}
{"msg":"then a goal to transmit the new type, then a goal to remove old support.","username":"TelegramSam","ts":"2019-11-12T15:54:37.494Z"}
{"msg":"We plan to support both for a period of time.  See: https://github.com/hyperledger/aries-cloudagent-python/issues/244","username":"swcurran","ts":"2019-11-12T15:54:53.734Z"}
{"msg":"We are also making some changes in ACA-Py that will make the transition from Connection to DID Exchange easier. It has the same issue with tracking the inbound message to know what to support, with the added fun of having a generated `invitation` (first message) not knowing what protocol family to use.  Our suggestion is that we make `invitation` separate from either Connection or DID Exchange to eliminate that issue.","username":"swcurran","ts":"2019-11-12T15:57:33.492Z"}
{"msg":"That would still leave the issue of how to respond to an invitation - which protocol to use.","username":"swcurran","ts":"2019-11-12T15:58:10.629Z"}
{"msg":"@TelegramSam do these repo renaming and the like use the RFC process or no?","username":"rjones","ts":"2019-11-20T17:12:21.386Z"}
{"msg":"@TelegramSam do these repo renaming and the like use the RFC process or no? https://chat.hyperledger.org/channel/community-architects?msg=q9JSWS7pWGf5HH5Cg","username":"rjones","ts":"2019-11-20T17:12:21.386Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/community-architects?msg=q9JSWS7pWGf5HH5Cg","url":"https://chat.hyperledger.org/channel/community-architects?msg=q9JSWS7pWGf5HH5Cg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@rjones No.","username":"TelegramSam","ts":"2019-11-20T17:16:19.796Z"}
{"msg":"RFC processes are unique to that one repo.","username":"TelegramSam","ts":"2019-11-20T17:16:34.207Z"}
{"msg":"These are all code repos.","username":"TelegramSam","ts":"2019-11-20T17:16:39.517Z"}
{"msg":"OK, cool. That isn't the case for Fabric's new RFC process so I wanted to make sure I'm not breaking anything.","username":"rjones","ts":"2019-11-20T17:17:05.875Z"}
{"msg":":thumbsup: ","username":"TelegramSam","ts":"2019-11-20T17:17:19.867Z"}
{"msg":"`dbluhm` is a maintainer of `aries-sdk-javascript`. Remove?","username":"rjones","ts":"2019-11-20T17:20:25.831Z"}
{"msg":"You should be able to see members and pending members here: https://github.com/orgs/hyperledger/teams/aries-sdk-javascript-committers/members","username":"rjones","ts":"2019-11-20T17:21:00.650Z"}
{"msg":"@TelegramSam With the exception of the question about @dbluhm everything is set up for https://github.com/hyperledger/aries-framework-javascript and https://github.com/hyperledger/aries-sdk-javascript","username":"rjones","ts":"2019-11-20T17:30:25.045Z"}
{"msg":"@ajayjadhav discussion here ^^^","username":"rjones","ts":"2019-11-20T17:31:00.637Z"}
{"msg":"I haven't been involved in `aries-sdk-javascript` to this point. I mean, I'm happy to contribute lol but not sure I'm a first pick for maintainership :slight_smile: ","username":"dbluhm","ts":"2019-11-20T17:31:48.345Z"}
{"msg":"OK, I'll remove you if you like :)","username":"rjones","ts":"2019-11-20T17:32:02.432Z"}
{"msg":"Probably best","username":"dbluhm","ts":"2019-11-20T17:32:14.696Z"}
{"msg":"@TelegramSam whenever you want to transfer the two new repos, just go for it - transfer them to my GitHub ID, `ryjones`","username":"rjones","ts":"2019-11-20T17:35:56.274Z"}
{"msg":"\"Repository transfer to ryjones requested\" for aries-acapy-plugin-toolbox","username":"dbluhm","ts":"2019-11-20T18:07:54.186Z"}
{"msg":"@rjones ^","username":"dbluhm","ts":"2019-11-20T18:07:59.400Z"}
{"msg":"Same for aries-toolbox now","username":"dbluhm","ts":"2019-11-20T18:11:02.365Z"}
{"msg":"@dbluhm who will the maintainers be?","username":"rjones","ts":"2019-11-20T18:12:50.136Z"}
{"msg":"The following will do:\nFor toolbox: @TelegramSam, @burdettadam, and myself\nFor aries-acapy-plugin-toolbox: @TelegramSam, and myself","username":"dbluhm","ts":"2019-11-20T18:15:04.144Z"}
{"msg":"Has joined the channel.","username":"burdettadam","ts":"2019-11-20T18:15:04.175Z","type":"uj"}
{"msg":"@dbluhm @TelegramSam I think everything is set up now.","username":"rjones","ts":"2019-11-20T18:25:55.652Z"}
{"msg":"Thanks!","username":"dbluhm","ts":"2019-11-20T18:26:12.315Z"}
{"msg":"Thanks @rjones ","username":"ajayjadhav","ts":"2019-11-20T19:17:07.092Z"}
{"msg":"@rjones I'm interested in using Github Actions to automatically upload packages to PyPI for Aries Static Agent Python on new releases but this requires using secrets which I am unable to manage or create on the repository. Is that something I can be granted access to? It's not too big of a deal but it would be convenient","username":"dbluhm","ts":"2019-11-21T00:27:25.113Z"}
{"msg":"which repo?","username":"rjones","ts":"2019-11-21T00:29:20.101Z"}
{"msg":"https://github.com/hyperledger/aries-staticagent-python","username":"dbluhm","ts":"2019-11-21T00:29:37.512Z"}
{"msg":"OK. You have as much permission as I can delegate. If you can't get there from here, I can work with you to make this happen.","username":"rjones","ts":"2019-11-21T00:30:45.284Z"}
{"msg":"I'm all on the \"automate this away\" train","username":"rjones","ts":"2019-11-21T00:30:59.752Z"}
{"msg":"Looks like that worked. Thanks!","username":"dbluhm","ts":"2019-11-21T00:31:12.819Z"}
{"msg":"Let me know when you have it wired up and working.","username":"rjones","ts":"2019-11-21T00:31:31.302Z"}
{"msg":"Will do","username":"dbluhm","ts":"2019-11-21T00:32:10.487Z"}
{"msg":"Got it set up and working. If you're curious, you can see the result of the action here (it failed because I didn't bump the version number and I've already published for this version): https://github.com/hyperledger/aries-staticagent-python/commit/b2a5425d4378b170fea6b00296de26d44513f185/checks?check_suite_id=321353617\n\nMight make this a little more sophisticated with future PRs but that's it basically taken care of.","username":"dbluhm","ts":"2019-11-21T00:54:35.068Z"}
{"msg":"cool. I won't change anything for a while in case you need to jiggle some bits around","username":"rjones","ts":"2019-11-21T00:55:12.608Z"}
{"msg":"Has joined the channel.","username":"SwapnaliDive","ts":"2019-11-22T11:45:06.619Z","type":"uj"}
{"msg":"Has joined the channel.","username":"huxd","ts":"2019-11-26T09:00:11.669Z","type":"uj"}
{"msg":"@rjones Hey, Can we have more detailed document of aries aca-py to setup it locally and run it. ","username":"SwapnaliDive","ts":"2019-11-29T06:45:08.100Z"}
{"msg":"@SwapnaliDive ask in #aries please. I don't have any connection to the project other than creating the repo.","username":"rjones","ts":"2019-11-29T08:55:14.188Z"}
{"msg":"The recording for the last call has not been posted yet.","username":"george.aristy","ts":"2019-11-30T18:04:12.941Z"}
{"msg":"@swcurran @tplooker I'm trying to understand the use cases you guys have in mind for `did:key` in DIDComm. Can you guys share your thoughts?","username":"george.aristy","ts":"2019-11-30T18:31:07.816Z"}
{"msg":"Basically, any place in an RFC where there is a naked public key.  I'm not 100% sold on did:key, although after the call Wednesday I'm on board.  I do think that at minimum, we need to use multicodecs, so that we have both the key and algorithm in a concise form.  But Tobias was pretty convincing to me on the benefits of using did:key. ","username":"swcurran","ts":"2019-11-30T18:34:51.856Z"}
{"msg":"Basically, any place in an RFC where there is a naked public key.  I'm not 100% sold on did:key, although after the call Wednesday I'm more on board.  I do think that at minimum, we need to use multicodecs, so that we have both the key and algorithm in a concise form.  But Tobias was pretty convincing to me on the benefits of using did:key. ","username":"swcurran","ts":"2019-11-30T18:34:51.856Z"}
{"msg":"I don't think it will be particularly hard to implement.","username":"swcurran","ts":"2019-11-30T18:35:23.078Z"}
{"msg":"Yes, I definitely think naked keys are nowhere close to ideal. Some encoding mechanism like multicodecs or JWKs should be used (the former preferred due to reduced size).","username":"george.aristy","ts":"2019-11-30T18:37:06.616Z"}
{"msg":"What I did not understand was your statement about the other fields of did:key being useful. And you specifically pointed out `keyAgreement`. That alone reminded me of that weird quirk that some implementations are doing.","username":"george.aristy","ts":"2019-11-30T18:37:57.114Z"}
{"msg":"I don't understand why we need everything else aside from the key.","username":"george.aristy","ts":"2019-11-30T18:38:11.793Z"}
{"msg":"There's also this point about documentation on usage of the key being built into did:key - I'd like to see how/where that is done.","username":"george.aristy","ts":"2019-11-30T18:38:48.097Z"}
{"msg":"I assume you know about this: https://digitalbazaar.github.io/did-method-key/   @tplooker - do you know where those others would be used?\n\nAlso, what are your thoughts about the practicality of using both derivations of the keys?  Presumably you can start with either and derive the other?","username":"swcurran","ts":"2019-11-30T18:44:58.028Z"}
{"msg":"I assume you know about this: https://digitalbazaar.github.io/did-method-key/   @tplooker - do you know where it is documented how each entry in the DIDDoc would be used?\n\nAlso, what are your thoughts about the practicality of using both derivations of the keys?  Presumably you can start with either and derive the other?","username":"swcurran","ts":"2019-11-30T18:44:58.028Z"}
{"msg":"Ah, thank you for that link. All I had to go on was their github repo (https://github.com/digitalbazaar/did-method-key).","username":"george.aristy","ts":"2019-11-30T18:47:06.766Z"}
{"msg":"I'll go through their method spec now","username":"george.aristy","ts":"2019-11-30T18:47:13.572Z"}
{"msg":"It leaves me with the same questions. :/","username":"george.aristy","ts":"2019-11-30T19:01:42.922Z"}
{"msg":"Yeah, there's not much about how the entries should be used, just the transformation from the input to the DIDDoc.","username":"swcurran","ts":"2019-11-30T21:07:34.948Z"}
{"msg":"@george.aristy which elements of the did:key did document did you find confusing? The keyAgreement section makes it explict that the key defined in the section is appropriate for keyAgreement usage e.g doing ECDH KDF","username":"tplooker","ts":"2019-11-30T23:25:52.004Z"}
{"msg":"Which we need for both auth and anon crypt","username":"tplooker","ts":"2019-11-30T23:26:03.266Z"}
{"msg":"without being explicit we risk someone using a key inappropriately, for instance if you use ed25519 keys for this purpose without doing the conversion there are potential vulnerabilities ","username":"tplooker","ts":"2019-11-30T23:27:22.993Z"}
{"msg":"If I was going to create a non-repudiable signature in a did comm message I also need the key defined under the authentication section of the did:key did doc as this is an ed25519 key appropriate for signing","username":"tplooker","ts":"2019-11-30T23:28:31.514Z"}
{"msg":"did:key would just be a more formal way of achieving the approach than a raw multi-codec public key, the main thing I wanted to point out was that if we do go with just a raw multi-codex public key, we are creating a new type of identifier and as such it should be appropriately defined.","username":"tplooker","ts":"2019-11-30T23:33:03.086Z"}
{"msg":"@tplooker isn't the Linked Data Crypto Suite Registry supposed to fulfil that same purpose? To document the key's crypto suite and usage?","username":"george.aristy","ts":"2019-12-03T14:01:19.557Z"}
{"msg":"There are a number of aries rfcs that are not status changes.  Is there any reason that they are not being merged?  I'm going to do a few that I didn't write and can do those as well, if no one objects or no one else merges those.","username":"swcurran","ts":"2019-12-20T23:50:21.871Z"}
{"msg":"I went through and was wondering the same thing. Most seemed like they were good to merge. I noticed there were a few status changes and other dated items that are lingering as well.","username":"kdenhartog","ts":"2020-01-06T04:29:20.176Z"}
{"msg":"At the very least we can merge and if additional changes are made new PRs can be added.","username":"kdenhartog","ts":"2020-01-06T04:29:34.910Z"}
{"msg":"@george.aristy, im unsure what you mean? if you are referring to the proofPurpose field in a Linked Data proof, that tells you what the key should be authorised with in reference to  the \"verificationMethod\". E.g take the following proof\n\n```\n{\n  \"@context\": \"https://www.w3.org/2018/credentials/examples/v1\",\n  \"title\": \"Hello World!\",\n  \"proof\": {\n    \"type\": \"Ed25519Signature2018\",\n    \"proofPurpose\": \"assertionMethod\",\n    \"created\": \"2019-08-23T20:21:34Z\",\n    \"verificationMethod\": \"did:example:123456#key1\",\n    \"domain\": \"example.org\",\n    \"jws\": \"eyJ0eXAiOiJK...gFWFOEjXk\"\n  }\n}\n```\n\nThis proof states the key identified by `did:example:123456#key1` should appear authorized in the did document retrieved by did:example:123456 for the \"assertionMethod\" proof purpose authorization is conveyed by the keys membership in the \"assertionMethod\" array element of the DID document","username":"tplooker","ts":"2020-01-06T04:40:50.432Z"}
{"msg":"A DID document conveys both keys and the authority those keys have on behalf of the DID subject","username":"tplooker","ts":"2020-01-06T04:42:19.935Z"}
{"msg":"@tplooker I was referring to how each LD Crypto Suite details how it's intended to be used. This is one of the benefits that proponents of did:key tout, yet we already have this in the form of existing crypto suites (if we accept JSON-LD as a representation for DIDs)","username":"george.aristy","ts":"2020-01-08T15:14:27.122Z"}
{"msg":"Hey - is there someone that has access to the recordings from Aries WG calls?  I recorded today's to the cloud and I don't have access to the recording.  Can someone send me the link?  @esplinr @TelegramSam @kenebert @nage @burdettadam \n\nThanks!","username":"swcurran","ts":"2020-01-08T23:57:52.375Z"}
{"msg":"@dbluhm ^^^ do you have this access?  If not, I would like to figure out how to make sure you get it","username":"nage","ts":"2020-01-09T17:12:39.434Z"}
{"msg":"The zoom room is hosted by @TelegramSam's zoom account. He's given me the ability to claim host in meetings but I unfortunately do not have access to the recordings sent to the cloud.","username":"dbluhm","ts":"2020-01-09T17:17:17.090Z"}
{"msg":"Can Kayla find it?=","username":"esplinr","ts":"2020-01-09T20:17:45.826Z"}
{"msg":"Can Kayla find it?","username":"esplinr","ts":"2020-01-09T20:17:45.826Z"}
{"msg":"I'm uploading the meeting recordings.","username":"TelegramSam","ts":"2020-01-09T20:41:32.763Z"}
{"msg":"Uploaded: https://wiki.hyperledger.org/pages/viewpage.action?pageId=24779761","username":"TelegramSam","ts":"2020-01-09T20:47:55.424Z"}
{"msg":"Thanks @TelegramSam !  Welcome back and Happy New Year!","username":"swcurran","ts":"2020-01-09T20:56:32.161Z"}
{"msg":"I updated the main Aries Read Me. I sure it can be further improved:\nhttps://github.com/hyperledger/aries/pull/11","username":"esplinr","ts":"2020-01-10T00:55:24.026Z"}
{"msg":"Hi - I ran the dotnet SDK ci script (the docker compose test) in a loop for 119 iterations over a couple of days and I found these tests failed the most: https://github.com/ryjones/atr/blob/master/src/COUNTS","username":"rjones","ts":"2020-01-10T20:25:36.337Z"}
{"msg":"this was on a 6 core Mac mini of the most recent vintage, dedicated to the task. I suspect some of these flakes could be disabled.","username":"rjones","ts":"2020-01-10T20:26:39.339Z"}
{"msg":"I did this experiment because that test almost always failed in AZP, it works almost always on my laptop, but it never worked on my iMac (which is older).","username":"rjones","ts":"2020-01-10T20:27:14.512Z"}
{"msg":"this was the test: https://github.com/ryjones/aries-framework-dotnet/blob/master/ci/docker-compose-test.sh ","username":"rjones","ts":"2020-01-10T20:28:10.321Z"}
{"msg":"I've merged a change (approved by @danielhardman ) that removes the index generation from the CI tests, per generation via the github action.","username":"TelegramSam","ts":"2020-01-13T15:42:09.020Z"}
{"msg":"@TelegramSam : can you please give us maintainers a 1-paragraph summary of the change in process we should expect as a result of this change? Do we just cross indexing off our list of worries in all contexts, forever? Or will we get error messages about the index not needing a change, that we should know to ignore, in cases where a PR doesn't introduce an index change?","username":"danielhardman","ts":"2020-01-13T16:45:50.188Z"}
{"msg":"Index generation becomes the concern of the maintainers, not the individual contributors. We should update the github action if we desire it to be different.\n\nRight now, if a merge doesn't need an index update, the action 'fails' because the index generated is not different as a result of the merge and cannot be committed. For the time being that can be ignored. An update to the action can handle that case more gracefully.","username":"TelegramSam","ts":"2020-01-13T16:57:26.411Z"}
{"msg":"@danielhardman Is that what you were looking for?","username":"TelegramSam","ts":"2020-01-13T16:58:12.095Z"}
{"msg":"Yes, that's just the clarification that I needed. Should we modify /contributing.md to remove the instruction to update the index?","username":"danielhardman","ts":"2020-01-13T16:59:13.549Z"}
{"msg":"Yes.","username":"TelegramSam","ts":"2020-01-13T17:00:00.047Z"}
{"msg":"I'm a bit confused about the implications of this. Does this mean I'll need to update index.md each time we're merging a PR or is the actions handling that?","username":"kdenhartog","ts":"2020-01-13T23:47:23.083Z"}
{"msg":"The actions are handling that.  You never need to touch index.md again.","username":"swcurran","ts":"2020-01-14T00:13:39.747Z"}
{"msg":"With each merge, the github action will regen and commit a new version of index.md.","username":"swcurran","ts":"2020-01-14T00:14:02.881Z"}
{"msg":"ok, that's seriously cool! Thanks","username":"kdenhartog","ts":"2020-01-14T02:51:54.995Z"}
{"msg":"FYI I added a label \"Merge Ready\" for when the author feels a PR is ready to be merged. What's peoples thoughts on using this so the author can indicate to maintainers that they'd like it to be merged? If people agree with this, I'll give a short announcement on the afternoon call about it this week.","username":"kdenhartog","ts":"2020-01-14T04:11:08.199Z"}
{"msg":"I like it.","username":"swcurran","ts":"2020-01-14T15:16:57.600Z"}
{"msg":"Ok, I think I have the index generation action fixed on the RFC repo. It should succeed even if the index had no changes as a result of the PR.","username":"TelegramSam","ts":"2020-01-16T19:00:47.058Z"}
{"msg":"Posted the RFC 334 update: https://github.com/hyperledger/aries-rfcs/pull/383","username":"troyronda","ts":"2020-01-16T21:03:28.609Z"}
{"msg":"I wrote a bit more than I had originally in the issue text - hopefully it helps.","username":"troyronda","ts":"2020-01-16T21:04:47.831Z"}
{"msg":"Awesome - thanks!","username":"swcurran","ts":"2020-01-16T21:19:33.595Z"}
{"msg":"So, does anybody here know when branch protection was turned on for the RFC repo?","username":"TelegramSam","ts":"2020-01-16T21:35:38.127Z"}
{"msg":"I'm pretty sure the branch protection is what is breaking the auto building index.","username":"TelegramSam","ts":"2020-01-16T21:52:38.611Z"}
{"msg":"Has joined the channel.","username":"rileyphughes","ts":"2020-01-16T22:22:31.696Z","type":"uj"}
{"msg":"it's usually turned on at repo creation time.","username":"rjones","ts":"2020-01-16T22:55:31.043Z"}
{"msg":"@TelegramSam https://gist.github.com/ryjones/bc4cd71f2464c312b25f7a9540152283 shows branch protection was enabled in June 2019","username":"rjones","ts":"2020-01-16T23:21:03.667Z"}
{"msg":"@TelegramSam https://gist.github.com/ryjones/bc4cd71f2464c312b25f7a9540152283 shows branch protection was last edited in June 2019","username":"rjones","ts":"2020-01-16T23:21:03.667Z"}
{"msg":"Hmm. I wonder why the push is failing then. ","username":"TelegramSam","ts":"2020-01-16T23:40:05.913Z"}
{"msg":"Line 14 and 15 show it is being rejected. If I had to guess, what we would need to do is make a branch the bot can access","username":"rjones","ts":"2020-01-17T00:05:18.452Z"}
{"msg":"Could the bot create a PR? I notice this repo has a bunch of stale branches that probably should have been PRs","username":"rjones","ts":"2020-01-17T00:07:10.149Z"}
{"msg":"those were PRs, but are protected branches now, and I can't delete them.","username":"TelegramSam","ts":"2020-01-17T06:20:48.233Z"}
{"msg":"I don't really want to create PRs for these autogenerated files....","username":"TelegramSam","ts":"2020-01-17T06:21:14.100Z"}
{"msg":"I have another idea.","username":"rjones","ts":"2020-01-17T16:40:00.876Z"}
{"msg":"I've applied branch protection to master, directly. You should be able to delete the other branches.","username":"rjones","ts":"2020-01-17T16:42:09.035Z"}
{"msg":"In searching around, it looks like the PR pathway is the way to go. https://github.community/t5/GitHub-Actions/Allowing-github-actions-bot-to-push-to-protected-branch/m-p/34454#M1924","username":"rjones","ts":"2020-01-17T18:08:56.209Z"}
{"msg":"We might be able to build on this: https://github.com/ridedott/dependabot-auto-merge-action","username":"rjones","ts":"2020-01-17T18:09:31.142Z"}
{"msg":"@dbluhm would you be interested in adding `Hyperledger` as an owner to `aries-staticagent-python` on PyPi? I would then add a token and send a PR to update the GitHub action for new releases.","username":"rjones","ts":"2020-01-21T23:00:31.135Z"}
{"msg":"https://pypi.org/user/hyperledger/","username":"rjones","ts":"2020-01-21T23:01:02.435Z"}
{"msg":"https://pypi.org/user/hyperledger/ s/owner/whatever is appropriate to publish new releases","username":"rjones","ts":"2020-01-21T23:01:02.435Z"}
{"msg":"Added as maintainer which should be able to publish new releases","username":"dbluhm","ts":"2020-01-21T23:02:28.693Z"}
{"msg":"OK. I replaced the existing secret with the new one. I don't see a reason to rename it.","username":"rjones","ts":"2020-01-21T23:05:19.941Z"}
{"msg":"Thank you, @dbluhm ","username":"rjones","ts":"2020-01-21T23:06:03.955Z"}
{"msg":"unneeded update branches deleted.","username":"TelegramSam","ts":"2020-01-22T02:32:13.393Z"}
{"msg":"I'm frustrated at the collission between GitHub Actions and branch protection.","username":"TelegramSam","ts":"2020-01-22T05:43:12.520Z"}
{"msg":"For now, it seems that a 2 part strategy is in order: 1. Respond to merge by regenerating the index and pushing it as a PR. Then, 2. Auto merge that PR and deleting the branch it came from.","username":"TelegramSam","ts":"2020-01-22T05:44:35.129Z"}
{"msg":"Which is totally how it should be. 😂","username":"rjones","ts":"2020-01-22T16:55:54.487Z"}
{"msg":"I disagree for bots.","username":"TelegramSam","ts":"2020-01-22T18:00:18.725Z"}
{"msg":"which is why I added the laughing emoji","username":"rjones","ts":"2020-01-22T18:01:32.101Z"}
{"msg":"Considering an alternate strategy: have an `autogenerated` branch that isn't subject to the same branch protection rules. The autogeneration checks out that branch, merges in master, runs the generation script, commits the new autogenerated files, and pushes to the `autogenerated` branch. We remove the autogenerated file, and change the links to it to point to the autogenerated branch version.","username":"TelegramSam","ts":"2020-01-22T18:02:37.544Z"}
{"msg":"this has slight inspiration from the `gh-pages` branch practice.","username":"TelegramSam","ts":"2020-01-22T18:03:06.093Z"}
{"msg":"Thoughts?","username":"TelegramSam","ts":"2020-01-22T18:03:29.558Z"}
{"msg":"I think that's a reasonable work-around","username":"rjones","ts":"2020-01-22T18:04:39.507Z"}
{"msg":"@danielhardman thoughts?","username":"TelegramSam","ts":"2020-01-22T18:05:50.001Z"}
{"msg":"I would be okay with that.","username":"danielhardman","ts":"2020-01-22T18:06:48.154Z"}
{"msg":"@rjones what are the branch protection rules in place now? how many reviewers, etc?","username":"TelegramSam","ts":"2020-01-22T18:06:51.936Z"}
{"msg":"Branch protection is only applied to `master` at this point. You're free to noodle on other branches","username":"rjones","ts":"2020-01-22T18:07:31.149Z"}
{"msg":"right, but what does master have on it?","username":"TelegramSam","ts":"2020-01-22T18:07:41.433Z"}
{"msg":"it's frustrating that I can't see a read only version even if I can't change it.","username":"TelegramSam","ts":"2020-01-22T18:08:04.524Z"}
{"msg":"","username":"danielhardman","ts":"2020-01-22T18:08:34.817Z","attachments":[{"type":"file","title":"Screen Shot 2020-01-22 at 11.08.09 AM.png","title_link":"/file-upload/XqkiG2nXjjWkP3ci8/Screen%20Shot%202020-01-22%20at%2011.08.09%20AM.png","image_url":"/file-upload/XqkiG2nXjjWkP3ci8/Screen%20Shot%202020-01-22%20at%2011.08.09%20AM.png","image_type":"image/png","image_size":296738,"url":"/file-upload/XqkiG2nXjjWkP3ci8/Screen%20Shot%202020-01-22%20at%2011.08.09%20AM.png","remote":false,"fileId":"XqkiG2nXjjWkP3ci8","fileName":"Screen Shot 2020-01-22 at 11.08.09 AM.png"}]}
{"msg":"`Require status checks to pass before merging, Require branches to be up to date before merging, DCO, Include administrators`","username":"rjones","ts":"2020-01-22T18:08:58.882Z"}
{"msg":"the benefit of maintaining a separate branch is that we avoid all the issues at once.","username":"TelegramSam","ts":"2020-01-22T18:09:28.258Z"}
{"msg":"Ry gave me permissions on this part, so I can facilitate to some extent.","username":"danielhardman","ts":"2020-01-22T18:09:28.623Z"}
{"msg":"I turned off the `restrict` and re-enabled `DCO` since I only had those settings for trying to work around the bot issue","username":"rjones","ts":"2020-01-22T18:09:45.548Z"}
{"msg":"Fabric had a similar issue - they created a GitHub user which they added to the \"allow\" block to work around it","username":"rjones","ts":"2020-01-22T18:10:32.771Z"}
{"msg":"It doesn't feel 'clean' but it feels cleaner than the other options.","username":"TelegramSam","ts":"2020-01-22T18:10:41.133Z"}
{"msg":"I imagine there will be future movement around bots and GH Actions because of this conflict.","username":"TelegramSam","ts":"2020-01-22T18:11:05.618Z"}
{"msg":"agreed","username":"rjones","ts":"2020-01-22T18:11:20.272Z"}
{"msg":"@TelegramSam `git commit --allow-empty -s -m \"whatever\"` might help your testing","username":"rjones","ts":"2020-01-22T23:56:12.146Z"}
{"msg":"argh.","username":"TelegramSam","ts":"2020-01-23T00:09:22.942Z"}
{"msg":"bungled a merge and push.","username":"TelegramSam","ts":"2020-01-23T00:09:31.264Z"}
{"msg":"this was supposed to stay on my fork for testing.","username":"TelegramSam","ts":"2020-01-23T00:09:38.716Z"}
{"msg":"yeah I kind of figured :)","username":"rjones","ts":"2020-01-23T00:13:58.339Z"}
{"msg":"considering `GITHUB_TOKEN` isn't defined in `aries-rfcs`","username":"rjones","ts":"2020-01-23T00:14:18.616Z"}
{"msg":"@TelegramSam do you want me to roll master back a little?","username":"rjones","ts":"2020-01-23T00:55:25.489Z"}
{"msg":"I could do it, but I'm not sure if you would rather to a `git revert`","username":"rjones","ts":"2020-01-23T00:55:49.243Z"}
{"msg":"do roll back master.","username":"TelegramSam","ts":"2020-01-23T01:27:03.421Z"}
{"msg":"that would help","username":"TelegramSam","ts":"2020-01-23T01:27:05.435Z"}
{"msg":"@TelegramSam what exact commit? https://github.com/hyperledger/aries-rfcs","username":"rjones","ts":"2020-01-23T01:41:33.854Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/commit/9867421f46c3e6f174a4db01a49a7cb5dfe32f02 I assume?","username":"rjones","ts":"2020-01-23T01:41:57.073Z"}
{"msg":"@TelegramSam done.","username":"rjones","ts":"2020-01-23T01:45:36.042Z"}
{"msg":"@TelegramSam I've enabled \"one code review required\" on master to hopefully stop this from happening again :)","username":"rjones","ts":"2020-01-23T01:49:47.949Z"}
{"msg":"Thanks.","username":"TelegramSam","ts":"2020-01-23T03:01:28.325Z"}
{"msg":"I was working on my fork, then didn't notice when it switched.","username":"TelegramSam","ts":"2020-01-23T03:01:45.020Z"}
{"msg":"PR needs review and merge: this builds in the autogenerated branch bot modification discussed above: https://github.com/hyperledger/aries-rfcs/pull/392","username":"TelegramSam","ts":"2020-01-23T15:29:40.899Z"}
{"msg":"@TelegramSam I had one comment","username":"rjones","ts":"2020-01-23T15:31:09.015Z"}
{"msg":"facepalmed and fixed.","username":"TelegramSam","ts":"2020-01-23T15:32:24.077Z"}
{"msg":"Related Thoughts: Actions need a button to manually run an action. (has been well requested of the actions team)\nalso: Having a draft mode that allows testing of action changes prior to commit would be great.","username":"TelegramSam","ts":"2020-01-23T15:34:33.042Z"}
{"msg":"Agreed","username":"rjones","ts":"2020-01-23T15:35:15.338Z"}
{"msg":"I tested by mostly screwing up my forked copy of the repo. plan to refork after this works properly to clean up.","username":"TelegramSam","ts":"2020-01-23T15:36:10.174Z"}
{"msg":"but forks are not a perfect solution, unless I replicate all the branch protection etc.","username":"TelegramSam","ts":"2020-01-23T15:36:34.178Z"}
{"msg":"ARGH.","username":"TelegramSam","ts":"2020-01-23T17:30:21.177Z"}
{"msg":"```Push to branch autogenerated\nremote: Permission to hyperledger/aries-rfcs.git denied to github-actions[bot].\nfatal: unable to access 'https://github.com/hyperledger/aries-rfcs.git/': The requested URL returned error: 403```","username":"TelegramSam","ts":"2020-01-23T17:30:24.984Z"}
{"msg":"what permissions are set up for the autogenerated branch?","username":"TelegramSam","ts":"2020-01-23T17:30:44.426Z"}
{"msg":"@rjones ^","username":"TelegramSam","ts":"2020-01-23T17:40:42.872Z"}
{"msg":"None","username":"rjones","ts":"2020-01-23T17:51:40.345Z"}
{"msg":"@TelegramSam https://zoom.us/j/2032622322","username":"rjones","ts":"2020-01-23T17:52:24.782Z"}
{"msg":"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets","username":"rjones","ts":"2020-01-23T18:00:57.641Z"}
{"msg":"Who is attending the Hyperledger Global Forum?\nI grabbed us a 10 minute slot to present about the Aries Project. The goal is to \"recruit contributors\". If you want to present, let me know and I'll substitute your name for mine.\nhttps://wiki.hyperledger.org/display/HGF/Projects+Kiosk","username":"esplinr","ts":"2020-01-23T19:43:19.495Z"}
{"msg":"Has joined the channel.","username":"BrianRichter","ts":"2020-01-23T19:45:29.090Z","type":"uj"}
{"msg":"@danielhardman this is the result of an error, @TelegramSam can explain","username":"rjones","ts":"2020-01-24T23:07:33.656Z"}
{"msg":"@danielhardman this is the result of an error, @TelegramSam can explain https://github.com/hyperledger/aries-rfcs/pull/385#discussion_r370879736","username":"rjones","ts":"2020-01-24T23:07:33.656Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/385#issuecomment-578337550 is how to fix it","username":"rjones","ts":"2020-01-24T23:11:26.052Z"}
{"msg":"broken DCO, as well.","username":"rjones","ts":"2020-01-24T23:21:22.067Z"}
{"msg":"I will not be attending. There will be folks from the Sovrin Foundation there.","username":"TelegramSam","ts":"2020-01-28T15:30:50.976Z"}
{"msg":"A few of us (BC Gov, ACA-Py) team will be there ... so I am sure we would be happy ","username":"jljordan_bcgov","ts":"2020-01-28T20:04:03.190Z"}
{"msg":"Sounds great. We can either work together on the 10 minute presentation, or someone from your team can put your name on the sheet and I can focus on Indy and Ursa. Whichever you prefer.","username":"esplinr","ts":"2020-01-28T20:06:06.192Z"}
{"msg":"Has joined the channel.","username":"sheldon.regular","ts":"2020-02-03T18:05:39.009Z","type":"uj"}
{"msg":"@MALodder @cam-parra A couple of weeks ago we discussed having you discuss Aries-KMS during the Aries WG A call tomorrow morning. I forgot to remind you during our conversation today. Are you still planning on attending?","username":"esplinr","ts":"2020-02-25T22:44:37.818Z"}
{"msg":"Has joined the channel.","username":"MALodder","ts":"2020-02-25T22:44:37.857Z","type":"uj"}
{"msg":"I know that you don't have a formal architecture to discuss, but it would be great to discuss your current thinking at the same level as we did today.","username":"esplinr","ts":"2020-02-25T22:45:04.919Z"}
{"msg":"I know that you don't have a formal architecture to discuss, but it would be great to discuss your current thinking in the public call at the same level as we did today.","username":"esplinr","ts":"2020-02-25T22:45:04.919Z"}
{"msg":"I could but as I was saying today I’m not done yet but I could put something together ","username":"MALodder","ts":"2020-02-25T22:45:30.686Z"}
{"msg":"Would you want to present what have so far?","username":"MALodder","ts":"2020-02-25T22:47:04.833Z"}
{"msg":"Actually, lets postpone to the future meeting (March 11). You'll have more time. But I think it would be great for you to give a couple of minutes update so people understand the direction of your thinking.","username":"esplinr","ts":"2020-02-25T22:47:33.574Z"}
{"msg":"@andrew.whitehead We've been discussing how to implement Rich Schemas, and want to clarify how it relates to your work on indy-credx, and what @MALodder has been doing on aries-credx. I would like to make that the focus of our call tomorrow.","username":"esplinr","ts":"2020-02-25T22:50:37.932Z"}
{"msg":"Will you be able to attend @andrew.whitehead ?","username":"esplinr","ts":"2020-02-25T22:52:16.800Z"}
{"msg":"Sure, I can make it @esplinr ","username":"andrew.whitehead","ts":"2020-02-25T22:54:18.511Z"}
{"msg":"That will be great. I'm looking forward to the call.","username":"esplinr","ts":"2020-02-25T22:54:30.055Z"}
{"msg":"Perhaps also how the Rich Schema work relates to indy-vdr?  Updates to the transactions written to/retrieved from the ledger?","username":"swcurran","ts":"2020-02-25T23:00:23.799Z"}
{"msg":"Can I get a merge on this one? https://github.com/hyperledger/aries-rfcs/pull/442","username":"TelegramSam","ts":"2020-03-24T19:23:39.001Z"}
{"msg":"@danielhardman @swcurran ^","username":"TelegramSam","ts":"2020-03-24T19:24:40.476Z"}
{"msg":"","username":"danielhardman","ts":"2020-03-24T19:33:10.031Z","attachments":[{"type":"file","title":"1585078375593.aac","title_link":"/file-upload/JAQJWE88miuuzJuNX/1585078375593.aac","audio_url":"/file-upload/JAQJWE88miuuzJuNX/1585078375593.aac","audio_size":56862,"audio_type":"audio/aac","url":"/file-upload/JAQJWE88miuuzJuNX/1585078375593.aac","remote":false,"fileId":"JAQJWE88miuuzJuNX","fileName":"1585078375593.aac"}]}
{"msg":"Thanks! (Stephen might beat you to it)","username":"TelegramSam","ts":"2020-03-24T19:33:39.631Z"}
{"msg":"I did","username":"swcurran","ts":"2020-03-24T19:33:46.526Z"}
{"msg":":thumbsup: Thanks!","username":"TelegramSam","ts":"2020-03-24T19:34:28.432Z"}
{"msg":"Has joined the channel.","username":"kumar89","ts":"2020-03-25T17:29:34.340Z","type":"uj"}
{"msg":"@swcurran or @TelegramSam : could I get a merge of this PR? I have resolved Kyle's comments about it. https://github.com/hyperledger/aries-rfcs/pull/431 (@kdenhartog, could you change your review to an approved status?)","username":"danielhardman","ts":"2020-03-31T22:00:02.290Z"}
{"msg":"merged.","username":"TelegramSam","ts":"2020-03-31T22:11:54.633Z"}
{"msg":"Thanks, Sam!","username":"danielhardman","ts":"2020-03-31T22:32:34.292Z"}
{"msg":"Ahh does me requesting changes block the review? If it does, force push with a rebase and you can make all current reviews go stale. I saw yesterday that it got merged (which is when I got back to it). Thanks Sam","username":"kdenhartog","ts":"2020-04-01T12:42:27.907Z"}
{"msg":"@swcurran @andrew.whitehead I've seen you guys mention difficulties occuring when ACKs are missing during implementations. Given this is a fundamental question that I always refer to as \"reliability guarantees\" could I get some of your time on a separate call to discuss this with you? Most recent mention of this was #3 in this comment https://github.com/decentralized-identity/didcomm-messaging/issues/38#issuecomment-606846036","username":"kdenhartog","ts":"2020-04-01T12:44:46.075Z"}
{"msg":"@kdenhartog - yes glad to talk about it.  Set up something for later this afternoon our time?","username":"swcurran","ts":"2020-04-02T17:48:38.967Z"}
{"msg":"Hey I was looking at the Aries repos.  Of the 30 repos, it looks like 13 were created and never used--created in anticipation of an evolution that never happened.  I suggest that we delete (not archive) all of them and if and when they are needed in the future, they can be created.  Any objections?\n\nThe list is:\n\n- aries-sdk\n- aries-agent\n- aries-sdk-python\n- aries-sdk-go\n- aries-sdk-dotnet\n- aries-kms\n- aries-vdri\n- aries-core\n- aries-kms-postgres\n- aries-ams-sqlite Archived\n- aries-sdk-ios\n- indy-vdri-aries\n- aries-vdri-peer Archived\n","username":"swcurran","ts":"2020-04-02T18:33:20.993Z"}
{"msg":"@swcurran let me know when, and I'll do it","username":"rjones","ts":"2020-04-02T19:23:55.688Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-maintainers?msg=H8Q4inMggrxyqwPTb) Just sent out a link","username":"kdenhartog","ts":"2020-04-02T20:57:44.101Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=H8Q4inMggrxyqwPTb","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=H8Q4inMggrxyqwPTb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Can we use Zoom instead?","username":"swcurran","ts":"2020-04-02T20:58:59.480Z"}
{"msg":"yeah preferably, I didn't have a link to include","username":"kdenhartog","ts":"2020-04-02T20:59:29.785Z"}
{"msg":"OK _ i'll send new update","username":"swcurran","ts":"2020-04-02T21:00:52.484Z"}
{"msg":"Also if @andrew.whitehead would like to join could you add him? I wasn't able to find his email","username":"kdenhartog","ts":"2020-04-02T21:01:29.593Z"}
{"msg":"I'm adding him :-)","username":"swcurran","ts":"2020-04-02T21:02:11.795Z"}
{"msg":"Just confirmed he can make it.","username":"swcurran","ts":"2020-04-02T21:02:18.186Z"}
{"msg":"Last call on this - anyone care if we eliminate these repos?\n\n```\nHey I was looking at the Aries repos. Of the 30 repos, it looks like 13 were created and never used--created in anticipation of an evolution that never happened. I suggest that we delete (not archive) all of them and if and when they are needed in the future, they can be created. Any objections?\n\nThe list is:\n\n- aries-sdk\n- aries-agent\n- aries-sdk-python\n- aries-sdk-go\n- aries-sdk-dotnet\n- aries-kms\n- aries-vdri\n- aries-core\n- aries-kms-postgres\n- aries-ams-sqlite Archived\n- aries-sdk-ios\n- indy-vdri-aries\n- aries-vdri-peer Archived\n```","username":"swcurran","ts":"2020-04-03T18:48:18.419Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/issues/460","username":"rjones","ts":"2020-04-04T12:42:07.351Z"}
{"msg":"@swcurran one more approval please - there are two repos with non-zero code, but IIRC that code is just copied from elsewhere.","username":"rjones","ts":"2020-04-04T15:24:48.579Z"}
{"msg":"Saw that and will check in a bit. Thanks.","username":"swcurran","ts":"2020-04-04T15:56:21.548Z"}
{"msg":"@andrew.whitehead @TelegramSam @dbluhm --  do you think we need the code in this repo?  https://github.com/hyperledger/aries-sdk-python","username":"swcurran","ts":"2020-04-04T22:05:04.238Z"}
{"msg":"I think it’s safe to say nobody’s using it","username":"andrew.whitehead","ts":"2020-04-04T22:06:49.133Z"}
{"msg":"@cam-parra @mattatkiva - do we think we need the code in this repo?  https://github.com/hyperledger/aries-kms/ \n\nIs this expected to continue to evolve?","username":"swcurran","ts":"2020-04-04T22:08:10.078Z"}
{"msg":"Has joined the channel.","username":"mattatkiva","ts":"2020-04-04T22:08:10.121Z","type":"uj"}
{"msg":"Is anyone else getting automated security notifications for aries packages? In particular I've gotten ones for Aries-framework-javascript, aries-toolbox, and aries-framework-go. Given I don't work in these codebases closely enough, I want to leave it to maintainers to merge PRs so I'm not breaking anything. I'm happy to assist with triaging them if maintainers can assist with merging PRs.","username":"kdenhartog","ts":"2020-04-06T08:17:06.924Z"}
{"msg":"i believe there is no code in there. Just some directories but yeah this is not expected to grow and can be done away with. But in my opinion this repo should serve as an MVP for a kms ","username":"cam-parra","ts":"2020-04-06T14:33:15.262Z"}
{"msg":"I can move it to the hyperledger-archives org if you like, @swcurran ","username":"rjones","ts":"2020-04-06T14:52:01.886Z"}
{"msg":"There seems to be much more attention at the `*-framework-*` level of things in Aries than the language sdk levels.","username":"TelegramSam","ts":"2020-04-06T15:26:19.762Z"}
{"msg":"under that flow, we likely don't need this repo around.","username":"TelegramSam","ts":"2020-04-06T15:26:43.716Z"}
{"msg":"@kdenhartog I also noticed that Dependabot PRs have started. e.g., https://github.com/hyperledger/aries-framework-go/pull/1567","username":"troyronda","ts":"2020-04-06T15:31:46.722Z"}
{"msg":"Seems that are okay to merge - https://chat.hyperledger.org/channel/tsc?msg=YMcvXNkCy58BT6Yzj","username":"troyronda","ts":"2020-04-06T15:32:16.503Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/tsc?msg=YMcvXNkCy58BT6Yzj","url":"https://chat.hyperledger.org/channel/tsc?msg=YMcvXNkCy58BT6Yzj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Seems they are okay to merge - https://chat.hyperledger.org/channel/tsc?msg=YMcvXNkCy58BT6Yzj","username":"troyronda","ts":"2020-04-06T15:32:16.503Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/tsc?msg=YMcvXNkCy58BT6Yzj","url":"https://chat.hyperledger.org/channel/tsc?msg=YMcvXNkCy58BT6Yzj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"If you really wanted, you could do a `git commit -s --amend ...` `git push --force-with-lease ...`","username":"rjones","ts":"2020-04-06T15:33:35.827Z"}
{"msg":"I was just going to push the merge button :P.","username":"troyronda","ts":"2020-04-06T15:33:57.243Z"}
{"msg":"Has joined the channel.","username":"jramps9","ts":"2020-04-07T15:50:12.342Z","type":"uj"}
{"msg":"Hello Aries maintainers! Friendly reminder to pls join us for the Marketing Committee-DevRel call tomorrow, 4/8 at 9am PT.  This is a great opportunity to learn how you can get involved in many aspects of Hyperledger marketing including overall messaging, events, content, social media, PR etc. Feel free to add items to the agenda: https://wiki.hyperledger.org/x/_QjcAQ Hope to see you there :slight_smile: ","username":"jramps9","ts":"2020-04-07T15:50:13.578Z"}
{"msg":"Who maintains the aries-toolbox? I have gotten more notifications about security vulnerabilities and would like to keep them updated. I can commit to handling the security concerns in that PR if no one feels capable of reviewing it who's already a maintainer. Also @swcurran are you guys using this in anyway while demoing ACA-py?","username":"kdenhartog","ts":"2020-05-01T01:45:20.762Z"}
{"msg":"No, we're not using it to demo.","username":"swcurran","ts":"2020-05-01T01:46:16.260Z"}
{"msg":"You might check with Robert Mitwiki. He's done some cool things with it.","username":"swcurran","ts":"2020-05-01T01:50:21.173Z"}
{"msg":"@mtfk ^^^","username":"swcurran","ts":"2020-05-01T01:50:52.126Z"}
{"msg":"Has joined the channel.","username":"mtfk","ts":"2020-05-01T01:50:52.155Z","type":"uj"}
{"msg":"Thanks, I'll work with Sam and Robert then to see what we should do. I suspect at the least @rjones would need to add me to the contributor team on that project so I can merge the security PRs.","username":"kdenhartog","ts":"2020-05-01T02:21:34.473Z"}
{"msg":"@kdenhartog done","username":"rjones","ts":"2020-05-01T06:17:59.517Z"}
{"msg":"@TelegramSam could you take a look at this? https://github.com/hyperledger/indy-agent/pull/132 ","username":"rjones","ts":"2020-05-01T17:13:05.059Z"}
{"msg":"hi, this what we did with aries-toolbox is to convert it to the web application for ease of use and use it for purpose of testing and demoing OCA, you can take a look here: https://github.com/thclab/aries\nif this would be any interest to merge into main repo we are more then happy to provide it. The idea is to continue converting aries-toolbox into more user friendly testing environment. ","username":"mtfk","ts":"2020-05-04T06:42:23.094Z"}
{"msg":"Hello Aries maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT TODAY, 5/13! Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-05-13+Meeting+notes","username":"jramps9","ts":"2020-05-13T12:13:14.014Z"}
{"msg":"hello - can somebody help me out with this question? I think there's a distinct possibility I'm missing something obvious: https://github.com/hyperledger/aries-rfcs/issues/476","username":"george.aristy","ts":"2020-05-13T20:43:00.171Z"}
{"msg":"Is anybody interested in being a maintainer for the Aries Toolbox, and/or the ACA-py toolbox plugin? I have updates, and we have not adjusted maintainers to those still in the industry.","username":"TelegramSam","ts":"2020-05-14T21:14:53.003Z"}
{"msg":"@TelegramSam  I can help","username":"mattatkiva","ts":"2020-05-15T13:44:36.960Z"}
{"msg":"@mattatkiva awesome! I'll see about getting you added.","username":"TelegramSam","ts":"2020-05-15T15:04:27.392Z"}
{"msg":"Hi @TelegramSam - I would also love to help..","username":"ajayjadhav","ts":"2020-05-20T15:02:51.151Z"}
{"msg":"Hi - I had a request from Jakub Koci and Ajay Jadhav to be made maintainers of https://github.com/hyperledger/aries-framework-javascript as well as moderators of https://lists.hyperledger.org/g/aries , which would give the ability to schedule meetings and the like. I'd like some guidance from the broader community","username":"rjones","ts":"2020-05-22T16:57:30.106Z"}
{"msg":"@TelegramSam @kdenhartog ^^","username":"rjones","ts":"2020-05-22T17:02:36.190Z"}
{"msg":"I didn't even know that lists.hyperledger.org/g/aries existed; I went looking for such a mailing list once, and couldn't find it. So I doubt it's being used. Either that, or I'm woefully behind the times. :-)\n\nRe. being maintainers, I see that Jakub has been making contributions there consistently, but that Ajay has only made one, 6 months ago. I don't have any other insight into who would make a good maintainer of the project, so I defer to others who may know more. (Certainly we want people who are active to be maintainers, if they are active in healthy ways. I have no reason to doubt that's the case here. I'm just ignorant.)","username":"danielhardman","ts":"2020-05-22T17:30:46.283Z"}
{"msg":"Thanks correct @danielhardman.\n@jakubkoci has been a major contributor to the repo, my contributions have been mainly on the project roadmap, technical discussions/decisions and reviewing/merging PRs. \n\nFYI - https://github.com/hyperledger/aries-framework-javascript/commits?author=jadhavajay","username":"ajayjadhav","ts":"2020-05-22T18:14:49.443Z"}
{"msg":"Thanks correct @danielhardman \n@jakubkoci has been a major contributor to the repo, my contributions have been mainly on the project roadmap, technical discussions/decisions and reviewing/merging PRs. \n\nFYI - https://github.com/hyperledger/aries-framework-javascript/commits?author=jadhavajay","username":"ajayjadhav","ts":"2020-05-22T18:14:49.443Z"}
{"msg":"That is correct @danielhardman \n@jakubkoci has been a major contributor to the repo, my contributions have been mainly on the project roadmap, technical discussions/decisions and reviewing/merging PRs. \n\nFYI - https://github.com/hyperledger/aries-framework-javascript/commits?author=jadhavajay","username":"ajayjadhav","ts":"2020-05-22T18:14:49.443Z"}
{"msg":"I'm good to have Jakub and Ajay onboard and contributing!","username":"swcurran","ts":"2020-05-22T19:44:18.529Z"}
{"msg":"Ajay has also been active in organizing meetings and keeping things organized.","username":"esplinr","ts":"2020-05-22T20:49:51.315Z"}
{"msg":"Ajay has also been active in providing updates in meetings and keeping things organized.","username":"esplinr","ts":"2020-05-22T20:49:51.315Z"}
{"msg":"Has joined the channel.","username":"redongjun","ts":"2020-05-24T06:19:19.277Z","type":"uj"}
{"msg":"Agree (late to the game. :)","username":"TelegramSam","ts":"2020-05-26T15:33:09.932Z"}
{"msg":"Has joined the channel.","username":"StevenTCramer","ts":"2020-06-02T14:55:02.853Z","type":"uj"}
{"msg":"Hi Aries maintainers! Reminder the Marketing Committee-Dev Relations call is tomorrow, 6/10 at 9am PT. Hope to see you there! https://wiki.hyperledger.org/display/Marketing/2020-06-010+Meeting+notes","username":"jramps9","ts":"2020-06-09T15:53:03.790Z"}
{"msg":"Help needed: We need to add release information to the Aries Quarterly Report: https://wiki.hyperledger.org/display/TSC/2020+Q2+Hyperledger+Aries","username":"TelegramSam","ts":"2020-06-11T14:32:59.815Z"}
{"msg":"If you are a code maintainer with releases, please add some entries representing that.","username":"TelegramSam","ts":"2020-06-11T14:34:07.391Z"}
{"msg":"examples are here: https://wiki.hyperledger.org/display/TSC/2020+Q2+Hyperledger+Aries","username":"TelegramSam","ts":"2020-06-11T14:34:14.457Z"}
{"msg":"examples are here: https://wiki.hyperledger.org/display/TSC/2019+Q4+Hyperledger+Aries","username":"TelegramSam","ts":"2020-06-11T14:34:14.457Z"}
{"msg":"@swcurran @troyronda @esplinr ^","username":"TelegramSam","ts":"2020-06-11T14:35:29.696Z"}
{"msg":"When is this due?","username":"swcurran","ts":"2020-06-11T14:42:28.976Z"}
{"msg":"like a month ago. :/","username":"TelegramSam","ts":"2020-06-11T14:42:38.015Z"}
{"msg":"I dropped this particular ball by not getting started earlier.","username":"TelegramSam","ts":"2020-06-11T14:42:53.160Z"}
{"msg":"Ah...I contributed a bunch to the Indy one, but thought this one was an SEP.","username":"swcurran","ts":"2020-06-11T14:42:59.726Z"}
{"msg":"we could combine them, no?","username":"rjones","ts":"2020-06-11T14:43:36.440Z"}
{"msg":"I've mostly managed to do these in the past.","username":"TelegramSam","ts":"2020-06-11T14:43:42.647Z"}
{"msg":"maybe \"Aries, Indy\" report","username":"rjones","ts":"2020-06-11T14:43:45.954Z"}
{"msg":"I think that might be bad optically @rjones, for those that are Aries folks but not Indy.","username":"TelegramSam","ts":"2020-06-11T14:44:31.020Z"}
{"msg":"No - best to keep them separate.  The division between the projects is become clearly, and is appropriate.","username":"swcurran","ts":"2020-06-11T14:44:32.665Z"}
{"msg":"I just need to get better at getting it started before due, and asking for community help for update details.","username":"TelegramSam","ts":"2020-06-11T14:45:20.052Z"}
{"msg":"Added aries-framework-go releases.","username":"troyronda","ts":"2020-06-11T14:45:45.737Z"}
{"msg":"I’m not too worried.  The employment changes disrupted this go round.  We will do better next time.","username":"nage","ts":"2020-06-11T14:46:03.178Z"}
{"msg":"@nage I couldn't find a Q1 report. Did we skip that one also?","username":"TelegramSam","ts":"2020-06-11T14:48:33.867Z"}
{"msg":"There should be one somewhere...","username":"nage","ts":"2020-06-11T14:50:43.295Z"}
{"msg":"https://wiki.hyperledger.org/display/TSC/2020+TSC+Project+Update+Calendar","username":"nage","ts":"2020-06-11T14:51:47.652Z"}
{"msg":"fyi: mobile binding efforts for aries-framework-go is kicking off here: https://github.com/hyperledger/aries-framework-go/tree/master/cmd/aries-agent-mobile","username":"troyronda","ts":"2020-06-18T19:46:45.653Z"}
{"msg":"@TelegramSam @swcurran i've created the wiki page for the next B call and put the present-proof V2 on the agenda. I hope that's ok :)","username":"george.aristy","ts":"2020-06-22T19:40:00.276Z"}
{"msg":"Not sure if we should add it to the \"can we close this\" game or what","username":"george.aristy","ts":"2020-06-22T19:40:14.583Z"}
{"msg":"I'm interested in moving that along :)","username":"george.aristy","ts":"2020-06-22T19:40:30.016Z"}
{"msg":"Good stuff. Sam and I talked about that earlier today as well, so all good.  Great minds... :-)","username":"swcurran","ts":"2020-06-23T00:25:12.076Z"}
{"msg":"If you have the JSON-LD things, would really like to get the \"registry\" elements that parallel the indy ones added.","username":"swcurran","ts":"2020-06-23T00:25:42.399Z"}
{"msg":"We want to add dif's presentation-exchange format. Need to discuss a little more.","username":"george.aristy","ts":"2020-06-23T00:32:46.067Z"}
{"msg":"Where is that defined?   Can you send a link?  Have you looked at it vs. the Indy Presentation Request (which is quite rich/powerful).","username":"swcurran","ts":"2020-06-23T02:46:36.443Z"}
{"msg":"Do you want to do a presentation (no pun intended) about that?","username":"swcurran","ts":"2020-06-23T02:47:28.226Z"}
{"msg":"... is that a presentation request?","username":"andrew.whitehead","ts":"2020-06-23T02:48:13.436Z"}
{"msg":"Ouch","username":"swcurran","ts":"2020-06-23T02:48:21.028Z"}
{"msg":"I can't think of a pun to follow-up, but I can present a link at your request - https://identity.foundation/presentation-exchange/","username":"tomislav","ts":"2020-06-23T11:41:04.438Z"}
{"msg":"Verified","username":"swcurran","ts":"2020-06-23T12:43:49.708Z"}
{"msg":"@swcurran I haven't looked at the Indy Presentation Request. Do you have a link?","username":"george.aristy","ts":"2020-06-23T13:17:32.358Z"}
{"msg":"@swcurran just went through the Libindy API for the presentation attachment. My thoughts:\n\n* hard to read (it's docu for a rust API)\n* lacks examples\n* not clear what non_revoc_interval is\n* not clear how users can model n-of-m from group 1, n-of-m from group 2, etc., using WQL","username":"george.aristy","ts":"2020-06-23T13:47:10.251Z"}
{"msg":"@swcurran just went through the Libindy API for the presentation attachment. My thoughts:\n\n* hard to read (it's docu for a rust API)\n* lacks examples\n* not clear what non_revoc_interval is\n* not clear how users can model n-of-m from group 1, n-of-m from group 2, etc., using WQL\n* a bit curious on the choice of mixing WQL (low layer) with an interoperable format for requesting and issuing presentations (present-proof)","username":"george.aristy","ts":"2020-06-23T13:47:10.251Z"}
{"msg":"@swcurran just went through the Libindy API for the presentation attachment. My thoughts:\n\n* hard to read (it's docu for a rust API)\n* lacks examples for requests and their respective responses\n* not clear what non_revoc_interval is\n* not clear how users can model n-of-m from group 1, n-of-m from group 2, etc., using WQL\n* a bit curious on the choice of mixing WQL (low layer) with an interoperable format for requesting and issuing presentations (present-proof)","username":"george.aristy","ts":"2020-06-23T13:47:10.251Z"}
{"msg":"@swcurran just went through the Libindy API for the presentation attachment. My thoughts:\n\n* hard to read (it's docu for a rust API)\n* lacks examples for requests and their respective responses\n* not clear what non_revoc_interval is\n* not clear how users can model n-of-m from group 1, n-of-m from group 2, etc., using WQL\n* a bit curious on the choice of mixing WQL (low layer) with an interoperable format for requesting and issuing presentations (semantic layer)","username":"george.aristy","ts":"2020-06-23T13:47:10.251Z"}
{"msg":"@danielhardman has been doing a lot of work on the Presentation Request format. Is there anything you want to add Daniel?","username":"esplinr","ts":"2020-06-23T13:59:45.351Z"}
{"msg":"Any thoughts @sergey.minaev ?","username":"esplinr","ts":"2020-06-23T14:04:32.965Z"}
{"msg":"Actually, I haven't been looking at Presentation Requests (step 1 in proving) so much as at Presentations (step 2). However, @brentzundel has been engaged with DIF on this topic, and I did leave some feedback on DIF's presentation definition format. See https://github.com/decentralized-identity/presentation-exchange/pull/18.","username":"danielhardman","ts":"2020-06-23T16:41:17.029Z"}
{"msg":"Oh yeah. My mistake. Thanks for clarifying Daniel.","username":"esplinr","ts":"2020-06-23T16:41:45.519Z"}
{"msg":"(I do have opinions on the topic, and I would like people who talk about it to read my PR. It contains a lot of detailed comments about the spec that's taking shape.)","username":"danielhardman","ts":"2020-06-23T16:42:30.096Z"}
{"msg":"Here is one other doc, now more than 3 years old, that represents some initial thinking on the topic. It is clearly dated in several ways, but notice its answer to @george.aristy 's answer about how to express boolean choices and m-of-n stuff, and also the way it allows both disclosure and predicates. https://docs.google.com/document/d/117cuMhMF_BLMniyCwnd0cu_Uj5H_45loZiqO1a3Ln7U/edit?usp=sharing","username":"danielhardman","ts":"2020-06-23T16:54:36.132Z"}
{"msg":"Here is one other doc, now more than 3 years old, that represents some initial thinking on the topic. It is clearly dated in several ways, but notice its answer to @george.aristy 's question about how to express boolean choices and m-of-n stuff, and also the way it allows both disclosure and predicates. https://docs.google.com/document/d/117cuMhMF_BLMniyCwnd0cu_Uj5H_45loZiqO1a3Ln7U/edit?usp=sharing","username":"danielhardman","ts":"2020-06-23T16:54:36.132Z"}
{"msg":"Thanks George --- I agree. I've been wanting to get a document that covers all the features of the Indy Presentation Request.  Answers to points:\n\n* hard to read (it's docu for a rust API)\n  * Yup\n* lacks examples for requests and their respective responses\n  * Yup\n* not clear what non_revoc_interval is\n  * This is how the verifier specifies how recent the revocation registry check must be, allowing flexibility in asking for revocation time range.\n* not clear how users can model n-of-m from group 1, n-of-m from group 2, etc., using WQL\n  * The \"names\" array allows for that.  You can specify multiple names with a single restriction set, and the claims must from a single credential.\n* a bit curious on the choice of mixing WQL (low layer) with an interoperable format for requesting and issuing presentations (semantic layer)\n  * The need for the prover to determine what credentials can be used to satisfy each claim (or claim set) requires a query of the agent's storage.  This is one of the features that is very powerful in the Indy implementation.  Something we don't want to lose.","username":"swcurran","ts":"2020-06-23T16:56:42.433Z"}
{"msg":"Thanks George --- I agree. I've been wanting to get a document that covers all the features of the Indy Presentation Request.  Answers to points:\n\n* hard to read (it's docu for a rust API)\n  * *Yup*\n* lacks examples for requests and their respective responses\n  * *Yup*\n* not clear what non_revoc_interval is\n  * *This is how the verifier specifies how recent the revocation registry check must be, allowing flexibility in asking for revocation time range.*\n* not clear how users can model n-of-m from group 1, n-of-m from group 2, etc., using WQL\n  * *The \"names\" array allows for that.  You can specify multiple names with a single restriction set, and the claims must from a single credential. This was recently added (earlier this year)*\n* a bit curious on the choice of mixing WQL (low layer) with an interoperable format for requesting and issuing presentations (semantic layer)\n  * *The need for the prover to determine what credentials can be used to satisfy each claim (or claim set) requires a query of the agent's storage.  This is one of the features that is very powerful in the Indy implementation.  Something we don't want to lose.*","username":"swcurran","ts":"2020-06-23T16:56:42.433Z"}
{"msg":"Thanks George --- I agree. I've been wanting to get a document that covers all the features of the Indy Presentation Request.  Answers to points:\n\n- hard to read (it's docu for a rust API)\n  - *Yup*\n- lacks examples for requests and their respective responses\n  - *Yup*\n- not clear what non_revoc_interval is\n  - *This is how the verifier specifies how recent the revocation registry check must be, allowing flexibility in asking for revocation time range.*\n- not clear how users can model n-of-m from group 1, n-of-m from group 2, etc., using WQL\n  - *The \"names\" array allows for that.  You can specify multiple names with a single restriction set, and the claims must from a single credential. This was recently added (earlier this year)*\n- a bit curious on the choice of mixing WQL (low layer) with an interoperable format for requesting and issuing presentations (semantic layer)\n  - *The need for the prover to determine what credentials can be used to satisfy each claim (or claim set) requires a query of the agent's storage.  This is one of the features that is very powerful in the Indy implementation.  Something we don't want to lose.*","username":"swcurran","ts":"2020-06-23T16:56:42.433Z"}
{"msg":"(Just to be clear; that last doc I shared is not something I now consider to be a good model. I just offered it because it has some interesting ideas as food for thought.)","username":"danielhardman","ts":"2020-06-23T16:57:30.797Z"}
{"msg":"Also to be clear: I'm proud of Indy presentation requests. Despite their shortcomings, they've been solving real problems in a powerful way, for quite a while now. (The non-revoc-interval is a great example of a vital feature that many other attempts haven't tackled yet.) We should fix the flaws, and we should also converge upon / learn from / resemble the DIF work as much as it makes sense, on a timing that makes sense. But we shouldn't feel bad about our first cut.","username":"danielhardman","ts":"2020-06-23T17:00:55.624Z"}
{"msg":"I agree.  The Indy team did an extremely good job on this and \"it just works\".  I've been very nervous about the DIF and CCG work on this as I suspect they will lose key features.","username":"swcurran","ts":"2020-06-23T17:02:39.928Z"}
{"msg":"@danielhardman @swcurran @esplinr @andrew.whitehead @tomislav just in case: I apologize if my thoughts above on Libindy's API gives the impression that I am minimizing the quality of the work product. That was not my intention. I was evaluating it purely in the context as a proposed presentation format for an RFC that's in the works. \n\nThe Indy project has pushed the boundaries in this space by leaps and bounds thanks to you guys, and i congratulate you and the rest of the team on the outstanding success!","username":"george.aristy","ts":"2020-06-23T17:42:57.911Z"}
{"msg":"@swcurran curious - what key features are you worried about?","username":"george.aristy","ts":"2020-06-23T17:43:10.036Z"}
{"msg":"@swcurran \n\n> - not clear how users can model n-of-m from group 1, n-of-m from group 2, etc., using WQL\n> - The \"names\" array allows for that. You can specify multiple names with a single restriction set, and the claims must from a single credential. This was recently added (earlier this year)\n\nDoes it allow for multiple set memberships? Like, \"N of group 1\" AND \"M of group 2\" ?","username":"george.aristy","ts":"2020-06-23T17:47:43.529Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2020-06-23T17:51:37.150Z","type":"ul"}
{"msg":"No worries George -- didn't interpret it that way.  It's something I've been worried about.\n\nSpecifically things like being able to flexibly convert a request to a credential search; predicates for ZKPs; a focus on proving claims from many credentials vs. proving one full credential (e.g. selective disclosure handling); self-attested claims.  Things like that.","username":"swcurran","ts":"2020-06-23T17:54:43.875Z"}
{"msg":"can I get an RFC merge on this? https://github.com/hyperledger/aries-rfcs/pull/495","username":"TelegramSam","ts":"2020-06-24T14:19:18.822Z"}
{"msg":"done","username":"danielhardman","ts":"2020-06-24T15:26:49.950Z"}
{"msg":"Hi all. Could we please add @TimoGlastra  as a maintainer of the aries-framework-javascript? He actively participates in reviews and can help with merging PRs faster.","username":"jakubkoci","ts":"2020-06-25T15:59:39.711Z"}
{"msg":"Has joined the channel.","username":"TimoGlastra","ts":"2020-06-25T15:59:39.816Z","type":"uj"}
{"msg":"@rjones ^","username":"TelegramSam","ts":"2020-06-26T19:46:32.439Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2020-06-26T19:46:32.569Z","type":"uj"}
{"msg":"also @rjones, can we turn on issues for https://github.com/hyperledger/aries-acapy-plugin-toolbox ? I don't have the permissions to set that.","username":"TelegramSam","ts":"2020-06-26T19:46:50.318Z"}
{"msg":"@TelegramSam https://github.com/hyperledger/aries-acapy-plugin-toolbox/pull/39","username":"rjones","ts":"2020-06-26T22:25:05.487Z"}
{"msg":"Has joined the channel.","username":"JelleFm","ts":"2020-07-10T11:42:41.130Z","type":"uj"}
{"msg":"I want to introduce m00sey and pfeairheller . They have been working on an Indy driver for Aries Framework Go (https://github.com/scoir/canis), and are interested in participating more on the project as contributors.","username":"esplinr","ts":"2020-07-15T16:32:27.156Z"}
{"msg":"I want to introduce @m00sey  and @pfeairheller . They have been working on an Indy driver for Aries Framework Go (https://github.com/scoir/canis), and are interested in participating more on the project as contributors.","username":"esplinr","ts":"2020-07-15T16:32:27.156Z"}
{"msg":"User <em>User_1</em> added by <em>esplinr</em>.","username":"esplinr","ts":"2020-07-15T16:33:44.642Z","type":"au"}
{"msg":"User <em>User_2</em> added by <em>esplinr</em>.","username":"esplinr","ts":"2020-07-15T16:33:44.666Z","type":"au"}
{"msg":"Hello everyone, nice to meet you.  Thanks @esplinr","username":"pfeairheller","ts":"2020-07-15T17:11:30.322Z"}
{"msg":"Very cool - interested in how the interfaces between different ledgers will live happily in an agent.  Very helpful work!","username":"swcurran","ts":"2020-07-15T17:45:12.779Z"}
{"msg":"Can anyone here provide an example or two of the sorts of things an agent might send in a `propose-presentation` message?","username":"george.aristy","ts":"2020-07-21T15:58:29.076Z"}
{"msg":"Basically, it's the same as a presentation-request, but sent to initiate the delivery of a proof (which is a non-obvious use case), or more likely, sent as a reply to a presentation-request as a negotiation.","username":"swcurran","ts":"2020-07-21T18:30:21.238Z"}
{"msg":"@swcurran so the Prover could send a request inside a proposal ?","username":"george.aristy","ts":"2020-07-21T18:32:42.119Z"}
{"msg":"Yes - the Indy attachment in the 1.0 version is a variation, but in the 2.0 version, it's the same presentation request format.","username":"swcurran","ts":"2020-07-21T18:38:35.888Z"}
{"msg":"Can I get someone to review this PR? https://github.com/hyperledger/aries-rfcs/pull/482 I had in mind that I'd raised this PR 8 weeks ago, but when I mentioned it on a call, people were unfamiliar. I went and worked on it a bit today, and improved it -- but when I pushed, I saw that I actually had raised it back in May. So I guess I forgot to tell anybody about it, and it's just been sitting there this whole time. :-)","username":"danielhardman","ts":"2020-07-31T23:06:58.934Z"}
{"msg":"We'd like to move this Interop Testing repo into Hyperledger -- https://github.com/bcgov/aries-agent-test-harness\n\n`The Aries Agent Test Harness (AATH) is a BDD-based test execution engine and set of tests for evaluating the interoperability of Aries Agents and Agent Frameworks. `\n\nThe necessary structure and files are in the repo, and we believe the content is now sufficiently mature to try to attract more contributors and participants. We are actively developing test cases in the repo and have the vast majority of the Aries AIP 1.0 test cases in place.  We are working to remove Indy-isms (e.g. focusing on the RFCs not the Indy details) in the test suite with the goal of broadening the applicability of the interop testing capabilities.\n\nAny objections to this contribution to Hyperledger?","username":"swcurran","ts":"2020-07-31T23:20:27.945Z"}
{"msg":"You know how to do it","username":"rjones","ts":"2020-07-31T23:21:01.769Z"}
{"msg":"I continue to be uneasy about it because I don't like the need to implement an HTTP backchannel for mobile agents, and I don't like the lack of a reference agent to test against; I fear that acapy will become a default reference, and I don't think that default is correct. Moving it into Hyperledger makes it more canonical and makes my own unwillingness to invest in such a backchannel harder to explain. However, have expressed my discomfort, I acknowledge what I said in an earlier conversation on this subject, which is that this is a do-ocracy, and I won't stand in the way of the doers.","username":"danielhardman","ts":"2020-07-31T23:25:55.552Z"}
{"msg":"What is your alternative @danielhardman? ","username":"darrell.odonnell","ts":"2020-07-31T23:37:57.753Z"}
{"msg":"your bootstrap-an-attack-posing-as-a-test is an important vector to deal with. What is an alternate path?","username":"darrell.odonnell","ts":"2020-07-31T23:39:24.175Z"}
{"msg":"@danielhardman I don't really understand some of what you are saying.  Have you taken a look at the test harness recently?  Since the discussion in Utah in December, both test approaches have settled on the need for a backchannel.  I don't understand how one can do a test suite without a meta driver to manipulate the agents-under-test.\n\nI'm not sure why you particularly mentioned a mobile agent, but it's really not clear to me how you would do headless mobile testing without some sort of backchannel.  We've not yet investigated it, but we're fairly confident that the path we're taking is more likely to be successful on that front.\n\nThe purpose of the test harness is to test interoperability vs. conformance, so the concept of a reference agent is not really relevant. Ideally, each project will invest effort into making their framework (and agents) testable using the harness. We now have two more or less complete backchannel implementations with 3 runnable (acapy, aries-framework-dotnet, vcx) frameworks. In doing the second backchannel, we've neutralized the test cases and made sure they focus on the RFC, not on any implementation. As issues are found, we've debated the source - the RFC, the test case, the frameworks - and found satisfactory answers.  We're pretty close to AIP 1.0 complete with the test harness, working now on the connectionless presentation request test cases.\n\nI am concerned that we are diluting effort with the two approaches and would rather see a focus on interoperability vs. conformance.  As you say, it's a do-cracy and we're definitely try to demonstrate by doing.","username":"swcurran","ts":"2020-08-01T16:55:19.720Z"}
{"msg":"I'm not down on backchannels; the original RFC about a testing strategy includes that concept, and the older aries agent test suite includes that concept as well. What I'm down on is a *RESTful* backchannel modeled around acapy's preconceptions of what an agent's RESTful interface should be like, as a requirement for every agent under test. I know that's a natural fit for acapy, but not every agent has a goal of exposing a RESTful interface. Mobile agents are message processors, not web services. Same for most static agents. The least common denominator for agents is message processing and protocols. Therefore the backchannel should be a protocol, to avoid requiring every agent in the ecosystem to build and maintain a RESTful interface to be testable. Adapting the backchannel to an http transport would be a piece of cake; that can be done once, generically, for all agents.  Instead we've introduced a new requirement on agents -- not just a requirement for a new feature (which is what support for a test backchannel protocol would be) -- but a requirement for an entirely different type of technology.","username":"danielhardman","ts":"2020-08-03T15:32:26.329Z"}
{"msg":"If aries agent test harness proposed to test agents over a protocol, I would be a supporter.","username":"danielhardman","ts":"2020-08-03T15:33:11.136Z"}
{"msg":"@darrell.odonnell : regarding an alternative, I wanted a compliance test suite, not a paired interop test harness. So the alternative I was most interested in was aries agent test suite, which predates the test harness that Stephen is now advocating. I do see the value in pairwise interop testing, and I could live with a shift to interop as the emphasis, but I strongly dislike the RESTfulness of the harness. For Connect.Me and similar agents, we have to artificially construct interfaces that have no rational relationship to the way the agent actually works. For Evernym's Verity, we actually do have a RESTful interface, but it has to be adapted pretty significantly to conform to the test harness. The net result is that we pay an ongoing, obnoxious tax to evaluate interop. If we modeled the backchannel as a protocol, the tax would be minor and result in simple, clean code that had little maintenance cost.","username":"danielhardman","ts":"2020-08-03T15:37:50.378Z"}
{"msg":"The frustrating thing to me is that all the work BCGov is donating to this effort is not decreasing my ongoing tax, even one little bit. Rather, we are just building up a tech debt that Evernym has to pay off to make its code evaluatable as an interop target.","username":"danielhardman","ts":"2020-08-03T15:40:25.949Z"}
{"msg":"We (Ian) added a RESTful interface for VCX in a day.  Getting it working was pretty easy.  Extending it to cover all the test cases is more work.  We did a bounty for aries-framework-dotnet for $25k CDN and we have a RESTful backchannel that covers all the cases through connection and issuing.  Further, mobile agent's aside, if your framework does not have a REST mechanism, I'd guess that's it's not going to be very successful.\n\nI'm not understanding your \"ongoing, obnoxious tax\" comment.  Testing is not free - you have to put effort in.  Yes, you have to build some infrastructure (in this case and in every case), but once there, extending to cover more test cases is an incremental cost with a corresponding incremental benefit.  To date, \"interop testing\" has been humans trying it out and sending a message on rocketchat.  That approach is an \"onging, obnoxious tax\" as well. I'd rather have a test suite that I can integrate into our pipeline.\n\nSo far, only IBM and BC Gov have seemed to have put any effort (based on open source commits) into interop testing in the Aries community. Pushing this repo to Hyperledger is a way to get","username":"swcurran","ts":"2020-08-03T18:50:27.104Z"}
{"msg":"We (Ian) added a RESTful interface for VCX in a day.  Getting it working was pretty easy.  Extending it to cover all the test cases is more work.  We did a bounty for aries-framework-dotnet for $25k CDN and we have a RESTful backchannel that covers all the cases through connection and issuing.  Further, mobile agent's aside, if your framework does not have a REST mechanism, I'd guess that's it's not going to be very successful.\n\nI'm not understanding your \"ongoing, obnoxious tax\" comment.  Testing is not free - you have to put effort in.  Yes, you have to build some infrastructure (in this case and in every case), but once there, extending to cover more test cases is an incremental cost with a corresponding incremental benefit.  To date, \"interop testing\" has been humans trying it out and sending a message on rocketchat.  That approach is an \"onging, obnoxious tax\" as well. I'd rather have a test suite that I can integrate into our pipeline.\n\nSo far, only IBM and BC Gov have seemed to have put any effort (based on open source commits) into interop testing in the Aries community. Pushing this repo to Hyperledger is a way we hope to get more teams off the sidelines.","username":"swcurran","ts":"2020-08-03T18:50:27.104Z"}
{"msg":"Evernym has contributed significantly to the Aries Protocol Test Suite.","username":"esplinr","ts":"2020-08-03T22:02:41.576Z"}
{"msg":"As well as in real-world interop including submissions to other code basis to complete end-to-end interoperability.","username":"esplinr","ts":"2020-08-03T22:03:13.717Z"}
{"msg":"As well as in real-world interop testing including submissions to other code basis to complete end-to-end interoperability.","username":"esplinr","ts":"2020-08-03T22:03:13.717Z"}
{"msg":"As well as hands on interop testing including submissions to other code basis to complete end-to-end interoperability.","username":"esplinr","ts":"2020-08-03T22:03:13.717Z"}
{"msg":"\"mobile agent's aside\" is the sticky part of this. That's a large part of the ecosystem that is being discounted in this approach.","username":"esplinr","ts":"2020-08-03T22:04:07.225Z"}
{"msg":"@esplinr - there are no commits from anyone in Evernym to the APTS.  Sounds like I missing where work is being done?","username":"swcurran","ts":"2020-08-03T22:10:51.998Z"}
{"msg":"Agreed that mobile testing is still TBD.  I have only the vaguest views of how mobile app testing works, but not guess that either approach is better.","username":"swcurran","ts":"2020-08-03T22:31:48.758Z"}
{"msg":"Sounds like Evernym is not a fan of moving this repo to Hyperledger.  Anyone else objecting to the idea?","username":"swcurran","ts":"2020-08-03T22:33:11.333Z"}
{"msg":">\"if your framework does not have a REST mechanism, I'd guess it's not going to be very successful\"\n\nThis statement reveals a very strong enterprise software assumption. Mobile app front ends don't have REST mechanisms -- and they count among their category some of the most successful pieces of software on the planet. \n\n>\"We (Ian) added a RESTful interface for VCX in a day. Getting it working was pretty easy\"\n\nOf course it was -- because you were calling VCX hosted on a server. A smart web dev like Ian can do a naive wrapper of nearly any functionality hosted on a server inside a RESTful interface in a day. That's not the challenge. The challenge is that every agent has to write and maintain their own adapter, and if the agent isn't natively RESTful, that means doing an entirely different type of development from the agent codebase's inherent paradigms. If this codebase becomes a standard tool, it will mean every agent developer in the Aries ecosystem not only has to do DIDComm, but also has to do REST, because their software can't be meaningfully evaluated for interop unless they also do RESTful. Of course ACAPY doesn't see this tax because it's oriented toward this style already.\n\nInterop shouldn't be a function of RESTful; it should be a function of DIDComm. It's DIDComm functionality, after all, that we're trying to evaluate here. The fact that acapy wants to expose a RESTful controller is great and natural. Evernym's Verity product does the same. But requiring all agents to do so is unreasonable.\n\nI am not at all opposed to evaluating interop through HTTP; it's just the notion of RESTful backchannel that I consider an obnoxious dependency.","username":"danielhardman","ts":"2020-08-04T00:22:45.243Z"}
{"msg":">\"if your framework does not have a REST mechanism, I'd guess it's not going to be very successful\"\n\nThis statement reveals a very strong enterprise software assumption. Mobile app front ends don't have REST mechanisms -- and they count among their category some of the most successful pieces of software on the planet. \n\n\n>\"We (Ian) added a RESTful interface for VCX in a day. Getting it working was pretty easy\"\n\nOf course it was -- because you were calling VCX hosted on a server. A smart web dev like Ian can do a naive wrapper of nearly any functionality hosted on a server inside a RESTful interface in a day. That's not the challenge. The challenge is that every agent has to write and maintain their own adapter, and if the agent isn't natively RESTful, that means doing an entirely different type of development from the agent codebase's inherent paradigms. If this codebase becomes a standard tool, it will mean every agent developer in the Aries ecosystem not only has to do DIDComm, but also has to do REST, because their software can't be meaningfully evaluated for interop unless they also do RESTful. Of course ACAPY doesn't see this tax because it's oriented toward this style already.\n\nInterop shouldn't be a function of RESTful; it should be a function of DIDComm. It's DIDComm functionality, after all, that we're trying to evaluate here. The fact that acapy wants to expose a RESTful controller is great and natural. Evernym's Verity product does the same. But requiring all agents to do so is unreasonable.\n\nI am not at all opposed to evaluating interop through HTTP; it's just the notion of RESTful backchannel that I consider an obnoxious dependency.","username":"danielhardman","ts":"2020-08-04T00:22:45.243Z"}
{"msg":"When is the next Aries maintainer call? Wednesday 3-4:30 pm EDT is what I see. I can only make the first hour but this may be a good topic to discuss. Things are getting a bit heated here and I think there is a middle ground that can be found that is valuable. Both Stephen and Daniel are making good points but we clearly haven't landed.","username":"darrell.odonnell","ts":"2020-08-04T00:39:18.715Z"}
{"msg":"Sorry I wasn't being clear.  Testing a framework is different from testing a mobile app, and verifying the framework upon which the mobile app is made the first step in testing the mobile app.","username":"swcurran","ts":"2020-08-04T01:56:23.168Z"}
{"msg":"> Interop shouldn't be a function of RESTful; it should be a function of DIDComm. It's DIDComm functionality, after all, that we're trying to evaluate here. The fact that acapy wants to expose a RESTful controller is great and natural. Evernym's Verity product does the same. But requiring all agents to do so is unreasonable.\n\nThis statement seems to be missing the point of Aries Agent Test Harness. No framework or agent has to speak HTTP to be used with AATH.  Neither VCX nor aries-framework-dotnet support HTTP and yet they work with AATH.  What is needed is a wrapper around the \"component under test\" (whatever that is) that speaks HTTP to the test suite and translates commands to something the component under test can understand -- using whatever mechanism works.  Success of the test cases is about the DIDComm protocols that are executed, not about the HTTP interface.\n\nAs Darrell notes, we're not getting very far here. We appear to fundamentally disagree on what is the best approach to conducting interop testing.  Happy to talk about this on the Aries WG call this week if others think it would be useful.","username":"swcurran","ts":"2020-08-04T02:07:05.443Z"}
{"msg":"We do fundamentally disagree, and it is a valuable discussion. But as Daniel said earlier, Evernym is not going to \"stand in the way of doers\". We appreciate the efforts that the BC.gov team is putting into the project, and we do not oppose moving the repo to Hyperledger. But we need to be cautious about the confusion we create between the two test suites and we hope that we can resolve the different approaches.","username":"esplinr","ts":"2020-08-04T13:09:49.071Z"}
{"msg":"Artem collaborated with Daniel and Adam on the design of the backchannel, which included this closed PR:\nhttps://github.com/hyperledger/aries-protocol-test-suite/pull/20/files","username":"esplinr","ts":"2020-08-04T13:11:09.360Z"}
{"msg":"But we also contributed a PR to ACAPY to assist with interop:\nhttps://github.com/hyperledger/aries-cloudagent-python/commit/44ed4afb0eb6a68a193c4ac7b1b0d2030a779ce4","username":"esplinr","ts":"2020-08-04T13:13:39.937Z"}
{"msg":"A small commit that took a lot of testing to figure out.","username":"esplinr","ts":"2020-08-04T13:13:46.484Z"}
{"msg":"Our testing also led to a suggested change in Aries Framework Dot Net that we submitted directly to Tomislav.","username":"esplinr","ts":"2020-08-04T13:14:14.646Z"}
{"msg":"We don't mind working in the background, but it means people sometimes forget that we are helping move the project forward toward our common goals.","username":"esplinr","ts":"2020-08-04T13:15:01.023Z"}
{"msg":"I don't think this is a profitable conversation to have in the community. We already had it at the last agent hackathon, and now we've re-had it over chat. Let's just move the repo and let Stephen and crew move ahead. My purpose in bringing up dissonance was not to stop that move -- just to note that today, I am not aligned with its philosophy and do not endorse it as the blessed interop testing strategy for the Aries community. That does not mean it can't be an Aries repo. If that's the narrow decision under discussion, there's no \"no\" vote. And even if there *were* a \"no\" vote  the larger question of whether this should be the community's interop tool, one \"no\" vote doesn't decide an election. I'm perfectly willing to be outvoted.","username":"danielhardman","ts":"2020-08-04T16:11:17.094Z"}
{"msg":"I don't think this is a profitable conversation to have in the community. We already had it at the last agent hackathon, and now we've re-had it over chat. Let's just move the repo and let Stephen and crew move ahead. My purpose in bringing up dissonance was not to stop that move -- just to note that today, I am not aligned with its philosophy and do not endorse it as the blessed interop testing strategy for the Aries community. That does not mean it can't be an Aries repo. If that's the narrow decision under discussion, there's no \"no\" vote. And even if there *were* a \"no\" vote  for the larger question of whether this should be the community's interop tool, one \"no\" vote doesn't decide an election. I'm perfectly willing to be outvoted.","username":"danielhardman","ts":"2020-08-04T16:11:17.094Z"}
{"msg":"Has joined the channel.","username":"ianco","ts":"2020-08-04T17:37:37.523Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pknowles","ts":"2020-08-05T07:37:43.126Z","type":"uj"}
{"msg":"Is the LF new signin working for you folks?","username":"george.aristy","ts":"2020-08-05T18:58:58.847Z"}
{"msg":"no, there is an outage right now","username":"rjones","ts":"2020-08-05T19:00:02.335Z"}
{"msg":"@george.aristy https://status.linuxfoundation.org/","username":"rjones","ts":"2020-08-05T19:04:19.913Z"}
{"msg":"@rjones @WadeBarnes --- can the two of you add to your list to move the https://github.com/bcgov/aries-agent-test-harness and https://github.com/bcgov/indy-node-monitor repos to Hyperledger?\n\n@andrew.whitehead -- I know that indy-node-monitor is currently still based on a published BC Gov docker image. Is there an ETA on getting that moved ahead to remove the need for that?  I think it is OK that happen in hyperledger vs. BC Gov, but wanted to be sure there was an awareness of the issue.","username":"swcurran","ts":"2020-08-06T16:51:50.324Z"}
{"msg":"It just needs a published python (wheel) package, but that would require github actions to build it for a few platforms. I suppose it could be built manually and published for 'manylinux","username":"andrew.whitehead","ts":"2020-08-06T16:55:07.970Z"}
{"msg":"It just needs a published python (wheel) package, but that would require github actions to build it for a few platforms. I suppose it could be built manually and published for 'manylinux'","username":"andrew.whitehead","ts":"2020-08-06T16:55:07.970Z"}
{"msg":"@swcurran, already on my list.","username":"WadeBarnes","ts":"2020-08-06T16:55:31.785Z"}
{"msg":"OK, let me know when you want to do the transfer","username":"rjones","ts":"2020-08-06T19:12:30.368Z"}
{"msg":"You guys close to BC should know that Wade is sitting on a cache of rare poker chips, when in person stuff starts back up","username":"rjones","ts":"2020-08-06T19:13:45.314Z"}
{"msg":"That was supposed to be a surprise, only John knew.  Lol.  Cats’ out of the bag.","username":"WadeBarnes","ts":"2020-08-06T19:27:16.577Z"}
{"msg":"","username":"WadeBarnes","ts":"2020-08-06T19:29:11.170Z","attachments":[{"type":"file","title":"IMG_8354.HEIC","title_link":"/file-upload/r7p7E9xwSMC3keBbx/IMG_8354.HEIC","image_url":"/file-upload/r7p7E9xwSMC3keBbx/IMG_8354.HEIC","image_type":"image/jpeg","image_size":2666437,"url":"/file-upload/r7p7E9xwSMC3keBbx/IMG_8354.HEIC","remote":false,"fileId":"r7p7E9xwSMC3keBbx","fileName":"IMG_8354.HEIC"}]}
{"msg":"Does anyone other than @TelegramSam have access to the Aries WG Recordings?  I'd like to get the recording from yesterday posted.  Thanks!","username":"swcurran","ts":"2020-08-06T20:35:51.339Z"}
{"msg":"@swcurran who recorded it?","username":"rjones","ts":"2020-08-06T22:29:04.232Z"}
{"msg":"I have access to the recordings for Aries WG A, but Robert has been really good at posting them. I do not have access to the recordings for Aries WG B.","username":"esplinr","ts":"2020-08-06T23:08:56.711Z"}
{"msg":"@rjones, [bcgov/indy-node-monitor](https://github.com/bcgov/indy-node-monitor) is ready for transfer.  You've been added to the repo.","username":"WadeBarnes","ts":"2020-08-07T16:55:37.922Z"}
{"msg":"done","username":"rjones","ts":"2020-08-07T17:23:25.704Z"}
{"msg":"It was automagically recorded - turned at the start of the meeting.","username":"swcurran","ts":"2020-08-07T17:29:27.542Z"}
{"msg":"Is Sam's Zoom account still part of the Sovrin Foundation org? Maybe Kayla has access?","username":"esplinr","ts":"2020-08-07T20:38:49.292Z"}
{"msg":"I'll try that.  I had assumed a Hyperledger account was being used, but perhaps not.","username":"swcurran","ts":"2020-08-07T22:03:27.461Z"}
{"msg":"Not on the Sovrin account.","username":"swcurran","ts":"2020-08-07T22:06:14.258Z"}
{"msg":"Nice","username":"swcurran","ts":"2020-08-07T22:54:56.560Z"}
{"msg":"Sorry, I'm out of ideas.","username":"esplinr","ts":"2020-08-08T00:09:53.032Z"}
{"msg":"Hi. I have a question regarding test environment on CI server.  I added some test to features using Indy pool into Aries JS framework. Is there any pool already running for the tests running on CI? We're using Azure DevOps pipelines, but it was set up by @rjones so I don't know much details about it. I'm not sure if it's good idea to run our own Indy pool via docker within the pipeline.","username":"jakubkoci","ts":"2020-08-10T12:09:24.322Z"}
{"msg":"Hi how can I help?","username":"rjones","ts":"2020-08-10T16:17:29.939Z"}
{"msg":"There is no long term pool running.","username":"rjones","ts":"2020-08-10T16:23:04.600Z"}
{"msg":"All CI infra is disposed of at the end of the run","username":"rjones","ts":"2020-08-10T16:23:27.393Z"}
{"msg":"What about using a ledger running else where in public -- e.g. one of the BCovrin sandbox ledgers?  To work, the DIDs created would have to be random vs. fixed, which might be a problem.","username":"swcurran","ts":"2020-08-10T16:35:29.674Z"}
{"msg":"indy-vdr has integration tests that run a test ledger using github actions, FYI","username":"andrew.whitehead","ts":"2020-08-10T16:36:38.025Z"}
{"msg":"This purpose is why Sovrin BuilderNet exists.","username":"esplinr","ts":"2020-08-10T17:28:29.304Z"}
{"msg":"what can we (LF) do to help transition all of the CI/CD stuff to GitHub Actions or Azure?","username":"rjones","ts":"2020-08-10T17:56:48.178Z"}
{"msg":"I've posted it. Right now, the meeting is tied to my personal (paid) zoom account because that required the least amount of change.","username":"TelegramSam","ts":"2020-08-10T23:18:01.353Z"}
{"msg":"I'm open to adjusting that if needed.","username":"TelegramSam","ts":"2020-08-10T23:18:14.086Z"}
{"msg":"Nope -- all good. Thanks for posting.","username":"swcurran","ts":"2020-08-10T23:51:45.206Z"}
{"msg":"Hello Aries maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT this Weds 8/12. Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-08-12+Meeting+notes","username":"jramps9","ts":"2020-08-11T00:07:33.285Z"}
{"msg":"Thanks, Richard that's a good tip. I didn't think about BuilderNet in this way. I give it a try at least for now, not sure if it's good for the long term. Then it would be better something that Stephen suggested.","username":"jakubkoci","ts":"2020-08-12T20:04:19.664Z"}
{"msg":"I'll look at it thanks :thumbsup:","username":"jakubkoci","ts":"2020-08-12T20:09:55.591Z"}
{"msg":"Here's a good set of notes I found from Secure Scuttlebutt that goes in depth into many of their new design decisions they're making. Of note, they highlight the tradeoffs where groups have a hard time working with current cryptographic schemes with current best practices (perfect forward secrecy, post compromise security) https://github.com/ssbc/envelope-spec/pull/19/files\n\n@danielhardman I'd think you'd be interested in this to see if we want to take different tradeoffs to get groups working","username":"kdenhartog","ts":"2020-08-17T00:27:04.033Z"}
{"msg":"I cross posted that to the DIF DIDComm WG as well.","username":"TelegramSam","ts":"2020-08-17T16:59:39.558Z"}
{"msg":"I'm presenting on the status of Aries on the CCG today. Any particular points you wish me to mention.","username":"TelegramSam","ts":"2020-08-18T13:57:41.134Z"}
{"msg":"I think the work on the interop profiles will definitely be interesting to them.","username":"brentzundel","ts":"2020-08-18T14:09:09.600Z"}
{"msg":"I agree on interop profiles. Also, you might talk about the recent work to combine DIF's presentation definitions with Aries RFC 0037.","username":"danielhardman","ts":"2020-08-18T14:52:34.327Z"}
{"msg":"It's actually with the v2 issue and presentation RFCs","username":"swcurran","ts":"2020-08-18T15:04:11.433Z"}
{"msg":"We have pushed a new release for aries-framework-go (v0.1.4): https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.4","username":"troyronda","ts":"2020-08-31T22:39:31.012Z"}
{"msg":"We have pushed a new release for aries-framework-go (v0.1.4). Release notes: https://github.com/hyperledger/aries-framework-go/releases/tag/v0.1.4","username":"troyronda","ts":"2020-08-31T22:39:31.012Z"}
{"msg":"Hi guys, I am looking for high level Aries architecture which I think was once presented by @danielhardman and was discussed couple of times. The architecture which touched on the plug and play modules in aries ecosystem e.g. having diffrent did resolvers, different network resolvers etc..","username":"mtfk","ts":"2020-09-07T11:22:50.148Z"}
{"msg":"We are planning to extend aries toolbox and aca-py with possibility to play nicely with different types of credentials e.g. w3c data model, not sure if there is already any work done towards that, maybe @swcurran you know about some efforts?","username":"mtfk","ts":"2020-09-07T11:23:48.775Z"}
{"msg":"@mtfk - you may be thinking of these slides? https://docs.google.com/presentation/d/1L5L4QcZOATrn9rj4bEMmlbvij9XWyqgQRoWO-HNiUGw/edit","username":"danielhardman","ts":"2020-09-07T15:43:53.469Z"}
{"msg":"exactly, thanks I lost it when I moved to new gmail account.","username":"mtfk","ts":"2020-09-07T18:16:06.617Z"}
{"msg":"Is there any progress on that work?","username":"mtfk","ts":"2020-09-07T18:16:16.010Z"}
{"msg":"@mtfk -- ACA-Py has some JSON-LD credentials code done by @TelegramSam for SICPA. The code does not use the RFCs 0036 and 0037 Credential Exchange (but should).","username":"swcurran","ts":"2020-09-07T18:18:24.557Z"}
{"msg":"https://github.com/hyperledger/aries-cloudagent-python/pull/540","username":"swcurran","ts":"2020-09-07T18:19:15.846Z"}
{"msg":"Is this implementation compatible with W3C Data model?","username":"mtfk","ts":"2020-09-07T18:42:56.103Z"}
{"msg":"I believe it is, but it’s up to the controller to assemble and deliver the credential currently, aca-py just signs it, and it can’t be revoked ","username":"andrew.whitehead","ts":"2020-09-08T01:07:59.685Z"}
{"msg":"It was done as part of the DHS work and so yes w3c data model. No zkp or selective disclosure.","username":"swcurran","ts":"2020-09-08T02:15:13.426Z"}
{"msg":"perfect thanks a lot for info. We would make the way with it to the aries toolbox","username":"mtfk","ts":"2020-09-08T11:22:59.374Z"}
{"msg":"perfect thanks a lot for info. We would make the way with it to the aries toolbox if is not yet there","username":"mtfk","ts":"2020-09-08T11:22:59.374Z"}
{"msg":"Hello Aries Maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 9/16 this week. Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-09-16+Meeting+notes","username":"jramps9","ts":"2020-09-14T17:36:29.923Z"}
{"msg":"@swcurran @TelegramSam sorry I cannot attend the call today - things are hectic around here","username":"george.aristy","ts":"2020-09-16T19:44:51.508Z"}
{"msg":"Join the club!  :-)","username":"swcurran","ts":"2020-09-16T19:55:03.823Z"}
{"msg":"Attendance was so oddly low that we deferred to next week.","username":"TelegramSam","ts":"2020-09-17T15:02:33.869Z"}
{"msg":"Hi, if you have anything you'd like to see added to the /dev/weekly newsletter, please comment in the next two hours: https://wiki.hyperledger.org/pages/viewpage.action?pageId=39618911","username":"rjones","ts":"2020-09-17T15:27:20.267Z"}
{"msg":"We have been chatting about the repository structure for aries-framework-go. One of the topics that @pfeairheller\nbrought up is where to place the pluggable add-ons/extensions such as the Indy VDR and additional storage backends that meet the aries-framework-go Golang interface.","username":"troyronda","ts":"2020-09-30T13:13:02.926Z"}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=WDaNydxJprZjoDn4D","username":"troyronda","ts":"2020-09-30T13:15:07.920Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=WDaNydxJprZjoDn4D","url":"https://chat.hyperledger.org/channel/aries-go?msg=WDaNydxJprZjoDn4D","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=tAFwjAzFYhMtBkiNj","username":"troyronda","ts":"2020-09-30T20:21:24.426Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=tAFwjAzFYhMtBkiNj","url":"https://chat.hyperledger.org/channel/aries-go?msg=tAFwjAzFYhMtBkiNj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=3DjjiBkPTCpZx88zr","username":"troyronda","ts":"2020-10-01T14:26:28.201Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=3DjjiBkPTCpZx88zr","url":"https://chat.hyperledger.org/channel/aries-go?msg=3DjjiBkPTCpZx88zr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Can I get someone to approve this minor editorial PR? I just fixed some broken hyperlinks in the protocol template at the root of the repo, and made sure that tag values on RFCs were also hyperlinks... https://github.com/hyperledger/aries-rfcs/pull/549","username":"danielhardman","ts":"2020-10-06T22:45:22.276Z"}
{"msg":"if you want, you could enable `mergify` for your repos. it lets committers automate cherry picks, merges, and the like","username":"rjones","ts":"2020-10-06T23:00:44.369Z"}
{"msg":"https://github.com/hyperledger/fabric/blob/master/.mergify.yml as an example","username":"rjones","ts":"2020-10-06T23:02:29.901Z"}
{"msg":"Can I have a few minutes on Wednesday's B call to socialize this? https://github.com/hyperledger/aries-rfcs/pull/550","username":"danielhardman","ts":"2020-10-07T02:01:59.774Z"}
{"msg":"On the agenda.","username":"TelegramSam","ts":"2020-10-07T12:55:12.624Z"}
{"msg":"@rjones could you please create the aries-framework-go-ext repository?","username":"troyronda","ts":"2020-10-07T15:01:49.189Z"}
{"msg":"what permissions and the like","username":"rjones","ts":"2020-10-07T15:24:59.633Z"}
{"msg":"sorry if I am late to go-ext discussion, what's the plans for build/test etc?","username":"m00sey","ts":"2020-10-07T15:25:47.397Z"}
{"msg":"codecov and the like, ideally per sub \"project\"? or over arching?","username":"m00sey","ts":"2020-10-07T15:26:19.977Z"}
{"msg":"@m00sey per module in the extension monorepo.","username":"troyronda","ts":"2020-10-07T15:39:07.456Z"}
{"msg":"+1","username":"m00sey","ts":"2020-10-07T15:39:22.356Z"}
{"msg":"+1, thanks","username":"m00sey","ts":"2020-10-07T15:39:22.356Z"}
{"msg":"@pfeairheller ^^","username":"troyronda","ts":"2020-10-07T15:40:59.085Z"}
{"msg":"troy: I set up https://github.com/hyperledger/aries-framework-go-ext/ but I need a little more info from you","username":"rjones","ts":"2020-10-07T15:42:07.899Z"}
{"msg":"This is the only person with a commit bit: https://github.com/orgs/hyperledger/teams/aries-sdk-go-committers/members","username":"rjones","ts":"2020-10-07T15:43:03.216Z"}
{"msg":"@rjones should be https://github.com/orgs/hyperledger/teams/aries-framework-go-committers/members","username":"troyronda","ts":"2020-10-07T15:43:42.168Z"}
{"msg":"But ideally we could add additional people to this ext repo.","username":"troyronda","ts":"2020-10-07T15:44:00.982Z"}
{"msg":"sure. Do you want a new group?","username":"rjones","ts":"2020-10-07T15:44:13.884Z"}
{"msg":"that would be awesome, thanks.","username":"troyronda","ts":"2020-10-07T15:44:20.409Z"}
{"msg":"ok, you're a maintainer of https://github.com/orgs/hyperledger/teams/aries-framework-go-ext-committers/members , go for it","username":"rjones","ts":"2020-10-07T15:48:38.179Z"}
{"msg":"@rjones thanks much!","username":"troyronda","ts":"2020-10-07T15:49:06.851Z"}
{"msg":"Should I update aries-b call with the new Zoom information, to match aries-a call?","username":"rjones","ts":"2020-10-07T16:33:14.021Z"}
{"msg":"Thanks @troyronda .  Just got back from lunch.  I'll catch up in a few","username":"pfeairheller","ts":"2020-10-07T16:56:43.777Z"}
{"msg":"FYI: discussions are going in #aries-go about the aries-framework-go BBS+ signature suite implementation.","username":"troyronda","ts":"2020-10-09T13:51:32.361Z"}
{"msg":"Hi, all. I've been asked by @PatrikStas to work on https://wiki.hyperledger.org/display/indy/2020-09-29+Indy+Contributors+Call the `aries-vcx-rs` part. Is this a new, blank repo I need to create?","username":"rjones","ts":"2020-10-13T15:00:50.854Z"}
{"msg":"Has joined the channel.","username":"PatrikStas","ts":"2020-10-13T15:00:50.972Z","type":"uj"}
{"msg":"@swcurran ?","username":"rjones","ts":"2020-10-13T15:04:42.905Z"}
{"msg":"@rjones I'm not sure whether it is better to start as a blank repo, or to migrate the repo currently being maintained by the Absa team. @PatrikStas what do you think?","username":"esplinr","ts":"2020-10-13T16:03:28.991Z"}
{"msg":"With a blank repo, there won't be any DCO issues :)","username":"rjones","ts":"2020-10-13T16:26:02.483Z"}
{"msg":"But all the contributions references are lost.  I would only do that if there were unsolvable DCO issues.","username":"swcurran","ts":"2020-10-13T16:27:35.755Z"}
{"msg":"I question the name.  I was thinking this was going to be aries-framework-rs.  Not the case?","username":"swcurran","ts":"2020-10-13T16:28:38.348Z"}
{"msg":"just let me know what you want :)","username":"rjones","ts":"2020-10-13T16:39:54.575Z"}
{"msg":"Hello Aries Maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT TODAY. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-10-14+Meeting+notes","username":"jramps9","ts":"2020-10-14T14:06:59.932Z"}
{"msg":"I'm fine with whatever name you and @PatrikStas and team agree.","username":"esplinr","ts":"2020-10-14T18:26:27.005Z"}
{"msg":"@sergey.minaev Do you have any concerns with naming?","username":"esplinr","ts":"2020-10-14T18:26:34.821Z"}
{"msg":"@sergey.minaev Do you have any concerns with the naming of the LibVCX repo?","username":"esplinr","ts":"2020-10-14T18:26:34.821Z"}
{"msg":"@esplinr @rjones @swcurran I would like to port Absa's repo if possible. \n\nAs for the name, I am fine with both `aries-framework-rs` or `aries-vcx-rs`, I don't have strong opinion. I see pros and cons for both - historically term `vcx` has been around for a while so it already sounds familiar, signalling that `aries-vcx-rs` is continuation of that, on the other hand `aries-framework-rs` is probably simply cleaner, easier to understand.","username":"PatrikStas","ts":"2020-10-15T11:45:01.440Z"}
{"msg":"Discussing this with team, we'd rather go for `aries-framework-rs` - seems to be consistent with other hyperledger aries projects (`aries-framework-go/js/dotnet`), also it signals brand new start of the project as opposed to old libvcx which used to contain non-aries protocols.","username":"PatrikStas","ts":"2020-10-15T12:13:52.269Z"}
{"msg":"@PatrikStas OK, great: please transfer the repo to my github account (ryjones) and I will put it in place","username":"rjones","ts":"2020-10-15T17:15:07.691Z"}
{"msg":"@PatrikStas @mirgee I disabled a bunch of the CI checks for https://github.com/hyperledger/aries-framework-rs/ because they need set up again after the repo move.","username":"rjones","ts":"2020-10-15T21:41:06.432Z"}
{"msg":"Has joined the channel.","username":"mirgee","ts":"2020-10-15T21:41:06.566Z","type":"uj"}
{"msg":"you both have the power to go here: https://github.com/hyperledger/aries-framework-rs/settings/branch_protection_rules/16958607 and change them once they're working again","username":"rjones","ts":"2020-10-15T21:42:12.475Z"}
{"msg":"@TelegramSam @swcurran @george.aristy I've raised a PR with a proposed update to the Feature Discovery protocol that allows an agent to discover not just protocols, but goal codes, decorators, crypto suites, etc. Would love feedback: https://github.com/hyperledger/aries-rfcs/pull/557","username":"danielhardman","ts":"2020-10-16T00:53:39.447Z"}
{"msg":"Fyi for anyone interested in joining, we now have channel #aries-framework-rust","username":"PatrikStas","ts":"2020-10-16T17:28:12.491Z"}
{"msg":"@rjones and others, we would like to suggest renaming `aries-framework-rs` to `aries-vcx` - it's almost revert to the originally considered option `aries-vcx-rs`, but without the `rs`. \nThe reason is that as the library isn't necessarily rust-only but contains wrappers for java, ios, nodejs (and unmaintaned python). So we realized putting Rust language reference is misleading, it also makes naming of wrapper packages awkward (for example having NodeJS wrapper `aries-framework-rs` is bit weird).\nRemoving the `rs` part from `aries-framework-rs` would make the name too general.","username":"PatrikStas","ts":"2020-10-21T13:07:34.414Z"}
{"msg":"Sorry for changing thoughts on this, hopefully it's still early enough to make this change if community agrees.","username":"PatrikStas","ts":"2020-10-21T13:08:57.004Z"}
{"msg":"FYI - aries-framework-go also contains bindings (go, mobile, wasm + js, rest).","username":"troyronda","ts":"2020-10-21T14:13:55.772Z"}
{"msg":"FYI - aries-framework-go also contains wrappers/bindings (go, mobile, wasm + js, rest).","username":"troyronda","ts":"2020-10-21T14:13:55.772Z"}
{"msg":"@PatrikStas","username":"troyronda","ts":"2020-10-21T14:14:48.507Z"}
{"msg":"Also npm package: https://github.com/hyperledger/aries-framework-go/packages/123279 and docker image: https://github.com/hyperledger/aries-framework-go/packages/69982","username":"troyronda","ts":"2020-10-21T14:16:40.500Z"}
{"msg":"Oh interesting didn't know that! However it doesn't change my mind, if possible I would still like to proceed with change to `aries-vcx`","username":"PatrikStas","ts":"2020-10-21T15:55:11.356Z"}
{"msg":"I don't have an opinion. Tell me what you want.","username":"rjones","ts":"2020-10-21T16:10:49.366Z"}
{"msg":"@PatrikStas submit a PR and change this file: https://github.com/hyperledger/aries-framework-rs/blob/master/.github/settings.yml line 6 to what you want","username":"rjones","ts":"2020-10-21T16:14:50.242Z"}
{"msg":"Thanks, I did however my colleague happened to merged it already. So the repo name is now changed to `aries-vcx`. Could you please also update our rocketchat channel name to `aries-vcx`?","username":"PatrikStas","ts":"2020-10-22T09:52:37.288Z"}
{"msg":"@swcurran @TelegramSam I will likely miss today's weekly meeting due to a scheduling conflict","username":"george.aristy","ts":"2020-10-28T15:12:06.028Z"}
{"msg":"aries-framework-go has now merged BBS+ verifiable credential signing and verification. Example: https://github.com/hyperledger/aries-framework-go/blob/ac94a47/pkg/doc/verifiable/credential_ldp_test.go#L450","username":"troyronda","ts":"2020-10-28T15:18:49.296Z"}
{"msg":"Weekly B call happening now: https://zoom.us/j/5184947650?pwd=UE90WHhEaHRqOGEyMkV3cldKa2d2dz09","username":"george.aristy","ts":"2020-10-28T19:03:32.121Z"}
{"msg":"Hello! we're low on project news and updates for the dev/weekly newsletter going out tomorrow 10/30. If there's anything you'd like to suggest, please do so in the comments here: https://wiki.hyperledger.org/pages/viewpage.action?pageId=41584474","username":"jramps9","ts":"2020-10-29T13:53:09.593Z"}
{"msg":"Has joined the channel.","username":"askolesov","ts":"2020-11-09T10:43:36.639Z","type":"uj"}
{"msg":"Hello Aries maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 11/11 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-11-11+Meeting+notes","username":"jramps9","ts":"2020-11-09T18:13:35.946Z"}
{"msg":"Can I get this merged? https://github.com/hyperledger/aries-rfcs/pull/557","username":"danielhardman","ts":"2020-11-10T15:29:29.129Z"}
{"msg":"Okay, I cleaned up this PR and got it back up-to-date. Please merge when you get a chance: https://github.com/hyperledger/aries-rfcs/pull/559","username":"danielhardman","ts":"2020-11-11T21:30:43.422Z"}
{"msg":"Done","username":"swcurran","ts":"2020-11-11T21:38:05.994Z"}
{"msg":"Thanks!","username":"danielhardman","ts":"2020-11-11T21:38:18.169Z"}
{"msg":"What versions of `did:peer` are out there in the wild?","username":"george.aristy","ts":"2020-11-19T18:43:07.963Z"}
{"msg":"aries-framework-go supports it, but the implementation is old and it could be lagging behind recent changes.","username":"george.aristy","ts":"2020-11-19T18:43:48.270Z"}
{"msg":"I did a version in python. I believe Lohan Spies at DIDx did a version in python. I think Orie did an experimental version in JavaScript, but went off-spec to experiment with a different CRDT mechanism. I heard that someone else did a version in JavaScript, but I don't know who it was. I think there may be another 1 or 2 impls floating around that I haven't tracked.\n\nI think the aries-framework-go impl was the first one other than mine in python that aspired to production status, so it has the greatest gravitas. If you updated your impl, I think others would follow suit and you wouldn't feel a lot of interop pain.","username":"danielhardman","ts":"2020-11-19T18:48:14.116Z"}
{"msg":"Should this be an AIP item?","username":"george.aristy","ts":"2020-11-19T18:49:13.156Z"}
{"msg":"I would love it if we did that. I'd be curious to see how community would react to that.","username":"danielhardman","ts":"2020-11-19T18:49:35.933Z"}
{"msg":"According to this comment, indy-sdk also implemented `did:peer`: https://github.com/hyperledger/aries-framework-go/pull/2159#issuecomment-730563589","username":"george.aristy","ts":"2020-11-19T18:50:05.979Z"}
{"msg":"I would definitely support it being an AIP item.","username":"pfeairheller","ts":"2020-11-19T18:51:10.105Z"}
{"msg":"+1","username":"george.aristy","ts":"2020-11-19T18:51:19.435Z"}
{"msg":"Let's propose it.","username":"danielhardman","ts":"2020-11-19T18:51:49.567Z"}
{"msg":"Yup","username":"george.aristy","ts":"2020-11-19T18:52:34.278Z"}
{"msg":"You want to do the honors?","username":"george.aristy","ts":"2020-11-19T18:52:48.181Z"}
{"msg":"Sure.","username":"danielhardman","ts":"2020-11-19T18:52:57.724Z"}
{"msg":"For each proposal for AIP 2.0, I'm really keen for it to include a description of the use case it enables (user story or customer benefit). That will help vendors like me to prioritize the work to support the new interop profile.","username":"esplinr","ts":"2020-11-20T22:56:53.530Z"}
{"msg":"In other words, what use case will did:peer enable that isn't achievable with AIP 1.0?","username":"esplinr","ts":"2020-11-20T22:57:29.282Z"}
{"msg":"I agree with @esplinr","username":"tomislav","ts":"2020-11-20T22:58:13.862Z"}
{"msg":"Agree with benefit focused discussion. However: Interoperability is clearly the goal here. Adding interim steps to achieve the interop required for DIDComm v2 seems like a worthy goal to me. Stepping up did:peer to something real from it's currently hacky implementation fits that description for me.","username":"TelegramSam","ts":"2020-11-24T14:21:19.368Z"}
{"msg":"Not every proposed AIP item will map to a user benefit, but whenever possible it will help to describe the items in those terms. \"Interop is the goal\" is too vague as we have some level of interop today. So it will help me to understand \"improved interop while doing X because the current approach fails due to Y\". I know that repeats some of the long RFC conversations, but the summary would be really useful.","username":"esplinr","ts":"2020-11-25T06:34:00.892Z"}
{"msg":"Fully agree @esplinr","username":"george.aristy","ts":"2020-11-25T14:19:34.674Z"}
{"msg":"I think Interop beyond the Indy community is a goal - we don't have this interop today.","username":"troyronda","ts":"2020-11-25T15:03:25.455Z"}
{"msg":"I think Interop beyond the Indy community is a goal - we don't have this interop across projects today.","username":"troyronda","ts":"2020-11-25T15:03:25.455Z"}
{"msg":"Having user stories (benefits) provides useful context (when applicable). Of course, with many roles in an ecosystem, there are stories beyond the \"end user\" role.","username":"troyronda","ts":"2020-11-25T15:51:07.169Z"}
{"msg":"Although there is some level of interop based on the usage of Indy and Indy credentials, we also need to focus on AIP profile items that enable interop beyond the Indy projects.","username":"troyronda","ts":"2020-11-25T15:51:17.663Z"}
{"msg":"And we should also note that there isn’t currently interop between all the Aries projects. As an example, aries-framework-go has focused on being DID method (and ledger) agnostic, enabling “JSON-LD” verifiable credentials / signature suites, and implementing the updated Aries protocols.","username":"troyronda","ts":"2020-11-25T16:30:14.261Z"}
{"msg":"I've added PR to update the generated index to reflect recent changes.  Can I get an approval and merge of that?","username":"swcurran","ts":"2020-11-25T21:29:57.591Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/567","username":"swcurran","ts":"2020-11-25T21:29:59.076Z"}
{"msg":"I was given the assignment at the last Aries WG to generate a PR (or document) to start the discussion about what should be in AIP Next.  I've done that initially as a Google Doc and plan on leading a discussion about the document and it's comments at the next US Afternoon Aries WG Call. For those that want to take a look ahead of that to prepare their \"discussion points\", the link to the document is below.\n\nPlease read the initial section of the document so you have a bit of context of what's in the document and what I've already done.\n\nhttps://docs.google.com/document/d/1Gvv0VNEfnYjJXgscxYRJ38f_KRrojNKv5hrF2t-oESM/edit?usp=sharing\n\nEnjoy!","username":"swcurran","ts":"2020-11-27T01:04:46.573Z"}
{"msg":"Has joined the channel.","username":"marc0olo","ts":"2020-11-30T04:52:54.012Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sebastian","ts":"2020-11-30T11:34:58.205Z","type":"uj"}
{"msg":"Hello Aries maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 12/9 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-12-09+Meeting+notes","username":"jramps9","ts":"2020-12-07T18:00:31.552Z"}
{"msg":"Are there implementations out there that have adopted `RFC0360-use-did-key` ?","username":"george.aristy","ts":"2020-12-11T20:45:34.696Z"}
{"msg":"Curious to share some thoughts on this.","username":"george.aristy","ts":"2020-12-11T20:45:49.717Z"}
{"msg":"The `did:key` method is not very well documented: https://w3c-ccg.github.io/did-method-key","username":"george.aristy","ts":"2020-12-11T20:46:18.126Z"}
{"msg":"But there is \"enough\" to get you started.","username":"george.aristy","ts":"2020-12-11T20:46:28.150Z"}
{"msg":"But when you get down to the details, making it work the way we expected to in DIDComm doesn't look so smooth.","username":"george.aristy","ts":"2020-12-11T20:47:00.620Z"}
{"msg":"Let's start with the attachments RFC which states:\n\n> may also use a DID URL to reference a key within a resolvable DIDDoc\n\nI think we should uniformly say usage of DID URL is a MUST.","username":"george.aristy","ts":"2020-12-11T20:48:52.575Z"}
{"msg":"*and* we should say the DID URL MUST de-reference to the DID's `keyAgreement` verification method.","username":"george.aristy","ts":"2020-12-11T20:49:42.259Z"}
{"msg":"Given the above, we arrive at `did:key`.","username":"george.aristy","ts":"2020-12-11T20:50:22.548Z"}
{"msg":"`did:key` does not _really_ provide any metadata for the key aside from its technical parameters (curve, values).","username":"george.aristy","ts":"2020-12-11T20:51:00.311Z"}
{"msg":"It does _not_ indicate its purpose.","username":"george.aristy","ts":"2020-12-11T20:51:10.092Z"}
{"msg":"@kdenhartog correctly identifies an problem here - only some ECC algorithms have been shown to be secure when the same key is used for both signing and key agreement: https://github.com/w3c-ccg/did-method-key/issues/3#issue-547767482","username":"george.aristy","ts":"2020-12-11T20:52:38.580Z"}
{"msg":"`did:key` does not provide a way for the controller (ie. the sender of the `did:key`) indicating the key's purpose. Hence the spec says that when you resolve a `did:key` you end up with _all_ purposes.","username":"george.aristy","ts":"2020-12-11T20:54:02.030Z"}
{"msg":"keyAgreement, authentication, assertionMethod, capabilityDelegation, capabilityInvocation","username":"george.aristy","ts":"2020-12-11T20:54:15.479Z"}
{"msg":"So should the `did:key` method then be limited to those secure algorithms?  Or are you proposing a way to indicate the purpose in the did?","username":"pfeairheller","ts":"2020-12-11T20:57:03.893Z"}
{"msg":"The purpose of a did:key is to send a public key and it's type as a DID, and to provide away to text transform that into a DIDDoc.  It's only content is the public key and type, and it's method specifies the transformation so you can resolve it. \n\nAre you expecting more than that?","username":"swcurran","ts":"2020-12-11T20:58:19.413Z"}
{"msg":"It's used in DIDComm as a replacement for sending just a naked public key, so that it can be resolved.","username":"swcurran","ts":"2020-12-11T20:58:52.058Z"}
{"msg":"It's used in DIDComm as a replacement for sending just a naked public key, so that it can be resolved/handled like a DID.","username":"swcurran","ts":"2020-12-11T20:58:52.058Z"}
{"msg":"Has joined the channel.","username":"tarkochevamik","ts":"2020-12-11T20:59:01.815Z","type":"uj"}
{"msg":"But it's still nothing more than a public key and a type.","username":"swcurran","ts":"2020-12-11T20:59:25.261Z"}
{"msg":"@swcurran I know that is the intention, and you can easily see it \"work\" with a casual glance, but what is actually in the Aries RFCs does not match quite right with did-core (and by extension, did:key)","username":"george.aristy","ts":"2020-12-11T22:13:53.380Z"}
{"msg":"We should be reusing components here.","username":"george.aristy","ts":"2020-12-11T22:14:03.279Z"}
{"msg":"Specifically, we should reuse our `did:key` resolver with a generic DID URL de-referencer on top","username":"george.aristy","ts":"2020-12-11T22:14:39.923Z"}
{"msg":"For that to work we need to follow the rules in did-core.","username":"george.aristy","ts":"2020-12-11T22:14:49.436Z"}
{"msg":"\"purpose\" has a specific meaning in DIDs.. and it's related to how the keys in those DIDs are to be used.","username":"george.aristy","ts":"2020-12-11T22:15:57.183Z"}
{"msg":"I am still not clear why we didn't go the direct route of multibase(multicodec(key))","username":"george.aristy","ts":"2020-12-11T22:17:27.453Z"}
{"msg":"Back to my first question.... are there implementations out there that are using did:key for DIDComm?","username":"george.aristy","ts":"2020-12-11T22:18:15.470Z"}
{"msg":"I see ACA-Py did implement `did:key`...","username":"george.aristy","ts":"2020-12-11T22:21:36.074Z"}
{"msg":"https://github.com/llorllale/aries-cloudagent-python/blob/a5205b80ec71646d0dbb60c6df261468c5508841/aries_cloudagent/messaging/decorators/attach_decorator.py#L348-L368","username":"george.aristy","ts":"2020-12-11T22:22:04.635Z"}
{"msg":"https://github.com/llorllale/aries-cloudagent-python/blob/a5205b80ec71646d0dbb60c6df261468c5508841/aries_cloudagent/messaging/decorators/attach_decorator.py#L198-L206","username":"george.aristy","ts":"2020-12-11T22:22:16.560Z"}
{"msg":"Here is where we have the gray area from a standards-perspective: using this example:\n\n```\n{\n  \"@context\": \"https://w3id.org/did/v1\",\n  \"id\": \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH\",\n  \"publicKey\": [{\n    \"id\": \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH\",\n    \"type\": \"Ed25519VerificationKey2018\",\n    \"controller\": \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH\",\n    \"publicKeyBase58\": \"B12NYF8RrR3h41TDCTJojY59usg3mbtbjnFs7Eud1Y6u\"\n  }],\n  \"authentication\": [ \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH\" ],\n  \"assertionMethod\": [ \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH\" ],\n  \"capabilityDelegation\": [ \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH\" ],\n  \"capabilityInvocation\": [ \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH\" ],\n  \"keyAgreement\": [{\n    \"id\": \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#zBzoR5sqFgi6q3iFia8JPNfENCpi7RNSTKF7XNXX96SBY4\",\n    \"type\": \"X25519KeyAgreementKey2019\",\n    \"controller\": \"did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH\",\n    \"publicKeyBase58\": \"JhNWeSVLMYccCk7iopQW4guaSJTojqpMEELgSLhKwRr\"\n  }]\n}\n```","username":"george.aristy","ts":"2020-12-11T22:24:38.707Z"}
{"msg":"How does the receiver know which to pick - the `publicKey` or the `keyAgreement` key - when ACA-Py just sends this: `did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH` ?","username":"george.aristy","ts":"2020-12-11T22:25:32.912Z"}
{"msg":"De-referencing `did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH` would result in this whole DID document, not the key within.","username":"george.aristy","ts":"2020-12-11T22:26:26.848Z"}
{"msg":"To reference a key we need a DID URL: https://www.w3.org/TR/did-core/#did-url-syntax","username":"george.aristy","ts":"2020-12-11T22:26:52.441Z"}
{"msg":"Also specified in did-core is how to de-reference DID URLs: https://www.w3.org/TR/did-core/#did-url-dereferencing","username":"george.aristy","ts":"2020-12-11T22:27:04.316Z"}
{"msg":"And finally, to support the case that these need to be `did:key` URLs and not just the DID, here's the section on signing attachments in the Aries RFC: https://github.com/hyperledger/aries-rfcs/blob/master/concepts/0017-attachments/README.md#signing-attachments","username":"george.aristy","ts":"2020-12-11T22:27:47.227Z"}
{"msg":"> It may also use a DID URL to reference a key within a resolvable DIDDoc","username":"george.aristy","ts":"2020-12-11T22:28:00.615Z"}
{"msg":"The references should be uniformly represented, and the standards-compliant way is through DID URLs.","username":"george.aristy","ts":"2020-12-11T22:28:42.920Z"}
{"msg":"If you are now convinced that we MUST use DID URLs, we can get on to discuss `did:key`...","username":"george.aristy","ts":"2020-12-11T22:29:14.591Z"}
{"msg":"I agree with sending the naked key in explicit invitations. I agree they should be encoded with sufficient metadata such that the recipient can discern the curve.","username":"george.aristy","ts":"2020-12-11T22:31:13.342Z"}
{"msg":"I agree with sending the naked key in explicit invitations. I agree they should be encoded with sufficient metadata such that the recipient can discern the curve and values.","username":"george.aristy","ts":"2020-12-11T22:31:13.342Z"}
{"msg":"I'm not very convinced we need `did:key` though.","username":"george.aristy","ts":"2020-12-11T22:31:27.907Z"}
{"msg":"We had that debate when those PRs were done -- use of DID Key and the RFCs that were updated.  Your points were raised and in the end, the majority (but, as I recall, not unanimous) decision was to go with `did:key` vs. multibase so that a DID resolver could be used if needed.  \n\nThere are three ways to get the public key from a did:key --- resolve to get the DIDDoc and extract, use a did URL (AFAIK -- that should work...) or recognize it as a `did:key` and use a multi-base handler to get the public key.  Ugly, but up to the implementer.","username":"swcurran","ts":"2020-12-12T20:08:25.493Z"}
{"msg":"I just raised a PR that adds a new field to an OOB invitation such that the sender declares the JWE parameters it supports for encryption: https://github.com/hyperledger/aries-rfcs/pull/576","username":"george.aristy","ts":"2020-12-14T20:10:20.759Z"}
{"msg":"Would like some feedback","username":"george.aristy","ts":"2020-12-14T20:10:26.738Z"}
{"msg":"@swcurran \n\n> There are three ways to get the public key from a did:key --- resolve to get the DIDDoc and extract, use a did URL (AFAIK -- that should work...) or recognize it as a did:key and use a multi-base handler to get the public key. Ugly, but up to the implementer.\n\nThis is what I want to clear up. There should be 1 way to resolve key agreement keys from `did:key`","username":"george.aristy","ts":"2020-12-14T20:20:36.690Z"}
{"msg":"We're not running it through a full DID resolver when the process of deriving the key is clear, what would be the point?","username":"andrew.whitehead","ts":"2020-12-14T20:35:32.577Z"}
{"msg":"Hi @andrew.whitehead - I believe the discrepancy will become more evident once we use curves other than Ed25519/X25519.","username":"george.aristy","ts":"2020-12-14T20:46:09.702Z"}
{"msg":"For example, if I wanted to use P256, what sort of `did:key` reference would I send and how would the receiver process it?","username":"george.aristy","ts":"2020-12-14T20:46:51.274Z"}
{"msg":"It is \"obvious\" - but different from Ed25519/X25519.","username":"george.aristy","ts":"2020-12-14T20:47:04.213Z"}
{"msg":"My second concern is this is already a \"did URL de-referencing\" problem. There shouldn't be an \"Aries DIDComm DID URL de-referencer\" - we should be able to reuse components.","username":"george.aristy","ts":"2020-12-14T20:48:14.751Z"}
{"msg":"These standards are meant to be composable.","username":"george.aristy","ts":"2020-12-14T20:48:23.541Z"}
{"msg":"I think the only real use case going forward are the routingKeys and recipientKeys fields in an out-of-band invitation, in which case the recipientKeys must contain a single ed25519 key. That's because it's used both for signing the DID Doc received in the DID exchange response, and its x25519 equivalent is used in encrypting the request. Perhaps another field could be added to indicate the signing key, in which case the recipient key could be another format (I think you can do key agreement with secp256k1 but it might not be well supported yet)","username":"andrew.whitehead","ts":"2020-12-14T21:40:50.617Z"}
{"msg":"I admit it's not clear to me how you would resolve another type of DID URL there which didn't reference a specific key in the DID document. For signing purposes you would probably have to support the various authentication rules of the DID spec, and for encryption you would use.. all of the key agreement keys perhaps?","username":"andrew.whitehead","ts":"2020-12-14T21:50:11.258Z"}
{"msg":"@swcurran @TelegramSam any reason on why `handshake_protocols` should not be inside the `service` object in an OOB invitation?","username":"george.aristy","ts":"2020-12-17T20:42:42.034Z"}
{"msg":"1 reason is - need only specify it once for all `service` entries.","username":"george.aristy","ts":"2020-12-17T20:45:50.752Z"}
{"msg":"I guess the expectation is that most implicit invitations using public DIDs would be discovered via an OOB invitation.","username":"george.aristy","ts":"2020-12-17T20:46:20.087Z"}
{"msg":"Because the `did-communication` service endpoint does not have this information.","username":"george.aristy","ts":"2020-12-17T20:47:15.220Z"}
{"msg":"Is there as well an assumption that most OOB invitations will have several explicit `service` entries?","username":"george.aristy","ts":"2020-12-17T20:50:33.650Z"}
{"msg":"For now -- `handshake_protocols` is optional.  Also, service objects may be just references to service objects in a resolvable DID.","username":"swcurran","ts":"2020-12-17T21:07:55.478Z"}
{"msg":"For one -- `handshake_protocols` is optional.  Also, service objects may be just references to service objects in a resolvable DID.","username":"swcurran","ts":"2020-12-17T21:07:55.478Z"}
{"msg":"I think the expectation is that most OOB invitations will have just one service entry.","username":"swcurran","ts":"2020-12-17T21:08:39.793Z"}
{"msg":"Can't see why there would be mutlitple.","username":"swcurran","ts":"2020-12-17T21:09:01.009Z"}
{"msg":"Only if it's basically standing in for a DID document I think","username":"andrew.whitehead","ts":"2020-12-17T21:11:41.353Z"}
{"msg":"Only if it's basically standing in for a DID document I think, it's hard to imagine an agent that has multiple endpoints but can't publish their DID doc though","username":"andrew.whitehead","ts":"2020-12-17T21:11:41.353Z"}
{"msg":"> service objects may be just references to service objects in a resolvable DID.\n\nThat's a reason in favor of placing `handshake_protocols` inside the DID document as well","username":"george.aristy","ts":"2020-12-18T18:32:55.444Z"}
{"msg":"Ah...I see.  This is for the implicit invitation use case.  Interesting...","username":"swcurran","ts":"2020-12-18T18:55:25.296Z"}
{"msg":"So you can tell the other party -- hey, use these protocols to connect with me...","username":"swcurran","ts":"2020-12-18T18:55:49.060Z"}
{"msg":"Yeah. If the DID is truly intended to be public, then anyone browsing the DID registry can connect to it using the appropriate protocols.","username":"george.aristy","ts":"2020-12-18T18:56:32.415Z"}
{"msg":"So to make it uniform: both `service` objects in OOB invitations and in DID Docs should have `handshake_protocols`","username":"george.aristy","ts":"2020-12-18T18:57:14.305Z"}
{"msg":"OOB invitations are smaller.","username":"george.aristy","ts":"2020-12-18T18:57:41.344Z"}
{"msg":"OOB invitations using public DIDs are smaller.","username":"george.aristy","ts":"2020-12-18T18:57:41.344Z"}
{"msg":"An indy DID wouldn't have the handshake protocols in the synthesized DID doc, so it would still be useful to include handshake protocols in the OOB invitation in that case","username":"andrew.whitehead","ts":"2020-12-18T19:00:16.325Z"}
{"msg":"We might want to just support it at both levels, let the service entry override the outer value if there is one","username":"andrew.whitehead","ts":"2020-12-18T19:00:54.818Z"}
{"msg":"@andrew.whitehead so the bigger point would be: checks support for custom `service` entries across DID methods","username":"george.aristy","ts":"2020-12-18T19:02:28.076Z"}
{"msg":"@andrew.whitehead so the bigger point would be: check support for custom `service` entries across DID methods","username":"george.aristy","ts":"2020-12-18T19:02:28.076Z"}
{"msg":"This rings a faint bell - reminds me of the changes done in V2 to make it work with `did:key`","username":"george.aristy","ts":"2020-12-18T19:03:46.960Z"}
{"msg":"So would this be the indy version, at least until there's a way to publish a custom DID doc? To support resolution for the keys and endpoint\n```json\n{\n  \"@type\": \"https://didcomm.org/out-of-band/%VER/invitation\",\n  \"@id\": \"..\",\n  \"service\": [\n    {\n      \"handshake_protocols\": [\n        \"https://didcomm.org/didexchange/1.0\"\n      ],\n      \"serviceEndpoint\": \"did:sov:LjgpST2rjsoxYegQDRm7EL#service\"\n    }\n  ]\n}\n```","username":"andrew.whitehead","ts":"2020-12-18T19:07:36.113Z"}
{"msg":"All: I just pushed a proposal to adjust the encoding of naked keys in some RFC - I'd love some feedback.","username":"george.aristy","ts":"2020-12-18T22:58:04.364Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/577","username":"george.aristy","ts":"2020-12-18T22:58:06.059Z"}
{"msg":"Looks promising, I'll have to think about it some more. In the context of the DIDComm DIDDoc it feels like agents should just be using an `authentication` block to provide that information, rather than `authnKeys` in the service block. It seems like the semantics of the `authnKeys` array are that any single key can be used for authentication (as opposed to say, all of them) so that might need to be made explicit","username":"andrew.whitehead","ts":"2020-12-20T04:52:03.915Z"}
{"msg":"Folks: BC Gov wants to contribute the *aries-askar* (https://github.com/bcgov/aries-askar) repo to Hyperledger. The repo contains an Aries-level Rust implementation of agent storage/key management service that works with the already contributed indy-vdr (https://github.com/hyperledger/indy-vdr) and the also to be contributed  indy-shared-rs (https://github.com/bcgov/indy-shared-rs)  to enable the creation of Aries Agents without using the indy-sdk. Specifically, aries-askar provides the capability currently provided by the `indy-wallet` component of the indy-sdk.  Our expectation is that the combination of new libraries will be more flexible, capable and performant, and will eliminate the need to use the indy-sdk at all.\n\nWe hope to talk about this proposal briefly at the Aries WG call this week ( @TelegramSam )\n\nPlease let us know if you support or object to this contribution.","username":"swcurran","ts":"2021-01-05T01:33:15.761Z"}
{"msg":"I support. Thank you for your leadership in contributing this work!","username":"esplinr","ts":"2021-01-05T13:41:17.431Z"}
{"msg":"Following the feedback here (no objections) and the discussion on the Aries WG call, I think BC Gov can go forward with the contribution of the aries-askar (https://github.com/bcgov/aries-askar) repo to Hyperledger.\n\n@andrew.whitehead @WadeBarnes and @rjones --- please go ahead with that as appropriate.\n@alexgmetcalf -- you and I should work a bit on some more words in the readme.","username":"swcurran","ts":"2021-01-07T19:06:59.723Z"}
{"msg":"Has joined the channel.","username":"alexgmetcalf","ts":"2021-01-07T19:06:59.838Z","type":"uj"}
{"msg":"The `bcgov/aries-askar` repository has been transferred to Hyperledger and is now [hyperledger/aries-askar](https://github.com/hyperledger/aries-askar).","username":"WadeBarnes","ts":"2021-01-08T15:38:22.890Z"}
{"msg":"Great job, guys!","username":"danielhardman","ts":"2021-01-10T02:10:59.411Z"}
{"msg":"Hello Aries maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 1/13 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2021-01-13+Meeting+notes","username":"jramps9","ts":"2021-01-11T15:27:01.669Z"}
{"msg":"`authentication` block would work for invitations embedded inside DID Docs","username":"george.aristy","ts":"2021-01-11T15:59:43.349Z"}
{"msg":"Thing is - it won't for explicit invitations","username":"george.aristy","ts":"2021-01-11T16:00:04.713Z"}
{"msg":"@swcurran @TelegramSam Just want to confirm that talk about about moving away from did:key is in the agenda for today's B call?","username":"george.aristy","ts":"2021-01-13T19:32:44.168Z"}
{"msg":"@dbluhm could you add Hyperledger as an owner of https://pypi.org/project/aries-staticagent/ please?","username":"rjones","ts":"2021-01-13T20:23:17.532Z"}
{"msg":"Right now, I think it's maintain, not owner","username":"rjones","ts":"2021-01-13T20:23:42.281Z"}
{"msg":"@rjones done","username":"dbluhm","ts":"2021-01-13T21:08:43.135Z"}
{"msg":"@swcurran @TelegramSam as per your request from yesterday's call:\n\nIf asked to stick strictly to NIST-approved crypto, and given the choice, the aries-framework-go team would default to the following:\n\n* key agreement: P-384 with ECDH-1PU+A256KW, encrypting the epk to the recipient with A256GCM\n* content encryption: A256GCM\n* authentication: ECDSA with P-384\n\nThe team recognizes the prevalence of P-256, however, and would default to that instead if it makes sense.\n\nHere is the complete list of curves and algorithms we aim to support for our next release (0.1.6):\n\n* *key agreement*:\n   * crv: P-256, P-384, P-521, X25519\n   * alg: ECDH-ES+A256KW, ECDH-1PU+XC20PKW\n   * enc: A256GCM, XC20P\n* *encryption*: A256GCM, XC20P\n* *authentication*: EdDSA with Ed25519, ES256, ES384, ES512","username":"george.aristy","ts":"2021-01-14T15:04:37.170Z"}
{"msg":"@swcurran @TelegramSam as per your request from yesterday's call:\n\nIf asked to stick strictly to NIST-approved crypto, and given the choice, the aries-framework-go team would default to the following:\n\n* key agreement: P-384 with ECDH-1PU+A256KW, encrypting the epk to the recipient with A256GCM\n* content encryption: A256GCM\n* authentication: ECDSA with P-384\n\nThe team recognizes the prevalence of P-256, however, and would default to that instead if it makes sense.\n\nHere is the complete list of curves and algorithms we aim to support for our next release (0.1.6):\n\n* key agreement:\n   * crv: P-256, P-384, P-521, X25519\n   * alg: ECDH-ES+A256KW, ECDH-1PU+XC20PKW\n   * enc: A256GCM, XC20P\n* encryption: A256GCM, XC20P\n* authentication: EdDSA with Ed25519, ES256, ES384, ES512","username":"george.aristy","ts":"2021-01-14T15:04:37.170Z"}
{"msg":"@swcurran @TelegramSam as per your request from yesterday's call:\n\nIf asked to stick strictly to NIST-approved crypto, and given the choice, the aries-framework-go team would default to the following:\n\n* key agreement: P-384 with ECDH-1PU+A256KW, encrypting the epk to the recipient with A256GCM\n* content encryption: A256GCM\n* authentication: ECDSA with P-384\n\nThe team recognizes the prevalence of P-256, however, and would default to that instead if it makes sense.\n\nHere is the complete list of curves and algorithms we aim to support for our next release (0.1.6):\n\n* key agreement:\n ----crv: P-256, P-384, P-521, X25519\n ----alg: ECDH-ES+A256KW, ECDH-1PU+XC20PKW\n ----enc: A256GCM, XC20P\n* encryption: A256GCM, XC20P\n* authentication: EdDSA with Ed25519, ES256, ES384, ES512","username":"george.aristy","ts":"2021-01-14T15:04:37.170Z"}
{"msg":"I posted a comment on the PR with the action items I recall from yesterday's call: https://github.com/hyperledger/aries-rfcs/pull/577#issuecomment-760259045","username":"george.aristy","ts":"2021-01-14T15:12:53.022Z"}
{"msg":"Has joined the channel.","username":"Baha-sk","ts":"2021-01-14T15:22:03.231Z","type":"uj"}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=Z8Af8tryGR9EHQ7sw","username":"troyronda","ts":"2021-01-15T15:08:32.482Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=Z8Af8tryGR9EHQ7sw","url":"https://chat.hyperledger.org/channel/aries-go?msg=Z8Af8tryGR9EHQ7sw","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@troyronda please remember to make this change in .github/settings.yml in 1) main 2) master, in that order","username":"rjones","ts":"2021-01-15T15:10:37.428Z"}
{"msg":"which I see somehow you don't have.","username":"rjones","ts":"2021-01-15T15:11:40.670Z"}
{"msg":"@rjones hmmm.. yes - I was just going to ask about that :).","username":"troyronda","ts":"2021-01-15T15:12:03.607Z"}
{"msg":"Steal this one: https://github.com/hyperledger/fabric/blob/master/.github/settings.yml","username":"rjones","ts":"2021-01-15T15:12:22.897Z"}
{"msg":"edit to suit","username":"rjones","ts":"2021-01-15T15:12:27.298Z"}
{"msg":"Ok cool. Shall I rename the branch first and then add this file?","username":"troyronda","ts":"2021-01-15T15:12:46.903Z"}
{"msg":"yes.","username":"rjones","ts":"2021-01-15T15:13:16.675Z"}
{"msg":"Are you able to see https://github.com/hyperledger/aries-framework-go/security/dependabot ?","username":"rjones","ts":"2021-01-15T15:15:28.104Z"}
{"msg":"Yes. I keep meaning to look into not having alerts on local test scripts.","username":"troyronda","ts":"2021-01-15T15:16:34.488Z"}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=ryK5hL2Si9M7uzrA7","username":"troyronda","ts":"2021-01-15T21:11:04.113Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=ryK5hL2Si9M7uzrA7","url":"https://chat.hyperledger.org/channel/aries-go?msg=ryK5hL2Si9M7uzrA7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Maybe add a note for next week's /dev/weekly?","username":"rjones","ts":"2021-01-15T23:14:09.885Z"}
{"msg":"@rjones -- can you please create a channel called \"aries-bbs+\" that we can use to, you know, talk about BBS+.  And Aries.","username":"swcurran","ts":"2021-01-18T16:50:37.443Z"}
{"msg":"Hi, the following repos still use `master` as the default branch: `aries, aries-acapy-controllers, aries-acapy-plugin-toolbox, aries-agent-test-harness, aries-cloudagent-python, aries-framework-dotnet, aries-framework-javascript, aries-mobileagent-xamarin, aries-protocol-test-suite, aries-rfcs, aries-sdk-java, aries-staticagent-python, aries-toolbox, aries-vcx`. `main` [is the current guidance for naming](https://github.com/github/renaming).","username":"rjones","ts":"2021-01-25T18:36:44.266Z"}
{"msg":"I'll bring it up during the aries-framework-javascript call this friday","username":"TimoGlastra","ts":"2021-01-25T18:52:03.115Z"}
{"msg":"Switched over aries-staticagent-python and preparing to switch aries-toolbox and aries-acapy-plugin-toolbox","username":"dbluhm","ts":"2021-02-02T14:18:07.358Z"}
{"msg":"Cool. If you need a hand, lmk. I found some repos aren't set up to allow easy branch renames.","username":"rjones","ts":"2021-02-02T15:01:35.291Z"}
{"msg":"Hello Aries maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 2/10 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2021-02-10+Meeting+notes","username":"jramps9","ts":"2021-02-08T15:15:30.901Z"}
{"msg":"On closer inspection, it looks like I don't have sufficient privileges to change the default branch for aries-acapy-plugin-toolbox","username":"dbluhm","ts":"2021-02-10T14:04:26.116Z"}
{"msg":"OK, I fixed it.","username":"rjones","ts":"2021-02-10T14:19:11.639Z"}
{"msg":"@TelegramSam Posted the RFC that splits out Authcrypt JWE and added the line about using fresh DIDs: https://github.com/hyperledger/aries-rfcs/pull/587","username":"troyronda","ts":"2021-02-10T22:20:45.563Z"}
{"msg":"@troyronda @andrew.whitehead and others -- questions from the CII Badge for Aries at Hyperledger (in prep for the \"Exit Incubation\" TSC assessment).\n\nDo either or both of ACA-Py or AF-Go do this:\n\n```\nThe release notes MUST identify every publicly known run-time vulnerability fixed in this release that already had a CVE assignment or similar when the release was created. This criterion may be marked as not applicable (N/A) if users typically cannot practically update the software themselves (e.g., as is often true for kernel updates). This criterion applies only to the project results, not to its dependencies. If there are no release notes or there have been no publicly known vulnerabilities, choose N/A. [release_notes_vulns] \n\nThis criterion helps users determine if a given update will fix a vulnerability that is publicly known, to help users make an informed decision about updating. If users typically cannot practically update the software themselves on their computers, but must instead depend on one or more intermediaries to perform the update (as is often the case for a kernel and low-level software that is intertwined with a kernel), the project may choose \"not applicable\" (N/A) instead, since this additional information will not be helpful to those users. Similarly, a project may choose N/A if all recipients only run the latest version (e.g., it is the code for a single website or internet service that is constantly updated via continuous delivery). This criterion only applies to the project results, not its dependencies. Listing the vulnerabilities of all transitive dependencies of a project becomes unwieldy as dependencies increase and vary, and is unnecessary since tools that examine and track dependencies can do this in a more scalable way.\n```","username":"swcurran","ts":"2021-02-18T20:58:06.295Z"}
{"msg":"Second question -- I'm assuming that none of the Aries frameworks, use any dynamic code analysis tools -- e.g. fuzzing.  Is that correct?","username":"swcurran","ts":"2021-02-18T21:00:56.270Z"}
{"msg":"We haven't had any CVEs created so I think that's an N/A. I'm not aware of any use of fuzzing (yet), why?","username":"andrew.whitehead","ts":"2021-02-18T21:15:40.023Z"}
{"msg":"Has joined the channel.","username":"Helen_Garneau","ts":"2021-02-23T18:25:19.029Z","type":"uj"}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=zcudBwop9gyBbFPfq","username":"troyronda","ts":"2021-02-25T15:03:39.304Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=zcudBwop9gyBbFPfq","url":"https://chat.hyperledger.org/channel/aries-go?msg=zcudBwop9gyBbFPfq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"PR to allow the OOB message to convey mime type preferences: https://github.com/hyperledger/aries-rfcs/pull/595/","username":"troyronda","ts":"2021-02-26T02:28:20.614Z"}
{"msg":"I will add a clarification to PR 587 to indicate that its mime type is: \"application/didcomm-encrypted+json\". So with that clarification and the accept property in the OOB message, the acceptable envelope type(s) can be determined by the receiver of an OOB message.","username":"troyronda","ts":"2021-02-26T02:30:50.687Z"}
{"msg":"I will also add a clarification to PR 587 to indicate that its mime type is: \"application/didcomm-encrypted+json\". So with that clarification and the accept property in the OOB message, the acceptable envelope type(s) can be determined by the receiver of an OOB message.","username":"troyronda","ts":"2021-02-26T02:30:50.687Z"}
{"msg":"Updated PR 587.","username":"troyronda","ts":"2021-02-26T02:49:15.499Z"}
{"msg":"I've not been made aware of any known CVEs in the project (all the dependabot stuff is normally just in sample code). I think I'm still on the hook for triaging those as well","username":"kdenhartog","ts":"2021-03-03T01:32:06.293Z"}
{"msg":"I've not seen anyone using fuzzing yet either. Would be interesting to see what might come of it if anyone goes down that road","username":"kdenhartog","ts":"2021-03-03T01:33:20.926Z"}
{"msg":"https://chat.hyperledger.org/channel/aries-go?msg=ANMmhnHmCNtmWPPZL","username":"troyronda","ts":"2021-03-08T21:39:14.874Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-go?msg=ANMmhnHmCNtmWPPZL","url":"https://chat.hyperledger.org/channel/aries-go?msg=ANMmhnHmCNtmWPPZL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hello Aries Maintainers: Reminder to please join the DevRel Marketing Committee call at 9am PT today. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/x/Nqx6Ag","username":"Helen_Garneau","ts":"2021-03-10T12:59:52.538Z"}
{"msg":"(Please note new zoom info!)","username":"Helen_Garneau","ts":"2021-03-10T14:44:56.644Z"}
{"msg":"I updated https://github.com/hyperledger/aries-rfcs/pull/587 according to the discussion in the Aries call today.","username":"troyronda","ts":"2021-03-10T21:40:02.853Z"}
{"msg":"PR from today's Aries B call: minor tweak to RFC 0044 to say that the more specific mime type for plaintext, rather than the more generic mime type, is preferred. https://github.com/hyperledger/aries-rfcs/pull/606","username":"danielhardman","ts":"2021-03-10T21:46:56.905Z"}
{"msg":"Hello - question+proposal to clarify DID doc resolution for RFC0023 (\"did-exchange\"): https://github.com/hyperledger/aries-rfcs/issues/609","username":"george.aristy","ts":"2021-03-12T01:56:38.665Z"}
{"msg":"Solutions/feedback are welcome!","username":"george.aristy","ts":"2021-03-12T01:56:49.344Z"}
{"msg":"@troyronda @TelegramSam -- does 587 Encryption Envelope V2 replace 334 in AIP 2.0?  I assume so, but wanted to confirm.","username":"swcurran","ts":"2021-03-15T16:35:13.348Z"}
{"msg":"Hmmm...maybe it is replacing 0019?","username":"swcurran","ts":"2021-03-15T16:45:29.707Z"}
{"msg":"@swcurran yes: 587 replaces 334 in AIP 2.0.","username":"troyronda","ts":"2021-03-15T17:10:03.477Z"}
{"msg":"I would, of course, prefer to also replace 0019 if the community is able to do so.\nOne issue that was brought up is that with 0019 in core and 587 in a sub-target, we should add some more description into AIP to cover those agents that can only do 587 (and not 19).","username":"troyronda","ts":"2021-03-15T17:12:03.100Z"}
{"msg":"I would, of course, prefer to also replace 0019 if the community is able to do so.\nOne issue that was brought up (in the Aries WG call) is that with 0019 in core and 587 in a sub-target, we should add some more description into AIP to cover those agents that can only do 587 (and not 19).","username":"troyronda","ts":"2021-03-15T17:12:03.100Z"}
{"msg":"I would, of course, prefer to also replace 0019 if the community is able to do so.","username":"troyronda","ts":"2021-03-15T17:12:03.100Z"}
{"msg":"I would, of course, prefer to also replace 0019 if the community is able to do so. (but that hasn't been the discussion so far).","username":"troyronda","ts":"2021-03-15T17:12:03.100Z"}
{"msg":"One issue that was brought up (in the Aries WG call) is that with 0019 in core and 587 in a sub-target, we should add some more description into AIP to cover those agents that can only do 587 (and not 19).","username":"troyronda","ts":"2021-03-15T17:19:53.891Z"}
{"msg":"@TelegramSam @danielhardman @george.aristy -- can one of you approve and merge this so that we eliminate the CI/CD error we're getting in aries-rfcs\n\nhttps://github.com/hyperledger/aries-rfcs/pull/637","username":"swcurran","ts":"2021-04-15T20:22:01.058Z"}
{"msg":"@swcurran do you want me to use superpowers to merge that?","username":"rjones","ts":"2021-04-15T20:31:59.312Z"}
{"msg":"Go for it.","username":"swcurran","ts":"2021-04-15T20:32:38.183Z"}
{"msg":"done","username":"rjones","ts":"2021-04-15T20:33:49.351Z"}
{"msg":"Is anyone working on an Aries RFC for BBS+ signatures? We want to make sure our implementation plan is targeting the right specification.","username":"esplinr","ts":"2021-04-15T20:46:05.904Z"}
{"msg":"I'm working on one at the moment. Should have an initial version ready by next week","username":"TimoGlastra","ts":"2021-04-15T21:03:27.377Z"}
{"msg":"Are you looking for anything specific to be included in the RFC? Then I'll make sure to account for that","username":"TimoGlastra","ts":"2021-04-15T21:03:57.100Z"}
{"msg":"* I'm interested in seeing how the current proposal relates to previous work done in Indy Anoncreds 2\n* I'm unclear what changes are needed in Ursa\n* I want to be able to tell my team: our products need to implement that.","username":"esplinr","ts":"2021-04-15T21:06:16.327Z"}
{"msg":"I've been talking with @brentzundel . We can help contribute if you want. Is the document in HackMD or some other collaborative place?","username":"esplinr","ts":"2021-04-15T21:09:17.769Z"}
{"msg":"I've been talking with @brentzundel . We can help contribute if you want. Is the document in HackMD or a GitHub PR or some other collaborative place?","username":"esplinr","ts":"2021-04-15T21:09:17.769Z"}
{"msg":"Yeah that would be appreciated. I don't know how Indy AnonCreds 2 works, so I can't make that comparison. For the implementation we did in ACA-Py we didn't need to make any changes to ursa, however we have only implemented the basic features at the moment.","username":"TimoGlastra","ts":"2021-04-15T21:14:20.614Z"}
{"msg":"My understanding is that Mattr's proposal doesn't support link secrets, which will be required for use in Indy.","username":"esplinr","ts":"2021-04-15T21:15:00.123Z"}
{"msg":"I'm currently mostly focussing on pointing to the correct specs, how to use BBS+ in credential exchange  and providing some tutorial / implementers guide","username":"TimoGlastra","ts":"2021-04-15T21:15:10.308Z"}
{"msg":"That sounds like a valuable start.","username":"esplinr","ts":"2021-04-15T21:15:25.997Z"}
{"msg":"At the moment -- they're working on it I believe","username":"TimoGlastra","ts":"2021-04-15T21:15:26.105Z"}
{"msg":"@kdenhartog is your team making progress on link secrets in BBS+","username":"esplinr","ts":"2021-04-15T21:16:28.038Z"}
{"msg":"@kdenhartog is your team making progress on link secrets in BBS+? That would be fantastic!","username":"esplinr","ts":"2021-04-15T21:16:28.038Z"}
{"msg":"Or bound signatures based on public keys, which is their way of doing link secretes If I understand correctly","username":"TimoGlastra","ts":"2021-04-15T21:16:31.200Z"}
{"msg":"Good to know. I'm not clear on the differences.","username":"esplinr","ts":"2021-04-15T21:16:58.692Z"}
{"msg":"that's what they are calling it, but it is the same mechanism as link secrets","username":"brentzundel","ts":"2021-04-15T21:17:00.013Z"}
{"msg":"This is the response I got from Tobias two weeks ago: \n> Mike has been doing a bit of work on this, it is not quite ready yet though, the most complex aspect is actually getting the API’s as simple as possible","username":"TimoGlastra","ts":"2021-04-15T21:17:13.943Z"}
{"msg":"Thank you for that update.","username":"esplinr","ts":"2021-04-15T21:17:28.342Z"}
{"msg":"We're seeing a lot of enthusiasm for BBS+ signatures, but I don't know how we can adopt them before that feature is clarified.","username":"esplinr","ts":"2021-04-15T21:17:48.731Z"}
{"msg":"For ACA-Py we went with the non-bound signatures for now, but I agree it's really needed","username":"TimoGlastra","ts":"2021-04-15T21:18:51.686Z"}
{"msg":"That makes sense as a POC, but we can't accept the privacy implications of that.","username":"esplinr","ts":"2021-04-15T21:19:25.395Z"}
{"msg":"Thank you for the update @TimoGlastra . Let me know how we can help. If you have a draft RFC, we can collaborate with you.","username":"esplinr","ts":"2021-04-15T21:19:57.483Z"}
{"msg":"yes","username":"brentzundel","ts":"2021-04-15T21:20:16.257Z"}
{"msg":"Sure. I'll share a draft document with you (probably tomorrow?) so we can work on it together","username":"TimoGlastra","ts":"2021-04-15T21:20:40.305Z"}
{"msg":"Thanks for the help, much appreciated :)","username":"TimoGlastra","ts":"2021-04-15T21:20:47.308Z"}
{"msg":"sounds great","username":"brentzundel","ts":"2021-04-15T21:20:52.389Z"}
{"msg":"sounds great","username":"brentzundel","ts":"2021-04-15T21:21:21.737Z"}
{"msg":"Will you be attending IIW @TimoGlastra ?","username":"esplinr","ts":"2021-04-15T21:22:08.549Z"}
{"msg":"Yes","username":"TimoGlastra","ts":"2021-04-15T21:22:17.795Z"}
{"msg":"We intend to host a session with lessons learned implementing BBS+ into ACA-Py","username":"TimoGlastra","ts":"2021-04-15T21:22:50.931Z"}
{"msg":"Excellent. That will be interesting.","username":"esplinr","ts":"2021-04-15T21:23:05.162Z"}
{"msg":"Drummond and I are planning to hold a 'next steps for BBS+' session","username":"brentzundel","ts":"2021-04-15T21:23:27.505Z"}
{"msg":"Ah cool. I think they will fit great together","username":"TimoGlastra","ts":"2021-04-15T21:24:16.141Z"}
{"msg":"I've got some free time this afternoon I was planning to put toward the BBS+ rfc. Is there a github repo or a hack.md doc I could look at?","username":"brentzundel","ts":"2021-04-16T20:12:38.578Z"}
{"msg":"Some other work came in between so I didn’t get past creating the document sadly. If you want you can already have a go at it, but it’s not much yet: https://hackmd.io/@animo/B15BDxv8d","username":"TimoGlastra","ts":"2021-04-16T21:31:03.596Z"}
{"msg":"You can also wait until it get’s a bit more shape","username":"TimoGlastra","ts":"2021-04-16T21:31:39.437Z"}
{"msg":"Sweet. Thank you.","username":"esplinr","ts":"2021-04-16T21:31:53.951Z"}
{"msg":"I’ll resume work later this weekend","username":"TimoGlastra","ts":"2021-04-16T21:31:58.533Z"}
{"msg":"@brentzundel and I completed most of the non-technical sections. Hopefully that's helpful.","username":"esplinr","ts":"2021-04-16T22:51:23.153Z"}
{"msg":"We left your Spec notes at the beginning, even though we tried to fill in some of that information in the document.","username":"esplinr","ts":"2021-04-16T22:51:42.568Z"}
{"msg":"We can work on it together more next week.","username":"esplinr","ts":"2021-04-16T22:52:08.693Z"}
{"msg":"Awesome! I really like the additions. I've done some more tinkering and will continue tomorrow","username":"TimoGlastra","ts":"2021-04-18T20:13:30.340Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/aries-maintainers?msg=qHPTsPArW89pyqwwA) Not at this point. Last I remember there needed to be some additions to signing with G1 keys before we could start building on that to add support for domain bound proof generation, but I'm uncertain where that landed. I'll check with Tobias and Mike to see what happened. I think it ended up just getting pushed down on our list of priorities as we had other things come up.","username":"kdenhartog","ts":"2021-04-19T03:26:01.913Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries-maintainers?msg=qHPTsPArW89pyqwwA","url":"https://chat.hyperledger.org/channel/aries-maintainers?msg=qHPTsPArW89pyqwwA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I've added a lot more to the document. I've also added quite some TODOs at the top with questions, feel free to answer them in the TODO, or answer them somewhere else in the document","username":"TimoGlastra","ts":"2021-04-19T11:38:40.142Z"}
{"msg":"Also feel free to move/add/remove things","username":"TimoGlastra","ts":"2021-04-19T11:39:02.374Z"}
{"msg":"Thank you!","username":"esplinr","ts":"2021-04-19T13:05:50.135Z"}
{"msg":"I'm planning to hold a session at IIW called \"What's next for BBS+ LD-Proofs?\" The goal is for it to be a planning session for community agreement on next steps moving forward. I am thinking it wuld be best to hold it day 3.. Thoughts?","username":"brentzundel","ts":"2021-04-20T15:24:37.689Z"}
{"msg":"Day 3 sounds fine to me. Avoid the rush on Day 1.","username":"drummondreed","ts":"2021-04-20T15:25:01.256Z"}
{"msg":"Sounds good to me","username":"cam-parra","ts":"2021-04-20T15:25:04.577Z"}
{"msg":"Tobias said he's out day 3, so I'll do it tomorrow.","username":"brentzundel","ts":"2021-04-20T15:51:37.149Z"}
{"msg":"Good","username":"drummondreed","ts":"2021-04-20T15:51:46.796Z"}
{"msg":"@swcurran @andrew.whitehead https://github.com/decentralized-identity/didcomm-messaging/pull/190","username":"troyronda","ts":"2021-04-26T20:19:32.099Z"}
{"msg":"@swcurran @andrew.whitehead @TelegramSam  https://github.com/decentralized-identity/didcomm-messaging/pull/190","username":"troyronda","ts":"2021-04-26T20:19:32.099Z"}
{"msg":"With ecdh-es available again, I would like to update RFC 587 to use ecdh-es for anoncrypt.","username":"troyronda","ts":"2021-04-26T20:19:57.696Z"}
{"msg":"With anoncrypt available again, I would like to update RFC 587 to use ecdh-es for anoncrypt.","username":"troyronda","ts":"2021-04-26T20:19:57.696Z"}
{"msg":"With an anoncrypt capability available again, I would like to update RFC 587 to use ecdh-es for anoncrypt.","username":"troyronda","ts":"2021-04-26T20:19:57.696Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/643/files","username":"troyronda","ts":"2021-04-26T20:42:09.604Z"}
{"msg":"@andrew.whitehead @tomislav @TimoGlastra @danielhardman -- I was tasked with a community update RFC to enable a transition from the \"informal did:peer\" we used in AIP 1.0 to the formal RFC 627 use of did:peer in AIP 2.  \n>\nI started on that (and can continue on it), but it occurs to me that the transition should be made as part of moving from 0160 Connections to 0023 DID Exchange/0343 OOB.   That is -- everyone using 0160 should continue to use the \"old way\", and everyone using 0023 should only use the \"new way\".  Since we have no \"official\" users of AIP 2.0 and hence, no live uses of 0023, we don't need a transition.  Implementations of 0023 just need to be updated to align with 0627.\n>\nDoes that seem right to you?","username":"swcurran","ts":"2021-04-29T00:10:54.364Z"}
{"msg":"Yes I've generally been avoiding any changes relating to the connections protocol, including the formatting of DID documents","username":"andrew.whitehead","ts":"2021-04-29T00:13:31.468Z"}
{"msg":"Sounds good! Would be useful to have a mention of that somewhere.","username":"TimoGlastra","ts":"2021-04-29T08:06:54.498Z"}
{"msg":"I agree -- an update to at least 0023/OOB seems right.","username":"swcurran","ts":"2021-04-29T15:36:46.610Z"}
{"msg":"I've created the Quarterly Aries report to the TSC for Q2 -- https://wiki.hyperledger.org/display/TSC/2021+Q2+Hyperledger+Aries\n\nLet me know if you have any questions/comments/concerns.  It's a Wiki page, so you can also update it if you want.","username":"swcurran","ts":"2021-04-30T16:17:25.962Z"}
{"msg":"AIPv2 relevant discussion: https://github.com/decentralized-identity/didcomm-messaging/issues/191","username":"troyronda","ts":"2021-05-04T18:10:47.334Z"}
{"msg":"Thanks for putting this report together!","username":"troyronda","ts":"2021-05-04T18:11:20.222Z"}
{"msg":"@TelegramSam @tplooker -- pinging the two of you as the maintainers (only ones) for Aries Mobile Agent Xamarin.\n\nI've been talking to @nage about the challenge for his team to get PRs into Aries Mobile Agent Xamarin and we wondered about expanding the maintainers on the project to include a couple of people from Kiva --  @horacionunez and @nate.sulat .\n\nAny objections to that?\n\nTo others in the Aries community -- anyone else interested in that project enough to become a maintainer?","username":"swcurran","ts":"2021-05-04T22:12:08.238Z"}
{"msg":"Has joined the channel.","username":"nate.sulat","ts":"2021-05-04T22:12:08.324Z","type":"uj"}
{"msg":"Has joined the channel.","username":"horacionunez","ts":"2021-05-04T22:12:08.325Z","type":"uj"}
{"msg":"Created cross-link issue: https://github.com/hyperledger/aries-rfcs/issues/654","username":"troyronda","ts":"2021-05-05T19:41:45.026Z"}
{"msg":"@rjones -- you please add github user `shaangill025` ( @shaanjot.gill ) to the list of Aries Contributors?  I think he has to be added to the Hyperledger organization, which I don't think I can do?  \n\nShaanjot is an Aries Cloud Agent Python developer and I want to assign some tasks to him. Does that all need to happen to allow for that?\n\nThanks.","username":"swcurran","ts":"2021-05-09T19:35:55.482Z"}
{"msg":"Has joined the channel.","username":"shaanjot.gill","ts":"2021-05-09T19:35:55.608Z","type":"uj"}
{"msg":"> Does that all need to happen to allow for that?\n\nYou might be able to just have him comment on the issue and then you can assign it to him","username":"kdenhartog","ts":"2021-05-10T03:12:54.945Z"}
{"msg":"@swcurran done","username":"rjones","ts":"2021-05-10T11:56:58.947Z"}
{"msg":"Thanks!","username":"swcurran","ts":"2021-05-10T14:38:45.167Z"}
{"msg":"@rjones -- Can you please take care of the request above about aries-mobileagent-xamarin and the Kiva folks ^^^ (May 4th).","username":"swcurran","ts":"2021-05-10T17:35:41.332Z"}
{"msg":"GitHub IDs?","username":"rjones","ts":"2021-05-10T17:38:56.635Z"}
{"msg":"I found horationunez","username":"rjones","ts":"2021-05-10T17:41:34.991Z"}
{"msg":"I sent an email invite to nates@nates.local - couldn't find GitHub ID","username":"rjones","ts":"2021-05-10T17:45:03.850Z"}
{"msg":"@rjones thank you. nates email is nate.sulat@gmail.com","username":"horacionunez","ts":"2021-05-10T18:02:19.219Z"}
{"msg":"Thanks!","username":"swcurran","ts":"2021-05-11T03:00:51.079Z"}
{"msg":"@andrew.whitehead @swcurran @TelegramSam opened https://github.com/hyperledger/aries-rfcs/pull/660 and https://github.com/decentralized-identity/didcomm-messaging/pull/194 (for ecdh-1pu draft 04).","username":"troyronda","ts":"2021-05-12T20:23:38.328Z"}
{"msg":"@TelegramSam @troyronda @danielhardman @TimoGlastra @dbluhm @andrew.whitehead @tomislav @domwoe  -- a late addition suggestion for DID Exchange -- to add \"goal_code\" to the \"request\" message for use in situations where an implicit invitation (aka service block of public DID) is used to establish the connection.  I think it should be considered before we finalize AIP 2.0.\n\nhttps://github.com/hyperledger/aries-rfcs/pull/672\n\nThoughts?","username":"swcurran","ts":"2021-05-20T18:47:19.172Z"}
{"msg":"Has joined the channel.","username":"domwoe","ts":"2021-05-20T18:47:19.322Z","type":"uj"}
{"msg":"@TelegramSam @swcurran Just noticed that transport return route isn’t in the AIP 2.0 PR: https://github.com/hyperledger/aries-rfcs/pull/579/files#r639783112","username":"troyronda","ts":"2021-05-26T14:31:08.829Z"}
{"msg":"I don't recall it ever being discussed.  It wasn't in my initial work, and I don't think anyone proposed it.","username":"swcurran","ts":"2021-05-26T16:39:38.935Z"}
{"msg":"Since mediator interop was a desire (e.g., mediator coordination), there would be value in enabling bi-directional websocket transport (transport return route).","username":"troyronda","ts":"2021-05-26T17:33:52.870Z"}
{"msg":"@swcurran @TelegramSam @andrew.whitehead RFC510 fixes from the call: https://github.com/hyperledger/aries-rfcs/pull/677","username":"troyronda","ts":"2021-05-26T20:46:02.139Z"}
{"msg":"@TimoGlastra @swcurran  Also, in the merged https://github.com/hyperledger/aries-rfcs/pull/676, I added `BbsBlsSignatureProof2020` as an additional choice when using ldp_vc.","username":"troyronda","ts":"2021-05-26T20:49:29.092Z"}
{"msg":"What would still be helpful in that RFC would be some clarification about using both ldp_vc and ldp_vp as you mention in https://github.com/hyperledger/aries-rfcs/issues/667","username":"troyronda","ts":"2021-05-26T20:50:24.444Z"}
{"msg":"What would still be helpful in that RFC would be some clarification about using ldp_vc and ldp_vp as you mention in https://github.com/hyperledger/aries-rfcs/issues/667","username":"troyronda","ts":"2021-05-26T20:50:24.444Z"}
{"msg":"(also you can see the example in https://identity.foundation/presentation-exchange/#presentation-definition)","username":"troyronda","ts":"2021-05-26T20:55:42.237Z"}
{"msg":"(also you can see an example in https://identity.foundation/presentation-exchange/#presentation-definition)","username":"troyronda","ts":"2021-05-26T20:55:42.237Z"}
{"msg":"Hello Aries maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT tomorrow- 7/14. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/x/sANCAw","username":"Helen_Garneau","ts":"2021-07-13T13:24:34.965Z"}
{"msg":"@TelegramSam @smithbk -- I've raised a WIP PR for the multiple issue credentials minor version update. I've raised some issues that need to be understood (requirements of the VC formats for signing VCs), and corresponding issues with message ordering.  See: https://github.com/hyperledger/aries-rfcs/pull/692\n\nI'm likely to make the call tonight, but note that I'm in Europe and am not used to such late nights...","username":"swcurran","ts":"2021-07-14T10:29:26.464Z"}
{"msg":"What's the best approach for resolving wallet interop issues? I'm trying to test mobile wallets (lissi, lissi beta, Connect.Me, trinsic, eSatus) against Aries Framework JavaScript and I wasn't able to walk trough a full flow with any of them. We've tested for interop with ACA-Py and the .NET framework, and some steps work in some of the apps. How were these issues resolved in the past? Should I reach out to the different parties?","username":"TimoGlastra","ts":"2021-07-14T10:36:46.747Z"}
{"msg":"Are you able to use the Aries Agent Test Harness Mobile Backchannel?  That works for most of the wallets (those that can use BCovrin Test).  That would at least give you a pre-defined list of test cases. Last I tried it, it took about 7 minutes per run, which is not bad.  For the tester, you are basically doing a series of scans of QR codes and responding on the phone to requests.  https://github.com/hyperledger/aries-agent-test-harness/blob/main/MOBILE_AGENT_TESTING.md","username":"swcurran","ts":"2021-07-14T10:45:26.676Z"}
{"msg":"I forgot about that one. I'll run through the tests again using the mobile backchannel and report back. Thanks","username":"TimoGlastra","ts":"2021-07-14T10:47:51.529Z"}
{"msg":"@rjones could we add @CharHowland (github handle cjhowland) to the aries-acapy-plugin-toolbox repo maintainers? We would like to enable her to approve PRs and such on that repo. Thanks in advance!","username":"dbluhm","ts":"2021-07-19T20:50:27.509Z"}
{"msg":"Has joined the channel.","username":"CharHowland","ts":"2021-07-19T20:50:27.646Z","type":"uj"}
{"msg":"@dbluhm invite sent!","username":"rjones","ts":"2021-07-19T23:06:20.687Z"}
{"msg":"Thank you!","username":"dbluhm","ts":"2021-07-19T23:07:03.959Z"}
{"msg":"Thank you, I appreciate it!","username":"CharHowland","ts":"2021-07-19T23:18:14.515Z"}
{"msg":"https://github.com/hyperledger/aries-rfcs/pull/695","username":"mattatkiva","ts":"2021-08-03T17:13:39.284Z"}
{"msg":"let me know if there is a different process for this","username":"mattatkiva","ts":"2021-08-03T17:14:02.330Z"}
{"msg":"FYI -- I'm going to rename the aries default branch to \"main\", per Hyperledger requirements.","username":"swcurran","ts":"2021-08-10T20:50:50.522Z"}
{"msg":"The following Aries repos need to have their default branch changed to \"main\", per Hyperledger policy.  Can those in charge (identified below) please make the change?   The change is trivial -- https://github.com/github/renaming which says Go to Settings -> Branches and edit the name of the Default Branch.\n\n@tomislav - hyperledger/aries-framework-dotnet\n@horacionunez - hyperledger/aries-mobile-agent-xamarin\n@smithbk - hyperledger/aries-protocol-test-suite\n@PatrikStas - hyperledger/aries-vcx\n\nThanks!","username":"swcurran","ts":"2021-08-10T20:58:18.957Z"}
{"msg":"The following Aries repos need to have their default branch changed to \"main\", per Hyperledger policy.  Can those in charge (identified below) please make the change?   The change is trivial -- https://github.com/github/renaming which says Go to Settings -> Branches and edit the name of the Default Branch, but of course GHA and other CI/CD impacts need to be considered.\n\n@tomislav - hyperledger/aries-framework-dotnet\n@horacionunez - hyperledger/aries-mobile-agent-xamarin\n@smithbk - hyperledger/aries-protocol-test-suite\n@PatrikStas - hyperledger/aries-vcx\n\nThanks!","username":"swcurran","ts":"2021-08-10T20:58:18.957Z"}
{"msg":"The following Aries repos need to have their default branch changed to \"main\", per Hyperledger policy.  Can those in charge (identified below) please make the change?   The change is trivial -- https://github.com/github/renaming which says Go to Settings -> Branches and edit the name of the Default Branch, but GHA and other CI/CD impacts need to be considered.\n\n@tomislav - hyperledger/aries-framework-dotnet\n@horacionunez - hyperledger/aries-mobile-agent-xamarin\n@smithbk - hyperledger/aries-protocol-test-suite\n@PatrikStas - hyperledger/aries-vcx\n\nThanks!","username":"swcurran","ts":"2021-08-10T20:58:18.957Z"}
{"msg":"Branches is not visible for me under Settings for hyperledger/aries-protocol-test-suite.  Is it visible for you Daniel @dbluhm ?","username":"smithbk","ts":"2021-08-11T15:27:23.446Z"}
{"msg":"Same","username":"dbluhm","ts":"2021-08-11T15:28:25.818Z"}
{"msg":"It is visible for me. Do you want me to change it?","username":"TimoGlastra","ts":"2021-08-11T15:28:46.114Z"}
{"msg":"Yes pls","username":"smithbk","ts":"2021-08-11T15:29:09.633Z"}
{"msg":"","username":"TimoGlastra","ts":"2021-08-11T15:29:30.543Z","attachments":[{"type":"file","title":"Clipboard - August 11, 2021 5:29 PM","title_link":"/file-upload/CAeKSdoHnbwtjgsXR/Clipboard%20-%20August%2011,%202021%205:29%20PM","image_url":"/file-upload/CAeKSdoHnbwtjgsXR/Clipboard%20-%20August%2011,%202021%205:29%20PM","image_type":"image/png","image_size":65050,"url":"/file-upload/CAeKSdoHnbwtjgsXR/Clipboard%20-%20August%2011,%202021%205:29%20PM","remote":false,"fileId":"CAeKSdoHnbwtjgsXR","fileName":"Clipboard - August 11, 2021 5:29 PM"}]}
{"msg":"??","username":"TimoGlastra","ts":"2021-08-11T15:29:33.556Z"}
{"msg":"There is already a main","username":"TimoGlastra","ts":"2021-08-11T15:29:54.860Z"}
{"msg":"Yeh, I tried manually ... let me delete it first.  Hold on","username":"smithbk","ts":"2021-08-11T15:30:11.418Z"}
{"msg":"Wait. I've just updated the default now","username":"TimoGlastra","ts":"2021-08-11T15:30:27.302Z"}
{"msg":"ok, i guess we're good then","username":"smithbk","ts":"2021-08-11T15:33:41.394Z"}
{"msg":"thanks","username":"smithbk","ts":"2021-08-11T15:34:42.048Z"}
{"msg":"Shall I also delete the master branch?","username":"TimoGlastra","ts":"2021-08-11T15:34:48.090Z"}
{"msg":"Are others doing that also?","username":"smithbk","ts":"2021-08-11T15:35:03.511Z"}
{"msg":"I think most are doing a rename","username":"TimoGlastra","ts":"2021-08-11T15:35:36.282Z"}
{"msg":"You're better off to us the rename feature rather than switch to a different branch.","username":"WadeBarnes","ts":"2021-08-11T15:35:41.524Z"}
{"msg":"ok, yes, pls delete master","username":"smithbk","ts":"2021-08-11T15:35:44.877Z"}
{"msg":"@WadeBarnes there was already a main. What's the proposed method in that case?","username":"TimoGlastra","ts":"2021-08-11T15:36:14.336Z"}
{"msg":"The rename feature has some automation that will automatically re-target open PRs and such.","username":"WadeBarnes","ts":"2021-08-11T15:36:16.877Z"}
{"msg":"ah","username":"smithbk","ts":"2021-08-11T15:36:38.910Z"}
{"msg":"ok, so let's do the following pls","username":"smithbk","ts":"2021-08-11T15:36:45.916Z"}
{"msg":"set default back to master","username":"smithbk","ts":"2021-08-11T15:36:52.099Z"}
{"msg":"It sounded like @smithbk created it manually.","username":"WadeBarnes","ts":"2021-08-11T15:36:56.091Z"}
{"msg":"then delete main","username":"smithbk","ts":"2021-08-11T15:37:00.052Z"}
{"msg":"then rename master to main","username":"smithbk","ts":"2021-08-11T15:37:12.241Z"}
{"msg":"Ok","username":"TimoGlastra","ts":"2021-08-11T15:37:47.697Z"}
{"msg":"","username":"TimoGlastra","ts":"2021-08-11T15:38:25.784Z","attachments":[{"type":"file","title":"Clipboard - August 11, 2021 5:38 PM","title_link":"/file-upload/eKxdpg8QbpnnrLEh2/Clipboard%20-%20August%2011,%202021%205:38%20PM","image_url":"/file-upload/eKxdpg8QbpnnrLEh2/Clipboard%20-%20August%2011,%202021%205:38%20PM","image_type":"image/png","image_size":11391,"url":"/file-upload/eKxdpg8QbpnnrLEh2/Clipboard%20-%20August%2011,%202021%205:38%20PM","remote":false,"fileId":"eKxdpg8QbpnnrLEh2","fileName":"Clipboard - August 11, 2021 5:38 PM"}]}
{"msg":"thanks Timo","username":"smithbk","ts":"2021-08-11T15:38:42.819Z"}
{"msg":":thumbsup:","username":"WadeBarnes","ts":"2021-08-11T15:38:56.371Z"}
{"msg":"I don","username":"tomislav","ts":"2021-08-21T12:27:42.208Z"}
{"msg":"I don't seem to have the correct permission for this.","username":"tomislav","ts":"2021-08-21T12:27:42.208Z"}
{"msg":"Do you want me to do it for you?","username":"TimoGlastra","ts":"2021-08-21T13:00:55.657Z"}
{"msg":"Please","username":"tomislav","ts":"2021-08-21T13:01:31.919Z"}
{"msg":"Not sure if you first want to update the CI to use main or the other way around","username":"TimoGlastra","ts":"2021-08-21T13:01:34.426Z"}
{"msg":"Either way works.","username":"tomislav","ts":"2021-08-21T13:01:58.204Z"}
{"msg":"Ok, I have renamed master to main","username":"TimoGlastra","ts":"2021-08-21T13:02:34.214Z"}
{"msg":"Thanks Timo, I'll send out a PR","username":"tomislav","ts":"2021-08-21T13:02:58.007Z"}
{"msg":"Noticed that DCO checks on PRs are stuck in \"Expected\" state at the moment. Probot (DCO bot creators) seem to be experiencing an outage?","username":"dbluhm","ts":"2021-10-12T15:29:17.175Z"}
{"msg":"@rjones https://github.com/probot/dco/issues/162#issuecomment-941149056","username":"dbluhm","ts":"2021-10-12T16:52:09.464Z"}
{"msg":"@dbluhm I reached out thank you for the notice","username":"rjones","ts":"2021-10-12T17:52:02.162Z"}
{"msg":"@rjones could we add @frostyfrog (github handle frostyfrog) to the aries-acapy-plugin-toolbox repo maintainers? Thanks again in advance!","username":"dbluhm","ts":"2021-10-12T20:51:27.775Z"}
{"msg":"Has joined the channel.","username":"frostyfrog","ts":"2021-10-12T20:51:27.882Z","type":"uj"}
{"msg":"Verified that I got added to the hyperledger org on github. It also looks like I can now review PRs in the aries-acapy-plugin-toolbox repo. Thank you :)","username":"frostyfrog","ts":"2021-10-12T21:23:06.441Z"}
{"msg":"Hi, I'd like to nudge this group to using https://chat.lfx.linuxfoundation.org/#/room/#hyperledger-aries:chat.lfx.linuxfoundation.org","username":"rjones","ts":"2021-10-13T22:06:31.875Z"}
{"msg":"Has joined the channel.","username":"SriniGovindaswamy","ts":"2021-11-06T14:12:24.789Z","type":"uj"}
{"msg":"Can any one help on Hyperledger Aries Roadmap for 2022..?","username":"SriniGovindaswamy","ts":"2021-11-06T14:12:25.259Z"}
{"msg":"@rjones: Indicio would like to contribute https://github.com/Indicio-tech/infra-mediator as a new repo under the Hyperledger Aries umbrella. The working name we've been using so far is `aries-mediator-service`. More discussion on this topic can be found here: https://github.com/Indicio-tech/infra-mediator/issues/9\n\nIs this something we can arrange?","username":"dbluhm","ts":"2021-12-06T16:03:27.108Z"}
{"msg":"We'd love to see this happen!","username":"swcurran","ts":"2021-12-06T16:09:19.803Z"}
{"msg":"@dbluhm let's go","username":"rjones","ts":"2021-12-06T18:09:45.905Z"}
{"msg":"Repo transfer initiated :slightly_smiling_face:","username":"dbluhm","ts":"2021-12-06T22:28:54.453Z"}
{"msg":"https://github.com/hyperledger/aries-mediator-service","username":"rjones","ts":"2021-12-06T23:10:41.301Z"}
{"msg":"Thank you!!","username":"dbluhm","ts":"2021-12-06T23:15:20.765Z"}
{"msg":"w00t!!","username":"swcurran","ts":"2021-12-06T23:51:37.503Z"}
{"msg":"@rjones I don't have access to some of the alerts on the new repo (for example https://github.com/hyperledger/aries-mediator-service/security/dependabot), can I be added to whatever group is required in this repo?  (For example I have access in other hyperledger repo's).  Thanks in advance","username":"ianco","ts":"2021-12-07T18:04:45.268Z"}
{"msg":"@ianco let me create a team for that repo.","username":"rjones","ts":"2021-12-07T19:37:33.025Z"}
{"msg":"@ianco take a look now.","username":"rjones","ts":"2021-12-07T19:41:22.426Z"}
{"msg":"Hi @rjones thanks for the quick response!  Looks good, I've got \"team\" access to this repo now.  I don't have access to the above \"dependabot\" link though (which I got from My Curran), @swcurran do you have access to the above link (from your earlier email)?","username":"ianco","ts":"2021-12-07T19:44:44.228Z"}
{"msg":"hmm give me a second","username":"rjones","ts":"2021-12-07T19:57:12.714Z"}
{"msg":"@ianco I didn't realize I had to give specific access to that feature. enabled now","username":"rjones","ts":"2021-12-07T19:58:13.769Z"}
{"msg":"Got it, thanks @rjones !!!","username":"ianco","ts":"2021-12-07T20:24:14.223Z"}
{"msg":"Has joined the channel.","username":"bruno.hivert","ts":"2022-01-05T14:32:12.058Z","type":"uj"}
{"msg":"Hello !\nFirst, happy new year 2022 to all of you and your relatives, wishing your the best health.\nThere is an aries working group supposedly scheduled today https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings\nIs is still on ?","username":"bruno.hivert","ts":"2022-01-05T14:32:12.296Z"}
{"msg":"Has joined the channel.","username":"regiseloi","ts":"2022-01-05T14:38:54.816Z","type":"uj"}
{"msg":"@bruno.hivert No Aries WG call this week. They restart next week","username":"SeanBohan","ts":"2022-01-05T14:43:38.181Z"}
{"msg":"Got my answer from TelegramSam: no working group this week \nhttps://chat.hyperledger.org/channel/aries?msg=8C7gkhqKmBsDEcRe6","username":"bruno.hivert","ts":"2022-01-05T14:47:21.012Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/aries?msg=8C7gkhqKmBsDEcRe6","url":"https://chat.hyperledger.org/channel/aries?msg=8C7gkhqKmBsDEcRe6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"sbohanlf","ts":"2022-01-25T15:15:42.168Z","type":"uj"}
{"msg":"Hey @rjones can I have my github account - kdenhartog removed from Aries Admin role and all other additional permissions associated with Aries groups and this account? I've not been active in Aries WGs or RFC discussions for awhile now and I don't think I'm the best person suited for this role anymore. Looking at who's currently listed there I think the admin responsibilities are sufficiently covered at this point. I should have requested this awhile ago but it slipped my attention.","username":"kdenhartog","ts":"2022-02-08T05:09:49.211Z"}
{"msg":"Hey @rjones can I have my github account `kdenhartog` removed from Aries Admin role and all other additional permissions associated with Aries groups and this account? I've not been active in Aries WGs or RFC discussions for awhile now and I don't think I'm the best person suited for this role anymore. Looking at who's currently listed there I think the admin responsibilities are sufficiently covered at this point. I should have requested this awhile ago but it slipped my attention.","username":"kdenhartog","ts":"2022-02-08T05:09:49.211Z"}
{"msg":"","username":"rjones","ts":"2022-02-08T08:10:08.167Z","attachments":[{"type":"file","title":"Screen Shot 2022-02-08 at 12.09.51 AM.png","title_link":"/file-upload/2QmmrJwjAD7rfkA8r/Screen%20Shot%202022-02-08%20at%2012.09.51%20AM.png","image_url":"/file-upload/fXFmXjAYKBEsRpZ6A/Screen%20Shot%202022-02-08%20at%2012.09.51%20AM.png","image_type":"image/png","image_size":92926,"url":"/file-upload/2QmmrJwjAD7rfkA8r/Screen%20Shot%202022-02-08%20at%2012.09.51%20AM.png","remote":false,"fileId":"2QmmrJwjAD7rfkA8r","fileName":"Screen Shot 2022-02-08 at 12.09.51 AM.png"}]}
{"msg":"@kdenhartog you want removed from all of these groups?","username":"rjones","ts":"2022-02-08T08:10:21.832Z"}
{"msg":"@rjones yup all those look correct. From the looks of my account every repo except the aries-rfc has the permissions properly removed. I think only the Aries-RFC repo would need to have my permissions descalated still since I still have PR merge authorizations. I believe it's because I'm still apart of the admin group for Aries RFC Commiters as an admin in that group. It also has the maintainer label next to my name in there as well so that may need to be handed off to someone else. I'd think @swcurran or @TelegramSam would be a good option for that","username":"kdenhartog","ts":"2022-02-08T21:10:50.474Z"}
{"msg":"I was able to properly remove myself now actually and no longer have any additional privileges from what I can tell. Can you double check if I removed myself properly in that repo?","username":"kdenhartog","ts":"2022-02-08T21:15:04.679Z"}
{"msg":"I think so. If you want me to remove you from any other groups, let me know, @kdenhartog","username":"rjones","ts":"2022-02-08T22:42:52.215Z"}
{"msg":"this chat has moved to https://discord.gg/hyperledger","username":"rjones","ts":"2022-02-11T22:04:46.702Z"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:24:04.588Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:24:04.604Z","type":"room_changed_description"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:24:04.611Z","type":"room_changed_announcement"}
