I'll just dump the relevant sections from the config files here if anyone is interested:

caliperconfig.yaml

channels:
  mychannel:
    configBinary: ./channel-artifacts/mychannel.tx
    created: false
    orderers:
    - orderer0.example.com
    - orderer1.example.com
    - orderer2.example.com
    - orderer3.example.com
    peers:
      peer0.org1.example.com:
        eventSource: true
      peer1.org1.example.com:
        eventSource: true
      peer0.org2.example.com:
        eventSource: true
      peer1.org2.example.com:
        eventSource: true
orderers:
  orderer0.example.com:
    url: grpcs://localhost:7000
    grpcOptions:
      ssl-target-name-override: orderer0.example.com
    tlsCACerts:
        path: ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
  orderer1.example.com:
    url: grpcs://localhost:7001
    grpcOptions:
      ssl-target-name-override: orderer1.example.com
    tlsCACerts:
        path: ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
  orderer2.example.com:
    url: grpcs://localhost:7002
    grpcOptions:
      ssl-target-name-override: orderer2.example.com
    tlsCACerts:
        path: ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
  orderer3.example.com:
    url: grpcs://localhost:7003
    grpcOptions:
      ssl-target-name-override: orderer3.example.com
    tlsCACerts:
        path: ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

cryptoconfig.yaml

OrdererOrgs:
  - Name: Orderer
    Domain: example.com
    Template:
      Count: 4

configtx.yaml

Organizations:
    - &OrdererOrg
        Name: OrdererMSP
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/example.com/msp
        AdminPrincipal: Role.ADMIN

Orderer: &OrdererDefaults

    OrdererType: etcdraft
    Addresses:
    - orderer0.example.com:7050
    - orderer1.example.com:7050
    - orderer2.example.com:7050
    - orderer3.example.com:7050

    BatchTimeout: 2s

    BatchSize:

        MaxMessageCount: 10
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB

    MaxChannels: 0
    EtcdRaft:
        Consenters:
        - Host: orderer0.example.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls/server.crt
        - Host: orderer1.example.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/server.crt
        Consenters:
        - Host: orderer2.example.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
        - Host: orderer3.example.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt

    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

docker-compose:

    orderer0.example.com:
        container_name: orderer0.example.com
        extends:
            file: ../base/orderer-base.yaml
            service: orderer_base 
        environment:
        - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
        ports:
        - 7000:7050
        volumes:
        - ../../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/:/etc/hyperledger/msp/orderer
        depends_on:
        - ca.org1.example.com
        - ca.org2.example.com

    orderer1.example.com:
        container_name: orderer1.example.com
        extends:
            file: ../base/orderer-base.yaml
            service: orderer_base 
        environment:
        - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
        ports:
        - 7001:7050
        volumes:
        - ../../crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/:/etc/hyperledger/msp/orderer
        depends_on:
        - ca.org1.example.com
        - ca.org2.example.com

    orderer2.example.com:
        container_name: orderer2.example.com
        extends:
            file: ../base/orderer-base.yaml
            service: orderer_base 
        environment:
        - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
        ports:
        - 7002:7050
        volumes:
        - ../../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/msp/orderer
        depends_on:
        - ca.org1.example.com
        - ca.org2.example.com

    orderer3.example.com:
        container_name: orderer3.example.com
        extends:
            file: ../base/orderer-base.yaml
            service: orderer_base 
        environment:
        - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
        ports:
        - 7003:7050
        volumes:
        - ../../crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/:/etc/hyperledger/msp/orderer
        depends_on:
        - ca.org1.example.com
        - ca.org2.example.com