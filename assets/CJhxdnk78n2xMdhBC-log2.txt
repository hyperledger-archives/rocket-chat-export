[36m2017-07-19 23:33:43.236 UTC [bccsp] initBCCSP -> DEBU 001[0m Initialize BCCSP [SW]
[36m2017-07-19 23:33:43.239 UTC [Composer] Debug -> DEBU 002[0m Entering getLogging 0xc420136ea0
[36m2017-07-19 23:33:43.241 UTC [Composer] Debug -> DEBU 003[0m Entering Chaincode.Invoke 0xc420136e90
[36m2017-07-19 23:33:43.241 UTC [Composer] Debug -> DEBU 004[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.241 UTC [Composer] Debug -> DEBU 005[0m Entering NewComposer
[36m2017-07-19 23:33:43.241 UTC [Composer] Debug -> DEBU 006[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.365 UTC [Composer] Debug -> DEBU 007[0m Entering getLogging 0xc420137050
[36m2017-07-19 23:33:43.367 UTC [Composer] Debug -> DEBU 008[0m Entering Chaincode.Invoke 0xc420137040
[36m2017-07-19 23:33:43.367 UTC [Composer] Debug -> DEBU 009[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.367 UTC [Composer] Debug -> DEBU 00a[0m Entering NewComposer
[36m2017-07-19 23:33:43.367 UTC [Composer] Debug -> DEBU 00b[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.389 UTC [Composer] Debug -> DEBU 00c[0m Entering getLogging 0xc4201376e0
[36m2017-07-19 23:33:43.391 UTC [Composer] Debug -> DEBU 00d[0m Entering Chaincode.Invoke 0xc4201376d0
[36m2017-07-19 23:33:43.392 UTC [Composer] Debug -> DEBU 00e[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.392 UTC [Composer] Debug -> DEBU 00f[0m Entering NewComposer
[36m2017-07-19 23:33:43.392 UTC [Composer] Debug -> DEBU 010[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.401 UTC [Composer] Debug -> DEBU 011[0m Entering getLogging 0xc420137950
[36m2017-07-19 23:33:43.404 UTC [Composer] Debug -> DEBU 012[0m Entering Chaincode.Invoke 0xc420137940
[36m2017-07-19 23:33:43.404 UTC [Composer] Debug -> DEBU 013[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.404 UTC [Composer] Debug -> DEBU 014[0m Entering NewComposer
[36m2017-07-19 23:33:43.404 UTC [Composer] Debug -> DEBU 015[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.416 UTC [Composer] Debug -> DEBU 016[0m Entering getLogging 0xc42014b100
[36m2017-07-19 23:33:43.418 UTC [Composer] Debug -> DEBU 017[0m Entering Chaincode.Invoke 0xc42014b0f0
[36m2017-07-19 23:33:43.418 UTC [Composer] Debug -> DEBU 018[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.418 UTC [Composer] Debug -> DEBU 019[0m Entering NewComposer
[36m2017-07-19 23:33:43.418 UTC [Composer] Debug -> DEBU 01a[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.551 UTC [Composer] Debug -> DEBU 01b[0m Entering getLogging 0xc42014b940
[36m2017-07-19 23:33:43.551 UTC [Composer] Debug -> DEBU 01c[0m Entering getLogging 0xc42014bae0
[36m2017-07-19 23:33:43.551 UTC [Composer] Debug -> DEBU 01d[0m Entering getLogging 0xc420137bc0
[36m2017-07-19 23:33:43.551 UTC [Composer] Debug -> DEBU 01e[0m Entering getLogging 0xc42014bd50
[36m2017-07-19 23:33:43.553 UTC [Composer] Debug -> DEBU 01f[0m Entering getLogging 0xc420171340
[36m2017-07-19 23:33:43.556 UTC [Composer] Debug -> DEBU 020[0m Entering getLogging 0xc42014bee0
[36m2017-07-19 23:33:43.562 UTC [Composer] Debug -> DEBU 021[0m Entering getLogging 0xc4201715d0
[36m2017-07-19 23:33:43.564 UTC [Composer] Debug -> DEBU 022[0m Entering getLogging 0xc420171840
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 023[0m Entering getLogging 0xc42029aa70
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 024[0m Entering Chaincode.Invoke 0xc420137bb0
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 02d[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 02e[0m Entering NewComposer
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 02f[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 025[0m Entering Chaincode.Invoke 0xc4201715c0
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 030[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 031[0m Entering NewComposer
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 032[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 026[0m Entering Chaincode.Invoke 0xc42014bd40
[36m2017-07-19 23:33:43.575 UTC [Composer] Debug -> DEBU 033[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.575 UTC [Composer] Debug -> DEBU 034[0m Entering NewComposer
[36m2017-07-19 23:33:43.575 UTC [Composer] Debug -> DEBU 035[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 027[0m Entering getLogging 0xc420171ab0
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 028[0m Entering Chaincode.Invoke 0xc420171830
[36m2017-07-19 23:33:43.579 UTC [Composer] Debug -> DEBU 036[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.579 UTC [Composer] Debug -> DEBU 037[0m Entering NewComposer
[36m2017-07-19 23:33:43.579 UTC [Composer] Debug -> DEBU 038[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.582 UTC [Composer] Debug -> DEBU 039[0m Entering Chaincode.Invoke 0xc42029aa60
[36m2017-07-19 23:33:43.582 UTC [Composer] Debug -> DEBU 03a[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.582 UTC [Composer] Debug -> DEBU 03b[0m Entering NewComposer
[36m2017-07-19 23:33:43.582 UTC [Composer] Debug -> DEBU 03c[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.584 UTC [Composer] Debug -> DEBU 03d[0m Entering Chaincode.Invoke 0xc42014b930
[36m2017-07-19 23:33:43.584 UTC [Composer] Debug -> DEBU 03e[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.584 UTC [Composer] Debug -> DEBU 03f[0m Entering NewComposer
[36m2017-07-19 23:33:43.584 UTC [Composer] Debug -> DEBU 040[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 02a[0m Entering Chaincode.Invoke 0xc420171330
[36m2017-07-19 23:33:43.585 UTC [Composer] Debug -> DEBU 041[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.585 UTC [Composer] Debug -> DEBU 042[0m Entering NewComposer
[36m2017-07-19 23:33:43.585 UTC [Composer] Debug -> DEBU 043[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.587 UTC [Composer] Debug -> DEBU 044[0m Entering Chaincode.Invoke 0xc420171aa0
[36m2017-07-19 23:33:43.587 UTC [Composer] Debug -> DEBU 045[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.587 UTC [Composer] Debug -> DEBU 046[0m Entering NewComposer
[36m2017-07-19 23:33:43.587 UTC [Composer] Debug -> DEBU 047[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.589 UTC [Composer] Debug -> DEBU 048[0m Entering Chaincode.Invoke 0xc42014bad0
[36m2017-07-19 23:33:43.589 UTC [Composer] Debug -> DEBU 049[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.589 UTC [Composer] Debug -> DEBU 04a[0m Entering NewComposer
[36m2017-07-19 23:33:43.589 UTC [Composer] Debug -> DEBU 04b[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 029[0m Entering getLogging 0xc42027c310
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 02b[0m Entering Chaincode.Invoke 0xc42014bed0
[36m2017-07-19 23:33:43.591 UTC [Composer] Debug -> DEBU 04c[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.591 UTC [Composer] Debug -> DEBU 04d[0m Entering NewComposer
[36m2017-07-19 23:33:43.592 UTC [Composer] Debug -> DEBU 04e[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.595 UTC [Composer] Debug -> DEBU 04f[0m Entering Chaincode.Invoke 0xc42027c300
[36m2017-07-19 23:33:43.595 UTC [Composer] Debug -> DEBU 050[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.595 UTC [Composer] Debug -> DEBU 051[0m Entering NewComposer
[36m2017-07-19 23:33:43.595 UTC [Composer] Debug -> DEBU 052[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:43.574 UTC [Composer] Debug -> DEBU 02c[0m Entering getLogging 0xc420171da0
[36m2017-07-19 23:33:43.597 UTC [Composer] Debug -> DEBU 053[0m Entering Chaincode.Invoke 0xc420171d90
[36m2017-07-19 23:33:43.597 UTC [Composer] Debug -> DEBU 054[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:43.597 UTC [Composer] Debug -> DEBU 055[0m Entering NewComposer
[36m2017-07-19 23:33:43.597 UTC [Composer] Debug -> DEBU 056[0m Entering Composer.createJavaScript
[36m2017-07-19 23:33:46.719 UTC [Composer] Debug -> DEBU 057[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:46.719 UTC [Composer] Debug -> DEBU 058[0m Entering NewContainer &{0xc4201ce500}
[36m2017-07-19 23:33:46.719 UTC [Composer] Debug -> DEBU 059[0m Entering NewLoggingService &{0xc4201ce500} &{0xc420028020 <nil>} 0xc4202d8ae0
[36m2017-07-19 23:33:46.719 UTC [Composer] Debug -> DEBU 05a[0m Exiting NewLoggingService &{0xc420028020 <nil>}
[36m2017-07-19 23:33:46.719 UTC [Composer] Debug -> DEBU 05b[0m Exiting NewContainer &{0xc420028020 0xc420145700}
[36m2017-07-19 23:33:46.719 UTC [Composer] Debug -> DEBU 05c[0m Entering NewEngine &{0xc4201ce500} &{0xc420028020 0xc420145700}
[36m2017-07-19 23:33:46.719 UTC [Composer] Debug -> DEBU 05d[0m Entering Container.getLoggingService &{0xc4201ce500}
[36m2017-07-19 23:33:46.719 UTC [Composer] Debug -> DEBU 05e[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:46.723 UTC [Composer] Debug -> DEBU 05f[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:46.726 UTC [Composer] Debug -> DEBU 060[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:46.727 UTC [Composer] Debug -> DEBU 061[0m Exiting NewEngine &{0xc420028020}
[36m2017-07-19 23:33:46.727 UTC [Composer] Debug -> DEBU 062[0m Exiting NewComposer &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:46.727 UTC [Composer] Debug -> DEBU 063[0m Exiting ComposerPool.Get &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:46.727 UTC [Composer] Debug -> DEBU 064[0m Entering Composer.Invoke 0xc4202d9340 getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:46.727 UTC [Composer] Debug -> DEBU 065[0m Entering NewContext &{0xc4201ce500} &{0xc420028020} 0xc4202d9430
[36m2017-07-19 23:33:46.727 UTC [Composer] Debug -> DEBU 066[0m Entering NewDataService &{0xc4201ce500} &{0xc420028020 <nil> <nil> <nil> <nil>} 0xc4202d94e0
[36m2017-07-19 23:33:46.729 UTC [Composer] Debug -> DEBU 067[0m Exiting NewDataService &{0xc420028020 0xc42013b300}
[36m2017-07-19 23:33:46.729 UTC [Composer] Debug -> DEBU 068[0m Entering NewIdentityService &{0xc4201ce500} &{0xc420028020 0xc420145c40 <nil> <nil> <nil>} 0xc4202d9690
[36m2017-07-19 23:33:46.729 UTC [Composer] Debug -> DEBU 069[0m Exiting NewIdentityService &{0xc420028020 0xc42013b300}
[36m2017-07-19 23:33:46.729 UTC [Composer] Debug -> DEBU 06a[0m Entering NewEventService &{0xc4201ce500} &{0xc420028020 0xc420145c40 0xc420145d20 <nil> <nil>} 0xc4202d9800
[36m2017-07-19 23:33:46.730 UTC [Composer] Debug -> DEBU 06b[0m Exiting NewEventServce &{0xc420028020 0xc42013b300}
[36m2017-07-19 23:33:46.730 UTC [Composer] Debug -> DEBU 06c[0m Entering HTTPService &{0xc4201ce500} &{0xc420028020 0xc420145c40 0xc420145d20 0xc420145e00 <nil>} 0xc4202d9980
[36m2017-07-19 23:33:46.730 UTC [Composer] Debug -> DEBU 06d[0m Exiting HTTPService &{0xc420028020 0xc42013b300}
[36m2017-07-19 23:33:46.730 UTC [Composer] Debug -> DEBU 06e[0m Exiting NewContext &{0xc420028020 0xc420145c40 0xc420145d20 0xc420145e00 0xc420145ee0}
[36m2017-07-19 23:33:46.730 UTC [Composer] Debug -> DEBU 06f[0m Entering Engine.Invoke &{0xc420028020 0xc420145c40 0xc420145d20 0xc420145e00 0xc420145ee0} getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:46.730 UTC [Composer] Debug -> DEBU 070[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:46.730 UTC [Composer] Debug -> DEBU 071[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:46.731 UTC [Composer] Debug -> DEBU 072[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:46.747 UTC [Composer] Debug -> DEBU 073[0m Exiting Engine.Invoke 0xc42015f5c0
[36m2017-07-19 23:33:46.748 UTC [Composer] Debug -> DEBU 074[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:46.753 UTC [Composer] Debug -> DEBU 075[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:46.758 UTC [Composer] Debug -> DEBU 076[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:46.758 UTC [Composer] Debug -> DEBU 077[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:46.758 UTC [Composer] Debug -> DEBU 078[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:46.758 UTC [Composer] Debug -> DEBU 079[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:46.760 UTC [Composer] Debug -> DEBU 07a[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42013b300} 0xc42027caa0
[36m2017-07-19 23:33:46.760 UTC [Composer] Debug -> DEBU 07b[0m Exiting NewDataCollection &{0xc4201422f8 0xc42013b300 $sysdata}
[36m2017-07-19 23:33:46.765 UTC [Composer] Debug -> DEBU 07c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:46.774 UTC [Composer] Debug -> DEBU 07d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:46.774 UTC [Composer] Debug -> DEBU 07e[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:46.790 UTC [Composer] Debug -> DEBU 07f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:46.791 UTC [Composer] Debug -> DEBU 080[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:46.794 UTC [Composer] Debug -> DEBU 081[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:46.794 UTC [Composer] Debug -> DEBU 082[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:46.797 UTC [Composer] Debug -> DEBU 083[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:46.982 UTC [Composer] Debug -> DEBU 084[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:46.982 UTC [Composer] Debug -> DEBU 085[0m Entering NewContainer &{0xc420140e60}
[36m2017-07-19 23:33:46.982 UTC [Composer] Debug -> DEBU 086[0m Entering NewLoggingService &{0xc420140e60} &{0xc420150140 <nil>} 0xc42027d410
[36m2017-07-19 23:33:46.982 UTC [Composer] Debug -> DEBU 087[0m Exiting NewLoggingService &{0xc420150140 <nil>}
[36m2017-07-19 23:33:46.982 UTC [Composer] Debug -> DEBU 088[0m Exiting NewContainer &{0xc420150140 0xc42027ade0}
[36m2017-07-19 23:33:46.982 UTC [Composer] Debug -> DEBU 089[0m Entering NewEngine &{0xc420140e60} &{0xc420150140 0xc42027ade0}
[36m2017-07-19 23:33:46.982 UTC [Composer] Debug -> DEBU 08a[0m Entering Container.getLoggingService &{0xc420140e60}
[36m2017-07-19 23:33:46.982 UTC [Composer] Debug -> DEBU 08b[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:46.983 UTC [Composer] Debug -> DEBU 08c[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:46.983 UTC [Composer] Debug -> DEBU 08d[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:46.988 UTC [Composer] Debug -> DEBU 08e[0m Exiting NewEngine &{0xc420150140}
[36m2017-07-19 23:33:46.988 UTC [Composer] Debug -> DEBU 08f[0m Exiting NewComposer &{0xc420150140 0xc42027d400 0xc4202fe058}
[36m2017-07-19 23:33:46.988 UTC [Composer] Debug -> DEBU 090[0m Exiting ComposerPool.Get &{0xc420150140 0xc42027d400 0xc4202fe058}
[36m2017-07-19 23:33:46.988 UTC [Composer] Debug -> DEBU 091[0m Entering Composer.Invoke 0xc42027dc70 getAllRegistries [Transaction]
[36m2017-07-19 23:33:46.988 UTC [Composer] Debug -> DEBU 092[0m Entering NewContext &{0xc420140e60} &{0xc420150140} 0xc42027dd40
[36m2017-07-19 23:33:46.988 UTC [Composer] Debug -> DEBU 093[0m Entering NewDataService &{0xc420140e60} &{0xc420150140 <nil> <nil> <nil> <nil>} 0xc42027de00
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 094[0m Exiting NewDataService &{0xc420150140 0xc42013a280}
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 095[0m Entering NewIdentityService &{0xc420140e60} &{0xc420150140 0xc42027b320 <nil> <nil> <nil>} 0xc42027dfb0
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 096[0m Exiting NewIdentityService &{0xc420150140 0xc42013a280}
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 097[0m Entering NewEventService &{0xc420140e60} &{0xc420150140 0xc42027b320 0xc42027b400 <nil> <nil>} 0xc420366120
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 098[0m Exiting NewEventServce &{0xc420150140 0xc42013a280}
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 099[0m Entering HTTPService &{0xc420140e60} &{0xc420150140 0xc42027b320 0xc42027b400 0xc42027b4e0 <nil>} 0xc420366290
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 09a[0m Exiting HTTPService &{0xc420150140 0xc42013a280}
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 09b[0m Exiting NewContext &{0xc420150140 0xc42027b320 0xc42027b400 0xc42027b4e0 0xc42027b5c0}
[36m2017-07-19 23:33:46.989 UTC [Composer] Debug -> DEBU 09c[0m Entering Engine.Invoke &{0xc420150140 0xc42027b320 0xc42027b400 0xc42027b4e0 0xc42027b5c0} getAllRegistries [Transaction]
[36m2017-07-19 23:33:46.994 UTC [Composer] Debug -> DEBU 09d[0m @JS : Engine                   :invoke()                  > [object Object], getAllRegistries, Transaction
[36m2017-07-19 23:33:46.994 UTC [Composer] Debug -> DEBU 09e[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:46.994 UTC [Composer] Debug -> DEBU 09f[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:47.013 UTC [Composer] Debug -> DEBU 0a0[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:47.018 UTC [Composer] Debug -> DEBU 0a1[0m Exiting Engine.Invoke 0xc4202ae8a0
[36m2017-07-19 23:33:47.018 UTC [Composer] Debug -> DEBU 0a2[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:47.023 UTC [Composer] Debug -> DEBU 0a3[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:47.023 UTC [Composer] Debug -> DEBU 0a4[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:47.023 UTC [Composer] Debug -> DEBU 0a5[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:47.023 UTC [Composer] Debug -> DEBU 0a6[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:47.023 UTC [Composer] Debug -> DEBU 0a7[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:47.024 UTC [Composer] Debug -> DEBU 0a8[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:47.024 UTC [Composer] Debug -> DEBU 0a9[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:47.030 UTC [Composer] Debug -> DEBU 0ab[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:47.024 UTC [Composer] Debug -> DEBU 0aa[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:47.032 UTC [Composer] Debug -> DEBU 0ac[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.032 UTC [Composer] Debug -> DEBU 0ad[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:47.032 UTC [Composer] Debug -> DEBU 0ae[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.033 UTC [Composer] Debug -> DEBU 0af[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:47.035 UTC [Composer] Debug -> DEBU 0b0[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc42013a280} 0xc420340810
[36m2017-07-19 23:33:47.038 UTC [Composer] Debug -> DEBU 0b1[0m Exiting NewDataCollection &{0xc420142318 0xc42013a280 $sysdata}
[36m2017-07-19 23:33:47.040 UTC [Composer] Debug -> DEBU 0b2[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.049 UTC [Composer] Debug -> DEBU 0b3[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.049 UTC [Composer] Debug -> DEBU 0b4[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:47.058 UTC [Composer] Debug -> DEBU 0b5[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.058 UTC [Composer] Debug -> DEBU 0b6[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.061 UTC [Composer] Debug -> DEBU 0b7[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:47.062 UTC [Composer] Debug -> DEBU 0b8[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.062 UTC [Composer] Debug -> DEBU 0b9[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:47.106 UTC [Composer] Debug -> DEBU 0ba[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:47.132 UTC [Composer] Debug -> DEBU 0bb[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.153 UTC [Composer] Debug -> DEBU 0bc[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:47.161 UTC [Composer] Debug -> DEBU 0bd[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:47.165 UTC [Composer] Debug -> DEBU 0be[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:47.169 UTC [Composer] Debug -> DEBU 0bf[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:47.169 UTC [Composer] Debug -> DEBU 0c0[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.169 UTC [Composer] Debug -> DEBU 0c1[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:47.169 UTC [Composer] Debug -> DEBU 0c2[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:47.169 UTC [Composer] Debug -> DEBU 0c3[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:47.169 UTC [Composer] Debug -> DEBU 0c4[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:47.170 UTC [Composer] Info -> INFO 0c5[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:47.175 UTC [Composer] Debug -> DEBU 0c6[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:47.175 UTC [Composer] Debug -> DEBU 0c7[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:47.175 UTC [Composer] Debug -> DEBU 0c8[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:47.175 UTC [Composer] Debug -> DEBU 0c9[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:47.175 UTC [Composer] Debug -> DEBU 0ca[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:47.176 UTC [Composer] Debug -> DEBU 0cb[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:47.176 UTC [Composer] Debug -> DEBU 0cc[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:47.176 UTC [Composer] Debug -> DEBU 0cd[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:47.227 UTC [Composer] Debug -> DEBU 0ce[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:47.227 UTC [Composer] Debug -> DEBU 0cf[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:47.227 UTC [Composer] Debug -> DEBU 0d0[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:47.227 UTC [Composer] Debug -> DEBU 0d1[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:47.227 UTC [Composer] Debug -> DEBU 0d2[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:47.228 UTC [Composer] Debug -> DEBU 0d3[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:47.228 UTC [Composer] Debug -> DEBU 0d4[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:47.228 UTC [Composer] Debug -> DEBU 0d5[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:47.244 UTC [Composer] Debug -> DEBU 0d6[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:47.275 UTC [Composer] Debug -> DEBU 0d7[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.283 UTC [Composer] Debug -> DEBU 0d8[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:47.320 UTC [Composer] Debug -> DEBU 0d9[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:47.327 UTC [Composer] Debug -> DEBU 0da[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:47.327 UTC [Composer] Debug -> DEBU 0db[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.328 UTC [Composer] Debug -> DEBU 0dc[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:47.328 UTC [Composer] Debug -> DEBU 0dd[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:47.328 UTC [Composer] Debug -> DEBU 0de[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:47.328 UTC [Composer] Debug -> DEBU 0df[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:47.329 UTC [Composer] Info -> INFO 0e0[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:47.341 UTC [Composer] Debug -> DEBU 0e1[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:47.343 UTC [Composer] Debug -> DEBU 0e2[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:47.343 UTC [Composer] Debug -> DEBU 0e3[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:47.344 UTC [Composer] Debug -> DEBU 0e4[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:47.344 UTC [Composer] Debug -> DEBU 0e5[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:47.350 UTC [Composer] Debug -> DEBU 0e6[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:47.351 UTC [Composer] Debug -> DEBU 0e7[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:47.351 UTC [Composer] Debug -> DEBU 0e8[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:47.351 UTC [Composer] Debug -> DEBU 0e9[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:47.351 UTC [Composer] Debug -> DEBU 0ea[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:47.351 UTC [Composer] Debug -> DEBU 0eb[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:47.364 UTC [Composer] Debug -> DEBU 0ec[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:47.365 UTC [Composer] Debug -> DEBU 0ed[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:47.436 UTC [Composer] Debug -> DEBU 0ee[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:47.437 UTC [Composer] Debug -> DEBU 0ef[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:47.437 UTC [Composer] Debug -> DEBU 0f0[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:47.438 UTC [Composer] Debug -> DEBU 0f1[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:47.438 UTC [Composer] Debug -> DEBU 0f2[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.438 UTC [Composer] Debug -> DEBU 0f3[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:47.438 UTC [Composer] Debug -> DEBU 0f4[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.440 UTC [Composer] Debug -> DEBU 0f5[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.440 UTC [Composer] Debug -> DEBU 0f6[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:47.441 UTC [Composer] Debug -> DEBU 0f7[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:47.441 UTC [Composer] Debug -> DEBU 0f8[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.441 UTC [Composer] Debug -> DEBU 0f9[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.441 UTC [Composer] Debug -> DEBU 0fa[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.441 UTC [Composer] Debug -> DEBU 0fb[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.441 UTC [Composer] Debug -> DEBU 0fc[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.444 UTC [Composer] Debug -> DEBU 0fd[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42013b300} 0xc4203b25a0
[36m2017-07-19 23:33:47.445 UTC [Composer] Debug -> DEBU 0fe[0m Exiting NewDataCollection &{0xc420028350 0xc42013b300 $sysdata}
[36m2017-07-19 23:33:47.453 UTC [Composer] Debug -> DEBU 0ff[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.454 UTC [Composer] Debug -> DEBU 100[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.454 UTC [Composer] Debug -> DEBU 101[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.458 UTC [Composer] Debug -> DEBU 102[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.458 UTC [Composer] Debug -> DEBU 103[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.458 UTC [Composer] Debug -> DEBU 104[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:47.458 UTC [Composer] Debug -> DEBU 105[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.458 UTC [Composer] Debug -> DEBU 106[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:47.460 UTC [Composer] Debug -> DEBU 107[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:47.460 UTC [Composer] Debug -> DEBU 108[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:47.460 UTC [Composer] Debug -> DEBU 109[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:47.461 UTC [Composer] Debug -> DEBU 10a[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:47.461 UTC [Composer] Debug -> DEBU 10b[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:47.462 UTC [Composer] Debug -> DEBU 10c[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:47.462 UTC [Composer] Debug -> DEBU 10d[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:47.463 UTC [Composer] Debug -> DEBU 10e[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:47.463 UTC [Composer] Debug -> DEBU 10f[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:47.463 UTC [Composer] Debug -> DEBU 110[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:47.464 UTC [Composer] Debug -> DEBU 111[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:47.464 UTC [Composer] Debug -> DEBU 112[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:47.465 UTC [Composer] Debug -> DEBU 113[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:47.465 UTC [Composer] Debug -> DEBU 114[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:47.465 UTC [Composer] Debug -> DEBU 115[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:47.466 UTC [Composer] Debug -> DEBU 116[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:47.469 UTC [Composer] Debug -> DEBU 117[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:47.470 UTC [Composer] Debug -> DEBU 118[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:47.471 UTC [Composer] Debug -> DEBU 119[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:47.487 UTC [Composer] Debug -> DEBU 11a[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:47.487 UTC [Composer] Debug -> DEBU 11b[0m Entering NewContainer &{0xc420144940}
[36m2017-07-19 23:33:47.487 UTC [Composer] Debug -> DEBU 11c[0m Entering NewLoggingService &{0xc420144940} &{0xc420142268 <nil>} 0xc4203e4100
[36m2017-07-19 23:33:47.487 UTC [Composer] Debug -> DEBU 11d[0m Exiting NewLoggingService &{0xc420142268 <nil>}
[36m2017-07-19 23:33:47.488 UTC [Composer] Debug -> DEBU 11e[0m Exiting NewContainer &{0xc420142268 0xc42033f920}
[36m2017-07-19 23:33:47.488 UTC [Composer] Debug -> DEBU 11f[0m Entering NewEngine &{0xc420144940} &{0xc420142268 0xc42033f920}
[36m2017-07-19 23:33:47.488 UTC [Composer] Debug -> DEBU 120[0m Entering Container.getLoggingService &{0xc420144940}
[36m2017-07-19 23:33:47.488 UTC [Composer] Debug -> DEBU 121[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:47.488 UTC [Composer] Debug -> DEBU 122[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 123[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 124[0m Exiting NewEngine &{0xc420142268}
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 125[0m Exiting NewComposer &{0xc420142268 0xc4203e40f0 0xc420142458}
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 126[0m Exiting ComposerPool.Get &{0xc420142268 0xc4203e40f0 0xc420142458}
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 127[0m Entering Composer.Invoke 0xc4203e4960 getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 128[0m Entering NewContext &{0xc420144940} &{0xc420142268} 0xc4203e4a40
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 129[0m Entering NewDataService &{0xc420144940} &{0xc420142268 <nil> <nil> <nil> <nil>} 0xc4203e4b00
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 12a[0m Exiting NewDataService &{0xc420142268 0xc42013a900}
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 12b[0m Entering NewIdentityService &{0xc420144940} &{0xc420142268 0xc42033fe60 <nil> <nil> <nil>} 0xc4203e4cb0
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 12c[0m Exiting NewIdentityService &{0xc420142268 0xc42013a900}
[36m2017-07-19 23:33:47.489 UTC [Composer] Debug -> DEBU 12d[0m Entering NewEventService &{0xc420144940} &{0xc420142268 0xc42033fe60 0xc42033ff40 <nil> <nil>} 0xc4203e4e20
[36m2017-07-19 23:33:47.490 UTC [Composer] Debug -> DEBU 12e[0m Exiting NewEventServce &{0xc420142268 0xc42013a900}
[36m2017-07-19 23:33:47.490 UTC [Composer] Debug -> DEBU 12f[0m Entering HTTPService &{0xc420144940} &{0xc420142268 0xc42033fe60 0xc42033ff40 0xc4203ea020 <nil>} 0xc4203e4f90
[36m2017-07-19 23:33:47.490 UTC [Composer] Debug -> DEBU 130[0m Exiting HTTPService &{0xc420142268 0xc42013a900}
[36m2017-07-19 23:33:47.490 UTC [Composer] Debug -> DEBU 131[0m Exiting NewContext &{0xc420142268 0xc42033fe60 0xc42033ff40 0xc4203ea020 0xc4203ea100}
[36m2017-07-19 23:33:47.490 UTC [Composer] Debug -> DEBU 132[0m Entering Engine.Invoke &{0xc420142268 0xc42033fe60 0xc42033ff40 0xc4203ea020 0xc4203ea100} getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:47.490 UTC [Composer] Debug -> DEBU 133[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:47.490 UTC [Composer] Debug -> DEBU 134[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:47.491 UTC [Composer] Debug -> DEBU 135[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:47.493 UTC [Composer] Debug -> DEBU 136[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:47.493 UTC [Composer] Debug -> DEBU 137[0m Entering NewContainer &{0xc4201ce220}
[36m2017-07-19 23:33:47.494 UTC [Composer] Debug -> DEBU 138[0m Entering NewLoggingService &{0xc4201ce220} &{0xc420028000 <nil>} 0xc4203ac880
[36m2017-07-19 23:33:47.494 UTC [Composer] Debug -> DEBU 139[0m Exiting NewLoggingService &{0xc420028000 <nil>}
[36m2017-07-19 23:33:47.494 UTC [Composer] Debug -> DEBU 13a[0m Exiting NewContainer &{0xc420028000 0xc4202a3880}
[36m2017-07-19 23:33:47.494 UTC [Composer] Debug -> DEBU 13b[0m Entering NewEngine &{0xc4201ce220} &{0xc420028000 0xc4202a3880}
[36m2017-07-19 23:33:47.494 UTC [Composer] Debug -> DEBU 13c[0m Entering Container.getLoggingService &{0xc4201ce220}
[36m2017-07-19 23:33:47.494 UTC [Composer] Debug -> DEBU 13d[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:47.494 UTC [Composer] Debug -> DEBU 13e[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 13f[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 140[0m Exiting NewEngine &{0xc420028000}
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 141[0m Exiting NewComposer &{0xc420028000 0xc4203ac870 0xc420150318}
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 142[0m Exiting ComposerPool.Get &{0xc420028000 0xc4203ac870 0xc420150318}
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 143[0m Entering Composer.Invoke 0xc4203ad0e0 getAllRegistries [Transaction]
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 144[0m Entering NewContext &{0xc4201ce220} &{0xc420028000} 0xc4203ad1b0
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 145[0m Entering NewDataService &{0xc4201ce220} &{0xc420028000 <nil> <nil> <nil> <nil>} 0xc4203ad270
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 146[0m Exiting NewDataService &{0xc420028000 0xc42013b000}
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 147[0m Entering NewIdentityService &{0xc4201ce220} &{0xc420028000 0xc4202a3dc0 <nil> <nil> <nil>} 0xc4203ad420
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 148[0m Exiting NewIdentityService &{0xc420028000 0xc42013b000}
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 149[0m Entering NewEventService &{0xc4201ce220} &{0xc420028000 0xc4202a3dc0 0xc4202a3ea0 <nil> <nil>} 0xc4203ad590
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 14a[0m Exiting NewEventServce &{0xc420028000 0xc42013b000}
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 14b[0m Entering HTTPService &{0xc4201ce220} &{0xc420028000 0xc4202a3dc0 0xc4202a3ea0 0xc4202a3f80 <nil>} 0xc4203ad700
[36m2017-07-19 23:33:47.495 UTC [Composer] Debug -> DEBU 14c[0m Exiting HTTPService &{0xc420028000 0xc42013b000}
[36m2017-07-19 23:33:47.496 UTC [Composer] Debug -> DEBU 14d[0m Exiting NewContext &{0xc420028000 0xc4202a3dc0 0xc4202a3ea0 0xc4202a3f80 0xc4203f4060}
[36m2017-07-19 23:33:47.496 UTC [Composer] Debug -> DEBU 14e[0m Entering Engine.Invoke &{0xc420028000 0xc4202a3dc0 0xc4202a3ea0 0xc4202a3f80 0xc4203f4060} getAllRegistries [Transaction]
[36m2017-07-19 23:33:47.496 UTC [Composer] Debug -> DEBU 14f[0m @JS : Engine                   :invoke()                  > [object Object], getAllRegistries, Transaction
[36m2017-07-19 23:33:47.496 UTC [Composer] Debug -> DEBU 150[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:47.497 UTC [Composer] Debug -> DEBU 151[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:47.502 UTC [Composer] Debug -> DEBU 152[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:47.502 UTC [Composer] Debug -> DEBU 153[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:47.502 UTC [Composer] Debug -> DEBU 154[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:47.503 UTC [Composer] Debug -> DEBU 155[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:47.503 UTC [Composer] Debug -> DEBU 156[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:47.504 UTC [Composer] Debug -> DEBU 157[0m Exiting Engine.Invoke 0xc42038af60
[36m2017-07-19 23:33:47.504 UTC [Composer] Debug -> DEBU 158[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:47.505 UTC [Composer] Debug -> DEBU 159[0m Exiting Engine.Invoke 0xc4203855c0
[36m2017-07-19 23:33:47.506 UTC [Composer] Debug -> DEBU 15a[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:47.506 UTC [Composer] Debug -> DEBU 15b[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:47.506 UTC [Composer] Debug -> DEBU 15c[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.508 UTC [Composer] Debug -> DEBU 15d[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:47.508 UTC [Composer] Debug -> DEBU 15e[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:47.508 UTC [Composer] Debug -> DEBU 15f[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:47.509 UTC [Composer] Debug -> DEBU 160[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:47.509 UTC [Composer] Debug -> DEBU 161[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.509 UTC [Composer] Debug -> DEBU 162[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:47.511 UTC [Composer] Debug -> DEBU 163[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:47.511 UTC [Composer] Debug -> DEBU 164[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.511 UTC [Composer] Debug -> DEBU 165[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:47.512 UTC [Composer] Debug -> DEBU 166[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.512 UTC [Composer] Debug -> DEBU 168[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42013a900} 0xc4203b2b20
[36m2017-07-19 23:33:47.519 UTC [Composer] Debug -> DEBU 169[0m Exiting NewDataCollection &{0xc4201424f0 0xc42013a900 $sysdata}
[36m2017-07-19 23:33:47.512 UTC [Composer] Debug -> DEBU 167[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:47.521 UTC [Composer] Debug -> DEBU 16a[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42013b000} 0xc4203e5e00
[36m2017-07-19 23:33:47.522 UTC [Composer] Debug -> DEBU 16b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.522 UTC [Composer] Debug -> DEBU 16c[0m Exiting NewDataCollection &{0xc420150388 0xc42013b000 $sysdata}
[36m2017-07-19 23:33:47.522 UTC [Composer] Debug -> DEBU 16d[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.523 UTC [Composer] Debug -> DEBU 16e[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.523 UTC [Composer] Debug -> DEBU 16f[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:47.524 UTC [Composer] Debug -> DEBU 170[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.524 UTC [Composer] Debug -> DEBU 171[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:47.527 UTC [Composer] Debug -> DEBU 172[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.527 UTC [Composer] Debug -> DEBU 173[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.528 UTC [Composer] Debug -> DEBU 174[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:47.528 UTC [Composer] Debug -> DEBU 175[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.528 UTC [Composer] Debug -> DEBU 176[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:47.528 UTC [Composer] Debug -> DEBU 177[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.529 UTC [Composer] Debug -> DEBU 178[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.532 UTC [Composer] Debug -> DEBU 179[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:47.532 UTC [Composer] Debug -> DEBU 17a[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.533 UTC [Composer] Debug -> DEBU 17b[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:47.545 UTC [Composer] Debug -> DEBU 17c[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:47.545 UTC [Composer] Debug -> DEBU 17d[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:47.568 UTC [Composer] Debug -> DEBU 17e[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:47.569 UTC [Composer] Debug -> DEBU 17f[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.570 UTC [Composer] Debug -> DEBU 180[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:47.570 UTC [Composer] Debug -> DEBU 181[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:47.571 UTC [Composer] Debug -> DEBU 182[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:47.571 UTC [Composer] Debug -> DEBU 183[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:47.572 UTC [Composer] Debug -> DEBU 184[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:47.572 UTC [Composer] Debug -> DEBU 185[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.573 UTC [Composer] Debug -> DEBU 186[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.573 UTC [Composer] Debug -> DEBU 187[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.573 UTC [Composer] Debug -> DEBU 188[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.573 UTC [Composer] Debug -> DEBU 189[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.576 UTC [Composer] Debug -> DEBU 18a[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42013b300} 0xc42040e850
[36m2017-07-19 23:33:47.576 UTC [Composer] Debug -> DEBU 18b[0m Exiting NewDataCollection &{0xc420150440 0xc42013b300 $sysdata}
[36m2017-07-19 23:33:47.576 UTC [Composer] Debug -> DEBU 18c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.577 UTC [Composer] Debug -> DEBU 18d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.577 UTC [Composer] Debug -> DEBU 18e[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.580 UTC [Composer] Debug -> DEBU 18f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.580 UTC [Composer] Debug -> DEBU 190[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.580 UTC [Composer] Debug -> DEBU 191[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:47.580 UTC [Composer] Debug -> DEBU 192[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.580 UTC [Composer] Debug -> DEBU 193[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:47.581 UTC [Composer] Debug -> DEBU 194[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:47.581 UTC [Composer] Debug -> DEBU 195[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:47.581 UTC [Composer] Debug -> DEBU 196[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:47.581 UTC [Composer] Debug -> DEBU 197[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:47.581 UTC [Composer] Debug -> DEBU 198[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:47.581 UTC [Composer] Debug -> DEBU 199[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:47.618 UTC [Composer] Debug -> DEBU 19a[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:47.618 UTC [Composer] Debug -> DEBU 19b[0m Entering NewContainer &{0xc420141340}
[36m2017-07-19 23:33:47.621 UTC [Composer] Debug -> DEBU 19c[0m Entering NewLoggingService &{0xc420141340} &{0xc420150150 <nil>} 0xc42040f720
[36m2017-07-19 23:33:47.622 UTC [Composer] Debug -> DEBU 19e[0m Exiting NewLoggingService &{0xc420150150 <nil>}
[36m2017-07-19 23:33:47.621 UTC [Composer] Debug -> DEBU 19d[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:47.622 UTC [Composer] Debug -> DEBU 19f[0m Exiting NewContainer &{0xc420150150 0xc4203eb8a0}
[36m2017-07-19 23:33:47.622 UTC [Composer] Debug -> DEBU 1a0[0m Entering NewEngine &{0xc420141340} &{0xc420150150 0xc4203eb8a0}
[36m2017-07-19 23:33:47.622 UTC [Composer] Debug -> DEBU 1a1[0m Entering Container.getLoggingService &{0xc420141340}
[36m2017-07-19 23:33:47.622 UTC [Composer] Debug -> DEBU 1a2[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:47.622 UTC [Composer] Debug -> DEBU 1a3[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:47.622 UTC [Composer] Debug -> DEBU 1a4[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.623 UTC [Composer] Debug -> DEBU 1a5[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:47.623 UTC [Composer] Debug -> DEBU 1a6[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:47.623 UTC [Composer] Debug -> DEBU 1a7[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:47.623 UTC [Composer] Debug -> DEBU 1a8[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:47.624 UTC [Composer] Debug -> DEBU 1a9[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:47.624 UTC [Composer] Debug -> DEBU 1aa[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:47.624 UTC [Composer] Debug -> DEBU 1ab[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:47.624 UTC [Composer] Debug -> DEBU 1ac[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.624 UTC [Composer] Debug -> DEBU 1ad[0m Exiting NewEngine &{0xc420150150}
[36m2017-07-19 23:33:47.625 UTC [Composer] Debug -> DEBU 1af[0m Exiting NewComposer &{0xc420150150 0xc42040f710 0xc4201425c8}
[36m2017-07-19 23:33:47.624 UTC [Composer] Debug -> DEBU 1ae[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.625 UTC [Composer] Debug -> DEBU 1b1[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.625 UTC [Composer] Debug -> DEBU 1b2[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.625 UTC [Composer] Debug -> DEBU 1b0[0m Exiting ComposerPool.Get &{0xc420150150 0xc42040f710 0xc4201425c8}
[36m2017-07-19 23:33:47.625 UTC [Composer] Debug -> DEBU 1b3[0m Entering Composer.Invoke 0xc420442040 getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:47.625 UTC [Composer] Debug -> DEBU 1b4[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.625 UTC [Composer] Debug -> DEBU 1b5[0m Entering NewContext &{0xc420141340} &{0xc420150150} 0xc420442120
[36m2017-07-19 23:33:47.627 UTC [Composer] Debug -> DEBU 1b6[0m Entering NewDataService &{0xc420141340} &{0xc420150150 <nil> <nil> <nil> <nil>} 0xc4204421e0
[36m2017-07-19 23:33:47.628 UTC [Composer] Debug -> DEBU 1b7[0m Exiting NewDataService &{0xc420150150 0xc420148900}
[36m2017-07-19 23:33:47.628 UTC [Composer] Debug -> DEBU 1b8[0m Entering NewIdentityService &{0xc420141340} &{0xc420150150 0xc4203ebde0 <nil> <nil> <nil>} 0xc420442390
[36m2017-07-19 23:33:47.629 UTC [Composer] Debug -> DEBU 1b9[0m Exiting NewIdentityService &{0xc420150150 0xc420148900}
[36m2017-07-19 23:33:47.629 UTC [Composer] Debug -> DEBU 1bc[0m Entering NewEventService &{0xc420141340} &{0xc420150150 0xc4203ebde0 0xc4203ebec0 <nil> <nil>} 0xc420442500
[36m2017-07-19 23:33:47.629 UTC [Composer] Debug -> DEBU 1ba[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:47.630 UTC [Composer] Debug -> DEBU 1bd[0m Exiting NewEventServce &{0xc420150150 0xc420148900}
[36m2017-07-19 23:33:47.630 UTC [Composer] Debug -> DEBU 1be[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:47.630 UTC [Composer] Debug -> DEBU 1bf[0m Entering HTTPService &{0xc420141340} &{0xc420150150 0xc4203ebde0 0xc4203ebec0 0xc4203ebfa0 <nil>} 0xc420442670
[36m2017-07-19 23:33:47.630 UTC [Composer] Debug -> DEBU 1c1[0m Exiting HTTPService &{0xc420150150 0xc420148900}
[36m2017-07-19 23:33:47.629 UTC [Composer] Debug -> DEBU 1bb[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42013b300} 0xc4203b35f0
[36m2017-07-19 23:33:47.630 UTC [Composer] Debug -> DEBU 1c2[0m Exiting NewContext &{0xc420150150 0xc4203ebde0 0xc4203ebec0 0xc4203ebfa0 0xc42044a080}
[36m2017-07-19 23:33:47.631 UTC [Composer] Debug -> DEBU 1c4[0m Entering Engine.Invoke &{0xc420150150 0xc4203ebde0 0xc4203ebec0 0xc4203ebfa0 0xc42044a080} getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:47.630 UTC [Composer] Debug -> DEBU 1c3[0m Exiting NewDataCollection &{0xc4200283d0 0xc42013b300 $sysdata}
[36m2017-07-19 23:33:47.631 UTC [Composer] Debug -> DEBU 1c5[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.630 UTC [Composer] Debug -> DEBU 1c0[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:47.632 UTC [Composer] Debug -> DEBU 1c6[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:47.632 UTC [Composer] Debug -> DEBU 1c7[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.632 UTC [Composer] Debug -> DEBU 1c8[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:47.632 UTC [Composer] Debug -> DEBU 1c9[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:47.634 UTC [Composer] Debug -> DEBU 1cd[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:47.632 UTC [Composer] Debug -> DEBU 1cb[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.635 UTC [Composer] Debug -> DEBU 1cf[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.635 UTC [Composer] Debug -> DEBU 1d0[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:47.633 UTC [Composer] Debug -> DEBU 1cc[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:47.634 UTC [Composer] Debug -> DEBU 1ce[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.637 UTC [Composer] Debug -> DEBU 1d1[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.632 UTC [Composer] Debug -> DEBU 1ca[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:47.639 UTC [Composer] Debug -> DEBU 1d2[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:47.645 UTC [Composer] Debug -> DEBU 1d3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.645 UTC [Composer] Debug -> DEBU 1d4[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.645 UTC [Composer] Debug -> DEBU 1d5[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:47.645 UTC [Composer] Debug -> DEBU 1d6[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.646 UTC [Composer] Debug -> DEBU 1d7[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:47.646 UTC [Composer] Debug -> DEBU 1d8[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:47.646 UTC [Composer] Debug -> DEBU 1d9[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:47.647 UTC [Composer] Debug -> DEBU 1da[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:47.647 UTC [Composer] Debug -> DEBU 1db[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.647 UTC [Composer] Debug -> DEBU 1dc[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:47.647 UTC [Composer] Debug -> DEBU 1dd[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.647 UTC [Composer] Debug -> DEBU 1de[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:47.647 UTC [Composer] Debug -> DEBU 1df[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.647 UTC [Composer] Debug -> DEBU 1e0[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:47.648 UTC [Composer] Debug -> DEBU 1e1[0m Exiting Engine.Invoke 0xc42038be00
[36m2017-07-19 23:33:47.648 UTC [Composer] Debug -> DEBU 1e2[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:47.648 UTC [Composer] Debug -> DEBU 1e3[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:47.649 UTC [Composer] Debug -> DEBU 1e4[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:47.649 UTC [Composer] Debug -> DEBU 1e5[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:47.650 UTC [Composer] Debug -> DEBU 1e6[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc42013a280} 0xc420476320
[36m2017-07-19 23:33:47.650 UTC [Composer] Debug -> DEBU 1e7[0m Exiting NewDataCollection &{0xc420028458 0xc42013a280 $sysdata}
[36m2017-07-19 23:33:47.650 UTC [Composer] Debug -> DEBU 1e9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.650 UTC [Composer] Debug -> DEBU 1e8[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:47.650 UTC [Composer] Debug -> DEBU 1ea[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:47.650 UTC [Composer] Debug -> DEBU 1eb[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:47.650 UTC [Composer] Debug -> DEBU 1ec[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:47.651 UTC [Composer] Debug -> DEBU 1ed[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:47.651 UTC [Composer] Debug -> DEBU 1ee[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.651 UTC [Composer] Debug -> DEBU 1ef[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:47.651 UTC [Composer] Debug -> DEBU 1f0[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:47.651 UTC [Composer] Debug -> DEBU 1f1[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:47.652 UTC [Composer] Debug -> DEBU 1f2[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:47.652 UTC [Composer] Debug -> DEBU 1f3[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.652 UTC [Composer] Debug -> DEBU 1f4[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:47.652 UTC [Composer] Debug -> DEBU 1f5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.652 UTC [Composer] Debug -> DEBU 1f6[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:47.652 UTC [Composer] Debug -> DEBU 1f7[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:47.654 UTC [Composer] Debug -> DEBU 1f8[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:47.654 UTC [Composer] Debug -> DEBU 1f9[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:47.656 UTC [Composer] Debug -> DEBU 1fa[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420148900} 0xc420476c60
[36m2017-07-19 23:33:47.656 UTC [Composer] Debug -> DEBU 1fb[0m Exiting NewDataCollection &{0xc4200284a0 0xc420148900 $sysdata}
[36m2017-07-19 23:33:47.656 UTC [Composer] Debug -> DEBU 1fc[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.656 UTC [Composer] Debug -> DEBU 1fd[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.657 UTC [Composer] Debug -> DEBU 1fe[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:47.657 UTC [Composer] Debug -> DEBU 1ff[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.657 UTC [Composer] Debug -> DEBU 200[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:47.657 UTC [Composer] Debug -> DEBU 201[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.658 UTC [Composer] Debug -> DEBU 202[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:47.659 UTC [Composer] Debug -> DEBU 203[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:47.659 UTC [Composer] Debug -> DEBU 204[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:47.659 UTC [Composer] Debug -> DEBU 205[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:47.660 UTC [Composer] Debug -> DEBU 206[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:47.660 UTC [Composer] Debug -> DEBU 207[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.660 UTC [Composer] Debug -> DEBU 208[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:47.661 UTC [Composer] Debug -> DEBU 209[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:47.661 UTC [Composer] Debug -> DEBU 20a[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:47.662 UTC [Composer] Debug -> DEBU 20b[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:47.663 UTC [Composer] Debug -> DEBU 20c[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:47.663 UTC [Composer] Debug -> DEBU 20d[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:47.665 UTC [Composer] Debug -> DEBU 20e[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:47.665 UTC [Composer] Debug -> DEBU 20f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.665 UTC [Composer] Debug -> DEBU 210[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.666 UTC [Composer] Debug -> DEBU 212[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:47.666 UTC [Composer] Debug -> DEBU 211[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:47.666 UTC [Composer] Debug -> DEBU 213[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:47.668 UTC [Composer] Debug -> DEBU 214[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.669 UTC [Composer] Debug -> DEBU 215[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:47.669 UTC [Composer] Debug -> DEBU 216[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:47.669 UTC [Composer] Debug -> DEBU 217[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:47.670 UTC [Composer] Debug -> DEBU 218[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:47.671 UTC [Composer] Debug -> DEBU 219[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:47.671 UTC [Composer] Debug -> DEBU 21a[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:47.671 UTC [Composer] Debug -> DEBU 21b[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:47.671 UTC [Composer] Debug -> DEBU 21c[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:47.673 UTC [Composer] Debug -> DEBU 21e[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:47.675 UTC [Composer] Debug -> DEBU 21f[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:47.671 UTC [Composer] Debug -> DEBU 21d[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:47.676 UTC [Composer] Debug -> DEBU 220[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:47.676 UTC [Composer] Debug -> DEBU 222[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:47.676 UTC [Composer] Debug -> DEBU 223[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:47.676 UTC [Composer] Debug -> DEBU 221[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:47.676 UTC [Composer] Debug -> DEBU 224[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 225[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 226[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 227[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 228[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 229[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 22a[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 22b[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 22c[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:47.677 UTC [Composer] Debug -> DEBU 22d[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:47.678 UTC [Composer] Debug -> DEBU 22e[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:47.678 UTC [Composer] Debug -> DEBU 22f[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:47.679 UTC [Composer] Debug -> DEBU 230[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:47.681 UTC [Composer] Debug -> DEBU 231[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:47.681 UTC [Composer] Debug -> DEBU 232[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:47.682 UTC [Composer] Debug -> DEBU 233[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:47.682 UTC [Composer] Debug -> DEBU 234[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:47.683 UTC [Composer] Debug -> DEBU 235[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:47.683 UTC [Composer] Debug -> DEBU 236[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:47.683 UTC [Composer] Debug -> DEBU 237[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:47.705 UTC [Composer] Debug -> DEBU 238[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:47.705 UTC [Composer] Debug -> DEBU 239[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:47.706 UTC [Composer] Debug -> DEBU 23a[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:47.706 UTC [Composer] Debug -> DEBU 23b[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:47.707 UTC [Composer] Debug -> DEBU 23c[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:47.711 UTC [Composer] Debug -> DEBU 23d[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:47.715 UTC [Composer] Debug -> DEBU 23e[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:47.715 UTC [Composer] Debug -> DEBU 23f[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.715 UTC [Composer] Debug -> DEBU 240[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:47.715 UTC [Composer] Debug -> DEBU 241[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:47.716 UTC [Composer] Debug -> DEBU 242[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:47.716 UTC [Composer] Debug -> DEBU 243[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:47.716 UTC [Composer] Debug -> DEBU 244[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:47.716 UTC [Composer] Debug -> DEBU 245[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.716 UTC [Composer] Debug -> DEBU 246[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.716 UTC [Composer] Debug -> DEBU 247[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.719 UTC [Composer] Debug -> DEBU 248[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42013b300} 0xc4204c2af0
[36m2017-07-19 23:33:47.719 UTC [Composer] Debug -> DEBU 249[0m Exiting NewDataCollection &{0xc420150558 0xc42013b300 $sysregistries}
[36m2017-07-19 23:33:47.719 UTC [Composer] Debug -> DEBU 24a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.719 UTC [Composer] Debug -> DEBU 24b[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:47.719 UTC [Composer] Debug -> DEBU 24c[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.719 UTC [Composer] Debug -> DEBU 24d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.719 UTC [Composer] Debug -> DEBU 24e[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.722 UTC [Composer] Debug -> DEBU 24f[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42013b300} 0xc420477770
[36m2017-07-19 23:33:47.722 UTC [Composer] Debug -> DEBU 250[0m Exiting NewDataCollection &{0xc420150580 0xc42013b300 $sysidentities}
[36m2017-07-19 23:33:47.722 UTC [Composer] Debug -> DEBU 251[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.723 UTC [Composer] Debug -> DEBU 252[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:47.723 UTC [Composer] Debug -> DEBU 253[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:47.723 UTC [Composer] Debug -> DEBU 254[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.723 UTC [Composer] Debug -> DEBU 255[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.723 UTC [Composer] Debug -> DEBU 256[0m Entering IdentityService.getCurrentUserID &{0xc4201ce500}
[36m2017-07-19 23:33:47.723 UTC [Composer] Debug -> DEBU 257[0m Entering extractNameFromCreator 0xc420477d60
[36m2017-07-19 23:33:47.723 UTC [Composer] Debug -> DEBU 258[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:47.727 UTC [Composer] Debug -> DEBU 259[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:47.727 UTC [Composer] Debug -> DEBU 25a[0m Common Name admin
[36m2017-07-19 23:33:47.727 UTC [Composer] Debug -> DEBU 25b[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:47.727 UTC [Composer] Debug -> DEBU 25c[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:47.727 UTC [Composer] Debug -> DEBU 25d[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:47.727 UTC [Composer] Debug -> DEBU 25e[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:47.727 UTC [Composer] Debug -> DEBU 25f[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:47.727 UTC [Composer] Debug -> DEBU 260[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 261[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 262[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 263[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 264[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 265[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 266[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 267[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 268[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 269[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 26a[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:47.728 UTC [Composer] Debug -> DEBU 26b[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:47.735 UTC [Composer] Debug -> DEBU 26c[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:47.735 UTC [Composer] Debug -> DEBU 26d[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:47.737 UTC [Composer] Debug -> DEBU 26e[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.737 UTC [Composer] Debug -> DEBU 26f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.737 UTC [Composer] Debug -> DEBU 270[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.738 UTC [Composer] Debug -> DEBU 271[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.741 UTC [Composer] Debug -> DEBU 272[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.742 UTC [Composer] Debug -> DEBU 273[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.742 UTC [Composer] Debug -> DEBU 274[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.744 UTC [Composer] Debug -> DEBU 275[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42013b300} 0xc42040a150
[36m2017-07-19 23:33:47.745 UTC [Composer] Debug -> DEBU 276[0m Exiting NewDataCollection &{0xc4201501c8 0xc42013b300 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:47.745 UTC [Composer] Debug -> DEBU 277[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 278[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 279[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 27a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 27b[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 27c[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 27d[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 27e[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 27f[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:47.747 UTC [Composer] Debug -> DEBU 280[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:47.750 UTC [Composer] Debug -> DEBU 281[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:47.751 UTC [Composer] Debug -> DEBU 282[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:47.752 UTC [Composer] Debug -> DEBU 283[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.752 UTC [Composer] Debug -> DEBU 284[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.752 UTC [Composer] Debug -> DEBU 285[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:47.752 UTC [Composer] Debug -> DEBU 286[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:47.752 UTC [Composer] Debug -> DEBU 287[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.752 UTC [Composer] Debug -> DEBU 288[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.752 UTC [Composer] Debug -> DEBU 289[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:47.752 UTC [Composer] Debug -> DEBU 28a[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:47.757 UTC [Composer] Debug -> DEBU 28b[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:47.757 UTC [Composer] Debug -> DEBU 28c[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.757 UTC [Composer] Debug -> DEBU 28d[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:47.757 UTC [Composer] Debug -> DEBU 28e[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 290[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 291[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 28f[0m Entering EventService.transactionCommit &{0xc4201ce500}
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 292[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 293[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 294[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 295[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 296[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 297[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:47.758 UTC [Composer] Debug -> DEBU 298[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:47.760 UTC [Composer] Debug -> DEBU 299[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:47.760 UTC [Composer] Debug -> DEBU 29a[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:47.761 UTC [Composer] Debug -> DEBU 29b[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:47.761 UTC [Composer] Debug -> DEBU 29c[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:47.761 UTC [Composer] Debug -> DEBU 29d[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:47.761 UTC [Composer] Debug -> DEBU 29e[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc42013a280} 0xc42040a5d0
[36m2017-07-19 23:33:47.761 UTC [Composer] Debug -> DEBU 29f[0m Exiting NewDataCollection &{0xc4202fe1c8 0xc42013a280 $sysdata}
[36m2017-07-19 23:33:47.761 UTC [Composer] Debug -> DEBU 2a0[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.761 UTC [Composer] Debug -> DEBU 2a1[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.762 UTC [Composer] Debug -> DEBU 2a2[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:47.766 UTC [Composer] Debug -> DEBU 2a3[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:47.766 UTC [Composer] Debug -> DEBU 2a4[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.767 UTC [Composer] Debug -> DEBU 2a5[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:47.767 UTC [Composer] Debug -> DEBU 2a6[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:47.767 UTC [Composer] Debug -> DEBU 2a7[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:47.767 UTC [Composer] Debug -> DEBU 2a8[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:47.767 UTC [Composer] Info -> INFO 2a9[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:47.768 UTC [Composer] Debug -> DEBU 2aa[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:47.769 UTC [Composer] Debug -> DEBU 2ab[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:47.769 UTC [Composer] Debug -> DEBU 2ac[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.769 UTC [Composer] Debug -> DEBU 2ad[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.769 UTC [Composer] Debug -> DEBU 2ae[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.769 UTC [Composer] Debug -> DEBU 2af[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:47.769 UTC [Composer] Debug -> DEBU 2b0[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:47.770 UTC [Composer] Debug -> DEBU 2b1[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.770 UTC [Composer] Debug -> DEBU 2b3[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:47.770 UTC [Composer] Debug -> DEBU 2b2[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:47.770 UTC [Composer] Debug -> DEBU 2b4[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:47.770 UTC [Composer] Debug -> DEBU 2b5[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:47.770 UTC [Composer] Debug -> DEBU 2b6[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:47.770 UTC [Composer] Info -> INFO 2b7[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:47.771 UTC [Composer] Debug -> DEBU 2b8[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:47.773 UTC [Composer] Debug -> DEBU 2b9[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.773 UTC [Composer] Debug -> DEBU 2ba[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.773 UTC [Composer] Debug -> DEBU 2bb[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:47.773 UTC [Composer] Debug -> DEBU 2bc[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:47.773 UTC [Composer] Debug -> DEBU 2bd[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.773 UTC [Composer] Debug -> DEBU 2be[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.773 UTC [Composer] Debug -> DEBU 2bf[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:47.773 UTC [Composer] Debug -> DEBU 2c0[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:47.774 UTC [Composer] Debug -> DEBU 2c1[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:47.775 UTC [Composer] Debug -> DEBU 2c2[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:47.777 UTC [Composer] Debug -> DEBU 2c3[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:47.778 UTC [Composer] Debug -> DEBU 2c4[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:47.779 UTC [Composer] Debug -> DEBU 2c5[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:47.779 UTC [Composer] Debug -> DEBU 2c6[0m Entering Engine.handleCallback 0xc42015f5c0 &{0xc4201ce500}
[36m2017-07-19 23:33:47.779 UTC [Composer] Debug -> DEBU 2c7[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:47.779 UTC [Composer] Debug -> DEBU 2c8[0m Exiting Composer.Invoke {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"} <nil>
[36m2017-07-19 23:33:47.780 UTC [Composer] Debug -> DEBU 2ca[0m Entering ComposerPool.Put &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:47.780 UTC [Composer] Debug -> DEBU 2cb[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:47.780 UTC [Composer] Debug -> DEBU 2cc[0m Exiting Chaincode.Invoke 200  {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"}
[36m2017-07-19 23:33:47.779 UTC [Composer] Debug -> DEBU 2c9[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:47.780 UTC [Composer] Debug -> DEBU 2cd[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:47.780 UTC [Composer] Debug -> DEBU 2ce[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:47.782 UTC [Composer] Debug -> DEBU 2cf[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:47.784 UTC [Composer] Debug -> DEBU 2d0[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:47.785 UTC [Composer] Debug -> DEBU 2d1[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:47.786 UTC [Composer] Debug -> DEBU 2d2[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:47.786 UTC [Composer] Debug -> DEBU 2d3[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:47.798 UTC [Composer] Debug -> DEBU 2d4[0m Entering getLogging 0xc42040ba70
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2d5[0m Entering Chaincode.Invoke 0xc42040ba60
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2d6[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2d7[0m Exiting ComposerPool.Get &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2d8[0m Entering Composer.Invoke 0xc42040bed0 addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"RHFGSVYTFR_t7","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2d9[0m Entering NewContext &{0xc4201ce500} &{0xc420028020} 0xc42040bfc0
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2da[0m Entering NewDataService &{0xc4201ce500} &{0xc420028020 <nil> <nil> <nil> <nil>} 0xc4203b2080
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2db[0m Exiting NewDataService &{0xc420028020 0xc420072600}
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2dc[0m Entering NewIdentityService &{0xc4201ce500} &{0xc420028020 0xc4203eba00 <nil> <nil> <nil>} 0xc4203b2230
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2dd[0m Exiting NewIdentityService &{0xc420028020 0xc420072600}
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2de[0m Entering NewEventService &{0xc4201ce500} &{0xc420028020 0xc4203eba00 0xc4203ebae0 <nil> <nil>} 0xc4203b23a0
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2df[0m Exiting NewEventServce &{0xc420028020 0xc420072600}
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2e0[0m Entering HTTPService &{0xc4201ce500} &{0xc420028020 0xc4203eba00 0xc4203ebae0 0xc4203ebbc0 <nil>} 0xc4203b2520
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2e1[0m Exiting HTTPService &{0xc420028020 0xc420072600}
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2e2[0m Exiting NewContext &{0xc420028020 0xc4203eba00 0xc4203ebae0 0xc4203ebbc0 0xc4203ebca0}
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2e3[0m Entering Engine.Invoke &{0xc420028020 0xc4203eba00 0xc4203ebae0 0xc4203ebbc0 0xc4203ebca0} addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"RHFGSVYTFR_t7","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:47.800 UTC [Composer] Debug -> DEBU 2e4[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"RHFGSVYTFR_t7","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:47.801 UTC [Composer] Debug -> DEBU 2e5[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:47.801 UTC [Composer] Debug -> DEBU 2e6[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:47.801 UTC [Composer] Debug -> DEBU 2e7[0m Exiting Engine.Invoke 0xc4202afb00
[36m2017-07-19 23:33:47.802 UTC [Composer] Debug -> DEBU 2e8[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:47.803 UTC [Composer] Debug -> DEBU 2e9[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:47.803 UTC [Composer] Debug -> DEBU 2ea[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.803 UTC [Composer] Debug -> DEBU 2eb[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.803 UTC [Composer] Debug -> DEBU 2ec[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.803 UTC [Composer] Debug -> DEBU 2ed[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.805 UTC [Composer] Debug -> DEBU 2ee[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc420072600} 0xc4203b31d0
[36m2017-07-19 23:33:47.805 UTC [Composer] Debug -> DEBU 2ef[0m Exiting NewDataCollection &{0xc420028368 0xc420072600 $sysdata}
[36m2017-07-19 23:33:47.805 UTC [Composer] Debug -> DEBU 2f0[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.805 UTC [Composer] Debug -> DEBU 2f1[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.805 UTC [Composer] Debug -> DEBU 2f2[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.808 UTC [Composer] Debug -> DEBU 2f3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.808 UTC [Composer] Debug -> DEBU 2f4[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.808 UTC [Composer] Debug -> DEBU 2f5[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:47.808 UTC [Composer] Debug -> DEBU 2f6[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.809 UTC [Composer] Debug -> DEBU 2f7[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:47.809 UTC [Composer] Debug -> DEBU 2f8[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.809 UTC [Composer] Debug -> DEBU 2f9[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:47.809 UTC [Composer] Debug -> DEBU 2fa[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:47.810 UTC [Composer] Debug -> DEBU 2fb[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.810 UTC [Composer] Debug -> DEBU 2fc[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.810 UTC [Composer] Debug -> DEBU 2fd[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.810 UTC [Composer] Debug -> DEBU 2fe[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.810 UTC [Composer] Debug -> DEBU 2ff[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.812 UTC [Composer] Debug -> DEBU 300[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc420072600} 0xc4203e5180
[36m2017-07-19 23:33:47.812 UTC [Composer] Debug -> DEBU 301[0m Exiting NewDataCollection &{0xc4202fe320 0xc420072600 $sysdata}
[36m2017-07-19 23:33:47.812 UTC [Composer] Debug -> DEBU 302[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.812 UTC [Composer] Debug -> DEBU 303[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.812 UTC [Composer] Debug -> DEBU 304[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.815 UTC [Composer] Debug -> DEBU 305[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.815 UTC [Composer] Debug -> DEBU 306[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.815 UTC [Composer] Debug -> DEBU 307[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:47.815 UTC [Composer] Debug -> DEBU 308[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.815 UTC [Composer] Debug -> DEBU 309[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:47.818 UTC [Composer] Debug -> DEBU 30a[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:47.818 UTC [Composer] Debug -> DEBU 30b[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:47.819 UTC [Composer] Debug -> DEBU 30c[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:47.819 UTC [Composer] Debug -> DEBU 30d[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:47.819 UTC [Composer] Debug -> DEBU 30e[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:47.819 UTC [Composer] Debug -> DEBU 30f[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:47.819 UTC [Composer] Debug -> DEBU 310[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:47.819 UTC [Composer] Debug -> DEBU 311[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:47.819 UTC [Composer] Debug -> DEBU 312[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:47.820 UTC [Composer] Debug -> DEBU 313[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:47.820 UTC [Composer] Debug -> DEBU 314[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:47.820 UTC [Composer] Debug -> DEBU 315[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:47.820 UTC [Composer] Debug -> DEBU 316[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:47.820 UTC [Composer] Debug -> DEBU 317[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:47.820 UTC [Composer] Debug -> DEBU 318[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:47.821 UTC [Composer] Debug -> DEBU 319[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:47.821 UTC [Composer] Debug -> DEBU 31a[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:47.821 UTC [Composer] Debug -> DEBU 31b[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:47.821 UTC [Composer] Debug -> DEBU 31c[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:47.823 UTC [Composer] Debug -> DEBU 31d[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.823 UTC [Composer] Debug -> DEBU 31e[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.823 UTC [Composer] Debug -> DEBU 31f[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.823 UTC [Composer] Debug -> DEBU 320[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.823 UTC [Composer] Debug -> DEBU 321[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.825 UTC [Composer] Debug -> DEBU 322[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc420072600} 0xc4203ac2d0
[36m2017-07-19 23:33:47.826 UTC [Composer] Debug -> DEBU 323[0m Exiting NewDataCollection &{0xc4201423c0 0xc420072600 $sysdata}
[36m2017-07-19 23:33:47.826 UTC [Composer] Debug -> DEBU 324[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.827 UTC [Composer] Debug -> DEBU 325[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:47.828 UTC [Composer] Debug -> DEBU 326[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.828 UTC [Composer] Debug -> DEBU 327[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.832 UTC [Composer] Debug -> DEBU 328[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.833 UTC [Composer] Debug -> DEBU 329[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.833 UTC [Composer] Debug -> DEBU 32a[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:47.833 UTC [Composer] Debug -> DEBU 32b[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.833 UTC [Composer] Debug -> DEBU 32c[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:47.835 UTC [Composer] Debug -> DEBU 32d[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:47.838 UTC [Composer] Debug -> DEBU 32e[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:47.838 UTC [Composer] Debug -> DEBU 32f[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:47.839 UTC [Composer] Debug -> DEBU 330[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:47.840 UTC [Composer] Debug -> DEBU 331[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:47.841 UTC [Composer] Debug -> DEBU 332[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.842 UTC [Composer] Debug -> DEBU 333[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.842 UTC [Composer] Debug -> DEBU 334[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.842 UTC [Composer] Debug -> DEBU 335[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.842 UTC [Composer] Debug -> DEBU 336[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.842 UTC [Composer] Debug -> DEBU 337[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.844 UTC [Composer] Debug -> DEBU 338[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc420072600} 0xc4202d8440
[36m2017-07-19 23:33:47.845 UTC [Composer] Debug -> DEBU 339[0m Exiting NewDataCollection &{0xc4202fe3c0 0xc420072600 $sysdata}
[36m2017-07-19 23:33:47.845 UTC [Composer] Debug -> DEBU 33a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.845 UTC [Composer] Debug -> DEBU 33b[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:47.846 UTC [Composer] Debug -> DEBU 33c[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:47.847 UTC [Composer] Debug -> DEBU 33d[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:47.847 UTC [Composer] Debug -> DEBU 33e[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.847 UTC [Composer] Debug -> DEBU 33f[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.847 UTC [Composer] Debug -> DEBU 340[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.850 UTC [Composer] Debug -> DEBU 341[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:47.851 UTC [Composer] Debug -> DEBU 342[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:47.853 UTC [Composer] Debug -> DEBU 343[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.853 UTC [Composer] Debug -> DEBU 344[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.853 UTC [Composer] Debug -> DEBU 345[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.854 UTC [Composer] Debug -> DEBU 346[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.854 UTC [Composer] Debug -> DEBU 347[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:47.854 UTC [Composer] Debug -> DEBU 349[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.854 UTC [Composer] Debug -> DEBU 348[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:47.854 UTC [Composer] Debug -> DEBU 34a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.854 UTC [Composer] Debug -> DEBU 34b[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:47.856 UTC [Composer] Debug -> DEBU 34c[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc42013a280} 0xc4202d8800
[36m2017-07-19 23:33:47.858 UTC [Composer] Debug -> DEBU 34d[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:47.858 UTC [Composer] Debug -> DEBU 34e[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:47.859 UTC [Composer] Debug -> DEBU 34f[0m Exiting NewDataCollection &{0xc4201503c8 0xc42013a280 $sysdata}
[36m2017-07-19 23:33:47.860 UTC [Composer] Debug -> DEBU 350[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:47.861 UTC [Composer] Debug -> DEBU 351[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.863 UTC [Composer] Debug -> DEBU 352[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:47.863 UTC [Composer] Debug -> DEBU 353[0m Entering NewContainer &{0xc4202a2600}
[36m2017-07-19 23:33:47.863 UTC [Composer] Debug -> DEBU 354[0m Entering NewLoggingService &{0xc4202a2600} &{0xc420150160 <nil>} 0xc420366880
[36m2017-07-19 23:33:47.863 UTC [Composer] Debug -> DEBU 355[0m Exiting NewLoggingService &{0xc420150160 <nil>}
[36m2017-07-19 23:33:47.864 UTC [Composer] Debug -> DEBU 356[0m Exiting NewContainer &{0xc420150160 0xc4201cf640}
[36m2017-07-19 23:33:47.864 UTC [Composer] Debug -> DEBU 357[0m Entering NewEngine &{0xc4202a2600} &{0xc420150160 0xc4201cf640}
[36m2017-07-19 23:33:47.864 UTC [Composer] Debug -> DEBU 358[0m Entering Container.getLoggingService &{0xc4202a2600}
[36m2017-07-19 23:33:47.864 UTC [Composer] Debug -> DEBU 359[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:47.864 UTC [Composer] Debug -> DEBU 35a[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:47.864 UTC [Composer] Debug -> DEBU 35b[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 35c[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 35d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 35e[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 35f[0m Exiting NewEngine &{0xc420150160}
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 360[0m Exiting NewComposer &{0xc420150160 0xc420366870 0xc4200284f8}
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 361[0m Exiting ComposerPool.Get &{0xc420150160 0xc420366870 0xc4200284f8}
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 362[0m Entering Composer.Invoke 0xc4203670d0 getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 363[0m Entering NewContext &{0xc4202a2600} &{0xc420150160} 0xc4203671c0
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 364[0m Entering NewDataService &{0xc4202a2600} &{0xc420150160 <nil> <nil> <nil> <nil>} 0xc420367270
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 365[0m Exiting NewDataService &{0xc420150160 0xc420149900}
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 366[0m Entering NewIdentityService &{0xc4202a2600} &{0xc420150160 0xc4201cfc40 <nil> <nil> <nil>} 0xc420367420
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 367[0m Exiting NewIdentityService &{0xc420150160 0xc420149900}
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 368[0m Entering NewEventService &{0xc4202a2600} &{0xc420150160 0xc4201cfc40 0xc4201cfd20 <nil> <nil>} 0xc420367590
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 369[0m Exiting NewEventServce &{0xc420150160 0xc420149900}
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 36a[0m Entering HTTPService &{0xc4202a2600} &{0xc420150160 0xc4201cfc40 0xc4201cfd20 0xc4201cfe00 <nil>} 0xc420367710
[36m2017-07-19 23:33:47.865 UTC [Composer] Debug -> DEBU 36b[0m Exiting HTTPService &{0xc420150160 0xc420149900}
[36m2017-07-19 23:33:47.866 UTC [Composer] Debug -> DEBU 36c[0m Exiting NewContext &{0xc420150160 0xc4201cfc40 0xc4201cfd20 0xc4201cfe00 0xc4201cfee0}
[36m2017-07-19 23:33:47.866 UTC [Composer] Debug -> DEBU 36d[0m Entering Engine.Invoke &{0xc420150160 0xc4201cfc40 0xc4201cfd20 0xc4201cfe00 0xc4201cfee0} getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:47.867 UTC [Composer] Debug -> DEBU 36e[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:47.867 UTC [Composer] Debug -> DEBU 36f[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.867 UTC [Composer] Debug -> DEBU 371[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.867 UTC [Composer] Debug -> DEBU 372[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.867 UTC [Composer] Debug -> DEBU 370[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:47.868 UTC [Composer] Debug -> DEBU 373[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:47.869 UTC [Composer] Debug -> DEBU 374[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc420072600} 0xc420367c60
[36m2017-07-19 23:33:47.869 UTC [Composer] Debug -> DEBU 375[0m Exiting NewDataCollection &{0xc420142430 0xc420072600 $sysregistries}
[36m2017-07-19 23:33:47.869 UTC [Composer] Debug -> DEBU 376[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:47.870 UTC [Composer] Debug -> DEBU 377[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:47.870 UTC [Composer] Debug -> DEBU 378[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.872 UTC [Composer] Debug -> DEBU 379[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.872 UTC [Composer] Debug -> DEBU 37a[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:47.872 UTC [Composer] Debug -> DEBU 37b[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.872 UTC [Composer] Debug -> DEBU 37c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.872 UTC [Composer] Debug -> DEBU 37d[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.872 UTC [Composer] Debug -> DEBU 37e[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.873 UTC [Composer] Debug -> DEBU 37f[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:47.873 UTC [Composer] Debug -> DEBU 380[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.874 UTC [Composer] Debug -> DEBU 381[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc420072600} 0xc4202d9040
[36m2017-07-19 23:33:47.874 UTC [Composer] Debug -> DEBU 382[0m Exiting NewDataCollection &{0xc420028568 0xc420072600 $sysidentities}
[36m2017-07-19 23:33:47.875 UTC [Composer] Debug -> DEBU 383[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.875 UTC [Composer] Debug -> DEBU 384[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:47.875 UTC [Composer] Debug -> DEBU 385[0m Exiting Engine.Invoke 0xc4201553e0
[36m2017-07-19 23:33:47.876 UTC [Composer] Debug -> DEBU 386[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:47.876 UTC [Composer] Debug -> DEBU 387[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:47.876 UTC [Composer] Debug -> DEBU 388[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:47.877 UTC [Composer] Debug -> DEBU 389[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:47.877 UTC [Composer] Debug -> DEBU 38a[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:47.877 UTC [Composer] Debug -> DEBU 38b[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 38c[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 38d[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 38e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 38f[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 390[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 391[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 392[0m Entering IdentityService.getCurrentUserID &{0xc4201ce500}
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 393[0m Entering extractNameFromCreator 0xc4202d96a0
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 394[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 395[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:47.878 UTC [Composer] Debug -> DEBU 396[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:47.879 UTC [Composer] Debug -> DEBU 397[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:47.879 UTC [Composer] Debug -> DEBU 398[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:47.879 UTC [Composer] Debug -> DEBU 399[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:47.879 UTC [Composer] Debug -> DEBU 39a[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:47.879 UTC [Composer] Debug -> DEBU 39b[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:47.880 UTC [Composer] Debug -> DEBU 39c[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:47.880 UTC [Composer] Debug -> DEBU 39d[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc420149900} 0xc4204438e0
[36m2017-07-19 23:33:47.880 UTC [Composer] Debug -> DEBU 39e[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:47.880 UTC [Composer] Debug -> DEBU 39f[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:47.880 UTC [Composer] Info -> INFO 3a0[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:47.880 UTC [Composer] Debug -> DEBU 3a1[0m Exiting NewDataCollection &{0xc4201424d0 0xc420149900 $sysdata}
[36m2017-07-19 23:33:47.880 UTC [Composer] Debug -> DEBU 3a2[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:47.881 UTC [Composer] Debug -> DEBU 3a3[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:47.881 UTC [Composer] Debug -> DEBU 3a4[0m Common Name admin
[36m2017-07-19 23:33:47.881 UTC [Composer] Debug -> DEBU 3a5[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:47.881 UTC [Composer] Debug -> DEBU 3a6[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.881 UTC [Composer] Debug -> DEBU 3a7[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:47.882 UTC [Composer] Debug -> DEBU 3a8[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:47.882 UTC [Composer] Debug -> DEBU 3a9[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:47.882 UTC [Composer] Debug -> DEBU 3aa[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:47.882 UTC [Composer] Debug -> DEBU 3ab[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:47.883 UTC [Composer] Debug -> DEBU 3ac[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.883 UTC [Composer] Debug -> DEBU 3ad[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:47.883 UTC [Composer] Debug -> DEBU 3af[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:47.883 UTC [Composer] Debug -> DEBU 3b0[0m Entering NewContainer &{0xc4201cf6e0}
[36m2017-07-19 23:33:47.883 UTC [Composer] Debug -> DEBU 3b1[0m Entering NewLoggingService &{0xc4201cf6e0} &{0xc420028048 <nil>} 0xc4202c4d30
[36m2017-07-19 23:33:47.883 UTC [Composer] Debug -> DEBU 3ae[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:47.884 UTC [Composer] Debug -> DEBU 3b2[0m Exiting NewLoggingService &{0xc420028048 <nil>}
[36m2017-07-19 23:33:47.884 UTC [Composer] Debug -> DEBU 3b3[0m Exiting NewContainer &{0xc420028048 0xc4201452a0}
[36m2017-07-19 23:33:47.884 UTC [Composer] Debug -> DEBU 3b4[0m Entering NewEngine &{0xc4201cf6e0} &{0xc420028048 0xc4201452a0}
[36m2017-07-19 23:33:47.884 UTC [Composer] Debug -> DEBU 3b5[0m Entering Container.getLoggingService &{0xc4201cf6e0}
[36m2017-07-19 23:33:47.884 UTC [Composer] Debug -> DEBU 3b6[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:47.884 UTC [Composer] Debug -> DEBU 3b7[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:47.885 UTC [Composer] Debug -> DEBU 3b8[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3b9[0m Exiting NewEngine &{0xc420028048}
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3ba[0m Exiting NewComposer &{0xc420028048 0xc4202c4d20 0xc4200285e0}
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3bb[0m Exiting ComposerPool.Get &{0xc420028048 0xc4202c4d20 0xc4200285e0}
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3bc[0m Entering Composer.Invoke 0xc4202c5590 getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3bd[0m Entering NewContext &{0xc4201cf6e0} &{0xc420028048} 0xc4202c5680
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3be[0m Entering NewDataService &{0xc4201cf6e0} &{0xc420028048 <nil> <nil> <nil> <nil>} 0xc4202c5730
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3bf[0m Exiting NewDataService &{0xc420028048 0xc420149300}
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3c0[0m Entering NewIdentityService &{0xc4201cf6e0} &{0xc420028048 0xc4201458c0 <nil> <nil> <nil>} 0xc4202c58e0
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3c1[0m Exiting NewIdentityService &{0xc420028048 0xc420149300}
[36m2017-07-19 23:33:47.890 UTC [Composer] Debug -> DEBU 3c2[0m Entering NewEventService &{0xc4201cf6e0} &{0xc420028048 0xc4201458c0 0xc4201459a0 <nil> <nil>} 0xc4202c5a50
[36m2017-07-19 23:33:47.891 UTC [Composer] Debug -> DEBU 3c3[0m Exiting NewEventServce &{0xc420028048 0xc420149300}
[36m2017-07-19 23:33:47.891 UTC [Composer] Debug -> DEBU 3c4[0m Entering HTTPService &{0xc4201cf6e0} &{0xc420028048 0xc4201458c0 0xc4201459a0 0xc420145a80 <nil>} 0xc4202c5bd0
[36m2017-07-19 23:33:47.891 UTC [Composer] Debug -> DEBU 3c5[0m Exiting HTTPService &{0xc420028048 0xc420149300}
[36m2017-07-19 23:33:47.891 UTC [Composer] Debug -> DEBU 3c6[0m Exiting NewContext &{0xc420028048 0xc4201458c0 0xc4201459a0 0xc420145a80 0xc420145b80}
[36m2017-07-19 23:33:47.891 UTC [Composer] Debug -> DEBU 3c7[0m Entering Engine.Invoke &{0xc420028048 0xc4201458c0 0xc4201459a0 0xc420145a80 0xc420145b80} getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:47.891 UTC [Composer] Debug -> DEBU 3c8[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:47.891 UTC [Composer] Debug -> DEBU 3c9[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:47.891 UTC [Composer] Debug -> DEBU 3ca[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:47.892 UTC [Composer] Debug -> DEBU 3cb[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:47.892 UTC [Composer] Debug -> DEBU 3cc[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:47.893 UTC [Composer] Debug -> DEBU 3cd[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:47.893 UTC [Composer] Debug -> DEBU 3ce[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:47.893 UTC [Composer] Debug -> DEBU 3cf[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:47.893 UTC [Composer] Debug -> DEBU 3d0[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.893 UTC [Composer] Debug -> DEBU 3d1[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.894 UTC [Composer] Debug -> DEBU 3d2[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:47.894 UTC [Composer] Debug -> DEBU 3d3[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.895 UTC [Composer] Debug -> DEBU 3d4[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:47.895 UTC [Composer] Debug -> DEBU 3d5[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:47.897 UTC [Composer] Debug -> DEBU 3d6[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:47.898 UTC [Composer] Debug -> DEBU 3d7[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:47.903 UTC [Composer] Debug -> DEBU 3d8[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:47.903 UTC [Composer] Debug -> DEBU 3d9[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:47.903 UTC [Composer] Debug -> DEBU 3da[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:47.909 UTC [Composer] Debug -> DEBU 3db[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:47.909 UTC [Composer] Debug -> DEBU 3dc[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:47.910 UTC [Composer] Debug -> DEBU 3dd[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:47.910 UTC [Composer] Debug -> DEBU 3de[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:47.911 UTC [Composer] Debug -> DEBU 3df[0m Exiting Engine.Invoke 0xc420155f80
[36m2017-07-19 23:33:47.911 UTC [Composer] Debug -> DEBU 3e0[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:47.912 UTC [Composer] Debug -> DEBU 3e1[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:47.912 UTC [Composer] Debug -> DEBU 3e2[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:47.912 UTC [Composer] Debug -> DEBU 3e3[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:47.912 UTC [Composer] Debug -> DEBU 3e4[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:47.913 UTC [Composer] Debug -> DEBU 3e5[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:47.913 UTC [Composer] Debug -> DEBU 3e6[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:47.913 UTC [Composer] Debug -> DEBU 3e7[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:47.913 UTC [Composer] Debug -> DEBU 3e8[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:47.913 UTC [Composer] Debug -> DEBU 3e9[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:47.914 UTC [Composer] Debug -> DEBU 3ea[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:47.914 UTC [Composer] Debug -> DEBU 3eb[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.914 UTC [Composer] Debug -> DEBU 3ec[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:47.914 UTC [Composer] Debug -> DEBU 3ed[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.914 UTC [Composer] Debug -> DEBU 3ee[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:47.914 UTC [Composer] Debug -> DEBU 3ef[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:47.915 UTC [Composer] Debug -> DEBU 3f0[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:47.916 UTC [Composer] Debug -> DEBU 3f1[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc420149300} 0xc42027c440
[36m2017-07-19 23:33:47.917 UTC [Composer] Debug -> DEBU 3f2[0m Exiting NewDataCollection &{0xc4201504d0 0xc420149300 $sysdata}
[36m2017-07-19 23:33:47.917 UTC [Composer] Debug -> DEBU 3f3[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.917 UTC [Composer] Debug -> DEBU 3f4[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:47.920 UTC [Composer] Debug -> DEBU 3f5[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.920 UTC [Composer] Debug -> DEBU 3f6[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3f7[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3f8[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3f9[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3fa[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3fb[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3fc[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3fd[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3fe[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:47.921 UTC [Composer] Debug -> DEBU 3ff[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:47.922 UTC [Composer] Debug -> DEBU 400[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:47.924 UTC [Composer] Debug -> DEBU 401[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.924 UTC [Composer] Debug -> DEBU 402[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.924 UTC [Composer] Debug -> DEBU 403[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:47.924 UTC [Composer] Debug -> DEBU 404[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.925 UTC [Composer] Debug -> DEBU 405[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:47.927 UTC [Composer] Debug -> DEBU 406[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:47.930 UTC [Composer] Debug -> DEBU 407[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:47.937 UTC [Composer] Debug -> DEBU 408[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:47.937 UTC [Composer] Debug -> DEBU 409[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"RHFGSVYTFR_t7","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:47.937 UTC [Composer] Debug -> DEBU 40a[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.937 UTC [Composer] Debug -> DEBU 40b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.939 UTC [Composer] Debug -> DEBU 40c[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:47.941 UTC [Composer] Debug -> DEBU 40d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.943 UTC [Composer] Debug -> DEBU 40e[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:47.946 UTC [Composer] Debug -> DEBU 40f[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc420072600} 0xc42027d070
[36m2017-07-19 23:33:47.948 UTC [Composer] Debug -> DEBU 410[0m Exiting NewDataCollection &{0xc420028668 0xc420072600 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:47.948 UTC [Composer] Debug -> DEBU 411[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.951 UTC [Composer] Debug -> DEBU 412[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#RHFGSVYTFR_t7, CREATE
[36m2017-07-19 23:33:47.951 UTC [Composer] Debug -> DEBU 413[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:47.952 UTC [Composer] Debug -> DEBU 414[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:47.954 UTC [Composer] Debug -> DEBU 415[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:47.954 UTC [Composer] Debug -> DEBU 416[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:47.955 UTC [Composer] Debug -> DEBU 417[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:47.956 UTC [Composer] Debug -> DEBU 418[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:47.957 UTC [Composer] Debug -> DEBU 419[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:47.957 UTC [Composer] Debug -> DEBU 41a[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:47.957 UTC [Composer] Debug -> DEBU 41b[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:47.957 UTC [Composer] Debug -> DEBU 41c[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.957 UTC [Composer] Debug -> DEBU 41d[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:47.957 UTC [Composer] Debug -> DEBU 41e[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.958 UTC [Composer] Debug -> DEBU 41f[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:47.958 UTC [Composer] Debug -> DEBU 420[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:47.958 UTC [Composer] Debug -> DEBU 421[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:47.958 UTC [Composer] Debug -> DEBU 422[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:47.959 UTC [Composer] Debug -> DEBU 423[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:47.959 UTC [Composer] Debug -> DEBU 424[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:47.959 UTC [Composer] Debug -> DEBU 425[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:47.959 UTC [Composer] Debug -> DEBU 426[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:47.959 UTC [Composer] Debug -> DEBU 427[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:47.959 UTC [Composer] Debug -> DEBU 428[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.960 UTC [Composer] Debug -> DEBU 429[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.960 UTC [Composer] Debug -> DEBU 42a[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:47.960 UTC [Composer] Debug -> DEBU 42b[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:47.961 UTC [Composer] Debug -> DEBU 42c[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:47.961 UTC [Composer] Debug -> DEBU 42d[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:47.962 UTC [Composer] Debug -> DEBU 42e[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:47.962 UTC [Composer] Debug -> DEBU 42f[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:47.962 UTC [Composer] Debug -> DEBU 430[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.962 UTC [Composer] Debug -> DEBU 431[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:47.963 UTC [Composer] Debug -> DEBU 432[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.963 UTC [Composer] Debug -> DEBU 433[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:47.963 UTC [Composer] Debug -> DEBU 434[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.963 UTC [Composer] Debug -> DEBU 435[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:47.963 UTC [Composer] Debug -> DEBU 436[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:47.964 UTC [Composer] Debug -> DEBU 437[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:47.965 UTC [Composer] Debug -> DEBU 438[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42013b000} 0xc42014b0c0
[36m2017-07-19 23:33:47.965 UTC [Composer] Debug -> DEBU 439[0m Exiting NewDataCollection &{0xc420028760 0xc42013b000 $sysdata}
[36m2017-07-19 23:33:47.965 UTC [Composer] Debug -> DEBU 43b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.965 UTC [Composer] Debug -> DEBU 43a[0m Entering DataCollection.add &{0xc4201ce500}
[36m2017-07-19 23:33:47.965 UTC [Composer] Debug -> DEBU 43c[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:47.967 UTC [Composer] Debug -> DEBU 43d[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:47.968 UTC [Composer] Debug -> DEBU 43e[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:47.968 UTC [Composer] Debug -> DEBU 43f[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:47.968 UTC [Composer] Debug -> DEBU 440[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.968 UTC [Composer] Debug -> DEBU 441[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:47.969 UTC [Composer] Debug -> DEBU 442[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42013a900} 0xc4201718d0
[36m2017-07-19 23:33:47.970 UTC [Composer] Debug -> DEBU 443[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:47.970 UTC [Composer] Debug -> DEBU 444[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:47.970 UTC [Composer] Debug -> DEBU 445[0m Exiting NewDataCollection &{0xc4202fe5d8 0xc42013a900 $sysdata}
[36m2017-07-19 23:33:47.971 UTC [Composer] Debug -> DEBU 446[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:47.971 UTC [Composer] Debug -> DEBU 447[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:47.971 UTC [Composer] Debug -> DEBU 448[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:47.971 UTC [Composer] Debug -> DEBU 449[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.971 UTC [Composer] Debug -> DEBU 44a[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:47.973 UTC [Composer] Debug -> DEBU 44b[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 44c[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 44d[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 44e[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 44f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 450[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 451[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 452[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 453[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 454[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:47.974 UTC [Composer] Debug -> DEBU 455[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:47.977 UTC [Composer] Debug -> DEBU 456[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.977 UTC [Composer] Debug -> DEBU 457[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.978 UTC [Composer] Debug -> DEBU 458[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:47.978 UTC [Composer] Debug -> DEBU 459[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.978 UTC [Composer] Debug -> DEBU 45a[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:47.978 UTC [Composer] Debug -> DEBU 45b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:47.979 UTC [Composer] Debug -> DEBU 45c[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:47.979 UTC [Composer] Debug -> DEBU 45d[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:47.979 UTC [Composer] Debug -> DEBU 45e[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:47.979 UTC [Composer] Debug -> DEBU 45f[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:47.980 UTC [Composer] Debug -> DEBU 460[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:47.980 UTC [Composer] Debug -> DEBU 461[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:47.981 UTC [Composer] Debug -> DEBU 462[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:47.981 UTC [Composer] Debug -> DEBU 463[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:47.981 UTC [Composer] Debug -> DEBU 464[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:47.981 UTC [Composer] Debug -> DEBU 465[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:47.982 UTC [Composer] Debug -> DEBU 466[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:47.982 UTC [Composer] Debug -> DEBU 467[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:47.982 UTC [Composer] Debug -> DEBU 468[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:47.983 UTC [Composer] Debug -> DEBU 469[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:47.983 UTC [Composer] Debug -> DEBU 46a[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:47.984 UTC [Composer] Debug -> DEBU 46b[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:47.984 UTC [Composer] Debug -> DEBU 46c[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:47.984 UTC [Composer] Debug -> DEBU 46d[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:47.984 UTC [Composer] Debug -> DEBU 46e[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:47.984 UTC [Composer] Debug -> DEBU 46f[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:47.984 UTC [Composer] Debug -> DEBU 470[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:47.985 UTC [Composer] Debug -> DEBU 471[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:47.985 UTC [Composer] Debug -> DEBU 472[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:47.986 UTC [Composer] Debug -> DEBU 473[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:47.986 UTC [Composer] Debug -> DEBU 474[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:47.986 UTC [Composer] Debug -> DEBU 475[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:47.987 UTC [Composer] Debug -> DEBU 476[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:47.992 UTC [Composer] Debug -> DEBU 477[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:47.993 UTC [Composer] Debug -> DEBU 478[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:47.993 UTC [Composer] Debug -> DEBU 479[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 47a[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 47b[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 47c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 47d[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 47e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 47f[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 480[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 481[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 482[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 483[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:47.994 UTC [Composer] Debug -> DEBU 484[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:47.995 UTC [Composer] Debug -> DEBU 485[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:47.995 UTC [Composer] Debug -> DEBU 486[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:47.995 UTC [Composer] Debug -> DEBU 487[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:47.995 UTC [Composer] Debug -> DEBU 488[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:47.998 UTC [Composer] Debug -> DEBU 489[0m Entering EventService.transactionCommit &{0xc4201ce500}
[36m2017-07-19 23:33:48.000 UTC [Composer] Debug -> DEBU 48a[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:48.003 UTC [Composer] Debug -> DEBU 48b[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.003 UTC [Composer] Debug -> DEBU 48c[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.004 UTC [Composer] Debug -> DEBU 48d[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:48.004 UTC [Composer] Debug -> DEBU 48e[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:48.004 UTC [Composer] Debug -> DEBU 48f[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:48.005 UTC [Composer] Debug -> DEBU 491[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.005 UTC [Composer] Debug -> DEBU 492[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.005 UTC [Composer] Debug -> DEBU 493[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.005 UTC [Composer] Debug -> DEBU 490[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.006 UTC [Composer] Debug -> DEBU 494[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.006 UTC [Composer] Debug -> DEBU 495[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.006 UTC [Composer] Debug -> DEBU 496[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.006 UTC [Composer] Debug -> DEBU 497[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.006 UTC [Composer] Debug -> DEBU 498[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.006 UTC [Composer] Debug -> DEBU 499[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.007 UTC [Composer] Debug -> DEBU 49a[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.007 UTC [Composer] Debug -> DEBU 49b[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:48.007 UTC [Composer] Debug -> DEBU 49c[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.007 UTC [Composer] Debug -> DEBU 49d[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.007 UTC [Composer] Debug -> DEBU 49e[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:48.007 UTC [Composer] Debug -> DEBU 49f[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.007 UTC [Composer] Debug -> DEBU 4a0[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a1[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a2[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a3[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a4[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a5[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a6[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a7[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a8[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:48.008 UTC [Composer] Debug -> DEBU 4a9[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4aa[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4ab[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4ac[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4ad[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4ae[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4af[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4b0[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4b2[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4b3[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4b4[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4b5[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc42013a280} 0xc4204c37e0
[36m2017-07-19 23:33:48.011 UTC [Composer] Debug -> DEBU 4b6[0m Exiting NewDataCollection &{0xc420028850 0xc42013a280 $sysregistries}
[36m2017-07-19 23:33:48.011 UTC [Composer] Debug -> DEBU 4b7[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.011 UTC [Composer] Debug -> DEBU 4b8[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.014 UTC [Composer] Debug -> DEBU 4b9[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.014 UTC [Composer] Debug -> DEBU 4ba[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.014 UTC [Composer] Debug -> DEBU 4bb[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.016 UTC [Composer] Debug -> DEBU 4bc[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc42013a280} 0xc4204c3eb0
[36m2017-07-19 23:33:48.017 UTC [Composer] Debug -> DEBU 4bd[0m Exiting NewDataCollection &{0xc4202fe738 0xc42013a280 $sysidentities}
[36m2017-07-19 23:33:48.017 UTC [Composer] Debug -> DEBU 4be[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4bf[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c0[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c1[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c2[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c3[0m Entering IdentityService.getCurrentUserID &{0xc420140e60}
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c4[0m Entering extractNameFromCreator 0xc42051a4a0
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c5[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c6[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c8[0m Common Name admin
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c7[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4c9[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.018 UTC [Composer] Debug -> DEBU 4ca[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.019 UTC [Composer] Debug -> DEBU 4cc[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.019 UTC [Composer] Debug -> DEBU 4cd[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.020 UTC [Composer] Debug -> DEBU 4ce[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.020 UTC [Composer] Debug -> DEBU 4cf[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:48.020 UTC [Composer] Debug -> DEBU 4d1[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:48.020 UTC [Composer] Debug -> DEBU 4d0[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.021 UTC [Composer] Debug -> DEBU 4d2[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:48.021 UTC [Composer] Debug -> DEBU 4d3[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.021 UTC [Composer] Debug -> DEBU 4d4[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.021 UTC [Composer] Debug -> DEBU 4d5[0m Entering Engine.handleCallback 0xc4202afb00 &{0xc4201ce500}
[36m2017-07-19 23:33:48.021 UTC [Composer] Debug -> DEBU 4d6[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:48.021 UTC [Composer] Debug -> DEBU 4d7[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.023 UTC [Composer] Debug -> DEBU 4da[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.023 UTC [Composer] Debug -> DEBU 4db[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.023 UTC [Composer] Debug -> DEBU 4dc[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.023 UTC [Composer] Debug -> DEBU 4dd[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.023 UTC [Composer] Debug -> DEBU 4de[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:48.023 UTC [Composer] Debug -> DEBU 4df[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.023 UTC [Composer] Debug -> DEBU 4e0[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.024 UTC [Composer] Debug -> DEBU 4e1[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.024 UTC [Composer] Debug -> DEBU 4e2[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:48.024 UTC [Composer] Debug -> DEBU 4e3[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.010 UTC [Composer] Debug -> DEBU 4b1[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.025 UTC [Composer] Debug -> DEBU 4e4[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.025 UTC [Composer] Debug -> DEBU 4e5[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.026 UTC [Composer] Debug -> DEBU 4e6[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.027 UTC [Composer] Debug -> DEBU 4e7[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.027 UTC [Composer] Debug -> DEBU 4e8[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.027 UTC [Composer] Debug -> DEBU 4e9[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.027 UTC [Composer] Debug -> DEBU 4ea[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.027 UTC [Composer] Debug -> DEBU 4eb[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:48.022 UTC [Composer] Debug -> DEBU 4d8[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.029 UTC [Composer] Debug -> DEBU 4ec[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420148900} 0xc42051b200
[36m2017-07-19 23:33:48.030 UTC [Composer] Debug -> DEBU 4ed[0m Exiting NewDataCollection &{0xc420028920 0xc420148900 $sysdata}
[36m2017-07-19 23:33:48.030 UTC [Composer] Debug -> DEBU 4ee[0m @JS : Engine                   :invoke()                  Calling engine function getAllRegistries
[36m2017-07-19 23:33:48.030 UTC [Composer] Debug -> DEBU 4ef[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.030 UTC [Composer] Debug -> DEBU 4f0[0m @JS : EngineRegistries         :getAllRegistries()        > [object Object], Transaction
[36m2017-07-19 23:33:48.030 UTC [Composer] Debug -> DEBU 4f1[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.030 UTC [Composer] Debug -> DEBU 4f2[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.031 UTC [Composer] Debug -> DEBU 4f3[0m Entering DataCollection.getAll &{0xc420140e60}
[36m2017-07-19 23:33:48.032 UTC [Composer] Debug -> DEBU 4f4[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.032 UTC [Composer] Debug -> DEBU 4f5[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:48.019 UTC [Composer] Debug -> DEBU 4cb[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.033 UTC [Composer] Debug -> DEBU 4f6[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:48.022 UTC [Composer] Debug -> DEBU 4d9[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:48.034 UTC [Composer] Debug -> DEBU 4f7[0m Entering ComposerPool.Put &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:48.034 UTC [Composer] Debug -> DEBU 4f8[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:48.034 UTC [Composer] Debug -> DEBU 4f9[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:48.034 UTC [Composer] Debug -> DEBU 4fa[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:48.036 UTC [Composer] Debug -> DEBU 4fb[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.036 UTC [Composer] Debug -> DEBU 4fc[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.038 UTC [Composer] Debug -> DEBU 4fd[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.039 UTC [Composer] Debug -> DEBU 4fe[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.039 UTC [Composer] Debug -> DEBU 4ff[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.039 UTC [Composer] Debug -> DEBU 500[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.039 UTC [Composer] Debug -> DEBU 501[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.039 UTC [Composer] Debug -> DEBU 502[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.040 UTC [Composer] Debug -> DEBU 503[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.040 UTC [Composer] Debug -> DEBU 504[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.052 UTC [Composer] Debug -> DEBU 505[0m Exiting DataCollection.getAll 0
[36m2017-07-19 23:33:48.052 UTC [Composer] Debug -> DEBU 506[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.052 UTC [Composer] Debug -> DEBU 507[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 508[0m Entering NewContainer &{0xc4201cf140}
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 50a[0m Entering NewLoggingService &{0xc4201cf140} &{0xc420028028 <nil>} 0xc42051bc10
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 509[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 50b[0m Exiting NewLoggingService &{0xc420028028 <nil>}
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 50c[0m Exiting NewContainer &{0xc420028028 0xc42051d0e0}
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 50d[0m Entering NewEngine &{0xc4201cf140} &{0xc420028028 0xc42051d0e0}
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 50e[0m Entering Container.getLoggingService &{0xc4201cf140}
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 50f[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 510[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 511[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 512[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.053 UTC [Composer] Debug -> DEBU 513[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.054 UTC [Composer] Debug -> DEBU 514[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.054 UTC [Composer] Debug -> DEBU 515[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 516[0m Exiting NewEngine &{0xc420028028}
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 517[0m Exiting NewComposer &{0xc420028028 0xc42051bc00 0xc4202fe7b8}
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 518[0m Exiting ComposerPool.Get &{0xc420028028 0xc42051bc00 0xc4202fe7b8}
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 519[0m Entering Composer.Invoke 0xc420550460 getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 51a[0m Entering NewContext &{0xc4201cf140} &{0xc420028028} 0xc420550550
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 51b[0m Entering NewDataService &{0xc4201cf140} &{0xc420028028 <nil> <nil> <nil> <nil>} 0xc420550600
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 51c[0m Exiting NewDataService &{0xc420028028 0xc42008d200}
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 51d[0m Entering NewIdentityService &{0xc4201cf140} &{0xc420028028 0xc42051d620 <nil> <nil> <nil>} 0xc4205507b0
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 51e[0m Exiting NewIdentityService &{0xc420028028 0xc42008d200}
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 51f[0m Entering NewEventService &{0xc4201cf140} &{0xc420028028 0xc42051d620 0xc42051d700 <nil> <nil>} 0xc420550920
[36m2017-07-19 23:33:48.057 UTC [Composer] Debug -> DEBU 520[0m Exiting NewEventServce &{0xc420028028 0xc42008d200}
[36m2017-07-19 23:33:48.058 UTC [Composer] Debug -> DEBU 521[0m Entering HTTPService &{0xc4201cf140} &{0xc420028028 0xc42051d620 0xc42051d700 0xc42051d7e0 <nil>} 0xc420550aa0
[36m2017-07-19 23:33:48.058 UTC [Composer] Debug -> DEBU 522[0m Exiting HTTPService &{0xc420028028 0xc42008d200}
[36m2017-07-19 23:33:48.058 UTC [Composer] Debug -> DEBU 523[0m Exiting NewContext &{0xc420028028 0xc42051d620 0xc42051d700 0xc42051d7e0 0xc42051d8c0}
[36m2017-07-19 23:33:48.058 UTC [Composer] Debug -> DEBU 524[0m Entering Engine.Invoke &{0xc420028028 0xc42051d620 0xc42051d700 0xc42051d7e0 0xc42051d8c0} getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.060 UTC [Composer] Debug -> DEBU 525[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:48.060 UTC [Composer] Debug -> DEBU 526[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.061 UTC [Composer] Debug -> DEBU 527[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.061 UTC [Composer] Debug -> DEBU 528[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:48.062 UTC [Composer] Debug -> DEBU 529[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc42013a280} 0xc4205524c0
[36m2017-07-19 23:33:48.062 UTC [Composer] Debug -> DEBU 52a[0m Exiting NewDataCollection &{0xc4201427a8 0xc42013a280 Transaction:default}
[36m2017-07-19 23:33:48.063 UTC [Composer] Debug -> DEBU 52b[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.063 UTC [Composer] Debug -> DEBU 52c[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.063 UTC [Composer] Debug -> DEBU 52d[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.063 UTC [Composer] Debug -> DEBU 52e[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.065 UTC [Composer] Debug -> DEBU 52f[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.065 UTC [Composer] Debug -> DEBU 530[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.065 UTC [Composer] Debug -> DEBU 531[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.066 UTC [Composer] Debug -> DEBU 532[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.067 UTC [Composer] Debug -> DEBU 533[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:48.067 UTC [Composer] Debug -> DEBU 534[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.067 UTC [Composer] Debug -> DEBU 535[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.068 UTC [Composer] Debug -> DEBU 536[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:48.069 UTC [Composer] Debug -> DEBU 537[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:48.069 UTC [Composer] Debug -> DEBU 538[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.069 UTC [Composer] Debug -> DEBU 539[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:48.069 UTC [Composer] Debug -> DEBU 53a[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.069 UTC [Composer] Debug -> DEBU 53b[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.070 UTC [Composer] Debug -> DEBU 53c[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.070 UTC [Composer] Debug -> DEBU 53d[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.070 UTC [Composer] Debug -> DEBU 53e[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.070 UTC [Composer] Debug -> DEBU 53f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.070 UTC [Composer] Debug -> DEBU 540[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.070 UTC [Composer] Debug -> DEBU 541[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.070 UTC [Composer] Debug -> DEBU 542[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.070 UTC [Composer] Debug -> DEBU 543[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.071 UTC [Composer] Debug -> DEBU 544[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.071 UTC [Composer] Debug -> DEBU 545[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.071 UTC [Composer] Debug -> DEBU 546[0m @JS : EngineRegistries         :getAllRegistries()        < [object Object]
[36m2017-07-19 23:33:48.072 UTC [Composer] Debug -> DEBU 547[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.073 UTC [Composer] Debug -> DEBU 548[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.073 UTC [Composer] Debug -> DEBU 549[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.073 UTC [Composer] Debug -> DEBU 54a[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:48.073 UTC [Composer] Debug -> DEBU 54b[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.073 UTC [Composer] Debug -> DEBU 54c[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.073 UTC [Composer] Debug -> DEBU 54d[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.073 UTC [Composer] Debug -> DEBU 54e[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:48.073 UTC [Composer] Debug -> DEBU 54f[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.074 UTC [Composer] Debug -> DEBU 550[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.074 UTC [Composer] Debug -> DEBU 551[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42013a900} 0xc420568050
[36m2017-07-19 23:33:48.074 UTC [Composer] Debug -> DEBU 552[0m Exiting NewDataCollection &{0xc420142828 0xc42013a900 $sysdata}
[36m2017-07-19 23:33:48.075 UTC [Composer] Debug -> DEBU 553[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.075 UTC [Composer] Debug -> DEBU 554[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.075 UTC [Composer] Debug -> DEBU 555[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.075 UTC [Composer] Debug -> DEBU 556[0m Exiting Engine.Invoke 0xc4203dfe00
[36m2017-07-19 23:33:48.076 UTC [Composer] Debug -> DEBU 557[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.077 UTC [Composer] Debug -> DEBU 558[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.079 UTC [Composer] Debug -> DEBU 559[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.079 UTC [Composer] Debug -> DEBU 55a[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.079 UTC [Composer] Debug -> DEBU 55b[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.079 UTC [Composer] Debug -> DEBU 55c[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.079 UTC [Composer] Debug -> DEBU 55d[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:48.079 UTC [Composer] Debug -> DEBU 55e[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.080 UTC [Composer] Debug -> DEBU 55f[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.080 UTC [Composer] Debug -> DEBU 560[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:48.080 UTC [Composer] Debug -> DEBU 561[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.081 UTC [Composer] Debug -> DEBU 562[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:48.082 UTC [Composer] Debug -> DEBU 563[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.082 UTC [Composer] Debug -> DEBU 564[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:48.082 UTC [Composer] Debug -> DEBU 565[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.082 UTC [Composer] Debug -> DEBU 566[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:48.082 UTC [Composer] Debug -> DEBU 567[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.083 UTC [Composer] Debug -> DEBU 568[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:48.084 UTC [Composer] Debug -> DEBU 569[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42008d200} 0xc420553150
[36m2017-07-19 23:33:48.084 UTC [Composer] Debug -> DEBU 56a[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:48.085 UTC [Composer] Debug -> DEBU 56b[0m Exiting NewDataCollection &{0xc4202fe860 0xc42008d200 $sysdata}
[36m2017-07-19 23:33:48.085 UTC [Composer] Debug -> DEBU 56c[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:48.086 UTC [Composer] Debug -> DEBU 56d[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.086 UTC [Composer] Debug -> DEBU 56e[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.087 UTC [Composer] Debug -> DEBU 56f[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:48.087 UTC [Composer] Debug -> DEBU 570[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.087 UTC [Composer] Debug -> DEBU 571[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:48.087 UTC [Composer] Debug -> DEBU 572[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 573[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 574[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 575[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 576[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 577[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 578[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 579[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 57a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.088 UTC [Composer] Debug -> DEBU 57b[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.090 UTC [Composer] Debug -> DEBU 57c[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42013b000} 0xc420568f00
[36m2017-07-19 23:33:48.091 UTC [Composer] Debug -> DEBU 57d[0m Exiting NewDataCollection &{0xc420150800 0xc42013b000 $sysdata}
[36m2017-07-19 23:33:48.091 UTC [Composer] Debug -> DEBU 57e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.091 UTC [Composer] Debug -> DEBU 57f[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.091 UTC [Composer] Debug -> DEBU 580[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:48.092 UTC [Composer] Debug -> DEBU 581[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.092 UTC [Composer] Debug -> DEBU 582[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.092 UTC [Composer] Debug -> DEBU 583[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:48.092 UTC [Composer] Debug -> DEBU 584[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.092 UTC [Composer] Debug -> DEBU 585[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.092 UTC [Composer] Debug -> DEBU 586[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.092 UTC [Composer] Debug -> DEBU 587[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:48.092 UTC [Composer] Debug -> DEBU 588[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.093 UTC [Composer] Debug -> DEBU 589[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.093 UTC [Composer] Debug -> DEBU 58a[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:48.095 UTC [Composer] Debug -> DEBU 58b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.095 UTC [Composer] Debug -> DEBU 58c[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.095 UTC [Composer] Debug -> DEBU 58d[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.095 UTC [Composer] Debug -> DEBU 58e[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.096 UTC [Composer] Debug -> DEBU 58f[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:48.096 UTC [Composer] Debug -> DEBU 590[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:48.096 UTC [Composer] Debug -> DEBU 591[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:48.096 UTC [Composer] Debug -> DEBU 592[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.096 UTC [Composer] Debug -> DEBU 593[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.096 UTC [Composer] Debug -> DEBU 594[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:48.097 UTC [Composer] Debug -> DEBU 595[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:48.098 UTC [Composer] Debug -> DEBU 596[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.098 UTC [Composer] Debug -> DEBU 597[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:48.098 UTC [Composer] Debug -> DEBU 599[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.098 UTC [Composer] Debug -> DEBU 59a[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.098 UTC [Composer] Debug -> DEBU 598[0m Entering EventService.transactionCommit &{0xc420140e60}
[36m2017-07-19 23:33:48.098 UTC [Composer] Debug -> DEBU 59b[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.098 UTC [Composer] Debug -> DEBU 59c[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:48.099 UTC [Composer] Debug -> DEBU 59d[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.099 UTC [Composer] Debug -> DEBU 59e[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.099 UTC [Composer] Debug -> DEBU 59f[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.099 UTC [Composer] Debug -> DEBU 5a0[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:48.100 UTC [Composer] Debug -> DEBU 5a1[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:48.101 UTC [Composer] Debug -> DEBU 5a2[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:48.101 UTC [Composer] Debug -> DEBU 5a3[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:48.101 UTC [Composer] Debug -> DEBU 5a4[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:48.102 UTC [Composer] Debug -> DEBU 5a5[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.107 UTC [Composer] Debug -> DEBU 5a6[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.108 UTC [Composer] Debug -> DEBU 5a7[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.108 UTC [Composer] Debug -> DEBU 5a8[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.108 UTC [Composer] Debug -> DEBU 5a9[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.108 UTC [Composer] Debug -> DEBU 5aa[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5ab[0m @JS : ModelManager             :addSystemModels()         > 
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5ac[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5ad[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5ae[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5af[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5b0[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5b1[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5b2[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:48.109 UTC [Composer] Debug -> DEBU 5b3[0m Exiting Context.getHTTPService 1
2017-07-19 23:33:48.110 UTC [Composer] Info -> INFO 5b4[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5b5[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5b6[0m Entering NewContainer &{0xc4201455c0}
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5b7[0m Entering NewLoggingService &{0xc4201455c0} &{0xc420142280 <nil>} 0xc420569f90
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5b8[0m Exiting NewLoggingService &{0xc420142280 <nil>}
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5b9[0m Exiting NewContainer &{0xc420142280 0xc420590dc0}
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5ba[0m Entering NewEngine &{0xc4201455c0} &{0xc420142280 0xc420590dc0}
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5bb[0m Entering Container.getLoggingService &{0xc4201455c0}
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5bc[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5bd[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.113 UTC [Composer] Debug -> DEBU 5be[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.114 UTC [Composer] Debug -> DEBU 5bf[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.114 UTC [Composer] Debug -> DEBU 5c0[0m Exiting NewEngine &{0xc420142280}
[36m2017-07-19 23:33:48.114 UTC [Composer] Debug -> DEBU 5c1[0m Exiting NewComposer &{0xc420142280 0xc420569f80 0xc420028bb8}
[36m2017-07-19 23:33:48.114 UTC [Composer] Debug -> DEBU 5c2[0m Exiting ComposerPool.Get &{0xc420142280 0xc420569f80 0xc420028bb8}
[36m2017-07-19 23:33:48.114 UTC [Composer] Debug -> DEBU 5c3[0m Entering Composer.Invoke 0xc4205c2890 getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.114 UTC [Composer] Debug -> DEBU 5c4[0m Entering NewContext &{0xc4201455c0} &{0xc420142280} 0xc4205c2980
[36m2017-07-19 23:33:48.114 UTC [Composer] Debug -> DEBU 5c5[0m Entering NewDataService &{0xc4201455c0} &{0xc420142280 <nil> <nil> <nil> <nil>} 0xc4205c2a30
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5c6[0m Exiting NewDataService &{0xc420142280 0xc42008cf00}
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5c7[0m Entering NewIdentityService &{0xc4201455c0} &{0xc420142280 0xc420591380 <nil> <nil> <nil>} 0xc4205c2be0
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5c8[0m Exiting NewIdentityService &{0xc420142280 0xc42008cf00}
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5c9[0m Entering NewEventService &{0xc4201455c0} &{0xc420142280 0xc420591380 0xc420591460 <nil> <nil>} 0xc4205c2d50
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5ca[0m Exiting NewEventServce &{0xc420142280 0xc42008cf00}
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5cb[0m Entering HTTPService &{0xc4201455c0} &{0xc420142280 0xc420591380 0xc420591460 0xc420591540 <nil>} 0xc4205c2ed0
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5cc[0m Exiting HTTPService &{0xc420142280 0xc42008cf00}
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5cd[0m Exiting NewContext &{0xc420142280 0xc420591380 0xc420591460 0xc420591540 0xc420591620}
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5ce[0m Entering Engine.Invoke &{0xc420142280 0xc420591380 0xc420591460 0xc420591540 0xc420591620} getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.115 UTC [Composer] Debug -> DEBU 5cf[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.116 UTC [Composer] Debug -> DEBU 5d0[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.116 UTC [Composer] Debug -> DEBU 5d1[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.120 UTC [Composer] Debug -> DEBU 5d2[0m Exiting Engine.Invoke 0xc4205c8060
[36m2017-07-19 23:33:48.121 UTC [Composer] Debug -> DEBU 5d3[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.122 UTC [Composer] Debug -> DEBU 5d4[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:48.123 UTC [Composer] Debug -> DEBU 5d5[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.123 UTC [Composer] Debug -> DEBU 5d6[0m Entering Engine.handleCallback 0xc4202ae8a0 &{0xc420140e60}
[36m2017-07-19 23:33:48.123 UTC [Composer] Debug -> DEBU 5d7[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:48.124 UTC [Composer] Debug -> DEBU 5d8[0m Exiting Composer.Invoke [{"type":"Transaction","id":"default","name":"Default Transaction Registry"}] <nil>
[36m2017-07-19 23:33:48.124 UTC [Composer] Debug -> DEBU 5d9[0m Entering ComposerPool.Put &{0xc420150140 0xc42027d400 0xc4202fe058}
[36m2017-07-19 23:33:48.124 UTC [Composer] Debug -> DEBU 5da[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:48.124 UTC [Composer] Debug -> DEBU 5db[0m Exiting Chaincode.Invoke 200  [{"type":"Transaction","id":"default","name":"Default Transaction Registry"}]
[36m2017-07-19 23:33:48.124 UTC [Composer] Debug -> DEBU 5dc[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.124 UTC [Composer] Debug -> DEBU 5dd[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:48.124 UTC [Composer] Debug -> DEBU 5de[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.124 UTC [Composer] Debug -> DEBU 5df[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:48.126 UTC [Composer] Debug -> DEBU 5e0[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.137 UTC [Composer] Debug -> DEBU 5e1[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc42008cf00} 0xc4205b69d0
[36m2017-07-19 23:33:48.141 UTC [Composer] Debug -> DEBU 5e2[0m Exiting NewDataCollection &{0xc420028c48 0xc42008cf00 $sysdata}
[36m2017-07-19 23:33:48.142 UTC [Composer] Debug -> DEBU 5e3[0m Entering getLogging 0xc420553ec0
[36m2017-07-19 23:33:48.142 UTC [Composer] Debug -> DEBU 5e4[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5e5[0m Entering Chaincode.Invoke 0xc420553eb0
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5e6[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5e7[0m Exiting ComposerPool.Get &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5e8[0m Entering Composer.Invoke 0xc4205d8310 submitTransaction [default {"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#JURHULBMVL_c3","newOwner":"resource:org.example.mynetwork.Trader#JURHULBMVL_t0","transactionId":"44ed880c-9906-4349-998a-c2fad16e932d","timestamp":"2017-07-19T23:33:41.060Z"}]
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5e9[0m Entering NewContext &{0xc4201ce500} &{0xc420028020} 0xc4205d83f0
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5ea[0m Entering NewDataService &{0xc4201ce500} &{0xc420028020 <nil> <nil> <nil> <nil>} 0xc4205d84b0
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5eb[0m Exiting NewDataService &{0xc420028020 0xc42055f200}
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5ec[0m Entering NewIdentityService &{0xc4201ce500} &{0xc420028020 0xc4205611e0 <nil> <nil> <nil>} 0xc4205d8660
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5ed[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5ee[0m Exiting NewIdentityService &{0xc420028020 0xc42055f200}
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5f0[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5f1[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5f2[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:48.145 UTC [Composer] Debug -> DEBU 5f3[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.145 UTC [Composer] Debug -> DEBU 5f4[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:48.145 UTC [Composer] Debug -> DEBU 5f5[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.144 UTC [Composer] Debug -> DEBU 5ef[0m Entering NewEventService &{0xc4201ce500} &{0xc420028020 0xc4205611e0 0xc4205612c0 <nil> <nil>} 0xc4205d87d0
[36m2017-07-19 23:33:48.146 UTC [Composer] Debug -> DEBU 5f6[0m Exiting NewEventServce &{0xc420028020 0xc42055f200}
[36m2017-07-19 23:33:48.146 UTC [Composer] Debug -> DEBU 5f7[0m Entering HTTPService &{0xc4201ce500} &{0xc420028020 0xc4205611e0 0xc4205612c0 0xc4205613a0 <nil>} 0xc4205d8940
[36m2017-07-19 23:33:48.146 UTC [Composer] Debug -> DEBU 5f8[0m Exiting HTTPService &{0xc420028020 0xc42055f200}
[36m2017-07-19 23:33:48.146 UTC [Composer] Debug -> DEBU 5f9[0m Exiting NewContext &{0xc420028020 0xc4205611e0 0xc4205612c0 0xc4205613a0 0xc420561480}
[36m2017-07-19 23:33:48.146 UTC [Composer] Debug -> DEBU 5fa[0m Entering Engine.Invoke &{0xc420028020 0xc4205611e0 0xc4205612c0 0xc4205613a0 0xc420561480} submitTransaction [default {"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#JURHULBMVL_c3","newOwner":"resource:org.example.mynetwork.Trader#JURHULBMVL_t0","transactionId":"44ed880c-9906-4349-998a-c2fad16e932d","timestamp":"2017-07-19T23:33:41.060Z"}]
[36m2017-07-19 23:33:48.146 UTC [Composer] Debug -> DEBU 5fb[0m @JS : Engine                   :invoke()                  > [object Object], submitTransaction, default,{"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#JURHULBMVL_c3","newOwner":"resource:org.example.mynetwork.Trader#JURHULBMVL_t0","transactionId":"44ed880c-9906-4349-998a-c2fad16e932d","timestamp":"2017-07-19T23:33:41.060Z"}
[36m2017-07-19 23:33:48.146 UTC [Composer] Debug -> DEBU 5fc[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.147 UTC [Composer] Debug -> DEBU 5fd[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.147 UTC [Composer] Debug -> DEBU 5fe[0m Exiting Engine.Invoke 0xc4205ce7e0
[36m2017-07-19 23:33:48.147 UTC [Composer] Debug -> DEBU 5ff[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.149 UTC [Composer] Debug -> DEBU 600[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.149 UTC [Composer] Debug -> DEBU 601[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.149 UTC [Composer] Debug -> DEBU 602[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.149 UTC [Composer] Debug -> DEBU 603[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.150 UTC [Composer] Debug -> DEBU 604[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.150 UTC [Composer] Debug -> DEBU 605[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.151 UTC [Composer] Debug -> DEBU 606[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.151 UTC [Composer] Debug -> DEBU 607[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.152 UTC [Composer] Debug -> DEBU 608[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.153 UTC [Composer] Debug -> DEBU 609[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.153 UTC [Composer] Debug -> DEBU 60a[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.153 UTC [Composer] Debug -> DEBU 60b[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.154 UTC [Composer] Debug -> DEBU 60c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.154 UTC [Composer] Debug -> DEBU 60d[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.154 UTC [Composer] Debug -> DEBU 60e[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.154 UTC [Composer] Debug -> DEBU 60f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.154 UTC [Composer] Debug -> DEBU 610[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.154 UTC [Composer] Debug -> DEBU 611[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.156 UTC [Composer] Debug -> DEBU 612[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.156 UTC [Composer] Debug -> DEBU 613[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc4205d9790
[36m2017-07-19 23:33:48.156 UTC [Composer] Debug -> DEBU 614[0m Exiting NewDataCollection &{0xc4201508f0 0xc42055f200 $sysdata}
[36m2017-07-19 23:33:48.156 UTC [Composer] Debug -> DEBU 615[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42013a900} 0xc4205b7370
[36m2017-07-19 23:33:48.157 UTC [Composer] Debug -> DEBU 616[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.157 UTC [Composer] Debug -> DEBU 617[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:48.157 UTC [Composer] Debug -> DEBU 618[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.157 UTC [Composer] Debug -> DEBU 619[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:48.158 UTC [Composer] Debug -> DEBU 61a[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.158 UTC [Composer] Debug -> DEBU 61b[0m Exiting NewDataCollection &{0xc420142950 0xc42013a900 $sysdata}
[36m2017-07-19 23:33:48.158 UTC [Composer] Debug -> DEBU 61c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.158 UTC [Composer] Debug -> DEBU 61d[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.158 UTC [Composer] Debug -> DEBU 61e[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 61f[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 620[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 621[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 622[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 623[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 624[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 625[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 626[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:48.159 UTC [Composer] Debug -> DEBU 627[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.160 UTC [Composer] Debug -> DEBU 628[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:48.160 UTC [Composer] Debug -> DEBU 629[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.161 UTC [Composer] Debug -> DEBU 62a[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420148900} 0xc4205b7620
[36m2017-07-19 23:33:48.161 UTC [Composer] Debug -> DEBU 62b[0m Exiting NewDataCollection &{0xc4201429d0 0xc420148900 $sysdata}
[36m2017-07-19 23:33:48.161 UTC [Composer] Debug -> DEBU 62c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.162 UTC [Composer] Debug -> DEBU 62d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.162 UTC [Composer] Debug -> DEBU 62e[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:48.162 UTC [Composer] Debug -> DEBU 62f[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.162 UTC [Composer] Debug -> DEBU 630[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.165 UTC [Composer] Debug -> DEBU 631[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.165 UTC [Composer] Debug -> DEBU 632[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.165 UTC [Composer] Debug -> DEBU 633[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.165 UTC [Composer] Debug -> DEBU 634[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.165 UTC [Composer] Debug -> DEBU 635[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.165 UTC [Composer] Debug -> DEBU 636[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.166 UTC [Composer] Debug -> DEBU 637[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:48.166 UTC [Composer] Info -> INFO 638[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.167 UTC [Composer] Debug -> DEBU 639[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.167 UTC [Composer] Debug -> DEBU 63a[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.168 UTC [Composer] Debug -> DEBU 63b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.168 UTC [Composer] Debug -> DEBU 63c[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.168 UTC [Composer] Debug -> DEBU 63d[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.169 UTC [Composer] Debug -> DEBU 63e[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.169 UTC [Composer] Debug -> DEBU 63f[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.169 UTC [Composer] Debug -> DEBU 640[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.169 UTC [Composer] Debug -> DEBU 641[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:48.170 UTC [Composer] Debug -> DEBU 642[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.171 UTC [Composer] Debug -> DEBU 643[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.171 UTC [Composer] Debug -> DEBU 644[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.171 UTC [Composer] Debug -> DEBU 645[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.171 UTC [Composer] Debug -> DEBU 646[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.171 UTC [Composer] Debug -> DEBU 647[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:48.171 UTC [Composer] Debug -> DEBU 648[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:48.171 UTC [Composer] Debug -> DEBU 649[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:48.171 UTC [Composer] Debug -> DEBU 64a[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 64b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 64c[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 64d[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 64e[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 64f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 650[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 651[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 652[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.172 UTC [Composer] Debug -> DEBU 653[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:48.174 UTC [Composer] Debug -> DEBU 654[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42013b000} 0xc4205fccf0
[36m2017-07-19 23:33:48.180 UTC [Composer] Debug -> DEBU 655[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:48.180 UTC [Composer] Debug -> DEBU 656[0m Exiting NewDataCollection &{0xc420028cd0 0xc42013b000 $sysdata}
[36m2017-07-19 23:33:48.180 UTC [Composer] Debug -> DEBU 657[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:48.180 UTC [Composer] Debug -> DEBU 658[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.181 UTC [Composer] Debug -> DEBU 659[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.181 UTC [Composer] Debug -> DEBU 65a[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.181 UTC [Composer] Debug -> DEBU 65b[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.182 UTC [Composer] Debug -> DEBU 65c[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:48.182 UTC [Composer] Debug -> DEBU 65d[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:48.182 UTC [Composer] Debug -> DEBU 65e[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.182 UTC [Composer] Debug -> DEBU 65f[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:48.183 UTC [Composer] Debug -> DEBU 660[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:48.185 UTC [Composer] Debug -> DEBU 661[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.185 UTC [Composer] Debug -> DEBU 662[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.185 UTC [Composer] Debug -> DEBU 663[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.185 UTC [Composer] Debug -> DEBU 664[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.185 UTC [Composer] Debug -> DEBU 665[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.185 UTC [Composer] Debug -> DEBU 666[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.186 UTC [Composer] Debug -> DEBU 667[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.187 UTC [Composer] Debug -> DEBU 668[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.187 UTC [Composer] Debug -> DEBU 669[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.187 UTC [Composer] Debug -> DEBU 66a[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.187 UTC [Composer] Debug -> DEBU 66b[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.187 UTC [Composer] Debug -> DEBU 66c[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.187 UTC [Composer] Debug -> DEBU 66d[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.187 UTC [Composer] Debug -> DEBU 66e[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc42062c300
[36m2017-07-19 23:33:48.187 UTC [Composer] Debug -> DEBU 66f[0m Exiting NewDataCollection &{0xc420142a50 0xc42055f200 $sysdata}
[36m2017-07-19 23:33:48.188 UTC [Composer] Debug -> DEBU 670[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.188 UTC [Composer] Debug -> DEBU 671[0m Entering NewContainer &{0xc420145580}
[36m2017-07-19 23:33:48.188 UTC [Composer] Debug -> DEBU 672[0m Entering NewLoggingService &{0xc420145580} &{0xc420142278 <nil>} 0xc420610f40
[36m2017-07-19 23:33:48.193 UTC [Composer] Debug -> DEBU 673[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.193 UTC [Composer] Debug -> DEBU 674[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.193 UTC [Composer] Debug -> DEBU 675[0m Exiting NewLoggingService &{0xc420142278 <nil>}
[36m2017-07-19 23:33:48.194 UTC [Composer] Debug -> DEBU 676[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:48.194 UTC [Composer] Debug -> DEBU 677[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:48.194 UTC [Composer] Debug -> DEBU 678[0m Exiting NewContainer &{0xc420142278 0xc42060cc40}
[36m2017-07-19 23:33:48.194 UTC [Composer] Debug -> DEBU 679[0m Entering NewEngine &{0xc420145580} &{0xc420142278 0xc42060cc40}
[36m2017-07-19 23:33:48.194 UTC [Composer] Debug -> DEBU 67a[0m Entering Container.getLoggingService &{0xc420145580}
[36m2017-07-19 23:33:48.194 UTC [Composer] Debug -> DEBU 67b[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.195 UTC [Composer] Debug -> DEBU 67c[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.195 UTC [Composer] Debug -> DEBU 67d[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.195 UTC [Composer] Debug -> DEBU 67e[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.196 UTC [Composer] Debug -> DEBU 67f[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.196 UTC [Composer] Debug -> DEBU 680[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:48.196 UTC [Composer] Debug -> DEBU 681[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:48.196 UTC [Composer] Debug -> DEBU 682[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.196 UTC [Composer] Debug -> DEBU 683[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 684[0m Exiting NewEngine &{0xc420142278}
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 685[0m Exiting NewComposer &{0xc420142278 0xc420610f30 0xc420028d50}
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 686[0m Exiting ComposerPool.Get &{0xc420142278 0xc420610f30 0xc420028d50}
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 687[0m Entering Composer.Invoke 0xc4206119d0 getAllRegistries [Transaction]
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 688[0m Entering NewContext &{0xc420145580} &{0xc420142278} 0xc420611aa0
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 689[0m Entering NewDataService &{0xc420145580} &{0xc420142278 <nil> <nil> <nil> <nil>} 0xc420611b60
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 68a[0m Exiting NewDataService &{0xc420142278 0xc420149c80}
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 68b[0m Entering NewIdentityService &{0xc420145580} &{0xc420142278 0xc42060d300 <nil> <nil> <nil>} 0xc420611d10
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 68c[0m Exiting NewIdentityService &{0xc420142278 0xc420149c80}
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 68d[0m Entering NewEventService &{0xc420145580} &{0xc420142278 0xc42060d300 0xc42060d3e0 <nil> <nil>} 0xc420611e80
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 68e[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 68f[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 690[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.197 UTC [Composer] Debug -> DEBU 691[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.198 UTC [Composer] Debug -> DEBU 692[0m Exiting NewEventServce &{0xc420142278 0xc420149c80}
[36m2017-07-19 23:33:48.198 UTC [Composer] Debug -> DEBU 693[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.198 UTC [Composer] Debug -> DEBU 694[0m Entering HTTPService &{0xc420145580} &{0xc420142278 0xc42060d300 0xc42060d3e0 0xc42060d4c0 <nil>} 0xc420611ff0
[36m2017-07-19 23:33:48.198 UTC [Composer] Debug -> DEBU 695[0m Exiting HTTPService &{0xc420142278 0xc420149c80}
[36m2017-07-19 23:33:48.199 UTC [Composer] Debug -> DEBU 696[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.199 UTC [Composer] Debug -> DEBU 697[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.199 UTC [Composer] Debug -> DEBU 698[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.200 UTC [Composer] Debug -> DEBU 699[0m Exiting NewContext &{0xc420142278 0xc42060d300 0xc42060d3e0 0xc42060d4c0 0xc42060d5a0}
[36m2017-07-19 23:33:48.200 UTC [Composer] Debug -> DEBU 69a[0m Entering Engine.Invoke &{0xc420142278 0xc42060d300 0xc42060d3e0 0xc42060d4c0 0xc42060d5a0} getAllRegistries [Transaction]
[36m2017-07-19 23:33:48.200 UTC [Composer] Debug -> DEBU 69b[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.200 UTC [Composer] Debug -> DEBU 69d[0m @JS : Engine                   :invoke()                  > [object Object], getAllRegistries, Transaction
[36m2017-07-19 23:33:48.200 UTC [Composer] Debug -> DEBU 69e[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.200 UTC [Composer] Debug -> DEBU 69c[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.201 UTC [Composer] Debug -> DEBU 69f[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.201 UTC [Composer] Debug -> DEBU 6a0[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.201 UTC [Composer] Debug -> DEBU 6a1[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.202 UTC [Composer] Debug -> DEBU 6a2[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:48.203 UTC [Composer] Debug -> DEBU 6a3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.203 UTC [Composer] Debug -> DEBU 6a4[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.203 UTC [Composer] Debug -> DEBU 6a5[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.203 UTC [Composer] Debug -> DEBU 6a6[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.205 UTC [Composer] Debug -> DEBU 6a7[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.205 UTC [Composer] Debug -> DEBU 6a8[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.205 UTC [Composer] Debug -> DEBU 6a9[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:48.205 UTC [Composer] Debug -> DEBU 6aa[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.205 UTC [Composer] Debug -> DEBU 6ab[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.206 UTC [Composer] Debug -> DEBU 6ac[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.206 UTC [Composer] Debug -> DEBU 6ad[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.206 UTC [Composer] Debug -> DEBU 6ae[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.206 UTC [Composer] Debug -> DEBU 6af[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.206 UTC [Composer] Debug -> DEBU 6b0[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.206 UTC [Composer] Debug -> DEBU 6b1[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.206 UTC [Composer] Debug -> DEBU 6b2[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.206 UTC [Composer] Debug -> DEBU 6b3[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6b4[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6b5[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6b6[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6b7[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6b8[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6ba[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6bb[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6b9[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6bc[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6bd[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6bf[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.207 UTC [Composer] Debug -> DEBU 6be[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.208 UTC [Composer] Debug -> DEBU 6c0[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.209 UTC [Composer] Debug -> DEBU 6c1[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.209 UTC [Composer] Debug -> DEBU 6c2[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.209 UTC [Composer] Debug -> DEBU 6c3[0m Exiting Engine.Invoke 0xc4205c9260
[36m2017-07-19 23:33:48.210 UTC [Composer] Debug -> DEBU 6c4[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.211 UTC [Composer] Debug -> DEBU 6c5[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.212 UTC [Composer] Debug -> DEBU 6c6[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.213 UTC [Composer] Debug -> DEBU 6c7[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.213 UTC [Composer] Debug -> DEBU 6c8[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.213 UTC [Composer] Debug -> DEBU 6c9[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.214 UTC [Composer] Debug -> DEBU 6ca[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.214 UTC [Composer] Debug -> DEBU 6cb[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.215 UTC [Composer] Debug -> DEBU 6cc[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.216 UTC [Composer] Debug -> DEBU 6cd[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.216 UTC [Composer] Debug -> DEBU 6ce[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.216 UTC [Composer] Debug -> DEBU 6cf[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:48.216 UTC [Composer] Debug -> DEBU 6d0[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.216 UTC [Composer] Debug -> DEBU 6d1[0m Entering DataService.getCollection &{0xc420145580}
[36m2017-07-19 23:33:48.217 UTC [Composer] Debug -> DEBU 6d2[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.217 UTC [Composer] Debug -> DEBU 6d3[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.217 UTC [Composer] Debug -> DEBU 6d4[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.218 UTC [Composer] Debug -> DEBU 6d5[0m Entering NewDataCollection &{0xc420145580} &{0xc420142278 0xc420149c80} 0xc420633d20
[36m2017-07-19 23:33:48.219 UTC [Composer] Debug -> DEBU 6d6[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc4206528d0
[36m2017-07-19 23:33:48.219 UTC [Composer] Debug -> DEBU 6d7[0m Exiting NewDataCollection &{0xc4202feb70 0xc42055f200 $sysdata}
[36m2017-07-19 23:33:48.219 UTC [Composer] Debug -> DEBU 6d8[0m Exiting NewDataCollection &{0xc420150a38 0xc420149c80 $sysdata}
[36m2017-07-19 23:33:48.219 UTC [Composer] Debug -> DEBU 6d9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.220 UTC [Composer] Debug -> DEBU 6da[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:48.221 UTC [Composer] Debug -> DEBU 6db[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.221 UTC [Composer] Debug -> DEBU 6dc[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.221 UTC [Composer] Debug -> DEBU 6dd[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.222 UTC [Composer] Debug -> DEBU 6de[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.222 UTC [Composer] Debug -> DEBU 6df[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:48.222 UTC [Composer] Debug -> DEBU 6e0[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:48.222 UTC [Composer] Debug -> DEBU 6e1[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.223 UTC [Composer] Debug -> DEBU 6e2[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:48.224 UTC [Composer] Debug -> DEBU 6e3[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:48.224 UTC [Composer] Debug -> DEBU 6e4[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.224 UTC [Composer] Debug -> DEBU 6e5[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:48.224 UTC [Composer] Debug -> DEBU 6e6[0m Entering DataCollection.get &{0xc420145580}
[36m2017-07-19 23:33:48.224 UTC [Composer] Debug -> DEBU 6e7[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:48.226 UTC [Composer] Debug -> DEBU 6e8[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.226 UTC [Composer] Debug -> DEBU 6e9[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.226 UTC [Composer] Debug -> DEBU 6eb[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:48.226 UTC [Composer] Debug -> DEBU 6ea[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.227 UTC [Composer] Debug -> DEBU 6ec[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.227 UTC [Composer] Debug -> DEBU 6ed[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.227 UTC [Composer] Debug -> DEBU 6ee[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.227 UTC [Composer] Debug -> DEBU 6ef[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:48.228 UTC [Composer] Debug -> DEBU 6f0[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.228 UTC [Composer] Debug -> DEBU 6f2[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.228 UTC [Composer] Debug -> DEBU 6f1[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.228 UTC [Composer] Debug -> DEBU 6f3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.228 UTC [Composer] Debug -> DEBU 6f4[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.229 UTC [Composer] Debug -> DEBU 6f5[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.229 UTC [Composer] Debug -> DEBU 6f6[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.229 UTC [Composer] Debug -> DEBU 6f7[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:48.230 UTC [Composer] Debug -> DEBU 6f8[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.230 UTC [Composer] Debug -> DEBU 6f9[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:48.230 UTC [Composer] Debug -> DEBU 6fa[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:48.230 UTC [Composer] Debug -> DEBU 6fb[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:48.231 UTC [Composer] Debug -> DEBU 6fc[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.231 UTC [Composer] Debug -> DEBU 6fd[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:48.232 UTC [Composer] Debug -> DEBU 6ff[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.232 UTC [Composer] Debug -> DEBU 6fe[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:48.232 UTC [Composer] Debug -> DEBU 700[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.232 UTC [Composer] Debug -> DEBU 701[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.232 UTC [Composer] Debug -> DEBU 702[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:48.233 UTC [Composer] Debug -> DEBU 703[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.233 UTC [Composer] Debug -> DEBU 704[0m Entering NewContainer &{0xc42027a640}
[36m2017-07-19 23:33:48.233 UTC [Composer] Debug -> DEBU 705[0m Entering NewLoggingService &{0xc42027a640} &{0xc4202fe000 <nil>} 0xc42069a640
[36m2017-07-19 23:33:48.233 UTC [Composer] Debug -> DEBU 706[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.233 UTC [Composer] Debug -> DEBU 708[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.233 UTC [Composer] Debug -> DEBU 707[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:48.234 UTC [Composer] Debug -> DEBU 709[0m Exiting NewLoggingService &{0xc4202fe000 <nil>}
[36m2017-07-19 23:33:48.234 UTC [Composer] Debug -> DEBU 70a[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:48.235 UTC [Composer] Debug -> DEBU 70b[0m Exiting NewContainer &{0xc4202fe000 0xc420639500}
[36m2017-07-19 23:33:48.235 UTC [Composer] Debug -> DEBU 70c[0m Entering NewEngine &{0xc42027a640} &{0xc4202fe000 0xc420639500}
[36m2017-07-19 23:33:48.235 UTC [Composer] Debug -> DEBU 70d[0m Entering Container.getLoggingService &{0xc42027a640}
[36m2017-07-19 23:33:48.235 UTC [Composer] Debug -> DEBU 70e[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.235 UTC [Composer] Debug -> DEBU 70f[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.236 UTC [Composer] Debug -> DEBU 710[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.236 UTC [Composer] Debug -> DEBU 711[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.236 UTC [Composer] Debug -> DEBU 712[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.236 UTC [Composer] Debug -> DEBU 713[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 714[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 715[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 717[0m Exiting NewEngine &{0xc4202fe000}
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 718[0m Exiting NewComposer &{0xc4202fe000 0xc42069a630 0xc420150a78}
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 719[0m Exiting ComposerPool.Get &{0xc4202fe000 0xc42069a630 0xc420150a78}
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 71a[0m Entering Composer.Invoke 0xc4210320e0 getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 71b[0m Entering NewContext &{0xc42027a640} &{0xc4202fe000} 0xc4210321d0
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 71c[0m Entering NewDataService &{0xc42027a640} &{0xc4202fe000 <nil> <nil> <nil> <nil>} 0xc421032280
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 71d[0m Exiting NewDataService &{0xc4202fe000 0xc42008d500}
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 71e[0m Entering NewIdentityService &{0xc42027a640} &{0xc4202fe000 0xc4206ba3c0 <nil> <nil> <nil>} 0xc421032430
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 71f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.237 UTC [Composer] Debug -> DEBU 716[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 720[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 722[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 723[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 721[0m Exiting NewIdentityService &{0xc4202fe000 0xc42008d500}
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 724[0m Entering NewEventService &{0xc42027a640} &{0xc4202fe000 0xc4206ba3c0 0xc4206ba4a0 <nil> <nil>} 0xc4210325a0
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 725[0m Exiting NewEventServce &{0xc4202fe000 0xc42008d500}
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 726[0m Entering HTTPService &{0xc42027a640} &{0xc4202fe000 0xc4206ba3c0 0xc4206ba4a0 0xc4206ba580 <nil>} 0xc421032720
[36m2017-07-19 23:33:48.238 UTC [Composer] Debug -> DEBU 727[0m Exiting HTTPService &{0xc4202fe000 0xc42008d500}
[36m2017-07-19 23:33:48.239 UTC [Composer] Debug -> DEBU 728[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.240 UTC [Composer] Debug -> DEBU 729[0m Exiting NewContext &{0xc4202fe000 0xc4206ba3c0 0xc4206ba4a0 0xc4206ba580 0xc4206ba660}
[36m2017-07-19 23:33:48.240 UTC [Composer] Debug -> DEBU 72a[0m Entering Engine.Invoke &{0xc4202fe000 0xc4206ba3c0 0xc4206ba4a0 0xc4206ba580 0xc4206ba660} getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:48.240 UTC [Composer] Debug -> DEBU 72b[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc420653c40
[36m2017-07-19 23:33:48.240 UTC [Composer] Debug -> DEBU 72c[0m Exiting NewDataCollection &{0xc420028e88 0xc42055f200 $sysdata}
[36m2017-07-19 23:33:48.241 UTC [Composer] Debug -> DEBU 72d[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.241 UTC [Composer] Debug -> DEBU 72e[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:48.241 UTC [Composer] Debug -> DEBU 730[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.241 UTC [Composer] Debug -> DEBU 731[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.241 UTC [Composer] Debug -> DEBU 72f[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.242 UTC [Composer] Debug -> DEBU 732[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.242 UTC [Composer] Debug -> DEBU 733[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.242 UTC [Composer] Debug -> DEBU 734[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.242 UTC [Composer] Debug -> DEBU 735[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:48.242 UTC [Composer] Debug -> DEBU 736[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.243 UTC [Composer] Debug -> DEBU 737[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.244 UTC [Composer] Debug -> DEBU 738[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420148900} 0xc42066f4c0
[36m2017-07-19 23:33:48.245 UTC [Composer] Debug -> DEBU 739[0m Exiting NewDataCollection &{0xc420142bd8 0xc420148900 $sysdata}
[36m2017-07-19 23:33:48.245 UTC [Composer] Debug -> DEBU 73a[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.245 UTC [Composer] Debug -> DEBU 73c[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.245 UTC [Composer] Debug -> DEBU 73b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.248 UTC [Composer] Debug -> DEBU 73d[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.252 UTC [Composer] Debug -> DEBU 73e[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.252 UTC [Composer] Debug -> DEBU 73f[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:48.252 UTC [Composer] Debug -> DEBU 740[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.253 UTC [Composer] Debug -> DEBU 741[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.253 UTC [Composer] Debug -> DEBU 742[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.253 UTC [Composer] Debug -> DEBU 743[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.254 UTC [Composer] Debug -> DEBU 744[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.254 UTC [Composer] Debug -> DEBU 745[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.254 UTC [Composer] Debug -> DEBU 746[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.254 UTC [Composer] Debug -> DEBU 747[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.254 UTC [Composer] Debug -> DEBU 748[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.255 UTC [Composer] Debug -> DEBU 749[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.255 UTC [Composer] Debug -> DEBU 74a[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.255 UTC [Composer] Debug -> DEBU 74b[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.260 UTC [Composer] Debug -> DEBU 74c[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:48.261 UTC [Composer] Debug -> DEBU 74d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.261 UTC [Composer] Debug -> DEBU 74e[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.262 UTC [Composer] Debug -> DEBU 74f[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.262 UTC [Composer] Debug -> DEBU 750[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.262 UTC [Composer] Debug -> DEBU 751[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:48.266 UTC [Composer] Debug -> DEBU 752[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:48.266 UTC [Composer] Debug -> DEBU 753[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.267 UTC [Composer] Debug -> DEBU 754[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:48.267 UTC [Composer] Debug -> DEBU 755[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.267 UTC [Composer] Debug -> DEBU 756[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.267 UTC [Composer] Debug -> DEBU 757[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.267 UTC [Composer] Debug -> DEBU 758[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.267 UTC [Composer] Debug -> DEBU 759[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.267 UTC [Composer] Debug -> DEBU 75a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.267 UTC [Composer] Debug -> DEBU 75b[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.269 UTC [Composer] Debug -> DEBU 75c[0m Exiting Engine.Invoke 0xc420637020
[36m2017-07-19 23:33:48.269 UTC [Composer] Debug -> DEBU 75d[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.269 UTC [Composer] Debug -> DEBU 75e[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42013a900} 0xc4210335c0
[36m2017-07-19 23:33:48.270 UTC [Composer] Debug -> DEBU 75f[0m Exiting NewDataCollection &{0xc420142c88 0xc42013a900 $sysregistries}
[36m2017-07-19 23:33:48.270 UTC [Composer] Debug -> DEBU 760[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.270 UTC [Composer] Debug -> DEBU 761[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.270 UTC [Composer] Debug -> DEBU 762[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.270 UTC [Composer] Debug -> DEBU 763[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.270 UTC [Composer] Debug -> DEBU 764[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.271 UTC [Composer] Debug -> DEBU 765[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:48.271 UTC [Composer] Debug -> DEBU 766[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.272 UTC [Composer] Debug -> DEBU 767[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42013a900} 0xc421033c90
[36m2017-07-19 23:33:48.272 UTC [Composer] Debug -> DEBU 768[0m Exiting NewDataCollection &{0xc420150b78 0xc42013a900 $sysidentities}
[36m2017-07-19 23:33:48.272 UTC [Composer] Debug -> DEBU 76a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.272 UTC [Composer] Debug -> DEBU 769[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:48.272 UTC [Composer] Debug -> DEBU 76b[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 76c[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 76d[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 76e[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 76f[0m Entering IdentityService.getCurrentUserID &{0xc420144940}
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 770[0m Entering extractNameFromCreator 0xc42106e280
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 771[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 772[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 773[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 774[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 775[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 776[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.273 UTC [Composer] Debug -> DEBU 777[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 778[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 779[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 77a[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 77c[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 77d[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 77b[0m Common Name admin
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 77e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 77f[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 780[0m Entering DataService.getCollection &{0xc42027a640}
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 781[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.274 UTC [Composer] Debug -> DEBU 782[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.275 UTC [Composer] Debug -> DEBU 783[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.275 UTC [Composer] Debug -> DEBU 784[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.275 UTC [Composer] Debug -> DEBU 785[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.275 UTC [Composer] Debug -> DEBU 786[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 787[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 788[0m Entering NewDataCollection &{0xc42027a640} &{0xc4202fe000 0xc42008d500} 0xc42106f310
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 789[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc421064950
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 78a[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 78b[0m Exiting NewDataCollection &{0xc420142cd0 0xc42008d500 $sysdata}
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 78c[0m Exiting NewDataCollection &{0xc4202fec48 0xc42055f200 $sysregistries}
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 78d[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 78f[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.277 UTC [Composer] Debug -> DEBU 78e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.278 UTC [Composer] Debug -> DEBU 790[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:48.279 UTC [Composer] Debug -> DEBU 791[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.279 UTC [Composer] Debug -> DEBU 792[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.279 UTC [Composer] Debug -> DEBU 793[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.279 UTC [Composer] Debug -> DEBU 794[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:48.279 UTC [Composer] Debug -> DEBU 795[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.279 UTC [Composer] Debug -> DEBU 796[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 797[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 798[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 799[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 79a[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 79b[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 79c[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 79d[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 79e[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.280 UTC [Composer] Debug -> DEBU 79f[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.281 UTC [Composer] Debug -> DEBU 7a1[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.281 UTC [Composer] Debug -> DEBU 7a2[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.281 UTC [Composer] Debug -> DEBU 7a3[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.281 UTC [Composer] Debug -> DEBU 7a0[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.281 UTC [Composer] Debug -> DEBU 7a5[0m Entering DataCollection.get &{0xc42027a640}
[36m2017-07-19 23:33:48.281 UTC [Composer] Debug -> DEBU 7a4[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.284 UTC [Composer] Debug -> DEBU 7a6[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc42106fa00
[36m2017-07-19 23:33:48.284 UTC [Composer] Debug -> DEBU 7a7[0m Exiting NewDataCollection &{0xc420142d00 0xc42055f200 $sysidentities}
[36m2017-07-19 23:33:48.284 UTC [Composer] Debug -> DEBU 7a8[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.285 UTC [Composer] Debug -> DEBU 7a9[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.285 UTC [Composer] Debug -> DEBU 7aa[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.285 UTC [Composer] Debug -> DEBU 7ab[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.286 UTC [Composer] Debug -> DEBU 7ac[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.286 UTC [Composer] Debug -> DEBU 7ad[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.286 UTC [Composer] Debug -> DEBU 7af[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.287 UTC [Composer] Debug -> DEBU 7b0[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.287 UTC [Composer] Debug -> DEBU 7b1[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.288 UTC [Composer] Debug -> DEBU 7b2[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.286 UTC [Composer] Debug -> DEBU 7ae[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.289 UTC [Composer] Debug -> DEBU 7b3[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.290 UTC [Composer] Debug -> DEBU 7b4[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:48.290 UTC [Composer] Debug -> DEBU 7b5[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.290 UTC [Composer] Debug -> DEBU 7b6[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:48.290 UTC [Composer] Debug -> DEBU 7b7[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.291 UTC [Composer] Debug -> DEBU 7b8[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.291 UTC [Composer] Debug -> DEBU 7b9[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.291 UTC [Composer] Debug -> DEBU 7ba[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.291 UTC [Composer] Debug -> DEBU 7bb[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.291 UTC [Composer] Debug -> DEBU 7bc[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.291 UTC [Composer] Debug -> DEBU 7bd[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.293 UTC [Composer] Debug -> DEBU 7be[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42013b000} 0xc421043520
[36m2017-07-19 23:33:48.293 UTC [Composer] Debug -> DEBU 7bf[0m Exiting NewDataCollection &{0xc420142dc0 0xc42013b000 $sysregistries}
[36m2017-07-19 23:33:48.293 UTC [Composer] Debug -> DEBU 7c0[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.294 UTC [Composer] Debug -> DEBU 7c1[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.294 UTC [Composer] Debug -> DEBU 7c2[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.294 UTC [Composer] Debug -> DEBU 7c3[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.294 UTC [Composer] Debug -> DEBU 7c4[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.295 UTC [Composer] Debug -> DEBU 7c5[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:48.295 UTC [Composer] Debug -> DEBU 7c6[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.295 UTC [Composer] Debug -> DEBU 7c7[0m Entering IdentityService.getCurrentUserID &{0xc4201ce500}
[36m2017-07-19 23:33:48.295 UTC [Composer] Debug -> DEBU 7c8[0m Entering extractNameFromCreator 0xc42069baa0
[36m2017-07-19 23:33:48.295 UTC [Composer] Debug -> DEBU 7c9[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.298 UTC [Composer] Debug -> DEBU 7ca[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.298 UTC [Composer] Debug -> DEBU 7cb[0m Common Name admin
[36m2017-07-19 23:33:48.298 UTC [Composer] Debug -> DEBU 7cc[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.299 UTC [Composer] Debug -> DEBU 7cd[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.299 UTC [Composer] Debug -> DEBU 7ce[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:48.300 UTC [Composer] Debug -> DEBU 7d0[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.300 UTC [Composer] Debug -> DEBU 7d1[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:48.300 UTC [Composer] Debug -> DEBU 7d2[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.301 UTC [Composer] Debug -> DEBU 7d3[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.301 UTC [Composer] Debug -> DEBU 7d4[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.299 UTC [Composer] Debug -> DEBU 7cf[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.304 UTC [Composer] Debug -> DEBU 7d5[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42013b000} 0xc421043bf0
[36m2017-07-19 23:33:48.304 UTC [Composer] Debug -> DEBU 7d6[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.304 UTC [Composer] Debug -> DEBU 7d7[0m Exiting NewDataCollection &{0xc420028fc8 0xc42013b000 $sysidentities}
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7d9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.305 UTC [Composer] Debug -> DEBU 7d8[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7da[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7db[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7dc[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7dd[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7de[0m Entering IdentityService.getCurrentUserID &{0xc4201ce220}
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7df[0m Entering extractNameFromCreator 0xc421065fc0
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7e0[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7e1[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7e2[0m Common Name admin
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7e3[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.306 UTC [Composer] Debug -> DEBU 7e4[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7e5[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7e6[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7e7[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7e8[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7e9[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7ea[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7eb[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7ec[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7ed[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7ee[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7ef[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.307 UTC [Composer] Debug -> DEBU 7f0[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:48.308 UTC [Composer] Debug -> DEBU 7f1[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.308 UTC [Composer] Debug -> DEBU 7f2[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.308 UTC [Composer] Debug -> DEBU 7f3[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.308 UTC [Composer] Debug -> DEBU 7f4[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:48.308 UTC [Composer] Debug -> DEBU 7f5[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.309 UTC [Composer] Debug -> DEBU 7f6[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.310 UTC [Composer] Debug -> DEBU 7f7[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.310 UTC [Composer] Debug -> DEBU 7f8[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.317 UTC [Composer] Debug -> DEBU 7f9[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.321 UTC [Composer] Debug -> DEBU 7fa[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.323 UTC [Composer] Debug -> DEBU 7fb[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42013a900} 0xc4210c56d0
[36m2017-07-19 23:33:48.323 UTC [Composer] Debug -> DEBU 7fc[0m Exiting NewDataCollection &{0xc420028fd0 0xc42013a900 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:48.323 UTC [Composer] Debug -> DEBU 7fd[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.324 UTC [Composer] Debug -> DEBU 7fe[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.325 UTC [Composer] Debug -> DEBU 7ff[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.326 UTC [Composer] Debug -> DEBU 800[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.326 UTC [Composer] Debug -> DEBU 801[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:48.326 UTC [Composer] Debug -> DEBU 802[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.326 UTC [Composer] Debug -> DEBU 803[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 804[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 805[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 806[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 807[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 808[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 809[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 80a[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 80b[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:48.327 UTC [Composer] Debug -> DEBU 80c[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 80d[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 80e[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 80f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 810[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 811[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 812[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 813[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 814[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 815[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.329 UTC [Composer] Debug -> DEBU 816[0m @JS : Engine                   :invoke()                  Calling engine function getAllRegistries
[36m2017-07-19 23:33:48.330 UTC [Composer] Debug -> DEBU 817[0m @JS : EngineRegistries         :getAllRegistries()        > [object Object], Transaction
[36m2017-07-19 23:33:48.330 UTC [Composer] Debug -> DEBU 818[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.330 UTC [Composer] Debug -> DEBU 819[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.330 UTC [Composer] Debug -> DEBU 81a[0m Entering DataCollection.getAll &{0xc4201ce220}
[36m2017-07-19 23:33:48.332 UTC [Composer] Debug -> DEBU 81b[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.332 UTC [Composer] Debug -> DEBU 81c[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.332 UTC [Composer] Debug -> DEBU 81d[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.334 UTC [Composer] Debug -> DEBU 81e[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.334 UTC [Composer] Debug -> DEBU 81f[0m Entering NewContainer &{0xc42027a680}
[36m2017-07-19 23:33:48.334 UTC [Composer] Debug -> DEBU 820[0m Entering NewLoggingService &{0xc42027a680} &{0xc4202fe008 <nil>} 0xc4210ea600
[36m2017-07-19 23:33:48.334 UTC [Composer] Debug -> DEBU 821[0m Exiting NewLoggingService &{0xc4202fe008 <nil>}
[36m2017-07-19 23:33:48.334 UTC [Composer] Debug -> DEBU 822[0m Exiting NewContainer &{0xc4202fe008 0xc4210ec480}
[36m2017-07-19 23:33:48.334 UTC [Composer] Debug -> DEBU 823[0m Entering NewEngine &{0xc42027a680} &{0xc4202fe008 0xc4210ec480}
[36m2017-07-19 23:33:48.334 UTC [Composer] Debug -> DEBU 824[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.334 UTC [Composer] Debug -> DEBU 825[0m Entering Container.getLoggingService &{0xc42027a680}
[36m2017-07-19 23:33:48.335 UTC [Composer] Debug -> DEBU 826[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.335 UTC [Composer] Debug -> DEBU 827[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.335 UTC [Composer] Debug -> DEBU 828[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.335 UTC [Composer] Debug -> DEBU 829[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 82a[0m Exiting DataCollection.getAll 0
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 82b[0m Exiting NewEngine &{0xc4202fe008}
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 82c[0m Exiting NewComposer &{0xc4202fe008 0xc4210ea5f0 0xc420142f60}
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 82d[0m Exiting ComposerPool.Get &{0xc4202fe008 0xc4210ea5f0 0xc420142f60}
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 82e[0m Entering Composer.Invoke 0xc4210ead00 getAllRegistries [Transaction]
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 82f[0m Entering NewContext &{0xc42027a680} &{0xc4202fe008} 0xc4210eadd0
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 830[0m Entering NewDataService &{0xc42027a680} &{0xc4202fe008 <nil> <nil> <nil> <nil>} 0xc4210eae90
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 831[0m Exiting NewDataService &{0xc4202fe008 0xc42008d900}
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 832[0m Entering NewIdentityService &{0xc42027a680} &{0xc4202fe008 0xc4210ec9a0 <nil> <nil> <nil>} 0xc4210eb040
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 833[0m Exiting NewIdentityService &{0xc4202fe008 0xc42008d900}
[36m2017-07-19 23:33:48.336 UTC [Composer] Debug -> DEBU 834[0m Entering NewEventService &{0xc42027a680} &{0xc4202fe008 0xc4210ec9a0 0xc4210eca80 <nil> <nil>} 0xc4210eb1b0
[36m2017-07-19 23:33:48.337 UTC [Composer] Debug -> DEBU 835[0m Exiting NewEventServce &{0xc4202fe008 0xc42008d900}
[36m2017-07-19 23:33:48.337 UTC [Composer] Debug -> DEBU 836[0m Entering HTTPService &{0xc42027a680} &{0xc4202fe008 0xc4210ec9a0 0xc4210eca80 0xc4210ecb60 <nil>} 0xc4210eb320
[36m2017-07-19 23:33:48.337 UTC [Composer] Debug -> DEBU 837[0m Exiting HTTPService &{0xc4202fe008 0xc42008d900}
[36m2017-07-19 23:33:48.337 UTC [Composer] Debug -> DEBU 838[0m Exiting NewContext &{0xc4202fe008 0xc4210ec9a0 0xc4210eca80 0xc4210ecb60 0xc4210ecc40}
[36m2017-07-19 23:33:48.337 UTC [Composer] Debug -> DEBU 839[0m Entering Engine.Invoke &{0xc4202fe008 0xc4210ec9a0 0xc4210eca80 0xc4210ecb60 0xc4210ecc40} getAllRegistries [Transaction]
[36m2017-07-19 23:33:48.337 UTC [Composer] Debug -> DEBU 83a[0m @JS : Engine                   :invoke()                  > [object Object], getAllRegistries, Transaction
[36m2017-07-19 23:33:48.337 UTC [Composer] Debug -> DEBU 83b[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.337 UTC [Composer] Debug -> DEBU 83c[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 83d[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 83e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 83f[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 840[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 841[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 842[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 843[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 844[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 845[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.338 UTC [Composer] Debug -> DEBU 846[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.339 UTC [Composer] Debug -> DEBU 847[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.341 UTC [Composer] Debug -> DEBU 848[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42013b000} 0xc4210eba90
[36m2017-07-19 23:33:48.341 UTC [Composer] Debug -> DEBU 849[0m Exiting NewDataCollection &{0xc4202fed98 0xc42013b000 Transaction:default}
[36m2017-07-19 23:33:48.342 UTC [Composer] Debug -> DEBU 84a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.342 UTC [Composer] Debug -> DEBU 84b[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.343 UTC [Composer] Debug -> DEBU 84c[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.343 UTC [Composer] Debug -> DEBU 84d[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.343 UTC [Composer] Debug -> DEBU 84e[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.343 UTC [Composer] Debug -> DEBU 84f[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.343 UTC [Composer] Debug -> DEBU 850[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:48.343 UTC [Composer] Info -> INFO 851[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.344 UTC [Composer] Debug -> DEBU 852[0m Entering EventService.transactionCommit &{0xc420144940}
[36m2017-07-19 23:33:48.345 UTC [Composer] Debug -> DEBU 853[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.345 UTC [Composer] Debug -> DEBU 854[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.345 UTC [Composer] Debug -> DEBU 855[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.345 UTC [Composer] Debug -> DEBU 856[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.346 UTC [Composer] Debug -> DEBU 857[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.346 UTC [Composer] Debug -> DEBU 858[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:48.346 UTC [Composer] Info -> INFO 859[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.349 UTC [Composer] Debug -> DEBU 85a[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.349 UTC [Composer] Debug -> DEBU 85b[0m Entering NewContainer &{0xc4201cf6a0}
[36m2017-07-19 23:33:48.349 UTC [Composer] Debug -> DEBU 85c[0m Entering NewLoggingService &{0xc4201cf6a0} &{0xc420028030 <nil>} 0xc4210ad2f0
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 85d[0m Exiting NewLoggingService &{0xc420028030 <nil>}
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 85e[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 85f[0m Exiting NewContainer &{0xc420028030 0xc4211141c0}
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 860[0m Entering NewEngine &{0xc4201cf6a0} &{0xc420028030 0xc4211141c0}
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 861[0m Entering Container.getLoggingService &{0xc4201cf6a0}
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 863[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 862[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 864[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 865[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.350 UTC [Composer] Debug -> DEBU 866[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 867[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 869[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 868[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 86a[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 86b[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 86c[0m @JS : Engine                   :invoke()                  Calling engine function submitTransaction
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 86e[0m Exiting Engine.Invoke 0xc4210a15c0
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 86d[0m @JS : EngineRegistries         :getAllRegistries()        < [object Object]
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 86f[0m Exiting NewEngine &{0xc420028030}
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 870[0m Exiting NewComposer &{0xc420028030 0xc4210ad2e0 0xc4202fede8}
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 871[0m Exiting ComposerPool.Get &{0xc420028030 0xc4210ad2e0 0xc4202fede8}
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 872[0m Entering Composer.Invoke 0xc4210adb40 getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 873[0m Entering NewContext &{0xc4201cf6a0} &{0xc420028030} 0xc4210adc30
[36m2017-07-19 23:33:48.354 UTC [Composer] Debug -> DEBU 874[0m Entering NewDataService &{0xc4201cf6a0} &{0xc420028030 <nil> <nil> <nil> <nil>} 0xc4210adce0
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 875[0m Exiting NewDataService &{0xc420028030 0xc420149000}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 876[0m Entering NewIdentityService &{0xc4201cf6a0} &{0xc420028030 0xc421114700 <nil> <nil> <nil>} 0xc4210ade90
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 877[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 878[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 87a[0m Exiting NewIdentityService &{0xc420028030 0xc420149000}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 87b[0m Entering NewEventService &{0xc4201cf6a0} &{0xc420028030 0xc421114700 0xc4211147e0 <nil> <nil>} 0xc42112e000
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 87c[0m Exiting NewEventServce &{0xc420028030 0xc420149000}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 87d[0m Entering HTTPService &{0xc4201cf6a0} &{0xc420028030 0xc421114700 0xc4211147e0 0xc4211148c0 <nil>} 0xc42112e180
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 879[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 87e[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 87f[0m Exiting HTTPService &{0xc420028030 0xc420149000}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 880[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 881[0m @JS : EngineTransactions       :submitTransaction()       > [object Object], default,{"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#JURHULBMVL_c3","newOwner":"resource:org.example.mynetwork.Trader#JURHULBMVL_t0","transactionId":"44ed880c-9906-4349-998a-c2fad16e932d","timestamp":"2017-07-19T23:33:41.060Z"}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 882[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 883[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 885[0m Exiting NewContext &{0xc420028030 0xc421114700 0xc4211147e0 0xc4211148c0 0xc4211149a0}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 886[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 884[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 888[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 889[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 887[0m Entering Engine.Invoke &{0xc420028030 0xc421114700 0xc4211147e0 0xc4211148c0 0xc4211149a0} getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 88a[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.355 UTC [Composer] Debug -> DEBU 88b[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.356 UTC [Composer] Debug -> DEBU 88c[0m @JS : EngineTransactions       :submitTransaction()       Parsing transaction from JSON 
[36m2017-07-19 23:33:48.356 UTC [Composer] Debug -> DEBU 88d[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.356 UTC [Composer] Debug -> DEBU 88e[0m @JS : EngineTransactions       :submitTransaction()       Parsing transaction from parsed JSON object 
[36m2017-07-19 23:33:48.357 UTC [Composer] Debug -> DEBU 88f[0m Exiting Engine.Invoke 0xc4210a19e0
[36m2017-07-19 23:33:48.357 UTC [Composer] Debug -> DEBU 890[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.357 UTC [Composer] Debug -> DEBU 891[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:48.358 UTC [Composer] Debug -> DEBU 892[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.358 UTC [Composer] Debug -> DEBU 893[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.358 UTC [Composer] Debug -> DEBU 894[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.358 UTC [Composer] Debug -> DEBU 895[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.358 UTC [Composer] Debug -> DEBU 896[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:48.358 UTC [Composer] Debug -> DEBU 897[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.358 UTC [Composer] Debug -> DEBU 898[0m Entering DataService.getCollection &{0xc4201cf6a0}
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 899[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 89a[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 89b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 89c[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 89d[0m @JS : TransactionLogger        :constructor()             > Resource {id=org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d}, [object Object], [object Object]
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 89e[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 89f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 8a0[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 8a1[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 8a2[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 8a3[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 8a4[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:48.359 UTC [Composer] Debug -> DEBU 8a5[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.360 UTC [Composer] Debug -> DEBU 8a6[0m @JS : TransactionLogger        :constructor()             < 
[36m2017-07-19 23:33:48.361 UTC [Composer] Debug -> DEBU 8a7[0m Entering NewDataCollection &{0xc4201cf6a0} &{0xc420028030 0xc420149000} 0xc4210ddbb0
[36m2017-07-19 23:33:48.361 UTC [Composer] Debug -> DEBU 8a8[0m Exiting NewDataCollection &{0xc4202fee40 0xc420149000 $sysdata}
[36m2017-07-19 23:33:48.361 UTC [Composer] Debug -> DEBU 8a9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.362 UTC [Composer] Debug -> DEBU 8aa[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc42008d900} 0xc4210bd520
[36m2017-07-19 23:33:48.362 UTC [Composer] Debug -> DEBU 8ab[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.362 UTC [Composer] Debug -> DEBU 8ac[0m Entering DataCollection.get &{0xc4201cf6a0}
[36m2017-07-19 23:33:48.362 UTC [Composer] Debug -> DEBU 8ad[0m @JS : EngineTransactions       :submitTransaction()       Parsed transaction, resolving it Resource {id=org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d}
[36m2017-07-19 23:33:48.362 UTC [Composer] Debug -> DEBU 8ae[0m Exiting NewDataCollection &{0xc420029150 0xc42008d900 $sysdata}
[36m2017-07-19 23:33:48.363 UTC [Composer] Debug -> DEBU 8af[0m @JS : Resolver                 :constructor()             > [object Object]
[36m2017-07-19 23:33:48.363 UTC [Composer] Debug -> DEBU 8b0[0m @JS : Resolver                 :constructor()             < 
[36m2017-07-19 23:33:48.363 UTC [Composer] Debug -> DEBU 8b1[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.363 UTC [Composer] Debug -> DEBU 8b2[0m @JS : Resolver                 :resolve()                 > Resource {id=org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d}
[36m2017-07-19 23:33:48.364 UTC [Composer] Debug -> DEBU 8b3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.364 UTC [Composer] Debug -> DEBU 8b4[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d}, [object Object]
[36m2017-07-19 23:33:48.364 UTC [Composer] Debug -> DEBU 8b5[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.365 UTC [Composer] Debug -> DEBU 8b6[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.365 UTC [Composer] Debug -> DEBU 8b7[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.365 UTC [Composer] Debug -> DEBU 8b8[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.365 UTC [Composer] Debug -> DEBU 8b9[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.365 UTC [Composer] Debug -> DEBU 8ba[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:48.366 UTC [Composer] Debug -> DEBU 8bb[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:48.367 UTC [Composer] Debug -> DEBU 8bc[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property commodity
[36m2017-07-19 23:33:48.368 UTC [Composer] Debug -> DEBU 8bd[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.368 UTC [Composer] Debug -> DEBU 8be[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.368 UTC [Composer] Debug -> DEBU 8bf[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Commodity#JURHULBMVL_c3}
[36m2017-07-19 23:33:48.368 UTC [Composer] Debug -> DEBU 8c0[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:48.368 UTC [Composer] Debug -> DEBU 8c1[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.368 UTC [Composer] Debug -> DEBU 8c2[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.368 UTC [Composer] Debug -> DEBU 8c3[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.369 UTC [Composer] Debug -> DEBU 8c4[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:48.369 UTC [Composer] Debug -> DEBU 8c5[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.374 UTC [Composer] Debug -> DEBU 8c6[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property newOwner
[36m2017-07-19 23:33:48.378 UTC [Composer] Debug -> DEBU 8c7[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.378 UTC [Composer] Debug -> DEBU 8c8[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:48.378 UTC [Composer] Debug -> DEBU 8c9[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.378 UTC [Composer] Debug -> DEBU 8ca[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Trader#JURHULBMVL_t0}
[36m2017-07-19 23:33:48.378 UTC [Composer] Debug -> DEBU 8cb[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.379 UTC [Composer] Debug -> DEBU 8cc[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.379 UTC [Composer] Debug -> DEBU 8cd[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.381 UTC [Composer] Debug -> DEBU 8ce[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:48.381 UTC [Composer] Debug -> DEBU 8cf[0m Entering Engine.handleCallback 0xc42038af60 &{0xc420144940}
[36m2017-07-19 23:33:48.381 UTC [Composer] Debug -> DEBU 8d0[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:48.381 UTC [Composer] Debug -> DEBU 8d1[0m Entering EventService.transactionCommit &{0xc4201ce220}
[36m2017-07-19 23:33:48.381 UTC [Composer] Debug -> DEBU 8d2[0m Exiting Composer.Invoke {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"} <nil>
[36m2017-07-19 23:33:48.381 UTC [Composer] Debug -> DEBU 8d3[0m Entering ComposerPool.Put &{0xc420142268 0xc4203e40f0 0xc420142458}
[36m2017-07-19 23:33:48.381 UTC [Composer] Debug -> DEBU 8d4[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:48.381 UTC [Composer] Debug -> DEBU 8d5[0m Exiting Chaincode.Invoke 200  {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"}
[36m2017-07-19 23:33:48.383 UTC [Composer] Debug -> DEBU 8d6[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:48.393 UTC [Composer] Debug -> DEBU 8d7[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:48.393 UTC [Composer] Debug -> DEBU 8d8[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:48.393 UTC [Composer] Debug -> DEBU 8d9[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:48.393 UTC [Composer] Debug -> DEBU 8da[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:48.395 UTC [Composer] Debug -> DEBU 8db[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property transactionId
[36m2017-07-19 23:33:48.395 UTC [Composer] Debug -> DEBU 8dc[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 44ed880c-9906-4349-998a-c2fad16e932d
[36m2017-07-19 23:33:48.397 UTC [Composer] Debug -> DEBU 8dd[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:48.397 UTC [Composer] Debug -> DEBU 8de[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property timestamp
[36m2017-07-19 23:33:48.400 UTC [Composer] Debug -> DEBU 8df[0m Entering getLogging 0xc42112f860
[36m2017-07-19 23:33:48.402 UTC [Composer] Debug -> DEBU 8e0[0m Entering Chaincode.Invoke 0xc42112f850
[36m2017-07-19 23:33:48.402 UTC [Composer] Debug -> DEBU 8e1[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:48.402 UTC [Composer] Debug -> DEBU 8e2[0m Exiting ComposerPool.Get &{0xc420150140 0xc42027d400 0xc4202fe058}
[36m2017-07-19 23:33:48.402 UTC [Composer] Debug -> DEBU 8e3[0m Entering Composer.Invoke 0xc42112fcc0 addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"NOGNXFTMNQ_t5","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:48.402 UTC [Composer] Debug -> DEBU 8e4[0m Entering NewContext &{0xc420140e60} &{0xc420150140} 0xc42112fdb0
[36m2017-07-19 23:33:48.402 UTC [Composer] Debug -> DEBU 8e5[0m Entering NewDataService &{0xc420140e60} &{0xc420150140 <nil> <nil> <nil> <nil>} 0xc42112fe70
[36m2017-07-19 23:33:48.402 UTC [Composer] Debug -> DEBU 8e6[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 2017-07-19 23:33:41.060+00:00
[36m2017-07-19 23:33:48.403 UTC [Composer] Debug -> DEBU 8e7[0m Exiting NewDataService &{0xc420150140 0xc421160a80}
[36m2017-07-19 23:33:48.403 UTC [Composer] Debug -> DEBU 8e8[0m Entering NewIdentityService &{0xc420140e60} &{0xc420150140 0xc421115ea0 <nil> <nil> <nil>} 0xc421176020
[36m2017-07-19 23:33:48.404 UTC [Composer] Debug -> DEBU 8e9[0m Exiting NewIdentityService &{0xc420150140 0xc421160a80}
[36m2017-07-19 23:33:48.404 UTC [Composer] Debug -> DEBU 8ea[0m Entering NewEventService &{0xc420140e60} &{0xc420150140 0xc421115ea0 0xc421115f80 <nil> <nil>} 0xc421176190
[36m2017-07-19 23:33:48.404 UTC [Composer] Debug -> DEBU 8eb[0m Exiting NewEventServce &{0xc420150140 0xc421160a80}
[36m2017-07-19 23:33:48.404 UTC [Composer] Debug -> DEBU 8ec[0m Entering HTTPService &{0xc420140e60} &{0xc420150140 0xc421115ea0 0xc421115f80 0xc42117a060 <nil>} 0xc421176300
[36m2017-07-19 23:33:48.404 UTC [Composer] Debug -> DEBU 8ed[0m Exiting HTTPService &{0xc420150140 0xc421160a80}
[36m2017-07-19 23:33:48.404 UTC [Composer] Debug -> DEBU 8ee[0m Exiting NewContext &{0xc420150140 0xc421115ea0 0xc421115f80 0xc42117a060 0xc42117a140}
[36m2017-07-19 23:33:48.404 UTC [Composer] Debug -> DEBU 8ef[0m Entering Engine.Invoke &{0xc420150140 0xc421115ea0 0xc421115f80 0xc42117a060 0xc42117a140} addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"NOGNXFTMNQ_t5","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:48.405 UTC [Composer] Debug -> DEBU 8f0[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"NOGNXFTMNQ_t5","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:48.405 UTC [Composer] Debug -> DEBU 8f1[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.405 UTC [Composer] Debug -> DEBU 8f2[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.405 UTC [Composer] Debug -> DEBU 8f3[0m Exiting Engine.Invoke 0xc4210b5aa0
[36m2017-07-19 23:33:48.405 UTC [Composer] Debug -> DEBU 8f4[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.405 UTC [Composer] Debug -> DEBU 8f5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.405 UTC [Composer] Debug -> DEBU 8f6[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:48.405 UTC [Composer] Debug -> DEBU 8f7[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.406 UTC [Composer] Debug -> DEBU 8f8[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.406 UTC [Composer] Debug -> DEBU 8f9[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.406 UTC [Composer] Debug -> DEBU 8fa[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:48.406 UTC [Composer] Debug -> DEBU 8fb[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.413 UTC [Composer] Debug -> DEBU 8fc[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Commodity#JURHULBMVL_c3}, [object Object]
[36m2017-07-19 23:33:48.413 UTC [Composer] Debug -> DEBU 8fd[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Commodity#JURHULBMVL_c3}
[36m2017-07-19 23:33:48.414 UTC [Composer] Debug -> DEBU 8fe[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.414 UTC [Composer] Debug -> DEBU 8ff[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.414 UTC [Composer] Debug -> DEBU 900[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.414 UTC [Composer] Debug -> DEBU 901[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.414 UTC [Composer] Debug -> DEBU 902[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.414 UTC [Composer] Debug -> DEBU 903[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.415 UTC [Composer] Debug -> DEBU 904[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Commodity super=Asset enum=false abstract=false}
[36m2017-07-19 23:33:48.417 UTC [Composer] Debug -> DEBU 905[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421160a80} 0xc42116a180
[36m2017-07-19 23:33:48.417 UTC [Composer] Debug -> DEBU 906[0m Exiting NewDataCollection &{0xc4202fef58 0xc421160a80 $sysdata}
[36m2017-07-19 23:33:48.417 UTC [Composer] Debug -> DEBU 907[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.419 UTC [Composer] Debug -> DEBU 908[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.419 UTC [Composer] Debug -> DEBU 909[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.420 UTC [Composer] Debug -> DEBU 90a[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.420 UTC [Composer] Debug -> DEBU 90b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.420 UTC [Composer] Debug -> DEBU 90c[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.420 UTC [Composer] Debug -> DEBU 90d[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:48.422 UTC [Composer] Debug -> DEBU 90e[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.425 UTC [Composer] Debug -> DEBU 90f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.425 UTC [Composer] Debug -> DEBU 910[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.425 UTC [Composer] Debug -> DEBU 911[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.426 UTC [Composer] Debug -> DEBU 912[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.426 UTC [Composer] Debug -> DEBU 914[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:48.426 UTC [Composer] Debug -> DEBU 913[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.426 UTC [Composer] Debug -> DEBU 915[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.427 UTC [Composer] Debug -> DEBU 916[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.427 UTC [Composer] Debug -> DEBU 917[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.427 UTC [Composer] Debug -> DEBU 918[0m Entering NewContainer &{0xc4202a2680}
[36m2017-07-19 23:33:48.427 UTC [Composer] Debug -> DEBU 919[0m Entering NewLoggingService &{0xc4202a2680} &{0xc420150170 <nil>} 0xc421142fe0
[36m2017-07-19 23:33:48.428 UTC [Composer] Debug -> DEBU 91a[0m Exiting NewLoggingService &{0xc420150170 <nil>}
[36m2017-07-19 23:33:48.428 UTC [Composer] Debug -> DEBU 91b[0m Exiting NewContainer &{0xc420150170 0xc421196020}
[36m2017-07-19 23:33:48.428 UTC [Composer] Debug -> DEBU 91c[0m Entering NewEngine &{0xc4202a2680} &{0xc420150170 0xc421196020}
[36m2017-07-19 23:33:48.428 UTC [Composer] Debug -> DEBU 91d[0m Entering Container.getLoggingService &{0xc4202a2680}
[36m2017-07-19 23:33:48.428 UTC [Composer] Debug -> DEBU 91e[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.428 UTC [Composer] Debug -> DEBU 91f[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.429 UTC [Composer] Debug -> DEBU 920[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc42116af70
[36m2017-07-19 23:33:48.429 UTC [Composer] Debug -> DEBU 921[0m Exiting NewDataCollection &{0xc420150e88 0xc42055f200 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:48.429 UTC [Composer] Debug -> DEBU 922[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.430 UTC [Composer] Debug -> DEBU 923[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.430 UTC [Composer] Debug -> DEBU 924[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.431 UTC [Composer] Debug -> DEBU 925[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 926[0m Exiting NewEngine &{0xc420150170}
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 927[0m Exiting NewComposer &{0xc420150170 0xc421142fd0 0xc420029268}
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 928[0m Exiting ComposerPool.Get &{0xc420150170 0xc421142fd0 0xc420029268}
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 929[0m Entering Composer.Invoke 0xc421143830 getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 92a[0m Entering NewContext &{0xc4202a2680} &{0xc420150170} 0xc421143920
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 92b[0m Entering NewDataService &{0xc4202a2680} &{0xc420150170 <nil> <nil> <nil> <nil>} 0xc4211439d0
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 92c[0m Exiting NewDataService &{0xc420150170 0xc4202a4200}
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 92d[0m Entering NewIdentityService &{0xc4202a2680} &{0xc420150170 0xc4211965c0 <nil> <nil> <nil>} 0xc421143b80
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 92e[0m Exiting NewIdentityService &{0xc420150170 0xc4202a4200}
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 92f[0m Entering NewEventService &{0xc4202a2680} &{0xc420150170 0xc4211965c0 0xc4211966a0 <nil> <nil>} 0xc421143cf0
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 930[0m Exiting NewEventServce &{0xc420150170 0xc4202a4200}
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 931[0m Entering HTTPService &{0xc4202a2680} &{0xc420150170 0xc4211965c0 0xc4211966a0 0xc421196780 <nil>} 0xc421143e70
[36m2017-07-19 23:33:48.434 UTC [Composer] Debug -> DEBU 932[0m Exiting HTTPService &{0xc420150170 0xc4202a4200}
[36m2017-07-19 23:33:48.435 UTC [Composer] Debug -> DEBU 933[0m Exiting NewContext &{0xc420150170 0xc4211965c0 0xc4211966a0 0xc421196780 0xc421196860}
[36m2017-07-19 23:33:48.435 UTC [Composer] Debug -> DEBU 934[0m Entering Engine.Invoke &{0xc420150170 0xc4211965c0 0xc4211966a0 0xc421196780 0xc421196860} getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.435 UTC [Composer] Debug -> DEBU 935[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.435 UTC [Composer] Debug -> DEBU 936[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:48.435 UTC [Composer] Debug -> DEBU 937[0m Entering Engine.handleCallback 0xc4203855c0 &{0xc4201ce220}
[36m2017-07-19 23:33:48.435 UTC [Composer] Debug -> DEBU 938[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.436 UTC [Composer] Debug -> DEBU 939[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.436 UTC [Composer] Debug -> DEBU 93a[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.436 UTC [Composer] Debug -> DEBU 93b[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.436 UTC [Composer] Debug -> DEBU 93c[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 93d[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 93e[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 93f[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 940[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 941[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 942[0m Exiting Composer.Invoke [{"type":"Transaction","id":"default","name":"Default Transaction Registry"}] <nil>
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 943[0m Entering ComposerPool.Put &{0xc420028000 0xc4203ac870 0xc420150318}
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 944[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 945[0m Exiting Chaincode.Invoke 200  [{"type":"Transaction","id":"default","name":"Default Transaction Registry"}]
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 946[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 947[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 948[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 949[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.437 UTC [Composer] Debug -> DEBU 94a[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.438 UTC [Composer] Debug -> DEBU 94b[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.439 UTC [Composer] Debug -> DEBU 94c[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.439 UTC [Composer] Debug -> DEBU 94d[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:48.440 UTC [Composer] Debug -> DEBU 94e[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry JURHULBMVL_c3
[36m2017-07-19 23:33:48.441 UTC [Composer] Debug -> DEBU 94f[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.441 UTC [Composer] Debug -> DEBU 950[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421160a80} 0xc42112daa0
[36m2017-07-19 23:33:48.441 UTC [Composer] Debug -> DEBU 951[0m Exiting NewDataCollection &{0xc4200292d8 0xc421160a80 $sysdata}
[36m2017-07-19 23:33:48.441 UTC [Composer] Debug -> DEBU 952[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.441 UTC [Composer] Debug -> DEBU 953[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.441 UTC [Composer] Debug -> DEBU 954[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:48.442 UTC [Composer] Debug -> DEBU 955[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.444 UTC [Composer] Debug -> DEBU 956[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.446 UTC [Composer] Debug -> DEBU 957[0m Exiting Engine.Invoke 0xc42112ade0
[36m2017-07-19 23:33:48.447 UTC [Composer] Debug -> DEBU 958[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.447 UTC [Composer] Debug -> DEBU 959[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.448 UTC [Composer] Debug -> DEBU 95a[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.448 UTC [Composer] Debug -> DEBU 95b[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.448 UTC [Composer] Debug -> DEBU 95c[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.448 UTC [Composer] Debug -> DEBU 95d[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:48.448 UTC [Composer] Debug -> DEBU 95e[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.448 UTC [Composer] Debug -> DEBU 95f[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.449 UTC [Composer] Debug -> DEBU 960[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.449 UTC [Composer] Debug -> DEBU 961[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.449 UTC [Composer] Debug -> DEBU 962[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.449 UTC [Composer] Debug -> DEBU 963[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.449 UTC [Composer] Debug -> DEBU 964[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.449 UTC [Composer] Debug -> DEBU 966[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.449 UTC [Composer] Debug -> DEBU 965[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.449 UTC [Composer] Debug -> DEBU 967[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.450 UTC [Composer] Debug -> DEBU 968[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.450 UTC [Composer] Debug -> DEBU 969[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.450 UTC [Composer] Debug -> DEBU 96b[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.451 UTC [Composer] Debug -> DEBU 96c[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.451 UTC [Composer] Debug -> DEBU 96d[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:48.451 UTC [Composer] Debug -> DEBU 96e[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:48.451 UTC [Composer] Debug -> DEBU 96f[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:48.451 UTC [Composer] Debug -> DEBU 970[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:48.451 UTC [Composer] Debug -> DEBU 971[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 972[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 973[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 974[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 975[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 976[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.450 UTC [Composer] Debug -> DEBU 96a[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 977[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 978[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 979[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 97a[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.452 UTC [Composer] Debug -> DEBU 97b[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 97c[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 97d[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 97e[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 97f[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 980[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 984[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 981[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 985[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 987[0m Entering NewContainer &{0xc4202a2640}
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 986[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421160a80} 0xc4211c8340
[36m2017-07-19 23:33:48.454 UTC [Composer] Debug -> DEBU 989[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 983[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 982[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.454 UTC [Composer] Debug -> DEBU 98b[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.454 UTC [Composer] Debug -> DEBU 98a[0m Exiting NewDataCollection &{0xc420143188 0xc421160a80 $sysdata}
[36m2017-07-19 23:33:48.454 UTC [Composer] Debug -> DEBU 98d[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.453 UTC [Composer] Debug -> DEBU 988[0m Entering NewLoggingService &{0xc4202a2640} &{0xc420150168 <nil>} 0xc421177200
[36m2017-07-19 23:33:48.454 UTC [Composer] Debug -> DEBU 98c[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:48.454 UTC [Composer] Debug -> DEBU 98e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.454 UTC [Composer] Debug -> DEBU 98f[0m Entering DataService.getCollection &{0xc4202a2680}
[36m2017-07-19 23:33:48.454 UTC [Composer] Debug -> DEBU 990[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.455 UTC [Composer] Debug -> DEBU 991[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.455 UTC [Composer] Debug -> DEBU 992[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 993[0m Exiting NewLoggingService &{0xc420150168 <nil>}
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 994[0m Exiting NewContainer &{0xc420150168 0xc42117aca0}
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 995[0m Entering NewEngine &{0xc4202a2640} &{0xc420150168 0xc42117aca0}
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 996[0m Entering Container.getLoggingService &{0xc4202a2640}
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 997[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 998[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 999[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 99a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.456 UTC [Composer] Debug -> DEBU 99b[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:48.458 UTC [Composer] Debug -> DEBU 99c[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.458 UTC [Composer] Debug -> DEBU 99d[0m Entering getLogging 0xc4211c8960
[36m2017-07-19 23:33:48.458 UTC [Composer] Debug -> DEBU 99e[0m Entering NewDataCollection &{0xc4202a2680} &{0xc420150170 0xc4202a4200} 0xc4211a55f0
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 99f[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420148900} 0xc4211c8a80
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 9a0[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 9a1[0m Exiting NewDataCollection &{0xc420143228 0xc420148900 $sysregistries}
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 9a3[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 9a4[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 9a2[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 9a5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 9a6[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.459 UTC [Composer] Debug -> DEBU 9a7[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:48.460 UTC [Composer] Debug -> DEBU 9a8[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.460 UTC [Composer] Debug -> DEBU 9a9[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:48.460 UTC [Composer] Debug -> DEBU 9aa[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.460 UTC [Composer] Debug -> DEBU 9ac[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.460 UTC [Composer] Debug -> DEBU 9ad[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.460 UTC [Composer] Debug -> DEBU 9ae[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:48.460 UTC [Composer] Debug -> DEBU 9ab[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.461 UTC [Composer] Debug -> DEBU 9af[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:48.461 UTC [Composer] Debug -> DEBU 9b0[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.461 UTC [Composer] Debug -> DEBU 9b1[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.462 UTC [Composer] Debug -> DEBU 9b2[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9b4[0m Entering Chaincode.Invoke 0xc4211c8950
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9b5[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9b6[0m Exiting ComposerPool.Get &{0xc420142268 0xc4203e40f0 0xc420142458}
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9b7[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420148900} 0xc4211ea070
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9b9[0m Exiting NewDataCollection &{0xc420143268 0xc420148900 $sysidentities}
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9ba[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc420149300} 0xc4211c8dc0
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9b8[0m Entering Composer.Invoke 0xc4211f2020 submitTransaction [default {"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#TOSEDVQKUV_c1","newOwner":"resource:org.example.mynetwork.Trader#TOSEDVQKUV_t1","transactionId":"09403b58-3126-45d5-b650-9f4ca0ec3a81","timestamp":"2017-07-19T23:33:43.372Z"}]
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9bc[0m Entering NewContext &{0xc420144940} &{0xc420142268} 0xc4211ea2f0
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9bd[0m Entering NewDataService &{0xc420144940} &{0xc420142268 <nil> <nil> <nil> <nil>} 0xc4211ea3b0
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9be[0m Exiting NewDataCollection &{0xc420150f70 0xc420149300 $sysdata}
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9bf[0m Exiting NewDataService &{0xc420142268 0xc4211c6580}
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c0[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9bb[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c1[0m Entering NewIdentityService &{0xc420144940} &{0xc420142268 0xc421187f80 <nil> <nil> <nil>} 0xc4211ea560
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c2[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c3[0m Exiting NewIdentityService &{0xc420142268 0xc4211c6580}
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c4[0m Entering NewEventService &{0xc420144940} &{0xc420142268 0xc421187f80 0xc421197de0 <nil> <nil>} 0xc4211f21c0
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c5[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c7[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c8[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9c9[0m Entering IdentityService.getCurrentUserID &{0xc420141340}
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9ca[0m Entering extractNameFromCreator 0xc4211ea980
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9cb[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.463 UTC [Composer] Debug -> DEBU 9c6[0m Exiting NewEventServce &{0xc420142268 0xc4211c6580}
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9cc[0m Entering HTTPService &{0xc420144940} &{0xc420142268 0xc421187f80 0xc421197de0 0xc421197ec0 <nil>} 0xc4211c9040
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9cd[0m Exiting HTTPService &{0xc420142268 0xc4211c6580}
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9ce[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9cf[0m Common Name admin
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9d0[0m Exiting NewDataCollection &{0xc420029370 0xc4202a4200 $sysdata}
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9d1[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9d2[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9d3[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.464 UTC [Composer] Debug -> DEBU 9d4[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.465 UTC [Composer] Debug -> DEBU 9d5[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.465 UTC [Composer] Debug -> DEBU 9d6[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.465 UTC [Composer] Debug -> DEBU 9d7[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.469 UTC [Composer] Debug -> DEBU 9d8[0m Exiting NewContext &{0xc420142268 0xc421187f80 0xc421197de0 0xc421197ec0 0xc4211b0d40}
[36m2017-07-19 23:33:48.469 UTC [Composer] Debug -> DEBU 9d9[0m Entering Engine.Invoke &{0xc420142268 0xc421187f80 0xc421197de0 0xc421197ec0 0xc4211b0d40} submitTransaction [default {"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#TOSEDVQKUV_c1","newOwner":"resource:org.example.mynetwork.Trader#TOSEDVQKUV_t1","transactionId":"09403b58-3126-45d5-b650-9f4ca0ec3a81","timestamp":"2017-07-19T23:33:43.372Z"}]
[36m2017-07-19 23:33:48.462 UTC [Composer] Debug -> DEBU 9b3[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.469 UTC [Composer] Debug -> DEBU 9da[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#JURHULBMVL_c3, READ
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9db[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9dc[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9dd[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9de[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9df[0m Exiting NewEngine &{0xc420150168}
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e0[0m Exiting NewComposer &{0xc420150168 0xc4211771f0 0xc4202fefa8}
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e1[0m Exiting ComposerPool.Get &{0xc420150168 0xc4211771f0 0xc4202fefa8}
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e2[0m Entering Composer.Invoke 0xc421208000 getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e3[0m Entering NewContext &{0xc4202a2640} &{0xc420150168} 0xc4212080f0
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e4[0m Entering NewDataService &{0xc4202a2640} &{0xc420150168 <nil> <nil> <nil> <nil>} 0xc4212081a0
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e5[0m Exiting NewDataService &{0xc420150168 0xc42008de00}
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e6[0m Entering NewIdentityService &{0xc4202a2640} &{0xc420150168 0xc42117b480 <nil> <nil> <nil>} 0xc421208350
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e7[0m Exiting NewIdentityService &{0xc420150168 0xc42008de00}
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e8[0m Entering NewEventService &{0xc4202a2640} &{0xc420150168 0xc42117b480 0xc42117b560 <nil> <nil>} 0xc4212084c0
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9e9[0m Exiting NewEventServce &{0xc420150168 0xc42008de00}
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9ea[0m Entering HTTPService &{0xc4202a2640} &{0xc420150168 0xc42117b480 0xc42117b560 0xc42117b640 <nil>} 0xc421208640
[36m2017-07-19 23:33:48.470 UTC [Composer] Debug -> DEBU 9eb[0m Exiting HTTPService &{0xc420150168 0xc42008de00}
[36m2017-07-19 23:33:48.471 UTC [Composer] Debug -> DEBU 9ed[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:48.471 UTC [Composer] Debug -> DEBU 9ec[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.471 UTC [Composer] Debug -> DEBU 9ee[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.471 UTC [Composer] Debug -> DEBU 9ef[0m @JS : Engine                   :invoke()                  > [object Object], submitTransaction, default,{"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#TOSEDVQKUV_c1","newOwner":"resource:org.example.mynetwork.Trader#TOSEDVQKUV_t1","transactionId":"09403b58-3126-45d5-b650-9f4ca0ec3a81","timestamp":"2017-07-19T23:33:43.372Z"}
[36m2017-07-19 23:33:48.471 UTC [Composer] Debug -> DEBU 9f0[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.472 UTC [Composer] Debug -> DEBU 9f1[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.472 UTC [Composer] Debug -> DEBU 9f2[0m Entering DataCollection.get &{0xc4202a2680}
[36m2017-07-19 23:33:48.472 UTC [Composer] Debug -> DEBU 9f3[0m Exiting NewContext &{0xc420150168 0xc42117b480 0xc42117b560 0xc42117b640 0xc42117b720}
[36m2017-07-19 23:33:48.472 UTC [Composer] Debug -> DEBU 9f4[0m Entering Engine.Invoke &{0xc420150168 0xc42117b480 0xc42117b560 0xc42117b640 0xc42117b720} getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.472 UTC [Composer] Debug -> DEBU 9f5[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:48.472 UTC [Composer] Debug -> DEBU 9f6[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.473 UTC [Composer] Debug -> DEBU 9f7[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.474 UTC [Composer] Debug -> DEBU 9f8[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.474 UTC [Composer] Debug -> DEBU 9f9[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU 9fa[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU 9fb[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU 9fd[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU 9fc[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU 9fe[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU 9ff[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU a00[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU a01[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU a03[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU a04[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU a05[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU a06[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU a07[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.475 UTC [Composer] Debug -> DEBU a02[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.476 UTC [Composer] Debug -> DEBU a08[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.476 UTC [Composer] Debug -> DEBU a09[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:48.477 UTC [Composer] Debug -> DEBU a0b[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.476 UTC [Composer] Debug -> DEBU a0a[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:48.477 UTC [Composer] Debug -> DEBU a0c[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.478 UTC [Composer] Debug -> DEBU a0d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.478 UTC [Composer] Debug -> DEBU a0e[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.478 UTC [Composer] Debug -> DEBU a0f[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.478 UTC [Composer] Debug -> DEBU a10[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.478 UTC [Composer] Debug -> DEBU a11[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.479 UTC [Composer] Debug -> DEBU a12[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc420149900} 0xc4211c9860
[36m2017-07-19 23:33:48.479 UTC [Composer] Debug -> DEBU a13[0m Exiting NewDataCollection &{0xc4202ff050 0xc420149900 $sysdata}
[36m2017-07-19 23:33:48.479 UTC [Composer] Debug -> DEBU a14[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.480 UTC [Composer] Debug -> DEBU a15[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:48.480 UTC [Composer] Debug -> DEBU a16[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.480 UTC [Composer] Debug -> DEBU a17[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.482 UTC [Composer] Debug -> DEBU a18[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a19[0m @JS : Resolver                 :resolveRelationship()     Got resource from registry, resolving 
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a1a[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a1b[0m Entering NewContainer &{0xc4201450e0}
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a1c[0m Entering NewLoggingService &{0xc4201450e0} &{0xc420142270 <nil>} 0xc421232540
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a1d[0m Exiting NewLoggingService &{0xc420142270 <nil>}
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a1e[0m Exiting NewContainer &{0xc420142270 0xc4211f5e20}
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a1f[0m Entering NewEngine &{0xc4201450e0} &{0xc420142270 0xc4211f5e20}
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a20[0m Entering Container.getLoggingService &{0xc4201450e0}
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a21[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a22[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:48.484 UTC [Composer] Debug -> DEBU a23[0m Exiting Engine.Invoke 0xc4211e84e0
[36m2017-07-19 23:33:48.485 UTC [Composer] Debug -> DEBU a24[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.485 UTC [Composer] Debug -> DEBU a25[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:48.485 UTC [Composer] Debug -> DEBU a26[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Commodity#JURHULBMVL_c3}, [object Object]
[36m2017-07-19 23:33:48.486 UTC [Composer] Debug -> DEBU a27[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.489 UTC [Composer] Debug -> DEBU a28[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.489 UTC [Composer] Debug -> DEBU a29[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.489 UTC [Composer] Debug -> DEBU a2a[0m Exiting NewEngine &{0xc420142270}
[36m2017-07-19 23:33:48.489 UTC [Composer] Debug -> DEBU a2b[0m Exiting NewComposer &{0xc420142270 0xc421232530 0xc420143368}
[36m2017-07-19 23:33:48.489 UTC [Composer] Debug -> DEBU a2c[0m Exiting ComposerPool.Get &{0xc420142270 0xc421232530 0xc420143368}
[36m2017-07-19 23:33:48.489 UTC [Composer] Debug -> DEBU a2d[0m Entering Composer.Invoke 0xc421232e60 getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:48.489 UTC [Composer] Debug -> DEBU a2e[0m Entering NewContext &{0xc4201450e0} &{0xc420142270} 0xc421232f40
[36m2017-07-19 23:33:48.489 UTC [Composer] Debug -> DEBU a2f[0m Entering NewDataService &{0xc4201450e0} &{0xc420142270 <nil> <nil> <nil> <nil>} 0xc421233000
[36m2017-07-19 23:33:48.491 UTC [Composer] Debug -> DEBU a30[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.491 UTC [Composer] Debug -> DEBU a31[0m Exiting NewDataService &{0xc420142270 0xc420149600}
[36m2017-07-19 23:33:48.491 UTC [Composer] Debug -> DEBU a32[0m Entering NewIdentityService &{0xc4201450e0} &{0xc420142270 0xc42123c400 <nil> <nil> <nil>} 0xc4212331b0
[36m2017-07-19 23:33:48.491 UTC [Composer] Debug -> DEBU a33[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.491 UTC [Composer] Debug -> DEBU a34[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.491 UTC [Composer] Debug -> DEBU a35[0m Exiting NewIdentityService &{0xc420142270 0xc420149600}
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a37[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a36[0m Entering NewEventService &{0xc4201450e0} &{0xc420142270 0xc42123c400 0xc42123c4e0 <nil> <nil>} 0xc4211c9cf0
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a38[0m Exiting Composer.createJavaScript
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a39[0m Exiting NewEventServce &{0xc420142270 0xc420149600}
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a3b[0m Entering HTTPService &{0xc4201450e0} &{0xc420142270 0xc42123c400 0xc42123c4e0 0xc4211b1620 <nil>} 0xc4211c9e70
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a3a[0m Entering NewContainer &{0xc4202a2220}
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a3c[0m Entering NewLoggingService &{0xc4202a2220} &{0xc420150158 <nil>} 0xc4212096a0
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a3d[0m Exiting HTTPService &{0xc420142270 0xc420149600}
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a3e[0m Exiting NewLoggingService &{0xc420150158 <nil>}
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a3f[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a40[0m Exiting NewContext &{0xc420142270 0xc42123c400 0xc42123c4e0 0xc4211b1620 0xc4211b1700}
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a41[0m Entering Engine.Invoke &{0xc420142270 0xc42123c400 0xc42123c4e0 0xc4211b1620 0xc4211b1700} getRegistry [Participant org.example.mynetwork.Trader]
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a42[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a43[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property tradingSymbol
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a44[0m Exiting Engine.Invoke 0xc4211a6720
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a45[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a46[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.492 UTC [Composer] Debug -> DEBU a47[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.493 UTC [Composer] Debug -> DEBU a48[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.493 UTC [Composer] Debug -> DEBU a49[0m Exiting Engine.Invoke 0xc4211e8ba0
[36m2017-07-19 23:33:48.493 UTC [Composer] Debug -> DEBU a4a[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.493 UTC [Composer] Debug -> DEBU a4b[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.493 UTC [Composer] Debug -> DEBU a4c[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.493 UTC [Composer] Debug -> DEBU a4d[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.493 UTC [Composer] Debug -> DEBU a4e[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a4f[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a50[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a51[0m Exiting NewContainer &{0xc420150158 0xc42123e0e0}
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a52[0m Entering NewEngine &{0xc4202a2220} &{0xc420150158 0xc42123e0e0}
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a53[0m Entering Container.getLoggingService &{0xc4202a2220}
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a54[0m Exiting Container.getLoggingService 1
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a55[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a56[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a57[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.494 UTC [Composer] Debug -> DEBU a58[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a59[0m @JS : Engine                   :constructor()             > 
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a5a[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring JURHULBMVL_c3
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a5b[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a5d[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property description
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a5e[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Sample Commodity
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a5c[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a60[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a5f[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.495 UTC [Composer] Debug -> DEBU a61[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.496 UTC [Composer] Debug -> DEBU a62[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.496 UTC [Composer] Debug -> DEBU a63[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.496 UTC [Composer] Debug -> DEBU a64[0m @JS : Engine                   :constructor()             < 
[36m2017-07-19 23:33:48.497 UTC [Composer] Debug -> DEBU a65[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property mainExchange
[36m2017-07-19 23:33:48.497 UTC [Composer] Debug -> DEBU a66[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.497 UTC [Composer] Debug -> DEBU a67[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:48.497 UTC [Composer] Debug -> DEBU a68[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.497 UTC [Composer] Debug -> DEBU a6a[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring IDK
[36m2017-07-19 23:33:48.497 UTC [Composer] Debug -> DEBU a69[0m Exiting NewEngine &{0xc420150158}
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a6b[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a6d[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc4212521a0
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a6e[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a6f[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a70[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a71[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a72[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a73[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a6c[0m Exiting NewComposer &{0xc420150158 0xc421209690 0xc4202ff098}
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a74[0m Exiting ComposerPool.Get &{0xc420150158 0xc421209690 0xc4202ff098}
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a75[0m Entering Composer.Invoke 0xc421240cf0 getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a76[0m Entering NewContext &{0xc4202a2220} &{0xc420150158} 0xc421240de0
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a77[0m Entering NewDataService &{0xc4202a2220} &{0xc420150158 <nil> <nil> <nil> <nil>} 0xc421240e90
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a78[0m Exiting NewDataService &{0xc420150158 0xc42013b600}
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a79[0m Entering NewIdentityService &{0xc4202a2220} &{0xc420150158 0xc4212561c0 <nil> <nil> <nil>} 0xc421241040
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a7a[0m Exiting NewIdentityService &{0xc420150158 0xc42013b600}
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a7c[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property quantity
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a7d[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a7f[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a80[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 0
[36m2017-07-19 23:33:48.498 UTC [Composer] Debug -> DEBU a7b[0m Entering NewEventService &{0xc4202a2220} &{0xc420150158 0xc4212561c0 0xc4212562a0 <nil> <nil>} 0xc4212411b0
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a81[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a82[0m Exiting NewEventServce &{0xc420150158 0xc42013b600}
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a83[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a84[0m Entering HTTPService &{0xc4202a2220} &{0xc420150158 0xc4212561c0 0xc4212562a0 0xc42123e780 <nil>} 0xc4212524f0
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a85[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a87[0m Entering DataService.getCollection &{0xc4202a2640}
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a86[0m Exiting HTTPService &{0xc420150158 0xc42013b600}
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a88[0m Exiting NewContext &{0xc420150158 0xc4212561c0 0xc4212562a0 0xc42123e780 0xc42123e860}
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a7e[0m Exiting NewDataCollection &{0xc4201433e0 0xc4211c6580 $sysdata}
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a89[0m Entering Engine.Invoke &{0xc420150158 0xc4212561c0 0xc4212562a0 0xc42123e780 0xc42123e860} getRegistry [Asset org.example.mynetwork.Commodity]
[36m2017-07-19 23:33:48.499 UTC [Composer] Debug -> DEBU a8a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.501 UTC [Composer] Debug -> DEBU a8b[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a8c[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc420149600} 0xc42126c030
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a8d[0m Entering NewDataCollection &{0xc4202a2640} &{0xc420150168 0xc42008de00} 0xc421252a40
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a8e[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a8f[0m Exiting NewDataCollection &{0xc420143410 0xc42008de00 $sysdata}
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a93[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a94[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.503 UTC [Composer] Debug -> DEBU a95[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.503 UTC [Composer] Debug -> DEBU a96[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a91[0m @JS : Engine                   :invoke()                  > [object Object], getRegistry, Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a92[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property owner
[36m2017-07-19 23:33:48.502 UTC [Composer] Debug -> DEBU a90[0m Exiting NewDataCollection &{0xc420151088 0xc420149600 $sysdata}
[36m2017-07-19 23:33:48.503 UTC [Composer] Debug -> DEBU a97[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.504 UTC [Composer] Debug -> DEBU a98[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.504 UTC [Composer] Debug -> DEBU a99[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Trader#JURHULBMVL_t1}
[36m2017-07-19 23:33:48.504 UTC [Composer] Debug -> DEBU a9a[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.505 UTC [Composer] Debug -> DEBU a9b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.505 UTC [Composer] Debug -> DEBU a9c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.505 UTC [Composer] Debug -> DEBU a9d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.505 UTC [Composer] Debug -> DEBU a9e[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.505 UTC [Composer] Debug -> DEBU a9f[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.505 UTC [Composer] Debug -> DEBU aa0[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.505 UTC [Composer] Debug -> DEBU aa1[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.506 UTC [Composer] Debug -> DEBU aa2[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.506 UTC [Composer] Debug -> DEBU aa3[0m Entering DataCollection.get &{0xc4202a2640}
[36m2017-07-19 23:33:48.506 UTC [Composer] Debug -> DEBU aa4[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:48.506 UTC [Composer] Debug -> DEBU aa5[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.506 UTC [Composer] Debug -> DEBU aa6[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.508 UTC [Composer] Debug -> DEBU aa7[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.510 UTC [Composer] Debug -> DEBU aa8[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:48.510 UTC [Composer] Debug -> DEBU aa9[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.510 UTC [Composer] Debug -> DEBU aaa[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420148900} 0xc421252e50
[36m2017-07-19 23:33:48.510 UTC [Composer] Debug -> DEBU aab[0m Exiting NewDataCollection &{0xc4201510b8 0xc420148900 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:48.510 UTC [Composer] Debug -> DEBU aac[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.510 UTC [Composer] Debug -> DEBU aae[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.510 UTC [Composer] Debug -> DEBU aaf[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.511 UTC [Composer] Debug -> DEBU ab0[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.511 UTC [Composer] Debug -> DEBU ab1[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.511 UTC [Composer] Debug -> DEBU ab2[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:48.511 UTC [Composer] Debug -> DEBU ab3[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.510 UTC [Composer] Debug -> DEBU aad[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Trader#JURHULBMVL_t1}, [object Object]
[36m2017-07-19 23:33:48.511 UTC [Composer] Debug -> DEBU ab4[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.511 UTC [Composer] Debug -> DEBU ab5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.511 UTC [Composer] Debug -> DEBU ab6[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.511 UTC [Composer] Debug -> DEBU ab7[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.512 UTC [Composer] Debug -> DEBU ab8[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.512 UTC [Composer] Debug -> DEBU ab9[0m Exiting Engine.Invoke 0xc4211a6f00
[36m2017-07-19 23:33:48.512 UTC [Composer] Debug -> DEBU aba[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:48.513 UTC [Composer] Debug -> DEBU abb[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.513 UTC [Composer] Debug -> DEBU abc[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.515 UTC [Composer] Debug -> DEBU abd[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.515 UTC [Composer] Debug -> DEBU abe[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421160a80} 0xc42128a530
[36m2017-07-19 23:33:48.515 UTC [Composer] Debug -> DEBU abf[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.515 UTC [Composer] Debug -> DEBU ac0[0m Exiting NewDataCollection &{0xc420029540 0xc421160a80 $sysdata}
[36m2017-07-19 23:33:48.516 UTC [Composer] Debug -> DEBU ac1[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.516 UTC [Composer] Debug -> DEBU ac2[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.516 UTC [Composer] Debug -> DEBU ac3[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Trader#JURHULBMVL_t1}
[36m2017-07-19 23:33:48.517 UTC [Composer] Debug -> DEBU ac4[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Trader super=Participant enum=false abstract=false}
[36m2017-07-19 23:33:48.517 UTC [Composer] Debug -> DEBU ac5[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Trader
[36m2017-07-19 23:33:48.517 UTC [Composer] Debug -> DEBU ac6[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.518 UTC [Composer] Debug -> DEBU ac8[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.518 UTC [Composer] Debug -> DEBU ac9[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.518 UTC [Composer] Debug -> DEBU aca[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:48.518 UTC [Composer] Debug -> DEBU acb[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.518 UTC [Composer] Debug -> DEBU acc[0m Entering DataService.getCollection &{0xc4202a2220}
[36m2017-07-19 23:33:48.518 UTC [Composer] Debug -> DEBU acd[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:48.519 UTC [Composer] Debug -> DEBU ace[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.517 UTC [Composer] Debug -> DEBU ac7[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.519 UTC [Composer] Debug -> DEBU acf[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.519 UTC [Composer] Debug -> DEBU ad1[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.520 UTC [Composer] Debug -> DEBU ad2[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.519 UTC [Composer] Debug -> DEBU ad0[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.520 UTC [Composer] Debug -> DEBU ad3[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.520 UTC [Composer] Debug -> DEBU ad4[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.520 UTC [Composer] Debug -> DEBU ad5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.520 UTC [Composer] Debug -> DEBU ad6[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:48.520 UTC [Composer] Debug -> DEBU ad7[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.520 UTC [Composer] Debug -> DEBU ad8[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:48.521 UTC [Composer] Debug -> DEBU ad9[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.521 UTC [Composer] Debug -> DEBU ada[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:48.521 UTC [Composer] Debug -> DEBU adb[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.521 UTC [Composer] Debug -> DEBU adc[0m Entering NewDataCollection &{0xc4202a2220} &{0xc420150158 0xc42013b600} 0xc42128ac50
[36m2017-07-19 23:33:48.521 UTC [Composer] Debug -> DEBU ade[0m Exiting NewDataCollection &{0xc420029578 0xc42013b600 $sysdata}
[36m2017-07-19 23:33:48.521 UTC [Composer] Debug -> DEBU add[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.522 UTC [Composer] Debug -> DEBU adf[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.523 UTC [Composer] Debug -> DEBU ae0[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.529 UTC [Composer] Debug -> DEBU ae1[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.529 UTC [Composer] Debug -> DEBU ae2[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.529 UTC [Composer] Debug -> DEBU ae4[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.529 UTC [Composer] Debug -> DEBU ae5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.529 UTC [Composer] Debug -> DEBU ae3[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:48.529 UTC [Composer] Debug -> DEBU ae6[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.529 UTC [Composer] Debug -> DEBU ae7[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.530 UTC [Composer] Debug -> DEBU ae8[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.530 UTC [Composer] Debug -> DEBU ae9[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:48.530 UTC [Composer] Debug -> DEBU aea[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.530 UTC [Composer] Debug -> DEBU aeb[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.530 UTC [Composer] Debug -> DEBU aec[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.531 UTC [Composer] Debug -> DEBU aed[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.531 UTC [Composer] Debug -> DEBU aee[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.531 UTC [Composer] Debug -> DEBU aef[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.531 UTC [Composer] Debug -> DEBU af0[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.532 UTC [Composer] Debug -> DEBU af1[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.532 UTC [Composer] Debug -> DEBU af2[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.532 UTC [Composer] Debug -> DEBU af3[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.532 UTC [Composer] Debug -> DEBU af4[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.532 UTC [Composer] Debug -> DEBU af5[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.532 UTC [Composer] Debug -> DEBU af6[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc42128b2a0
[36m2017-07-19 23:33:48.535 UTC [Composer] Debug -> DEBU af7[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.535 UTC [Composer] Debug -> DEBU af8[0m Exiting NewDataCollection &{0xc420143518 0xc4211c6580 $sysdata}
[36m2017-07-19 23:33:48.535 UTC [Composer] Debug -> DEBU af9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.535 UTC [Composer] Debug -> DEBU afa[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:48.536 UTC [Composer] Debug -> DEBU afb[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.536 UTC [Composer] Debug -> DEBU afc[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.536 UTC [Composer] Debug -> DEBU afd[0m Entering DataCollection.get &{0xc4202a2220}
[36m2017-07-19 23:33:48.536 UTC [Composer] Debug -> DEBU afe[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.537 UTC [Composer] Debug -> DEBU aff[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.537 UTC [Composer] Debug -> DEBU b00[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.538 UTC [Composer] Debug -> DEBU b01[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.538 UTC [Composer] Debug -> DEBU b02[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.539 UTC [Composer] Debug -> DEBU b03[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.539 UTC [Composer] Debug -> DEBU b04[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.539 UTC [Composer] Debug -> DEBU b05[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.541 UTC [Composer] Debug -> DEBU b06[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc42126dec0
[36m2017-07-19 23:33:48.542 UTC [Composer] Debug -> DEBU b07[0m Exiting NewDataCollection &{0xc4202ff240 0xc42055f200 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b08[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b0c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b0d[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b0e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b0f[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b10[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b11[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b09[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b13[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b0a[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.549 UTC [Composer] Debug -> DEBU b15[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b0b[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b12[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.548 UTC [Composer] Debug -> DEBU b14[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.554 UTC [Composer] Debug -> DEBU b16[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.555 UTC [Composer] Debug -> DEBU b17[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.555 UTC [Composer] Debug -> DEBU b18[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.555 UTC [Composer] Debug -> DEBU b19[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.555 UTC [Composer] Debug -> DEBU b1a[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.556 UTC [Composer] Debug -> DEBU b1b[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.556 UTC [Composer] Debug -> DEBU b1c[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.556 UTC [Composer] Debug -> DEBU b1d[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:48.556 UTC [Composer] Debug -> DEBU b1e[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.557 UTC [Composer] Debug -> DEBU b1f[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:48.557 UTC [Composer] Debug -> DEBU b20[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.557 UTC [Composer] Debug -> DEBU b21[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is not in cache, loading 
[36m2017-07-19 23:33:48.559 UTC [Composer] Debug -> DEBU b22[0m Entering EventService.transactionCommit &{0xc420141340}
[36m2017-07-19 23:33:48.561 UTC [Composer] Debug -> DEBU b23[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.561 UTC [Composer] Debug -> DEBU b24[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:48.563 UTC [Composer] Debug -> DEBU b25[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:48.563 UTC [Composer] Debug -> DEBU b26[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:48.563 UTC [Composer] Debug -> DEBU b28[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:48.563 UTC [Composer] Debug -> DEBU b29[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:48.563 UTC [Composer] Debug -> DEBU b27[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.563 UTC [Composer] Debug -> DEBU b2a[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.564 UTC [Composer] Debug -> DEBU b2b[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:48.564 UTC [Composer] Debug -> DEBU b2c[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.565 UTC [Composer] Debug -> DEBU b2d[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.565 UTC [Composer] Debug -> DEBU b2e[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry JURHULBMVL_t1
[36m2017-07-19 23:33:48.569 UTC [Composer] Debug -> DEBU b2f[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b30[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b32[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b33[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b34[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b35[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b36[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b37[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b38[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b31[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.571 UTC [Composer] Debug -> DEBU b39[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.572 UTC [Composer] Debug -> DEBU b3a[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.572 UTC [Composer] Debug -> DEBU b3b[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.572 UTC [Composer] Debug -> DEBU b3c[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.573 UTC [Composer] Debug -> DEBU b3d[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.573 UTC [Composer] Debug -> DEBU b3e[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.573 UTC [Composer] Debug -> DEBU b3f[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.574 UTC [Composer] Debug -> DEBU b40[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.574 UTC [Composer] Debug -> DEBU b41[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.575 UTC [Composer] Debug -> DEBU b42[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.575 UTC [Composer] Debug -> DEBU b43[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:48.575 UTC [Composer] Debug -> DEBU b44[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.576 UTC [Composer] Debug -> DEBU b45[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:48.576 UTC [Composer] Debug -> DEBU b46[0m Entering Engine.handleCallback 0xc42038be00 &{0xc420141340}
[36m2017-07-19 23:33:48.576 UTC [Composer] Debug -> DEBU b47[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:48.576 UTC [Composer] Debug -> DEBU b48[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:48.576 UTC [Composer] Debug -> DEBU b49[0m Exiting Composer.Invoke {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"} <nil>
[36m2017-07-19 23:33:48.576 UTC [Composer] Debug -> DEBU b4a[0m Entering ComposerPool.Put &{0xc420150150 0xc42040f710 0xc4201425c8}
[36m2017-07-19 23:33:48.576 UTC [Composer] Debug -> DEBU b4b[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:48.576 UTC [Composer] Debug -> DEBU b4c[0m Exiting Chaincode.Invoke 200  {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"}
[36m2017-07-19 23:33:48.577 UTC [Composer] Debug -> DEBU b4d[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.578 UTC [Composer] Debug -> DEBU b4e[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.578 UTC [Composer] Debug -> DEBU b4f[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.578 UTC [Composer] Debug -> DEBU b50[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.581 UTC [Composer] Debug -> DEBU b51[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:48.582 UTC [Composer] Debug -> DEBU b52[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.584 UTC [Composer] Debug -> DEBU b53[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.585 UTC [Composer] Debug -> DEBU b54[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.589 UTC [Composer] Debug -> DEBU b55[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.589 UTC [Composer] Debug -> DEBU b56[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.589 UTC [Composer] Debug -> DEBU b57[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.594 UTC [Composer] Debug -> DEBU b58[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.594 UTC [Composer] Debug -> DEBU b59[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.594 UTC [Composer] Debug -> DEBU b5a[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.594 UTC [Composer] Debug -> DEBU b5b[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.594 UTC [Composer] Debug -> DEBU b5c[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.594 UTC [Composer] Debug -> DEBU b5d[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.595 UTC [Composer] Debug -> DEBU b5e[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.595 UTC [Composer] Debug -> DEBU b5f[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.595 UTC [Composer] Debug -> DEBU b60[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.601 UTC [Composer] Debug -> DEBU b61[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421160a80} 0xc4212ef350
[36m2017-07-19 23:33:48.601 UTC [Composer] Debug -> DEBU b62[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.601 UTC [Composer] Debug -> DEBU b63[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.604 UTC [Composer] Debug -> DEBU b64[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc4212ef590
[36m2017-07-19 23:33:48.604 UTC [Composer] Debug -> DEBU b65[0m Exiting NewDataCollection &{0xc420029768 0xc4211c6580 $sysdata}
[36m2017-07-19 23:33:48.605 UTC [Composer] Debug -> DEBU b66[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.606 UTC [Composer] Debug -> DEBU b67[0m Exiting NewDataCollection &{0xc4202ff348 0xc421160a80 $sysregistries}
[36m2017-07-19 23:33:48.606 UTC [Composer] Debug -> DEBU b68[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.606 UTC [Composer] Debug -> DEBU b69[0m Entering getLogging 0xc4212bd700
[36m2017-07-19 23:33:48.607 UTC [Composer] Debug -> DEBU b6a[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.607 UTC [Composer] Debug -> DEBU b6b[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.608 UTC [Composer] Debug -> DEBU b6c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.608 UTC [Composer] Debug -> DEBU b6d[0m Entering Chaincode.Invoke 0xc4212bd6f0
[36m2017-07-19 23:33:48.608 UTC [Composer] Debug -> DEBU b6e[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:48.608 UTC [Composer] Debug -> DEBU b6f[0m Exiting ComposerPool.Get &{0xc420028000 0xc4203ac870 0xc420150318}
[36m2017-07-19 23:33:48.608 UTC [Composer] Debug -> DEBU b70[0m Entering Composer.Invoke 0xc4212ff1f0 addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"TSNLFMEFFA_t9","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:48.608 UTC [Composer] Debug -> DEBU b71[0m Entering NewContext &{0xc4201ce220} &{0xc420028000} 0xc4212ff2f0
[36m2017-07-19 23:33:48.608 UTC [Composer] Debug -> DEBU b72[0m Entering NewDataService &{0xc4201ce220} &{0xc420028000 <nil> <nil> <nil> <nil>} 0xc4212ff3a0
[36m2017-07-19 23:33:48.613 UTC [Composer] Debug -> DEBU b73[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.613 UTC [Composer] Debug -> DEBU b74[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.613 UTC [Composer] Debug -> DEBU b75[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.613 UTC [Composer] Debug -> DEBU b76[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.614 UTC [Composer] Debug -> DEBU b77[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.614 UTC [Composer] Debug -> DEBU b78[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.614 UTC [Composer] Debug -> DEBU b7a[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#JURHULBMVL_t1, READ
[36m2017-07-19 23:33:48.614 UTC [Composer] Debug -> DEBU b7b[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:48.614 UTC [Composer] Debug -> DEBU b7c[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:48.615 UTC [Composer] Debug -> DEBU b7d[0m @JS : Resolver                 :resolveRelationship()     Got resource from registry, resolving 
[36m2017-07-19 23:33:48.615 UTC [Composer] Debug -> DEBU b7e[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trader#JURHULBMVL_t1}, [object Object]
[36m2017-07-19 23:33:48.615 UTC [Composer] Debug -> DEBU b7f[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.614 UTC [Composer] Debug -> DEBU b79[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.615 UTC [Composer] Debug -> DEBU b80[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b82[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b83[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b81[0m Exiting NewDataService &{0xc420028000 0xc42131e400}
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b85[0m Entering NewIdentityService &{0xc4201ce220} &{0xc420028000 0xc4212d1ae0 <nil> <nil> <nil>} 0xc4212ff550
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b86[0m Exiting NewIdentityService &{0xc420028000 0xc42131e400}
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b87[0m Entering NewEventService &{0xc4201ce220} &{0xc420028000 0xc4212d1ae0 0xc4212d1ca0 <nil> <nil>} 0xc4212ff6c0
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b88[0m Exiting NewEventServce &{0xc420028000 0xc42131e400}
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b84[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b89[0m Entering HTTPService &{0xc4201ce220} &{0xc420028000 0xc4212d1ae0 0xc4212d1ca0 0xc4212d1d80 <nil>} 0xc4212ff840
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b8b[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b8c[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property tradeId
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b8d[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring JURHULBMVL_t1
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b8e[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property firstName
[36m2017-07-19 23:33:48.617 UTC [Composer] Debug -> DEBU b8f[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Testing
[36m2017-07-19 23:33:48.616 UTC [Composer] Debug -> DEBU b8a[0m Exiting HTTPService &{0xc420028000 0xc42131e400}
[36m2017-07-19 23:33:48.617 UTC [Composer] Debug -> DEBU b90[0m Exiting NewContext &{0xc420028000 0xc4212d1ae0 0xc4212d1ca0 0xc4212d1d80 0xc4212d1e60}
[36m2017-07-19 23:33:48.617 UTC [Composer] Debug -> DEBU b91[0m Entering Engine.Invoke &{0xc420028000 0xc4212d1ae0 0xc4212d1ca0 0xc4212d1d80 0xc4212d1e60} addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"TSNLFMEFFA_t9","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:48.617 UTC [Composer] Debug -> DEBU b92[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"TSNLFMEFFA_t9","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:48.617 UTC [Composer] Debug -> DEBU b93[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property lastName
[36m2017-07-19 23:33:48.618 UTC [Composer] Debug -> DEBU b94[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Test
[36m2017-07-19 23:33:48.618 UTC [Composer] Debug -> DEBU b95[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:48.618 UTC [Composer] Debug -> DEBU b96[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:48.618 UTC [Composer] Debug -> DEBU b97[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.618 UTC [Composer] Debug -> DEBU b98[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.619 UTC [Composer] Debug -> DEBU b99[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421160a80} 0xc42133a700
[36m2017-07-19 23:33:48.619 UTC [Composer] Debug -> DEBU b9a[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.620 UTC [Composer] Debug -> DEBU b9b[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.622 UTC [Composer] Debug -> DEBU b9c[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trader#JURHULBMVL_t1}
[36m2017-07-19 23:33:48.622 UTC [Composer] Debug -> DEBU b9d[0m @JS : ModelManager             :addSystemModels()         > 
[36m2017-07-19 23:33:48.623 UTC [Composer] Debug -> DEBU b9e[0m Exiting Engine.Invoke 0xc4212abd40
[36m2017-07-19 23:33:48.624 UTC [Composer] Debug -> DEBU ba5[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:48.624 UTC [Composer] Debug -> DEBU ba6[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:48.624 UTC [Composer] Debug -> DEBU ba7[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.624 UTC [Composer] Debug -> DEBU ba8[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.624 UTC [Composer] Debug -> DEBU ba9[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.624 UTC [Composer] Debug -> DEBU baa[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.623 UTC [Composer] Debug -> DEBU b9f[0m Exiting NewDataCollection &{0xc4201436a0 0xc421160a80 $sysidentities}
[36m2017-07-19 23:33:48.625 UTC [Composer] Debug -> DEBU bab[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.626 UTC [Composer] Debug -> DEBU bac[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42131e400} 0xc4202c4150
[36m2017-07-19 23:33:48.627 UTC [Composer] Debug -> DEBU bad[0m Exiting NewDataCollection &{0xc4202fe050 0xc42131e400 $sysdata}
[36m2017-07-19 23:33:48.627 UTC [Composer] Debug -> DEBU bae[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.627 UTC [Composer] Debug -> DEBU baf[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.627 UTC [Composer] Debug -> DEBU bb0[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.629 UTC [Composer] Debug -> DEBU bb1[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.629 UTC [Composer] Debug -> DEBU bb2[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.629 UTC [Composer] Debug -> DEBU bb3[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.630 UTC [Composer] Debug -> DEBU bb4[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.630 UTC [Composer] Debug -> DEBU bb5[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.630 UTC [Composer] Debug -> DEBU bb6[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:48.630 UTC [Composer] Info -> INFO bb7[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.623 UTC [Composer] Debug -> DEBU ba0[0m @JS : Resolver                 :resolveRelationship()     < Resource {id=org.example.mynetwork.Trader#JURHULBMVL_t1}
[36m2017-07-19 23:33:48.623 UTC [Composer] Debug -> DEBU ba1[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.633 UTC [Composer] Debug -> DEBU bb8[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.624 UTC [Composer] Debug -> DEBU ba2[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
2017-07-19 23:33:48.624 UTC [Composer] Info -> INFO ba3[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.634 UTC [Composer] Debug -> DEBU bb9[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.624 UTC [Composer] Debug -> DEBU ba4[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.640 UTC [Composer] Debug -> DEBU bba[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.640 UTC [Composer] Debug -> DEBU bbb[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.640 UTC [Composer] Debug -> DEBU bbc[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.641 UTC [Composer] Debug -> DEBU bbd[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.641 UTC [Composer] Debug -> DEBU bbe[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Commodity#JURHULBMVL_c3}
[36m2017-07-19 23:33:48.641 UTC [Composer] Debug -> DEBU bbf[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.641 UTC [Composer] Debug -> DEBU bc0[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.641 UTC [Composer] Debug -> DEBU bc1[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bc2[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bc3[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bc4[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bc5[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bc6[0m Entering IdentityService.getCurrentUserID &{0xc420140e60}
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bc7[0m Entering extractNameFromCreator 0xc4212fe820
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bc8[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bc9[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bca[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bcc[0m Common Name admin
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bcd[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bce[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:48.645 UTC [Composer] Debug -> DEBU bcf[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.644 UTC [Composer] Debug -> DEBU bcb[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:48.645 UTC [Composer] Debug -> DEBU bd0[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.645 UTC [Composer] Debug -> DEBU bd1[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.646 UTC [Composer] Debug -> DEBU bd2[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.646 UTC [Composer] Debug -> DEBU bd3[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.646 UTC [Composer] Debug -> DEBU bd4[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.646 UTC [Composer] Debug -> DEBU bd5[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.647 UTC [Composer] Debug -> DEBU bd6[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.647 UTC [Composer] Debug -> DEBU bd7[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.647 UTC [Composer] Debug -> DEBU bd8[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.647 UTC [Composer] Debug -> DEBU bd9[0m @JS : Resolver                 :resolveRelationship()     < Resource {id=org.example.mynetwork.Commodity#JURHULBMVL_c3}
[36m2017-07-19 23:33:48.647 UTC [Composer] Debug -> DEBU bda[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.654 UTC [Composer] Debug -> DEBU bdb[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.654 UTC [Composer] Debug -> DEBU bdc[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Trader#JURHULBMVL_t0}, [object Object]
[36m2017-07-19 23:33:48.655 UTC [Composer] Debug -> DEBU bdd[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Trader#JURHULBMVL_t0}
[36m2017-07-19 23:33:48.655 UTC [Composer] Debug -> DEBU bde[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.655 UTC [Composer] Debug -> DEBU bdf[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.655 UTC [Composer] Debug -> DEBU be0[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.655 UTC [Composer] Debug -> DEBU be1[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.655 UTC [Composer] Debug -> DEBU be2[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.656 UTC [Composer] Debug -> DEBU be3[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Trader super=Participant enum=false abstract=false}
[36m2017-07-19 23:33:48.656 UTC [Composer] Debug -> DEBU be4[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Trader
[36m2017-07-19 23:33:48.656 UTC [Composer] Debug -> DEBU be5[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.656 UTC [Composer] Debug -> DEBU be6[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU be7[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU be8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU be9[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU beb[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU bec[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU bed[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU bee[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU bef[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU bf0[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.657 UTC [Composer] Debug -> DEBU bea[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:48.658 UTC [Composer] Debug -> DEBU bf1[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.658 UTC [Composer] Debug -> DEBU bf2[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.660 UTC [Composer] Debug -> DEBU bf3[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.660 UTC [Composer] Debug -> DEBU bf4[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.660 UTC [Composer] Debug -> DEBU bf5[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:48.662 UTC [Composer] Debug -> DEBU bf6[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc4212eef40
[36m2017-07-19 23:33:48.663 UTC [Composer] Debug -> DEBU bf7[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.663 UTC [Composer] Debug -> DEBU bf8[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.663 UTC [Composer] Debug -> DEBU bf9[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.663 UTC [Composer] Debug -> DEBU bfa[0m Exiting NewDataCollection &{0xc4202fe0f8 0xc42055f200 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:48.663 UTC [Composer] Debug -> DEBU bfb[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.663 UTC [Composer] Debug -> DEBU bfc[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.664 UTC [Composer] Debug -> DEBU bfd[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.664 UTC [Composer] Debug -> DEBU bfe[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.664 UTC [Composer] Debug -> DEBU c00[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.664 UTC [Composer] Debug -> DEBU bff[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.665 UTC [Composer] Debug -> DEBU c01[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.665 UTC [Composer] Debug -> DEBU c02[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.665 UTC [Composer] Debug -> DEBU c03[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.665 UTC [Composer] Debug -> DEBU c04[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.666 UTC [Composer] Debug -> DEBU c05[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.667 UTC [Composer] Debug -> DEBU c06[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.667 UTC [Composer] Debug -> DEBU c07[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.667 UTC [Composer] Debug -> DEBU c08[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:48.667 UTC [Composer] Debug -> DEBU c09[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:48.668 UTC [Composer] Debug -> DEBU c0a[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.668 UTC [Composer] Debug -> DEBU c0b[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:48.668 UTC [Composer] Debug -> DEBU c0c[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry JURHULBMVL_t0
[36m2017-07-19 23:33:48.668 UTC [Composer] Debug -> DEBU c0d[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.668 UTC [Composer] Debug -> DEBU c0e[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.669 UTC [Composer] Debug -> DEBU c0f[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.670 UTC [Composer] Debug -> DEBU c10[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:48.670 UTC [Composer] Debug -> DEBU c11[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"NOGNXFTMNQ_t5","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:48.670 UTC [Composer] Debug -> DEBU c12[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.671 UTC [Composer] Debug -> DEBU c13[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.671 UTC [Composer] Debug -> DEBU c14[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.672 UTC [Composer] Debug -> DEBU c15[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:48.674 UTC [Composer] Debug -> DEBU c16[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.674 UTC [Composer] Debug -> DEBU c18[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.674 UTC [Composer] Debug -> DEBU c17[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#JURHULBMVL_t0, READ
[36m2017-07-19 23:33:48.674 UTC [Composer] Debug -> DEBU c19[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:48.674 UTC [Composer] Debug -> DEBU c1a[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:48.675 UTC [Composer] Debug -> DEBU c1b[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.675 UTC [Composer] Debug -> DEBU c1c[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:48.675 UTC [Composer] Debug -> DEBU c1d[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.675 UTC [Composer] Debug -> DEBU c1e[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.675 UTC [Composer] Debug -> DEBU c1f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.675 UTC [Composer] Debug -> DEBU c20[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.677 UTC [Composer] Debug -> DEBU c21[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.677 UTC [Composer] Debug -> DEBU c22[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421160a80} 0xc4212bc380
[36m2017-07-19 23:33:48.677 UTC [Composer] Debug -> DEBU c23[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.677 UTC [Composer] Debug -> DEBU c24[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.678 UTC [Composer] Debug -> DEBU c25[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc4202d9040
[36m2017-07-19 23:33:48.679 UTC [Composer] Debug -> DEBU c26[0m Exiting NewDataCollection &{0xc420142348 0xc421160a80 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:48.679 UTC [Composer] Debug -> DEBU c27[0m Exiting NewDataCollection &{0xc420142358 0xc4211c6580 $sysdata}
[36m2017-07-19 23:33:48.680 UTC [Composer] Debug -> DEBU c28[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.680 UTC [Composer] Debug -> DEBU c29[0m @JS : Resolver                 :resolveRelationship()     Got resource from registry, resolving 
[36m2017-07-19 23:33:48.680 UTC [Composer] Debug -> DEBU c2a[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.680 UTC [Composer] Debug -> DEBU c2b[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.680 UTC [Composer] Debug -> DEBU c2c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.680 UTC [Composer] Debug -> DEBU c2d[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.681 UTC [Composer] Debug -> DEBU c2e[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trader#JURHULBMVL_t0}, [object Object]
[36m2017-07-19 23:33:48.682 UTC [Composer] Debug -> DEBU c2f[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42131e400} 0xc42128a360
[36m2017-07-19 23:33:48.682 UTC [Composer] Debug -> DEBU c30[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.682 UTC [Composer] Debug -> DEBU c31[0m Exiting NewDataCollection &{0xc4201423b0 0xc42131e400 $sysdata}
[36m2017-07-19 23:33:48.683 UTC [Composer] Debug -> DEBU c32[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.683 UTC [Composer] Debug -> DEBU c33[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.683 UTC [Composer] Debug -> DEBU c34[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property tradeId
[36m2017-07-19 23:33:48.683 UTC [Composer] Debug -> DEBU c35[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring JURHULBMVL_t0
[36m2017-07-19 23:33:48.684 UTC [Composer] Debug -> DEBU c36[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property firstName
[36m2017-07-19 23:33:48.686 UTC [Composer] Debug -> DEBU c37[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Testing
[36m2017-07-19 23:33:48.686 UTC [Composer] Debug -> DEBU c38[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.690 UTC [Composer] Debug -> DEBU c39[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#NOGNXFTMNQ_t5, CREATE
[36m2017-07-19 23:33:48.690 UTC [Composer] Debug -> DEBU c3a[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:48.690 UTC [Composer] Debug -> DEBU c3b[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:48.690 UTC [Composer] Debug -> DEBU c3c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.691 UTC [Composer] Debug -> DEBU c3d[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:48.691 UTC [Composer] Debug -> DEBU c3e[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property lastName
[36m2017-07-19 23:33:48.691 UTC [Composer] Debug -> DEBU c40[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.691 UTC [Composer] Debug -> DEBU c41[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Test
[36m2017-07-19 23:33:48.691 UTC [Composer] Debug -> DEBU c3f[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.691 UTC [Composer] Debug -> DEBU c42[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:48.692 UTC [Composer] Debug -> DEBU c43[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.692 UTC [Composer] Debug -> DEBU c44[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.692 UTC [Composer] Debug -> DEBU c45[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.692 UTC [Composer] Debug -> DEBU c46[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.693 UTC [Composer] Debug -> DEBU c47[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.693 UTC [Composer] Debug -> DEBU c48[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.693 UTC [Composer] Debug -> DEBU c49[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.693 UTC [Composer] Debug -> DEBU c4a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.693 UTC [Composer] Debug -> DEBU c4b[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.694 UTC [Composer] Debug -> DEBU c4c[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trader#JURHULBMVL_t0}
[36m2017-07-19 23:33:48.694 UTC [Composer] Debug -> DEBU c4d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.694 UTC [Composer] Debug -> DEBU c4e[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.695 UTC [Composer] Debug -> DEBU c4f[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:48.695 UTC [Composer] Debug -> DEBU c50[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc420149300} 0xc4202d9960
[36m2017-07-19 23:33:48.695 UTC [Composer] Debug -> DEBU c51[0m Entering DataCollection.add &{0xc420140e60}
[36m2017-07-19 23:33:48.695 UTC [Composer] Debug -> DEBU c52[0m Exiting NewDataCollection &{0xc420150428 0xc420149300 $sysdata}
[36m2017-07-19 23:33:48.695 UTC [Composer] Debug -> DEBU c53[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.695 UTC [Composer] Debug -> DEBU c54[0m @JS : Resolver                 :resolveRelationship()     < Resource {id=org.example.mynetwork.Trader#JURHULBMVL_t0}
[36m2017-07-19 23:33:48.695 UTC [Composer] Debug -> DEBU c55[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.695 UTC [Composer] Debug -> DEBU c56[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.699 UTC [Composer] Debug -> DEBU c57[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.701 UTC [Composer] Debug -> DEBU c58[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:48.701 UTC [Composer] Debug -> DEBU c59[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.701 UTC [Composer] Debug -> DEBU c5a[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c5b[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c5d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c5e[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c5c[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c5f[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c60[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c61[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c62[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:48.702 UTC [Composer] Debug -> DEBU c63[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c64[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c65[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c66[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c67[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c68[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c69[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c6a[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c6b[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c6c[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c6d[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.703 UTC [Composer] Debug -> DEBU c6e[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.704 UTC [Composer] Debug -> DEBU c6f[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d}
[36m2017-07-19 23:33:48.704 UTC [Composer] Debug -> DEBU c70[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.704 UTC [Composer] Debug -> DEBU c71[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:48.704 UTC [Composer] Debug -> DEBU c72[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.704 UTC [Composer] Debug -> DEBU c73[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.705 UTC [Composer] Debug -> DEBU c74[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.707 UTC [Composer] Debug -> DEBU c75[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.708 UTC [Composer] Debug -> DEBU c76[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c77[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c79[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c78[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c7a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c7b[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c7c[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c7d[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c7e[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c7f[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c80[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c81[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:48.715 UTC [Composer] Debug -> DEBU c82[0m @JS : Resolver                 :resolve()                 < Resource {id=org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d}
[36m2017-07-19 23:33:48.716 UTC [Composer] Debug -> DEBU c83[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.716 UTC [Composer] Debug -> DEBU c84[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.716 UTC [Composer] Debug -> DEBU c85[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:48.716 UTC [Composer] Debug -> DEBU c86[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.716 UTC [Composer] Debug -> DEBU c87[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:48.716 UTC [Composer] Debug -> DEBU c88[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.717 UTC [Composer] Debug -> DEBU c89[0m @JS : Api                      :constructor()             > [object Object]
[36m2017-07-19 23:33:48.717 UTC [Composer] Debug -> DEBU c8a[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:48.717 UTC [Composer] Debug -> DEBU c8b[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.717 UTC [Composer] Debug -> DEBU c8c[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:48.718 UTC [Composer] Debug -> DEBU c8d[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.718 UTC [Composer] Debug -> DEBU c8e[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.718 UTC [Composer] Debug -> DEBU c8f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.718 UTC [Composer] Debug -> DEBU c90[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.718 UTC [Composer] Debug -> DEBU c91[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc42008cf00} 0xc4212406d0
[36m2017-07-19 23:33:48.719 UTC [Composer] Debug -> DEBU c92[0m Exiting NewDataCollection &{0xc420150578 0xc42008cf00 $sysdata}
[36m2017-07-19 23:33:48.721 UTC [Composer] Debug -> DEBU c93[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.721 UTC [Composer] Debug -> DEBU c94[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.721 UTC [Composer] Debug -> DEBU c95[0m @JS : Api                      :constructor()             < 
[36m2017-07-19 23:33:48.721 UTC [Composer] Debug -> DEBU c96[0m @JS : BusinessNetworkDefinition:fromArchive()             > 5500
[36m2017-07-19 23:33:48.722 UTC [Composer] Debug -> DEBU c97[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.722 UTC [Composer] Debug -> DEBU c98[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.722 UTC [Composer] Debug -> DEBU c99[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.722 UTC [Composer] Debug -> DEBU c9a[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.722 UTC [Composer] Debug -> DEBU c9b[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:48.722 UTC [Composer] Debug -> DEBU c9c[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:48.723 UTC [Composer] Debug -> DEBU c9d[0m @JS : CompiledScriptBundle     :execute()                 > [object Object], Resource {id=org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d}
[36m2017-07-19 23:33:48.724 UTC [Composer] Debug -> DEBU c9e[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.725 UTC [Composer] Debug -> DEBU c9f[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.725 UTC [Composer] Debug -> DEBU ca0[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.725 UTC [Composer] Debug -> DEBU ca1[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.725 UTC [Composer] Debug -> DEBU ca2[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.726 UTC [Composer] Debug -> DEBU ca3[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.726 UTC [Composer] Debug -> DEBU ca4[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:48.726 UTC [Composer] Info -> INFO ca5[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.726 UTC [Composer] Debug -> DEBU ca6[0m @JS : CompiledScriptBundle     :findFunctionNames()       > Resource {id=org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d}
[36m2017-07-19 23:33:48.726 UTC [Composer] Debug -> DEBU ca7[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.726 UTC [Composer] Debug -> DEBU ca8[0m @JS : CompiledScriptBundle     :findFunctionNames()       Looking at function declaration tradeCommodity
[36m2017-07-19 23:33:48.727 UTC [Composer] Debug -> DEBU ca9[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.727 UTC [Composer] Debug -> DEBU caa[0m @JS : CompiledScriptBundle     :findFunctionNames()       Function is annotated with @transaction 
[36m2017-07-19 23:33:48.728 UTC [Composer] Debug -> DEBU cab[0m @JS : CompiledScriptBundle     :findFunctionNames()       Function parameter type matches transaction 
[36m2017-07-19 23:33:48.728 UTC [Composer] Debug -> DEBU cac[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.729 UTC [Composer] Debug -> DEBU cad[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.733 UTC [Composer] Debug -> DEBU cae[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.733 UTC [Composer] Debug -> DEBU caf[0m @JS : CompiledScriptBundle     :findFunctionNames()       < tradeCommodity
[36m2017-07-19 23:33:48.734 UTC [Composer] Debug -> DEBU cb0[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.734 UTC [Composer] Debug -> DEBU cb1[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.734 UTC [Composer] Debug -> DEBU cb2[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.737 UTC [Composer] Debug -> DEBU cb3[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:48.738 UTC [Composer] Debug -> DEBU cb4[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading README.md 
[36m2017-07-19 23:33:48.738 UTC [Composer] Debug -> DEBU cb5[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading package.json 
[36m2017-07-19 23:33:48.739 UTC [Composer] Debug -> DEBU cb6[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for model files 
[36m2017-07-19 23:33:48.739 UTC [Composer] Debug -> DEBU cb7[0m @JS : BusinessNetworkDefinition:fromArchive()             Found model file, loading it models/sample.cto
[36m2017-07-19 23:33:48.739 UTC [Composer] Debug -> DEBU cb8[0m @JS : BusinessNetworkDefinition:fromArchive()             Looking for JavaScript files 
[36m2017-07-19 23:33:48.739 UTC [Composer] Debug -> DEBU cb9[0m @JS : BusinessNetworkDefinition:fromArchive()             Found JavaScript file, loading it lib/logic.js
[36m2017-07-19 23:33:48.739 UTC [Composer] Debug -> DEBU cba[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading permissions.acl 
[36m2017-07-19 23:33:48.739 UTC [Composer] Debug -> DEBU cbb[0m @JS : BusinessNetworkDefinition:fromArchive()             Loading query queries.qry 
[36m2017-07-19 23:33:48.740 UTC [Composer] Debug -> DEBU cbc[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.740 UTC [Composer] Debug -> DEBU cbd[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.740 UTC [Composer] Debug -> DEBU cbe[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.740 UTC [Composer] Debug -> DEBU cbf[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.740 UTC [Composer] Debug -> DEBU cc0[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.740 UTC [Composer] Debug -> DEBU cc1[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.741 UTC [Composer] Debug -> DEBU cc2[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.741 UTC [Composer] Debug -> DEBU cc3[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.741 UTC [Composer] Debug -> DEBU cc4[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.741 UTC [Composer] Debug -> DEBU cc5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.741 UTC [Composer] Debug -> DEBU cc6[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.741 UTC [Composer] Debug -> DEBU cc7[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:48.744 UTC [Composer] Debug -> DEBU cc8[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42131e400} 0xc42128bd00
[36m2017-07-19 23:33:48.744 UTC [Composer] Debug -> DEBU cc9[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.744 UTC [Composer] Debug -> DEBU cca[0m @JS : CompiledScriptBundle     :execute()                 Executing function tradeCommodity
[36m2017-07-19 23:33:48.744 UTC [Composer] Debug -> DEBU ccc[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc42126df00
[36m2017-07-19 23:33:48.744 UTC [Composer] Debug -> DEBU ccd[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:48.744 UTC [Composer] Debug -> DEBU ccb[0m Exiting NewDataCollection &{0xc420028588 0xc42131e400 $sysdata}
[36m2017-07-19 23:33:48.744 UTC [Composer] Debug -> DEBU cce[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.745 UTC [Composer] Debug -> DEBU ccf[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.745 UTC [Composer] Debug -> DEBU cd0[0m @JS : Api                      :getAssetRegistry()        > org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.745 UTC [Composer] Debug -> DEBU cd1[0m Exiting NewDataCollection &{0xc420142508 0xc4211c6580 $sysregistries}
[36m2017-07-19 23:33:48.745 UTC [Composer] Debug -> DEBU cd2[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.745 UTC [Composer] Debug -> DEBU cd3[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.745 UTC [Composer] Debug -> DEBU cd4[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.746 UTC [Composer] Debug -> DEBU cd5[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.746 UTC [Composer] Debug -> DEBU cd6[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.746 UTC [Composer] Debug -> DEBU cd7[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.747 UTC [Composer] Debug -> DEBU cd8[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.748 UTC [Composer] Debug -> DEBU cd9[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.748 UTC [Composer] Debug -> DEBU cda[0m @JS : ModelManager             :addSystemModels()         > 
[36m2017-07-19 23:33:48.748 UTC [Composer] Debug -> DEBU cdb[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.748 UTC [Composer] Debug -> DEBU cdc[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:48.749 UTC [Composer] Debug -> DEBU cdd[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.749 UTC [Composer] Debug -> DEBU cde[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.749 UTC [Composer] Debug -> DEBU cdf[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.749 UTC [Composer] Debug -> DEBU ce0[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.749 UTC [Composer] Debug -> DEBU ce1[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.749 UTC [Composer] Debug -> DEBU ce2[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.750 UTC [Composer] Debug -> DEBU ce3[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.750 UTC [Composer] Debug -> DEBU ce4[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.750 UTC [Composer] Debug -> DEBU ce5[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.750 UTC [Composer] Debug -> DEBU ce6[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.750 UTC [Composer] Debug -> DEBU ce7[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
2017-07-19 23:33:48.750 UTC [Composer] Info -> INFO ce8[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.752 UTC [Composer] Debug -> DEBU ce9[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc421232890
[36m2017-07-19 23:33:48.752 UTC [Composer] Debug -> DEBU cea[0m Exiting NewDataCollection &{0xc420142548 0xc42055f200 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:48.752 UTC [Composer] Debug -> DEBU ceb[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.752 UTC [Composer] Debug -> DEBU cec[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.755 UTC [Composer] Debug -> DEBU ced[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.757 UTC [Composer] Debug -> DEBU cee[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:48.757 UTC [Composer] Debug -> DEBU cef[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.759 UTC [Composer] Debug -> DEBU cf0[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.759 UTC [Composer] Debug -> DEBU cf1[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.759 UTC [Composer] Debug -> DEBU cf2[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.759 UTC [Composer] Debug -> DEBU cf3[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:48.759 UTC [Composer] Debug -> DEBU cf4[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.759 UTC [Composer] Debug -> DEBU cf5[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cf6[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cf7[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cf8[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cf9[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cfa[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cfb[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cfc[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cfd[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cfe[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU cff[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:48.760 UTC [Composer] Debug -> DEBU d00[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d01[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d02[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d03[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d06[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d07[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d08[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d04[0m @JS : AssetRegistry            :constructor()             > [object Object]
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d09[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.761 UTC [Composer] Debug -> DEBU d05[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d0a[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d0b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d0c[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d0e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d0d[0m @JS : AssetRegistry            :constructor()             < 
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d0f[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d10[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d11[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d12[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d13[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.762 UTC [Composer] Debug -> DEBU d14[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.763 UTC [Composer] Debug -> DEBU d15[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.764 UTC [Composer] Debug -> DEBU d16[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.764 UTC [Composer] Debug -> DEBU d17[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc4212530c0
[36m2017-07-19 23:33:48.764 UTC [Composer] Debug -> DEBU d18[0m Exiting NewDataCollection &{0xc420142640 0xc4211c6580 $sysidentities}
[36m2017-07-19 23:33:48.764 UTC [Composer] Debug -> DEBU d19[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.765 UTC [Composer] Debug -> DEBU d1a[0m @JS : Api                      :getAssetRegistry()        < [object Object]
[36m2017-07-19 23:33:48.765 UTC [Composer] Debug -> DEBU d1b[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:48.766 UTC [Composer] Debug -> DEBU d1c[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.766 UTC [Composer] Debug -> DEBU d1d[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.769 UTC [Composer] Debug -> DEBU d1e[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.769 UTC [Composer] Debug -> DEBU d1f[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.769 UTC [Composer] Debug -> DEBU d20[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.769 UTC [Composer] Debug -> DEBU d21[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.769 UTC [Composer] Debug -> DEBU d22[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.770 UTC [Composer] Debug -> DEBU d23[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d24[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d25[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d26[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d27[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d28[0m Entering IdentityService.getCurrentUserID &{0xc420144940}
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d29[0m Entering extractNameFromCreator 0xc421209fe0
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d2a[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d2b[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d2c[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d2d[0m Common Name admin
[36m2017-07-19 23:33:48.771 UTC [Composer] Debug -> DEBU d2e[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.773 UTC [Composer] Debug -> DEBU d2f[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.773 UTC [Composer] Debug -> DEBU d30[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.774 UTC [Composer] Debug -> DEBU d31[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.774 UTC [Composer] Debug -> DEBU d32[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.774 UTC [Composer] Debug -> DEBU d33[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.774 UTC [Composer] Debug -> DEBU d34[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:48.775 UTC [Composer] Info -> INFO d35[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.775 UTC [Composer] Debug -> DEBU d36[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.775 UTC [Composer] Debug -> DEBU d37[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.775 UTC [Composer] Debug -> DEBU d38[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.775 UTC [Composer] Debug -> DEBU d39[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.775 UTC [Composer] Debug -> DEBU d3a[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.777 UTC [Composer] Debug -> DEBU d3b[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:48.777 UTC [Composer] Debug -> DEBU d3c[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.777 UTC [Composer] Debug -> DEBU d3d[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:48.777 UTC [Composer] Debug -> DEBU d3e[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.777 UTC [Composer] Debug -> DEBU d3f[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:48.777 UTC [Composer] Debug -> DEBU d40[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d41[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d42[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d43[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d44[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d45[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d46[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42131e400} 0xc4211eb730
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d47[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d48[0m Entering EventService.transactionCommit &{0xc420140e60}
[36m2017-07-19 23:33:48.778 UTC [Composer] Debug -> DEBU d49[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#JURHULBMVL_c3, UPDATE
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d4a[0m Exiting NewDataCollection &{0xc420142730 0xc42131e400 $sysdata}
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d4b[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d4c[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d4e[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d4f[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d50[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d51[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d52[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.779 UTC [Composer] Debug -> DEBU d4d[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.780 UTC [Composer] Debug -> DEBU d53[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:48.780 UTC [Composer] Debug -> DEBU d54[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.782 UTC [Composer] Debug -> DEBU d55[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.782 UTC [Composer] Debug -> DEBU d56[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.783 UTC [Composer] Debug -> DEBU d57[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:48.783 UTC [Composer] Debug -> DEBU d58[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:48.783 UTC [Composer] Debug -> DEBU d59[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:48.783 UTC [Composer] Debug -> DEBU d5a[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:48.784 UTC [Composer] Debug -> DEBU d5b[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42008d200} 0xc421253a40
[36m2017-07-19 23:33:48.784 UTC [Composer] Debug -> DEBU d5c[0m Exiting NewDataCollection &{0xc420142760 0xc42008d200 $sysdata}
[36m2017-07-19 23:33:48.784 UTC [Composer] Debug -> DEBU d5d[0m Entering DataCollection.update &{0xc4201ce500}
[36m2017-07-19 23:33:48.784 UTC [Composer] Debug -> DEBU d5e[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.784 UTC [Composer] Debug -> DEBU d5f[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.785 UTC [Composer] Debug -> DEBU d60[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.785 UTC [Composer] Debug -> DEBU d61[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.785 UTC [Composer] Debug -> DEBU d62[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.785 UTC [Composer] Debug -> DEBU d63[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:48.785 UTC [Composer] Debug -> DEBU d64[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.785 UTC [Composer] Debug -> DEBU d65[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:48.785 UTC [Composer] Debug -> DEBU d66[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.786 UTC [Composer] Debug -> DEBU d67[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.788 UTC [Composer] Debug -> DEBU d68[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.788 UTC [Composer] Debug -> DEBU d69[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc420149900} 0xc4211b20d0
[36m2017-07-19 23:33:48.788 UTC [Composer] Debug -> DEBU d6a[0m Exiting NewDataCollection &{0xc4202fe480 0xc420149900 $sysdata}
[36m2017-07-19 23:33:48.788 UTC [Composer] Debug -> DEBU d6b[0m Exiting DataCollection.update 0
[36m2017-07-19 23:33:48.788 UTC [Composer] Debug -> DEBU d6c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d6d[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d6e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d6f[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d70[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d71[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d72[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d73[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d74[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.789 UTC [Composer] Debug -> DEBU d75[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.790 UTC [Composer] Debug -> DEBU d76[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.790 UTC [Composer] Debug -> DEBU d77[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.790 UTC [Composer] Debug -> DEBU d78[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.791 UTC [Composer] Debug -> DEBU d79[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.791 UTC [Composer] Debug -> DEBU d7a[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.791 UTC [Composer] Debug -> DEBU d7b[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:48.791 UTC [Composer] Info -> INFO d7c[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.791 UTC [Composer] Debug -> DEBU d7d[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.792 UTC [Composer] Debug -> DEBU d7e[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.792 UTC [Composer] Debug -> DEBU d7f[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.792 UTC [Composer] Debug -> DEBU d80[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:48.792 UTC [Composer] Debug -> DEBU d81[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.792 UTC [Composer] Debug -> DEBU d82[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:48.792 UTC [Composer] Debug -> DEBU d83[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.792 UTC [Composer] Debug -> DEBU d84[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:48.792 UTC [Composer] Debug -> DEBU d85[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.793 UTC [Composer] Debug -> DEBU d86[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.793 UTC [Composer] Debug -> DEBU d87[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.793 UTC [Composer] Debug -> DEBU d88[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.793 UTC [Composer] Debug -> DEBU d89[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.796 UTC [Composer] Debug -> DEBU d8a[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.797 UTC [Composer] Debug -> DEBU d8b[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc420149300} 0xc4211c8840
[36m2017-07-19 23:33:48.797 UTC [Composer] Debug -> DEBU d8c[0m @JS : TransactionLogger        :onResourceUpdated()       > [object Object]
[36m2017-07-19 23:33:48.798 UTC [Composer] Debug -> DEBU d8d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.798 UTC [Composer] Debug -> DEBU d8e[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.798 UTC [Composer] Debug -> DEBU d8f[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.799 UTC [Composer] Debug -> DEBU d90[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.799 UTC [Composer] Debug -> DEBU d91[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:48.799 UTC [Composer] Debug -> DEBU d92[0m Exiting NewDataCollection &{0xc420150770 0xc420149300 $sysdata}
[36m2017-07-19 23:33:48.799 UTC [Composer] Debug -> DEBU d93[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.799 UTC [Composer] Debug -> DEBU d94[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.800 UTC [Composer] Debug -> DEBU d95[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:48.800 UTC [Composer] Debug -> DEBU d96[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.800 UTC [Composer] Debug -> DEBU d97[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.800 UTC [Composer] Debug -> DEBU d98[0m @JS : TransactionLogger        :onResourceUpdated()       Serialized old resource 
[36m2017-07-19 23:33:48.801 UTC [Composer] Debug -> DEBU d99[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.801 UTC [Composer] Debug -> DEBU d9a[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.801 UTC [Composer] Debug -> DEBU d9b[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.803 UTC [Composer] Debug -> DEBU d9c[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.803 UTC [Composer] Debug -> DEBU d9d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.803 UTC [Composer] Debug -> DEBU d9e[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:48.803 UTC [Composer] Debug -> DEBU d9f[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.803 UTC [Composer] Debug -> DEBU da0[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:48.803 UTC [Composer] Debug -> DEBU da1[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.803 UTC [Composer] Debug -> DEBU da2[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:48.803 UTC [Composer] Debug -> DEBU da3[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.804 UTC [Composer] Debug -> DEBU da4[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:48.804 UTC [Composer] Debug -> DEBU da5[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:48.804 UTC [Composer] Debug -> DEBU da6[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.804 UTC [Composer] Debug -> DEBU da7[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.804 UTC [Composer] Debug -> DEBU da8[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.804 UTC [Composer] Debug -> DEBU da9[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.804 UTC [Composer] Debug -> DEBU daa[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.804 UTC [Composer] Debug -> DEBU dab[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.805 UTC [Composer] Debug -> DEBU dac[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.805 UTC [Composer] Debug -> DEBU dad[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:48.805 UTC [Composer] Debug -> DEBU dae[0m @JS : TransactionLogger        :onResourceUpdated()       Serialized new resource 
[36m2017-07-19 23:33:48.806 UTC [Composer] Debug -> DEBU daf[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:48.807 UTC [Composer] Debug -> DEBU db0[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:48.807 UTC [Composer] Debug -> DEBU db1[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.807 UTC [Composer] Debug -> DEBU db2[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:48.807 UTC [Composer] Debug -> DEBU db3[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.807 UTC [Composer] Debug -> DEBU db4[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.807 UTC [Composer] Debug -> DEBU db5[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.807 UTC [Composer] Debug -> DEBU db6[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.807 UTC [Composer] Debug -> DEBU db7[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.808 UTC [Composer] Debug -> DEBU db8[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.808 UTC [Composer] Debug -> DEBU dba[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.808 UTC [Composer] Debug -> DEBU dbb[0m @JS : TransactionLogger        :onResourceUpdated()       Generated JSON Patch [object Object]
[36m2017-07-19 23:33:48.808 UTC [Composer] Debug -> DEBU db9[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.808 UTC [Composer] Debug -> DEBU dbc[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.808 UTC [Composer] Debug -> DEBU dbd[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:48.808 UTC [Composer] Debug -> DEBU dbe[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:48.809 UTC [Composer] Debug -> DEBU dbf[0m @JS : TransactionLogger        :undefined()               < 
[36m2017-07-19 23:33:48.809 UTC [Composer] Debug -> DEBU dc0[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.809 UTC [Composer] Debug -> DEBU dc1[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.809 UTC [Composer] Debug -> DEBU dc2[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:48.809 UTC [Composer] Debug -> DEBU dc3[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.809 UTC [Composer] Debug -> DEBU dc4[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.810 UTC [Composer] Debug -> DEBU dc5[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:48.810 UTC [Composer] Debug -> DEBU dc6[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:48.810 UTC [Composer] Debug -> DEBU dc8[0m @JS : CompiledScriptBundle     :execute()                 Function executed (returned promise) 
[36m2017-07-19 23:33:48.811 UTC [Composer] Debug -> DEBU dc9[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.811 UTC [Composer] Debug -> DEBU dca[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:48.810 UTC [Composer] Debug -> DEBU dc7[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.812 UTC [Composer] Debug -> DEBU dcb[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.812 UTC [Composer] Debug -> DEBU dcc[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:48.813 UTC [Composer] Debug -> DEBU dcd[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.813 UTC [Composer] Debug -> DEBU dce[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.813 UTC [Composer] Debug -> DEBU dcf[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded README.md 
[36m2017-07-19 23:33:48.813 UTC [Composer] Debug -> DEBU dd0[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.814 UTC [Composer] Debug -> DEBU dd1[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.815 UTC [Composer] Debug -> DEBU dd2[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:48.815 UTC [Composer] Debug -> DEBU dd3[0m Entering Engine.handleCallback 0xc4210b5aa0 &{0xc420140e60}
[36m2017-07-19 23:33:48.815 UTC [Composer] Debug -> DEBU dd4[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:48.816 UTC [Composer] Debug -> DEBU dd5[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.816 UTC [Composer] Debug -> DEBU dd6[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:48.816 UTC [Composer] Debug -> DEBU dd7[0m @JS : CompiledScriptBundle     :execute()                 < 
[36m2017-07-19 23:33:48.816 UTC [Composer] Debug -> DEBU dd8[0m Entering ComposerPool.Put &{0xc420150140 0xc42027d400 0xc4202fe058}
[36m2017-07-19 23:33:48.816 UTC [Composer] Debug -> DEBU dd9[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:48.816 UTC [Composer] Debug -> DEBU dda[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:48.816 UTC [Composer] Debug -> DEBU ddb[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.816 UTC [Composer] Debug -> DEBU ddc[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.817 UTC [Composer] Debug -> DEBU ddd[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.817 UTC [Composer] Debug -> DEBU dde[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.817 UTC [Composer] Debug -> DEBU ddf[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.817 UTC [Composer] Debug -> DEBU de0[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.817 UTC [Composer] Debug -> DEBU de1[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.817 UTC [Composer] Debug -> DEBU de2[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.817 UTC [Composer] Debug -> DEBU de3[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.818 UTC [Composer] Debug -> DEBU de4[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.818 UTC [Composer] Debug -> DEBU de5[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.818 UTC [Composer] Debug -> DEBU de6[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.818 UTC [Composer] Debug -> DEBU de7[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.818 UTC [Composer] Debug -> DEBU de8[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.818 UTC [Composer] Debug -> DEBU de9[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.819 UTC [Composer] Debug -> DEBU deb[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.819 UTC [Composer] Debug -> DEBU dea[0m @JS : EngineTransactions       :submitTransaction()       Getting default transaction registry 
[36m2017-07-19 23:33:48.819 UTC [Composer] Debug -> DEBU dec[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:48.819 UTC [Composer] Debug -> DEBU ded[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.820 UTC [Composer] Debug -> DEBU dee[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:48.820 UTC [Composer] Debug -> DEBU def[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.820 UTC [Composer] Debug -> DEBU df0[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.820 UTC [Composer] Debug -> DEBU df1[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:48.820 UTC [Composer] Debug -> DEBU df2[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.820 UTC [Composer] Debug -> DEBU df3[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.821 UTC [Composer] Debug -> DEBU df4[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42131e400} 0xc42116a1e0
[36m2017-07-19 23:33:48.821 UTC [Composer] Debug -> DEBU df5[0m Exiting NewDataCollection &{0xc4200288d0 0xc42131e400 $sysregistries}
[36m2017-07-19 23:33:48.821 UTC [Composer] Debug -> DEBU df6[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.822 UTC [Composer] Debug -> DEBU df7[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.822 UTC [Composer] Debug -> DEBU df8[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.822 UTC [Composer] Debug -> DEBU df9[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.822 UTC [Composer] Debug -> DEBU dfa[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.822 UTC [Composer] Debug -> DEBU dfb[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.823 UTC [Composer] Debug -> DEBU dfc[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.823 UTC [Composer] Debug -> DEBU dfd[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.823 UTC [Composer] Debug -> DEBU dfe[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.823 UTC [Composer] Debug -> DEBU dff[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.823 UTC [Composer] Debug -> DEBU e00[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:48.824 UTC [Composer] Debug -> DEBU e01[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.824 UTC [Composer] Debug -> DEBU e02[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:48.824 UTC [Composer] Debug -> DEBU e03[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:48.825 UTC [Composer] Debug -> DEBU e04[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.826 UTC [Composer] Debug -> DEBU e05[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42055f200} 0xc4211a5600
[36m2017-07-19 23:33:48.828 UTC [Composer] Debug -> DEBU e06[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.828 UTC [Composer] Debug -> DEBU e07[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.828 UTC [Composer] Debug -> DEBU e08[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.828 UTC [Composer] Debug -> DEBU e09[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.828 UTC [Composer] Debug -> DEBU e0a[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.829 UTC [Composer] Debug -> DEBU e0b[0m @JS : ModelManager             :addSystemModels()         > 
2017-07-19 23:33:48.829 UTC [Composer] Info -> INFO e0c[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.829 UTC [Composer] Debug -> DEBU e0d[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.829 UTC [Composer] Debug -> DEBU e0e[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.829 UTC [Composer] Debug -> DEBU e0f[0m @JS : Engine                   :invoke()                  Calling engine function submitTransaction
[36m2017-07-19 23:33:48.829 UTC [Composer] Debug -> DEBU e10[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.830 UTC [Composer] Debug -> DEBU e11[0m Exiting NewDataCollection &{0xc420142968 0xc42055f200 Transaction:default}
[36m2017-07-19 23:33:48.830 UTC [Composer] Debug -> DEBU e12[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.830 UTC [Composer] Debug -> DEBU e13[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.830 UTC [Composer] Debug -> DEBU e14[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.830 UTC [Composer] Debug -> DEBU e15[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.830 UTC [Composer] Debug -> DEBU e16[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.830 UTC [Composer] Debug -> DEBU e17[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.831 UTC [Composer] Debug -> DEBU e18[0m @JS : EngineTransactions       :submitTransaction()       > [object Object], default,{"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#TOSEDVQKUV_c1","newOwner":"resource:org.example.mynetwork.Trader#TOSEDVQKUV_t1","transactionId":"09403b58-3126-45d5-b650-9f4ca0ec3a81","timestamp":"2017-07-19T23:33:43.372Z"}
[36m2017-07-19 23:33:48.831 UTC [Composer] Debug -> DEBU e19[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:48.831 UTC [Composer] Debug -> DEBU e1a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.831 UTC [Composer] Debug -> DEBU e1b[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.832 UTC [Composer] Debug -> DEBU e1c[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42131e400} 0xc421177e00
[36m2017-07-19 23:33:48.832 UTC [Composer] Debug -> DEBU e1d[0m @JS : EngineTransactions       :submitTransaction()       Parsing transaction from JSON 
[36m2017-07-19 23:33:48.832 UTC [Composer] Debug -> DEBU e1e[0m Exiting NewDataCollection &{0xc4202fe628 0xc42131e400 $sysidentities}
[36m2017-07-19 23:33:48.832 UTC [Composer] Debug -> DEBU e20[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.832 UTC [Composer] Debug -> DEBU e1f[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.833 UTC [Composer] Debug -> DEBU e21[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.833 UTC [Composer] Debug -> DEBU e22[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.833 UTC [Composer] Debug -> DEBU e23[0m @JS : EngineTransactions       :submitTransaction()       Parsing transaction from parsed JSON object 
[36m2017-07-19 23:33:48.834 UTC [Composer] Debug -> DEBU e24[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.840 UTC [Composer] Debug -> DEBU e25[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.840 UTC [Composer] Debug -> DEBU e26[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.840 UTC [Composer] Debug -> DEBU e27[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.840 UTC [Composer] Debug -> DEBU e28[0m Entering IdentityService.getCurrentUserID &{0xc4201ce220}
[36m2017-07-19 23:33:48.840 UTC [Composer] Debug -> DEBU e29[0m Entering extractNameFromCreator 0xc42116ab40
[36m2017-07-19 23:33:48.840 UTC [Composer] Debug -> DEBU e2a[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.841 UTC [Composer] Debug -> DEBU e2b[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.841 UTC [Composer] Debug -> DEBU e2c[0m Common Name admin
[36m2017-07-19 23:33:48.841 UTC [Composer] Debug -> DEBU e2d[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.841 UTC [Composer] Debug -> DEBU e2e[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.841 UTC [Composer] Debug -> DEBU e2f[0m @JS : TransactionLogger        :constructor()             > Resource {id=org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81}, [object Object], [object Object]
[36m2017-07-19 23:33:48.841 UTC [Composer] Debug -> DEBU e30[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.842 UTC [Composer] Debug -> DEBU e31[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.842 UTC [Composer] Debug -> DEBU e32[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.842 UTC [Composer] Debug -> DEBU e33[0m @JS : TransactionLogger        :constructor()             < 
[36m2017-07-19 23:33:48.842 UTC [Composer] Debug -> DEBU e34[0m @JS : EngineTransactions       :submitTransaction()       Storing executed transaction in transaction registry 
[36m2017-07-19 23:33:48.842 UTC [Composer] Debug -> DEBU e35[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.842 UTC [Composer] Debug -> DEBU e36[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.843 UTC [Composer] Debug -> DEBU e37[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trade#44ed880c-9906-4349-998a-c2fad16e932d, CREATE
[36m2017-07-19 23:33:48.843 UTC [Composer] Debug -> DEBU e38[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:48.843 UTC [Composer] Debug -> DEBU e39[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:48.844 UTC [Composer] Debug -> DEBU e3a[0m @JS : EngineTransactions       :submitTransaction()       Parsed transaction, resolving it Resource {id=org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81}
[36m2017-07-19 23:33:48.844 UTC [Composer] Debug -> DEBU e3b[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.844 UTC [Composer] Debug -> DEBU e3c[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.844 UTC [Composer] Debug -> DEBU e3d[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.845 UTC [Composer] Debug -> DEBU e3e[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.845 UTC [Composer] Debug -> DEBU e3f[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e40[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e41[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e42[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e43[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e44[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e45[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e46[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e47[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.846 UTC [Composer] Debug -> DEBU e48[0m Entering DataCollection.add &{0xc4201ce500}
[36m2017-07-19 23:33:48.849 UTC [Composer] Debug -> DEBU e49[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.850 UTC [Composer] Debug -> DEBU e4a[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:48.851 UTC [Composer] Debug -> DEBU e4b[0m @JS : Resolver                 :constructor()             > [object Object]
[36m2017-07-19 23:33:48.852 UTC [Composer] Debug -> DEBU e4c[0m @JS : Resolver                 :constructor()             < 
[36m2017-07-19 23:33:48.852 UTC [Composer] Debug -> DEBU e4d[0m @JS : TransactionLogger        :onResourceAdded()         > [object Object]
[36m2017-07-19 23:33:48.852 UTC [Composer] Debug -> DEBU e4e[0m @JS : TransactionLogger        :undefined()               < 
[36m2017-07-19 23:33:48.852 UTC [Composer] Debug -> DEBU e4f[0m @JS : Resolver                 :resolve()                 > Resource {id=org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81}
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e50[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81}, [object Object]
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e51[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e53[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e54[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e55[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e56[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e57[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e58[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e59[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.854 UTC [Composer] Debug -> DEBU e5a[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.853 UTC [Composer] Debug -> DEBU e52[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property commodity
[36m2017-07-19 23:33:48.855 UTC [Composer] Debug -> DEBU e5b[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.856 UTC [Composer] Debug -> DEBU e5c[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.856 UTC [Composer] Debug -> DEBU e5d[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.856 UTC [Composer] Debug -> DEBU e5e[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.856 UTC [Composer] Debug -> DEBU e5f[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.856 UTC [Composer] Debug -> DEBU e60[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.856 UTC [Composer] Debug -> DEBU e61[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.857 UTC [Composer] Debug -> DEBU e62[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.857 UTC [Composer] Debug -> DEBU e63[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Commodity#TOSEDVQKUV_c1}
[36m2017-07-19 23:33:48.858 UTC [Composer] Debug -> DEBU e64[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.858 UTC [Composer] Debug -> DEBU e65[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:48.858 UTC [Composer] Debug -> DEBU e66[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:48.859 UTC [Composer] Debug -> DEBU e67[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded model file 
[36m2017-07-19 23:33:48.867 UTC [Composer] Debug -> DEBU e68[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.867 UTC [Composer] Debug -> DEBU e69[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded JavaScript file 
[36m2017-07-19 23:33:48.868 UTC [Composer] Debug -> DEBU e6a[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.869 UTC [Composer] Debug -> DEBU e6b[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property newOwner
[36m2017-07-19 23:33:48.869 UTC [Composer] Debug -> DEBU e6c[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:48.871 UTC [Composer] Debug -> DEBU e6d[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.871 UTC [Composer] Debug -> DEBU e6e[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.871 UTC [Composer] Debug -> DEBU e6f[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Trader#TOSEDVQKUV_t1}
[36m2017-07-19 23:33:48.871 UTC [Composer] Debug -> DEBU e70[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.871 UTC [Composer] Debug -> DEBU e71[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:48.871 UTC [Composer] Debug -> DEBU e72[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.871 UTC [Composer] Debug -> DEBU e73[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"TSNLFMEFFA_t9","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:48.872 UTC [Composer] Debug -> DEBU e74[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.872 UTC [Composer] Debug -> DEBU e75[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.872 UTC [Composer] Debug -> DEBU e76[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:48.874 UTC [Composer] Debug -> DEBU e77[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.875 UTC [Composer] Debug -> DEBU e78[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:48.875 UTC [Composer] Debug -> DEBU e79[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:48.875 UTC [Composer] Debug -> DEBU e7a[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:48.875 UTC [Composer] Debug -> DEBU e7b[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:48.875 UTC [Composer] Debug -> DEBU e7c[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:48.875 UTC [Composer] Debug -> DEBU e7d[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:48.875 UTC [Composer] Debug -> DEBU e7e[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.876 UTC [Composer] Debug -> DEBU e7f[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:48.876 UTC [Composer] Debug -> DEBU e80[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.876 UTC [Composer] Debug -> DEBU e81[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.876 UTC [Composer] Debug -> DEBU e82[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.876 UTC [Composer] Debug -> DEBU e83[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.877 UTC [Composer] Debug -> DEBU e84[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.877 UTC [Composer] Debug -> DEBU e85[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.877 UTC [Composer] Debug -> DEBU e86[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:48.877 UTC [Composer] Debug -> DEBU e87[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.877 UTC [Composer] Debug -> DEBU e88[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:48.877 UTC [Composer] Debug -> DEBU e89[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property transactionId
[36m2017-07-19 23:33:48.877 UTC [Composer] Debug -> DEBU e8a[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc42131e400} 0xc4210eacc0
[36m2017-07-19 23:33:48.878 UTC [Composer] Debug -> DEBU e8b[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.878 UTC [Composer] Debug -> DEBU e8c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.878 UTC [Composer] Debug -> DEBU e8d[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:48.878 UTC [Composer] Debug -> DEBU e8e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.878 UTC [Composer] Debug -> DEBU e8f[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:48.878 UTC [Composer] Debug -> DEBU e90[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.878 UTC [Composer] Debug -> DEBU e91[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:48.878 UTC [Composer] Debug -> DEBU e92[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.879 UTC [Composer] Debug -> DEBU e93[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc42008cf00} 0xc42112fb70
[36m2017-07-19 23:33:48.879 UTC [Composer] Debug -> DEBU e94[0m Exiting NewDataCollection &{0xc420028af8 0xc42008cf00 $sysdata}
[36m2017-07-19 23:33:48.880 UTC [Composer] Debug -> DEBU e95[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.880 UTC [Composer] Debug -> DEBU e96[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.884 UTC [Composer] Debug -> DEBU e97[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:48.886 UTC [Composer] Debug -> DEBU e98[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded permissions.acl 
[36m2017-07-19 23:33:48.886 UTC [Composer] Debug -> DEBU e99[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 09403b58-3126-45d5-b650-9f4ca0ec3a81
[36m2017-07-19 23:33:48.886 UTC [Composer] Debug -> DEBU e9a[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property timestamp
[36m2017-07-19 23:33:48.886 UTC [Composer] Debug -> DEBU e9b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.886 UTC [Composer] Debug -> DEBU e9c[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.886 UTC [Composer] Debug -> DEBU e9d[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.887 UTC [Composer] Debug -> DEBU e9e[0m Exiting NewDataCollection &{0xc420028a80 0xc42131e400 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:48.887 UTC [Composer] Debug -> DEBU e9f[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.887 UTC [Composer] Debug -> DEBU ea0[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.887 UTC [Composer] Debug -> DEBU ea1[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:48.892 UTC [Composer] Debug -> DEBU ea2[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded package.json 
[36m2017-07-19 23:33:48.892 UTC [Composer] Debug -> DEBU ea3[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 2017-07-19 23:33:43.372+00:00
[36m2017-07-19 23:33:48.893 UTC [Composer] Debug -> DEBU ea4[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:48.893 UTC [Composer] Debug -> DEBU ea5[0m @JS : BusinessNetworkDefinition:constructor()             > null, null
[36m2017-07-19 23:33:48.893 UTC [Composer] Debug -> DEBU ea6[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU ea7[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU ea8[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU ea9[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU eaa[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU eab[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU eac[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU ead[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU eaf[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.894 UTC [Composer] Debug -> DEBU eae[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:48.895 UTC [Composer] Debug -> DEBU eb0[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:48.895 UTC [Composer] Debug -> DEBU eb1[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:48.895 UTC [Composer] Debug -> DEBU eb2[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:48.895 UTC [Composer] Debug -> DEBU eb3[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:48.896 UTC [Composer] Debug -> DEBU eb4[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:48.896 UTC [Composer] Debug -> DEBU eb5[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:48.897 UTC [Composer] Debug -> DEBU eb6[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#TSNLFMEFFA_t9, CREATE
[36m2017-07-19 23:33:48.897 UTC [Composer] Debug -> DEBU eb7[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:48.897 UTC [Composer] Debug -> DEBU eb8[0m @JS : BusinessNetworkDefinition:constructor()             Using package.json{"engines":{"composer":"^0.10.0"},"name":"my-network","version":"0.1.2","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://github.com/hyperledger/composer-sample-networks/blob/master/packages/my-network/networkimage.png","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/my-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.conf","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
[36m2017-07-19 23:33:48.897 UTC [Composer] Debug -> DEBU eb9[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:48.897 UTC [Composer] Debug -> DEBU eba[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Commodity#TOSEDVQKUV_c1}, [object Object]
[36m2017-07-19 23:33:48.897 UTC [Composer] Debug -> DEBU ebb[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:48.898 UTC [Composer] Debug -> DEBU ebe[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Commodity#TOSEDVQKUV_c1}
[36m2017-07-19 23:33:48.898 UTC [Composer] Debug -> DEBU ebf[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:48.897 UTC [Composer] Debug -> DEBU ebc[0m Entering EventService.transactionCommit &{0xc4201ce500}
[36m2017-07-19 23:33:48.898 UTC [Composer] Debug -> DEBU ec0[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:48.898 UTC [Composer] Debug -> DEBU ec1[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Commodity super=Asset enum=false abstract=false}
[36m2017-07-19 23:33:48.898 UTC [Composer] Debug -> DEBU ec2[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:48.898 UTC [Composer] Debug -> DEBU ec3[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:48.897 UTC [Composer] Debug -> DEBU ebd[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.898 UTC [Composer] Debug -> DEBU ec4[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:48.899 UTC [Composer] Debug -> DEBU ec6[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:48.899 UTC [Composer] Debug -> DEBU ec7[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Commodity
[36m2017-07-19 23:33:48.898 UTC [Composer] Debug -> DEBU ec5[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.899 UTC [Composer] Debug -> DEBU ec8[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.899 UTC [Composer] Debug -> DEBU ec9[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:48.899 UTC [Composer] Debug -> DEBU eca[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.899 UTC [Composer] Debug -> DEBU ecb[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.899 UTC [Composer] Debug -> DEBU ecc[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.900 UTC [Composer] Debug -> DEBU ecd[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:48.900 UTC [Composer] Debug -> DEBU ece[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:48.900 UTC [Composer] Debug -> DEBU ecf[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:48.901 UTC [Composer] Debug -> DEBU ed0[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:48.901 UTC [Composer] Debug -> DEBU ed1[0m @JS : ModelManager             :constructor()             > 
[36m2017-07-19 23:33:48.901 UTC [Composer] Debug -> DEBU ed2[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.901 UTC [Composer] Debug -> DEBU ed3[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:48.901 UTC [Composer] Debug -> DEBU ed4[0m @JS : ModelManager             :addSystemModels()         > 
[36m2017-07-19 23:33:48.901 UTC [Composer] Debug -> DEBU ed5[0m Entering DataCollection.add &{0xc4201ce220}
[36m2017-07-19 23:33:48.901 UTC [Composer] Debug -> DEBU ed6[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.902 UTC [Composer] Debug -> DEBU ed7[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:48.902 UTC [Composer] Debug -> DEBU ed8[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
2017-07-19 23:33:48.902 UTC [Composer] Info -> INFO ed9[0m @JS : ModelManager             :info()                    
    namespace org.hyperledger.composer.system

    abstract asset Asset {  }

    abstract participant Participant {   }

    abstract transaction Transaction identified by transactionId{
      o String transactionId
      o DateTime timestamp
    }

    abstract event Event identified by eventId{
      o String eventId
      o DateTime timestamp
    }
 
[36m2017-07-19 23:33:48.903 UTC [Composer] Debug -> DEBU eda[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:48.903 UTC [Composer] Debug -> DEBU edb[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.903 UTC [Composer] Debug -> DEBU edc[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:48.903 UTC [Composer] Debug -> DEBU edd[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.903 UTC [Composer] Debug -> DEBU ede[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.903 UTC [Composer] Debug -> DEBU edf[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.903 UTC [Composer] Debug -> DEBU ee0[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.904 UTC [Composer] Debug -> DEBU ee1[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.904 UTC [Composer] Debug -> DEBU ee2[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ee4[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ee5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ee6[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ee7[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ee8[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU eea[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ee3[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ee9[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU eec[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU eed[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU eef[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ef0[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU eee[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU eeb[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.905 UTC [Composer] Debug -> DEBU ef1[0m Entering DataService.getCollection &{0xc420145580}
[36m2017-07-19 23:33:48.907 UTC [Composer] Debug -> DEBU ef2[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc4210c54d0
[36m2017-07-19 23:33:48.907 UTC [Composer] Debug -> DEBU ef3[0m Exiting NewDataCollection &{0xc420150a30 0xc4211c6580 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:48.907 UTC [Composer] Debug -> DEBU ef4[0m Entering NewDataCollection &{0xc420145580} &{0xc420142278 0xc420149c80} 0xc4210dd0e0
[36m2017-07-19 23:33:48.908 UTC [Composer] Debug -> DEBU ef5[0m Exiting NewDataCollection &{0xc420142c20 0xc420149c80 $sysdata}
[36m2017-07-19 23:33:48.908 UTC [Composer] Debug -> DEBU ef6[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.908 UTC [Composer] Debug -> DEBU ef7[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:48.908 UTC [Composer] Debug -> DEBU ef8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.908 UTC [Composer] Debug -> DEBU ef9[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:48.909 UTC [Composer] Debug -> DEBU efa[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.909 UTC [Composer] Debug -> DEBU efb[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.909 UTC [Composer] Debug -> DEBU efc[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:48.910 UTC [Composer] Debug -> DEBU efd[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.910 UTC [Composer] Debug -> DEBU efe[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.910 UTC [Composer] Debug -> DEBU eff[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:48.910 UTC [Composer] Debug -> DEBU f00[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.910 UTC [Composer] Debug -> DEBU f01[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.910 UTC [Composer] Debug -> DEBU f02[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.910 UTC [Composer] Debug -> DEBU f03[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:48.910 UTC [Composer] Debug -> DEBU f04[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.912 UTC [Composer] Debug -> DEBU f05[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.912 UTC [Composer] Debug -> DEBU f06[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.912 UTC [Composer] Debug -> DEBU f07[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.916 UTC [Composer] Debug -> DEBU f08[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.918 UTC [Composer] Debug -> DEBU f09[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc420149900} 0xc42112da80
[36m2017-07-19 23:33:48.920 UTC [Composer] Debug -> DEBU f0a[0m Exiting NewDataCollection &{0xc4202fe7f0 0xc420149900 $sysdata}
[36m2017-07-19 23:33:48.920 UTC [Composer] Debug -> DEBU f0b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.922 UTC [Composer] Debug -> DEBU f0c[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:48.923 UTC [Composer] Debug -> DEBU f0d[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.923 UTC [Composer] Debug -> DEBU f0e[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.925 UTC [Composer] Debug -> DEBU f0f[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry TOSEDVQKUV_c1
[36m2017-07-19 23:33:48.925 UTC [Composer] Debug -> DEBU f11[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.925 UTC [Composer] Debug -> DEBU f10[0m Entering DataCollection.get &{0xc420145580}
[36m2017-07-19 23:33:48.928 UTC [Composer] Debug -> DEBU f12[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.928 UTC [Composer] Debug -> DEBU f13[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:48.931 UTC [Composer] Debug -> DEBU f14[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.932 UTC [Composer] Debug -> DEBU f15[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.932 UTC [Composer] Debug -> DEBU f16[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.932 UTC [Composer] Debug -> DEBU f17[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.932 UTC [Composer] Debug -> DEBU f18[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f19[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f1a[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f1b[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f1c[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f1d[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f1e[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f1f[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f20[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#TOSEDVQKUV_c1, READ
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f21[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f22[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f23[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.933 UTC [Composer] Debug -> DEBU f24[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f25[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f26[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f27[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f28[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f29[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f2a[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f2b[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f2c[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f2d[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f2e[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f2f[0m Entering Engine.handleCallback 0xc4205ce7e0 &{0xc4201ce500}
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f30[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:48.934 UTC [Composer] Debug -> DEBU f31[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:48.935 UTC [Composer] Debug -> DEBU f32[0m Entering ComposerPool.Put &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:48.935 UTC [Composer] Debug -> DEBU f33[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:48.935 UTC [Composer] Debug -> DEBU f34[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:48.935 UTC [Composer] Debug -> DEBU f35[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:48.935 UTC [Composer] Debug -> DEBU f36[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:48.937 UTC [Composer] Debug -> DEBU f37[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:48.938 UTC [Composer] Debug -> DEBU f38[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:48.938 UTC [Composer] Debug -> DEBU f39[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:48.938 UTC [Composer] Debug -> DEBU f3a[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.939 UTC [Composer] Debug -> DEBU f3b[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.939 UTC [Composer] Debug -> DEBU f3c[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.939 UTC [Composer] Debug -> DEBU f3d[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.939 UTC [Composer] Debug -> DEBU f3e[0m Entering EventService.transactionCommit &{0xc4201ce220}
[36m2017-07-19 23:33:48.939 UTC [Composer] Debug -> DEBU f3f[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.940 UTC [Composer] Debug -> DEBU f40[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:48.940 UTC [Composer] Debug -> DEBU f41[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:48.940 UTC [Composer] Debug -> DEBU f42[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:48.940 UTC [Composer] Debug -> DEBU f43[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.940 UTC [Composer] Debug -> DEBU f44[0m @JS : Resolver                 :resolveRelationship()     Got resource from registry, resolving 
[36m2017-07-19 23:33:48.941 UTC [Composer] Debug -> DEBU f45[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:48.941 UTC [Composer] Debug -> DEBU f46[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:48.941 UTC [Composer] Debug -> DEBU f47[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:48.941 UTC [Composer] Debug -> DEBU f48[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Commodity#TOSEDVQKUV_c1}, [object Object]
[36m2017-07-19 23:33:48.941 UTC [Composer] Debug -> DEBU f49[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.941 UTC [Composer] Debug -> DEBU f4a[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:48.941 UTC [Composer] Debug -> DEBU f4b[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.943 UTC [Composer] Debug -> DEBU f4c[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property tradingSymbol
[36m2017-07-19 23:33:48.944 UTC [Composer] Debug -> DEBU f4e[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.943 UTC [Composer] Debug -> DEBU f4d[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:48.945 UTC [Composer] Debug -> DEBU f4f[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:48.946 UTC [Composer] Debug -> DEBU f51[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring TOSEDVQKUV_c1
[36m2017-07-19 23:33:48.945 UTC [Composer] Debug -> DEBU f50[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.947 UTC [Composer] Debug -> DEBU f52[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property description
[36m2017-07-19 23:33:48.947 UTC [Composer] Debug -> DEBU f53[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.947 UTC [Composer] Debug -> DEBU f54[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.947 UTC [Composer] Debug -> DEBU f55[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f56[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Sample Commodity
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f57[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f58[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f59[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f5a[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f5b[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f5c[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f5d[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property mainExchange
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f5e[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f60[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.949 UTC [Composer] Debug -> DEBU f5f[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.950 UTC [Composer] Debug -> DEBU f61[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring IDK
[36m2017-07-19 23:33:48.950 UTC [Composer] Debug -> DEBU f62[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:48.951 UTC [Composer] Debug -> DEBU f63[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.951 UTC [Composer] Debug -> DEBU f64[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:48.951 UTC [Composer] Debug -> DEBU f65[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property quantity
[36m2017-07-19 23:33:48.951 UTC [Composer] Debug -> DEBU f67[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:48.952 UTC [Composer] Debug -> DEBU f68[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 0
[36m2017-07-19 23:33:48.951 UTC [Composer] Debug -> DEBU f66[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.952 UTC [Composer] Debug -> DEBU f69[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property owner
[36m2017-07-19 23:33:48.953 UTC [Composer] Debug -> DEBU f6a[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.953 UTC [Composer] Debug -> DEBU f6b[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:48.953 UTC [Composer] Debug -> DEBU f6c[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Trader#TOSEDVQKUV_t0}
[36m2017-07-19 23:33:48.956 UTC [Composer] Debug -> DEBU f6d[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:48.959 UTC [Composer] Debug -> DEBU f6e[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:48.961 UTC [Composer] Debug -> DEBU f6f[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:48.963 UTC [Composer] Debug -> DEBU f70[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:48.964 UTC [Composer] Debug -> DEBU f71[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.964 UTC [Composer] Debug -> DEBU f72[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Trader#TOSEDVQKUV_t0}, [object Object]
[36m2017-07-19 23:33:48.964 UTC [Composer] Debug -> DEBU f73[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:48.964 UTC [Composer] Debug -> DEBU f74[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:48.964 UTC [Composer] Debug -> DEBU f75[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:48.964 UTC [Composer] Debug -> DEBU f76[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.964 UTC [Composer] Debug -> DEBU f77[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.964 UTC [Composer] Debug -> DEBU f78[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.965 UTC [Composer] Debug -> DEBU f79[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:48.965 UTC [Composer] Debug -> DEBU f7a[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:48.965 UTC [Composer] Debug -> DEBU f7b[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Trader#TOSEDVQKUV_t0}
[36m2017-07-19 23:33:48.967 UTC [Composer] Debug -> DEBU f7c[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc420149300} 0xc421065740
[36m2017-07-19 23:33:48.967 UTC [Composer] Debug -> DEBU f7d[0m Exiting NewDataCollection &{0xc420142d58 0xc420149300 $sysregistries}
[36m2017-07-19 23:33:48.967 UTC [Composer] Debug -> DEBU f7e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.968 UTC [Composer] Debug -> DEBU f7f[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:48.968 UTC [Composer] Debug -> DEBU f80[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.968 UTC [Composer] Debug -> DEBU f81[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.968 UTC [Composer] Debug -> DEBU f82[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.969 UTC [Composer] Debug -> DEBU f83[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Trader super=Participant enum=false abstract=false}
[36m2017-07-19 23:33:48.969 UTC [Composer] Debug -> DEBU f84[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:48.970 UTC [Composer] Debug -> DEBU f85[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc420149300} 0xc421065e10
[36m2017-07-19 23:33:48.970 UTC [Composer] Debug -> DEBU f86[0m Exiting NewDataCollection &{0xc420028e58 0xc420149300 $sysidentities}
[36m2017-07-19 23:33:48.970 UTC [Composer] Debug -> DEBU f87[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.971 UTC [Composer] Debug -> DEBU f88[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:48.971 UTC [Composer] Debug -> DEBU f89[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Trader
[36m2017-07-19 23:33:48.971 UTC [Composer] Debug -> DEBU f8a[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:48.971 UTC [Composer] Debug -> DEBU f8b[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:48.972 UTC [Composer] Debug -> DEBU f8c[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:48.972 UTC [Composer] Debug -> DEBU f8d[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.972 UTC [Composer] Debug -> DEBU f8e[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:48.972 UTC [Composer] Debug -> DEBU f8f[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.975 UTC [Composer] Debug -> DEBU f90[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:48.975 UTC [Composer] Debug -> DEBU f91[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:48.975 UTC [Composer] Debug -> DEBU f92[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.975 UTC [Composer] Debug -> DEBU f93[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.975 UTC [Composer] Debug -> DEBU f94[0m Entering IdentityService.getCurrentUserID &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.975 UTC [Composer] Debug -> DEBU f95[0m Entering extractNameFromCreator 0xc4210accd0
[36m2017-07-19 23:33:48.975 UTC [Composer] Debug -> DEBU f96[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:48.976 UTC [Composer] Debug -> DEBU f97[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:48.976 UTC [Composer] Debug -> DEBU f98[0m Common Name admin
[36m2017-07-19 23:33:48.976 UTC [Composer] Debug -> DEBU f99[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:48.976 UTC [Composer] Debug -> DEBU f9a[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:48.976 UTC [Composer] Debug -> DEBU f9b[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:48.976 UTC [Composer] Debug -> DEBU f9c[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:48.976 UTC [Composer] Debug -> DEBU f9d[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:48.976 UTC [Composer] Debug -> DEBU f9e[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU f9f[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa0[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa1[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa2[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa3[0m Entering Context.getEventService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa4[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa5[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa6[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa7[0m Entering Context.getHTTPService &{0xc4201cf6e0}
[36m2017-07-19 23:33:48.977 UTC [Composer] Debug -> DEBU fa8[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:48.978 UTC [Composer] Debug -> DEBU fa9[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:48.978 UTC [Composer] Debug -> DEBU faa[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:48.980 UTC [Composer] Debug -> DEBU fab[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:48.980 UTC [Composer] Debug -> DEBU fac[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.981 UTC [Composer] Debug -> DEBU fad[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:48.986 UTC [Composer] Debug -> DEBU fae[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:48.986 UTC [Composer] Debug -> DEBU faf[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:48.986 UTC [Composer] Debug -> DEBU fb0[0m Entering Engine.handleCallback 0xc4212abd40 &{0xc4201ce220}
[36m2017-07-19 23:33:48.987 UTC [Composer] Debug -> DEBU fb1[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:48.987 UTC [Composer] Debug -> DEBU fb2[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:48.987 UTC [Composer] Debug -> DEBU fb3[0m Entering ComposerPool.Put &{0xc420028000 0xc4203ac870 0xc420150318}
[36m2017-07-19 23:33:48.987 UTC [Composer] Debug -> DEBU fb4[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:48.987 UTC [Composer] Debug -> DEBU fb5[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:48.987 UTC [Composer] Debug -> DEBU fb6[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:48.987 UTC [Composer] Debug -> DEBU fb7[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:48.987 UTC [Composer] Debug -> DEBU fb8[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:48.988 UTC [Composer] Debug -> DEBU fb9[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:48.988 UTC [Composer] Debug -> DEBU fba[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:48.988 UTC [Composer] Debug -> DEBU fbb[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:48.988 UTC [Composer] Debug -> DEBU fbc[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:48.988 UTC [Composer] Debug -> DEBU fbd[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:48.988 UTC [Composer] Debug -> DEBU fbe[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.989 UTC [Composer] Debug -> DEBU fbf[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:48.989 UTC [Composer] Debug -> DEBU fc0[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:48.989 UTC [Composer] Debug -> DEBU fc1[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:48.989 UTC [Composer] Debug -> DEBU fc2[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:48.989 UTC [Composer] Debug -> DEBU fc3[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:48.989 UTC [Composer] Debug -> DEBU fc4[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:48.989 UTC [Composer] Debug -> DEBU fc5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:48.989 UTC [Composer] Debug -> DEBU fc6[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:48.991 UTC [Composer] Debug -> DEBU fc7[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42008d200} 0xc42066e800
[36m2017-07-19 23:33:48.992 UTC [Composer] Debug -> DEBU fc8[0m Exiting NewDataCollection &{0xc420150c30 0xc42008d200 $sysdata}
[36m2017-07-19 23:33:48.992 UTC [Composer] Debug -> DEBU fc9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:48.992 UTC [Composer] Debug -> DEBU fca[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:48.992 UTC [Composer] Debug -> DEBU fcb[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:48.994 UTC [Composer] Debug -> DEBU fcc[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:48.995 UTC [Composer] Debug -> DEBU fcd[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:48.995 UTC [Composer] Debug -> DEBU fce[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:48.995 UTC [Composer] Debug -> DEBU fcf[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:48.995 UTC [Composer] Debug -> DEBU fd0[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:48.995 UTC [Composer] Debug -> DEBU fd1[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:48.995 UTC [Composer] Debug -> DEBU fd2[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:48.996 UTC [Composer] Debug -> DEBU fd3[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:48.996 UTC [Composer] Debug -> DEBU fd4[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.001 UTC [Composer] Debug -> DEBU fd5[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:49.002 UTC [Composer] Debug -> DEBU fd6[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:49.002 UTC [Composer] Debug -> DEBU fd7[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:49.002 UTC [Composer] Debug -> DEBU fd8[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:49.002 UTC [Composer] Debug -> DEBU fd9[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.002 UTC [Composer] Debug -> DEBU fda[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:49.003 UTC [Composer] Debug -> DEBU fdb[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.003 UTC [Composer] Debug -> DEBU fdc[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.003 UTC [Composer] Debug -> DEBU fdd[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.003 UTC [Composer] Debug -> DEBU fde[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.004 UTC [Composer] Debug -> DEBU fdf[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.004 UTC [Composer] Debug -> DEBU fe0[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.004 UTC [Composer] Debug -> DEBU fe1[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.004 UTC [Composer] Debug -> DEBU fe2[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.004 UTC [Composer] Debug -> DEBU fe3[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.004 UTC [Composer] Debug -> DEBU fe4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.004 UTC [Composer] Debug -> DEBU fe5[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.005 UTC [Composer] Debug -> DEBU fe6[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.007 UTC [Composer] Debug -> DEBU fe7[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.007 UTC [Composer] Debug -> DEBU fe8[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc420149600} 0xc42106fab0
[36m2017-07-19 23:33:49.007 UTC [Composer] Debug -> DEBU fe9[0m Exiting NewDataCollection &{0xc420142dc8 0xc420149600 $sysdata}
[36m2017-07-19 23:33:49.007 UTC [Composer] Debug -> DEBU fea[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc42066eea0
[36m2017-07-19 23:33:49.007 UTC [Composer] Debug -> DEBU feb[0m Exiting NewDataCollection &{0xc420142da8 0xc4211c6580 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.010 UTC [Composer] Debug -> DEBU fed[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.010 UTC [Composer] Debug -> DEBU fee[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.009 UTC [Composer] Debug -> DEBU fec[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.010 UTC [Composer] Debug -> DEBU fef[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.011 UTC [Composer] Debug -> DEBU ff0[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.011 UTC [Composer] Debug -> DEBU ff1[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.011 UTC [Composer] Debug -> DEBU ff2[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.011 UTC [Composer] Debug -> DEBU ff3[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.011 UTC [Composer] Debug -> DEBU ff4[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.011 UTC [Composer] Debug -> DEBU ff5[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.011 UTC [Composer] Debug -> DEBU ff6[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.011 UTC [Composer] Debug -> DEBU ff7[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.012 UTC [Composer] Debug -> DEBU ff8[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.012 UTC [Composer] Debug -> DEBU ff9[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.012 UTC [Composer] Debug -> DEBU ffa[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.012 UTC [Composer] Debug -> DEBU ffb[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.013 UTC [Composer] Debug -> DEBU ffc[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.013 UTC [Composer] Debug -> DEBU ffd[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.013 UTC [Composer] Debug -> DEBU ffe[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.013 UTC [Composer] Debug -> DEBU fff[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.013 UTC [Composer] Debug -> DEBU 1000[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.013 UTC [Composer] Debug -> DEBU 1001[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.013 UTC [Composer] Debug -> DEBU 1002[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.014 UTC [Composer] Debug -> DEBU 1004[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.015 UTC [Composer] Debug -> DEBU 1005[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc42008cf00} 0xc421043f10
[36m2017-07-19 23:33:49.015 UTC [Composer] Debug -> DEBU 1006[0m Exiting NewDataCollection &{0xc420029028 0xc42008cf00 $sysdata}
[36m2017-07-19 23:33:49.013 UTC [Composer] Debug -> DEBU 1003[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.016 UTC [Composer] Debug -> DEBU 1007[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.016 UTC [Composer] Debug -> DEBU 1008[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.016 UTC [Composer] Debug -> DEBU 1009[0m Entering DataService.getCollection &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.017 UTC [Composer] Debug -> DEBU 100a[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.018 UTC [Composer] Debug -> DEBU 100b[0m Entering NewDataCollection &{0xc4201cf6a0} &{0xc420028030 0xc420149000} 0xc42106fe80
[36m2017-07-19 23:33:49.018 UTC [Composer] Debug -> DEBU 100c[0m Exiting NewDataCollection &{0xc4202fea08 0xc420149000 $sysdata}
[36m2017-07-19 23:33:49.018 UTC [Composer] Debug -> DEBU 100d[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.019 UTC [Composer] Debug -> DEBU 100e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.020 UTC [Composer] Debug -> DEBU 100f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.020 UTC [Composer] Debug -> DEBU 1010[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.021 UTC [Composer] Debug -> DEBU 1011[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.021 UTC [Composer] Debug -> DEBU 1012[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:49.021 UTC [Composer] Debug -> DEBU 1013[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:49.021 UTC [Composer] Debug -> DEBU 1014[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.021 UTC [Composer] Debug -> DEBU 1015[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.021 UTC [Composer] Debug -> DEBU 1016[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:49.021 UTC [Composer] Debug -> DEBU 1017[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.021 UTC [Composer] Debug -> DEBU 1018[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.022 UTC [Composer] Debug -> DEBU 1019[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.022 UTC [Composer] Debug -> DEBU 101a[0m Entering DataCollection.get &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.022 UTC [Composer] Debug -> DEBU 101b[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:49.022 UTC [Composer] Debug -> DEBU 101c[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.022 UTC [Composer] Debug -> DEBU 101d[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.022 UTC [Composer] Debug -> DEBU 101e[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.022 UTC [Composer] Debug -> DEBU 101f[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.023 UTC [Composer] Debug -> DEBU 1020[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.023 UTC [Composer] Debug -> DEBU 1021[0m @JS : ModelManager             :addSystemModels()         < 
[36m2017-07-19 23:33:49.023 UTC [Composer] Debug -> DEBU 1022[0m @JS : ModelManager             :constructor()             < 
[36m2017-07-19 23:33:49.023 UTC [Composer] Debug -> DEBU 1023[0m @JS : BusinessNetworkMetadata  :constructor()             > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!
[36m2017-07-19 23:33:49.024 UTC [Composer] Debug -> DEBU 1024[0m @JS : BusinessNetworkMetadata  :constructor()             < 
[36m2017-07-19 23:33:49.024 UTC [Composer] Debug -> DEBU 1025[0m @JS : BusinessNetworkDefinition:constructor()             < 
[36m2017-07-19 23:33:49.024 UTC [Composer] Debug -> DEBU 1026[0m @JS : BusinessNetworkDefinition:fromArchive()             Loaded all model, JavaScript, ACL files and Query files 
[36m2017-07-19 23:33:49.025 UTC [Composer] Debug -> DEBU 1027[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.025 UTC [Composer] Debug -> DEBU 1028[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding model files to model manager 
[36m2017-07-19 23:33:49.026 UTC [Composer] Debug -> DEBU 1029[0m @JS : ModelManager             :addModelFiles()           > addModelFiles, /**
 * My commodity trading network
 */
namespace org.example.mynetwork
asset Commodity identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Trader owner
}
participant Trader identified by tradeId {
    o String tradeId
    o String firstName
    o String lastName
}
transaction Trade {
    --> Commodity commodity
    --> Trader newOwner
}
, models/sample.cto
[36m2017-07-19 23:33:49.026 UTC [Composer] Debug -> DEBU 102a[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.026 UTC [Composer] Debug -> DEBU 102b[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:49.026 UTC [Composer] Debug -> DEBU 102c[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry TOSEDVQKUV_t0
[36m2017-07-19 23:33:49.027 UTC [Composer] Debug -> DEBU 102d[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.028 UTC [Composer] Debug -> DEBU 102e[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.028 UTC [Composer] Debug -> DEBU 102f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.028 UTC [Composer] Debug -> DEBU 1030[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.028 UTC [Composer] Debug -> DEBU 1031[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.029 UTC [Composer] Debug -> DEBU 1033[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.029 UTC [Composer] Debug -> DEBU 1032[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.029 UTC [Composer] Debug -> DEBU 1035[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.029 UTC [Composer] Debug -> DEBU 1036[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.029 UTC [Composer] Debug -> DEBU 1034[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc420149300} 0xc420632d20
[36m2017-07-19 23:33:49.029 UTC [Composer] Debug -> DEBU 1037[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:49.029 UTC [Composer] Debug -> DEBU 1038[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.030 UTC [Composer] Debug -> DEBU 1039[0m Exiting NewDataCollection &{0xc420029078 0xc420149300 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.031 UTC [Composer] Debug -> DEBU 103a[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:49.031 UTC [Composer] Debug -> DEBU 103b[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:49.031 UTC [Composer] Debug -> DEBU 103c[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:49.031 UTC [Composer] Debug -> DEBU 103d[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:49.031 UTC [Composer] Debug -> DEBU 103e[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:49.032 UTC [Composer] Debug -> DEBU 103f[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.032 UTC [Composer] Debug -> DEBU 1040[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.032 UTC [Composer] Debug -> DEBU 1041[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.033 UTC [Composer] Debug -> DEBU 1042[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.033 UTC [Composer] Debug -> DEBU 1043[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.033 UTC [Composer] Debug -> DEBU 1044[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.033 UTC [Composer] Debug -> DEBU 1045[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.033 UTC [Composer] Debug -> DEBU 1046[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.034 UTC [Composer] Debug -> DEBU 1047[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.034 UTC [Composer] Debug -> DEBU 1048[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.034 UTC [Composer] Debug -> DEBU 1049[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:49.034 UTC [Composer] Debug -> DEBU 104a[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.034 UTC [Composer] Debug -> DEBU 104b[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.035 UTC [Composer] Debug -> DEBU 104c[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:49.035 UTC [Composer] Debug -> DEBU 104d[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 104e[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 104f[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 1050[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 1051[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 1052[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 1054[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#TOSEDVQKUV_t0, READ
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 1055[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 1056[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.036 UTC [Composer] Debug -> DEBU 1053[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.037 UTC [Composer] Debug -> DEBU 1057[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:49.037 UTC [Composer] Debug -> DEBU 1058[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.037 UTC [Composer] Debug -> DEBU 1059[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.037 UTC [Composer] Debug -> DEBU 105a[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.037 UTC [Composer] Debug -> DEBU 105b[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.037 UTC [Composer] Debug -> DEBU 105c[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.037 UTC [Composer] Debug -> DEBU 105d[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.037 UTC [Composer] Debug -> DEBU 105e[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.038 UTC [Composer] Debug -> DEBU 105f[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.038 UTC [Composer] Debug -> DEBU 1060[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.038 UTC [Composer] Debug -> DEBU 1061[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.038 UTC [Composer] Debug -> DEBU 1062[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.038 UTC [Composer] Debug -> DEBU 1063[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.038 UTC [Composer] Debug -> DEBU 1064[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 1065[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 1066[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 1067[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 1068[0m Entering Context.getEventService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 1069[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 106a[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 106b[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 106c[0m Entering Context.getHTTPService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 106d[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 106e[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 106f[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.039 UTC [Composer] Debug -> DEBU 1070[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.040 UTC [Composer] Debug -> DEBU 1071[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.040 UTC [Composer] Debug -> DEBU 1072[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.041 UTC [Composer] Debug -> DEBU 1073[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.041 UTC [Composer] Debug -> DEBU 1074[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:49.041 UTC [Composer] Debug -> DEBU 1075[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.041 UTC [Composer] Debug -> DEBU 1076[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.041 UTC [Composer] Debug -> DEBU 1077[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.042 UTC [Composer] Debug -> DEBU 1078[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:49.042 UTC [Composer] Debug -> DEBU 1079[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:49.042 UTC [Composer] Debug -> DEBU 107a[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:49.042 UTC [Composer] Debug -> DEBU 107b[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.042 UTC [Composer] Debug -> DEBU 107c[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:49.042 UTC [Composer] Debug -> DEBU 107d[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.043 UTC [Composer] Debug -> DEBU 107e[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.043 UTC [Composer] Debug -> DEBU 107f[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.043 UTC [Composer] Debug -> DEBU 1080[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:49.043 UTC [Composer] Debug -> DEBU 1081[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.043 UTC [Composer] Debug -> DEBU 1082[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.043 UTC [Composer] Debug -> DEBU 1083[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.044 UTC [Composer] Debug -> DEBU 1084[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.044 UTC [Composer] Debug -> DEBU 1085[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.044 UTC [Composer] Debug -> DEBU 1086[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.044 UTC [Composer] Debug -> DEBU 1087[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.044 UTC [Composer] Debug -> DEBU 1088[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.044 UTC [Composer] Debug -> DEBU 1089[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.045 UTC [Composer] Debug -> DEBU 108a[0m @JS : Resolver                 :resolveRelationship()     Got resource from registry, resolving 
[36m2017-07-19 23:33:49.045 UTC [Composer] Debug -> DEBU 108b[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trader#TOSEDVQKUV_t0}, [object Object]
[36m2017-07-19 23:33:49.045 UTC [Composer] Debug -> DEBU 108c[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.045 UTC [Composer] Debug -> DEBU 108d[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.045 UTC [Composer] Debug -> DEBU 108e[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:49.046 UTC [Composer] Debug -> DEBU 1090[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:49.046 UTC [Composer] Debug -> DEBU 1091[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.046 UTC [Composer] Debug -> DEBU 108f[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.047 UTC [Composer] Debug -> DEBU 1092[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.047 UTC [Composer] Debug -> DEBU 1093[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.047 UTC [Composer] Debug -> DEBU 1094[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.048 UTC [Composer] Debug -> DEBU 1095[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.048 UTC [Composer] Debug -> DEBU 1096[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.049 UTC [Composer] Debug -> DEBU 1097[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.050 UTC [Composer] Debug -> DEBU 1098[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc42008d900} 0xc4206109d0
[36m2017-07-19 23:33:49.050 UTC [Composer] Debug -> DEBU 1099[0m Exiting NewDataCollection &{0xc420150d60 0xc42008d900 $sysdata}
[36m2017-07-19 23:33:49.050 UTC [Composer] Debug -> DEBU 109a[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property tradeId
[36m2017-07-19 23:33:49.050 UTC [Composer] Debug -> DEBU 109b[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.050 UTC [Composer] Debug -> DEBU 109c[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring TOSEDVQKUV_t0
[36m2017-07-19 23:33:49.050 UTC [Composer] Debug -> DEBU 109d[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.051 UTC [Composer] Debug -> DEBU 109e[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.051 UTC [Composer] Debug -> DEBU 109f[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.051 UTC [Composer] Debug -> DEBU 10a0[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property firstName
[36m2017-07-19 23:33:49.051 UTC [Composer] Debug -> DEBU 10a1[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10a2[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10a3[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10a5[0m Entering Context.getEventService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10a6[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10a7[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10a8[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10a9[0m Entering Context.getHTTPService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10aa[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.052 UTC [Composer] Debug -> DEBU 10a4[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Testing
[36m2017-07-19 23:33:49.053 UTC [Composer] Debug -> DEBU 10ab[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property lastName
[36m2017-07-19 23:33:49.053 UTC [Composer] Debug -> DEBU 10ac[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.053 UTC [Composer] Debug -> DEBU 10ad[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.054 UTC [Composer] Debug -> DEBU 10ae[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.054 UTC [Composer] Debug -> DEBU 10af[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:49.054 UTC [Composer] Debug -> DEBU 10b0[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Test
[36m2017-07-19 23:33:49.057 UTC [Composer] Debug -> DEBU 10b1[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trader#TOSEDVQKUV_t0}
[36m2017-07-19 23:33:49.058 UTC [Composer] Debug -> DEBU 10b2[0m Entering EventService.transactionCommit &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.058 UTC [Composer] Debug -> DEBU 10b3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.059 UTC [Composer] Debug -> DEBU 10b4[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.059 UTC [Composer] Debug -> DEBU 10b5[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.059 UTC [Composer] Debug -> DEBU 10b6[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.059 UTC [Composer] Debug -> DEBU 10b7[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.059 UTC [Composer] Debug -> DEBU 10b8[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.060 UTC [Composer] Debug -> DEBU 10b9[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.060 UTC [Composer] Debug -> DEBU 10ba[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.060 UTC [Composer] Debug -> DEBU 10bb[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.060 UTC [Composer] Debug -> DEBU 10bc[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.060 UTC [Composer] Debug -> DEBU 10bd[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.060 UTC [Composer] Debug -> DEBU 10be[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.060 UTC [Composer] Debug -> DEBU 10bf[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.061 UTC [Composer] Debug -> DEBU 10c0[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.061 UTC [Composer] Debug -> DEBU 10c1[0m @JS : Resolver                 :resolveRelationship()     < Resource {id=org.example.mynetwork.Trader#TOSEDVQKUV_t0}
[36m2017-07-19 23:33:49.061 UTC [Composer] Debug -> DEBU 10c2[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.061 UTC [Composer] Debug -> DEBU 10c3[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.061 UTC [Composer] Debug -> DEBU 10c4[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.061 UTC [Composer] Debug -> DEBU 10c5[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.061 UTC [Composer] Debug -> DEBU 10c6[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.061 UTC [Composer] Debug -> DEBU 10c7[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.062 UTC [Composer] Debug -> DEBU 10c8[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc420149900} 0xc420653fb0
[36m2017-07-19 23:33:49.063 UTC [Composer] Debug -> DEBU 10c9[0m Exiting NewDataCollection &{0xc420143000 0xc420149900 $sysregistries}
[36m2017-07-19 23:33:49.063 UTC [Composer] Debug -> DEBU 10cb[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:49.063 UTC [Composer] Debug -> DEBU 10cc[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:49.063 UTC [Composer] Debug -> DEBU 10cd[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:49.063 UTC [Composer] Debug -> DEBU 10ca[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.064 UTC [Composer] Debug -> DEBU 10ce[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.064 UTC [Composer] Debug -> DEBU 10cf[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.064 UTC [Composer] Debug -> DEBU 10d0[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Commodity#TOSEDVQKUV_c1}
[36m2017-07-19 23:33:49.064 UTC [Composer] Debug -> DEBU 10d1[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.064 UTC [Composer] Debug -> DEBU 10d2[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.065 UTC [Composer] Debug -> DEBU 10d3[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.065 UTC [Composer] Debug -> DEBU 10d4[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:49.066 UTC [Composer] Debug -> DEBU 10d5[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc420149900} 0xc4205fd790
[36m2017-07-19 23:33:49.067 UTC [Composer] Debug -> DEBU 10d6[0m Exiting NewDataCollection &{0xc4200291d0 0xc420149900 $sysidentities}
[36m2017-07-19 23:33:49.067 UTC [Composer] Debug -> DEBU 10d7[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.069 UTC [Composer] Debug -> DEBU 10d8[0m @JS : Resolver                 :resolveRelationship()     < Resource {id=org.example.mynetwork.Commodity#TOSEDVQKUV_c1}
[36m2017-07-19 23:33:49.069 UTC [Composer] Debug -> DEBU 10d9[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.069 UTC [Composer] Debug -> DEBU 10da[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:49.069 UTC [Composer] Debug -> DEBU 10db[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.069 UTC [Composer] Debug -> DEBU 10dc[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.069 UTC [Composer] Debug -> DEBU 10dd[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.069 UTC [Composer] Debug -> DEBU 10de[0m Entering Context.getEventService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.069 UTC [Composer] Debug -> DEBU 10df[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e1[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e2[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e3[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e4[0m Entering IdentityService.getCurrentUserID &{0xc4202a2600}
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e5[0m Entering extractNameFromCreator 0xc420611690
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e0[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e7[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e8[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e9[0m Entering Context.getHTTPService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10ea[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10e6[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10eb[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10ec[0m Common Name admin
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10ed[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10ee[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10ef[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.070 UTC [Composer] Debug -> DEBU 10f0[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.071 UTC [Composer] Debug -> DEBU 10f1[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:49.073 UTC [Composer] Debug -> DEBU 10f2[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:49.073 UTC [Composer] Debug -> DEBU 10f3[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.073 UTC [Composer] Debug -> DEBU 10f4[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Trader#TOSEDVQKUV_t1}, [object Object]
[36m2017-07-19 23:33:49.073 UTC [Composer] Debug -> DEBU 10f5[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.073 UTC [Composer] Debug -> DEBU 10f6[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.073 UTC [Composer] Debug -> DEBU 10f7[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Trader#TOSEDVQKUV_t1}
[36m2017-07-19 23:33:49.073 UTC [Composer] Debug -> DEBU 10f8[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.073 UTC [Composer] Debug -> DEBU 10f9[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.074 UTC [Composer] Debug -> DEBU 10fa[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Trader super=Participant enum=false abstract=false}
[36m2017-07-19 23:33:49.074 UTC [Composer] Debug -> DEBU 10fb[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.074 UTC [Composer] Debug -> DEBU 10fc[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.074 UTC [Composer] Debug -> DEBU 10fd[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Trader
[36m2017-07-19 23:33:49.074 UTC [Composer] Debug -> DEBU 10fe[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.074 UTC [Composer] Debug -> DEBU 10ff[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.074 UTC [Composer] Debug -> DEBU 1100[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.075 UTC [Composer] Debug -> DEBU 1102[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.074 UTC [Composer] Debug -> DEBU 1101[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.075 UTC [Composer] Debug -> DEBU 1103[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.075 UTC [Composer] Debug -> DEBU 1104[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.075 UTC [Composer] Debug -> DEBU 1105[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.075 UTC [Composer] Debug -> DEBU 1106[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.075 UTC [Composer] Debug -> DEBU 1107[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.075 UTC [Composer] Debug -> DEBU 1108[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.076 UTC [Composer] Debug -> DEBU 1109[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.076 UTC [Composer] Debug -> DEBU 110a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.076 UTC [Composer] Debug -> DEBU 110b[0m Entering Context.getEventService &{0xc4202a2600}
[36m2017-07-19 23:33:49.076 UTC [Composer] Debug -> DEBU 110c[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.076 UTC [Composer] Debug -> DEBU 110d[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.076 UTC [Composer] Debug -> DEBU 110e[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.076 UTC [Composer] Debug -> DEBU 110f[0m Entering Context.getHTTPService &{0xc4202a2600}
[36m2017-07-19 23:33:49.076 UTC [Composer] Debug -> DEBU 1110[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.077 UTC [Composer] Debug -> DEBU 1111[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.077 UTC [Composer] Debug -> DEBU 1112[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.077 UTC [Composer] Debug -> DEBU 1113[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.078 UTC [Composer] Debug -> DEBU 1114[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:49.078 UTC [Composer] Debug -> DEBU 1115[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.081 UTC [Composer] Debug -> DEBU 1116[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.081 UTC [Composer] Debug -> DEBU 1117[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.081 UTC [Composer] Debug -> DEBU 1118[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.082 UTC [Composer] Debug -> DEBU 1119[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.082 UTC [Composer] Debug -> DEBU 111a[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.082 UTC [Composer] Debug -> DEBU 111b[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.083 UTC [Composer] Debug -> DEBU 111c[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:49.083 UTC [Composer] Debug -> DEBU 111d[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.083 UTC [Composer] Debug -> DEBU 111e[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.084 UTC [Composer] Debug -> DEBU 111f[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:49.084 UTC [Composer] Debug -> DEBU 1120[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:49.084 UTC [Composer] Debug -> DEBU 1121[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:49.085 UTC [Composer] Debug -> DEBU 1122[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:49.085 UTC [Composer] Debug -> DEBU 1123[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.085 UTC [Composer] Debug -> DEBU 1124[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc4205d9160
[36m2017-07-19 23:33:49.085 UTC [Composer] Debug -> DEBU 1125[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:49.085 UTC [Composer] Debug -> DEBU 1127[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.085 UTC [Composer] Debug -> DEBU 1126[0m Exiting NewDataCollection &{0xc4202fecd0 0xc4211c6580 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.085 UTC [Composer] Debug -> DEBU 1128[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.086 UTC [Composer] Debug -> DEBU 1129[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.086 UTC [Composer] Debug -> DEBU 112a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.086 UTC [Composer] Debug -> DEBU 112b[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.086 UTC [Composer] Debug -> DEBU 112c[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:49.086 UTC [Composer] Debug -> DEBU 112d[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.086 UTC [Composer] Debug -> DEBU 112e[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:49.086 UTC [Composer] Debug -> DEBU 112f[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:49.087 UTC [Composer] Debug -> DEBU 1130[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.087 UTC [Composer] Debug -> DEBU 1131[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:49.087 UTC [Composer] Debug -> DEBU 1132[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.087 UTC [Composer] Debug -> DEBU 1133[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.088 UTC [Composer] Debug -> DEBU 1134[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.088 UTC [Composer] Debug -> DEBU 1135[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.088 UTC [Composer] Debug -> DEBU 1137[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.089 UTC [Composer] Debug -> DEBU 1138[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:49.089 UTC [Composer] Debug -> DEBU 1139[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.089 UTC [Composer] Debug -> DEBU 113a[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.088 UTC [Composer] Debug -> DEBU 1136[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.089 UTC [Composer] Debug -> DEBU 113b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.089 UTC [Composer] Debug -> DEBU 113c[0m Entering DataService.getCollection &{0xc42027a640}
[36m2017-07-19 23:33:49.090 UTC [Composer] Debug -> DEBU 113d[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:49.091 UTC [Composer] Debug -> DEBU 113e[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.091 UTC [Composer] Debug -> DEBU 113f[0m Entering NewDataCollection &{0xc42027a640} &{0xc4202fe000 0xc42008d500} 0xc4205b6e10
[36m2017-07-19 23:33:49.091 UTC [Composer] Debug -> DEBU 1140[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.091 UTC [Composer] Debug -> DEBU 1141[0m Entering Engine.handleCallback 0xc420155f80 &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.091 UTC [Composer] Debug -> DEBU 1142[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.091 UTC [Composer] Debug -> DEBU 1143[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 1144[0m Exiting Composer.Invoke {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"} <nil>
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 1145[0m Entering ComposerPool.Put &{0xc420028048 0xc4202c4d20 0xc4200285e0}
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 1146[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry TOSEDVQKUV_t1
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 1148[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 1147[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 1149[0m Exiting Chaincode.Invoke 200  {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"}
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 114a[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 114b[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 114c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 114e[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 114d[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 114f[0m Exiting NewDataCollection &{0xc4202fecf8 0xc42008d500 $sysdata}
[36m2017-07-19 23:33:49.092 UTC [Composer] Debug -> DEBU 1150[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.095 UTC [Composer] Debug -> DEBU 1151[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42008d200} 0xc420596760
[36m2017-07-19 23:33:49.095 UTC [Composer] Debug -> DEBU 1152[0m Exiting NewDataCollection &{0xc4202fed18 0xc42008d200 $sysdata}
[36m2017-07-19 23:33:49.104 UTC [Composer] Debug -> DEBU 1153[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.106 UTC [Composer] Debug -> DEBU 1154[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.106 UTC [Composer] Debug -> DEBU 1155[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.111 UTC [Composer] Debug -> DEBU 1156[0m Entering getLogging 0xc420568420
[36m2017-07-19 23:33:49.113 UTC [Composer] Debug -> DEBU 1157[0m Entering Chaincode.Invoke 0xc420568410
[36m2017-07-19 23:33:49.113 UTC [Composer] Debug -> DEBU 1158[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.113 UTC [Composer] Debug -> DEBU 1159[0m Exiting ComposerPool.Get &{0xc420150150 0xc42040f710 0xc4201425c8}
[36m2017-07-19 23:33:49.113 UTC [Composer] Debug -> DEBU 115a[0m Entering Composer.Invoke 0xc4205c3ef0 addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"EAMSPLOYCJ_t9","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:49.113 UTC [Composer] Debug -> DEBU 115b[0m Entering NewContext &{0xc420141340} &{0xc420150150} 0xc4205c3fe0
[36m2017-07-19 23:33:49.113 UTC [Composer] Debug -> DEBU 115c[0m Entering NewDataService &{0xc420141340} &{0xc420150150 <nil> <nil> <nil> <nil>} 0xc4205520a0
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 115d[0m Exiting NewDataService &{0xc420150150 0xc42129bb00}
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 115e[0m Entering NewIdentityService &{0xc420141340} &{0xc420150150 0xc420141780 <nil> <nil> <nil>} 0xc420552250
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 115f[0m Exiting NewIdentityService &{0xc420150150 0xc42129bb00}
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1160[0m Entering NewEventService &{0xc420141340} &{0xc420150150 0xc420141780 0xc420141860 <nil> <nil>} 0xc4205523c0
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1161[0m Exiting NewEventServce &{0xc420150150 0xc42129bb00}
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1162[0m Entering HTTPService &{0xc420141340} &{0xc420150150 0xc420141780 0xc420141860 0xc420141980 <nil>} 0xc420552530
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1163[0m Exiting HTTPService &{0xc420150150 0xc42129bb00}
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1164[0m Exiting NewContext &{0xc420150150 0xc420141780 0xc420141860 0xc420141980 0xc420141a60}
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1165[0m Entering Engine.Invoke &{0xc420150150 0xc420141780 0xc420141860 0xc420141980 0xc420141a60} addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"EAMSPLOYCJ_t9","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1166[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"EAMSPLOYCJ_t9","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1167[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1168[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.115 UTC [Composer] Debug -> DEBU 116a[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.115 UTC [Composer] Debug -> DEBU 116b[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.115 UTC [Composer] Debug -> DEBU 116c[0m Entering DataCollection.get &{0xc42027a640}
[36m2017-07-19 23:33:49.115 UTC [Composer] Debug -> DEBU 116d[0m Exiting Engine.Invoke 0xc4210eed20
[36m2017-07-19 23:33:49.115 UTC [Composer] Debug -> DEBU 116e[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.115 UTC [Composer] Debug -> DEBU 116f[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:49.114 UTC [Composer] Debug -> DEBU 1169[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#TOSEDVQKUV_t1, READ
[36m2017-07-19 23:33:49.115 UTC [Composer] Debug -> DEBU 1170[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1171[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1173[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1172[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1174[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1175[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1176[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1177[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1178[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.119 UTC [Composer] Debug -> DEBU 1179[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 117b[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 117c[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 117d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 117e[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 117f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 1180[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 1181[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 1182[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 1183[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 1184[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 1185[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.120 UTC [Composer] Debug -> DEBU 117a[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.121 UTC [Composer] Debug -> DEBU 1186[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.121 UTC [Composer] Debug -> DEBU 1187[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.122 UTC [Composer] Debug -> DEBU 1188[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc42129bb00} 0xc420597070
[36m2017-07-19 23:33:49.122 UTC [Composer] Debug -> DEBU 1189[0m Exiting NewDataCollection &{0xc420029378 0xc42129bb00 $sysdata}
[36m2017-07-19 23:33:49.123 UTC [Composer] Debug -> DEBU 118a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.123 UTC [Composer] Debug -> DEBU 118b[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.123 UTC [Composer] Debug -> DEBU 118c[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.124 UTC [Composer] Debug -> DEBU 118d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.124 UTC [Composer] Debug -> DEBU 118e[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.125 UTC [Composer] Debug -> DEBU 118f[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.126 UTC [Composer] Debug -> DEBU 1190[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.126 UTC [Composer] Debug -> DEBU 1191[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.126 UTC [Composer] Debug -> DEBU 1192[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.126 UTC [Composer] Debug -> DEBU 1193[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.127 UTC [Composer] Debug -> DEBU 1194[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.127 UTC [Composer] Debug -> DEBU 1195[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:49.127 UTC [Composer] Debug -> DEBU 1196[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc420149900} 0xc4205978e0
[36m2017-07-19 23:33:49.127 UTC [Composer] Debug -> DEBU 1197[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.128 UTC [Composer] Debug -> DEBU 1198[0m Exiting NewDataCollection &{0xc4201431e0 0xc420149900 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.128 UTC [Composer] Debug -> DEBU 1199[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.128 UTC [Composer] Debug -> DEBU 119a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.128 UTC [Composer] Debug -> DEBU 119b[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.128 UTC [Composer] Debug -> DEBU 119c[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.128 UTC [Composer] Debug -> DEBU 119d[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.128 UTC [Composer] Debug -> DEBU 119e[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.129 UTC [Composer] Debug -> DEBU 119f[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.129 UTC [Composer] Debug -> DEBU 11a0[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.129 UTC [Composer] Debug -> DEBU 11a1[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.129 UTC [Composer] Debug -> DEBU 11a2[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.129 UTC [Composer] Debug -> DEBU 11a3[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.129 UTC [Composer] Debug -> DEBU 11a4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.129 UTC [Composer] Debug -> DEBU 11a5[0m Entering DataService.getCollection &{0xc420145580}
[36m2017-07-19 23:33:49.130 UTC [Composer] Debug -> DEBU 11a6[0m @JS : Resolver                 :resolveRelationship()     Got resource from registry, resolving 
[36m2017-07-19 23:33:49.130 UTC [Composer] Debug -> DEBU 11a7[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.131 UTC [Composer] Debug -> DEBU 11a8[0m Entering NewDataCollection &{0xc420145580} &{0xc420142278 0xc420149c80} 0xc4205b7e70
[36m2017-07-19 23:33:49.131 UTC [Composer] Debug -> DEBU 11a9[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trader#TOSEDVQKUV_t1}, [object Object]
[36m2017-07-19 23:33:49.131 UTC [Composer] Debug -> DEBU 11aa[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.131 UTC [Composer] Debug -> DEBU 11ab[0m Exiting NewDataCollection &{0xc420029430 0xc420149c80 $sysdata}
[36m2017-07-19 23:33:49.131 UTC [Composer] Debug -> DEBU 11ac[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:49.132 UTC [Composer] Debug -> DEBU 11ad[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.132 UTC [Composer] Debug -> DEBU 11ae[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.132 UTC [Composer] Debug -> DEBU 11af[0m Entering DataCollection.get &{0xc420145580}
[36m2017-07-19 23:33:49.132 UTC [Composer] Debug -> DEBU 11b0[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.132 UTC [Composer] Debug -> DEBU 11b1[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.132 UTC [Composer] Debug -> DEBU 11b2[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11b3[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11b4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11b5[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11b6[0m Entering DataService.getCollection &{0xc4202a2680}
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11b7[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11b8[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11b9[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11ba[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.133 UTC [Composer] Debug -> DEBU 11bb[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.134 UTC [Composer] Debug -> DEBU 11bc[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.134 UTC [Composer] Debug -> DEBU 11bd[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.134 UTC [Composer] Debug -> DEBU 11be[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.134 UTC [Composer] Debug -> DEBU 11bf[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.134 UTC [Composer] Debug -> DEBU 11c0[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.134 UTC [Composer] Debug -> DEBU 11c1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.134 UTC [Composer] Debug -> DEBU 11c2[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.135 UTC [Composer] Debug -> DEBU 11c3[0m Entering NewDataCollection &{0xc4202a2680} &{0xc420150170 0xc4202a4200} 0xc420597f50
[36m2017-07-19 23:33:49.136 UTC [Composer] Debug -> DEBU 11c4[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc420149600} 0xc420569f90
[36m2017-07-19 23:33:49.137 UTC [Composer] Debug -> DEBU 11c5[0m Exiting NewDataCollection &{0xc4202fee60 0xc420149600 $sysdata}
[36m2017-07-19 23:33:49.137 UTC [Composer] Debug -> DEBU 11c6[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.137 UTC [Composer] Debug -> DEBU 11c7[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.137 UTC [Composer] Debug -> DEBU 11c8[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11c9[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property tradeId
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11ca[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11cb[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11cc[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring TOSEDVQKUV_t1
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11cd[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11ce[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property firstName
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11cf[0m Exiting NewDataCollection &{0xc420143208 0xc4202a4200 $sysdata}
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11d0[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:49.139 UTC [Composer] Debug -> DEBU 11d1[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11d2[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11d3[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11d4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11d5[0m Entering Context.getEventService &{0xc4202a2600}
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11d6[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11d7[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11d8[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11d9[0m Entering Context.getHTTPService &{0xc4202a2600}
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11da[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11db[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11dc[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11dd[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11de[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11df[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11e0[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:49.140 UTC [Composer] Debug -> DEBU 11e1[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.141 UTC [Composer] Debug -> DEBU 11e2[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.141 UTC [Composer] Debug -> DEBU 11e3[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.141 UTC [Composer] Debug -> DEBU 11e4[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Testing
[36m2017-07-19 23:33:49.141 UTC [Composer] Debug -> DEBU 11e5[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.141 UTC [Composer] Debug -> DEBU 11e6[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.141 UTC [Composer] Debug -> DEBU 11e7[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.141 UTC [Composer] Debug -> DEBU 11e8[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.141 UTC [Composer] Debug -> DEBU 11e9[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:49.142 UTC [Composer] Debug -> DEBU 11ea[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property lastName
[36m2017-07-19 23:33:49.142 UTC [Composer] Debug -> DEBU 11ec[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:49.142 UTC [Composer] Debug -> DEBU 11ed[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:49.142 UTC [Composer] Debug -> DEBU 11ee[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.142 UTC [Composer] Debug -> DEBU 11ef[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.142 UTC [Composer] Debug -> DEBU 11f0[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.142 UTC [Composer] Debug -> DEBU 11f1[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.143 UTC [Composer] Debug -> DEBU 11f2[0m @JS : ModelManager             :addModelFiles()           < [object Object]
[36m2017-07-19 23:33:49.143 UTC [Composer] Debug -> DEBU 11f3[0m @JS : BusinessNetworkDefinition:fromArchive()             Added model files to model manager 
[36m2017-07-19 23:33:49.143 UTC [Composer] Debug -> DEBU 11f4[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding JavaScript files to script manager 
[36m2017-07-19 23:33:49.142 UTC [Composer] Debug -> DEBU 11eb[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.145 UTC [Composer] Debug -> DEBU 11f5[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.145 UTC [Composer] Debug -> DEBU 11f6[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Test
[36m2017-07-19 23:33:49.145 UTC [Composer] Debug -> DEBU 11f7[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 11f8[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 11f9[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 11fa[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 11fb[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 11fc[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trader#TOSEDVQKUV_t1}
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 11fd[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 11fe[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 11ff[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.146 UTC [Composer] Debug -> DEBU 1200[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.147 UTC [Composer] Debug -> DEBU 1201[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.147 UTC [Composer] Debug -> DEBU 1202[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.147 UTC [Composer] Debug -> DEBU 1203[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:49.147 UTC [Composer] Debug -> DEBU 1204[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.147 UTC [Composer] Debug -> DEBU 1205[0m Entering DataCollection.get &{0xc4202a2680}
[36m2017-07-19 23:33:49.147 UTC [Composer] Debug -> DEBU 1206[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.147 UTC [Composer] Debug -> DEBU 1207[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.148 UTC [Composer] Debug -> DEBU 1208[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.148 UTC [Composer] Debug -> DEBU 1209[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:49.148 UTC [Composer] Debug -> DEBU 120a[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:49.149 UTC [Composer] Debug -> DEBU 120b[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.149 UTC [Composer] Debug -> DEBU 120c[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:49.149 UTC [Composer] Debug -> DEBU 120d[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.149 UTC [Composer] Debug -> DEBU 120e[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.149 UTC [Composer] Debug -> DEBU 120f[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1210[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1211[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1213[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1212[0m @JS : Resolver                 :resolveRelationship()     < Resource {id=org.example.mynetwork.Trader#TOSEDVQKUV_t1}
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1214[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1216[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1215[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1217[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1218[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 1219[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 121a[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.150 UTC [Composer] Debug -> DEBU 121b[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 121c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 121d[0m Entering DataService.getCollection &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 121e[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 121f[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 1220[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 1221[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 1222[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 1223[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 1224[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 1226[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.151 UTC [Composer] Debug -> DEBU 1225[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.152 UTC [Composer] Debug -> DEBU 1227[0m Entering NewDataCollection &{0xc4201cf6a0} &{0xc420028030 0xc420149000} 0xc4204c3290
[36m2017-07-19 23:33:49.152 UTC [Composer] Debug -> DEBU 1228[0m Exiting NewDataCollection &{0xc420143308 0xc420149000 $sysdata}
[36m2017-07-19 23:33:49.153 UTC [Composer] Debug -> DEBU 1229[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.153 UTC [Composer] Debug -> DEBU 122a[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.153 UTC [Composer] Debug -> DEBU 122b[0m Entering DataCollection.get &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.153 UTC [Composer] Debug -> DEBU 122c[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 122d[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 122f[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 1230[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 122e[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc42008cf00} 0xc42051b6f0
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 1231[0m Exiting NewDataCollection &{0xc4202ff008 0xc42008cf00 $sysregistries}
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 1232[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 1233[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 1234[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 1235[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.154 UTC [Composer] Debug -> DEBU 1236[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.162 UTC [Composer] Debug -> DEBU 1237[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.162 UTC [Composer] Debug -> DEBU 1238[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.162 UTC [Composer] Debug -> DEBU 1239[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.162 UTC [Composer] Debug -> DEBU 123a[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 123b[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 123c[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc42008cf00} 0xc42040e090
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 123d[0m Exiting NewDataCollection &{0xc420143348 0xc42008cf00 $sysidentities}
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 123e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 123f[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 1240[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 1241[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 1242[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 1243[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 1244[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.163 UTC [Composer] Debug -> DEBU 1245[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1246[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1247[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1248[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1249[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 124a[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 124b[0m Entering IdentityService.getCurrentUserID &{0xc4201455c0}
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 124c[0m Entering extractNameFromCreator 0xc42040e680
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 124d[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 124e[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 124f[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1250[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1251[0m Common Name admin
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1252[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1253[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1254[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1255[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1256[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1257[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1258[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81}
[36m2017-07-19 23:33:49.164 UTC [Composer] Debug -> DEBU 1259[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.165 UTC [Composer] Debug -> DEBU 125a[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.165 UTC [Composer] Debug -> DEBU 125b[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.165 UTC [Composer] Debug -> DEBU 125c[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.165 UTC [Composer] Debug -> DEBU 125d[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.165 UTC [Composer] Debug -> DEBU 125e[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.165 UTC [Composer] Debug -> DEBU 125f[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:49.165 UTC [Composer] Debug -> DEBU 1260[0m @JS : Resolver                 :resolve()                 < Resource {id=org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81}
[36m2017-07-19 23:33:49.166 UTC [Composer] Debug -> DEBU 1261[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:49.166 UTC [Composer] Debug -> DEBU 1262[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:49.166 UTC [Composer] Debug -> DEBU 1263[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.166 UTC [Composer] Debug -> DEBU 1264[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.166 UTC [Composer] Debug -> DEBU 1265[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.166 UTC [Composer] Debug -> DEBU 1266[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1267[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1268[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1269[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 126a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 126d[0m Entering Context.getEventService &{0xc4202a2600}
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 126e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 126f[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1270[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1271[0m Entering Context.getHTTPService &{0xc4202a2600}
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1272[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 126c[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 126b[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1273[0m @JS : Api                      :constructor()             > [object Object]
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1274[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.167 UTC [Composer] Debug -> DEBU 1275[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 1276[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 1277[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 1278[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 1279[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 127a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 127b[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 127c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 127d[0m Entering Context.getEventService &{0xc4201455c0}
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 127e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 127f[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 1280[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 1281[0m Entering Context.getHTTPService &{0xc4201455c0}
[36m2017-07-19 23:33:49.168 UTC [Composer] Debug -> DEBU 1282[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.169 UTC [Composer] Debug -> DEBU 1283[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.169 UTC [Composer] Debug -> DEBU 1284[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.169 UTC [Composer] Debug -> DEBU 1285[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.169 UTC [Composer] Debug -> DEBU 1286[0m Entering DataService.getCollection &{0xc4202a2220}
[36m2017-07-19 23:33:49.170 UTC [Composer] Debug -> DEBU 1287[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:49.170 UTC [Composer] Debug -> DEBU 1288[0m @JS : Api                      :constructor()             < 
[36m2017-07-19 23:33:49.170 UTC [Composer] Debug -> DEBU 1289[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.171 UTC [Composer] Debug -> DEBU 128a[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.171 UTC [Composer] Debug -> DEBU 128b[0m @JS : CompiledScriptBundle     :execute()                 > [object Object], Resource {id=org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81}
[36m2017-07-19 23:33:49.171 UTC [Composer] Debug -> DEBU 128c[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.171 UTC [Composer] Debug -> DEBU 128d[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.171 UTC [Composer] Debug -> DEBU 128e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.172 UTC [Composer] Debug -> DEBU 128f[0m @JS : BusinessNetworkDefinition:fromArchive()             Added JavaScript files to script manager 
[36m2017-07-19 23:33:49.172 UTC [Composer] Debug -> DEBU 1290[0m Entering NewDataCollection &{0xc4202a2220} &{0xc420150158 0xc42013b600} 0xc42040f920
[36m2017-07-19 23:33:49.172 UTC [Composer] Debug -> DEBU 1291[0m Exiting NewDataCollection &{0xc4202ff100 0xc42013b600 $sysdata}
[36m2017-07-19 23:33:49.172 UTC [Composer] Debug -> DEBU 1292[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.172 UTC [Composer] Debug -> DEBU 1293[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.172 UTC [Composer] Debug -> DEBU 1294[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:49.172 UTC [Composer] Debug -> DEBU 1295[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:49.172 UTC [Composer] Debug -> DEBU 1296[0m @JS : CompiledScriptBundle     :findFunctionNames()       > Resource {id=org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81}
[36m2017-07-19 23:33:49.173 UTC [Composer] Debug -> DEBU 1297[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.173 UTC [Composer] Debug -> DEBU 1298[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.173 UTC [Composer] Debug -> DEBU 1299[0m Entering EventService.transactionCommit &{0xc4202a2600}
[36m2017-07-19 23:33:49.173 UTC [Composer] Debug -> DEBU 129a[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.174 UTC [Composer] Debug -> DEBU 129b[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.174 UTC [Composer] Debug -> DEBU 129c[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.174 UTC [Composer] Debug -> DEBU 129d[0m Entering DataCollection.get &{0xc4202a2220}
[36m2017-07-19 23:33:49.174 UTC [Composer] Debug -> DEBU 129e[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc42129bb00} 0xc42040b020
[36m2017-07-19 23:33:49.174 UTC [Composer] Debug -> DEBU 129f[0m Exiting NewDataCollection &{0xc420029648 0xc42129bb00 $sysdata}
[36m2017-07-19 23:33:49.175 UTC [Composer] Debug -> DEBU 12a0[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.175 UTC [Composer] Debug -> DEBU 12a1[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.175 UTC [Composer] Debug -> DEBU 12a2[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.175 UTC [Composer] Debug -> DEBU 12a3[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.175 UTC [Composer] Debug -> DEBU 12a4[0m @JS : CompiledScriptBundle     :findFunctionNames()       Looking at function declaration tradeCommodity
[36m2017-07-19 23:33:49.175 UTC [Composer] Debug -> DEBU 12a7[0m @JS : CompiledScriptBundle     :findFunctionNames()       Function is annotated with @transaction 
[36m2017-07-19 23:33:49.175 UTC [Composer] Debug -> DEBU 12a5[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.176 UTC [Composer] Debug -> DEBU 12a8[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.176 UTC [Composer] Debug -> DEBU 12a9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.175 UTC [Composer] Debug -> DEBU 12a6[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.176 UTC [Composer] Debug -> DEBU 12aa[0m @JS : CompiledScriptBundle     :findFunctionNames()       Function parameter type matches transaction 
[36m2017-07-19 23:33:49.177 UTC [Composer] Debug -> DEBU 12ab[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding ACL files to ACL manager 
[36m2017-07-19 23:33:49.177 UTC [Composer] Debug -> DEBU 12ac[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.177 UTC [Composer] Debug -> DEBU 12ad[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.177 UTC [Composer] Debug -> DEBU 12ae[0m @JS : CompiledScriptBundle     :findFunctionNames()       < tradeCommodity
[36m2017-07-19 23:33:49.177 UTC [Composer] Debug -> DEBU 12af[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.179 UTC [Composer] Debug -> DEBU 12b0[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:49.180 UTC [Composer] Debug -> DEBU 12b1[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.180 UTC [Composer] Debug -> DEBU 12b3[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.180 UTC [Composer] Debug -> DEBU 12b2[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.180 UTC [Composer] Debug -> DEBU 12b4[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12b5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12b6[0m Entering Context.getEventService &{0xc4202a2600}
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12b7[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12b9[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12b8[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12ba[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12bb[0m Entering Context.getHTTPService &{0xc4202a2600}
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12bc[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12bd[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12be[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12bf[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12c0[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.181 UTC [Composer] Debug -> DEBU 12c1[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.183 UTC [Composer] Debug -> DEBU 12c2[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:49.183 UTC [Composer] Debug -> DEBU 12c3[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.183 UTC [Composer] Debug -> DEBU 12c4[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.184 UTC [Composer] Debug -> DEBU 12c5[0m @JS : CompiledScriptBundle     :execute()                 Executing function tradeCommodity
[36m2017-07-19 23:33:49.184 UTC [Composer] Debug -> DEBU 12c6[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.184 UTC [Composer] Debug -> DEBU 12c7[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:49.184 UTC [Composer] Debug -> DEBU 12c8[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.184 UTC [Composer] Debug -> DEBU 12c9[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.184 UTC [Composer] Debug -> DEBU 12ca[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.184 UTC [Composer] Debug -> DEBU 12cb[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.184 UTC [Composer] Debug -> DEBU 12cc[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.185 UTC [Composer] Debug -> DEBU 12cd[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.185 UTC [Composer] Debug -> DEBU 12ce[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.185 UTC [Composer] Debug -> DEBU 12cf[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.186 UTC [Composer] Debug -> DEBU 12d0[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.186 UTC [Composer] Debug -> DEBU 12d1[0m @JS : Api                      :getAssetRegistry()        > org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.186 UTC [Composer] Debug -> DEBU 12d2[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:49.186 UTC [Composer] Debug -> DEBU 12d3[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.186 UTC [Composer] Debug -> DEBU 12d4[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.186 UTC [Composer] Debug -> DEBU 12d5[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.187 UTC [Composer] Debug -> DEBU 12d6[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.187 UTC [Composer] Debug -> DEBU 12d7[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.187 UTC [Composer] Debug -> DEBU 12d8[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.187 UTC [Composer] Debug -> DEBU 12d9[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.187 UTC [Composer] Debug -> DEBU 12da[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.187 UTC [Composer] Debug -> DEBU 12db[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.188 UTC [Composer] Debug -> DEBU 12dc[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.188 UTC [Composer] Debug -> DEBU 12dd[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.188 UTC [Composer] Debug -> DEBU 12de[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.189 UTC [Composer] Debug -> DEBU 12df[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.189 UTC [Composer] Debug -> DEBU 12e0[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.189 UTC [Composer] Debug -> DEBU 12e1[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.189 UTC [Composer] Debug -> DEBU 12e2[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.190 UTC [Composer] Debug -> DEBU 12e3[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.190 UTC [Composer] Debug -> DEBU 12e4[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.191 UTC [Composer] Debug -> DEBU 12e5[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc42008cf00} 0xc4203e5160
[36m2017-07-19 23:33:49.191 UTC [Composer] Debug -> DEBU 12e6[0m Exiting NewDataCollection &{0xc4201512d0 0xc42008cf00 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.191 UTC [Composer] Debug -> DEBU 12e7[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.192 UTC [Composer] Debug -> DEBU 12e8[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.192 UTC [Composer] Debug -> DEBU 12e9[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.192 UTC [Composer] Debug -> DEBU 12ea[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:49.192 UTC [Composer] Debug -> DEBU 12eb[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.192 UTC [Composer] Debug -> DEBU 12ec[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.192 UTC [Composer] Debug -> DEBU 12ed[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.192 UTC [Composer] Debug -> DEBU 12ee[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.193 UTC [Composer] Debug -> DEBU 12ef[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.193 UTC [Composer] Debug -> DEBU 12f0[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.193 UTC [Composer] Debug -> DEBU 12f1[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.193 UTC [Composer] Debug -> DEBU 12f2[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:49.193 UTC [Composer] Debug -> DEBU 12f3[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12f4[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12f5[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12f6[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12f7[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12f8[0m Entering Engine.handleCallback 0xc4201553e0 &{0xc4202a2600}
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12f9[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12fa[0m Exiting Composer.Invoke {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"} <nil>
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12fb[0m Entering ComposerPool.Put &{0xc420150160 0xc420366870 0xc4200284f8}
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12fc[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12fd[0m Exiting Chaincode.Invoke 200  {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"}
[36m2017-07-19 23:33:49.194 UTC [Composer] Debug -> DEBU 12fe[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.195 UTC [Composer] Debug -> DEBU 12ff[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.196 UTC [Composer] Debug -> DEBU 1300[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.196 UTC [Composer] Debug -> DEBU 1301[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.196 UTC [Composer] Debug -> DEBU 1302[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.197 UTC [Composer] Debug -> DEBU 1303[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.197 UTC [Composer] Debug -> DEBU 1304[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.197 UTC [Composer] Debug -> DEBU 1306[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.197 UTC [Composer] Debug -> DEBU 1307[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.197 UTC [Composer] Debug -> DEBU 1308[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.197 UTC [Composer] Debug -> DEBU 1309[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.197 UTC [Composer] Debug -> DEBU 130a[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.197 UTC [Composer] Debug -> DEBU 1305[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.199 UTC [Composer] Debug -> DEBU 130b[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.199 UTC [Composer] Debug -> DEBU 130c[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:49.199 UTC [Composer] Debug -> DEBU 130d[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.199 UTC [Composer] Debug -> DEBU 130e[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 130f[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1310[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1311[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1312[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1313[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1314[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1315[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1316[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1317[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.200 UTC [Composer] Debug -> DEBU 1318[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.201 UTC [Composer] Debug -> DEBU 1319[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.201 UTC [Composer] Debug -> DEBU 131a[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.201 UTC [Composer] Debug -> DEBU 131b[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.202 UTC [Composer] Debug -> DEBU 131c[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.203 UTC [Composer] Debug -> DEBU 131d[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.203 UTC [Composer] Debug -> DEBU 131e[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.203 UTC [Composer] Debug -> DEBU 131f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.203 UTC [Composer] Debug -> DEBU 1320[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.203 UTC [Composer] Debug -> DEBU 1321[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.203 UTC [Composer] Debug -> DEBU 1322[0m Entering DataService.getCollection &{0xc420145580}
[36m2017-07-19 23:33:49.204 UTC [Composer] Debug -> DEBU 1323[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.204 UTC [Composer] Debug -> DEBU 1324[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.205 UTC [Composer] Debug -> DEBU 1325[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:49.205 UTC [Composer] Debug -> DEBU 1326[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:49.205 UTC [Composer] Debug -> DEBU 1328[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.205 UTC [Composer] Debug -> DEBU 1327[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.210 UTC [Composer] Debug -> DEBU 1329[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc420149600} 0xc420366120
[36m2017-07-19 23:33:49.210 UTC [Composer] Debug -> DEBU 132a[0m Exiting NewDataCollection &{0xc4202ff2c0 0xc420149600 $sysdata}
[36m2017-07-19 23:33:49.210 UTC [Composer] Debug -> DEBU 132b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.210 UTC [Composer] Debug -> DEBU 132c[0m Entering NewDataCollection &{0xc420145580} &{0xc420142278 0xc420149c80} 0xc420486a90
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 132d[0m Exiting NewDataCollection &{0xc4202ff360 0xc420149c80 $sysdata}
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 132f[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc420366510
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 1330[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 1331[0m Exiting NewDataCollection &{0xc420143530 0xc4211c6580 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 1332[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 1333[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 1334[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 1335[0m @JS : AssetRegistry            :constructor()             > [object Object]
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 1336[0m Entering DataCollection.get &{0xc420145580}
[36m2017-07-19 23:33:49.212 UTC [Composer] Debug -> DEBU 1337[0m @JS : AssetRegistry            :constructor()             < 
[36m2017-07-19 23:33:49.212 UTC [Composer] Debug -> DEBU 1338[0m @JS : Api                      :getAssetRegistry()        < [object Object]
[36m2017-07-19 23:33:49.211 UTC [Composer] Debug -> DEBU 132e[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc42129bb00} 0xc4203663f0
[36m2017-07-19 23:33:49.212 UTC [Composer] Debug -> DEBU 1339[0m Exiting NewDataCollection &{0xc4200297b0 0xc42129bb00 $sysdata}
[36m2017-07-19 23:33:49.212 UTC [Composer] Debug -> DEBU 133a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 133b[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 133c[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 133d[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 133e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1340[0m Entering Context.getEventService &{0xc4201455c0}
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1342[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1343[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1344[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1345[0m Entering Context.getHTTPService &{0xc4201455c0}
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1346[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1347[0m Entering getLogging 0xc420340000
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 133f[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1348[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1341[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 134a[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.213 UTC [Composer] Debug -> DEBU 1349[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 134b[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 134c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 134d[0m Entering Context.getEventService &{0xc4201455c0}
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 134e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 134f[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 1350[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 1351[0m Entering Context.getHTTPService &{0xc4201455c0}
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 1352[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 1353[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 1354[0m Entering EventService.transactionCommit &{0xc4201455c0}
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 1355[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.214 UTC [Composer] Debug -> DEBU 1356[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1357[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1358[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1359[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 135a[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 135b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 135c[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 135d[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 135e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 135f[0m Entering Context.getEventService &{0xc4201455c0}
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1360[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1361[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1362[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1363[0m Entering Context.getHTTPService &{0xc4201455c0}
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1364[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1365[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1366[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1367[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1368[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.215 UTC [Composer] Debug -> DEBU 1369[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 136a[0m Entering DataService.getCollection &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 136b[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 136c[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 136d[0m Entering Engine.handleCallback 0xc4205c8060 &{0xc4201455c0}
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 136e[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 136f[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 1370[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 1371[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 1372[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 1373[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 1374[0m Exiting Composer.Invoke {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"} <nil>
[36m2017-07-19 23:33:49.216 UTC [Composer] Debug -> DEBU 1375[0m Entering ComposerPool.Put &{0xc420142280 0xc420569f80 0xc420028bb8}
[36m2017-07-19 23:33:49.217 UTC [Composer] Debug -> DEBU 1376[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.217 UTC [Composer] Debug -> DEBU 1377[0m Exiting Chaincode.Invoke 200  {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"}
[36m2017-07-19 23:33:49.217 UTC [Composer] Debug -> DEBU 1378[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.217 UTC [Composer] Debug -> DEBU 1379[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.217 UTC [Composer] Debug -> DEBU 137a[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.217 UTC [Composer] Debug -> DEBU 137b[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.218 UTC [Composer] Debug -> DEBU 137c[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.218 UTC [Composer] Debug -> DEBU 137d[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.218 UTC [Composer] Debug -> DEBU 137e[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 137f[0m @JS : BusinessNetworkDefinition:fromArchive()             Added ACL files to ACL manager 
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 1380[0m @JS : BusinessNetworkDefinition:fromArchive()             Adding Query files to query manager 
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 1381[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 1382[0m @JS : BusinessNetworkDefinition:fromArchive()             Added Query files to query manager 
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 1383[0m @JS : BusinessNetworkDefinition:fromArchive()             < [object Object]
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 1384[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 1385[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 1386[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.219 UTC [Composer] Debug -> DEBU 1387[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.220 UTC [Composer] Debug -> DEBU 1388[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.220 UTC [Composer] Debug -> DEBU 1389[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.220 UTC [Composer] Debug -> DEBU 138a[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.220 UTC [Composer] Debug -> DEBU 138b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.220 UTC [Composer] Debug -> DEBU 138c[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.223 UTC [Composer] Debug -> DEBU 138d[0m Entering Chaincode.Invoke 0xc4203e5ff0
[36m2017-07-19 23:33:49.224 UTC [Composer] Debug -> DEBU 1390[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.224 UTC [Composer] Debug -> DEBU 1391[0m Exiting ComposerPool.Get &{0xc420150140 0xc42027d400 0xc4202fe058}
[36m2017-07-19 23:33:49.224 UTC [Composer] Debug -> DEBU 1392[0m Entering Composer.Invoke 0xc420341d00 addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"QGANPSUJMV_c14","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#QGANPSUJMV_t1"}]
[36m2017-07-19 23:33:49.224 UTC [Composer] Debug -> DEBU 1393[0m Entering NewContext &{0xc420140e60} &{0xc420150140} 0xc420341e10
[36m2017-07-19 23:33:49.224 UTC [Composer] Debug -> DEBU 1394[0m Entering NewDataService &{0xc420140e60} &{0xc420150140 <nil> <nil> <nil> <nil>} 0xc420341ec0
[36m2017-07-19 23:33:49.224 UTC [Composer] Debug -> DEBU 1396[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.225 UTC [Composer] Debug -> DEBU 1397[0m Exiting NewDataService &{0xc420150140 0xc421275200}
[36m2017-07-19 23:33:49.225 UTC [Composer] Debug -> DEBU 1398[0m Entering NewIdentityService &{0xc420140e60} &{0xc420150140 0xc421048e60 <nil> <nil> <nil>} 0xc42029a070
[36m2017-07-19 23:33:49.225 UTC [Composer] Debug -> DEBU 139c[0m Exiting NewIdentityService &{0xc420150140 0xc421275200}
[36m2017-07-19 23:33:49.226 UTC [Composer] Debug -> DEBU 139d[0m Entering NewEventService &{0xc420140e60} &{0xc420150140 0xc421048e60 0xc421048f40 <nil> <nil>} 0xc42029a1e0
[36m2017-07-19 23:33:49.226 UTC [Composer] Debug -> DEBU 139e[0m Exiting NewEventServce &{0xc420150140 0xc421275200}
[36m2017-07-19 23:33:49.226 UTC [Composer] Debug -> DEBU 13a0[0m Entering HTTPService &{0xc420140e60} &{0xc420150140 0xc421048e60 0xc421048f40 0xc421049020 <nil>} 0xc42029a360
[36m2017-07-19 23:33:49.226 UTC [Composer] Debug -> DEBU 13a2[0m Exiting HTTPService &{0xc420150140 0xc421275200}
[36m2017-07-19 23:33:49.226 UTC [Composer] Debug -> DEBU 13a3[0m Exiting NewContext &{0xc420150140 0xc421048e60 0xc421048f40 0xc421049020 0xc421049100}
[36m2017-07-19 23:33:49.226 UTC [Composer] Debug -> DEBU 13a4[0m Entering Engine.Invoke &{0xc420150140 0xc421048e60 0xc421048f40 0xc421049020 0xc421049100} addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"QGANPSUJMV_c14","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#QGANPSUJMV_t1"}]
[36m2017-07-19 23:33:49.225 UTC [Composer] Debug -> DEBU 1399[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#TOSEDVQKUV_c1, UPDATE
[36m2017-07-19 23:33:49.227 UTC [Composer] Debug -> DEBU 13a5[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.227 UTC [Composer] Debug -> DEBU 13a6[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"QGANPSUJMV_c14","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#QGANPSUJMV_t1"}
[36m2017-07-19 23:33:49.227 UTC [Composer] Debug -> DEBU 13a7[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.225 UTC [Composer] Debug -> DEBU 139a[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc42008d900} 0xc4203acd60
[36m2017-07-19 23:33:49.227 UTC [Composer] Debug -> DEBU 13a8[0m Exiting NewDataCollection &{0xc4202ff4f0 0xc42008d900 $sysdata}
[36m2017-07-19 23:33:49.227 UTC [Composer] Debug -> DEBU 13a9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.223 UTC [Composer] Debug -> DEBU 138f[0m @JS : Context                  :cacheBusinessNetwork()    > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.227 UTC [Composer] Debug -> DEBU 13aa[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.228 UTC [Composer] Debug -> DEBU 13ab[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:49.228 UTC [Composer] Debug -> DEBU 13ac[0m @JS : Context                  :cacheBusinessNetwork()    < 
[36m2017-07-19 23:33:49.223 UTC [Composer] Debug -> DEBU 138e[0m Entering NewDataCollection &{0xc4201cf6a0} &{0xc420028030 0xc420149000} 0xc4205066b0
[36m2017-07-19 23:33:49.228 UTC [Composer] Debug -> DEBU 13ad[0m @JS : Context                  :loadBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.228 UTC [Composer] Debug -> DEBU 13ae[0m Exiting NewDataCollection &{0xc4202ff480 0xc420149000 $sysdata}
[36m2017-07-19 23:33:49.224 UTC [Composer] Debug -> DEBU 1395[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.228 UTC [Composer] Debug -> DEBU 13af[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.228 UTC [Composer] Debug -> DEBU 13b0[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.228 UTC [Composer] Debug -> DEBU 13b1[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.226 UTC [Composer] Debug -> DEBU 139f[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:49.228 UTC [Composer] Debug -> DEBU 13b2[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.226 UTC [Composer] Debug -> DEBU 13a1[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.229 UTC [Composer] Debug -> DEBU 13b3[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.229 UTC [Composer] Debug -> DEBU 13b4[0m Entering DataCollection.get &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.229 UTC [Composer] Debug -> DEBU 13b5[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.229 UTC [Composer] Debug -> DEBU 13b6[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.225 UTC [Composer] Debug -> DEBU 139b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.229 UTC [Composer] Debug -> DEBU 13b7[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.230 UTC [Composer] Debug -> DEBU 13b8[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.230 UTC [Composer] Debug -> DEBU 13b9[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.230 UTC [Composer] Debug -> DEBU 13ba[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.230 UTC [Composer] Debug -> DEBU 13bb[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.230 UTC [Composer] Debug -> DEBU 13bc[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.230 UTC [Composer] Debug -> DEBU 13bd[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.230 UTC [Composer] Debug -> DEBU 13be[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13bf[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c0[0m Exiting Engine.Invoke 0xc420643a40
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c1[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c2[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c3[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c4[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c5[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c7[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c8[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c9[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13ca[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13cb[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13cc[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.232 UTC [Composer] Debug -> DEBU 13cd[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.232 UTC [Composer] Debug -> DEBU 13ce[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.232 UTC [Composer] Debug -> DEBU 13cf[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.232 UTC [Composer] Debug -> DEBU 13d1[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.232 UTC [Composer] Debug -> DEBU 13d2[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.232 UTC [Composer] Debug -> DEBU 13d3[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.232 UTC [Composer] Debug -> DEBU 13d4[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13d5[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13d6[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13d7[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13d8[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13d9[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13da[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13db[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13dc[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.233 UTC [Composer] Debug -> DEBU 13dd[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.234 UTC [Composer] Debug -> DEBU 13de[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.234 UTC [Composer] Debug -> DEBU 13df[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.234 UTC [Composer] Debug -> DEBU 13e0[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.234 UTC [Composer] Debug -> DEBU 13e1[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.234 UTC [Composer] Debug -> DEBU 13e2[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.235 UTC [Composer] Debug -> DEBU 13e3[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.235 UTC [Composer] Debug -> DEBU 13e4[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.235 UTC [Composer] Debug -> DEBU 13e5[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.236 UTC [Composer] Debug -> DEBU 13e6[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.236 UTC [Composer] Debug -> DEBU 13e7[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13e8[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13e9[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13ea[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13eb[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13ec[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13ee[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:49.232 UTC [Composer] Debug -> DEBU 13d0[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13ef[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13f0[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f1[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f2[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f3[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f4[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f5[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f7[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f6[0m Entering DataCollection.update &{0xc420144940}
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f8[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13f9[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13fa[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.231 UTC [Composer] Debug -> DEBU 13c6[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 13fc[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 13fd[0m Entering getLogging 0xc42029b050
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 13fe[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc42129bb00} 0xc42029b170
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 13ff[0m Exiting NewDataCollection &{0xc4202ff578 0xc42129bb00 $sysdata}
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 1400[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 1401[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 1402[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 1403[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 1404[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 1405[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.239 UTC [Composer] Debug -> DEBU 1406[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.240 UTC [Composer] Debug -> DEBU 1407[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:49.240 UTC [Composer] Debug -> DEBU 1408[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.237 UTC [Composer] Debug -> DEBU 13ed[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.240 UTC [Composer] Debug -> DEBU 1409[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 140a[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 140b[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 140d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 140e[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 140c[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.238 UTC [Composer] Debug -> DEBU 13fb[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 140f[0m Entering DataService.getCollection &{0xc4202a2640}
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 1411[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 1410[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 1412[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.243 UTC [Composer] Debug -> DEBU 1413[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1414[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1415[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1416[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1417[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1418[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1419[0m Entering Chaincode.Invoke 0xc42029b040
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 141a[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 141b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 141d[0m Entering DataService.getCollection &{0xc4202a2680}
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 141c[0m Exiting ComposerPool.Get &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 141e[0m Entering Composer.Invoke 0xc421032f20 addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"XYITKICOYD_c6","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#XYITKICOYD_t0"}]
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 141f[0m Entering NewContext &{0xc4201ce500} &{0xc420028020} 0xc421033010
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1420[0m Entering NewDataService &{0xc4201ce500} &{0xc420028020 <nil> <nil> <nil> <nil>} 0xc4210330d0
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1421[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1422[0m Exiting NewDataService &{0xc420028020 0xc42049d700}
[36m2017-07-19 23:33:49.244 UTC [Composer] Debug -> DEBU 1423[0m Entering NewIdentityService &{0xc4201ce500} &{0xc420028020 0xc42053b960 <nil> <nil> <nil>} 0xc421033280
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1424[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1425[0m Exiting NewIdentityService &{0xc420028020 0xc42049d700}
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1427[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1426[0m Entering NewEventService &{0xc4201ce500} &{0xc420028020 0xc42053b960 0xc42053ba40 <nil> <nil>} 0xc4210333f0
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1428[0m Exiting NewEventServce &{0xc420028020 0xc42049d700}
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1429[0m Entering HTTPService &{0xc4201ce500} &{0xc420028020 0xc42053b960 0xc42053ba40 0xc42053bb20 <nil>} 0xc421033560
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 142a[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 142b[0m Exiting HTTPService &{0xc420028020 0xc42049d700}
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 142c[0m Exiting NewContext &{0xc420028020 0xc42053b960 0xc42053ba40 0xc42053bb20 0xc42053bc00}
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 142d[0m Entering Engine.Invoke &{0xc420028020 0xc42053b960 0xc42053ba40 0xc42053bb20 0xc42053bc00} addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"XYITKICOYD_c6","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#XYITKICOYD_t0"}]
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 142e[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 142f[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1430[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"XYITKICOYD_c6","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#XYITKICOYD_t0"}
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1431[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.245 UTC [Composer] Debug -> DEBU 1432[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.246 UTC [Composer] Debug -> DEBU 1433[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.246 UTC [Composer] Debug -> DEBU 1434[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.246 UTC [Composer] Debug -> DEBU 1435[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.246 UTC [Composer] Debug -> DEBU 1436[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.246 UTC [Composer] Debug -> DEBU 1437[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.246 UTC [Composer] Debug -> DEBU 1438[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.247 UTC [Composer] Debug -> DEBU 1439[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.247 UTC [Composer] Debug -> DEBU 143a[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.247 UTC [Composer] Debug -> DEBU 143b[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.248 UTC [Composer] Debug -> DEBU 143c[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.248 UTC [Composer] Debug -> DEBU 143d[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.248 UTC [Composer] Debug -> DEBU 143f[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.248 UTC [Composer] Debug -> DEBU 1440[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.248 UTC [Composer] Debug -> DEBU 143e[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.248 UTC [Composer] Debug -> DEBU 1442[0m Exiting Engine.Invoke 0xc421212960
[36m2017-07-19 23:33:49.248 UTC [Composer] Debug -> DEBU 1443[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.248 UTC [Composer] Debug -> DEBU 1441[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 1444[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 1445[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 1446[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 1447[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 1448[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 1449[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 144c[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 144a[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.250 UTC [Composer] Debug -> DEBU 144d[0m Exiting DataCollection.update 0
[36m2017-07-19 23:33:49.249 UTC [Composer] Debug -> DEBU 144b[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.250 UTC [Composer] Debug -> DEBU 144e[0m @JS : TransactionLogger        :onResourceUpdated()       > [object Object]
[36m2017-07-19 23:33:49.250 UTC [Composer] Debug -> DEBU 144f[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.250 UTC [Composer] Debug -> DEBU 1450[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.250 UTC [Composer] Debug -> DEBU 1451[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.250 UTC [Composer] Debug -> DEBU 1452[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.251 UTC [Composer] Debug -> DEBU 1453[0m @JS : TransactionLogger        :onResourceUpdated()       Serialized old resource 
[36m2017-07-19 23:33:49.251 UTC [Composer] Debug -> DEBU 1454[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.252 UTC [Composer] Debug -> DEBU 1455[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.252 UTC [Composer] Debug -> DEBU 1456[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.252 UTC [Composer] Debug -> DEBU 1457[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.252 UTC [Composer] Debug -> DEBU 1458[0m @JS : TransactionLogger        :onResourceUpdated()       Serialized new resource 
[36m2017-07-19 23:33:49.252 UTC [Composer] Debug -> DEBU 1459[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421275200} 0xc42029b8f0
[36m2017-07-19 23:33:49.252 UTC [Composer] Debug -> DEBU 145a[0m Entering NewDataCollection &{0xc4202a2640} &{0xc420150168 0xc42008de00} 0xc42014b290
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 145b[0m @JS : TransactionLogger        :onResourceUpdated()       Generated JSON Patch [object Object]
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 145c[0m Exiting NewDataCollection &{0xc4202ff5c0 0xc421275200 $sysdata}
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 145d[0m @JS : TransactionLogger        :undefined()               < 
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 145e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 145f[0m @JS : CompiledScriptBundle     :execute()                 Function executed (returned promise) 
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 1461[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 1462[0m @JS : CompiledScriptBundle     :execute()                 < 
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 1463[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 1464[0m @JS : EngineTransactions       :submitTransaction()       Getting default transaction registry 
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 1465[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.253 UTC [Composer] Debug -> DEBU 1460[0m Exiting NewDataCollection &{0xc420029930 0xc42008de00 $sysdata}
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 1467[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 1468[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 1469[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 146a[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 146b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 146c[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 146d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 146e[0m Entering DataCollection.get &{0xc4202a2640}
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 1466[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc42008d900} 0xc42029bca0
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 146f[0m Exiting NewDataCollection &{0xc4202ff610 0xc42008d900 $sysdata}
[36m2017-07-19 23:33:49.254 UTC [Composer] Debug -> DEBU 1470[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.255 UTC [Composer] Debug -> DEBU 1471[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.255 UTC [Composer] Debug -> DEBU 1472[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:49.255 UTC [Composer] Debug -> DEBU 1473[0m Entering NewDataCollection &{0xc4202a2680} &{0xc420150170 0xc4202a4200} 0xc42014b380
[36m2017-07-19 23:33:49.255 UTC [Composer] Debug -> DEBU 1474[0m Exiting NewDataCollection &{0xc4201437c8 0xc4202a4200 $sysdata}
[36m2017-07-19 23:33:49.256 UTC [Composer] Debug -> DEBU 1475[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.256 UTC [Composer] Debug -> DEBU 1476[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.257 UTC [Composer] Debug -> DEBU 1477[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.257 UTC [Composer] Debug -> DEBU 1478[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:49.257 UTC [Composer] Debug -> DEBU 1479[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:49.257 UTC [Composer] Debug -> DEBU 147a[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.257 UTC [Composer] Debug -> DEBU 147b[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.257 UTC [Composer] Debug -> DEBU 147c[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.257 UTC [Composer] Debug -> DEBU 147d[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.257 UTC [Composer] Debug -> DEBU 147e[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.258 UTC [Composer] Debug -> DEBU 147f[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.258 UTC [Composer] Debug -> DEBU 1480[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.258 UTC [Composer] Debug -> DEBU 1481[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.258 UTC [Composer] Debug -> DEBU 1482[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.258 UTC [Composer] Debug -> DEBU 1483[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.260 UTC [Composer] Debug -> DEBU 1484[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc42129bb00} 0xc42133a5a0
[36m2017-07-19 23:33:49.260 UTC [Composer] Debug -> DEBU 1485[0m Exiting NewDataCollection &{0xc420143810 0xc42129bb00 $sysregistries}
[36m2017-07-19 23:33:49.260 UTC [Composer] Debug -> DEBU 1486[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.260 UTC [Composer] Debug -> DEBU 1487[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.260 UTC [Composer] Debug -> DEBU 1488[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.261 UTC [Composer] Debug -> DEBU 1489[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.261 UTC [Composer] Debug -> DEBU 148a[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.261 UTC [Composer] Debug -> DEBU 148b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.261 UTC [Composer] Debug -> DEBU 148c[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.262 UTC [Composer] Debug -> DEBU 148d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.264 UTC [Composer] Debug -> DEBU 148f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.264 UTC [Composer] Debug -> DEBU 1490[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.265 UTC [Composer] Debug -> DEBU 1491[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42049d700} 0xc4201377c0
[36m2017-07-19 23:33:49.265 UTC [Composer] Debug -> DEBU 1492[0m Exiting NewDataCollection &{0xc420143840 0xc42049d700 $sysdata}
[36m2017-07-19 23:33:49.262 UTC [Composer] Debug -> DEBU 148e[0m Entering DataCollection.get &{0xc4202a2680}
[36m2017-07-19 23:33:49.265 UTC [Composer] Debug -> DEBU 1493[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.265 UTC [Composer] Debug -> DEBU 1494[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.265 UTC [Composer] Debug -> DEBU 1495[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.266 UTC [Composer] Debug -> DEBU 1496[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.266 UTC [Composer] Debug -> DEBU 1497[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.266 UTC [Composer] Debug -> DEBU 1498[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.266 UTC [Composer] Debug -> DEBU 1499[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc42129bb00} 0xc4212b0870
[36m2017-07-19 23:33:49.266 UTC [Composer] Debug -> DEBU 149a[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.266 UTC [Composer] Debug -> DEBU 149b[0m Exiting NewDataCollection &{0xc4202ff748 0xc42129bb00 $sysidentities}
[36m2017-07-19 23:33:49.266 UTC [Composer] Debug -> DEBU 149c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.266 UTC [Composer] Debug -> DEBU 149d[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 149e[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 149f[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a0[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc4211c6580} 0xc42014bd50
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a1[0m Exiting NewDataCollection &{0xc420143848 0xc4211c6580 Transaction:default}
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a2[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a3[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a4[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a5[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a6[0m Entering IdentityService.getCurrentUserID &{0xc420141340}
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a7[0m Entering extractNameFromCreator 0xc42133b6a0
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.267 UTC [Composer] Debug -> DEBU 14a8[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14aa[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14ab[0m Common Name admin
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14ac[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14ad[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14ae[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14af[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14b0[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14b1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.268 UTC [Composer] Debug -> DEBU 14b2[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:49.269 UTC [Composer] Debug -> DEBU 14b3[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.269 UTC [Composer] Debug -> DEBU 14b4[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.270 UTC [Composer] Debug -> DEBU 14b5[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.270 UTC [Composer] Debug -> DEBU 14b7[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.270 UTC [Composer] Debug -> DEBU 14b8[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14b9[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.270 UTC [Composer] Debug -> DEBU 14b6[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14ba[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14bb[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14bc[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14bd[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14be[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14bf[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14c0[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.271 UTC [Composer] Debug -> DEBU 14c1[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14c2[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14c3[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14c4[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14c5[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14c6[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is not in cache, loading 
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14c7[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14c8[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14ca[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14cb[0m @JS : ScriptCompiler           :compile()                 > [object Object]
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14cc[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14cd[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14ce[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14cf[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14d0[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14d1[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14d2[0m @JS : ScriptCompiler           :compile()                 Adding global assert
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14d3[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.272 UTC [Composer] Debug -> DEBU 14c9[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14d4[0m @JS : ScriptCompiler           :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14d5[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14d6[0m @JS : ScriptCompiler           :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14d7[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14d8[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14d9[0m @JS : ScriptCompiler           :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14da[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14db[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14dc[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14dd[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.273 UTC [Composer] Debug -> DEBU 14de[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.274 UTC [Composer] Debug -> DEBU 14df[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"EAMSPLOYCJ_t9","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:49.274 UTC [Composer] Debug -> DEBU 14e0[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.274 UTC [Composer] Debug -> DEBU 14e1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.274 UTC [Composer] Debug -> DEBU 14e2[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.274 UTC [Composer] Debug -> DEBU 14e3[0m @JS : ScriptCompiler           :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.275 UTC [Composer] Debug -> DEBU 14e4[0m @JS : ScriptCompiler           :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.275 UTC [Composer] Debug -> DEBU 14e5[0m @JS : ScriptCompiler           :compile()                 Adding API method post
[36m2017-07-19 23:33:49.275 UTC [Composer] Debug -> DEBU 14e6[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.275 UTC [Composer] Debug -> DEBU 14e7[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.276 UTC [Composer] Debug -> DEBU 14e8[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.276 UTC [Composer] Debug -> DEBU 14e9[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.276 UTC [Composer] Debug -> DEBU 14ea[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.276 UTC [Composer] Debug -> DEBU 14eb[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:49.276 UTC [Composer] Debug -> DEBU 14ec[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:49.276 UTC [Composer] Debug -> DEBU 14ed[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:49.277 UTC [Composer] Debug -> DEBU 14ee[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.277 UTC [Composer] Debug -> DEBU 14ef[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.277 UTC [Composer] Debug -> DEBU 14f0[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.277 UTC [Composer] Debug -> DEBU 14f1[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.277 UTC [Composer] Debug -> DEBU 14f2[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14f3[0m @JS : EngineTransactions       :submitTransaction()       Storing executed transaction in transaction registry 
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14f4[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14f5[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trade#09403b58-3126-45d5-b650-9f4ca0ec3a81, CREATE
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14f6[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14f7[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14f8[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14f9[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14fa[0m @JS : ScriptCompiler           :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.278 UTC [Composer] Debug -> DEBU 14fb[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 14fc[0m @JS : ScriptCompiler           :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 14fd[0m @JS : ScriptCompiler           :compile()                 Adding API method query
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 14fe[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1500[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1501[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1502[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1504[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1505[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1506[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1507[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 14ff[0m @JS : ScriptCompiler           :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1508[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1509[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 150a[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 150b[0m @JS : ScriptCompiler           :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 150c[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 150d[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 150e[0m @JS : ScriptCompiler           :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 150f[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1510[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1511[0m @JS : ScriptCompiler           :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1512[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1513[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1514[0m @JS : ScriptCompiler           :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1515[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1516[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1517[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1518[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.280 UTC [Composer] Debug -> DEBU 1519[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.281 UTC [Composer] Debug -> DEBU 151a[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.281 UTC [Composer] Debug -> DEBU 151b[0m Entering DataCollection.add &{0xc420144940}
[36m2017-07-19 23:33:49.281 UTC [Composer] Debug -> DEBU 151c[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.281 UTC [Composer] Debug -> DEBU 151d[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.281 UTC [Composer] Debug -> DEBU 151e[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.281 UTC [Composer] Debug -> DEBU 151f[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.281 UTC [Composer] Debug -> DEBU 1520[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.282 UTC [Composer] Debug -> DEBU 1521[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.282 UTC [Composer] Debug -> DEBU 1522[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.282 UTC [Composer] Debug -> DEBU 1523[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.282 UTC [Composer] Debug -> DEBU 1524[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.282 UTC [Composer] Debug -> DEBU 1525[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.282 UTC [Composer] Debug -> DEBU 1526[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.282 UTC [Composer] Debug -> DEBU 1527[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.283 UTC [Composer] Debug -> DEBU 1528[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.283 UTC [Composer] Debug -> DEBU 1529[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.283 UTC [Composer] Debug -> DEBU 152a[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 152b[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 152c[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 152d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 152e[0m Entering DataService.getCollection &{0xc42027a640}
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 152f[0m @JS : ScriptCompiler           :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 1530[0m @JS : ScriptCompiler           :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 1531[0m @JS : ScriptCompiler           :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 1532[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.284 UTC [Composer] Debug -> DEBU 1533[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.285 UTC [Composer] Debug -> DEBU 1534[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.285 UTC [Composer] Debug -> DEBU 1536[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.285 UTC [Composer] Debug -> DEBU 1535[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421275200} 0xc421420520
[36m2017-07-19 23:33:49.285 UTC [Composer] Debug -> DEBU 1537[0m Exiting NewDataCollection &{0xc4202ff7e0 0xc421275200 $sysdata}
[36m2017-07-19 23:33:49.285 UTC [Composer] Debug -> DEBU 1538[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.285 UTC [Composer] Debug -> DEBU 1539[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.285 UTC [Composer] Debug -> DEBU 153a[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.285 UTC [Composer] Debug -> DEBU 153b[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:49.279 UTC [Composer] Debug -> DEBU 1503[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 153c[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42049d700} 0xc4214104a0
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 153d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 153e[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 153f[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 1540[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 1541[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 1542[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 1543[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.288 UTC [Composer] Debug -> DEBU 154a[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.288 UTC [Composer] Debug -> DEBU 154b[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.288 UTC [Composer] Debug -> DEBU 154c[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.288 UTC [Composer] Debug -> DEBU 154d[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.288 UTC [Composer] Debug -> DEBU 154e[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.288 UTC [Composer] Debug -> DEBU 154f[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.289 UTC [Composer] Debug -> DEBU 1550[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.289 UTC [Composer] Debug -> DEBU 1551[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 1544[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.289 UTC [Composer] Debug -> DEBU 1552[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 1545[0m Entering NewDataCollection &{0xc42027a640} &{0xc4202fe000 0xc42008d500} 0xc4213d5db0
[36m2017-07-19 23:33:49.290 UTC [Composer] Debug -> DEBU 1553[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.290 UTC [Composer] Debug -> DEBU 1554[0m Exiting NewDataCollection &{0xc420151658 0xc42008d500 $sysdata}
[36m2017-07-19 23:33:49.290 UTC [Composer] Debug -> DEBU 1555[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.290 UTC [Composer] Debug -> DEBU 1556[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.290 UTC [Composer] Debug -> DEBU 1557[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.290 UTC [Composer] Debug -> DEBU 1558[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.290 UTC [Composer] Debug -> DEBU 1559[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 155a[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 155b[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 155c[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 155d[0m Entering DataCollection.get &{0xc42027a640}
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 155e[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 155f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 1560[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 1561[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 1562[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 1546[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 1563[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc42129bb00} 0xc421411570
[36m2017-07-19 23:33:49.291 UTC [Composer] Debug -> DEBU 1564[0m Exiting NewDataCollection &{0xc420029ba0 0xc42129bb00 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 1565[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.286 UTC [Composer] Debug -> DEBU 1547[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc420149600} 0xc4213df5c0
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 1566[0m Exiting NewDataCollection &{0xc4201438b8 0xc420149600 $sysregistries}
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 1567[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 1568[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#EAMSPLOYCJ_t9, CREATE
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 1569[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 156b[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 156c[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 156d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 156e[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.287 UTC [Composer] Debug -> DEBU 1548[0m Exiting NewDataCollection &{0xc420143938 0xc42049d700 $sysdata}
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 156f[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.287 UTC [Composer] Debug -> DEBU 1549[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.293 UTC [Composer] Debug -> DEBU 1570[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.293 UTC [Composer] Debug -> DEBU 1571[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.293 UTC [Composer] Debug -> DEBU 1572[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.292 UTC [Composer] Debug -> DEBU 156a[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.294 UTC [Composer] Debug -> DEBU 1573[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.294 UTC [Composer] Debug -> DEBU 1574[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.295 UTC [Composer] Debug -> DEBU 1579[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:49.294 UTC [Composer] Debug -> DEBU 1575[0m @JS : TransactionLogger        :onResourceAdded()         > [object Object]
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 157a[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42008d200} 0xc421411990
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 157b[0m @JS : TransactionLogger        :undefined()               < 
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 157c[0m Exiting NewDataCollection &{0xc420029bf8 0xc42008d200 $sysregistries}
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 157d[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 157f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 157e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 1581[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 1582[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 1583[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 1584[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.294 UTC [Composer] Debug -> DEBU 1576[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 1586[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 1587[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 1588[0m @JS : ScriptCompiler           :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 1589[0m @JS : ScriptCompiler           :processScript()           Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 158a[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 158b[0m @JS : ScriptCompiler           :processScript()           < 
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 158c[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 158d[0m @JS : ScriptCompiler           :processScriptManager()    < 
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 158e[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 158f[0m @JS : ScriptCompiler           :compile()                 Adding function declaration tradeCommodity
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1590[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:49.295 UTC [Composer] Debug -> DEBU 1578[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421275200} 0xc4213df920
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1591[0m Exiting NewDataCollection &{0xc4202ff9e8 0xc421275200 $sysdata}
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1592[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.294 UTC [Composer] Debug -> DEBU 1577[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1594[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1595[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1596[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc420149600} 0xc4214741b0
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1598[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1599[0m Exiting NewDataCollection &{0xc4201516c8 0xc420149600 $sysidentities}
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 159a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 159b[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.300 UTC [Composer] Debug -> DEBU 159c[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.300 UTC [Composer] Debug -> DEBU 159d[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.300 UTC [Composer] Debug -> DEBU 159e[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.300 UTC [Composer] Debug -> DEBU 159f[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.300 UTC [Composer] Debug -> DEBU 15a0[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.300 UTC [Composer] Debug -> DEBU 15a1[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.300 UTC [Composer] Debug -> DEBU 15a3[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15a4[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15a5[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15a6[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15a7[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15a8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15a9[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1597[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:49.298 UTC [Composer] Debug -> DEBU 1585[0m Entering DataCollection.add &{0xc420141340}
[36m2017-07-19 23:33:49.296 UTC [Composer] Debug -> DEBU 1580[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15aa[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15ab[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15ac[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15ad[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:49.301 UTC [Composer] Debug -> DEBU 15ae[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.299 UTC [Composer] Debug -> DEBU 1593[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:49.302 UTC [Composer] Debug -> DEBU 15af[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.300 UTC [Composer] Debug -> DEBU 15a2[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.302 UTC [Composer] Debug -> DEBU 15b0[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.302 UTC [Composer] Debug -> DEBU 15b1[0m Entering IdentityService.getCurrentUserID &{0xc4201450e0}
[36m2017-07-19 23:33:49.302 UTC [Composer] Debug -> DEBU 15b2[0m Entering extractNameFromCreator 0xc421474810
[36m2017-07-19 23:33:49.302 UTC [Composer] Debug -> DEBU 15b3[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.303 UTC [Composer] Debug -> DEBU 15b4[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.303 UTC [Composer] Debug -> DEBU 15b5[0m Common Name admin
[36m2017-07-19 23:33:49.303 UTC [Composer] Debug -> DEBU 15b6[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.303 UTC [Composer] Debug -> DEBU 15b7[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15b8[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42008d200} 0xc4214333f0
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15b9[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42049d700} 0xc421494000
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15ba[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15bb[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15bc[0m Exiting NewDataCollection &{0xc4202ffa38 0xc42008d200 $sysidentities}
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15bd[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15be[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15bf[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15c0[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15c1[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.304 UTC [Composer] Debug -> DEBU 15c2[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15c3[0m Entering IdentityService.getCurrentUserID &{0xc4201cf140}
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15c4[0m Entering extractNameFromCreator 0xc4214339e0
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15c5[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15c6[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15c7[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15c8[0m Common Name admin
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15c9[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15ca[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15cb[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15cc[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15cd[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.305 UTC [Composer] Debug -> DEBU 15ce[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15cf[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d0[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d2[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d1[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d3[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d4[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d6[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d7[0m Entering Context.getEventService &{0xc4201450e0}
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d8[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d9[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.307 UTC [Composer] Debug -> DEBU 15da[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.307 UTC [Composer] Debug -> DEBU 15db[0m Entering Context.getHTTPService &{0xc4201450e0}
[36m2017-07-19 23:33:49.306 UTC [Composer] Debug -> DEBU 15d5[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15de[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15df[0m Entering Context.getEventService &{0xc4201cf140}
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15e0[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15e1[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15e2[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15e3[0m Entering Context.getHTTPService &{0xc4201cf140}
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15e4[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.307 UTC [Composer] Debug -> DEBU 15dd[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15e5[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15e6[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.308 UTC [Composer] Debug -> DEBU 15e7[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.309 UTC [Composer] Debug -> DEBU 15e8[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.309 UTC [Composer] Debug -> DEBU 15e9[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.309 UTC [Composer] Debug -> DEBU 15ea[0m Exiting NewDataCollection &{0xc420029ca0 0xc42049d700 $sysdata}
[36m2017-07-19 23:33:49.309 UTC [Composer] Debug -> DEBU 15ec[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.309 UTC [Composer] Debug -> DEBU 15ed[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.309 UTC [Composer] Debug -> DEBU 15ee[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.309 UTC [Composer] Debug -> DEBU 15eb[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.307 UTC [Composer] Debug -> DEBU 15dc[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15ef[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f0[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f2[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f3[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f5[0m Entering DataService.getCollection &{0xc420145580}
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f1[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f6[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f7[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15f9[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:49.310 UTC [Composer] Debug -> DEBU 15fa[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 15fb[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 15fd[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 15fe[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 15fc[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 15ff[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 1600[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 1601[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 1602[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 1603[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.312 UTC [Composer] Debug -> DEBU 1605[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.312 UTC [Composer] Debug -> DEBU 1606[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.312 UTC [Composer] Debug -> DEBU 1607[0m Entering DataService.getCollection &{0xc4202a2680}
[36m2017-07-19 23:33:49.312 UTC [Composer] Debug -> DEBU 1608[0m Entering NewDataCollection &{0xc420145580} &{0xc420142278 0xc420149c80} 0xc421475e60
[36m2017-07-19 23:33:49.311 UTC [Composer] Debug -> DEBU 1604[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.312 UTC [Composer] Debug -> DEBU 1609[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.312 UTC [Composer] Debug -> DEBU 160a[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 160b[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 160c[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 160d[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 160e[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 160f[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1610[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1611[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1612[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1613[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1614[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1615[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1616[0m Entering DataService.getCollection &{0xc4202a2220}
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1617[0m Exiting NewDataCollection &{0xc4202ffaa8 0xc420149c80 $sysregistries}
[36m2017-07-19 23:33:49.313 UTC [Composer] Debug -> DEBU 1618[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.314 UTC [Composer] Debug -> DEBU 1619[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.314 UTC [Composer] Debug -> DEBU 161a[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.314 UTC [Composer] Debug -> DEBU 161b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.314 UTC [Composer] Debug -> DEBU 161c[0m Entering DataService.getCollection &{0xc420145580}
[36m2017-07-19 23:33:49.314 UTC [Composer] Debug -> DEBU 161d[0m Entering NewDataCollection &{0xc4202a2680} &{0xc420150170 0xc4202a4200} 0xc4214ce530
[36m2017-07-19 23:33:49.316 UTC [Composer] Debug -> DEBU 161e[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.316 UTC [Composer] Debug -> DEBU 161f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.316 UTC [Composer] Debug -> DEBU 1620[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:49.316 UTC [Composer] Debug -> DEBU 1621[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 1622[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 1623[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 1624[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 1625[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 1626[0m Entering NewDataCollection &{0xc420145580} &{0xc420142278 0xc420149c80} 0xc42147b650
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 1627[0m Exiting NewDataCollection &{0xc420151820 0xc4202a4200 $sysdata}
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 1628[0m Exiting NewDataCollection &{0xc420143ac8 0xc420149c80 $sysidentities}
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 1629[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.317 UTC [Composer] Debug -> DEBU 162a[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 162b[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 162c[0m Entering Context.getIdentityService &{0xc420145580}
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 162d[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 162e[0m Entering IdentityService.getCurrentUserID &{0xc420145580}
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 162f[0m Entering extractNameFromCreator 0xc42147bc40
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1630[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1631[0m Entering NewDataCollection &{0xc4202a2220} &{0xc420150158 0xc42013b600} 0xc421495310
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1632[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1633[0m Exiting NewDataCollection &{0xc4202ffb18 0xc42013b600 $sysdata}
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1634[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1635[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1636[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1637[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.318 UTC [Composer] Debug -> DEBU 1638[0m Entering DataCollection.get &{0xc4202a2220}
[36m2017-07-19 23:33:49.319 UTC [Composer] Debug -> DEBU 1639[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.319 UTC [Composer] Debug -> DEBU 163a[0m Common Name admin
[36m2017-07-19 23:33:49.319 UTC [Composer] Debug -> DEBU 163b[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.319 UTC [Composer] Debug -> DEBU 163c[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.319 UTC [Composer] Debug -> DEBU 163d[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 163e[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 163f[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 1640[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 1641[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 1642[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 1643[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 1644[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 1645[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 1646[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.320 UTC [Composer] Debug -> DEBU 1647[0m Entering Context.getEventService &{0xc420145580}
[36m2017-07-19 23:33:49.321 UTC [Composer] Debug -> DEBU 1648[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.321 UTC [Composer] Debug -> DEBU 1649[0m Entering Context.getIdentityService &{0xc420145580}
[36m2017-07-19 23:33:49.321 UTC [Composer] Debug -> DEBU 164a[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.321 UTC [Composer] Debug -> DEBU 164b[0m Entering Context.getHTTPService &{0xc420145580}
[36m2017-07-19 23:33:49.321 UTC [Composer] Debug -> DEBU 164c[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.321 UTC [Composer] Debug -> DEBU 164d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.321 UTC [Composer] Debug -> DEBU 164e[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.322 UTC [Composer] Debug -> DEBU 164f[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.322 UTC [Composer] Debug -> DEBU 1650[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.322 UTC [Composer] Debug -> DEBU 1651[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:49.322 UTC [Composer] Debug -> DEBU 1652[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:49.322 UTC [Composer] Debug -> DEBU 1653[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:49.322 UTC [Composer] Debug -> DEBU 1654[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 1655[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 1656[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 1657[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 1658[0m Entering EventService.transactionCommit &{0xc420144940}
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 165a[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 1659[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 165c[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 165b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.323 UTC [Composer] Debug -> DEBU 165d[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 165e[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 165f[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 1660[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 1661[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 1662[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 1663[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 1664[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 1665[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 1666[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.324 UTC [Composer] Debug -> DEBU 1667[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 1668[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 1669[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 166a[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 166b[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 166c[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 166d[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 166e[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 166f[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 1670[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.325 UTC [Composer] Debug -> DEBU 1671[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:49.326 UTC [Composer] Debug -> DEBU 1672[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 1674[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 1675[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 1676[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 1677[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 1678[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 1679[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 167a[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 167b[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 1673[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.327 UTC [Composer] Debug -> DEBU 167c[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.328 UTC [Composer] Debug -> DEBU 167d[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.328 UTC [Composer] Debug -> DEBU 167e[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.328 UTC [Composer] Debug -> DEBU 167f[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.328 UTC [Composer] Debug -> DEBU 1680[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.329 UTC [Composer] Debug -> DEBU 1681[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.329 UTC [Composer] Debug -> DEBU 1682[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.331 UTC [Composer] Debug -> DEBU 1683[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.331 UTC [Composer] Debug -> DEBU 1684[0m Entering DataCollection.get &{0xc4202a2680}
[36m2017-07-19 23:33:49.331 UTC [Composer] Debug -> DEBU 1685[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc420149600} 0xc4214cf580
[36m2017-07-19 23:33:49.331 UTC [Composer] Debug -> DEBU 1686[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.331 UTC [Composer] Debug -> DEBU 1687[0m Exiting NewDataCollection &{0xc420151950 0xc420149600 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 1688[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42008d200} 0xc4214fcab0
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 1689[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 168a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 168b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 168c[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 168d[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 168e[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 168f[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 1690[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 1692[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 1693[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 1694[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 1695[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:49.333 UTC [Composer] Debug -> DEBU 1696[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.332 UTC [Composer] Debug -> DEBU 1691[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.333 UTC [Composer] Debug -> DEBU 1697[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.333 UTC [Composer] Debug -> DEBU 1698[0m Exiting NewDataCollection &{0xc4202ffbd8 0xc42008d200 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.333 UTC [Composer] Debug -> DEBU 1699[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.333 UTC [Composer] Debug -> DEBU 169a[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.333 UTC [Composer] Debug -> DEBU 169b[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.334 UTC [Composer] Debug -> DEBU 169c[0m Entering EventService.transactionCommit &{0xc420141340}
[36m2017-07-19 23:33:49.334 UTC [Composer] Debug -> DEBU 169d[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.334 UTC [Composer] Debug -> DEBU 169e[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.334 UTC [Composer] Debug -> DEBU 169f[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.334 UTC [Composer] Debug -> DEBU 16a0[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.334 UTC [Composer] Debug -> DEBU 16a1[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.334 UTC [Composer] Debug -> DEBU 16a2[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.334 UTC [Composer] Debug -> DEBU 16a3[0m Entering DataService.getCollection &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.336 UTC [Composer] Debug -> DEBU 16a4[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421275200} 0xc4215265b0
[36m2017-07-19 23:33:49.337 UTC [Composer] Debug -> DEBU 16a5[0m Exiting NewDataCollection &{0xc4202ffbf8 0xc421275200 $sysdata}
[36m2017-07-19 23:33:49.337 UTC [Composer] Debug -> DEBU 16a6[0m Entering NewDataCollection &{0xc4201cf6a0} &{0xc420028030 0xc420149000} 0xc4215267e0
[36m2017-07-19 23:33:49.337 UTC [Composer] Debug -> DEBU 16a7[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.337 UTC [Composer] Debug -> DEBU 16a8[0m Exiting NewDataCollection &{0xc4201519c8 0xc420149000 $sysregistries}
[36m2017-07-19 23:33:49.337 UTC [Composer] Debug -> DEBU 16a9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16aa[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16ac[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16ad[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16ae[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16af[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b0[0m Entering DataService.getCollection &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b2[0m Entering Context.getEventService &{0xc4201450e0}
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b3[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b4[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b5[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b6[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b7[0m Entering Context.getHTTPService &{0xc4201450e0}
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b8[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16b9[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16ba[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16bb[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:49.338 UTC [Composer] Debug -> DEBU 16ab[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.339 UTC [Composer] Debug -> DEBU 16bc[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.339 UTC [Composer] Debug -> DEBU 16bd[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.339 UTC [Composer] Debug -> DEBU 16be[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.340 UTC [Composer] Debug -> DEBU 16bf[0m Entering NewDataCollection &{0xc4201cf6a0} &{0xc420028030 0xc420149000} 0xc4214fdb50
[36m2017-07-19 23:33:49.340 UTC [Composer] Debug -> DEBU 16c0[0m Exiting NewDataCollection &{0xc4201519f0 0xc420149000 $sysidentities}
[36m2017-07-19 23:33:49.340 UTC [Composer] Debug -> DEBU 16c1[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16c2[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16c3[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16c4[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42049d700} 0xc421510bf0
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16c6[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16c7[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16c8[0m Entering Context.getIdentityService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16c9[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16ca[0m Entering IdentityService.getCurrentUserID &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16cc[0m Exiting NewDataCollection &{0xc420029f08 0xc42049d700 $sysdata}
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16cb[0m Entering extractNameFromCreator 0xc4215481f0
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16cd[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16ce[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16c5[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16d0[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d1[0m Common Name admin
[36m2017-07-19 23:33:49.341 UTC [Composer] Debug -> DEBU 16cf[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d2[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d3[0m Entering Context.getEventService &{0xc4201cf140}
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d5[0m @JS : Engine                   :invoke()                  Calling engine function getAllRegistries
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d4[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d6[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d7[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d8[0m Entering Context.getHTTPService &{0xc4201cf140}
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16d9[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16da[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16db[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16dc[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.342 UTC [Composer] Debug -> DEBU 16dd[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16de[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16df[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e0[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e1[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e2[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e3[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e4[0m Entering Context.getEventService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e5[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e6[0m Entering Context.getIdentityService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e7[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e8[0m Entering Context.getHTTPService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16e9[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.343 UTC [Composer] Debug -> DEBU 16ea[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16eb[0m @JS : EngineRegistries         :getAllRegistries()        > [object Object], Transaction
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16ec[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16ed[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16ee[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16ef[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16f0[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16f1[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16f2[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.344 UTC [Composer] Debug -> DEBU 16f3[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.345 UTC [Composer] Debug -> DEBU 16f4[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:49.345 UTC [Composer] Debug -> DEBU 16f5[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.345 UTC [Composer] Debug -> DEBU 16f6[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.345 UTC [Composer] Debug -> DEBU 16f7[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.345 UTC [Composer] Debug -> DEBU 16f8[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.345 UTC [Composer] Debug -> DEBU 16f9[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.345 UTC [Composer] Debug -> DEBU 16fa[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 16fb[0m Entering DataCollection.getAll &{0xc420145580}
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 16fc[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 16fd[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 16fe[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 16ff[0m Entering Context.getEventService &{0xc4201450e0}
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 1700[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 1701[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 1702[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 1703[0m Entering Context.getHTTPService &{0xc4201450e0}
[36m2017-07-19 23:33:49.346 UTC [Composer] Debug -> DEBU 1704[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.348 UTC [Composer] Debug -> DEBU 1705[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.353 UTC [Composer] Debug -> DEBU 1706[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.353 UTC [Composer] Debug -> DEBU 1707[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.353 UTC [Composer] Debug -> DEBU 1708[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:49.354 UTC [Composer] Debug -> DEBU 1709[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.354 UTC [Composer] Debug -> DEBU 170a[0m Exiting DataCollection.getAll 0
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 170b[0m Entering Engine.handleCallback 0xc4211e84e0 &{0xc420144940}
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 170c[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 170e[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 170f[0m Entering ComposerPool.Put &{0xc420142268 0xc4203e40f0 0xc420142458}
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 1711[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 1712[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 1714[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 1713[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 1715[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:49.356 UTC [Composer] Debug -> DEBU 1716[0m Entering EventService.transactionCommit &{0xc4201450e0}
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 170d[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.356 UTC [Composer] Debug -> DEBU 1717[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.357 UTC [Composer] Debug -> DEBU 171b[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.357 UTC [Composer] Debug -> DEBU 171c[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.357 UTC [Composer] Debug -> DEBU 171d[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.356 UTC [Composer] Debug -> DEBU 1718[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 171e[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 171f[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1720[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.357 UTC [Composer] Debug -> DEBU 1719[0m Entering DataService.getCollection &{0xc420145580}
[36m2017-07-19 23:33:49.355 UTC [Composer] Debug -> DEBU 1710[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1721[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.357 UTC [Composer] Debug -> DEBU 171a[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1722[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1723[0m Entering Context.getEventService &{0xc4201cf140}
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1724[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1725[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1726[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1727[0m Entering Context.getHTTPService &{0xc4201cf140}
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1728[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.358 UTC [Composer] Debug -> DEBU 1729[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.359 UTC [Composer] Debug -> DEBU 172a[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.360 UTC [Composer] Debug -> DEBU 172b[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421275200} 0xc421549d40
[36m2017-07-19 23:33:49.360 UTC [Composer] Debug -> DEBU 172c[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.369 UTC [Composer] Debug -> DEBU 172d[0m Exiting NewDataCollection &{0xc420143c90 0xc421275200 $sysregistries}
[36m2017-07-19 23:33:49.370 UTC [Composer] Debug -> DEBU 172f[0m Entering NewDataCollection &{0xc420145580} &{0xc420142278 0xc420149c80} 0xc421549e80
[36m2017-07-19 23:33:49.370 UTC [Composer] Debug -> DEBU 1730[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.369 UTC [Composer] Debug -> DEBU 172e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.370 UTC [Composer] Debug -> DEBU 1731[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.370 UTC [Composer] Debug -> DEBU 1732[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.370 UTC [Composer] Debug -> DEBU 1733[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.371 UTC [Composer] Debug -> DEBU 1734[0m Exiting NewDataCollection &{0xc4202ffc90 0xc420149c80 Transaction:default}
[36m2017-07-19 23:33:49.372 UTC [Composer] Debug -> DEBU 1735[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.372 UTC [Composer] Debug -> DEBU 1736[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.373 UTC [Composer] Debug -> DEBU 1737[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.373 UTC [Composer] Debug -> DEBU 1738[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.373 UTC [Composer] Debug -> DEBU 1739[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.375 UTC [Composer] Debug -> DEBU 173a[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.376 UTC [Composer] Debug -> DEBU 173b[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.376 UTC [Composer] Debug -> DEBU 173c[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.376 UTC [Composer] Debug -> DEBU 173d[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.376 UTC [Composer] Debug -> DEBU 173e[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.376 UTC [Composer] Debug -> DEBU 173f[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.377 UTC [Composer] Debug -> DEBU 1740[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.377 UTC [Composer] Debug -> DEBU 1741[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.377 UTC [Composer] Debug -> DEBU 1742[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.377 UTC [Composer] Debug -> DEBU 1743[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.377 UTC [Composer] Debug -> DEBU 1744[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 1745[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc42008d900} 0xc4215b4240
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 1746[0m Exiting NewDataCollection &{0xc420143d78 0xc42008d900 $sysregistries}
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 1748[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 1747[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 174a[0m Entering Engine.handleCallback 0xc4210eed20 &{0xc420141340}
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 174b[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 1749[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 174c[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 174e[0m Entering ComposerPool.Put &{0xc420150150 0xc42040f710 0xc4201425c8}
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 1750[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 1751[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 174d[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.379 UTC [Composer] Debug -> DEBU 174f[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 1752[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 1753[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 1754[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 1755[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 1757[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 1756[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 1758[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 1759[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 175a[0m Entering Context.getEventService &{0xc4201450e0}
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 175b[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 175c[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 175d[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 175e[0m Entering Context.getHTTPService &{0xc4201450e0}
[36m2017-07-19 23:33:49.380 UTC [Composer] Debug -> DEBU 175f[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.384 UTC [Composer] Debug -> DEBU 1760[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421275200} 0xc4215b4c30
[36m2017-07-19 23:33:49.384 UTC [Composer] Debug -> DEBU 1761[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.384 UTC [Composer] Debug -> DEBU 1763[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.384 UTC [Composer] Debug -> DEBU 1764[0m Exiting NewDataCollection &{0xc4202ffd10 0xc421275200 $sysidentities}
[36m2017-07-19 23:33:49.384 UTC [Composer] Debug -> DEBU 1765[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 1766[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.384 UTC [Composer] Debug -> DEBU 1762[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc42008d900} 0xc4215bc820
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 1767[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 1768[0m Exiting NewDataCollection &{0xc421580040 0xc42008d900 $sysidentities}
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 1769[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 176b[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 176c[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 176d[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 176e[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 176f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 1770[0m Entering DataService.getCollection &{0xc42027a640}
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 176a[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.385 UTC [Composer] Debug -> DEBU 1771[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1772[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1774[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1775[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1776[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1777[0m Entering IdentityService.getCurrentUserID &{0xc420140e60}
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1778[0m Entering extractNameFromCreator 0xc4215b55e0
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1779[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 177a[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 177b[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 177c[0m Entering IdentityService.getCurrentUserID &{0xc42027a680}
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 177d[0m Entering extractNameFromCreator 0xc4215c8a90
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 177e[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 177f[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1780[0m Common Name admin
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1781[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.386 UTC [Composer] Debug -> DEBU 1773[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.387 UTC [Composer] Debug -> DEBU 1782[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.387 UTC [Composer] Debug -> DEBU 1783[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.387 UTC [Composer] Debug -> DEBU 1784[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.387 UTC [Composer] Debug -> DEBU 1785[0m Entering DataCollection.get &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.388 UTC [Composer] Debug -> DEBU 1786[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.388 UTC [Composer] Debug -> DEBU 1787[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.388 UTC [Composer] Debug -> DEBU 1788[0m Entering NewDataCollection &{0xc42027a640} &{0xc4202fe000 0xc42008d500} 0xc4215aa5e0
[36m2017-07-19 23:33:49.388 UTC [Composer] Debug -> DEBU 1789[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.388 UTC [Composer] Debug -> DEBU 178a[0m @JS : ScriptCompiler           :compile()                 < [object Object]
[36m2017-07-19 23:33:49.388 UTC [Composer] Debug -> DEBU 178b[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 178c[0m @JS : Context                  :cacheCompiledScriptBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 178d[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 178e[0m @JS : Context                  :cacheCompiledScriptBundle() < 
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 1790[0m Exiting NewDataCollection &{0xc421580078 0xc42008d500 $sysdata}
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 1792[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 1791[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 1793[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 178f[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 1794[0m Entering EventService.transactionCommit &{0xc4201cf140}
[36m2017-07-19 23:33:49.389 UTC [Composer] Debug -> DEBU 1795[0m Common Name admin
[36m2017-07-19 23:33:49.390 UTC [Composer] Debug -> DEBU 1796[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.390 UTC [Composer] Debug -> DEBU 1797[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.390 UTC [Composer] Debug -> DEBU 1798[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.390 UTC [Composer] Debug -> DEBU 1799[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.390 UTC [Composer] Debug -> DEBU 179a[0m @JS : Context                  :loadCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.390 UTC [Composer] Debug -> DEBU 179b[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.390 UTC [Composer] Debug -> DEBU 179c[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 179d[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 179e[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 179f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 17a0[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 17a1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 17a2[0m Entering DataService.getCollection &{0xc4202a2640}
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 17a3[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 17a4[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 17a6[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 17a7[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:49.391 UTC [Composer] Debug -> DEBU 17a5[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.392 UTC [Composer] Debug -> DEBU 17a8[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.392 UTC [Composer] Debug -> DEBU 17a9[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.392 UTC [Composer] Debug -> DEBU 17aa[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.392 UTC [Composer] Debug -> DEBU 17ab[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.392 UTC [Composer] Debug -> DEBU 17ac[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.392 UTC [Composer] Debug -> DEBU 17ad[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17ae[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17af[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b0[0m Entering Context.getEventService &{0xc42027a680}
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b1[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b2[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b3[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b4[0m Entering Context.getHTTPService &{0xc42027a680}
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b5[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b6[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17ba[0m Entering NewDataCollection &{0xc4202a2640} &{0xc420150168 0xc42008de00} 0xc4215ee220
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17bb[0m Exiting NewDataCollection &{0xc4202ffe08 0xc42008de00 $sysdata}
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17bc[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17bd[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17be[0m Entering DataCollection.get &{0xc4202a2640}
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b9[0m Entering Context.getEventService &{0xc4201cf140}
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17bf[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17c0[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17c1[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17c2[0m Entering Context.getHTTPService &{0xc4201cf140}
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17c3[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.394 UTC [Composer] Debug -> DEBU 17c4[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.393 UTC [Composer] Debug -> DEBU 17b7[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.395 UTC [Composer] Debug -> DEBU 17c5[0m Entering Engine.handleCallback 0xc4211e8ba0 &{0xc4201450e0}
[36m2017-07-19 23:33:49.395 UTC [Composer] Debug -> DEBU 17c6[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.395 UTC [Composer] Debug -> DEBU 17c7[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.395 UTC [Composer] Debug -> DEBU 17c8[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.395 UTC [Composer] Debug -> DEBU 17c9[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.395 UTC [Composer] Debug -> DEBU 17ca[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.396 UTC [Composer] Debug -> DEBU 17cb[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.396 UTC [Composer] Debug -> DEBU 17cc[0m Exiting Composer.Invoke {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"} <nil>
[36m2017-07-19 23:33:49.396 UTC [Composer] Debug -> DEBU 17cd[0m Entering ComposerPool.Put &{0xc420142270 0xc421232530 0xc420143368}
[36m2017-07-19 23:33:49.396 UTC [Composer] Debug -> DEBU 17ce[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.396 UTC [Composer] Debug -> DEBU 17cf[0m Exiting Chaincode.Invoke 200  {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"}
[36m2017-07-19 23:33:49.396 UTC [Composer] Debug -> DEBU 17d0[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.398 UTC [Composer] Debug -> DEBU 17d1[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.398 UTC [Composer] Debug -> DEBU 17d2[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.399 UTC [Composer] Debug -> DEBU 17d3[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.400 UTC [Composer] Debug -> DEBU 17d4[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.400 UTC [Composer] Debug -> DEBU 17d5[0m Entering DataCollection.get &{0xc42027a640}
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17d6[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17d7[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17d8[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17d9[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17da[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17db[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17dc[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17dd[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17de[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17df[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17e0[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:49.402 UTC [Composer] Debug -> DEBU 17e1[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.404 UTC [Composer] Debug -> DEBU 17e2[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.404 UTC [Composer] Debug -> DEBU 17e3[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"QGANPSUJMV_c14","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#QGANPSUJMV_t1"}
[36m2017-07-19 23:33:49.404 UTC [Composer] Debug -> DEBU 17e4[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.404 UTC [Composer] Debug -> DEBU 17e5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.404 UTC [Composer] Debug -> DEBU 17e6[0m Entering DataCollection.get &{0xc420140e60}
[36m2017-07-19 23:33:49.405 UTC [Composer] Debug -> DEBU 17e7[0m @JS : Engine                   :invoke()                  Calling engine function getAllRegistries
[36m2017-07-19 23:33:49.405 UTC [Composer] Debug -> DEBU 17e8[0m @JS : EngineRegistries         :getAllRegistries()        > [object Object], Transaction
[36m2017-07-19 23:33:49.405 UTC [Composer] Debug -> DEBU 17e9[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.405 UTC [Composer] Debug -> DEBU 17ea[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.406 UTC [Composer] Debug -> DEBU 17eb[0m Entering DataCollection.getAll &{0xc42027a680}
[36m2017-07-19 23:33:49.407 UTC [Composer] Debug -> DEBU 17ec[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42049d700} 0xc4215eedf0
[36m2017-07-19 23:33:49.407 UTC [Composer] Debug -> DEBU 17ed[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.407 UTC [Composer] Debug -> DEBU 17ee[0m Exiting NewDataCollection &{0xc420143e30 0xc42049d700 $sysregistries}
[36m2017-07-19 23:33:49.407 UTC [Composer] Debug -> DEBU 17ef[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.407 UTC [Composer] Debug -> DEBU 17f0[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.408 UTC [Composer] Debug -> DEBU 17f2[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.410 UTC [Composer] Debug -> DEBU 17f4[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.410 UTC [Composer] Debug -> DEBU 17f3[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.410 UTC [Composer] Debug -> DEBU 17f6[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.410 UTC [Composer] Debug -> DEBU 17f7[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.410 UTC [Composer] Debug -> DEBU 17f8[0m Entering Engine.handleCallback 0xc4203dfe00 &{0xc4201cf140}
[36m2017-07-19 23:33:49.410 UTC [Composer] Debug -> DEBU 17f9[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.410 UTC [Composer] Debug -> DEBU 17fa[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.411 UTC [Composer] Debug -> DEBU 17fb[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is not in cache, loading 
[36m2017-07-19 23:33:49.411 UTC [Composer] Debug -> DEBU 17fc[0m @JS : QueryCompiler            :compile()                 > [object Object]
[36m2017-07-19 23:33:49.411 UTC [Composer] Debug -> DEBU 17fd[0m @JS : QueryCompiler            :visit()                   > [object Object], [object Object]
[36m2017-07-19 23:33:49.411 UTC [Composer] Debug -> DEBU 17fe[0m @JS : QueryCompiler            :visitQueryManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.412 UTC [Composer] Debug -> DEBU 17ff[0m @JS : QueryCompiler            :visitQueryManager()       < 
[36m2017-07-19 23:33:49.412 UTC [Composer] Debug -> DEBU 1800[0m @JS : QueryCompiler            :visit()                   < 
[36m2017-07-19 23:33:49.412 UTC [Composer] Debug -> DEBU 1801[0m @JS : CompiledQueryBundle      :constructor()             > [object Object], [object Object], 
[36m2017-07-19 23:33:49.408 UTC [Composer] Debug -> DEBU 17f1[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.410 UTC [Composer] Debug -> DEBU 17f5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.413 UTC [Composer] Debug -> DEBU 1802[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.413 UTC [Composer] Debug -> DEBU 1804[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.414 UTC [Composer] Debug -> DEBU 1805[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.414 UTC [Composer] Debug -> DEBU 1806[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.413 UTC [Composer] Debug -> DEBU 1803[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:49.414 UTC [Composer] Debug -> DEBU 1807[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.415 UTC [Composer] Debug -> DEBU 1808[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.415 UTC [Composer] Debug -> DEBU 1809[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.415 UTC [Composer] Debug -> DEBU 180a[0m Exiting Composer.Invoke {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"} <nil>
[36m2017-07-19 23:33:49.415 UTC [Composer] Debug -> DEBU 180c[0m Entering ComposerPool.Put &{0xc420028028 0xc42051bc00 0xc4202fe7b8}
[36m2017-07-19 23:33:49.415 UTC [Composer] Debug -> DEBU 180d[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.415 UTC [Composer] Debug -> DEBU 180e[0m Exiting Chaincode.Invoke 200  {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"}
[36m2017-07-19 23:33:49.415 UTC [Composer] Debug -> DEBU 180f[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.415 UTC [Composer] Debug -> DEBU 180b[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.417 UTC [Composer] Debug -> DEBU 1810[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.417 UTC [Composer] Debug -> DEBU 1811[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.417 UTC [Composer] Debug -> DEBU 1812[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.417 UTC [Composer] Debug -> DEBU 1813[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 1814[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 1815[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 1816[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 1817[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 1818[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 1819[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 181a[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 181b[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 181c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 181d[0m Entering DataService.getCollection &{0xc4202a2640}
[36m2017-07-19 23:33:49.418 UTC [Composer] Debug -> DEBU 181e[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.419 UTC [Composer] Debug -> DEBU 181f[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.419 UTC [Composer] Debug -> DEBU 1820[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.419 UTC [Composer] Debug -> DEBU 1821[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.419 UTC [Composer] Debug -> DEBU 1822[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.419 UTC [Composer] Debug -> DEBU 1823[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.419 UTC [Composer] Debug -> DEBU 1824[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.420 UTC [Composer] Debug -> DEBU 1825[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.420 UTC [Composer] Debug -> DEBU 1826[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.422 UTC [Composer] Debug -> DEBU 1827[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 1828[0m @JS : EngineRegistries         :getAllRegistries()        < [object Object]
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 1829[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 182b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 182a[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 182c[0m Entering Context.getEventService &{0xc420145580}
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 182d[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 182e[0m Entering Context.getIdentityService &{0xc420145580}
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 182f[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 1830[0m Entering Context.getHTTPService &{0xc420145580}
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 1831[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 1832[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.423 UTC [Composer] Debug -> DEBU 1833[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 1834[0m Entering DataService.getCollection &{0xc420140e60}
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 1835[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 1836[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 1837[0m Entering Context.getEventService &{0xc420145580}
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 1838[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 1839[0m Entering Context.getIdentityService &{0xc420145580}
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 183a[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 183b[0m Entering Context.getHTTPService &{0xc420145580}
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 183c[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 183d[0m Entering EventService.transactionCommit &{0xc420145580}
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 183e[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 183f[0m @JS : CompiledQueryBundle      :constructor()             < 
[36m2017-07-19 23:33:49.424 UTC [Composer] Debug -> DEBU 1840[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.425 UTC [Composer] Debug -> DEBU 1841[0m @JS : QueryCompiler            :compile()                 < [object Object]
[36m2017-07-19 23:33:49.429 UTC [Composer] Debug -> DEBU 184b[0m @JS : Context                  :cacheCompiledQueryBundle() > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.425 UTC [Composer] Debug -> DEBU 1843[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42049d700} 0xc4215ee260
[36m2017-07-19 23:33:49.429 UTC [Composer] Debug -> DEBU 184d[0m @JS : Context                  :cacheCompiledQueryBundle() < 
[36m2017-07-19 23:33:49.429 UTC [Composer] Debug -> DEBU 184c[0m Exiting NewDataCollection &{0xc4215801e0 0xc42049d700 $sysidentities}
[36m2017-07-19 23:33:49.429 UTC [Composer] Debug -> DEBU 184e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.429 UTC [Composer] Debug -> DEBU 184f[0m @JS : Context                  :loadCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1850[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1851[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1852[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1853[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1854[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1855[0m Entering IdentityService.getCurrentUserID &{0xc4201ce500}
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1857[0m Entering extractNameFromCreator 0xc42162de40
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1858[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.425 UTC [Composer] Debug -> DEBU 1844[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1859[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 185a[0m Common Name admin
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 185b[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 185c[0m Entering DataService.getCollection &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 185d[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.425 UTC [Composer] Debug -> DEBU 1846[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.431 UTC [Composer] Debug -> DEBU 185e[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.425 UTC [Composer] Debug -> DEBU 1842[0m Entering getLogging 0xc4205d88b0
[36m2017-07-19 23:33:49.427 UTC [Composer] Debug -> DEBU 1848[0m Exiting DataCollection.getAll 0
[36m2017-07-19 23:33:49.427 UTC [Composer] Debug -> DEBU 1849[0m Entering NewDataCollection &{0xc420140e60} &{0xc420150140 0xc421275200} 0xc4215ee460
[36m2017-07-19 23:33:49.431 UTC [Composer] Debug -> DEBU 1860[0m Exiting NewDataCollection &{0xc420150030 0xc421275200 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.431 UTC [Composer] Debug -> DEBU 1861[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.432 UTC [Composer] Debug -> DEBU 1862[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.432 UTC [Composer] Debug -> DEBU 1863[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#QGANPSUJMV_c14, CREATE
[36m2017-07-19 23:33:49.425 UTC [Composer] Debug -> DEBU 1845[0m Entering NewDataCollection &{0xc4202a2640} &{0xc420150168 0xc42008de00} 0xc42162d850
[36m2017-07-19 23:33:49.433 UTC [Composer] Debug -> DEBU 1867[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.433 UTC [Composer] Debug -> DEBU 1868[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.433 UTC [Composer] Debug -> DEBU 186a[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.433 UTC [Composer] Debug -> DEBU 1869[0m Exiting NewDataCollection &{0xc420143f38 0xc42008de00 $sysdata}
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 186b[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 186c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 186d[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 186e[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 186f[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1870[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1871[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1872[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1873[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1874[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1875[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1876[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1877[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.434 UTC [Composer] Debug -> DEBU 1878[0m Entering DataCollection.get &{0xc4202a2640}
[36m2017-07-19 23:33:49.435 UTC [Composer] Debug -> DEBU 1879[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc42008d900} 0xc4215ef470
[36m2017-07-19 23:33:49.435 UTC [Composer] Debug -> DEBU 187a[0m Exiting NewDataCollection &{0xc420028290 0xc42008d900 Transaction:default}
[36m2017-07-19 23:33:49.435 UTC [Composer] Debug -> DEBU 187b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 187c[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 187d[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"XYITKICOYD_c6","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#XYITKICOYD_t0"}
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 187e[0m @JS : EngineRegistries         :getAllRegistries()        < [object Object]
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 187f[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 1880[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 1881[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 1882[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 1883[0m Entering DataCollection.get &{0xc4201ce500}
[36m2017-07-19 23:33:49.436 UTC [Composer] Debug -> DEBU 1884[0m Entering Context.getEventService &{0xc42027a680}
[36m2017-07-19 23:33:49.428 UTC [Composer] Debug -> DEBU 184a[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.437 UTC [Composer] Debug -> DEBU 1885[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.437 UTC [Composer] Debug -> DEBU 1887[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.437 UTC [Composer] Debug -> DEBU 1888[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.437 UTC [Composer] Debug -> DEBU 1889[0m Entering Context.getHTTPService &{0xc42027a680}
[36m2017-07-19 23:33:49.437 UTC [Composer] Debug -> DEBU 188a[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 188b[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 188c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 188d[0m Entering Context.getEventService &{0xc42027a680}
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 188e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 188f[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 1890[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 1891[0m Entering Context.getHTTPService &{0xc42027a680}
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 1892[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.438 UTC [Composer] Debug -> DEBU 1893[0m Entering EventService.transactionCommit &{0xc42027a680}
[36m2017-07-19 23:33:49.431 UTC [Composer] Debug -> DEBU 185f[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 1894[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 1895[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 1896[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 1897[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 1898[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 1899[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 189a[0m Entering Context.getEventService &{0xc42027a680}
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 189b[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 189c[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 189d[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 189e[0m Entering Context.getHTTPService &{0xc42027a680}
[36m2017-07-19 23:33:49.439 UTC [Composer] Debug -> DEBU 189f[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.440 UTC [Composer] Debug -> DEBU 18a0[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.440 UTC [Composer] Debug -> DEBU 18a1[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.433 UTC [Composer] Debug -> DEBU 1864[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.440 UTC [Composer] Debug -> DEBU 18a3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18a4[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18a5[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.433 UTC [Composer] Debug -> DEBU 1865[0m Entering NewDataCollection &{0xc4201cf6a0} &{0xc420028030 0xc420149000} 0xc4215ee770
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18a6[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18a8[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18a7[0m Exiting NewDataCollection &{0xc420028270 0xc420149000 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18a9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.433 UTC [Composer] Debug -> DEBU 1866[0m Entering Chaincode.Invoke 0xc4205d88a0
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18ab[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18ac[0m Exiting ComposerPool.Get &{0xc420028000 0xc4203ac870 0xc420150318}
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18ad[0m Entering Composer.Invoke 0xc4215c89d0 addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"JHDBVLKJTB_t9","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18ae[0m Entering NewContext &{0xc4201ce220} &{0xc420028000} 0xc4215c8ac0
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18af[0m Entering NewDataService &{0xc4201ce220} &{0xc420028000 <nil> <nil> <nil> <nil>} 0xc4215c8b80
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18b0[0m Exiting NewDataService &{0xc420028000 0xc4215fda80}
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18b1[0m Entering NewIdentityService &{0xc4201ce220} &{0xc420028000 0xc42156c1e0 <nil> <nil> <nil>} 0xc4215c8d30
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18b2[0m Exiting NewIdentityService &{0xc420028000 0xc4215fda80}
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18b4[0m Entering NewEventService &{0xc4201ce220} &{0xc420028000 0xc42156c1e0 0xc42156c2c0 <nil> <nil>} 0xc4215c8ea0
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18b5[0m Exiting NewEventServce &{0xc420028000 0xc4215fda80}
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18b6[0m Entering HTTPService &{0xc4201ce220} &{0xc420028000 0xc42156c1e0 0xc42156c2c0 0xc42156c3a0 <nil>} 0xc4215c9010
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18b7[0m Exiting HTTPService &{0xc420028000 0xc4215fda80}
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18b8[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18b9[0m Exiting NewContext &{0xc420028000 0xc42156c1e0 0xc42156c2c0 0xc42156c3a0 0xc42156c480}
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18ba[0m Entering Engine.Invoke &{0xc420028000 0xc42156c1e0 0xc42156c2c0 0xc42156c3a0 0xc42156c480} addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"JHDBVLKJTB_t9","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18bb[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18bc[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18bd[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.430 UTC [Composer] Debug -> DEBU 1856[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18bf[0m Entering DataCollection.add &{0xc420140e60}
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18c0[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18c1[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"JHDBVLKJTB_t9","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18c2[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18c3[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18c4[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.443 UTC [Composer] Debug -> DEBU 18c5[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.443 UTC [Composer] Debug -> DEBU 18c6[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.443 UTC [Composer] Debug -> DEBU 18c7[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.443 UTC [Composer] Debug -> DEBU 18c8[0m Entering DataService.getCollection &{0xc4202a2220}
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18aa[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.443 UTC [Composer] Debug -> DEBU 18c9[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.444 UTC [Composer] Debug -> DEBU 18ca[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.444 UTC [Composer] Debug -> DEBU 18cb[0m Exiting Engine.Invoke 0xc4215fee40
[36m2017-07-19 23:33:49.444 UTC [Composer] Debug -> DEBU 18cc[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.444 UTC [Composer] Debug -> DEBU 18cd[0m Entering getLogging 0xc4215ab680
[36m2017-07-19 23:33:49.444 UTC [Composer] Debug -> DEBU 18ce[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.444 UTC [Composer] Debug -> DEBU 18cf[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.444 UTC [Composer] Debug -> DEBU 18d0[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.445 UTC [Composer] Debug -> DEBU 18d1[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.445 UTC [Composer] Debug -> DEBU 18d2[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.445 UTC [Composer] Debug -> DEBU 18d3[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.445 UTC [Composer] Debug -> DEBU 18d4[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.445 UTC [Composer] Debug -> DEBU 18d5[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.446 UTC [Composer] Debug -> DEBU 18d6[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.446 UTC [Composer] Debug -> DEBU 18d7[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.446 UTC [Composer] Debug -> DEBU 18d8[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.446 UTC [Composer] Debug -> DEBU 18d9[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.446 UTC [Composer] Debug -> DEBU 18da[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.446 UTC [Composer] Debug -> DEBU 18db[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.441 UTC [Composer] Debug -> DEBU 18b3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.446 UTC [Composer] Debug -> DEBU 18dc[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.440 UTC [Composer] Debug -> DEBU 18a2[0m Entering Engine.handleCallback 0xc4210a15c0 &{0xc42027a680}
[36m2017-07-19 23:33:49.447 UTC [Composer] Debug -> DEBU 18dd[0m Entering DataService.getCollection &{0xc4201ce500}
[36m2017-07-19 23:33:49.447 UTC [Composer] Debug -> DEBU 18de[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.442 UTC [Composer] Debug -> DEBU 18be[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18df[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e0[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e1[0m Entering Context.getEventService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e2[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e3[0m Entering Context.getIdentityService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e4[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e5[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e6[0m Entering Context.getHTTPService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e7[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.448 UTC [Composer] Debug -> DEBU 18e8[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.449 UTC [Composer] Debug -> DEBU 18e9[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.449 UTC [Composer] Debug -> DEBU 18ea[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.449 UTC [Composer] Debug -> DEBU 18eb[0m Entering Context.getEventService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.449 UTC [Composer] Debug -> DEBU 18ec[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.449 UTC [Composer] Debug -> DEBU 18ed[0m Entering Context.getIdentityService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.449 UTC [Composer] Debug -> DEBU 18ee[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.450 UTC [Composer] Debug -> DEBU 18ef[0m Entering Context.getHTTPService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.450 UTC [Composer] Debug -> DEBU 18f0[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.450 UTC [Composer] Debug -> DEBU 18f1[0m Entering EventService.transactionCommit &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.450 UTC [Composer] Debug -> DEBU 18f2[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.450 UTC [Composer] Debug -> DEBU 18f3[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.450 UTC [Composer] Debug -> DEBU 18f4[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.450 UTC [Composer] Debug -> DEBU 18f5[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.450 UTC [Composer] Debug -> DEBU 18f6[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18f7[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18f8[0m Entering Context.getDataService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18f9[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18fa[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18fc[0m Entering Context.getEventService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18fb[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18ff[0m Exiting Composer.Invoke [{"type":"Transaction","id":"default","name":"Default Transaction Registry"}] <nil>
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 1900[0m Entering ComposerPool.Put &{0xc4202fe008 0xc4210ea5f0 0xc420142f60}
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 1901[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 1902[0m Exiting Chaincode.Invoke 200  [{"type":"Transaction","id":"default","name":"Default Transaction Registry"}]
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18fd[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 1903[0m Entering Context.getIdentityService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 1904[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 1905[0m Entering Context.getHTTPService &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 1906[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.437 UTC [Composer] Debug -> DEBU 1886[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 1907[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.426 UTC [Composer] Debug -> DEBU 1847[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 1909[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 190a[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 190b[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 190d[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 190c[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 190f[0m Entering Engine.handleCallback 0xc4210a19e0 &{0xc4201cf6a0}
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 1910[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 1911[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.453 UTC [Composer] Debug -> DEBU 1912[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.453 UTC [Composer] Debug -> DEBU 1913[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.453 UTC [Composer] Debug -> DEBU 1914[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 190e[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.453 UTC [Composer] Debug -> DEBU 1915[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.453 UTC [Composer] Debug -> DEBU 1916[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.453 UTC [Composer] Debug -> DEBU 1917[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.453 UTC [Composer] Debug -> DEBU 1918[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.453 UTC [Composer] Debug -> DEBU 1919[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 191a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 191b[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 191c[0m Entering DataService.getCollection &{0xc4202a2680}
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 191d[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 191e[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 191f[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 1920[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 1921[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 1922[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.451 UTC [Composer] Debug -> DEBU 18fe[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 1923[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 1924[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.454 UTC [Composer] Debug -> DEBU 1925[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.452 UTC [Composer] Debug -> DEBU 1908[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.455 UTC [Composer] Debug -> DEBU 1926[0m Entering Context.getDataService &{0xc420145580}
[36m2017-07-19 23:33:49.455 UTC [Composer] Debug -> DEBU 1927[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.455 UTC [Composer] Debug -> DEBU 1928[0m Entering Context.getEventService &{0xc420145580}
[36m2017-07-19 23:33:49.455 UTC [Composer] Debug -> DEBU 1929[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.455 UTC [Composer] Debug -> DEBU 192a[0m Entering Context.getIdentityService &{0xc420145580}
[36m2017-07-19 23:33:49.455 UTC [Composer] Debug -> DEBU 192b[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.455 UTC [Composer] Debug -> DEBU 192c[0m Entering Context.getHTTPService &{0xc420145580}
[36m2017-07-19 23:33:49.455 UTC [Composer] Debug -> DEBU 192d[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.456 UTC [Composer] Debug -> DEBU 192e[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.456 UTC [Composer] Debug -> DEBU 192f[0m Entering Engine.handleCallback 0xc4205c9260 &{0xc420145580}
[36m2017-07-19 23:33:49.456 UTC [Composer] Debug -> DEBU 1930[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.457 UTC [Composer] Debug -> DEBU 1931[0m Exiting Composer.Invoke [{"type":"Transaction","id":"default","name":"Default Transaction Registry"}] <nil>
[36m2017-07-19 23:33:49.457 UTC [Composer] Debug -> DEBU 1932[0m Entering ComposerPool.Put &{0xc420142278 0xc420610f30 0xc420028d50}
[36m2017-07-19 23:33:49.457 UTC [Composer] Debug -> DEBU 1933[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.457 UTC [Composer] Debug -> DEBU 1934[0m Exiting Chaincode.Invoke 200  [{"type":"Transaction","id":"default","name":"Default Transaction Registry"}]
[36m2017-07-19 23:33:49.459 UTC [Composer] Debug -> DEBU 1935[0m Exiting Composer.Invoke {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"} <nil>
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 1939[0m Entering ComposerPool.Put &{0xc420028030 0xc4210ad2e0 0xc4202fede8}
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 193a[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 193b[0m Exiting Chaincode.Invoke 200  {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"}
[36m2017-07-19 23:33:49.459 UTC [Composer] Debug -> DEBU 1936[0m Entering Chaincode.Invoke 0xc4215ab670
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 193d[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 193f[0m Exiting ComposerPool.Get &{0xc420028048 0xc4202c4d20 0xc4200285e0}
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 1940[0m Entering Composer.Invoke 0xc4215b5860 addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"OJCRTKWKJU_c8","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#OJCRTKWKJU_t2"}]
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 1941[0m Entering NewContext &{0xc4201cf6e0} &{0xc420028048} 0xc4215b5960
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 1942[0m Entering NewDataService &{0xc4201cf6e0} &{0xc420028048 <nil> <nil> <nil> <nil>} 0xc4215b5a10
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 1943[0m Exiting NewDataService &{0xc420028048 0xc42055e480}
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 1944[0m Entering NewIdentityService &{0xc4201cf6e0} &{0xc420028048 0xc4212f2ae0 <nil> <nil> <nil>} 0xc4215b5bc0
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 1945[0m Exiting NewIdentityService &{0xc420028048 0xc42055e480}
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 1946[0m Entering NewEventService &{0xc4201cf6e0} &{0xc420028048 0xc4212f2ae0 0xc4212f2bc0 <nil> <nil>} 0xc4215b5d30
[36m2017-07-19 23:33:49.462 UTC [Composer] Debug -> DEBU 1947[0m Exiting NewEventServce &{0xc420028048 0xc42055e480}
[36m2017-07-19 23:33:49.462 UTC [Composer] Debug -> DEBU 1948[0m Entering HTTPService &{0xc4201cf6e0} &{0xc420028048 0xc4212f2ae0 0xc4212f2bc0 0xc4212f2ce0 <nil>} 0xc4215b5eb0
[36m2017-07-19 23:33:49.462 UTC [Composer] Debug -> DEBU 1949[0m Exiting HTTPService &{0xc420028048 0xc42055e480}
[36m2017-07-19 23:33:49.459 UTC [Composer] Debug -> DEBU 1937[0m Entering NewDataCollection &{0xc4202a2220} &{0xc420150158 0xc42013b600} 0xc4215260d0
[36m2017-07-19 23:33:49.462 UTC [Composer] Debug -> DEBU 194b[0m Exiting NewDataCollection &{0xc420028320 0xc42013b600 $sysdata}
[36m2017-07-19 23:33:49.462 UTC [Composer] Debug -> DEBU 194a[0m Exiting NewContext &{0xc420028048 0xc4212f2ae0 0xc4212f2bc0 0xc4212f2ce0 0xc4212f2de0}
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 193c[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.462 UTC [Composer] Debug -> DEBU 194d[0m Entering Engine.Invoke &{0xc420028048 0xc4212f2ae0 0xc4212f2bc0 0xc4212f2ce0 0xc4212f2de0} addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"OJCRTKWKJU_c8","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#OJCRTKWKJU_t2"}]
[36m2017-07-19 23:33:49.461 UTC [Composer] Debug -> DEBU 193e[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc4215fda80} 0xc4215267a0
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 194e[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 194f[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1951[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1952[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1953[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1954[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1955[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1956[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1957[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1950[0m Exiting NewDataCollection &{0xc420150398 0xc4215fda80 $sysdata}
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1958[0m Entering NewDataCollection &{0xc4202a2680} &{0xc420150170 0xc4202a4200} 0xc421526880
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 195a[0m Exiting NewDataCollection &{0xc420150390 0xc4202a4200 $sysregistries}
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 195b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.462 UTC [Composer] Debug -> DEBU 194c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.464 UTC [Composer] Debug -> DEBU 195c[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.464 UTC [Composer] Debug -> DEBU 195d[0m Entering DataCollection.get &{0xc4202a2220}
[36m2017-07-19 23:33:49.464 UTC [Composer] Debug -> DEBU 195e[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.464 UTC [Composer] Debug -> DEBU 195f[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.464 UTC [Composer] Debug -> DEBU 1960[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.464 UTC [Composer] Debug -> DEBU 1961[0m Entering DataService.getCollection &{0xc4202a2680}
[36m2017-07-19 23:33:49.459 UTC [Composer] Debug -> DEBU 1938[0m Entering NewDataCollection &{0xc4201ce500} &{0xc420028020 0xc42049d700} 0xc4215261b0
[36m2017-07-19 23:33:49.464 UTC [Composer] Debug -> DEBU 1962[0m Exiting NewDataCollection &{0xc4202fe168 0xc42049d700 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.464 UTC [Composer] Debug -> DEBU 1963[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 1964[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#XYITKICOYD_c6, CREATE
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 1966[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 1967[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 1968[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 1969[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 196a[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 196b[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 196c[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 196d[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 196e[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 196f[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1970[0m Entering EventService.transactionCommit &{0xc420140e60}
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1971[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1972[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1973[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1974[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1975[0m Entering DataCollection.add &{0xc4201ce500}
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1976[0m Entering Context.getDataService &{0xc420140e60}
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1977[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1978[0m Entering Context.getEventService &{0xc420140e60}
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 1979[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 197a[0m Entering Context.getIdentityService &{0xc420140e60}
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 197b[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 197c[0m Entering Context.getHTTPService &{0xc420140e60}
[36m2017-07-19 23:33:49.466 UTC [Composer] Debug -> DEBU 197d[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.465 UTC [Composer] Debug -> DEBU 1965[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.467 UTC [Composer] Debug -> DEBU 197e[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.467 UTC [Composer] Debug -> DEBU 197f[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1980[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1981[0m Entering Engine.handleCallback 0xc420643a40 &{0xc420140e60}
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1982[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1983[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1984[0m Entering ComposerPool.Put &{0xc420150140 0xc42027d400 0xc4202fe058}
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1985[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1986[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.463 UTC [Composer] Debug -> DEBU 1959[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"OJCRTKWKJU_c8","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#OJCRTKWKJU_t2"}
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1987[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.468 UTC [Composer] Debug -> DEBU 1988[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.469 UTC [Composer] Debug -> DEBU 1989[0m Exiting Engine.Invoke 0xc4211a6000
[36m2017-07-19 23:33:49.471 UTC [Composer] Debug -> DEBU 198a[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.471 UTC [Composer] Debug -> DEBU 198b[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.471 UTC [Composer] Debug -> DEBU 198c[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.471 UTC [Composer] Debug -> DEBU 198d[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 198e[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 198f[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 1990[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 1991[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 1992[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 1993[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 1994[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 1995[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 1996[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.472 UTC [Composer] Debug -> DEBU 1997[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.473 UTC [Composer] Debug -> DEBU 1998[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.473 UTC [Composer] Debug -> DEBU 1999[0m Entering DataService.getCollection &{0xc4202a2640}
[36m2017-07-19 23:33:49.478 UTC [Composer] Debug -> DEBU 199a[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 199b[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 199c[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 199d[0m Entering getLogging 0xc4215bdbd0
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 199e[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 199f[0m Entering NewDataCollection &{0xc4202a2680} &{0xc420150170 0xc4202a4200} 0xc421511990
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 19a0[0m Exiting NewDataCollection &{0xc420150470 0xc4202a4200 $sysidentities}
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 19a1[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 19a2[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 19a3[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 19a4[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.479 UTC [Composer] Debug -> DEBU 19a5[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.480 UTC [Composer] Debug -> DEBU 19a6[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.480 UTC [Composer] Debug -> DEBU 19a7[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.480 UTC [Composer] Debug -> DEBU 19a8[0m Entering DataService.getCollection &{0xc42027a640}
[36m2017-07-19 23:33:49.480 UTC [Composer] Debug -> DEBU 19a9[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.480 UTC [Composer] Debug -> DEBU 19aa[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.482 UTC [Composer] Debug -> DEBU 19ac[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.483 UTC [Composer] Debug -> DEBU 19ad[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.483 UTC [Composer] Debug -> DEBU 19ae[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:49.483 UTC [Composer] Debug -> DEBU 19af[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.483 UTC [Composer] Debug -> DEBU 19b0[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:49.483 UTC [Composer] Debug -> DEBU 19b1[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.483 UTC [Composer] Debug -> DEBU 19b2[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:49.483 UTC [Composer] Debug -> DEBU 19b3[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.484 UTC [Composer] Debug -> DEBU 19b4[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.484 UTC [Composer] Debug -> DEBU 19b5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.484 UTC [Composer] Debug -> DEBU 19b6[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:49.484 UTC [Composer] Debug -> DEBU 19b7[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.484 UTC [Composer] Debug -> DEBU 19b8[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:49.484 UTC [Composer] Debug -> DEBU 19b9[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.484 UTC [Composer] Debug -> DEBU 19ba[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:49.485 UTC [Composer] Debug -> DEBU 19bb[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.485 UTC [Composer] Debug -> DEBU 19bc[0m Entering EventService.transactionCommit &{0xc4201ce500}
[36m2017-07-19 23:33:49.485 UTC [Composer] Debug -> DEBU 19bd[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.485 UTC [Composer] Debug -> DEBU 19be[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.485 UTC [Composer] Debug -> DEBU 19bf[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.485 UTC [Composer] Debug -> DEBU 19c0[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.488 UTC [Composer] Debug -> DEBU 19c1[0m Entering Context.getDataService &{0xc4201ce500}
[36m2017-07-19 23:33:49.488 UTC [Composer] Debug -> DEBU 19c2[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19c3[0m Entering Context.getEventService &{0xc4201ce500}
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19c4[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19c5[0m Entering Context.getIdentityService &{0xc4201ce500}
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19c6[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19c7[0m Entering Context.getHTTPService &{0xc4201ce500}
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19c8[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19c9[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19ca[0m Entering Engine.handleCallback 0xc421212960 &{0xc4201ce500}
[36m2017-07-19 23:33:49.489 UTC [Composer] Debug -> DEBU 19cb[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19cc[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19cd[0m Entering ComposerPool.Put &{0xc420028020 0xc4202d8ad0 0xc420142288}
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19ce[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19cf[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19d0[0m Entering Chaincode.Invoke 0xc4215bdbc0
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19d2[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc42055e480} 0xc4214fc800
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19d3[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19d4[0m Exiting ComposerPool.Get &{0xc420150160 0xc420366870 0xc4200284f8}
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19d1[0m Entering NewDataCollection &{0xc4202a2640} &{0xc420150168 0xc42008de00} 0xc421527db0
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19d6[0m Entering NewDataCollection &{0xc42027a640} &{0xc4202fe000 0xc42008d500} 0xc4214e6d70
[36m2017-07-19 23:33:49.480 UTC [Composer] Debug -> DEBU 19ab[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.491 UTC [Composer] Debug -> DEBU 19d7[0m Entering getLogging 0xc4214fc9a0
[36m2017-07-19 23:33:49.491 UTC [Composer] Debug -> DEBU 19d8[0m Exiting NewDataCollection &{0xc4200284b0 0xc42008de00 $sysregistries}
[36m2017-07-19 23:33:49.491 UTC [Composer] Debug -> DEBU 19d9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.491 UTC [Composer] Debug -> DEBU 19da[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.491 UTC [Composer] Debug -> DEBU 19db[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.491 UTC [Composer] Debug -> DEBU 19dc[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.491 UTC [Composer] Debug -> DEBU 19dd[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.492 UTC [Composer] Debug -> DEBU 19de[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.492 UTC [Composer] Debug -> DEBU 19df[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.492 UTC [Composer] Debug -> DEBU 19e0[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.492 UTC [Composer] Debug -> DEBU 19e1[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.492 UTC [Composer] Debug -> DEBU 19e2[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19e3[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19e4[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19e5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19e6[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:49.490 UTC [Composer] Debug -> DEBU 19d5[0m Entering Composer.Invoke 0xc4214e6c60 submitTransaction [default {"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#SZFYAIRVVP_c8","newOwner":"resource:org.example.mynetwork.Trader#SZFYAIRVVP_t0","transactionId":"24688b7b-1a2d-44aa-8f49-ce455b855919","timestamp":"2017-07-19T23:33:43.422Z"}]
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19e7[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19e8[0m Entering NewContext &{0xc4202a2600} &{0xc420150160} 0xc421511d80
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19e9[0m Entering NewDataService &{0xc4202a2600} &{0xc420150160 <nil> <nil> <nil> <nil>} 0xc421511e40
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19ea[0m Exiting NewDataService &{0xc420150160 0xc4203b0680}
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19eb[0m Entering NewIdentityService &{0xc4202a2600} &{0xc420150160 0xc42123c3c0 <nil> <nil> <nil>} 0xc421494000
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19ec[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19ed[0m Exiting NewIdentityService &{0xc420150160 0xc4203b0680}
[36m2017-07-19 23:33:49.493 UTC [Composer] Debug -> DEBU 19ee[0m Entering NewEventService &{0xc4202a2600} &{0xc420150160 0xc42123c3c0 0xc42123c4c0 <nil> <nil>} 0xc4214941d0
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19ef[0m Exiting NewEventServce &{0xc420150160 0xc4203b0680}
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f0[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f1[0m Entering HTTPService &{0xc4202a2600} &{0xc420150160 0xc42123c3c0 0xc42123c4c0 0xc42123c5c0 <nil>} 0xc421494340
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f2[0m Exiting HTTPService &{0xc420150160 0xc4203b0680}
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f4[0m Exiting NewContext &{0xc420150160 0xc42123c3c0 0xc42123c4c0 0xc42123c5c0 0xc42123c6a0}
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f5[0m Entering Engine.Invoke &{0xc420150160 0xc42123c3c0 0xc42123c4c0 0xc42123c5c0 0xc42123c6a0} submitTransaction [default {"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#SZFYAIRVVP_c8","newOwner":"resource:org.example.mynetwork.Trader#SZFYAIRVVP_t0","transactionId":"24688b7b-1a2d-44aa-8f49-ce455b855919","timestamp":"2017-07-19T23:33:43.422Z"}]
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f3[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f6[0m @JS : Engine                   :invoke()                  > [object Object], submitTransaction, default,{"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#SZFYAIRVVP_c8","newOwner":"resource:org.example.mynetwork.Trader#SZFYAIRVVP_t0","transactionId":"24688b7b-1a2d-44aa-8f49-ce455b855919","timestamp":"2017-07-19T23:33:43.422Z"}
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f7[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is not in cache, loading 
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f8[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.494 UTC [Composer] Debug -> DEBU 19f9[0m @JS : AclCompiler              :compile()                 > [object Object], [object Object]
[36m2017-07-19 23:33:49.495 UTC [Composer] Debug -> DEBU 19fa[0m @JS : AclCompiler              :compile()                 Adding global assert
[36m2017-07-19 23:33:49.495 UTC [Composer] Debug -> DEBU 19fb[0m @JS : AclCompiler              :compile()                 Adding API method getFactory
[36m2017-07-19 23:33:49.495 UTC [Composer] Debug -> DEBU 19fc[0m @JS : AclCompiler              :compile()                 Adding API method getSerializer
[36m2017-07-19 23:33:49.495 UTC [Composer] Debug -> DEBU 19fd[0m @JS : AclCompiler              :compile()                 Adding API method getAssetRegistry
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 19fe[0m @JS : AclCompiler              :compile()                 Adding API method getParticipantRegistry
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 19ff[0m @JS : AclCompiler              :compile()                 Adding API method getCurrentParticipant
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 1a00[0m @JS : AclCompiler              :compile()                 Adding API method post
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 1a01[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 1a02[0m @JS : AclCompiler              :compile()                 Adding API method emit
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 1a03[0m @JS : AclCompiler              :compile()                 Adding API method buildQuery
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 1a04[0m @JS : AclCompiler              :compile()                 Adding API method query
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 1a05[0m @JS : AclCompiler              :processScriptManager()    > [object Object], [object Object]
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 1a06[0m Exiting Engine.Invoke 0xc4211a7560
[36m2017-07-19 23:33:49.496 UTC [Composer] Debug -> DEBU 1a07[0m @JS : AclCompiler              :processScriptManager()    Processing script lib/logic.js
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a08[0m @JS : AclCompiler              :processScript()           > [object Object], [object Object]
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a09[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a0b[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a0c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a0e[0m Exiting NewDataCollection &{0xc420142470 0xc42055e480 $sysdata}
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a0f[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a10[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a11[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a0d[0m Entering Chaincode.Invoke 0xc4214fc990
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a12[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a13[0m Exiting ComposerPool.Get &{0xc420142280 0xc420569f80 0xc420028bb8}
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a14[0m Entering Composer.Invoke 0xc421494b60 submitTransaction [default {"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#VKWCBHWYIZ_c8","newOwner":"resource:org.example.mynetwork.Trader#VKWCBHWYIZ_t1","transactionId":"a17330ce-96d0-41e9-aff6-01b2aec6fe45","timestamp":"2017-07-19T23:33:43.531Z"}]
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a15[0m Entering NewContext &{0xc4201455c0} &{0xc420142280} 0xc421494c40
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a16[0m Entering NewDataService &{0xc4201455c0} &{0xc420142280 <nil> <nil> <nil> <nil>} 0xc421494d00
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a17[0m Exiting NewDataService &{0xc420142280 0xc4211a8500}
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a18[0m Entering NewIdentityService &{0xc4201455c0} &{0xc420142280 0xc42123cbc0 <nil> <nil> <nil>} 0xc421494eb0
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a19[0m Exiting NewIdentityService &{0xc420142280 0xc4211a8500}
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a1b[0m Entering NewEventService &{0xc4201455c0} &{0xc420142280 0xc42123cbc0 0xc42123cca0 <nil> <nil>} 0xc421495020
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a1c[0m Exiting NewEventServce &{0xc420142280 0xc4211a8500}
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a1d[0m Entering HTTPService &{0xc4201455c0} &{0xc420142280 0xc42123cbc0 0xc42123cca0 0xc42123cd80 <nil>} 0xc4214951a0
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a1e[0m Entering DataService.getCollection &{0xc4202a2640}
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a1f[0m Exiting HTTPService &{0xc420142280 0xc4211a8500}
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a20[0m Exiting NewContext &{0xc420142280 0xc42123cbc0 0xc42123cca0 0xc42123cd80 0xc42123ce60}
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a21[0m Entering Engine.Invoke &{0xc420142280 0xc42123cbc0 0xc42123cca0 0xc42123cd80 0xc42123ce60} submitTransaction [default {"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#VKWCBHWYIZ_c8","newOwner":"resource:org.example.mynetwork.Trader#VKWCBHWYIZ_t1","transactionId":"a17330ce-96d0-41e9-aff6-01b2aec6fe45","timestamp":"2017-07-19T23:33:43.531Z"}]
[36m2017-07-19 23:33:49.497 UTC [Composer] Debug -> DEBU 1a0a[0m @JS : AclCompiler              :convertScriptToScriptNode() > [object Object], [object Object]
[36m2017-07-19 23:33:49.499 UTC [Composer] Debug -> DEBU 1a22[0m @JS : Engine                   :invoke()                  > [object Object], submitTransaction, default,{"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#VKWCBHWYIZ_c8","newOwner":"resource:org.example.mynetwork.Trader#VKWCBHWYIZ_t1","transactionId":"a17330ce-96d0-41e9-aff6-01b2aec6fe45","timestamp":"2017-07-19T23:33:43.531Z"}
[36m2017-07-19 23:33:49.499 UTC [Composer] Debug -> DEBU 1a23[0m @JS : AclCompiler              :convertScriptToSourceMap() > [object Object], [object Object]
[36m2017-07-19 23:33:49.499 UTC [Composer] Debug -> DEBU 1a24[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.499 UTC [Composer] Debug -> DEBU 1a25[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.499 UTC [Composer] Debug -> DEBU 1a26[0m Exiting Engine.Invoke 0xc4211a7800
[36m2017-07-19 23:33:49.499 UTC [Composer] Debug -> DEBU 1a27[0m Exiting NewDataCollection &{0xc4202fe388 0xc42008d500 $sysregistries}
[36m2017-07-19 23:33:49.500 UTC [Composer] Debug -> DEBU 1a2a[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.500 UTC [Composer] Debug -> DEBU 1a2b[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.500 UTC [Composer] Debug -> DEBU 1a2c[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.500 UTC [Composer] Debug -> DEBU 1a2d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.500 UTC [Composer] Debug -> DEBU 1a2e[0m Entering DataService.getCollection &{0xc42027a640}
[36m2017-07-19 23:33:49.498 UTC [Composer] Debug -> DEBU 1a1a[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc4215fda80} 0xc4214ce4b0
[36m2017-07-19 23:33:49.499 UTC [Composer] Debug -> DEBU 1a28[0m Entering Context.getIdentityService &{0xc4202a2680}
[36m2017-07-19 23:33:49.501 UTC [Composer] Debug -> DEBU 1a2f[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.500 UTC [Composer] Debug -> DEBU 1a29[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.502 UTC [Composer] Debug -> DEBU 1a30[0m Entering getLogging 0xc42147aab0
[36m2017-07-19 23:33:49.503 UTC [Composer] Debug -> DEBU 1a31[0m Exiting NewDataCollection &{0xc4202fe410 0xc4215fda80 $sysdata}
[36m2017-07-19 23:33:49.503 UTC [Composer] Debug -> DEBU 1a32[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.503 UTC [Composer] Debug -> DEBU 1a33[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.504 UTC [Composer] Debug -> DEBU 1a34[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.504 UTC [Composer] Debug -> DEBU 1a35[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.504 UTC [Composer] Debug -> DEBU 1a36[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:49.504 UTC [Composer] Debug -> DEBU 1a37[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.504 UTC [Composer] Debug -> DEBU 1a38[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.504 UTC [Composer] Debug -> DEBU 1a39[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.504 UTC [Composer] Debug -> DEBU 1a3a[0m Entering NewDataCollection &{0xc4202a2640} &{0xc420150168 0xc42008de00} 0xc4214e72c0
[36m2017-07-19 23:33:49.505 UTC [Composer] Debug -> DEBU 1a3b[0m @JS : AclCompiler              :convertScriptToSourceMap() < {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.507 UTC [Composer] Debug -> DEBU 1a3c[0m @JS : AclCompiler              :transformScript()         > lib/logic.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
, {"version":3,"sources":["lib/logic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ;IACtC,OAAO,gBAAgB,CAAC,iCAAiC;QACrD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC;AACV;AACA","file":"lib/logic.js","sourceRoot":"/","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Track the trade of a commodity from one trader to another\n * @param {org.example.mynetwork.Trade} trade - the trade to be processed\n * @transaction\n */\nfunction tradeCommodity(trade) {\n    trade.commodity.owner = trade.newOwner;\n    return getAssetRegistry('org.example.mynetwork.Commodity')\n        .then(function (assetRegistry) {\n            return assetRegistry.update(trade.commodity);\n        });\n}\n"]}
[36m2017-07-19 23:33:49.507 UTC [Composer] Debug -> DEBU 1a3d[0m Entering Chaincode.Invoke 0xc42147aaa0
[36m2017-07-19 23:33:49.507 UTC [Composer] Debug -> DEBU 1a3e[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.507 UTC [Composer] Debug -> DEBU 1a3f[0m Exiting ComposerPool.Get &{0xc420142268 0xc4203e40f0 0xc420142458}
[36m2017-07-19 23:33:49.507 UTC [Composer] Debug -> DEBU 1a40[0m Entering Composer.Invoke 0xc421474050 addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"YJMBGEOGSR_c8","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#YJMBGEOGSR_t2"}]
[36m2017-07-19 23:33:49.507 UTC [Composer] Debug -> DEBU 1a41[0m Entering NewContext &{0xc420144940} &{0xc420142268} 0xc421474150
[36m2017-07-19 23:33:49.507 UTC [Composer] Debug -> DEBU 1a42[0m Entering NewDataService &{0xc420144940} &{0xc420142268 <nil> <nil> <nil> <nil>} 0xc421474200
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a43[0m Exiting NewDataCollection &{0xc420142578 0xc42008de00 $sysidentities}
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a44[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a45[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a46[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a47[0m Entering Context.getIdentityService &{0xc4202a2640}
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a48[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a49[0m Entering IdentityService.getCurrentUserID &{0xc4202a2640}
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a4a[0m Entering extractNameFromCreator 0xc421474850
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a4b[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a4c[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a4d[0m Common Name admin
[36m2017-07-19 23:33:49.508 UTC [Composer] Debug -> DEBU 1a4e[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.509 UTC [Composer] Debug -> DEBU 1a4f[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.509 UTC [Composer] Debug -> DEBU 1a50[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.509 UTC [Composer] Debug -> DEBU 1a51[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.509 UTC [Composer] Debug -> DEBU 1a52[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a53[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a54[0m @JS : AclCompiler              :transformScript()         < [object Object]
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a55[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a56[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a57[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a58[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a59[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a5a[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a5b[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a5c[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a5d[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a5e[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.510 UTC [Composer] Debug -> DEBU 1a5f[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.511 UTC [Composer] Debug -> DEBU 1a60[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.511 UTC [Composer] Debug -> DEBU 1a61[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.511 UTC [Composer] Debug -> DEBU 1a62[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.511 UTC [Composer] Debug -> DEBU 1a63[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.511 UTC [Composer] Debug -> DEBU 1a64[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.511 UTC [Composer] Debug -> DEBU 1a65[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.511 UTC [Composer] Debug -> DEBU 1a66[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.511 UTC [Composer] Debug -> DEBU 1a67[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.512 UTC [Composer] Debug -> DEBU 1a68[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.512 UTC [Composer] Debug -> DEBU 1a69[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.512 UTC [Composer] Debug -> DEBU 1a6a[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.512 UTC [Composer] Debug -> DEBU 1a6b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.512 UTC [Composer] Debug -> DEBU 1a6c[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:49.512 UTC [Composer] Debug -> DEBU 1a6d[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.512 UTC [Composer] Debug -> DEBU 1a6e[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.512 UTC [Composer] Debug -> DEBU 1a6f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a70[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a71[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a72[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a73[0m Exiting NewDataService &{0xc420142268 0xc42066d500}
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a74[0m Entering NewIdentityService &{0xc420144940} &{0xc420142268 0xc42123d820 <nil> <nil> <nil>} 0xc4214324a0
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a75[0m Exiting NewIdentityService &{0xc420142268 0xc42066d500}
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a76[0m Entering NewEventService &{0xc420144940} &{0xc420142268 0xc42123d820 0xc421187600 <nil> <nil>} 0xc421432610
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a77[0m Exiting NewEventServce &{0xc420142268 0xc42066d500}
[36m2017-07-19 23:33:49.513 UTC [Composer] Debug -> DEBU 1a78[0m Entering HTTPService &{0xc420144940} &{0xc420142268 0xc42123d820 0xc421187600 0xc4211876e0 <nil>} 0xc421432780
[36m2017-07-19 23:33:49.514 UTC [Composer] Debug -> DEBU 1a79[0m Exiting HTTPService &{0xc420142268 0xc42066d500}
[36m2017-07-19 23:33:49.514 UTC [Composer] Debug -> DEBU 1a7a[0m Exiting NewContext &{0xc420142268 0xc42123d820 0xc421187600 0xc4211876e0 0xc4211877c0}
[36m2017-07-19 23:33:49.514 UTC [Composer] Debug -> DEBU 1a7c[0m Entering IdentityService.getCurrentUserID &{0xc4202a2680}
[36m2017-07-19 23:33:49.514 UTC [Composer] Debug -> DEBU 1a7d[0m Entering extractNameFromCreator 0xc4214e75a0
[36m2017-07-19 23:33:49.514 UTC [Composer] Debug -> DEBU 1a7e[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.515 UTC [Composer] Debug -> DEBU 1a7f[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.515 UTC [Composer] Debug -> DEBU 1a80[0m Common Name admin
[36m2017-07-19 23:33:49.515 UTC [Composer] Debug -> DEBU 1a81[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.515 UTC [Composer] Debug -> DEBU 1a82[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.515 UTC [Composer] Debug -> DEBU 1a83[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.515 UTC [Composer] Debug -> DEBU 1a84[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.515 UTC [Composer] Debug -> DEBU 1a85[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.515 UTC [Composer] Debug -> DEBU 1a86[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.516 UTC [Composer] Debug -> DEBU 1a87[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.516 UTC [Composer] Debug -> DEBU 1a88[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.516 UTC [Composer] Debug -> DEBU 1a89[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.516 UTC [Composer] Debug -> DEBU 1a8a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.514 UTC [Composer] Debug -> DEBU 1a7b[0m Entering Engine.Invoke &{0xc420142268 0xc42123d820 0xc421187600 0xc4211876e0 0xc4211877c0} addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"YJMBGEOGSR_c8","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#YJMBGEOGSR_t2"}]
[36m2017-07-19 23:33:49.516 UTC [Composer] Debug -> DEBU 1a8b[0m Entering Context.getEventService &{0xc4202a2680}
[36m2017-07-19 23:33:49.517 UTC [Composer] Debug -> DEBU 1a8f[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a90[0m Entering Context.getIdentityService &{0xc4202a2680}
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a91[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a92[0m Entering Context.getHTTPService &{0xc4202a2680}
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a94[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a93[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc42055e480} 0xc421410040
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a95[0m Exiting NewDataCollection &{0xc420028650 0xc42055e480 $sysdata}
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a97[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a98[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a99[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a9a[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc4203b0680} 0xc4214ce840
[36m2017-07-19 23:33:49.516 UTC [Composer] Debug -> DEBU 1a8c[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a9c[0m Exiting NewDataCollection &{0xc420028608 0xc4203b0680 $sysdata}
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1a9d[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1a9e[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1a9f[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa0[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa2[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc4215fda80} 0xc4214ced60
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa3[0m Exiting NewDataCollection &{0xc4202fe5c0 0xc4215fda80 $sysdata}
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa4[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa5[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa6[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa7[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa8[0m Entering Context.getEventService &{0xc4202a2640}
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa9[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aaa[0m Entering Context.getIdentityService &{0xc4202a2640}
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aab[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aac[0m Entering Context.getHTTPService &{0xc4202a2640}
[36m2017-07-19 23:33:49.520 UTC [Composer] Debug -> DEBU 1aae[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.520 UTC [Composer] Debug -> DEBU 1aad[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.520 UTC [Composer] Debug -> DEBU 1aaf[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a96[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"YJMBGEOGSR_c8","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#YJMBGEOGSR_t2"}
[36m2017-07-19 23:33:49.518 UTC [Composer] Debug -> DEBU 1a9b[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc4211a8500} 0xc4214104b0
[36m2017-07-19 23:33:49.521 UTC [Composer] Debug -> DEBU 1ab0[0m Exiting NewDataCollection &{0xc4200285e8 0xc4211a8500 $sysdata}
[36m2017-07-19 23:33:49.521 UTC [Composer] Debug -> DEBU 1ab1[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.521 UTC [Composer] Debug -> DEBU 1ab2[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.522 UTC [Composer] Debug -> DEBU 1ab3[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.516 UTC [Composer] Debug -> DEBU 1a8d[0m Entering NewDataCollection &{0xc42027a640} &{0xc4202fe000 0xc42008d500} 0xc4214ce6b0
[36m2017-07-19 23:33:49.522 UTC [Composer] Debug -> DEBU 1ab5[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.516 UTC [Composer] Debug -> DEBU 1a8e[0m @JS : AclCompiler              :convertScriptToScriptNode() < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Track the trade of a commodity from one trader to another
 * @param {org.example.mynetwork.Trade} trade - the trade to be processed
 * @transaction
 */
function tradeCommodity(trade) {
    trade.commodity.owner = trade.newOwner;
    return getAssetRegistry('org.example.mynetwork.Commodity')
        .then(function (assetRegistry) {
            return assetRegistry.update(trade.commodity);
        });
}
[36m2017-07-19 23:33:49.523 UTC [Composer] Debug -> DEBU 1ab6[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.523 UTC [Composer] Debug -> DEBU 1ab7[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.523 UTC [Composer] Debug -> DEBU 1ab8[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.524 UTC [Composer] Debug -> DEBU 1ab9[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.524 UTC [Composer] Debug -> DEBU 1aba[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.524 UTC [Composer] Debug -> DEBU 1abb[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.524 UTC [Composer] Debug -> DEBU 1abc[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.525 UTC [Composer] Debug -> DEBU 1abd[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.522 UTC [Composer] Debug -> DEBU 1ab4[0m Exiting NewDataCollection &{0xc4202fe4f0 0xc42008d500 $sysidentities}
[36m2017-07-19 23:33:49.525 UTC [Composer] Debug -> DEBU 1abe[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.525 UTC [Composer] Debug -> DEBU 1abf[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.525 UTC [Composer] Debug -> DEBU 1ac0[0m @JS : AclCompiler              :processScript()           < 
[36m2017-07-19 23:33:49.525 UTC [Composer] Debug -> DEBU 1ac1[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1ac2[0m @JS : AclCompiler              :processScriptManager()    < 
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1ac3[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1ac5[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1ac6[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1ac7[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1ac9[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1aca[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1ac8[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.519 UTC [Composer] Debug -> DEBU 1aa1[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1acc[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1acd[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1ace[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1acf[0m Entering Context.getIdentityService &{0xc42027a640}
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1ad0[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1ad1[0m Entering IdentityService.getCurrentUserID &{0xc42027a640}
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1ad2[0m Entering extractNameFromCreator 0xc421410cc0
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1ad4[0m @JS : AclCompiler              :processAclManager()       > [object Object], [object Object]
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1ad5[0m @JS : AclCompiler              :processAclManager()       Processing ACL rule Default
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1ad6[0m @JS : AclCompiler              :processAclRule()          > [object Object], [object Object]
[36m2017-07-19 23:33:49.527 UTC [Composer] Debug -> DEBU 1ad3[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1ad7[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1ad8[0m Common Name admin
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1ad9[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1ada[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1adb[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1adc[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1acb[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1add[0m Entering DataCollection.get &{0xc4202a2640}
[36m2017-07-19 23:33:49.526 UTC [Composer] Debug -> DEBU 1ac4[0m Exiting Engine.Invoke 0xc4210b48a0
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1ade[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1adf[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.528 UTC [Composer] Debug -> DEBU 1ae0[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae1[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae3[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae5[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae4[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae6[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae7[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae8[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae9[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1aea[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1aeb[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1aec[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1aed[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1aee[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1aef[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af0[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af1[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af2[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af3[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af5[0m Entering DataCollection.get &{0xc4202a2680}
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af6[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af7[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af8[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1af9[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1afa[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1afb[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1afc[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1afd[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1afe[0m Entering Context.getEventService &{0xc42027a640}
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1aff[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.530 UTC [Composer] Debug -> DEBU 1b00[0m Entering Context.getIdentityService &{0xc42027a640}
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b01[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b02[0m Entering Context.getHTTPService &{0xc42027a640}
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b03[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b04[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b05[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b06[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b07[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b08[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.529 UTC [Composer] Debug -> DEBU 1ae2[0m @JS : AclCompiler              :processAclRule()          < 
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b09[0m @JS : AclCompiler              :processAclManager()       < 
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b0a[0m @JS : AclCompiler              :compile()                 Adding ACL rule Default
[36m2017-07-19 23:33:49.531 UTC [Composer] Debug -> DEBU 1b0b[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.532 UTC [Composer] Debug -> DEBU 1b0c[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.532 UTC [Composer] Debug -> DEBU 1b0d[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.532 UTC [Composer] Debug -> DEBU 1b0e[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.532 UTC [Composer] Debug -> DEBU 1b0f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.532 UTC [Composer] Debug -> DEBU 1b10[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.532 UTC [Composer] Debug -> DEBU 1b11[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.533 UTC [Composer] Debug -> DEBU 1b12[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Participant,org.example.mynetwork.Trader
[36m2017-07-19 23:33:49.533 UTC [Composer] Debug -> DEBU 1b13[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.533 UTC [Composer] Debug -> DEBU 1b14[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.533 UTC [Composer] Debug -> DEBU 1b15[0m Entering DataCollection.get &{0xc42027a640}
[36m2017-07-19 23:33:49.533 UTC [Composer] Debug -> DEBU 1b16[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.533 UTC [Composer] Debug -> DEBU 1b17[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.534 UTC [Composer] Debug -> DEBU 1b18[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.534 UTC [Composer] Debug -> DEBU 1b19[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.534 UTC [Composer] Debug -> DEBU 1b1a[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.534 UTC [Composer] Debug -> DEBU 1b1b[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.534 UTC [Composer] Debug -> DEBU 1b1c[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.534 UTC [Composer] Debug -> DEBU 1b1d[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.535 UTC [Composer] Debug -> DEBU 1b1e[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.535 UTC [Composer] Debug -> DEBU 1b1f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.535 UTC [Composer] Debug -> DEBU 1b20[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.535 UTC [Composer] Debug -> DEBU 1b21[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.535 UTC [Composer] Debug -> DEBU 1b22[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.536 UTC [Composer] Debug -> DEBU 1b23[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.536 UTC [Composer] Debug -> DEBU 1b24[0m Entering DataService.getCollection &{0xc4202a2640}
[36m2017-07-19 23:33:49.536 UTC [Composer] Debug -> DEBU 1b25[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc42055e480} 0xc4213df1b0
[36m2017-07-19 23:33:49.537 UTC [Composer] Debug -> DEBU 1b26[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc4215fda80} 0xc4213beab0
[36m2017-07-19 23:33:49.538 UTC [Composer] Debug -> DEBU 1b28[0m Exiting NewDataCollection &{0xc4202fe678 0xc4215fda80 $sysdata}
[36m2017-07-19 23:33:49.538 UTC [Composer] Debug -> DEBU 1b29[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.538 UTC [Composer] Debug -> DEBU 1b2a[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.538 UTC [Composer] Debug -> DEBU 1b2c[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:49.537 UTC [Composer] Debug -> DEBU 1b27[0m Exiting NewDataCollection &{0xc420150668 0xc42055e480 $sysdata}
[36m2017-07-19 23:33:49.539 UTC [Composer] Debug -> DEBU 1b2e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.539 UTC [Composer] Debug -> DEBU 1b2d[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42066d500} 0xc4213bf030
[36m2017-07-19 23:33:49.540 UTC [Composer] Debug -> DEBU 1b30[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.540 UTC [Composer] Debug -> DEBU 1b31[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.540 UTC [Composer] Debug -> DEBU 1b32[0m Exiting NewDataCollection &{0xc4200287a0 0xc42066d500 $sysdata}
[36m2017-07-19 23:33:49.539 UTC [Composer] Debug -> DEBU 1b2f[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc4211a8500} 0xc4213bf230
[36m2017-07-19 23:33:49.540 UTC [Composer] Debug -> DEBU 1b36[0m Exiting NewDataCollection &{0xc420028770 0xc4211a8500 $sysdata}
[36m2017-07-19 23:33:49.540 UTC [Composer] Debug -> DEBU 1b35[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.541 UTC [Composer] Debug -> DEBU 1b38[0m @JS : AclCompiler              :compile()                 < [object Object]
[36m2017-07-19 23:33:49.541 UTC [Composer] Debug -> DEBU 1b39[0m @JS : Context                  :cacheCompiledAclBundle()  > d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26, [object Object]
[36m2017-07-19 23:33:49.541 UTC [Composer] Debug -> DEBU 1b3a[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.540 UTC [Composer] Debug -> DEBU 1b34[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.541 UTC [Composer] Debug -> DEBU 1b3b[0m @JS : Context                  :cacheCompiledAclBundle()  < 
[36m2017-07-19 23:33:49.541 UTC [Composer] Debug -> DEBU 1b3c[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.538 UTC [Composer] Debug -> DEBU 1b2b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.542 UTC [Composer] Debug -> DEBU 1b40[0m Entering DataService.getCollection &{0xc4202a2680}
[36m2017-07-19 23:33:49.541 UTC [Composer] Debug -> DEBU 1b3e[0m @JS : Context                  :loadCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.543 UTC [Composer] Debug -> DEBU 1b41[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.543 UTC [Composer] Debug -> DEBU 1b43[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.544 UTC [Composer] Debug -> DEBU 1b44[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.544 UTC [Composer] Debug -> DEBU 1b46[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.544 UTC [Composer] Debug -> DEBU 1b47[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.544 UTC [Composer] Debug -> DEBU 1b48[0m Entering DataService.getCollection &{0xc4202a2220}
[36m2017-07-19 23:33:49.540 UTC [Composer] Debug -> DEBU 1b37[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.543 UTC [Composer] Debug -> DEBU 1b42[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.541 UTC [Composer] Debug -> DEBU 1b3d[0m Entering DataService.getCollection &{0xc42027a640}
[36m2017-07-19 23:33:49.545 UTC [Composer] Debug -> DEBU 1b49[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.540 UTC [Composer] Debug -> DEBU 1b33[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc4203b0680} 0xc42133a5e0
[36m2017-07-19 23:33:49.544 UTC [Composer] Debug -> DEBU 1b45[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.545 UTC [Composer] Debug -> DEBU 1b4a[0m Exiting NewDataCollection &{0xc420150710 0xc4203b0680 $sysdata}
[36m2017-07-19 23:33:49.545 UTC [Composer] Debug -> DEBU 1b4b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.545 UTC [Composer] Debug -> DEBU 1b4c[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b4d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b4e[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b4f[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b50[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b51[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.541 UTC [Composer] Debug -> DEBU 1b3f[0m Entering NewDataCollection &{0xc4202a2640} &{0xc420150168 0xc42008de00} 0xc4212fe5e0
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b55[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b53[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.547 UTC [Composer] Debug -> DEBU 1b56[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.547 UTC [Composer] Debug -> DEBU 1b57[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b52[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.546 UTC [Composer] Debug -> DEBU 1b54[0m Exiting NewDataCollection &{0xc4201427b0 0xc42008de00 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.547 UTC [Composer] Debug -> DEBU 1b58[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b5d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b5e[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b5f[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.547 UTC [Composer] Debug -> DEBU 1b59[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b61[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b62[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b63[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b64[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b65[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b66[0m Entering Context.getEventService &{0xc4202a2640}
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b67[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b68[0m Entering Context.getIdentityService &{0xc4202a2640}
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b69[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b6a[0m Entering Context.getHTTPService &{0xc4202a2640}
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b6b[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b6c[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b5b[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b6d[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b60[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b6e[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.549 UTC [Composer] Debug -> DEBU 1b6f[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b70[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b71[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b72[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b73[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b74[0m Entering Context.getEventService &{0xc4202a2640}
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b75[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b77[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b78[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b79[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b5c[0m Entering NewDataCollection &{0xc4202a2680} &{0xc420150170 0xc4202a4200} 0xc4213bf940
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b7b[0m Exiting NewDataCollection &{0xc420150760 0xc4202a4200 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.548 UTC [Composer] Debug -> DEBU 1b5a[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b7c[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b7d[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b7e[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b7f[0m Entering NewDataCollection &{0xc4202a2220} &{0xc420150158 0xc42013b600} 0xc4212eea80
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b83[0m Exiting NewDataCollection &{0xc4200287d8 0xc42013b600 $sysregistries}
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b84[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b80[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b87[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b88[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b89[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b8a[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b8b[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b8c[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b8d[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b7a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b8e[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b8f[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b90[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b91[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.553 UTC [Composer] Debug -> DEBU 1b92[0m Entering DataService.getCollection &{0xc4202a2220}
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b93[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b94[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b95[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b81[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b96[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.551 UTC [Composer] Debug -> DEBU 1b82[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b98[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b99[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b9b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.555 UTC [Composer] Debug -> DEBU 1b9c[0m Entering Context.getEventService &{0xc4202a2680}
[36m2017-07-19 23:33:49.555 UTC [Composer] Debug -> DEBU 1b9d[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.555 UTC [Composer] Debug -> DEBU 1b9e[0m Entering Context.getIdentityService &{0xc4202a2680}
[36m2017-07-19 23:33:49.555 UTC [Composer] Debug -> DEBU 1b9f[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.555 UTC [Composer] Debug -> DEBU 1ba0[0m Entering Context.getHTTPService &{0xc4202a2680}
[36m2017-07-19 23:33:49.555 UTC [Composer] Debug -> DEBU 1ba2[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b9a[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.555 UTC [Composer] Debug -> DEBU 1ba3[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.556 UTC [Composer] Debug -> DEBU 1ba4[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.556 UTC [Composer] Debug -> DEBU 1ba5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.556 UTC [Composer] Debug -> DEBU 1ba6[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:49.552 UTC [Composer] Debug -> DEBU 1b85[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc42055e480} 0xc4212ffef0
[36m2017-07-19 23:33:49.554 UTC [Composer] Debug -> DEBU 1b97[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.556 UTC [Composer] Debug -> DEBU 1ba7[0m Exiting NewDataCollection &{0xc420142800 0xc42055e480 $sysdata}
[36m2017-07-19 23:33:49.556 UTC [Composer] Debug -> DEBU 1ba9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.550 UTC [Composer] Debug -> DEBU 1b76[0m Entering Context.getIdentityService &{0xc4202a2640}
[36m2017-07-19 23:33:49.556 UTC [Composer] Debug -> DEBU 1baa[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.556 UTC [Composer] Debug -> DEBU 1bab[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.557 UTC [Composer] Debug -> DEBU 1bac[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.557 UTC [Composer] Debug -> DEBU 1bae[0m Entering Context.getHTTPService &{0xc4202a2640}
[36m2017-07-19 23:33:49.557 UTC [Composer] Debug -> DEBU 1baf[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.557 UTC [Composer] Debug -> DEBU 1bb0[0m Entering EventService.transactionCommit &{0xc4202a2640}
[36m2017-07-19 23:33:49.557 UTC [Composer] Debug -> DEBU 1bb1[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.557 UTC [Composer] Debug -> DEBU 1bb2[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42066d500} 0xc4212b0ac0
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bb3[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bb4[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bb5[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bb6[0m Exiting NewDataCollection &{0xc420142888 0xc42066d500 $sysdata}
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bb7[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.557 UTC [Composer] Debug -> DEBU 1bad[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bb8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bba[0m Entering Context.getEventService &{0xc4202a2680}
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bbb[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bbc[0m Entering Context.getIdentityService &{0xc4202a2680}
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bbd[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.552 UTC [Composer] Debug -> DEBU 1b86[0m Entering NewDataCollection &{0xc42027a640} &{0xc4202fe000 0xc42008d500} 0xc4212fffd0
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bb9[0m Entering Context.getDataService &{0xc4202a2640}
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bbf[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.556 UTC [Composer] Debug -> DEBU 1ba8[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bc1[0m Exiting NewDataCollection &{0xc4200287a8 0xc42008d500 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bc2[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bc3[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.555 UTC [Composer] Debug -> DEBU 1ba1[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bc4[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bbe[0m Entering Context.getHTTPService &{0xc4202a2680}
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bc5[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bc6[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bc7[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bc8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bc9[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.558 UTC [Composer] Debug -> DEBU 1bc0[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bca[0m Entering Context.getEventService &{0xc4202a2640}
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bcb[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bcc[0m Entering Context.getIdentityService &{0xc4202a2640}
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bcd[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bce[0m Entering Context.getHTTPService &{0xc4202a2640}
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bcf[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bd0[0m Entering EventService.transactionCommit &{0xc4202a2680}
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bd2[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bd3[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bd4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bd6[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.559 UTC [Composer] Debug -> DEBU 1bd1[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bd7[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bd8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bd9[0m Entering Context.getEventService &{0xc42027a640}
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bdb[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bdc[0m Entering Context.getIdentityService &{0xc42027a640}
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bda[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bde[0m Entering Engine.handleCallback 0xc4211a6720 &{0xc4202a2640}
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bdf[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1be0[0m Entering NewDataCollection &{0xc4202a2220} &{0xc420150158 0xc42013b600} 0xc42126c460
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1be1[0m Exiting NewDataCollection &{0xc420150870 0xc42013b600 $sysidentities}
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1be2[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.561 UTC [Composer] Debug -> DEBU 1be3[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bd5[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.561 UTC [Composer] Debug -> DEBU 1be4[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.561 UTC [Composer] Debug -> DEBU 1be7[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.561 UTC [Composer] Debug -> DEBU 1be8[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.561 UTC [Composer] Debug -> DEBU 1be5[0m Exiting Composer.Invoke {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"} <nil>
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1be9[0m Entering ComposerPool.Put &{0xc420150168 0xc4211771f0 0xc4202fefa8}
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bea[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1beb[0m Exiting Chaincode.Invoke 200  {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"}
[36m2017-07-19 23:33:49.560 UTC [Composer] Debug -> DEBU 1bdd[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bec[0m Entering Context.getHTTPService &{0xc42027a640}
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bed[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.561 UTC [Composer] Debug -> DEBU 1be6[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bee[0m Entering Context.getIdentityService &{0xc4202a2220}
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bef[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bf0[0m Entering IdentityService.getCurrentUserID &{0xc4202a2220}
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bf1[0m Entering extractNameFromCreator 0xc42128b110
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bf2[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bf3[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bf4[0m Common Name admin
[36m2017-07-19 23:33:49.562 UTC [Composer] Debug -> DEBU 1bf5[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.563 UTC [Composer] Debug -> DEBU 1bf6[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.563 UTC [Composer] Debug -> DEBU 1bf7[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.563 UTC [Composer] Debug -> DEBU 1bf8[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.563 UTC [Composer] Debug -> DEBU 1bf9[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.563 UTC [Composer] Debug -> DEBU 1bfa[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1bfb[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1bfd[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1bfc[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1bfe[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1c00[0m Entering Context.getEventService &{0xc42027a640}
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1c01[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1c02[0m Entering Context.getIdentityService &{0xc42027a640}
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1c03[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1c04[0m Entering Context.getHTTPService &{0xc42027a640}
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1c05[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1c06[0m Entering EventService.transactionCommit &{0xc42027a640}
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c08[0m Entering Context.getDataService &{0xc4202a2680}
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c09[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c0a[0m Entering Context.getEventService &{0xc4202a2680}
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c0b[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c0c[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc4215fda80} 0xc42126d2d0
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c0d[0m Entering Context.getIdentityService &{0xc4202a2680}
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c0e[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c10[0m Exiting NewDataCollection &{0xc420150888 0xc4215fda80 $sysregistries}
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c11[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c0f[0m Entering Context.getHTTPService &{0xc4202a2680}
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c12[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c13[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc4203b0680} 0xc42126d580
[36m2017-07-19 23:33:49.565 UTC [Composer] Debug -> DEBU 1c07[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c15[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c16[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c17[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c18[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c19[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c1b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.567 UTC [Composer] Debug -> DEBU 1c1c[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.567 UTC [Composer] Debug -> DEBU 1c1d[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.567 UTC [Composer] Debug -> DEBU 1c1e[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.567 UTC [Composer] Debug -> DEBU 1c1f[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.568 UTC [Composer] Debug -> DEBU 1c20[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.568 UTC [Composer] Debug -> DEBU 1c21[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.568 UTC [Composer] Debug -> DEBU 1c22[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.568 UTC [Composer] Debug -> DEBU 1c23[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.568 UTC [Composer] Debug -> DEBU 1c24[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.569 UTC [Composer] Debug -> DEBU 1c25[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.569 UTC [Composer] Debug -> DEBU 1c26[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.569 UTC [Composer] Debug -> DEBU 1c27[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.569 UTC [Composer] Debug -> DEBU 1c28[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.569 UTC [Composer] Debug -> DEBU 1c29[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.569 UTC [Composer] Debug -> DEBU 1c2a[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c2b[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c2c[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c2d[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c2e[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c2f[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c30[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c31[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c32[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c1a[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.570 UTC [Composer] Debug -> DEBU 1c33[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c34[0m Entering Context.getDataService &{0xc42027a640}
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c35[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c36[0m Entering Context.getEventService &{0xc42027a640}
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c37[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c38[0m Entering Context.getIdentityService &{0xc42027a640}
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c39[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c3a[0m Entering Context.getHTTPService &{0xc42027a640}
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c3b[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.566 UTC [Composer] Debug -> DEBU 1c14[0m Exiting NewDataCollection &{0xc4200288f0 0xc4203b0680 $sysdata}
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c3c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c3d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.571 UTC [Composer] Debug -> DEBU 1c3e[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c3f[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c40[0m Entering Engine.handleCallback 0xc42112ade0 &{0xc4202a2680}
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c41[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c42[0m Exiting Composer.Invoke {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"} <nil>
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c43[0m Entering ComposerPool.Put &{0xc420150170 0xc421142fd0 0xc420029268}
[36m2017-07-19 23:33:49.564 UTC [Composer] Debug -> DEBU 1bff[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c45[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c46[0m Entering Context.getEventService &{0xc4202a2220}
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c47[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c48[0m Entering Context.getIdentityService &{0xc4202a2220}
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c49[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c4a[0m Entering Context.getHTTPService &{0xc4202a2220}
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c4b[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c4c[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c4d[0m Entering Engine.handleCallback 0xc420637020 &{0xc42027a640}
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c4e[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c4f[0m @JS : Engine                   :invoke()                  Calling engine function getRegistry
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c50[0m Exiting Composer.Invoke {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"} <nil>
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c51[0m Entering ComposerPool.Put &{0xc4202fe000 0xc42069a630 0xc420150a78}
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c52[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c53[0m @JS : EngineRegistries         :getRegistry()             > [object Object], Asset,org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.574 UTC [Composer] Debug -> DEBU 1c55[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.574 UTC [Composer] Debug -> DEBU 1c56[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.574 UTC [Composer] Debug -> DEBU 1c57[0m Entering DataCollection.get &{0xc4202a2220}
[36m2017-07-19 23:33:49.573 UTC [Composer] Debug -> DEBU 1c54[0m Exiting Chaincode.Invoke 200  {"type":"Participant","id":"org.example.mynetwork.Trader","name":"Participant registry for org.example.mynetwork.Trader"}
[36m2017-07-19 23:33:49.572 UTC [Composer] Debug -> DEBU 1c44[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.574 UTC [Composer] Debug -> DEBU 1c58[0m Exiting Chaincode.Invoke 200  {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"}
[36m2017-07-19 23:33:49.585 UTC [Composer] Debug -> DEBU 1c59[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42066d500} 0xc421241890
[36m2017-07-19 23:33:49.585 UTC [Composer] Debug -> DEBU 1c5a[0m Exiting NewDataCollection &{0xc420150a98 0xc42066d500 $sysdata}
[36m2017-07-19 23:33:49.585 UTC [Composer] Debug -> DEBU 1c5b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.585 UTC [Composer] Debug -> DEBU 1c5c[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.585 UTC [Composer] Debug -> DEBU 1c5d[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c5e[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc42055e480} 0xc421252a60
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c5f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c60[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc4215fda80} 0xc4212b1760
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c62[0m Entering DataService.getCollection &{0xc4202a2220}
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c61[0m Entering getLogging 0xc4212b18b0
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c63[0m Exiting NewDataCollection &{0xc420150a00 0xc4215fda80 $sysidentities}
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c64[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc4211a8500} 0xc4212bde50
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c65[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c66[0m Exiting NewDataCollection &{0xc420150910 0xc4211a8500 $sysdata}
[36m2017-07-19 23:33:49.586 UTC [Composer] Debug -> DEBU 1c67[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.587 UTC [Composer] Debug -> DEBU 1c68[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.587 UTC [Composer] Debug -> DEBU 1c69[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.587 UTC [Composer] Debug -> DEBU 1c6a[0m Exiting NewDataCollection &{0xc420150b18 0xc42055e480 $sysregistries}
[36m2017-07-19 23:33:49.587 UTC [Composer] Debug -> DEBU 1c6c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.587 UTC [Composer] Debug -> DEBU 1c6b[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.588 UTC [Composer] Debug -> DEBU 1c6d[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.588 UTC [Composer] Debug -> DEBU 1c6e[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:49.588 UTC [Composer] Debug -> DEBU 1c6f[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.588 UTC [Composer] Debug -> DEBU 1c70[0m Entering IdentityService.getCurrentUserID &{0xc4201ce220}
[36m2017-07-19 23:33:49.588 UTC [Composer] Debug -> DEBU 1c71[0m Entering extractNameFromCreator 0xc421232090
[36m2017-07-19 23:33:49.588 UTC [Composer] Debug -> DEBU 1c72[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.588 UTC [Composer] Debug -> DEBU 1c73[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.588 UTC [Composer] Debug -> DEBU 1c74[0m Common Name admin
[36m2017-07-19 23:33:49.589 UTC [Composer] Debug -> DEBU 1c75[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.589 UTC [Composer] Debug -> DEBU 1c76[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.589 UTC [Composer] Debug -> DEBU 1c77[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.589 UTC [Composer] Debug -> DEBU 1c78[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.589 UTC [Composer] Debug -> DEBU 1c79[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c7a[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c7b[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c7c[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c7d[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c7e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c7f[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c80[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c81[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c82[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c83[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:49.590 UTC [Composer] Debug -> DEBU 1c84[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c85[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c86[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"JHDBVLKJTB_t9","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c87[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c88[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c89[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c8a[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c8b[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c8c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.591 UTC [Composer] Debug -> DEBU 1c8d[0m Entering DataCollection.get &{0xc4201ce220}
[36m2017-07-19 23:33:49.597 UTC [Composer] Debug -> DEBU 1c8e[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.597 UTC [Composer] Debug -> DEBU 1c92[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.598 UTC [Composer] Debug -> DEBU 1c93[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.598 UTC [Composer] Debug -> DEBU 1c94[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.598 UTC [Composer] Debug -> DEBU 1c95[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.598 UTC [Composer] Debug -> DEBU 1c97[0m Entering getLogging 0xc4212084c0
[36m2017-07-19 23:33:49.597 UTC [Composer] Debug -> DEBU 1c8f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.598 UTC [Composer] Debug -> DEBU 1c98[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.597 UTC [Composer] Debug -> DEBU 1c91[0m Entering NewDataCollection &{0xc4202a2220} &{0xc420150158 0xc42013b600} 0xc421208050
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1c9a[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.597 UTC [Composer] Debug -> DEBU 1c90[0m Entering Chaincode.Invoke 0xc4212b18a0
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1c9b[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1c9c[0m Exiting ComposerPool.Get &{0xc420150150 0xc42040f710 0xc4201425c8}
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1c9d[0m Entering Composer.Invoke 0xc421208890 addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"NNUWETYFKH_c12","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#NNUWETYFKH_t0"}]
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1c99[0m Exiting NewDataCollection &{0xc4201429d8 0xc42013b600 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1c9e[0m Entering NewContext &{0xc420141340} &{0xc420150150} 0xc421208990
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1c9f[0m Entering NewDataService &{0xc420141340} &{0xc420150150 <nil> <nil> <nil> <nil>} 0xc421208a50
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca0[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca1[0m Exiting NewDataService &{0xc420150150 0xc420176380}
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca2[0m Entering NewIdentityService &{0xc420141340} &{0xc420150150 0xc421048340 <nil> <nil> <nil>} 0xc421208c00
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca3[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca4[0m Exiting NewIdentityService &{0xc420150150 0xc420176380}
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca5[0m Entering NewEventService &{0xc420141340} &{0xc420150150 0xc421048340 0xc421048420 <nil> <nil>} 0xc421208d70
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca6[0m Exiting NewEventServce &{0xc420150150 0xc420176380}
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca7[0m Entering HTTPService &{0xc420141340} &{0xc420150150 0xc421048340 0xc421048420 0xc421048500 <nil>} 0xc421208ee0
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca8[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1ca9[0m Exiting HTTPService &{0xc420150150 0xc420176380}
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1caa[0m Exiting NewContext &{0xc420150150 0xc421048340 0xc421048420 0xc421048500 0xc4210485e0}
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1cab[0m Entering Engine.Invoke &{0xc420150150 0xc421048340 0xc421048420 0xc421048500 0xc4210485e0} addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"NNUWETYFKH_c12","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#NNUWETYFKH_t0"}]
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1cac[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1cad[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.599 UTC [Composer] Debug -> DEBU 1cae[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"NNUWETYFKH_c12","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#NNUWETYFKH_t0"}
[36m2017-07-19 23:33:49.600 UTC [Composer] Debug -> DEBU 1caf[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.600 UTC [Composer] Debug -> DEBU 1cb0[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.600 UTC [Composer] Debug -> DEBU 1cb1[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.600 UTC [Composer] Debug -> DEBU 1cb2[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.600 UTC [Composer] Debug -> DEBU 1cb3[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.598 UTC [Composer] Debug -> DEBU 1c96[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc42055e480} 0xc421208360
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cb8[0m Exiting NewDataCollection &{0xc420028a70 0xc42055e480 $sysidentities}
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cb9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.600 UTC [Composer] Debug -> DEBU 1cb4[0m @JS : EngineRegistries         :getRegistry()             < [object Object]
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cba[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cbb[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cbc[0m Entering Context.getEventService &{0xc4202a2220}
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cbd[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.600 UTC [Composer] Debug -> DEBU 1cb5[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cbf[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cb7[0m Exiting Engine.Invoke 0xc421212000
[36m2017-07-19 23:33:49.601 UTC [Composer] Debug -> DEBU 1cbe[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc0[0m Entering Context.getIdentityService &{0xc4202a2220}
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc1[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc2[0m Entering Context.getHTTPService &{0xc4202a2220}
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc3[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc4[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc5[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc6[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc7[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc8[0m Entering IdentityService.getCurrentUserID &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cc9[0m Entering extractNameFromCreator 0xc4211c8110
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cca[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1ccb[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1ccc[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1ccd[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1ccf[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cd0[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cd1[0m Entering Context.getEventService &{0xc4202a2220}
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cd2[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cd3[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cd4[0m Entering Context.getIdentityService &{0xc4202a2220}
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cd5[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cd6[0m Entering Context.getHTTPService &{0xc4202a2220}
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cd7[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cd8[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cdb[0m Entering EventService.transactionCommit &{0xc4202a2220}
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cd9[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cdd[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cde[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cdf[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cda[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1ce1[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1ce2[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.604 UTC [Composer] Debug -> DEBU 1ce3[0m Entering DataService.getCollection &{0xc4201ce220}
[36m2017-07-19 23:33:49.602 UTC [Composer] Debug -> DEBU 1cce[0m Common Name admin
[36m2017-07-19 23:33:49.604 UTC [Composer] Debug -> DEBU 1ce5[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.604 UTC [Composer] Debug -> DEBU 1ce6[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1cdc[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.604 UTC [Composer] Debug -> DEBU 1ce8[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.604 UTC [Composer] Debug -> DEBU 1ce9[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1cea[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1ceb[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.604 UTC [Composer] Debug -> DEBU 1ce4[0m Entering Context.getDataService &{0xc4202a2220}
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1cec[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1ced[0m Entering Context.getEventService &{0xc4202a2220}
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1cee[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1cef[0m Entering Context.getIdentityService &{0xc4202a2220}
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1cf0[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1cf1[0m Entering Context.getHTTPService &{0xc4202a2220}
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1cf2[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cf4[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cf5[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cf6[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cf8[0m Entering Context.getEventService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cf9[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cfa[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cfb[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cfd[0m Entering Chaincode.Invoke 0xc4212084b0
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cfe[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cff[0m Exiting ComposerPool.Get &{0xc420142270 0xc421232530 0xc420143368}
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d00[0m Entering Composer.Invoke 0xc4211eb130 addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"QREJIOVSAJ_t6","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d01[0m Entering NewContext &{0xc4201450e0} &{0xc420142270} 0xc4211eb230
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cfc[0m Entering Context.getHTTPService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1cf7[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d03[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d04[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.603 UTC [Composer] Debug -> DEBU 1ce0[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d05[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d06[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d07[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d08[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d09[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d0a[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.604 UTC [Composer] Debug -> DEBU 1ce7[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d0b[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.600 UTC [Composer] Debug -> DEBU 1cb6[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d0c[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d0d[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d0e[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d0f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d10[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d12[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d11[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d13[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.607 UTC [Composer] Debug -> DEBU 1d14[0m Entering NewDataCollection &{0xc4201ce220} &{0xc420028000 0xc4215fda80} 0xc4211b2430
[36m2017-07-19 23:33:49.608 UTC [Composer] Debug -> DEBU 1d15[0m Exiting NewDataCollection &{0xc420142a80 0xc4215fda80 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.608 UTC [Composer] Debug -> DEBU 1d16[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.608 UTC [Composer] Debug -> DEBU 1d17[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#JHDBVLKJTB_t9, CREATE
[36m2017-07-19 23:33:49.608 UTC [Composer] Debug -> DEBU 1d18[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.608 UTC [Composer] Debug -> DEBU 1d19[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.608 UTC [Composer] Debug -> DEBU 1d1b[0m Entering getLogging 0xc4211ebc40
[36m2017-07-19 23:33:49.605 UTC [Composer] Debug -> DEBU 1cf3[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.606 UTC [Composer] Debug -> DEBU 1d02[0m Entering NewDataService &{0xc4201450e0} &{0xc420142270 <nil> <nil> <nil> <nil>} 0xc4211eb2e0
[36m2017-07-19 23:33:49.610 UTC [Composer] Debug -> DEBU 1d1c[0m @JS : Engine                   :invoke()                  < [object Object]
[36m2017-07-19 23:33:49.610 UTC [Composer] Debug -> DEBU 1d1f[0m Entering Engine.handleCallback 0xc4211a6f00 &{0xc4202a2220}
[36m2017-07-19 23:33:49.610 UTC [Composer] Debug -> DEBU 1d20[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.610 UTC [Composer] Debug -> DEBU 1d1d[0m Exiting NewDataService &{0xc420142270 0xc42054ca80}
[36m2017-07-19 23:33:49.611 UTC [Composer] Debug -> DEBU 1d21[0m Exiting Composer.Invoke {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"} <nil>
[36m2017-07-19 23:33:49.611 UTC [Composer] Debug -> DEBU 1d23[0m Entering ComposerPool.Put &{0xc420150158 0xc421209690 0xc4202ff098}
[36m2017-07-19 23:33:49.610 UTC [Composer] Debug -> DEBU 1d1e[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"OJCRTKWKJU_c8","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#OJCRTKWKJU_t2"}
[36m2017-07-19 23:33:49.611 UTC [Composer] Debug -> DEBU 1d26[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc4203b0680} 0xc4211f3600
[36m2017-07-19 23:33:49.611 UTC [Composer] Debug -> DEBU 1d27[0m Exiting NewDataCollection &{0xc420150d58 0xc4203b0680 $sysdata}
[36m2017-07-19 23:33:49.611 UTC [Composer] Debug -> DEBU 1d28[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d29[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d2a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d2b[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.608 UTC [Composer] Debug -> DEBU 1d1a[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.611 UTC [Composer] Debug -> DEBU 1d25[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d2e[0m Exiting Chaincode.Invoke 200  {"type":"Asset","id":"org.example.mynetwork.Commodity","name":"Asset registry for org.example.mynetwork.Commodity"}
[36m2017-07-19 23:33:49.611 UTC [Composer] Debug -> DEBU 1d22[0m Entering NewIdentityService &{0xc4201450e0} &{0xc420142270 0xc42044a380 <nil> <nil> <nil>} 0xc4211c94c0
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d2f[0m Exiting NewIdentityService &{0xc420142270 0xc42054ca80}
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d30[0m Entering NewEventService &{0xc4201450e0} &{0xc420142270 0xc42044a380 0xc42053ab20 <nil> <nil>} 0xc4211c9a50
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d31[0m Exiting NewEventServce &{0xc420142270 0xc42054ca80}
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d32[0m Entering HTTPService &{0xc4201450e0} &{0xc420142270 0xc42044a380 0xc42053ab20 0xc42053ac00 <nil>} 0xc4211c9bc0
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d33[0m Exiting HTTPService &{0xc420142270 0xc42054ca80}
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d34[0m Exiting NewContext &{0xc420142270 0xc42044a380 0xc42053ab20 0xc42053ac00 0xc42053ace0}
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d35[0m Entering DataCollection.add &{0xc4201ce220}
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d36[0m Entering Engine.Invoke &{0xc420142270 0xc42044a380 0xc42053ab20 0xc42053ac00 0xc42053ace0} addResourceToRegistry [Participant org.example.mynetwork.Trader {"$class":"org.example.mynetwork.Trader","tradeId":"QREJIOVSAJ_t6","firstName":"Testing","lastName":"Test"}]
[36m2017-07-19 23:33:49.611 UTC [Composer] Debug -> DEBU 1d24[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42066d500} 0xc4211c96b0
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d37[0m Exiting NewDataCollection &{0xc420028b28 0xc42066d500 $sysdata}
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d38[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d39[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"QREJIOVSAJ_t6","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d3a[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d3b[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d3c[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.613 UTC [Composer] Debug -> DEBU 1d3d[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.614 UTC [Composer] Debug -> DEBU 1d3e[0m Exiting Engine.Invoke 0xc42038a480
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d43[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc4211a8500} 0xc4211b32e0
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d44[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d2d[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d46[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.615 UTC [Composer] Debug -> DEBU 1d3f[0m Entering Chaincode.Invoke 0xc4211ebc30
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d47[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d49[0m Exiting ComposerPool.Get &{0xc420028028 0xc42051bc00 0xc4202fe7b8}
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d4a[0m Entering Composer.Invoke 0xc4211a4610 addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"AVDFKQTFEK_c10","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#AVDFKQTFEK_t6"}]
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d4b[0m Entering NewContext &{0xc4201cf140} &{0xc420028028} 0xc4211a4710
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d4c[0m Entering NewDataService &{0xc4201cf140} &{0xc420028028 <nil> <nil> <nil> <nil>} 0xc4211a47c0
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d4d[0m Exiting NewDataService &{0xc420028028 0xc42111c380}
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d4e[0m Entering NewIdentityService &{0xc4201cf140} &{0xc420028028 0xc42053b440 <nil> <nil> <nil>} 0xc4211a4970
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d4f[0m Exiting NewIdentityService &{0xc420028028 0xc42111c380}
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d50[0m Entering NewEventService &{0xc4201cf140} &{0xc420028028 0xc42053b440 0xc42053b520 <nil> <nil>} 0xc4211a4af0
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d51[0m Exiting NewEventServce &{0xc420028028 0xc42111c380}
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d52[0m Entering HTTPService &{0xc4201cf140} &{0xc420028028 0xc42053b440 0xc42053b520 0xc42053b600 <nil>} 0xc4211a4c70
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d53[0m Exiting HTTPService &{0xc420028028 0xc42111c380}
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d54[0m Exiting NewContext &{0xc420028028 0xc42053b440 0xc42053b520 0xc42053b600 0xc42053b6e0}
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d55[0m Entering Engine.Invoke &{0xc420028028 0xc42053b440 0xc42053b520 0xc42053b600 0xc42053b6e0} addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"AVDFKQTFEK_c10","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#AVDFKQTFEK_t6"}]
[36m2017-07-19 23:33:49.616 UTC [Composer] Debug -> DEBU 1d41[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d56[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"AVDFKQTFEK_c10","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#AVDFKQTFEK_t6"}
[36m2017-07-19 23:33:49.619 UTC [Composer] Debug -> DEBU 1d57[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.620 UTC [Composer] Debug -> DEBU 1d58[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d45[0m Exiting NewDataCollection &{0xc420150d80 0xc4211a8500 $sysdata}
[36m2017-07-19 23:33:49.620 UTC [Composer] Debug -> DEBU 1d59[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.620 UTC [Composer] Debug -> DEBU 1d5a[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.617 UTC [Composer] Debug -> DEBU 1d42[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.618 UTC [Composer] Debug -> DEBU 1d48[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.620 UTC [Composer] Debug -> DEBU 1d5b[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.615 UTC [Composer] Debug -> DEBU 1d40[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420176380} 0xc421176090
[36m2017-07-19 23:33:49.612 UTC [Composer] Debug -> DEBU 1d2c[0m Entering DataCollection.get &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.620 UTC [Composer] Debug -> DEBU 1d5d[0m Exiting NewDataCollection &{0xc420028b50 0xc420176380 $sysdata}
[36m2017-07-19 23:33:49.620 UTC [Composer] Debug -> DEBU 1d5e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d5f[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.620 UTC [Composer] Debug -> DEBU 1d5c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d60[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d61[0m Exiting Engine.Invoke 0xc42038a960
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d62[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d63[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d64[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d65[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d67[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d66[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d68[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d69[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d6a[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.621 UTC [Composer] Debug -> DEBU 1d6b[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.622 UTC [Composer] Debug -> DEBU 1d6c[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.622 UTC [Composer] Debug -> DEBU 1d6d[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.622 UTC [Composer] Debug -> DEBU 1d6e[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.622 UTC [Composer] Debug -> DEBU 1d6f[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.622 UTC [Composer] Debug -> DEBU 1d70[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.622 UTC [Composer] Debug -> DEBU 1d71[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.623 UTC [Composer] Debug -> DEBU 1d72[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.623 UTC [Composer] Debug -> DEBU 1d73[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.624 UTC [Composer] Debug -> DEBU 1d74[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.625 UTC [Composer] Debug -> DEBU 1d75[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.625 UTC [Composer] Debug -> DEBU 1d76[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.625 UTC [Composer] Debug -> DEBU 1d77[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.625 UTC [Composer] Debug -> DEBU 1d78[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.625 UTC [Composer] Debug -> DEBU 1d79[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.625 UTC [Composer] Debug -> DEBU 1d7a[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.626 UTC [Composer] Debug -> DEBU 1d7b[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.626 UTC [Composer] Debug -> DEBU 1d7c[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.626 UTC [Composer] Debug -> DEBU 1d7e[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.626 UTC [Composer] Debug -> DEBU 1d7f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.626 UTC [Composer] Debug -> DEBU 1d80[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.626 UTC [Composer] Debug -> DEBU 1d7d[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.626 UTC [Composer] Debug -> DEBU 1d81[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.626 UTC [Composer] Debug -> DEBU 1d82[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.627 UTC [Composer] Debug -> DEBU 1d83[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.627 UTC [Composer] Debug -> DEBU 1d84[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.627 UTC [Composer] Debug -> DEBU 1d85[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.627 UTC [Composer] Debug -> DEBU 1d86[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.627 UTC [Composer] Debug -> DEBU 1d87[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.627 UTC [Composer] Debug -> DEBU 1d88[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.629 UTC [Composer] Debug -> DEBU 1d89[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc42054ca80} 0xc4211a5b40
[36m2017-07-19 23:33:49.630 UTC [Composer] Debug -> DEBU 1d8e[0m Exiting NewDataCollection &{0xc420028bd8 0xc42054ca80 $sysdata}
[36m2017-07-19 23:33:49.629 UTC [Composer] Debug -> DEBU 1d8a[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42111c380} 0xc42116b300
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d90[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d91[0m Exiting NewDataCollection &{0xc420142b88 0xc42111c380 $sysdata}
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d92[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d93[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d94[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d95[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.630 UTC [Composer] Debug -> DEBU 1d8c[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d97[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d98[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d99[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d9a[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d9b[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d9c[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d9d[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1d9e[0m Entering EventService.transactionCommit &{0xc4201ce220}
[36m2017-07-19 23:33:49.630 UTC [Composer] Debug -> DEBU 1d8d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1d9f[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da0[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da1[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da2[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da3[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d8f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da4[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da5[0m Entering Context.getDataService &{0xc4201ce220}
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da6[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da8[0m Entering Context.getEventService &{0xc4201ce220}
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da9[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1daa[0m Entering Context.getIdentityService &{0xc4201ce220}
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1dab[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1dac[0m Entering Context.getHTTPService &{0xc4201ce220}
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1dad[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.631 UTC [Composer] Debug -> DEBU 1d96[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1dae[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.632 UTC [Composer] Debug -> DEBU 1da7[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1daf[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db0[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db1[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db2[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db3[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db4[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db5[0m Entering Engine.handleCallback 0xc4215fee40 &{0xc4201ce220}
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db6[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db7[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db9[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1dba[0m Entering ComposerPool.Put &{0xc420028000 0xc4203ac870 0xc420150318}
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1dbb[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1dbc[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.633 UTC [Composer] Debug -> DEBU 1db8[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.634 UTC [Composer] Debug -> DEBU 1dbd[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.634 UTC [Composer] Debug -> DEBU 1dbe[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.634 UTC [Composer] Debug -> DEBU 1dc0[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.634 UTC [Composer] Debug -> DEBU 1dc1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.634 UTC [Composer] Debug -> DEBU 1dc2[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.634 UTC [Composer] Debug -> DEBU 1dc3[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42066d500} 0xc42112eae0
[36m2017-07-19 23:33:49.634 UTC [Composer] Debug -> DEBU 1dc4[0m Exiting NewDataCollection &{0xc420150e18 0xc42066d500 $sysregistries}
[36m2017-07-19 23:33:49.629 UTC [Composer] Debug -> DEBU 1d8b[0m Entering DataService.getCollection &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.634 UTC [Composer] Debug -> DEBU 1dbf[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.635 UTC [Composer] Debug -> DEBU 1dc6[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc4203b0680} 0xc42112ed80
[36m2017-07-19 23:33:49.635 UTC [Composer] Debug -> DEBU 1dc8[0m Exiting NewDataCollection &{0xc420150e60 0xc4203b0680 $sysregistries}
[36m2017-07-19 23:33:49.636 UTC [Composer] Debug -> DEBU 1dc9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.637 UTC [Composer] Debug -> DEBU 1dca[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.638 UTC [Composer] Debug -> DEBU 1dcc[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.638 UTC [Composer] Debug -> DEBU 1dcd[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.638 UTC [Composer] Debug -> DEBU 1dce[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.635 UTC [Composer] Debug -> DEBU 1dc7[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.638 UTC [Composer] Debug -> DEBU 1dcf[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.638 UTC [Composer] Debug -> DEBU 1dd0[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.638 UTC [Composer] Debug -> DEBU 1dd1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.638 UTC [Composer] Debug -> DEBU 1dd2[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.637 UTC [Composer] Debug -> DEBU 1dcb[0m Entering getLogging 0xc421143910
[36m2017-07-19 23:33:49.635 UTC [Composer] Debug -> DEBU 1dc5[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.641 UTC [Composer] Debug -> DEBU 1dd3[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.641 UTC [Composer] Debug -> DEBU 1dd4[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.641 UTC [Composer] Debug -> DEBU 1dd5[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.641 UTC [Composer] Debug -> DEBU 1dd6[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1dd7[0m Entering Chaincode.Invoke 0xc421143900
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1dd8[0m Entering ComposerPool.Get
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1dd9[0m Exiting ComposerPool.Get &{0xc4202fe008 0xc4210ea5f0 0xc420142f60}
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1dda[0m Entering Composer.Invoke 0xc42112f660 addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"DRVBMVGSZH_c6","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#DRVBMVGSZH_t5"}]
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1ddb[0m Entering NewContext &{0xc42027a680} &{0xc4202fe008} 0xc42112f760
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1ddc[0m Entering NewDataService &{0xc42027a680} &{0xc4202fe008 <nil> <nil> <nil> <nil>} 0xc42112f820
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1ddd[0m Exiting NewDataService &{0xc4202fe008 0xc420390c00}
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1dde[0m Entering NewIdentityService &{0xc42027a680} &{0xc4202fe008 0xc4205834c0 <nil> <nil> <nil>} 0xc42112f9e0
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1ddf[0m Exiting NewIdentityService &{0xc4202fe008 0xc420390c00}
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1de0[0m Entering NewEventService &{0xc42027a680} &{0xc4202fe008 0xc4205834c0 0xc4205835a0 <nil> <nil>} 0xc42112fb50
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1de1[0m Exiting NewEventServce &{0xc4202fe008 0xc420390c00}
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1de2[0m Entering HTTPService &{0xc42027a680} &{0xc4202fe008 0xc4205834c0 0xc4205835a0 0xc420583680 <nil>} 0xc42112fd30
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1de3[0m Exiting HTTPService &{0xc4202fe008 0xc420390c00}
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1de4[0m Exiting NewContext &{0xc4202fe008 0xc4205834c0 0xc4205835a0 0xc420583680 0xc420583760}
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1de5[0m Entering Engine.Invoke &{0xc4202fe008 0xc4205834c0 0xc4205835a0 0xc420583680 0xc420583760} addResourceToRegistry [Asset org.example.mynetwork.Commodity {"$class":"org.example.mynetwork.Commodity","tradingSymbol":"DRVBMVGSZH_c6","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#DRVBMVGSZH_t5"}]
[36m2017-07-19 23:33:49.645 UTC [Composer] Debug -> DEBU 1de6[0m @JS : Engine                   :invoke()                  > [object Object], addResourceToRegistry, Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"DRVBMVGSZH_c6","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#DRVBMVGSZH_t5"}
[36m2017-07-19 23:33:49.646 UTC [Composer] Debug -> DEBU 1de7[0m @JS : Engine                   :invoke()                  Initializing context 
[36m2017-07-19 23:33:49.646 UTC [Composer] Debug -> DEBU 1de8[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42066d500} 0xc421176890
[36m2017-07-19 23:33:49.647 UTC [Composer] Debug -> DEBU 1de9[0m @JS : Context                  :initialize()              > 
[36m2017-07-19 23:33:49.647 UTC [Composer] Debug -> DEBU 1dea[0m Exiting NewDataCollection &{0xc4202fea68 0xc42066d500 $sysidentities}
[36m2017-07-19 23:33:49.647 UTC [Composer] Debug -> DEBU 1deb[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.647 UTC [Composer] Debug -> DEBU 1dec[0m Exiting Engine.Invoke 0xc4202ae300
[36m2017-07-19 23:33:49.647 UTC [Composer] Debug -> DEBU 1ded[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420176380} 0xc42112c3f0
[36m2017-07-19 23:33:49.647 UTC [Composer] Debug -> DEBU 1dee[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc4203b0680} 0xc421143f30
[36m2017-07-19 23:33:49.649 UTC [Composer] Debug -> DEBU 1df1[0m Exiting NewDataCollection &{0xc420028c80 0xc4203b0680 $sysidentities}
[36m2017-07-19 23:33:49.649 UTC [Composer] Debug -> DEBU 1df2[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.649 UTC [Composer] Debug -> DEBU 1df3[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1df4[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1df5[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1df6[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1df7[0m Entering IdentityService.getCurrentUserID &{0xc4202a2600}
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1df8[0m Entering extractNameFromCreator 0xc421177060
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1df9[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1dfa[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1dfb[0m Common Name admin
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1dfc[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1dfd[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1dfe[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.650 UTC [Composer] Debug -> DEBU 1dff[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e00[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e01[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e02[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e03[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e04[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e05[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e06[0m Entering Context.getEventService &{0xc4202a2600}
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e07[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e08[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e09[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e0a[0m Entering Context.getHTTPService &{0xc4202a2600}
[36m2017-07-19 23:33:49.651 UTC [Composer] Debug -> DEBU 1e0b[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.652 UTC [Composer] Debug -> DEBU 1e0c[0m @JS : Engine                   :invoke()                  Calling engine function submitTransaction
[36m2017-07-19 23:33:49.652 UTC [Composer] Debug -> DEBU 1e0d[0m @JS : EngineTransactions       :submitTransaction()       > [object Object], default,{"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#SZFYAIRVVP_c8","newOwner":"resource:org.example.mynetwork.Trader#SZFYAIRVVP_t0","transactionId":"24688b7b-1a2d-44aa-8f49-ce455b855919","timestamp":"2017-07-19T23:33:43.422Z"}
[36m2017-07-19 23:33:49.652 UTC [Composer] Debug -> DEBU 1e0e[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.652 UTC [Composer] Debug -> DEBU 1e0f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.652 UTC [Composer] Debug -> DEBU 1e10[0m @JS : EngineTransactions       :submitTransaction()       Parsing transaction from JSON 
[36m2017-07-19 23:33:49.652 UTC [Composer] Debug -> DEBU 1e11[0m @JS : EngineTransactions       :submitTransaction()       Parsing transaction from parsed JSON object 
[36m2017-07-19 23:33:49.647 UTC [Composer] Debug -> DEBU 1def[0m Entering NewDataCollection &{0xc4201cf6e0} &{0xc420028048 0xc42055e480} 0xc4210dc150
[36m2017-07-19 23:33:49.653 UTC [Composer] Debug -> DEBU 1e12[0m Exiting NewDataCollection &{0xc420142bb8 0xc42055e480 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.653 UTC [Composer] Debug -> DEBU 1e14[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.653 UTC [Composer] Debug -> DEBU 1e15[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#OJCRTKWKJU_c8, CREATE
[36m2017-07-19 23:33:49.654 UTC [Composer] Debug -> DEBU 1e16[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.654 UTC [Composer] Debug -> DEBU 1e17[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.647 UTC [Composer] Debug -> DEBU 1df0[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.654 UTC [Composer] Debug -> DEBU 1e18[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.654 UTC [Composer] Debug -> DEBU 1e19[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:49.654 UTC [Composer] Debug -> DEBU 1e1a[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e1b[0m Entering IdentityService.getCurrentUserID &{0xc420144940}
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e1c[0m Entering extractNameFromCreator 0xc4210c5190
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e1d[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e1e[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e20[0m Common Name admin
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e22[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e1f[0m Entering DataCollection.add &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e23[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.656 UTC [Composer] Debug -> DEBU 1e24[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.656 UTC [Composer] Debug -> DEBU 1e25[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.657 UTC [Composer] Debug -> DEBU 1e26[0m Exiting NewDataCollection &{0xc420142d10 0xc420176380 $sysdata}
[36m2017-07-19 23:33:49.657 UTC [Composer] Debug -> DEBU 1e27[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.655 UTC [Composer] Debug -> DEBU 1e21[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.657 UTC [Composer] Debug -> DEBU 1e29[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.657 UTC [Composer] Debug -> DEBU 1e2a[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.657 UTC [Composer] Debug -> DEBU 1e2b[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.658 UTC [Composer] Debug -> DEBU 1e2c[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.658 UTC [Composer] Debug -> DEBU 1e2d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.657 UTC [Composer] Debug -> DEBU 1e28[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.658 UTC [Composer] Debug -> DEBU 1e2e[0m @JS : TransactionLogger        :constructor()             > Resource {id=org.example.mynetwork.Trade#24688b7b-1a2d-44aa-8f49-ce455b855919}, [object Object], [object Object]
[36m2017-07-19 23:33:49.658 UTC [Composer] Debug -> DEBU 1e30[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.658 UTC [Composer] Debug -> DEBU 1e32[0m @JS : TransactionLogger        :constructor()             < 
[36m2017-07-19 23:33:49.658 UTC [Composer] Debug -> DEBU 1e33[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e34[0m @JS : EngineTransactions       :submitTransaction()       Parsed transaction, resolving it Resource {id=org.example.mynetwork.Trade#24688b7b-1a2d-44aa-8f49-ce455b855919}
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e35[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e36[0m @JS : Resolver                 :constructor()             > [object Object]
[36m2017-07-19 23:33:49.658 UTC [Composer] Debug -> DEBU 1e2f[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e37[0m @JS : Resolver                 :constructor()             < 
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e38[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e39[0m @JS : Resolver                 :resolve()                 > Resource {id=org.example.mynetwork.Trade#24688b7b-1a2d-44aa-8f49-ce455b855919}
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e3a[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e3c[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.659 UTC [Composer] Debug -> DEBU 1e3b[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trade#24688b7b-1a2d-44aa-8f49-ce455b855919}, [object Object]
[36m2017-07-19 23:33:49.660 UTC [Composer] Debug -> DEBU 1e3d[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.660 UTC [Composer] Debug -> DEBU 1e3e[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.660 UTC [Composer] Debug -> DEBU 1e3f[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.660 UTC [Composer] Debug -> DEBU 1e40[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property commodity
[36m2017-07-19 23:33:49.660 UTC [Composer] Debug -> DEBU 1e41[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.660 UTC [Composer] Debug -> DEBU 1e42[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Commodity#SZFYAIRVVP_c8}
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e43[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e44[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e45[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e46[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.653 UTC [Composer] Debug -> DEBU 1e13[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc4211a8500} 0xc4210ea1d0
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e48[0m Exiting NewDataCollection &{0xc420142ce8 0xc4211a8500 $sysregistries}
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e49[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e4a[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e4b[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e4c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e4d[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.658 UTC [Composer] Debug -> DEBU 1e31[0m @JS : Context                  :findBusinessNetworkDefinition() > [object Object]
[36m2017-07-19 23:33:49.662 UTC [Composer] Debug -> DEBU 1e4e[0m @JS : Context                  :findBusinessNetworkDefinition() Business network definition not specified, loading from world state 
[36m2017-07-19 23:33:49.662 UTC [Composer] Debug -> DEBU 1e4f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.662 UTC [Composer] Debug -> DEBU 1e50[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.662 UTC [Composer] Debug -> DEBU 1e51[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.662 UTC [Composer] Debug -> DEBU 1e52[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.661 UTC [Composer] Debug -> DEBU 1e47[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property newOwner
[36m2017-07-19 23:33:49.662 UTC [Composer] Debug -> DEBU 1e53[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Trader#SZFYAIRVVP_t0}
[36m2017-07-19 23:33:49.662 UTC [Composer] Debug -> DEBU 1e54[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property transactionId
[36m2017-07-19 23:33:49.663 UTC [Composer] Debug -> DEBU 1e55[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.663 UTC [Composer] Debug -> DEBU 1e56[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 24688b7b-1a2d-44aa-8f49-ce455b855919
[36m2017-07-19 23:33:49.663 UTC [Composer] Debug -> DEBU 1e57[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[36m2017-07-19 23:33:49.663 UTC [Composer] Debug -> DEBU 1e58[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property timestamp
[36m2017-07-19 23:33:49.663 UTC [Composer] Debug -> DEBU 1e59[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.663 UTC [Composer] Debug -> DEBU 1e5a[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.663 UTC [Composer] Debug -> DEBU 1e5b[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.663 UTC [Composer] Debug -> DEBU 1e5c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e5e[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e5f[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e60[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e61[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e5d[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e63[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e64[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e65[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e66[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e67[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e68[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e69[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.664 UTC [Composer] Debug -> DEBU 1e62[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 2017-07-19 23:33:43.422+00:00
[36m2017-07-19 23:33:49.665 UTC [Composer] Debug -> DEBU 1e6a[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Commodity#SZFYAIRVVP_c8}, [object Object]
[36m2017-07-19 23:33:49.665 UTC [Composer] Debug -> DEBU 1e6b[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Commodity#SZFYAIRVVP_c8}
[36m2017-07-19 23:33:49.665 UTC [Composer] Debug -> DEBU 1e6c[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Commodity super=Asset enum=false abstract=false}
[36m2017-07-19 23:33:49.665 UTC [Composer] Debug -> DEBU 1e6d[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.665 UTC [Composer] Debug -> DEBU 1e6e[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.666 UTC [Composer] Debug -> DEBU 1e6f[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.666 UTC [Composer] Debug -> DEBU 1e70[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.666 UTC [Composer] Debug -> DEBU 1e71[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.666 UTC [Composer] Debug -> DEBU 1e72[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.666 UTC [Composer] Debug -> DEBU 1e73[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.667 UTC [Composer] Debug -> DEBU 1e74[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.667 UTC [Composer] Debug -> DEBU 1e75[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.667 UTC [Composer] Debug -> DEBU 1e76[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.667 UTC [Composer] Debug -> DEBU 1e77[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e78[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e79[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e7a[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e7b[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e7c[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e7d[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e7e[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e7f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e80[0m Entering Context.getEventService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e81[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.668 UTC [Composer] Debug -> DEBU 1e82[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e83[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e84[0m Entering Context.getHTTPService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e85[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e86[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42111c380} 0xc4210ac430
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e89[0m Exiting NewDataCollection &{0xc420150fe8 0xc42111c380 $sysdata}
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e8a[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e8d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e8f[0m Entering Context.getEventService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e90[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e91[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e92[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e93[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e8b[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e87[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc42054ca80} 0xc42112d280
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e95[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420176380} 0xc4210ac800
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e94[0m Entering Context.getHTTPService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e97[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.671 UTC [Composer] Debug -> DEBU 1e98[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e8e[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.671 UTC [Composer] Debug -> DEBU 1e9a[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:49.671 UTC [Composer] Debug -> DEBU 1e9b[0m Exiting NewDataCollection &{0xc420028d38 0xc42054ca80 $sysdata}
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e8c[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc4211a8500} 0xc4210bd070
[36m2017-07-19 23:33:49.671 UTC [Composer] Debug -> DEBU 1e9c[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"YJMBGEOGSR_c8","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#YJMBGEOGSR_t2"}
[36m2017-07-19 23:33:49.670 UTC [Composer] Debug -> DEBU 1e96[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.671 UTC [Composer] Debug -> DEBU 1e9e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.671 UTC [Composer] Debug -> DEBU 1e99[0m Exiting NewDataCollection &{0xc420151070 0xc420176380 $sysdata}
[36m2017-07-19 23:33:49.672 UTC [Composer] Debug -> DEBU 1e9f[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.672 UTC [Composer] Debug -> DEBU 1ea0[0m Entering EventService.transactionCommit &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.672 UTC [Composer] Debug -> DEBU 1ea3[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.672 UTC [Composer] Debug -> DEBU 1ea1[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.672 UTC [Composer] Debug -> DEBU 1ea4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.672 UTC [Composer] Debug -> DEBU 1ea6[0m Entering DataCollection.get &{0xc420144940}
[36m2017-07-19 23:33:49.673 UTC [Composer] Debug -> DEBU 1ea7[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.669 UTC [Composer] Debug -> DEBU 1e88[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc420390c00} 0xc4210bcf90
[36m2017-07-19 23:33:49.671 UTC [Composer] Debug -> DEBU 1e9d[0m Exiting NewDataCollection &{0xc4202fec18 0xc4211a8500 $sysidentities}
[36m2017-07-19 23:33:49.673 UTC [Composer] Debug -> DEBU 1ea9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.672 UTC [Composer] Debug -> DEBU 1ea2[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.673 UTC [Composer] Debug -> DEBU 1eaa[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.673 UTC [Composer] Debug -> DEBU 1ea8[0m Exiting NewDataCollection &{0xc420142db0 0xc420390c00 $sysdata}
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eab[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eac[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.672 UTC [Composer] Debug -> DEBU 1ea5[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1ead[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eae[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eaf[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb1[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb2[0m Entering IdentityService.getCurrentUserID &{0xc4201455c0}
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb3[0m Entering extractNameFromCreator 0xc4210bd660
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb4[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb5[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb6[0m Common Name admin
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb7[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb8[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb9[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1eba[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ebc[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ebb[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ebd[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ebe[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ebf[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ec0[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.674 UTC [Composer] Debug -> DEBU 1eb0[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ec1[0m Entering Context.getDataService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ec2[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ec3[0m Entering Context.getEventService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ec4[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.675 UTC [Composer] Debug -> DEBU 1ec5[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ec6[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ec8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ec9[0m Entering Context.getEventService &{0xc4201455c0}
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1eca[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ecb[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ecc[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ecd[0m Entering Context.getHTTPService &{0xc4201455c0}
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ece[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ec7[0m Entering Context.getIdentityService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ecf[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ed0[0m Entering Context.getHTTPService &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ed1[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.676 UTC [Composer] Debug -> DEBU 1ed2[0m @JS : Engine                   :invoke()                  Calling engine function submitTransaction
[36m2017-07-19 23:33:49.678 UTC [Composer] Debug -> DEBU 1ed5[0m @JS : EngineTransactions       :submitTransaction()       > [object Object], default,{"$class":"org.example.mynetwork.Trade","commodity":"resource:org.example.mynetwork.Commodity#VKWCBHWYIZ_c8","newOwner":"resource:org.example.mynetwork.Trader#VKWCBHWYIZ_t1","transactionId":"a17330ce-96d0-41e9-aff6-01b2aec6fe45","timestamp":"2017-07-19T23:33:43.531Z"}
[36m2017-07-19 23:33:49.678 UTC [Composer] Debug -> DEBU 1ed7[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.678 UTC [Composer] Debug -> DEBU 1ed8[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.678 UTC [Composer] Debug -> DEBU 1ed9[0m @JS : EngineTransactions       :submitTransaction()       Parsing transaction from JSON 
[36m2017-07-19 23:33:49.678 UTC [Composer] Debug -> DEBU 1eda[0m @JS : EngineTransactions       :submitTransaction()       Parsing transaction from parsed JSON object 
[36m2017-07-19 23:33:49.677 UTC [Composer] Debug -> DEBU 1ed3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.678 UTC [Composer] Debug -> DEBU 1ed6[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc4203b0680} 0xc42106ebe0
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1edc[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1edd[0m Exiting NewDataCollection &{0xc420142e60 0xc4203b0680 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1ede[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1edf[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1ee0[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1ee1[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1edb[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1ee2[0m Entering DataService.getCollection &{0xc420144940}
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1ee3[0m @JS : TransactionLogger        :constructor()             > Resource {id=org.example.mynetwork.Trade#a17330ce-96d0-41e9-aff6-01b2aec6fe45}, [object Object], [object Object]
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1ee4[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:49.679 UTC [Composer] Debug -> DEBU 1ee5[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.680 UTC [Composer] Debug -> DEBU 1ee6[0m @JS : TransactionLogger        :constructor()             < 
[36m2017-07-19 23:33:49.677 UTC [Composer] Debug -> DEBU 1ed4[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.680 UTC [Composer] Debug -> DEBU 1eea[0m Entering Engine.handleCallback 0xc4211a6000 &{0xc4201cf6e0}
[36m2017-07-19 23:33:49.680 UTC [Composer] Debug -> DEBU 1eeb[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.681 UTC [Composer] Debug -> DEBU 1eec[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.681 UTC [Composer] Debug -> DEBU 1eed[0m Entering ComposerPool.Put &{0xc420028048 0xc4202c4d20 0xc4200285e0}
[36m2017-07-19 23:33:49.681 UTC [Composer] Debug -> DEBU 1eee[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.681 UTC [Composer] Debug -> DEBU 1eef[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.680 UTC [Composer] Debug -> DEBU 1ee8[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.681 UTC [Composer] Debug -> DEBU 1ef0[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.680 UTC [Composer] Debug -> DEBU 1ee9[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry SZFYAIRVVP_c8
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef1[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef2[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef3[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef4[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef5[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef6[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef7[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef8[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.680 UTC [Composer] Debug -> DEBU 1ee7[0m @JS : EngineTransactions       :submitTransaction()       Parsed transaction, resolving it Resource {id=org.example.mynetwork.Trade#a17330ce-96d0-41e9-aff6-01b2aec6fe45}
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1ef9[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1efa[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1efb[0m @JS : Resolver                 :constructor()             > [object Object]
[36m2017-07-19 23:33:49.682 UTC [Composer] Debug -> DEBU 1efc[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.683 UTC [Composer] Debug -> DEBU 1efd[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.683 UTC [Composer] Debug -> DEBU 1eff[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.683 UTC [Composer] Debug -> DEBU 1f00[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.683 UTC [Composer] Debug -> DEBU 1f01[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.683 UTC [Composer] Debug -> DEBU 1f02[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.683 UTC [Composer] Debug -> DEBU 1f03[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.683 UTC [Composer] Debug -> DEBU 1f04[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.684 UTC [Composer] Debug -> DEBU 1f05[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.684 UTC [Composer] Debug -> DEBU 1f06[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.684 UTC [Composer] Debug -> DEBU 1f07[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.684 UTC [Composer] Debug -> DEBU 1f08[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.685 UTC [Composer] Debug -> DEBU 1f0c[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.685 UTC [Composer] Debug -> DEBU 1f0d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.685 UTC [Composer] Debug -> DEBU 1f0e[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.684 UTC [Composer] Debug -> DEBU 1f0a[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.683 UTC [Composer] Debug -> DEBU 1efe[0m @JS : Resolver                 :constructor()             < 
[36m2017-07-19 23:33:49.686 UTC [Composer] Debug -> DEBU 1f0f[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.685 UTC [Composer] Debug -> DEBU 1f0b[0m Entering NewDataCollection &{0xc420144940} &{0xc420142268 0xc42066d500} 0xc42106fab0
[36m2017-07-19 23:33:49.687 UTC [Composer] Debug -> DEBU 1f11[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.684 UTC [Composer] Debug -> DEBU 1f09[0m @JS : Context                  :loadBusinessNetworkDefinition() > 
[36m2017-07-19 23:33:49.687 UTC [Composer] Debug -> DEBU 1f10[0m Exiting NewDataCollection &{0xc420142f08 0xc42066d500 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.687 UTC [Composer] Debug -> DEBU 1f14[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.687 UTC [Composer] Debug -> DEBU 1f15[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#YJMBGEOGSR_c8, CREATE
[36m2017-07-19 23:33:49.687 UTC [Composer] Debug -> DEBU 1f16[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.688 UTC [Composer] Debug -> DEBU 1f17[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.688 UTC [Composer] Debug -> DEBU 1f18[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.687 UTC [Composer] Debug -> DEBU 1f13[0m @JS : Context                  :loadBusinessNetworkDefinition() Looking in cache for business network d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.689 UTC [Composer] Debug -> DEBU 1f19[0m @JS : Resolver                 :resolve()                 > Resource {id=org.example.mynetwork.Trade#a17330ce-96d0-41e9-aff6-01b2aec6fe45}
[36m2017-07-19 23:33:49.689 UTC [Composer] Debug -> DEBU 1f1a[0m @JS : Context                  :loadBusinessNetworkDefinition() Business network is in cache 
[31m2017-07-19 23:33:49.689 UTC [Composer] Error -> ERRO 1f1b[0m @JS : Resolver                 :resolveRelationship()     Failed to resolve relationship [object Object]
[36m2017-07-19 23:33:49.689 UTC [Composer] Debug -> DEBU 1f1c[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trade#a17330ce-96d0-41e9-aff6-01b2aec6fe45}, [object Object]
[36m2017-07-19 23:33:49.689 UTC [Composer] Debug -> DEBU 1f1d[0m @JS : Context                  :findBusinessNetworkDefinition() < [object Object]
[36m2017-07-19 23:33:49.689 UTC [Composer] Debug -> DEBU 1f1e[0m @JS : Context                  :initialize()              Got business network archive 
[36m2017-07-19 23:33:49.689 UTC [Composer] Debug -> DEBU 1f1f[0m @JS : InvalidRelationship      :constructor()             > Relationship {id=org.example.mynetwork.Commodity#SZFYAIRVVP_c8}, [object Object]
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f20[0m @JS : Context                  :findCompiledScriptBundle() > [object Object]
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f21[0m @JS : InvalidRelationship      :constructor()             Defining identifier property tradingSymbol
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f22[0m @JS : Context                  :findCompiledScriptBundle() Compiled script bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f23[0m Entering DataCollection.add &{0xc420144940}
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f24[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property commodity
[36m2017-07-19 23:33:49.687 UTC [Composer] Debug -> DEBU 1f12[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f25[0m @JS : InvalidRelationship      :constructor()             Defining invalid property description
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f27[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f28[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f29[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f2a[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f2b[0m @JS : InvalidRelationship      :constructor()             Defining invalid property mainExchange
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f2c[0m @JS : InvalidRelationship      :constructor()             Defining invalid property quantity
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f2d[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42111c380} 0xc4206522a0
[36m2017-07-19 23:33:49.690 UTC [Composer] Debug -> DEBU 1f26[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f2e[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420176380} 0xc42066e310
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f2f[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f31[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f32[0m Exiting NewDataCollection &{0xc4202fee78 0xc42111c380 $sysdata}
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f30[0m Exiting NewDataCollection &{0xc420151148 0xc420176380 $sysdata}
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f34[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f36[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Commodity#VKWCBHWYIZ_c8}
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f37[0m @JS : InvalidRelationship      :constructor()             Defining invalid property owner
[36m2017-07-19 23:33:49.692 UTC [Composer] Debug -> DEBU 1f38[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.692 UTC [Composer] Debug -> DEBU 1f39[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f33[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.692 UTC [Composer] Debug -> DEBU 1f3a[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.692 UTC [Composer] Debug -> DEBU 1f3b[0m @JS : InvalidRelationship      :constructor()             < 
[36m2017-07-19 23:33:49.691 UTC [Composer] Debug -> DEBU 1f35[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.693 UTC [Composer] Debug -> DEBU 1f3d[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.693 UTC [Composer] Debug -> DEBU 1f3f[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:49.693 UTC [Composer] Debug -> DEBU 1f3c[0m @JS : Resolver                 :resolveRelationship()     < Relationship {id=org.example.mynetwork.Commodity#SZFYAIRVVP_c8}
[36m2017-07-19 23:33:49.693 UTC [Composer] Debug -> DEBU 1f40[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Trader#SZFYAIRVVP_t0}, [object Object]
[36m2017-07-19 23:33:49.694 UTC [Composer] Debug -> DEBU 1f41[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Trader#SZFYAIRVVP_t0}
[36m2017-07-19 23:33:49.694 UTC [Composer] Debug -> DEBU 1f42[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Trader super=Participant enum=false abstract=false}
[36m2017-07-19 23:33:49.695 UTC [Composer] Debug -> DEBU 1f43[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Trader
[36m2017-07-19 23:33:49.695 UTC [Composer] Debug -> DEBU 1f44[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.693 UTC [Composer] Debug -> DEBU 1f3e[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property newOwner
[36m2017-07-19 23:33:49.697 UTC [Composer] Debug -> DEBU 1f45[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc420390c00} 0xc421043160
[36m2017-07-19 23:33:49.697 UTC [Composer] Debug -> DEBU 1f46[0m Exiting NewDataCollection &{0xc420028e70 0xc420390c00 $sysdata}
[36m2017-07-19 23:33:49.697 UTC [Composer] Debug -> DEBU 1f47[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.697 UTC [Composer] Debug -> DEBU 1f48[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is a relationship, resolving Relationship {id=org.example.mynetwork.Trader#VKWCBHWYIZ_t1}
[36m2017-07-19 23:33:49.698 UTC [Composer] Debug -> DEBU 1f49[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property transactionId
[36m2017-07-19 23:33:49.698 UTC [Composer] Debug -> DEBU 1f4a[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.698 UTC [Composer] Debug -> DEBU 1f4b[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.698 UTC [Composer] Debug -> DEBU 1f4c[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:49.698 UTC [Composer] Debug -> DEBU 1f4d[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring a17330ce-96d0-41e9-aff6-01b2aec6fe45
[36m2017-07-19 23:33:49.698 UTC [Composer] Debug -> DEBU 1f4e[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property timestamp
[36m2017-07-19 23:33:49.698 UTC [Composer] Debug -> DEBU 1f4f[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.701 UTC [Composer] Debug -> DEBU 1f53[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.701 UTC [Composer] Debug -> DEBU 1f54[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.701 UTC [Composer] Debug -> DEBU 1f55[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:49.701 UTC [Composer] Debug -> DEBU 1f56[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.701 UTC [Composer] Debug -> DEBU 1f57[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:49.701 UTC [Composer] Debug -> DEBU 1f58[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.701 UTC [Composer] Debug -> DEBU 1f59[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:49.702 UTC [Composer] Debug -> DEBU 1f5a[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.699 UTC [Composer] Debug -> DEBU 1f50[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring 2017-07-19 23:33:43.531+00:00
[36m2017-07-19 23:33:49.703 UTC [Composer] Debug -> DEBU 1f5b[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.703 UTC [Composer] Debug -> DEBU 1f5c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.703 UTC [Composer] Debug -> DEBU 1f5d[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:49.703 UTC [Composer] Debug -> DEBU 1f5e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.703 UTC [Composer] Debug -> DEBU 1f5f[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:49.703 UTC [Composer] Debug -> DEBU 1f60[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.703 UTC [Composer] Debug -> DEBU 1f61[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:49.703 UTC [Composer] Debug -> DEBU 1f62[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.700 UTC [Composer] Debug -> DEBU 1f51[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc42054ca80} 0xc420652ef0
[36m2017-07-19 23:33:49.704 UTC [Composer] Debug -> DEBU 1f63[0m Exiting NewDataCollection &{0xc4201511a0 0xc42054ca80 $sysdata}
[36m2017-07-19 23:33:49.704 UTC [Composer] Debug -> DEBU 1f64[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.704 UTC [Composer] Debug -> DEBU 1f65[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.704 UTC [Composer] Debug -> DEBU 1f66[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.700 UTC [Composer] Debug -> DEBU 1f52[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.704 UTC [Composer] Debug -> DEBU 1f67[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.705 UTC [Composer] Debug -> DEBU 1f68[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.705 UTC [Composer] Debug -> DEBU 1f69[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.705 UTC [Composer] Debug -> DEBU 1f6a[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.705 UTC [Composer] Debug -> DEBU 1f6b[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Commodity#VKWCBHWYIZ_c8}, [object Object]
[36m2017-07-19 23:33:49.705 UTC [Composer] Debug -> DEBU 1f6e[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Commodity#VKWCBHWYIZ_c8}
[36m2017-07-19 23:33:49.706 UTC [Composer] Debug -> DEBU 1f6f[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Commodity super=Asset enum=false abstract=false}
[36m2017-07-19 23:33:49.706 UTC [Composer] Debug -> DEBU 1f70[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Commodity
[36m2017-07-19 23:33:49.706 UTC [Composer] Debug -> DEBU 1f71[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.705 UTC [Composer] Debug -> DEBU 1f6c[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.707 UTC [Composer] Debug -> DEBU 1f72[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.707 UTC [Composer] Debug -> DEBU 1f73[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.707 UTC [Composer] Debug -> DEBU 1f74[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.708 UTC [Composer] Debug -> DEBU 1f75[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.708 UTC [Composer] Debug -> DEBU 1f76[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.708 UTC [Composer] Debug -> DEBU 1f77[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.708 UTC [Composer] Debug -> DEBU 1f78[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.708 UTC [Composer] Debug -> DEBU 1f79[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.709 UTC [Composer] Debug -> DEBU 1f7a[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.709 UTC [Composer] Debug -> DEBU 1f7b[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.709 UTC [Composer] Debug -> DEBU 1f7c[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.705 UTC [Composer] Debug -> DEBU 1f6d[0m Entering EventService.transactionCommit &{0xc420144940}
[36m2017-07-19 23:33:49.709 UTC [Composer] Debug -> DEBU 1f7d[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.709 UTC [Composer] Debug -> DEBU 1f7e[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.709 UTC [Composer] Debug -> DEBU 1f7f[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.709 UTC [Composer] Debug -> DEBU 1f80[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.709 UTC [Composer] Debug -> DEBU 1f81[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.710 UTC [Composer] Debug -> DEBU 1f82[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.710 UTC [Composer] Debug -> DEBU 1f83[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.710 UTC [Composer] Debug -> DEBU 1f84[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.710 UTC [Composer] Debug -> DEBU 1f85[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.712 UTC [Composer] Debug -> DEBU 1f8a[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420176380} 0xc42066f570
[36m2017-07-19 23:33:49.712 UTC [Composer] Debug -> DEBU 1f8b[0m Exiting NewDataCollection &{0xc420151240 0xc420176380 $sysregistries}
[36m2017-07-19 23:33:49.712 UTC [Composer] Debug -> DEBU 1f8c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f8d[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.710 UTC [Composer] Debug -> DEBU 1f87[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f8e[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f8f[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f91[0m Entering DataService.getCollection &{0xc4202a2600}
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f90[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f92[0m Entering DataService.getCollection &{0xc420141340}
[36m2017-07-19 23:33:49.710 UTC [Composer] Debug -> DEBU 1f88[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f93[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f94[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.713 UTC [Composer] Debug -> DEBU 1f95[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f96[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f97[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f98[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.710 UTC [Composer] Debug -> DEBU 1f89[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f99[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f9a[0m @JS : Context                  :loadCompiledScriptBundle() > 
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f9c[0m @JS : Context                  :loadCompiledScriptBundle() Looking in cache for compiled script bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f9d[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f9e[0m @JS : Context                  :loadCompiledScriptBundle() Compiled script bundle is in cache 
[36m2017-07-19 23:33:49.710 UTC [Composer] Debug -> DEBU 1f86[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f9f[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1fa0[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.715 UTC [Composer] Debug -> DEBU 1fa2[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.715 UTC [Composer] Debug -> DEBU 1fa1[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.714 UTC [Composer] Debug -> DEBU 1f9b[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.715 UTC [Composer] Debug -> DEBU 1fa3[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.715 UTC [Composer] Debug -> DEBU 1fa4[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1fa5[0m Entering Context.getDataService &{0xc420144940}
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1fa6[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1fa7[0m Entering Context.getEventService &{0xc420144940}
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1fa8[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1faa[0m Entering Context.getIdentityService &{0xc420144940}
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1fab[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1fac[0m Entering Context.getHTTPService &{0xc420144940}
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1fad[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.717 UTC [Composer] Debug -> DEBU 1fae[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.717 UTC [Composer] Debug -> DEBU 1faf[0m Entering Engine.handleCallback 0xc4210b48a0 &{0xc420144940}
[36m2017-07-19 23:33:49.717 UTC [Composer] Debug -> DEBU 1fb0[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.717 UTC [Composer] Debug -> DEBU 1fb1[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.717 UTC [Composer] Debug -> DEBU 1fb2[0m Entering ComposerPool.Put &{0xc420142268 0xc4203e40f0 0xc420142458}
[36m2017-07-19 23:33:49.717 UTC [Composer] Debug -> DEBU 1fb3[0m Exiting ComposerPool.Put true
[36m2017-07-19 23:33:49.717 UTC [Composer] Debug -> DEBU 1fb4[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.716 UTC [Composer] Debug -> DEBU 1fa9[0m @JS : Context                  :findCompiledScriptBundle() < [object Object]
[36m2017-07-19 23:33:49.718 UTC [Composer] Debug -> DEBU 1fb5[0m @JS : Context                  :initialize()              Got compiled script bundle 
[36m2017-07-19 23:33:49.718 UTC [Composer] Debug -> DEBU 1fb6[0m @JS : Context                  :findCompiledQueryBundle() > [object Object]
[36m2017-07-19 23:33:49.718 UTC [Composer] Debug -> DEBU 1fb7[0m @JS : Context                  :findCompiledQueryBundle() Compiled query bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.718 UTC [Composer] Debug -> DEBU 1fb8[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.718 UTC [Composer] Debug -> DEBU 1fb9[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.718 UTC [Composer] Debug -> DEBU 1fba[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.718 UTC [Composer] Debug -> DEBU 1fbb[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.719 UTC [Composer] Debug -> DEBU 1fbc[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420176380} 0xc4205fc2e0
[36m2017-07-19 23:33:49.719 UTC [Composer] Debug -> DEBU 1fbd[0m Exiting NewDataCollection &{0xc4201430f0 0xc420176380 $sysidentities}
[36m2017-07-19 23:33:49.719 UTC [Composer] Debug -> DEBU 1fbe[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fbf[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc0[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc1[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc2[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc3[0m Entering IdentityService.getCurrentUserID &{0xc420141340}
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc4[0m Entering extractNameFromCreator 0xc4205fc8d0
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc5[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc6[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc7[0m Common Name admin
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc8[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fc9[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.720 UTC [Composer] Debug -> DEBU 1fca[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fcb[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fcc[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc42054ca80} 0xc42062c380
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fce[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fcf[0m Exiting NewDataCollection &{0xc4201512c0 0xc42054ca80 $sysdata}
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd0[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd1[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd2[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd3[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd4[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd5[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd6[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd7[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd8[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fd9[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fcd[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc4211a8500} 0xc420610940
[36m2017-07-19 23:33:49.722 UTC [Composer] Debug -> DEBU 1fdb[0m Exiting NewDataCollection &{0xc4202ff0e0 0xc4211a8500 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.721 UTC [Composer] Debug -> DEBU 1fda[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.722 UTC [Composer] Debug -> DEBU 1fdc[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.722 UTC [Composer] Debug -> DEBU 1fdd[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.722 UTC [Composer] Debug -> DEBU 1fde[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:49.722 UTC [Composer] Debug -> DEBU 1fdf[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.723 UTC [Composer] Debug -> DEBU 1fe0[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.723 UTC [Composer] Debug -> DEBU 1fe1[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"NNUWETYFKH_c12","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#NNUWETYFKH_t0"}
[36m2017-07-19 23:33:49.723 UTC [Composer] Debug -> DEBU 1fe2[0m Entering NewDataCollection &{0xc4202a2600} &{0xc420150160 0xc4203b0680} 0xc420610f40
[36m2017-07-19 23:33:49.723 UTC [Composer] Debug -> DEBU 1fe3[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.723 UTC [Composer] Debug -> DEBU 1fe4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.723 UTC [Composer] Debug -> DEBU 1fe5[0m Entering DataCollection.get &{0xc420141340}
[36m2017-07-19 23:33:49.724 UTC [Composer] Debug -> DEBU 1fe6[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:49.724 UTC [Composer] Debug -> DEBU 1fe7[0m Exiting NewDataCollection &{0xc420028ea0 0xc4203b0680 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.724 UTC [Composer] Debug -> DEBU 1fe8[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry VKWCBHWYIZ_c8
[36m2017-07-19 23:33:49.724 UTC [Composer] Debug -> DEBU 1fea[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.724 UTC [Composer] Debug -> DEBU 1fe9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.725 UTC [Composer] Debug -> DEBU 1feb[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:49.725 UTC [Composer] Debug -> DEBU 1fec[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry SZFYAIRVVP_t0
[36m2017-07-19 23:33:49.725 UTC [Composer] Debug -> DEBU 1fed[0m Entering DataCollection.get &{0xc4202a2600}
[36m2017-07-19 23:33:49.730 UTC [Composer] Debug -> DEBU 1fee[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc420390c00} 0xc4205c2350
[36m2017-07-19 23:33:49.730 UTC [Composer] Debug -> DEBU 1fef[0m Exiting NewDataCollection &{0xc420028ee8 0xc420390c00 $sysdata}
[36m2017-07-19 23:33:49.730 UTC [Composer] Debug -> DEBU 1ff0[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.730 UTC [Composer] Debug -> DEBU 1ff1[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.730 UTC [Composer] Debug -> DEBU 1ff2[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:49.731 UTC [Composer] Debug -> DEBU 1ff3[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42111c380} 0xc42062cb70
[36m2017-07-19 23:33:49.731 UTC [Composer] Debug -> DEBU 1ff4[0m Exiting NewDataCollection &{0xc420028eb0 0xc42111c380 $sysdata}
[36m2017-07-19 23:33:49.732 UTC [Composer] Debug -> DEBU 1ff5[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.732 UTC [Composer] Debug -> DEBU 1ff6[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.732 UTC [Composer] Debug -> DEBU 1ff7[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:49.735 UTC [Composer] Debug -> DEBU 1ff8[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.736 UTC [Composer] Debug -> DEBU 1ff9[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.736 UTC [Composer] Debug -> DEBU 1ffa[0m Entering DataService.getCollection &{0xc420141340}
[31m2017-07-19 23:33:49.736 UTC [Composer] Error -> ERRO 1ffb[0m @JS : Resolver                 :resolveRelationship()     Failed to resolve relationship [object Object]
[36m2017-07-19 23:33:49.737 UTC [Composer] Debug -> DEBU 1ffc[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.737 UTC [Composer] Debug -> DEBU 1ffd[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#SZFYAIRVVP_t0, READ
[36m2017-07-19 23:33:49.738 UTC [Composer] Debug -> DEBU 1ffe[0m @JS : InvalidRelationship      :constructor()             > Relationship {id=org.example.mynetwork.Commodity#VKWCBHWYIZ_c8}, [object Object]
[36m2017-07-19 23:33:49.738 UTC [Composer] Debug -> DEBU 1fff[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.738 UTC [Composer] Debug -> DEBU 2000[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.738 UTC [Composer] Debug -> DEBU 2001[0m @JS : InvalidRelationship      :constructor()             Defining identifier property tradingSymbol
[36m2017-07-19 23:33:49.739 UTC [Composer] Debug -> DEBU 2002[0m @JS : Resolver                 :resolveRelationship()     Got resource from registry, resolving 
[36m2017-07-19 23:33:49.739 UTC [Composer] Debug -> DEBU 2003[0m @JS : InvalidRelationship      :constructor()             Defining invalid property description
[36m2017-07-19 23:33:49.739 UTC [Composer] Debug -> DEBU 2004[0m @JS : InvalidRelationship      :constructor()             Defining invalid property mainExchange
[36m2017-07-19 23:33:49.739 UTC [Composer] Debug -> DEBU 2005[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trader#SZFYAIRVVP_t0}, [object Object]
[36m2017-07-19 23:33:49.739 UTC [Composer] Debug -> DEBU 2006[0m @JS : InvalidRelationship      :constructor()             Defining invalid property quantity
[36m2017-07-19 23:33:49.740 UTC [Composer] Debug -> DEBU 2007[0m Entering NewDataCollection &{0xc420141340} &{0xc420150150 0xc420176380} 0xc420611f70
[36m2017-07-19 23:33:49.746 UTC [Composer] Debug -> DEBU 200b[0m @JS : InvalidRelationship      :constructor()             Defining invalid property owner
[36m2017-07-19 23:33:49.746 UTC [Composer] Debug -> DEBU 200c[0m Exiting NewDataCollection &{0xc420143240 0xc420176380 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.743 UTC [Composer] Debug -> DEBU 2009[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.746 UTC [Composer] Debug -> DEBU 200d[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property tradeId
[36m2017-07-19 23:33:49.746 UTC [Composer] Debug -> DEBU 200f[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring SZFYAIRVVP_t0
[36m2017-07-19 23:33:49.746 UTC [Composer] Debug -> DEBU 2010[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.746 UTC [Composer] Debug -> DEBU 2011[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property firstName
[36m2017-07-19 23:33:49.746 UTC [Composer] Debug -> DEBU 2012[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 2013[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Testing
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 2014[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 2015[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property lastName
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 2016[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 2017[0m @JS : InvalidRelationship      :constructor()             < 
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 2018[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Test
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 2019[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 201a[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trader#SZFYAIRVVP_t0}
[36m2017-07-19 23:33:49.743 UTC [Composer] Debug -> DEBU 200a[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 201b[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.747 UTC [Composer] Debug -> DEBU 201c[0m @JS : Resolver                 :resolveRelationship()     < Relationship {id=org.example.mynetwork.Commodity#VKWCBHWYIZ_c8}
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 201d[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 201e[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.743 UTC [Composer] Debug -> DEBU 2008[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 201f[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2020[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2021[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.746 UTC [Composer] Debug -> DEBU 200e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2022[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2023[0m @JS : Context                  :loadCompiledQueryBundle() > 
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2024[0m @JS : Resolver                 :resolveRelationship()     < Resource {id=org.example.mynetwork.Trader#SZFYAIRVVP_t0}
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2025[0m @JS : Context                  :loadCompiledQueryBundle() Looking in cache for compiled query bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2026[0m @JS : Context                  :loadCompiledQueryBundle() Compiled query bundle is in cache 
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2027[0m @JS : Resolver                 :resolveRelationship()     > Relationship {id=org.example.mynetwork.Trader#VKWCBHWYIZ_t1}, [object Object]
[36m2017-07-19 23:33:49.748 UTC [Composer] Debug -> DEBU 2028[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 2029[0m @JS : Context                  :findCompiledQueryBundle() < [object Object]
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 202a[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#NNUWETYFKH_c12, CREATE
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 202b[0m @JS : Context                  :initialize()              Got compiled query bundle 
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 202c[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trade#24688b7b-1a2d-44aa-8f49-ce455b855919}
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 202d[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 202e[0m @JS : Context                  :findCompiledAclBundle()   > [object Object]
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 202f[0m @JS : Resolver                 :resolve()                 < Resource {id=org.example.mynetwork.Trade#24688b7b-1a2d-44aa-8f49-ce455b855919}
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 2030[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 2033[0m @JS : Resolver                 :getRegistryForRelationship() > Relationship {id=org.example.mynetwork.Trader#VKWCBHWYIZ_t1}
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 2031[0m @JS : Context                  :findCompiledAclBundle()   Compiled ACL bundle not specified, loading from world state 
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 2034[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 2035[0m @JS : Context                  :loadBusinessNetworkRecord() > 
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 2036[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 2037[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 2038[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 2039[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 203a[0m @JS : Resolver                 :getRegistryForRelationship() Got class declaration ClassDeclaration {id=org.example.mynetwork.Trader super=Participant enum=false abstract=false}
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 203b[0m @JS : Resolver                 :getRegistryForRelationship() Getting registry org.example.mynetwork.Trader
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 203c[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.750 UTC [Composer] Debug -> DEBU 203d[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 203e[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 203f[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2040[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2041[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2042[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.749 UTC [Composer] Debug -> DEBU 2032[0m @JS : Api                      :constructor()             > [object Object]
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2043[0m Entering Context.getHTTPService &{0xc4202a2600}
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2044[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2045[0m Entering Context.getEventService &{0xc4202a2600}
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2046[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2047[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2048[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 2049[0m Entering DataCollection.add &{0xc420141340}
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 204a[0m @JS : Api                      :constructor()             < 
[36m2017-07-19 23:33:49.751 UTC [Composer] Debug -> DEBU 204b[0m @JS : CompiledScriptBundle     :execute()                 > [object Object], Resource {id=org.example.mynetwork.Trade#24688b7b-1a2d-44aa-8f49-ce455b855919}
[36m2017-07-19 23:33:49.752 UTC [Composer] Debug -> DEBU 204c[0m @JS : CompiledScriptBundle     :findFunctionNames()       > Resource {id=org.example.mynetwork.Trade#24688b7b-1a2d-44aa-8f49-ce455b855919}
[36m2017-07-19 23:33:49.752 UTC [Composer] Debug -> DEBU 204d[0m @JS : CompiledScriptBundle     :findFunctionNames()       Looking at function declaration tradeCommodity
[36m2017-07-19 23:33:49.752 UTC [Composer] Debug -> DEBU 204e[0m @JS : CompiledScriptBundle     :findFunctionNames()       Function is annotated with @transaction 
[36m2017-07-19 23:33:49.752 UTC [Composer] Debug -> DEBU 204f[0m @JS : CompiledScriptBundle     :findFunctionNames()       Function parameter type matches transaction 
[36m2017-07-19 23:33:49.752 UTC [Composer] Debug -> DEBU 2050[0m @JS : CompiledScriptBundle     :findFunctionNames()       < tradeCommodity
[36m2017-07-19 23:33:49.752 UTC [Composer] Debug -> DEBU 2051[0m @JS : CompiledScriptBundle     :execute()                 Executing function tradeCommodity
[31m2017-07-19 23:33:49.754 UTC [Composer] Error -> ERRO 2052[0m @JS : Engine                   :invoke()                  Caught error, rethrowing [object Object]
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 2053[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 2054[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 2055[0m Entering Context.getEventService &{0xc4202a2600}
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 2056[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 2057[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 2058[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 2059[0m Entering Context.getHTTPService &{0xc4202a2600}
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 205a[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 205b[0m Entering Context.getDataService &{0xc4202a2600}
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 205c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 205d[0m Entering Context.getEventService &{0xc4202a2600}
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 205e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 205f[0m Entering Context.getIdentityService &{0xc4202a2600}
[36m2017-07-19 23:33:49.754 UTC [Composer] Debug -> DEBU 2060[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.755 UTC [Composer] Debug -> DEBU 2061[0m Entering Context.getHTTPService &{0xc4202a2600}
[36m2017-07-19 23:33:49.755 UTC [Composer] Debug -> DEBU 2062[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.755 UTC [Composer] Debug -> DEBU 2063[0m Entering Engine.handleCallback 0xc4211a7560 &{0xc4202a2600}
[36m2017-07-19 23:33:49.755 UTC [Composer] Debug -> DEBU 2064[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.755 UTC [Composer] Debug -> DEBU 2065[0m Exiting Composer.Invoke  Error: Object with ID 'SZFYAIRVVP_c8' in collection with ID 'Asset:org.example.mynetwork.Commodity' does not exist
[36m2017-07-19 23:33:49.755 UTC [Composer] Debug -> DEBU 2066[0m Entering ComposerPool.Put &{0xc420150160 0xc420366870 0xc4200284f8}
[36m2017-07-19 23:33:49.755 UTC [Composer] Debug -> DEBU 2067[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.755 UTC [Composer] Debug -> DEBU 2068[0m Exiting Chaincode.Invoke 500 Error: Object with ID 'SZFYAIRVVP_c8' in collection with ID 'Asset:org.example.mynetwork.Commodity' does not exist 
[36m2017-07-19 23:33:49.758 UTC [Composer] Debug -> DEBU 2069[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc42054ca80} 0xc4205b70a0
[36m2017-07-19 23:33:49.758 UTC [Composer] Debug -> DEBU 206a[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42111c380} 0xc42062de40
[36m2017-07-19 23:33:49.758 UTC [Composer] Debug -> DEBU 206b[0m Exiting NewDataCollection &{0xc4201433a0 0xc42054ca80 $sysregistries}
[36m2017-07-19 23:33:49.758 UTC [Composer] Debug -> DEBU 206c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.758 UTC [Composer] Debug -> DEBU 206d[0m Exiting NewDataCollection &{0xc4202ff190 0xc42111c380 $sysregistries}
[36m2017-07-19 23:33:49.758 UTC [Composer] Debug -> DEBU 206e[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.758 UTC [Composer] Debug -> DEBU 206f[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.759 UTC [Composer] Debug -> DEBU 2070[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.759 UTC [Composer] Debug -> DEBU 2071[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.759 UTC [Composer] Debug -> DEBU 2072[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.760 UTC [Composer] Debug -> DEBU 2073[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.760 UTC [Composer] Debug -> DEBU 2074[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.760 UTC [Composer] Debug -> DEBU 2075[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 2076[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 2077[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 2078[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 2079[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 207a[0m Entering DataService.getCollection &{0xc4201455c0}
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 207b[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 207c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 207d[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 207e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 207f[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 2080[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 2081[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:49.761 UTC [Composer] Debug -> DEBU 2082[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 2083[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc42054ca80} 0xc4205b7b20
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 2084[0m Exiting NewDataCollection &{0xc4201433c8 0xc42054ca80 $sysidentities}
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 2085[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 2086[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 2087[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 2088[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 2089[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 208a[0m Entering IdentityService.getCurrentUserID &{0xc4201450e0}
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 208b[0m Entering extractNameFromCreator 0xc420550170
[36m2017-07-19 23:33:49.762 UTC [Composer] Debug -> DEBU 208c[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.763 UTC [Composer] Debug -> DEBU 208d[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.763 UTC [Composer] Debug -> DEBU 208e[0m Common Name admin
[36m2017-07-19 23:33:49.763 UTC [Composer] Debug -> DEBU 208f[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.763 UTC [Composer] Debug -> DEBU 2090[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.763 UTC [Composer] Debug -> DEBU 2091[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.763 UTC [Composer] Debug -> DEBU 2092[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.763 UTC [Composer] Debug -> DEBU 2093[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.763 UTC [Composer] Debug -> DEBU 2094[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 2095[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 2096[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 2097[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 2098[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 2099[0m Entering Context.getEventService &{0xc4201450e0}
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 209a[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 209b[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 209c[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 209d[0m Entering Context.getHTTPService &{0xc4201450e0}
[36m2017-07-19 23:33:49.764 UTC [Composer] Debug -> DEBU 209e[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.765 UTC [Composer] Debug -> DEBU 209f[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.765 UTC [Composer] Debug -> DEBU 20a0[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Participant,org.example.mynetwork.Trader,{"$class":"org.example.mynetwork.Trader","tradeId":"QREJIOVSAJ_t6","firstName":"Testing","lastName":"Test"}
[36m2017-07-19 23:33:49.765 UTC [Composer] Debug -> DEBU 20a1[0m Entering NewDataCollection &{0xc4201455c0} &{0xc420142280 0xc4211a8500} 0xc420551900
[36m2017-07-19 23:33:49.765 UTC [Composer] Debug -> DEBU 20a2[0m Exiting NewDataCollection &{0xc4201433d8 0xc4211a8500 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.765 UTC [Composer] Debug -> DEBU 20a3[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.765 UTC [Composer] Debug -> DEBU 20a4[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc420390c00} 0xc420568400
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20a5[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20a6[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20a7[0m Entering DataCollection.get &{0xc4201450e0}
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20a8[0m Exiting NewDataCollection &{0xc4202ff1f8 0xc420390c00 $sysdata}
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20a9[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20aa[0m @JS : Context                  :loadBusinessNetworkRecord() Getting business network archive from the $sysdata collection 
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20ab[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20ac[0m @JS : Resolver                 :getRegistryForRelationship() < [object Object]
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20ad[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20ae[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20af[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20b0[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20b1[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20b2[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20b3[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:49.766 UTC [Composer] Debug -> DEBU 20b4[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.767 UTC [Composer] Debug -> DEBU 20b5[0m @JS : Resolver                 :resolveRelationship()     Getting resource in registry VKWCBHWYIZ_t1
[36m2017-07-19 23:33:49.767 UTC [Composer] Debug -> DEBU 20b6[0m Entering DataCollection.get &{0xc4201455c0}
[36m2017-07-19 23:33:49.767 UTC [Composer] Debug -> DEBU 20b7[0m Entering EventService.transactionCommit &{0xc420141340}
[36m2017-07-19 23:33:49.767 UTC [Composer] Debug -> DEBU 20b8[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.767 UTC [Composer] Debug -> DEBU 20b9[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.767 UTC [Composer] Debug -> DEBU 20ba[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.767 UTC [Composer] Debug -> DEBU 20bb[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20bc[0m Entering Context.getDataService &{0xc420141340}
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20bd[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20be[0m Entering Context.getEventService &{0xc420141340}
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20bf[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20c0[0m Entering Context.getIdentityService &{0xc420141340}
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20c1[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20c2[0m Entering Context.getHTTPService &{0xc420141340}
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20c3[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20c4[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42111c380} 0xc4205687c0
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20c5[0m Exiting NewDataCollection &{0xc4201513a8 0xc42111c380 $sysidentities}
[36m2017-07-19 23:33:49.768 UTC [Composer] Debug -> DEBU 20c6[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20c7[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20c8[0m Entering Engine.handleCallback 0xc421212000 &{0xc420141340}
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20c9[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20ca[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20cc[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20cd[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20ce[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20cf[0m Entering IdentityService.getCurrentUserID &{0xc4201cf140}
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20d0[0m Entering extractNameFromCreator 0xc420568dc0
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20d1[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20cb[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20d2[0m Entering ComposerPool.Put &{0xc420150150 0xc42040f710 0xc4201425c8}
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20d3[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20d4[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.769 UTC [Composer] Debug -> DEBU 20d5[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.770 UTC [Composer] Debug -> DEBU 20d6[0m Common Name admin
[36m2017-07-19 23:33:49.770 UTC [Composer] Debug -> DEBU 20d7[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.770 UTC [Composer] Debug -> DEBU 20d8[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.770 UTC [Composer] Debug -> DEBU 20d9[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.770 UTC [Composer] Debug -> DEBU 20da[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.770 UTC [Composer] Debug -> DEBU 20db[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.771 UTC [Composer] Debug -> DEBU 20dc[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.771 UTC [Composer] Debug -> DEBU 20dd[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20df[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.771 UTC [Composer] Debug -> DEBU 20de[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e0[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e2[0m Entering Context.getEventService &{0xc4201cf140}
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e3[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e4[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e5[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e6[0m Entering Context.getHTTPService &{0xc4201cf140}
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e7[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.772 UTC [Composer] Debug -> DEBU 20e8[0m Entering DataService.getCollection &{0xc4201450e0}
[36m2017-07-19 23:33:49.773 UTC [Composer] Debug -> DEBU 20e9[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.773 UTC [Composer] Debug -> DEBU 20ea[0m @JS : Context                  :[object Object]()         < 
[36m2017-07-19 23:33:49.773 UTC [Composer] Debug -> DEBU 20ec[0m @JS : Context                  :loadCompiledAclBundle()   > 
[36m2017-07-19 23:33:49.773 UTC [Composer] Debug -> DEBU 20eb[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.774 UTC [Composer] Debug -> DEBU 20ed[0m @JS : Context                  :loadCompiledAclBundle()   Looking in cache for compiled ACL bundle d92c270ede7e3388c9c25115f41fd7bdd61fa5ecf2f3cf212e34620137d9cd26
[36m2017-07-19 23:33:49.774 UTC [Composer] Debug -> DEBU 20ee[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"AVDFKQTFEK_c10","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#AVDFKQTFEK_t6"}
[36m2017-07-19 23:33:49.774 UTC [Composer] Debug -> DEBU 20ef[0m @JS : Context                  :loadCompiledAclBundle()   Compiled ACL bundle is in cache 
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f0[0m @JS : Context                  :findCompiledAclBundle()   < [object Object]
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f1[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f2[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f3[0m Entering DataCollection.get &{0xc4201cf140}
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f4[0m @JS : Context                  :initialize()              Got compiled ACL bundle 
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f5[0m @JS : Context                  :initialize()              Loading sysregistries collection 
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f6[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f7[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.775 UTC [Composer] Debug -> DEBU 20f8[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.779 UTC [Composer] Debug -> DEBU 20f9[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.779 UTC [Composer] Debug -> DEBU 20fa[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#VKWCBHWYIZ_t1, READ
[36m2017-07-19 23:33:49.780 UTC [Composer] Debug -> DEBU 20fb[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.780 UTC [Composer] Debug -> DEBU 20fc[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.780 UTC [Composer] Debug -> DEBU 20fd[0m @JS : Resolver                 :resolveRelationship()     Got resource from registry, resolving 
[36m2017-07-19 23:33:49.780 UTC [Composer] Debug -> DEBU 20fe[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc420390c00} 0xc4204c25e0
[36m2017-07-19 23:33:49.781 UTC [Composer] Debug -> DEBU 20ff[0m @JS : Resolver                 :resolveResourceOrConcept() > Resource {id=org.example.mynetwork.Trader#VKWCBHWYIZ_t1}, [object Object]
[36m2017-07-19 23:33:49.781 UTC [Composer] Debug -> DEBU 2100[0m Exiting NewDataCollection &{0xc420143670 0xc420390c00 $sysregistries}
[36m2017-07-19 23:33:49.781 UTC [Composer] Debug -> DEBU 2101[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.781 UTC [Composer] Debug -> DEBU 2102[0m @JS : Context                  :initialize()              Loading sysidentities collection 
[36m2017-07-19 23:33:49.781 UTC [Composer] Debug -> DEBU 2103[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.781 UTC [Composer] Debug -> DEBU 2104[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.781 UTC [Composer] Debug -> DEBU 2105[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.782 UTC [Composer] Debug -> DEBU 2106[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property tradeId
[36m2017-07-19 23:33:49.782 UTC [Composer] Debug -> DEBU 2107[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring VKWCBHWYIZ_t1
[36m2017-07-19 23:33:49.783 UTC [Composer] Debug -> DEBU 2109[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property firstName
[36m2017-07-19 23:33:49.783 UTC [Composer] Debug -> DEBU 2108[0m Entering NewDataCollection &{0xc4201450e0} &{0xc420142270 0xc42054ca80} 0xc42051b8a0
[36m2017-07-19 23:33:49.783 UTC [Composer] Debug -> DEBU 210a[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Testing
[36m2017-07-19 23:33:49.783 UTC [Composer] Debug -> DEBU 210b[0m Exiting NewDataCollection &{0xc4201435f0 0xc42054ca80 Participant:org.example.mynetwork.Trader}
[36m2017-07-19 23:33:49.783 UTC [Composer] Debug -> DEBU 210c[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.783 UTC [Composer] Debug -> DEBU 210d[0m @JS : Resolver                 :resolveResourceOrConcept() Looking at property lastName
[36m2017-07-19 23:33:49.783 UTC [Composer] Debug -> DEBU 210e[0m @JS : Resolver                 :resolveResourceOrConcept() Property value is neither a resource or a relationship, ignoring Test
[36m2017-07-19 23:33:49.783 UTC [Composer] Debug -> DEBU 210f[0m @JS : AccessController         :check()                   > org.example.mynetwork.Trader#QREJIOVSAJ_t6, CREATE
[36m2017-07-19 23:33:49.784 UTC [Composer] Debug -> DEBU 2110[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trader#VKWCBHWYIZ_t1}
[36m2017-07-19 23:33:49.784 UTC [Composer] Debug -> DEBU 2111[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.784 UTC [Composer] Debug -> DEBU 2112[0m @JS : Resolver                 :resolveRelationship()     < Resource {id=org.example.mynetwork.Trader#VKWCBHWYIZ_t1}
[36m2017-07-19 23:33:49.784 UTC [Composer] Debug -> DEBU 2113[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.784 UTC [Composer] Debug -> DEBU 2114[0m @JS : Resolver                 :resolveResourceOrConcept() < Resource {id=org.example.mynetwork.Trade#a17330ce-96d0-41e9-aff6-01b2aec6fe45}
[36m2017-07-19 23:33:49.785 UTC [Composer] Debug -> DEBU 2115[0m Entering DataCollection.add &{0xc4201450e0}
[36m2017-07-19 23:33:49.785 UTC [Composer] Debug -> DEBU 2116[0m @JS : Resolver                 :resolve()                 < Resource {id=org.example.mynetwork.Trade#a17330ce-96d0-41e9-aff6-01b2aec6fe45}
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 2117[0m @JS : Api                      :constructor()             > [object Object]
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 2118[0m Entering Context.getHTTPService &{0xc4201455c0}
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 2119[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 211a[0m Entering Context.getEventService &{0xc4201455c0}
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 211b[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 211c[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 211d[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 211e[0m @JS : Api                      :constructor()             < 
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 211f[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc420390c00} 0xc42051be30
[36m2017-07-19 23:33:49.786 UTC [Composer] Debug -> DEBU 2120[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2121[0m Exiting NewDataCollection &{0xc420029468 0xc420390c00 $sysidentities}
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2122[0m Entering DataService.getCollection &{0xc4201cf140}
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2123[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2124[0m @JS : Context                  :initialize()              Loading current participant 
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2125[0m @JS : Context                  :loadCurrentParticipant()  > 
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2126[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2127[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2128[0m Entering IdentityService.getCurrentUserID &{0xc42027a680}
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 2129[0m Entering extractNameFromCreator 0xc420442480
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 212a[0m creator 
Org1MSP�-----BEGIN CERTIFICATE-----
MIIB8TCCAZegAwIBAgIUYZnN44Yop1rjkJM+OroIwJ8r0pMwCgYIKoZIzj0EAwIw
czELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
biBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMT
E2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTcwNzE5MjMyNTAwWhcNMTgwNzE5MjMy
NTAwWjAQMQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
BG62SrvgGRy8fMT8YoK5c1TcgdM+XKSqxPQ7F0udcszFxnxOo3LUVpPosdODDQ4U
YTJMk0XZSEh2DK61MS5AxKejbDBqMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E
AjAAMB0GA1UdDgQWBBQJcd1TZDCeqarFZh6K8aXmns3oLjArBgNVHSMEJDAigCAZ
q2WruwSAfa0S5MCpqqZknnCGjjq9AhejItieR+GmrjAKBggqhkjOPQQDAgNIADBF
AiEAmlwF1YPtkOxzHU4xaaYa3jw7lplS1FJwnjAz81W+3j0CIHxIvWyy1KnRMm/U
gLwlWTtSv8LY4XpXkbeSK9880+xM
-----END CERTIFICATE-----
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 212b[0m Exiting extractNameFromCreator admin <nil>
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 212c[0m Common Name admin
[36m2017-07-19 23:33:49.787 UTC [Composer] Debug -> DEBU 212d[0m Exiting IdentityService.getCurrentUserID 1
[36m2017-07-19 23:33:49.788 UTC [Composer] Debug -> DEBU 212e[0m @JS : Context                  :loadCurrentParticipant()  Got current user ID null
[36m2017-07-19 23:33:49.788 UTC [Composer] Debug -> DEBU 212f[0m @JS : Context                  :loadCurrentParticipant()  Could not determine current user ID 
[36m2017-07-19 23:33:49.788 UTC [Composer] Debug -> DEBU 2130[0m @JS : Context                  :loadCurrentParticipant()  < null
[36m2017-07-19 23:33:49.788 UTC [Composer] Debug -> DEBU 2131[0m @JS : Context                  :initialize()              Setting current participant null
[36m2017-07-19 23:33:49.788 UTC [Composer] Debug -> DEBU 2132[0m @JS : AccessController         :constructor()             > [object Object]
[36m2017-07-19 23:33:49.788 UTC [Composer] Debug -> DEBU 2133[0m @JS : AccessController         :constructor()             < 
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 2134[0m @JS : Context                  :initialize()              < 
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 2135[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 2136[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 2137[0m Entering Context.getEventService &{0xc42027a680}
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 2138[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 2139[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 213a[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 213b[0m Entering Context.getHTTPService &{0xc42027a680}
[36m2017-07-19 23:33:49.789 UTC [Composer] Debug -> DEBU 213c[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.790 UTC [Composer] Debug -> DEBU 213d[0m @JS : Engine                   :invoke()                  Calling engine function addResourceToRegistry
[36m2017-07-19 23:33:49.790 UTC [Composer] Debug -> DEBU 213e[0m @JS : EngineResources          :addResourceToRegistry()   > [object Object], Asset,org.example.mynetwork.Commodity,{"$class":"org.example.mynetwork.Commodity","tradingSymbol":"DRVBMVGSZH_c6","description":"Sample Commodity","mainExchange":"IDK","quantity":0,"owner":"resource:org.example.mynetwork.Trader#DRVBMVGSZH_t5"}
[36m2017-07-19 23:33:49.790 UTC [Composer] Debug -> DEBU 2140[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.790 UTC [Composer] Debug -> DEBU 2141[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.791 UTC [Composer] Debug -> DEBU 2142[0m Entering DataCollection.get &{0xc42027a680}
[36m2017-07-19 23:33:49.790 UTC [Composer] Debug -> DEBU 213f[0m @JS : CompiledScriptBundle     :execute()                 > [object Object], Resource {id=org.example.mynetwork.Trade#a17330ce-96d0-41e9-aff6-01b2aec6fe45}
[36m2017-07-19 23:33:49.791 UTC [Composer] Debug -> DEBU 2143[0m @JS : CompiledScriptBundle     :findFunctionNames()       > Resource {id=org.example.mynetwork.Trade#a17330ce-96d0-41e9-aff6-01b2aec6fe45}
[36m2017-07-19 23:33:49.791 UTC [Composer] Debug -> DEBU 2144[0m @JS : CompiledScriptBundle     :findFunctionNames()       Looking at function declaration tradeCommodity
[36m2017-07-19 23:33:49.791 UTC [Composer] Debug -> DEBU 2145[0m @JS : CompiledScriptBundle     :findFunctionNames()       Function is annotated with @transaction 
[36m2017-07-19 23:33:49.792 UTC [Composer] Debug -> DEBU 2146[0m @JS : CompiledScriptBundle     :findFunctionNames()       Function parameter type matches transaction 
[36m2017-07-19 23:33:49.792 UTC [Composer] Debug -> DEBU 2147[0m @JS : CompiledScriptBundle     :findFunctionNames()       < tradeCommodity
[36m2017-07-19 23:33:49.792 UTC [Composer] Debug -> DEBU 2148[0m @JS : CompiledScriptBundle     :execute()                 Executing function tradeCommodity
[31m2017-07-19 23:33:49.793 UTC [Composer] Error -> ERRO 2149[0m @JS : Engine                   :invoke()                  Caught error, rethrowing [object Object]
[36m2017-07-19 23:33:49.793 UTC [Composer] Debug -> DEBU 214a[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.793 UTC [Composer] Debug -> DEBU 214b[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.793 UTC [Composer] Debug -> DEBU 214c[0m Entering Context.getEventService &{0xc4201455c0}
[36m2017-07-19 23:33:49.793 UTC [Composer] Debug -> DEBU 214d[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.793 UTC [Composer] Debug -> DEBU 214e[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.793 UTC [Composer] Debug -> DEBU 214f[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.793 UTC [Composer] Debug -> DEBU 2150[0m Entering Context.getHTTPService &{0xc4201455c0}
[36m2017-07-19 23:33:49.793 UTC [Composer] Debug -> DEBU 2151[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.794 UTC [Composer] Debug -> DEBU 2152[0m Entering Context.getDataService &{0xc4201455c0}
[36m2017-07-19 23:33:49.794 UTC [Composer] Debug -> DEBU 2153[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.794 UTC [Composer] Debug -> DEBU 2154[0m Entering Context.getEventService &{0xc4201455c0}
[36m2017-07-19 23:33:49.794 UTC [Composer] Debug -> DEBU 2155[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.794 UTC [Composer] Debug -> DEBU 2156[0m Entering Context.getIdentityService &{0xc4201455c0}
[36m2017-07-19 23:33:49.794 UTC [Composer] Debug -> DEBU 2157[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.794 UTC [Composer] Debug -> DEBU 2158[0m Entering Context.getHTTPService &{0xc4201455c0}
[36m2017-07-19 23:33:49.794 UTC [Composer] Debug -> DEBU 2159[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.795 UTC [Composer] Debug -> DEBU 215a[0m Entering Engine.handleCallback 0xc4211a7800 &{0xc4201455c0}
[36m2017-07-19 23:33:49.795 UTC [Composer] Debug -> DEBU 215b[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.796 UTC [Composer] Debug -> DEBU 215c[0m Exiting Composer.Invoke  Error: Object with ID 'VKWCBHWYIZ_c8' in collection with ID 'Asset:org.example.mynetwork.Commodity' does not exist
[36m2017-07-19 23:33:49.796 UTC [Composer] Debug -> DEBU 215d[0m Entering ComposerPool.Put &{0xc420142280 0xc420569f80 0xc420028bb8}
[36m2017-07-19 23:33:49.796 UTC [Composer] Debug -> DEBU 215e[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.796 UTC [Composer] Debug -> DEBU 215f[0m Exiting Chaincode.Invoke 500 Error: Object with ID 'VKWCBHWYIZ_c8' in collection with ID 'Asset:org.example.mynetwork.Commodity' does not exist 
[36m2017-07-19 23:33:49.799 UTC [Composer] Debug -> DEBU 2160[0m Entering NewDataCollection &{0xc4201cf140} &{0xc420028028 0xc42111c380} 0xc420476160
[36m2017-07-19 23:33:49.800 UTC [Composer] Debug -> DEBU 2161[0m Exiting NewDataCollection &{0xc420029470 0xc42111c380 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.800 UTC [Composer] Debug -> DEBU 2162[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.800 UTC [Composer] Debug -> DEBU 2163[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#AVDFKQTFEK_c10, CREATE
[36m2017-07-19 23:33:49.800 UTC [Composer] Debug -> DEBU 2164[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.801 UTC [Composer] Debug -> DEBU 2165[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.801 UTC [Composer] Debug -> DEBU 2166[0m Exiting DataCollection.get 0
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 2167[0m Entering DataService.getCollection &{0xc42027a680}
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 2168[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 2169[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 216a[0m Entering DataCollection.add &{0xc4201cf140}
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 216b[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 216c[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 216d[0m Entering Context.getEventService &{0xc4201450e0}
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 216e[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 216f[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 2170[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 2171[0m Entering Context.getHTTPService &{0xc4201450e0}
[36m2017-07-19 23:33:49.802 UTC [Composer] Debug -> DEBU 2172[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 2173[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 2174[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 2175[0m Entering Context.getEventService &{0xc4201450e0}
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 2176[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 2177[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 2178[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 2179[0m Entering Context.getHTTPService &{0xc4201450e0}
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 217a[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 217b[0m Entering EventService.transactionCommit &{0xc4201450e0}
[36m2017-07-19 23:33:49.803 UTC [Composer] Debug -> DEBU 217c[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 217d[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 217e[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 217f[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 2180[0m Entering Context.getDataService &{0xc4201450e0}
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 2181[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 2182[0m Entering Context.getEventService &{0xc4201450e0}
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 2183[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 2184[0m Entering Context.getIdentityService &{0xc4201450e0}
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 2185[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 2186[0m Entering Context.getHTTPService &{0xc4201450e0}
[36m2017-07-19 23:33:49.804 UTC [Composer] Debug -> DEBU 2187[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.805 UTC [Composer] Debug -> DEBU 2188[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.805 UTC [Composer] Debug -> DEBU 2189[0m Entering Engine.handleCallback 0xc42038a480 &{0xc4201450e0}
[36m2017-07-19 23:33:49.805 UTC [Composer] Debug -> DEBU 218a[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.805 UTC [Composer] Debug -> DEBU 218b[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.805 UTC [Composer] Debug -> DEBU 218c[0m Entering ComposerPool.Put &{0xc420142270 0xc421232530 0xc420143368}
[36m2017-07-19 23:33:49.805 UTC [Composer] Debug -> DEBU 218d[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.805 UTC [Composer] Debug -> DEBU 218e[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.809 UTC [Composer] Debug -> DEBU 218f[0m Entering NewDataCollection &{0xc42027a680} &{0xc4202fe008 0xc420390c00} 0xc4204c3e00
[36m2017-07-19 23:33:49.809 UTC [Composer] Debug -> DEBU 2190[0m Exiting NewDataCollection &{0xc420143838 0xc420390c00 Asset:org.example.mynetwork.Commodity}
[36m2017-07-19 23:33:49.809 UTC [Composer] Debug -> DEBU 2191[0m Exiting DataService.getCollection 0
[36m2017-07-19 23:33:49.810 UTC [Composer] Debug -> DEBU 2192[0m @JS : AccessController         :check()                   > org.example.mynetwork.Commodity#DRVBMVGSZH_c6, CREATE
[36m2017-07-19 23:33:49.810 UTC [Composer] Debug -> DEBU 2193[0m @JS : AccessController         :check()                   No participant 
[36m2017-07-19 23:33:49.810 UTC [Composer] Debug -> DEBU 2194[0m @JS : AccessController         :check()                   < 
[36m2017-07-19 23:33:49.811 UTC [Composer] Debug -> DEBU 2195[0m Entering DataCollection.add &{0xc42027a680}
[36m2017-07-19 23:33:49.811 UTC [Composer] Debug -> DEBU 2196[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.812 UTC [Composer] Debug -> DEBU 2197[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.813 UTC [Composer] Debug -> DEBU 2198[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.813 UTC [Composer] Debug -> DEBU 2199[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.813 UTC [Composer] Debug -> DEBU 219a[0m Entering Context.getEventService &{0xc4201cf140}
[36m2017-07-19 23:33:49.813 UTC [Composer] Debug -> DEBU 219b[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.813 UTC [Composer] Debug -> DEBU 219c[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.813 UTC [Composer] Debug -> DEBU 219d[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.813 UTC [Composer] Debug -> DEBU 219e[0m Entering Context.getHTTPService &{0xc4201cf140}
[36m2017-07-19 23:33:49.813 UTC [Composer] Debug -> DEBU 219f[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.814 UTC [Composer] Debug -> DEBU 21a0[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.814 UTC [Composer] Debug -> DEBU 21a1[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.814 UTC [Composer] Debug -> DEBU 21a2[0m Entering Context.getEventService &{0xc4201cf140}
[36m2017-07-19 23:33:49.814 UTC [Composer] Debug -> DEBU 21a3[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.814 UTC [Composer] Debug -> DEBU 21a4[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.814 UTC [Composer] Debug -> DEBU 21a5[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.814 UTC [Composer] Debug -> DEBU 21a6[0m Entering Context.getHTTPService &{0xc4201cf140}
[36m2017-07-19 23:33:49.814 UTC [Composer] Debug -> DEBU 21a7[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.815 UTC [Composer] Debug -> DEBU 21a8[0m Entering EventService.transactionCommit &{0xc4201cf140}
[36m2017-07-19 23:33:49.815 UTC [Composer] Debug -> DEBU 21a9[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.815 UTC [Composer] Debug -> DEBU 21aa[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.815 UTC [Composer] Debug -> DEBU 21ab[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.815 UTC [Composer] Debug -> DEBU 21ac[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.815 UTC [Composer] Debug -> DEBU 21ad[0m Entering Context.getDataService &{0xc4201cf140}
[36m2017-07-19 23:33:49.816 UTC [Composer] Debug -> DEBU 21ae[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.816 UTC [Composer] Debug -> DEBU 21af[0m Entering Context.getEventService &{0xc4201cf140}
[36m2017-07-19 23:33:49.816 UTC [Composer] Debug -> DEBU 21b0[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.816 UTC [Composer] Debug -> DEBU 21b1[0m Entering Context.getIdentityService &{0xc4201cf140}
[36m2017-07-19 23:33:49.816 UTC [Composer] Debug -> DEBU 21b2[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.816 UTC [Composer] Debug -> DEBU 21b3[0m Entering Context.getHTTPService &{0xc4201cf140}
[36m2017-07-19 23:33:49.816 UTC [Composer] Debug -> DEBU 21b4[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.817 UTC [Composer] Debug -> DEBU 21b5[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.817 UTC [Composer] Debug -> DEBU 21b6[0m Entering Engine.handleCallback 0xc42038a960 &{0xc4201cf140}
[36m2017-07-19 23:33:49.817 UTC [Composer] Debug -> DEBU 21b7[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.817 UTC [Composer] Debug -> DEBU 21b8[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.817 UTC [Composer] Debug -> DEBU 21b9[0m Entering ComposerPool.Put &{0xc420028028 0xc42051bc00 0xc4202fe7b8}
[36m2017-07-19 23:33:49.817 UTC [Composer] Debug -> DEBU 21ba[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.817 UTC [Composer] Debug -> DEBU 21bb[0m Exiting Chaincode.Invoke 200  
[36m2017-07-19 23:33:49.823 UTC [Composer] Debug -> DEBU 21bc[0m Exiting DataCollection.add 0
[36m2017-07-19 23:33:49.823 UTC [Composer] Debug -> DEBU 21bd[0m @JS : EngineResources          :addResourceToRegistry()   < 
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21be[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21bf[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21c0[0m Entering Context.getEventService &{0xc42027a680}
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21c1[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21c2[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21c3[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21c4[0m Entering Context.getHTTPService &{0xc42027a680}
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21c5[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21c6[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.824 UTC [Composer] Debug -> DEBU 21c7[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21c8[0m Entering Context.getEventService &{0xc42027a680}
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21c9[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21ca[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21cb[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21cc[0m Entering Context.getHTTPService &{0xc42027a680}
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21cd[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21ce[0m Entering EventService.transactionCommit &{0xc42027a680}
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21cf[0m @JS : EventService             :getEvents()               > 
[36m2017-07-19 23:33:49.825 UTC [Composer] Debug -> DEBU 21d0[0m @JS : EventService             :getEvents()               < 
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d1[0m Emitting event from EventService.transactionCommit []
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d2[0m Exiting EventService.transactionCommit 0
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d3[0m Entering Context.getDataService &{0xc42027a680}
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d4[0m Exiting Context.getDataService 1
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d5[0m Entering Context.getEventService &{0xc42027a680}
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d6[0m Exiting Context.getEventService 1
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d7[0m Entering Context.getIdentityService &{0xc42027a680}
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d8[0m Exiting Context.getIdentityService 1
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21d9[0m Entering Context.getHTTPService &{0xc42027a680}
[36m2017-07-19 23:33:49.826 UTC [Composer] Debug -> DEBU 21da[0m Exiting Context.getHTTPService 1
[36m2017-07-19 23:33:49.827 UTC [Composer] Debug -> DEBU 21db[0m @JS : Engine                   :invoke()                  < 
[36m2017-07-19 23:33:49.827 UTC [Composer] Debug -> DEBU 21dc[0m Entering Engine.handleCallback 0xc4202ae300 &{0xc42027a680}
[36m2017-07-19 23:33:49.827 UTC [Composer] Debug -> DEBU 21dd[0m Exiting Engine.handleCallback 0
[36m2017-07-19 23:33:49.827 UTC [Composer] Debug -> DEBU 21de[0m Exiting Composer.Invoke  <nil>
[36m2017-07-19 23:33:49.827 UTC [Composer] Debug -> DEBU 21df[0m Entering ComposerPool.Put &{0xc4202fe008 0xc4210ea5f0 0xc420142f60}
[36m2017-07-19 23:33:49.827 UTC [Composer] Debug -> DEBU 21e0[0m Exiting ComposerPool.Put false
[36m2017-07-19 23:33:49.827 UTC [Composer] Debug -> DEBU 21e1[0m Exiting Chaincode.Invoke 200  
