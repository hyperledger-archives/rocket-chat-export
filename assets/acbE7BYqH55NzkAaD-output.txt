anshu@home:~/go/src/10-network$ ./10-network
19:06:04.136 main ▶ DEBU 001 ================ STARTING MAIN ================
Do something with sdk to supress error &{{0xef7898 0xef7898 0xef7898 0xef7898 <nil> <nil> <nil> [0xc4201bd950]} 0xc420132480}
19:06:04.140 main ▶ INFO 002 Do something with sdk to supress error &{{0xef7898 0xef7898 0xef7898 0xef7898 <nil> <nil> <nil> [0xc4201bd950]} 0xc420132480}
Network config is : fab.NetworkConfig{Name:"", Description:"", Version:"", Client:msp.ClientConfig{Organization:"", Logging:api.LoggingType{Level:""}, CryptoConfig:msp.CCType{Path:""}, TLSCerts:endpoint.MutualTLSConfig{Pem:[]string(nil), Path:"", Client:endpoint.TLSKeyPair{Key:endpoint.TLSConfig{Path:"", Pem:""}, Cert:endpoint.TLSConfig{Path:"", Pem:""}}}, CredentialStore:msp.CredentialStoreType{Path:"", CryptoStore:struct { Path string}{Path:""}}}, Channels:map[string]fab.ChannelNetworkConfig(nil), Organizations:map[string]fab.OrganizationConfig(nil), Orderers:map[string]fab.OrdererConfig(nil), Peers:map[string]fab.PeerConfig(nil), CertificateAuthorities:map[string]msp.CAConfig(nil), EntityMatchers:map[string][]fab.MatchConfig(nil)}19:06:04.140 main ▶ INFO 003 Network config is : fab.NetworkConfig{Name:"", Description:"", Version:"", Client:msp.ClientConfig{Organization:"", Logging:api.LoggingType{Level:""}, CryptoConfig:msp.CCType{Path:""}, TLSCerts:endpoint.MutualTLSConfig{Pem:[]string(nil), Path:"", Client:endpoint.TLSKeyPair{Key:endpoint.TLSConfig{Path:"", Pem:""}, Cert:endpoint.TLSConfig{Path:"", Pem:""}}}, CredentialStore:msp.CredentialStoreType{Path:"", CryptoStore:struct { Path string }{Path:""}}}, Channels:map[string]fab.ChannelNetworkConfig(nil), Organizations:map[string]fab.OrganizationConfig(nil), Orderers:map[string]fab.OrdererConfig(nil), Peers:map[string]fab.PeerConfig(nil), CertificateAuthorities:map[string]msp.CAConfig(nil), EntityMatchers:map[string][]fab.MatchConfig(nil)}
Orderer config is :fab.OrdererConfig{URL:"", GRPCOptions:map[string]interface {}(nil), TLSCACerts:endpoint.TLSConfig{Path:"", Pem:""}}
19:06:04.140 main ▶ INFO 004 Orderer config is :fab.OrdererConfig{URL:"", GRPCOptions:map[string]interface {}(nil), TLSCACerts:endpoint.TLSConfig{Path:"", Pem:""}}
Peer config are : fab.PeerConfig{URL:"", EventURL:"", GRPCOptions:map[string]interface {}(nil), TLSCACerts:endpoint.TLSConfig{Path:"", Pem:""}}
19:06:04.140 main ▶ INFO 005 Peer config are : fab.PeerConfig{URL:"", EventURL:"", GRPCOptions:map[string]interface {}(nil), TLSCACerts:endpoint.TLSConfig{Path:"", Pem:""}}
Organization config are : fab.OrganizationConfig{MSPID:"", CryptoPath:"", Users:map[string]endpoint.TLSKeyPair(nil), Peers:[]string(nil), CertificateAuthorities:[]string(nil)}
19:06:04.140 main ▶ INFO 006 Organization config are : fab.OrganizationConfig{MSPID:"", CryptoPath:"", Users:map[string]endpoint.TLSKeyPair(nil), Peers:[]string(nil), CertificateAuthorities:[]string(nil)}
