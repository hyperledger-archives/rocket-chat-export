indy> pool connect SOVRIN_MAINNET protocol-version=2
TRACE|indy_cli::commands::pool::connect_command|               src/commands/pool.rs:76  | execute >> ctx CommandContext { main_prompt: RefCell { value: "indy" }, sub_prompts: RefCell { value: {} }, is_exit: RefCell { value: false }, int_values: RefCell { value: {} }, string_values: RefCell { value: {} }, plugins: RefCell { value: {} } } params {"name": "SOVRIN_MAINNET", "protocol-version": "2"}
 INFO|command_executor              |                src/commands/mod.rs:75  | Worker thread started
TRACE|indy::api::pool               |                    src/api/pool.rs:313 | indy_set_protocol_version: <<< res: Success
 INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received
 INFO|pool_command_executor         |               src/commands/pool.rs:133 | SetProtocolVersion command received
DEBUG|indy::commands::pool          |               src/commands/pool.rs:229 | set_protocol_version >>> version: 2
DEBUG|indy::commands::pool          |               src/commands/pool.rs:238 | set_protocol_version <<<
TRACE|indy::api::pool               |                    src/api/pool.rs:306 | indy_set_protocol_version:
TRACE|indy::api::pool               |                    src/api/pool.rs:92  | indy_open_pool_ledger: >>> config_name: 0x10ce24150, config: 0x10ce19090
TRACE|indy::api::pool               |                    src/api/pool.rs:98  | indy_open_pool_ledger: entities >>> config_name: "SOVRIN_MAINNET", config: Some(PoolOpenConfig { timeout: 20, extended_timeout: 60, conn_limit: 5, conn_active_timeout: 5, preordered_nodes: [] })
TRACE|indy::api::pool               |                    src/api/pool.rs:113 | indy_open_pool_ledger: <<< res: Success
 INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received
 INFO|pool_command_executor         |               src/commands/pool.rs:66  | Open command received
DEBUG|indy::commands::pool          |               src/commands/pool.rs:160 | open >>> name: "SOVRIN_MAINNET", config: Some(PoolOpenConfig { timeout: 20, extended_timeout: 60, conn_limit: 5, conn_active_timeout: 5, preordered_nodes: [] })
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:466 | Pool::new name SOVRIN_MAINNET, id 1, config PoolOpenConfig { timeout: 20, extended_timeout: 60, conn_limit: 5, conn_active_timeout: 5, preordered_nodes: [] }
DEBUG|indy::commands::pool          |               src/commands/pool.rs:175 | open <<<
TRACE|indy::services::pool::commander|     src/services/pool/commander.rs:22  | cmd_parts [[99, 111, 110, 110, 101, 99, 116], [1, 0, 0, 0], [255, 255, 255, 255]]
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(CheckCache(1))
TRACE|indy::services::pool::merkle_tree_factory|src/services/pool/merkle_tree_factory.rs:27  | Restoring merkle tree from genesis
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:94  | ZMQNetworker::process_event: nodes_updated [RemoteNode { name: "danube", public_key: [101, 44, 99, 229, 206, 208, 71, 89, 230, 74, 169, 123, 163, 27, 67, 181, 201, 160, 164, 125, 191, 150, 234, 78, 36, 47, 159, 118, 206, 141, 38, 93], zaddr: "tcp://128.130.204.35:9722", is_blacklisted: false }, RemoteNode { name: "DustStorm", public_key: [144, 231, 28, 150, 27, 151, 29, 155, 41, 172, 19, 221, 180, 181, 98, 95, 150, 146, 169, 253, 64, 245, 182, 202, 105, 71, 18, 34, 104, 197, 111, 67], zaddr: "tcp://207.224.246.57:9712", is_blacklisted: false }, RemoteNode { name: "zaValidator", public_key: [103, 90, 10, 153, 33, 11, 85, 76, 242, 129, 231, 114, 40, 119, 99, 26, 141, 210, 238, 29, 23, 180, 131, 43, 181, 133, 11, 102, 0, 198, 207, 108], zaddr: "tcp://154.0.164.39:9702", is_blacklisted: false }, RemoteNode { name: "BIGAWSUSEAST1-001", public_key: [128, 201, 88, 148, 232, 117, 185, 220, 174, 80, 9, 118, 217, 48, 197, 129, 76, 25, 60, 111, 146, 119, 197, 51, 145, 82, 120, 39, 22, 219, 165, 113], zaddr: "tcp://34.224.255.108:9796", is_blacklisted: false }, RemoteNode { name: "prosovitor", public_key: [150, 113, 35, 44, 43, 208, 32, 151, 136, 85, 147, 78, 101, 77, 230, 245, 170, 206, 18, 98, 13, 242, 135, 225, 155, 151, 4, 44, 27, 209, 160, 123], zaddr: "tcp://138.68.240.143:9711", is_blacklisted: false }, RemoteNode { name: "ev1", public_key: [206, 205, 177, 64, 140, 31, 217, 144, 61, 19, 97, 244, 46, 66, 17, 80, 188, 84, 215, 228, 215, 167, 105, 209, 120, 165, 125, 87, 56, 251, 203, 125], zaddr: "tcp://54.207.36.81:9702", is_blacklisted: false }, RemoteNode { name: "OASFCU", public_key: [80, 146, 115, 214, 88, 248, 209, 174, 143, 61, 220, 133, 222, 175, 47, 242, 11, 234, 175, 78, 1, 100, 83, 82, 203, 249, 40, 215, 253, 8, 10, 121], zaddr: "tcp://38.70.17.248:9702", is_blacklisted: false }, RemoteNode { name: "digitalbazaar", public_key: [102, 212, 127, 151, 194, 3, 231, 140, 236, 21, 189, 31, 218, 143, 27, 58, 67, 122, 192, 225, 120, 9, 186, 250, 206, 29, 162, 145, 250, 94, 1, 42], zaddr: "tcp://34.226.105.29:9701", is_blacklisted: false }, RemoteNode { name: "royal_sovrin", public_key: [127, 242, 237, 156, 153, 213, 96, 128, 183, 235, 66, 69, 149, 172, 97, 97, 199, 175, 174, 32, 128, 217, 82, 27, 112, 144, 101, 195, 176, 68, 4, 103], zaddr: "tcp://35.167.133.255:9702", is_blacklisted: false }, RemoteNode { name: "iRespond", public_key: [209, 81, 73, 231, 175, 224, 181, 18, 209, 201, 81, 195, 47, 252, 157, 113, 75, 129, 21, 40, 111, 98, 6, 184, 50, 167, 220, 172, 60, 208, 9, 65], zaddr: "tcp://52.187.10.28:9702", is_blacklisted: false }]
TRACE|indy::services::pool::request_handler|src/services/pool/request_handler.rs:223 | start catchup, ne: Some(SendAllRequest("{\"op\":\"LEDGER_STATUS\",\"txnSeqNo\":10,\"merkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"ledgerId\":0,\"ppSeqNo\":null,\"viewNo\":null,\"protocolVersion\":2}", "9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij", 60, None))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:59  | sending new request
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:83  | send request in new conn
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:180 | PoolConnection::new: from nodes [RemoteNode { name: "danube", public_key: [101, 44, 99, 229, 206, 208, 71, 89, 230, 74, 169, 123, 163, 27, 67, 181, 201, 160, 164, 125, 191, 150, 234, 78, 36, 47, 159, 118, 206, 141, 38, 93], zaddr: "tcp://128.130.204.35:9722", is_blacklisted: false }, RemoteNode { name: "DustStorm", public_key: [144, 231, 28, 150, 27, 151, 29, 155, 41, 172, 19, 221, 180, 181, 98, 95, 150, 146, 169, 253, 64, 245, 182, 202, 105, 71, 18, 34, 104, 197, 111, 67], zaddr: "tcp://207.224.246.57:9712", is_blacklisted: false }, RemoteNode { name: "zaValidator", public_key: [103, 90, 10, 153, 33, 11, 85, 76, 242, 129, 231, 114, 40, 119, 99, 26, 141, 210, 238, 29, 23, 180, 131, 43, 181, 133, 11, 102, 0, 198, 207, 108], zaddr: "tcp://154.0.164.39:9702", is_blacklisted: false }, RemoteNode { name: "BIGAWSUSEAST1-001", public_key: [128, 201, 88, 148, 232, 117, 185, 220, 174, 80, 9, 118, 217, 48, 197, 129, 76, 25, 60, 111, 146, 119, 197, 51, 145, 82, 120, 39, 22, 219, 165, 113], zaddr: "tcp://34.224.255.108:9796", is_blacklisted: false }, RemoteNode { name: "prosovitor", public_key: [150, 113, 35, 44, 43, 208, 32, 151, 136, 85, 147, 78, 101, 77, 230, 245, 170, 206, 18, 98, 13, 242, 135, 225, 155, 151, 4, 44, 27, 209, 160, 123], zaddr: "tcp://138.68.240.143:9711", is_blacklisted: false }, RemoteNode { name: "ev1", public_key: [206, 205, 177, 64, 140, 31, 217, 144, 61, 19, 97, 244, 46, 66, 17, 80, 188, 84, 215, 228, 215, 167, 105, 209, 120, 165, 125, 87, 56, 251, 203, 125], zaddr: "tcp://54.207.36.81:9702", is_blacklisted: false }, RemoteNode { name: "OASFCU", public_key: [80, 146, 115, 214, 88, 248, 209, 174, 143, 61, 220, 133, 222, 175, 47, 242, 11, 234, 175, 78, 1, 100, 83, 82, 203, 249, 40, 215, 253, 8, 10, 121], zaddr: "tcp://38.70.17.248:9702", is_blacklisted: false }, RemoteNode { name: "digitalbazaar", public_key: [102, 212, 127, 151, 194, 3, 231, 140, 236, 21, 189, 31, 218, 143, 27, 58, 67, 122, 192, 225, 120, 9, 186, 250, 206, 29, 162, 145, 250, 94, 1, 42], zaddr: "tcp://34.226.105.29:9701", is_blacklisted: false }, RemoteNode { name: "royal_sovrin", public_key: [127, 242, 237, 156, 153, 213, 96, 128, 183, 235, 66, 69, 149, 172, 97, 97, 199, 175, 174, 32, 128, 217, 82, 27, 112, 144, 101, 195, 176, 68, 4, 103], zaddr: "tcp://35.167.133.255:9702", is_blacklisted: false }, RemoteNode { name: "iRespond", public_key: [209, 81, 73, 231, 175, 224, 181, 18, 209, 201, 81, 195, 47, 252, 157, 113, 75, 129, 21, 40, 111, 98, 6, 184, 50, 167, 220, 172, 60, 208, 9, 65], zaddr: "tcp://52.187.10.28:9702", is_blacklisted: false }]
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:255 | send_request >> pe: Some(SendAllRequest("{\"op\":\"LEDGER_STATUS\",\"txnSeqNo\":10,\"merkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"ledgerId\":0,\"ppSeqNo\":null,\"viewNo\":null,\"protocolVersion\":2}", "9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij", 60, None))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 0, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 0
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 1, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 1
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 2, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 2
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 3, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 3
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 4, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 4
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 5, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 5
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 6, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 6
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 7, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 7
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 8, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 8
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:319 | _send_msg_to_one_node >> idx 9, req_id 9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij, req {"op":"LEDGER_STATUS","txnSeqNo":10,"merkleRoot":"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij","ledgerId":0,"ppSeqNo":null,"viewNo":null,"protocolVersion":2}
DEBUG|indy::services::pool::networker|     src/services/pool/networker.rs:331 | _get_socket: open new socket for node 9
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:325 | _send_msg_to_one_node <<
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:285 | send_request <<
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:105 | PoolSM: from init to getting catchup target
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"identifier\":\"\",\"reqId\":1,\"op\":\"REQNACK\",\"reason\":\"client request invalid: \'as_dict\'\"}", "BIGAWSUSEAST1-001"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"merkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"ppSeqNo\":null,\"ledgerId\":0,\"viewNo\":null,\"op\":\"LEDGER_STATUS\",\"txnSeqNo\":10,\"protocolVersion\":2}", "BIGAWSUSEAST1-001"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 0, nanos: 636488000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"identifier\":\"\",\"op\":\"REQNACK\",\"reason\":\"client request invalid: \'as_dict\'\",\"reqId\":1}", "OASFCU"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"viewNo\":null,\"merkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"protocolVersion\":2,\"op\":\"LEDGER_STATUS\",\"txnSeqNo\":10,\"ppSeqNo\":null,\"ledgerId\":0}", "OASFCU"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 0, nanos: 639008000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"reason\":\"client request invalid: \'as_dict\'\",\"identifier\":\"\",\"reqId\":1,\"op\":\"REQNACK\"}", "digitalbazaar"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"merkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"ledgerId\":0,\"viewNo\":null,\"txnSeqNo\":10,\"ppSeqNo\":null,\"protocolVersion\":2,\"op\":\"LEDGER_STATUS\"}", "digitalbazaar"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 0, nanos: 687004000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"ledgerId\":0,\"op\":\"CONSISTENCY_PROOF\",\"viewNo\":0,\"oldMerkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"seqNoStart\":10,\"newMerkleRoot\":\"CoMuMfRcFJMkzTfzXWVU4U562QwGh2PAJgDxpmgr6XDs\",\"ppSeqNo\":0,\"hashes\":[\"2gsKHP1x3p52fowDXwGijtwwasGyuuuV4ALVqpsucAf7\",\"CsPVMPDCQRPAnMAKQfZZVoAmdBn4MkDaihBM2EK9QquE\",\"DRtCSq4c847bQEwSBHFHrsLhamFkEciKUhshazqCM6Wu\",\"9zyrCd9zJeYh7WpLPryTD3CHEsiJM95aRqVgdULstamp\",\"5o2Up5cKuvqBb1S6CgVpAnkoXSzaSV4KyAam147jwz7d\",\"EwHbakSseDNEaeB4Mxiiq5FYCaXLXgCbWm46G4cFcWk9\"],\"seqNoEnd\":58}", "DustStorm"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 0, nanos: 997989000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"reason\":\"client request invalid: \'as_dict\'\",\"reqId\":1,\"identifier\":\"\",\"op\":\"REQNACK\"}", "prosovitor"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"viewNo\":null,\"op\":\"LEDGER_STATUS\",\"merkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"ppSeqNo\":null,\"ledgerId\":0,\"txnSeqNo\":10,\"protocolVersion\":2}", "prosovitor"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 1, nanos: 25070000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"identifier\":\"\",\"op\":\"REQNACK\",\"reason\":\"client request invalid: \'as_dict\'\",\"reqId\":1}", "royal_sovrin"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"merkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"protocolVersion\":2,\"ledgerId\":0,\"txnSeqNo\":10,\"ppSeqNo\":null,\"viewNo\":null,\"op\":\"LEDGER_STATUS\"}", "royal_sovrin"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 1, nanos: 71185000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"identifier\":\"\",\"reason\":\"client request invalid: \'as_dict\'\",\"op\":\"REQNACK\",\"reqId\":1}", "iRespond"))
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"viewNo\":0,\"op\":\"CONSISTENCY_PROOF\",\"seqNoEnd\":58,\"seqNoStart\":10,\"ledgerId\":0,\"newMerkleRoot\":\"CoMuMfRcFJMkzTfzXWVU4U562QwGh2PAJgDxpmgr6XDs\",\"hashes\":[\"2gsKHP1x3p52fowDXwGijtwwasGyuuuV4ALVqpsucAf7\",\"CsPVMPDCQRPAnMAKQfZZVoAmdBn4MkDaihBM2EK9QquE\",\"DRtCSq4c847bQEwSBHFHrsLhamFkEciKUhshazqCM6Wu\",\"9zyrCd9zJeYh7WpLPryTD3CHEsiJM95aRqVgdULstamp\",\"5o2Up5cKuvqBb1S6CgVpAnkoXSzaSV4KyAam147jwz7d\",\"EwHbakSseDNEaeB4Mxiiq5FYCaXLXgCbWm46G4cFcWk9\"],\"ppSeqNo\":0,\"oldMerkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\"}", "zaValidator"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 1, nanos: 229908000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"ledgerId\":0,\"txnSeqNo\":10,\"op\":\"LEDGER_STATUS\",\"protocolVersion\":2,\"merkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"viewNo\":null,\"ppSeqNo\":null}", "iRespond"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 1, nanos: 230367000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(NodeReply("{\"seqNoStart\":10,\"viewNo\":0,\"seqNoEnd\":58,\"ledgerId\":0,\"op\":\"CONSISTENCY_PROOF\",\"ppSeqNo\":0,\"oldMerkleRoot\":\"9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij\",\"hashes\":[\"2gsKHP1x3p52fowDXwGijtwwasGyuuuV4ALVqpsucAf7\",\"CsPVMPDCQRPAnMAKQfZZVoAmdBn4MkDaihBM2EK9QquE\",\"DRtCSq4c847bQEwSBHFHrsLhamFkEciKUhshazqCM6Wu\",\"9zyrCd9zJeYh7WpLPryTD3CHEsiJM95aRqVgdULstamp\",\"5o2Up5cKuvqBb1S6CgVpAnkoXSzaSV4KyAam147jwz7d\",\"EwHbakSseDNEaeB4Mxiiq5FYCaXLXgCbWm46G4cFcWk9\"],\"newMerkleRoot\":\"CoMuMfRcFJMkzTfzXWVU4U562QwGh2PAJgDxpmgr6XDs\"}", "ev1"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 1, nanos: 400393000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << true
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:537 | received pool event: Some(Timeout("9BvPUfc27EyN6NqMUh2Nfy19om8dzTNppZz17wCSwCij", "danube"))
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:248 | is_active >> time worked: Duration { secs: 60, nanos: 6182000 }
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:250 | is_active << false
TRACE|indy::services::pool::networker|     src/services/pool/networker.rs:127 | removing pool connection 2
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:503 | socket dropped
DEBUG|zmq                           |/Users/prague/.cargo/registry/src/github.com-1ecc6299db9ec823/zmq-0.8.2/src/lib.rs:410 | context dropped
TRACE|indy::services::pool::pool    |          src/services/pool/pool.rs:167 | PoolSM: from getting catchup target to terminated
 INFO|indy::commands                |                src/commands/mod.rs:115 | PoolCommand command received
 INFO|indy::commands::pool          |               src/commands/pool.rs:70  | OpenAck handle 1, pool_id 1, result Err(Timeout)
ERROR|indy::errors::indy            |                 src/errors/indy.rs:73  | Casting error to ErrorCode: Timeout
TRACE|indy::api::pool               |                    src/api/pool.rs:106 | indy_open_pool_ledger: pool_handle: 0