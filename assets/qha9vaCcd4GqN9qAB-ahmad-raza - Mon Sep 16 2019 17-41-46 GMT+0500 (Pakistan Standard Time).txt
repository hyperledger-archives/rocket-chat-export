apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: cma
  name:	peer0
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
       app: hyperledger
       role: peer
       peer-id: peer0
       org: cma
    spec:
      # hostAliases:
      # - ip: "10.97.212.122"
      #   hostnames:
      #   - "peer0.cma"
      containers:
      - name: couchdb1
        image: hyperledger/fabric-couchdb
        ports:
         - containerPort: 5984
        volumeMounts:
         - mountPath: /opt/couchdb/data
           name: certificate
           subPath: crypto-config/couchdb1

      - name: peer0
        image: hyperledger/fabric-peer
        env:
        # - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
        #   value: bridge
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: nid1
        - name: FABRIC_LOGGING_SPEC
          value: "grpc=debug:debug"
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: "CouchDB"
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
          value: "localhost:5984"
        - name: CORE_LEDGER_STATE_TOTALQUERYLIMIT
          value: "100000"
        - name: CORE_VM_ENDPOINT
          value: localhost:2375
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "true"
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_MSPCONFIGPATH
          value: /etc/hyperledger/fabric/msp
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        # - name: CORE_PEER_TLS_CERT_FILE
        #   value: /etc/secret/server.crt
        # - name: CORE_PEER_TLS_KEY_FILE
        #   value: /etc/secret/server.key
        # - name: CORE_PEER_TLS_ROOTCERT_FILE
        #   value: /etc/secret/ca.crt
        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt
        # - name: CORE_PEER_TLS_CLIENTAUTHREQUIRED
        #   value: "true"
        # - name: CORE_PEER_TLS_CLIENTROOTCAS_FILES
        #   value: /etc/hyperledger/fabric/tls/ca.crt
        # - name: CORE_PEER_TLS_CLIENTCERT_FILE
        #   value: /etc/hyperledger/fabric/tls/server.crt
        # - name: CORE_PEER_TLS_CLIENTKEY_FILE
        #   value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_ID
          value: peer0.cma
        - name: CORE_PEER_ADDRESS
          value: peer0.cma:7051
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:7051
        # - name: CORE_PEER_CHAINCODEADDRESS
        #   value: peer0.cma:7052
        - name: CORE_PEER_CHAINCODELISTENADDRESS
          value: 0.0.0.0:7052
        - name: CORE_CHAINCODE_LOGGING_LEVEL
          value: debug
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: peer0.cma:7051
        - name: CORE_PEER_LOCALMSPID
          value: CmaMSP
        - name: GODEBUG
          value: "netdns=go"

        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        ports:
         - containerPort: 7051
         - containerPort: 7052
         - containerPort: 7053
        command: ["peer"]
        args: ["node","start"]
        volumeMounts:
         #- mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
         #  name: certificate
         #  subPath: channel-artifacts
         - mountPath: /etc/hyperledger/fabric/msp
           name: certificate
           subPath: crypto-config/crypto-config/peerOrganizations/cma/peers/peer0.cma/msp
           # subPath: $mspPath
         - mountPath: /etc/hyperledger/fabric/tls
           name: certificate
           subPath: crypto-config/crypto-config/peerOrganizations/cma/peers/peer0.cma/tls/
         - mountPath: /host/var/run/docker.sock
           name: dockersocket
           # subPath: $tlsPath
        #  - mountPath: /host/var/run/
        #    name: run
         - mountPath: /var/hyperledger/production
           name: certificate
           subPath: crypto-config/peer1
         - mountPath: /crypto-config
           name: certificate
           subPath: crypto-config/
         # - mountPath: /etc/secret
         #   name: cma-secret
      - name: docker
        securityContext:
           privileged: true
        image: docker:stable-dind
        ports:
         - containerPort: 2375
           protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/docker
          name: dockervolume

        # volumeMounts:
        #  - mountPath: /host/var/run/
        #    name: run
      volumes:
       - name: certificate
         persistentVolumeClaim:
             claimName: hyperledgerr2
       - name: dockervolume
         persistentVolumeClaim:
             claimName: docker-pvc1
       - name: dockersocket
         hostPath:
             path: /var/run/docker.sock
      #  - name: run
      #    hostPath:
      #      path: /run
       # - name: cma-secret
       #   secret:
       #       secretName: cma-secret


---
apiVersion: v1
kind: Service
metadata:
   namespace: cma
   name: peer0
spec:
 selector:
   app: hyperledger
   role: peer
   peer-id: peer0
   org: cma
 type: NodePort
 ports:
   - name: external-listen-endpoint
     protocol: TCP
     port: 8051
     targetPort: 7051
     nodePort: 30600

   - name: chaincode-listen
     protocol: TCP
     port: 8052
     targetPort: 7052
     nodePort: 30700

   - name: couchdb
     protocol: TCP
     port: 6984
     targetPort: 5984
     nodePort: 30800

---

# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   namespace: cma
#   name: cma-ingress
# spec:
#   tls:
#   - secretName: cma-secret-tls
#   backend:
#     serviceName: peer0
#     servicePort: 30600
#
# ---
