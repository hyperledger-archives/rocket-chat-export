Creating ledger [swapchannel] with genesis block
2019-10-11 06:58:48.857 UTC [fsblkstorage] newBlockfileMgr -> INFO 02e Getting block information from block storage
2019-10-11 06:58:48.996 UTC [couchdb] CreateDatabaseIfNotExist -> INFO 02f Created state database swapchannel_
2019-10-11 06:58:49.150 UTC [kvledger] CommitWithPvtData -> INFO 030 [swapchannel] Committed block [0] with 1 transaction(s) in 142ms (state_validation=1ms block_and_pvtdata_commit=90ms state_commit=42ms) commitHash=[]
2019-10-11 06:58:49.193 UTC [ledgermgmt] CreateLedger -> INFO 031 Created ledger [swapchannel] with genesis block
2019-10-11 06:58:49.204 UTC [gossip.service] updateAnchors -> ERRO 032 Tried joining channel swapchannel but our org( abc1MSP ), isn't among the orgs of the channel: [SwapMSP] , aborting.
2019-10-11 06:58:49.258 UTC [gossip.state] NewGossipStateProvider -> INFO 033 Updating metadata information, current ledger sequence is at = 0, next expected block is = 1
2019-10-11 06:58:49.258 UTC [gossip.gossip] UpdateLedgerHeight -> WARN 034 No such channel [115 119 97 112 99 104 97 110 110 101 108]
2019-10-11 06:58:49.259 UTC [sccapi] deploySysCC -> INFO 035 system chaincode lscc/swapchannel(github.com/hyperledger/fabric/core/scc/lscc) deployed
2019-10-11 06:58:49.259 UTC [cscc] Init -> INFO 036 Init CSCC
2019-10-11 06:58:49.259 UTC [sccapi] deploySysCC -> INFO 037 system chaincode cscc/swapchannel(github.com/hyperledger/fabric/core/scc/cscc) deployed
2019-10-11 06:58:49.259 UTC [qscc] Init -> INFO 038 Init QSCC
2019-10-11 06:58:49.259 UTC [sccapi] deploySysCC -> INFO 039 system chaincode qscc/swapchannel(github.com/hyperledger/fabric/core/scc/qscc) deployed
2019-10-11 06:58:49.260 UTC [sccapi] deploySysCC -> INFO 03a system chaincode (+lifecycle,github.com/hyperledger/fabric/core/chaincode/lifecycle) disabled
2019-10-11 06:58:49.260 UTC [gossip.gossip] UpdateChaincodes -> WARN 03b No such channel [115 119 97 112 99 104 97 110 110 101 108]
2019-10-11 06:58:49.260 UTC [endorser] callChaincode -> INFO 03c [][0a258cff] Exit chaincode: name:"cscc" 

After some time peer logs
2019-10-11 06:59:44.628 UTC [protoutils] ValidateProposalMessage -> WARN 0ec channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:44.628 UTC [comm.grpc.server] 1 -> INFO 0ed unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50614 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=420.001탎
2019-10-11 06:59:45.268 UTC [gossip.gossip] Gossip -> WARN 0ee Failed obtaining gossipChannel of [115 119 97 112 99 104 97 110 110 101 108] aborting
2019-10-11 06:59:45.456 UTC [protoutils] ValidateProposalMessage -> WARN 0ef channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:45.457 UTC [comm.grpc.server] 1 -> INFO 0f0 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50616 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=357.5탎
2019-10-11 06:59:46.270 UTC [protoutils] ValidateProposalMessage -> WARN 0f1 channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:46.270 UTC [comm.grpc.server] 1 -> INFO 0f2 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50630 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=398탎
2019-10-11 06:59:47.082 UTC [protoutils] ValidateProposalMessage -> WARN 0f3 channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:47.082 UTC [comm.grpc.server] 1 -> INFO 0f4 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50634 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=357.701탎
2019-10-11 06:59:47.923 UTC [protoutils] ValidateProposalMessage -> WARN 0f5 channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:47.923 UTC [comm.grpc.server] 1 -> INFO 0f6 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50638 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=407.2탎
2019-10-11 06:59:48.769 UTC [protoutils] ValidateProposalMessage -> WARN 0f7 channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:48.769 UTC [comm.grpc.server] 1 -> INFO 0f8 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50642 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=404.901탎
2019-10-11 06:59:49.279 UTC [ConnProducer] NewConnection -> ERRO 0f9 Failed connecting to {oodjaeuen108-orderer2.orderer.com:7050 []} , error: context deadlineexceeded
2019-10-11 06:59:49.603 UTC [protoutils] ValidateProposalMessage -> WARN 0fa channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:49.603 UTC [comm.grpc.server] 1 -> INFO 0fb unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50658 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=396.901탎
2019-10-11 06:59:50.269 UTC [gossip.gossip] Gossip -> WARN 0fc Failed obtaining gossipChannel of [115 119 97 112 99 104 97 110 110 101 108] aborting
2019-10-11 06:59:50.435 UTC [protoutils] ValidateProposalMessage -> WARN 0fd channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:50.435 UTC [comm.grpc.server] 1 -> INFO 0fe unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50662 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=370.5탎
2019-10-11 06:59:51.254 UTC [protoutils] ValidateProposalMessage -> WARN 0ff channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:51.254 UTC [comm.grpc.server] 1 -> INFO 100 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50664 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=375.001탎
2019-10-11 06:59:52.075 UTC [protoutils] ValidateProposalMessage -> WARN 101 channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:52.075 UTC [comm.grpc.server] 1 -> INFO 102 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50668 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=408.501탎
2019-10-11 06:59:52.280 UTC [ConnProducer] NewConnection -> ERRO 103 Failed connecting to {oodjaeuen108-orderer1.orderer.com:7050 []} , error: context deadlineexceeded
2019-10-11 06:59:52.894 UTC [protoutils] ValidateProposalMessage -> WARN 104 channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:52.894 UTC [comm.grpc.server] 1 -> INFO 105 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50684 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=317.7탎
2019-10-11 06:59:53.721 UTC [protoutils] ValidateProposalMessage -> WARN 106 channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:53.721 UTC [comm.grpc.server] 1 -> INFO 107 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50690 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=414.701탎
2019-10-11 06:59:54.578 UTC [protoutils] ValidateProposalMessage -> WARN 108 channel [swapchannel]: MSP error: MSP abc1MSP is unknown
2019-10-11 06:59:54.579 UTC [comm.grpc.server] 1 -> INFO 109 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=104.211.89.242:50710 error="access denied: channel [swapchannel] creator org [abc1MSP]" grpc.code=Unknown grpc.call_duration=296.6탎
2019-10-11 06:59:55.269 UTC [gossip.gossip] Gossip -> WARN 10a Failed obtaining gossipChannel of [115 119 97 112 99 104 97 110 110 101 108] aborting
2019-10-11 06:59:55.281 UTC [ConnProducer] NewConnection -> ERRO 10b Failed connecting to {oodjaeuen108-orderer0.orderer.com:7050 []} , error: context deadlineexceeded
2019-10-11 06:59:55.281 UTC [ConnProducer] NewConnection -> ERRO 10c Could not connect to any of the endpoints: [{oodjaeuen108-orderer2.orderer.com:7050 []} {oodjaeuen108-orderer1.orderer.com:7050 []} {oodjaeuen108-orderer0.orderer.com:7050 []}]
2019-10-11 06:59:55.281 UTC [deliveryClient] connect -> ERRO 10d Failed obtaining connection: could not connect to any of the endpoints: [{oodjaeuen108-orderer2.orderer.com:7050 []} {oodjaeuen108-orderer1.orderer.com:7050 []} {oodjaeuen108-orderer0.orderer.com:7050 []}]
2019-10-11 07:00:55.286 UTC [ConnProducer] NewConnection -> ERRO 141 Failed connecting to {oodjaeuen108-orderer2.orderer.com:7050 []} , error: context deadlineexceeded
2019-10-11 07:00:58.288 UTC [ConnProducer] NewConnection -> ERRO 142 Failed connecting to {oodjaeuen108-orderer1.orderer.com:7050 []} , error: context deadlineexceeded
2019-10-11 07:01:00.275 UTC [gossip.gossip] Gossip -> WARN 143 Failed obtaining gossipChannel of [115 119 97 112 99 104 97 110 110 101 108] aborting
2019-10-11 07:01:01.289 UTC [ConnProducer] NewConnection -> ERRO 144 Failed connecting to {oodjaeuen108-orderer0.orderer.com:7050 []} , error: context deadlineexceeded
2019-10-11 07:01:01.289 UTC [ConnProducer] NewConnection -> ERRO 145 Could not connect to any of the endpoints: [{oodjaeuen108-orderer2.orderer.com:7050 []} {oodjaeuen108-orderer1.orderer.com:7050 []} {oodjaeuen108-orderer0.orderer.com:7050 []}]
2019-10-11 07:01:01.289 UTC [deliveryClient] connect -> ERRO 146 Failed obtaining connection: could not connect to any of the endpoints: [{oodjaeuen108-orderer2.orderer.com:7050 []} {oodjaeuen108-orderer1.orderer.com:7050 []} {oodjaeuen108-orderer0.orderer.com:7050 []}]


Here the Orderer logs
ConsensusRequest for channel swapchannel with payload of size 28
2019-10-11 07:01:53.812 UTC [orderer.common.cluster.step] handleMessage -> DEBU 4233 Received message from oodjaeuen108-orderer2.orderer.com(172.21.0.5:50430):ConsensusRequest for channel swapchannel with payload of size 28
2019-10-11 07:01:54.256 UTC [orderer.common.cluster.step] handleMessage -> DEBU 4234 Received message from oodjaeuen108-orderer0.orderer.com(172.21.0.6:42950):ConsensusRequest for channel testchainid with payload of size 28
2019-10-11 07:01:54.256 UTC [orderer.consensus.etcdraft] consensusSent -> DEBU 4235 Sending msg of 28 bytes to 3 on channel testchainid took 3.1탎
2019-10-11 07:01:54.256 UTC [orderer.common.cluster.step] sendMessage -> DEBU 4236 Send of ConsensusRequest for channel testchainid with payload of size 28 to oodjaeuen108-orderer0.orderer.com(oodjaeuen108-orderer0.orderer.com:7050) took 39.7탎
2019-10-11 07:01:54.311 UTC [orderer.consensus.etcdraft] consensusSent -> DEBU 4237 Sending msg of 28 bytes to 1 on channel swapchannel took 5.3탎
2019-10-11 07:01:54.311 UTC [orderer.consensus.etcdraft] consensusSent -> DEBU 4238 Sending msg of 28 bytes to 3 on channel swapchannel took 3탎
2019-10-11 07:01:54.311 UTC [orderer.common.cluster.step] sendMessage -> DEBU 4239 Send of ConsensusRequest for channel swapchannel with payload of size 28 to oodjaeuen108-orderer0.orderer.com(oodjaeuen108-orderer0.orderer.com:7050) took 43.1탎
2019-10-11 07:01:54.311 UTC [orderer.common.cluster.step] sendMessage -> DEBU 423a Send of ConsensusRequest for channel swapchannel with payload of size 28 to oodjaeuen108-orderer2.orderer.com(oodjaeuen108-orderer2.orderer.com:7050) took 18탎
2019-10-11 07:01:54.312 UTC [orderer.common.cluster.step] handleMessage -> DEBU 423b Received message from oodjaeuen108-orderer2.orderer.com(172.21.0.5:50430):ConsensusRequest for channel swapchannel with payload of size 28
2019-10-11 07:01:54.312 UTC [orderer.common.cluster.step] handleMessage -> DEBU 423c Received message from oodjaeuen108-orderer0.orderer.com(172.21.0.6:42950):ConsensusRequest for channel swapchannel with payload of size 28
2019-10-11 07:01:54.755 UTC [orderer.common.cluster.step] handleMessage -> DEBU 423d Received message from oodjaeuen108-orderer0.orderer.com(172.21.0.6:42950):ConsensusRequest for channel testchainid with payload of size 28
2019-10-11 07:01:54.755 UTC [orderer.consensus.etcdraft] consensusSent -> DEBU 423e Sending msg of 28 bytes to 3 on channel testchainid took 2.8탎
2019-10-11 07:01:54.755 UTC [orderer.common.cluster.step] sendMessage -> DEBU 423f Send of ConsensusRequest for channel testchainid with payload of size 28 to oodjaeuen108-orderer0.orderer.com(oodjaeuen108-orderer0.orderer.com:7050) took 22.4탎
2019-10-11 07:01:54.811 UTC [orderer.consensus.etcdraft] consensusSent -> DEBU 4240 Sending msg of 28 bytes to 3 on channel swapchannel took 5탎
2019-10-11 07:01:54.811 UTC [orderer.consensus.etcdraft] consensusSent -> DEBU 4241 Sending msg of 28 bytes to 1 on channel swapchannel took 2.5탎
2019-10-11 07:01:54.811 UTC [orderer.common.cluster.step] sendMessage -> DEBU 4242 Send of ConsensusRequest for channel swapchannel with payload of size 28 to oodjaeuen108-orderer2.orderer.com(oodjaeuen108-orderer2.orderer.com:7050) took 111.3탎
2019-10-11 07:01:54.811 UTC [orderer.common.cluster.step] sendMessage -> DEBU 4243 Send of ConsensusRequest for channel swapchannel with payload of size 28 to oodjaeuen108-orderer0.orderer.com(oodjaeuen108-orderer0.orderer.com:7050) took 140.1탎
2019-10-11 07:01:54.812 UTC [orderer.common.cluster.step] handleMessage -> DEBU 4244 Received message from oodjaeuen108-orderer2.orderer.com(172.21.0.5:50430):ConsensusRequest for channel swapchannel with payload of size 28
2019-10-11 07:01:54.812 UTC [orderer.common.cluster.step] handleMessage -> DEBU 4245 Received message from oodjaeuen108-orderer0.orderer.com(172.21.0.6:42950):ConsensusRequest for channel swapchannel with payload of size 28

CA logs
2019/10/11 06:58:48 [DEBUG] DB: Getting identity admin
2019/10/11 06:58:48 [DEBUG] Successful token authentication of 'admin'
2019/10/11 06:58:48 [DEBUG] Received affiliation update request from admin
2019/10/11 06:58:48 [DEBUG] Processing affiliation configuration update request
2019/10/11 06:58:48 [DEBUG] Processing POST request
2019/10/11 06:58:48 [DEBUG] Request to add affiliation 'abc1-swap'
2019/10/11 06:58:48 [DEBUG] DB: Get affiliation abc1-swap
2019/10/11 06:58:48 [DEBUG] Checking to see if affiliation 'abc1-swap' contains caller's affiliation ''
2019/10/11 06:58:48 [DEBUG] Caller has root affiliation
2019/10/11 06:58:48 [DEBUG] DB: Add affiliation abc1-swap
2019/10/11 06:58:48 [DEBUG] Affiliation 'abc1-swap' added
2019/10/11 06:58:48 [INFO] 104.211.89.242:35902 POST /api/v1/affiliations 201 0 "OK"



Here the configtx.yml file content for creating genesis block
---

################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    #PLACEHOLDER1
    
    - &Orderer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Orderer

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: crypto-config/ordererOrganizations/orderer.com/msp 
################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.4.2 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.4.2
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.4.2 orderer capabilities, ensure that all
        # orderers on a channel are at v1.4.2 or later.
        V1_4_2: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.4.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.4.2.
        V1_4_2: true
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3.
        V1_3: false
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false
        
################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

   # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: etcdraft
    EtcdRaft:
        Consenters:
        #PLACEHOLDER2
        
        - Host: oodjaeuen108-orderer2.orderer.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/oodjaeuen108-orderer2.orderer.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/oodjaeuen108-orderer2.orderer.com/tls/server.crt
                  
        - Host: oodjaeuen108-orderer1.orderer.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/oodjaeuen108-orderer1.orderer.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/oodjaeuen108-orderer1.orderer.com/tls/server.crt
                  
        - Host: oodjaeuen108-orderer0.orderer.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/oodjaeuen108-orderer0.orderer.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/oodjaeuen108-orderer0.orderer.com/tls/server.crt
          
    Organizations:
            #PLACEHOLDER3
     
     - *Orderer            
    Addresses:
        #PLACEHOLDER4
            
        - oodjaeuen108-orderer2.orderer.com:7050            
        - oodjaeuen108-orderer1.orderer.com:7050            
        - oodjaeuen108-orderer0.orderer.com:7050                
    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"   
 ################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:
    OrdererGenesis:
        Orderer:
            <<: *OrdererDefaults
            Capabilities:
                <<: *OrdererCapabilities
            
                
        Consortiums:
            defaultConsortium:
                Organizations:

