{"msg":"Has joined the channel.","username":"AramBarnett","ts":"2017-04-26T04:52:05.001Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tkuhrt","ts":"2017-04-26T13:12:03.721Z","type":"uj"}
{"msg":"Hyperledger Burrow Discussion","username":"tkuhrt","ts":"2017-04-26T13:13:16.362Z","type":"room_changed_topic"}
{"msg":"Has joined the channel.","username":"benjaminbollen","ts":"2017-04-26T15:43:55.093Z","type":"uj"}
{"msg":"I can kick start the conversation here with a short introduction of Burrow and myself (thx Tracy and Ry for creating the channel!)","username":"benjaminbollen","ts":"2017-04-26T15:45:04.057Z"}
{"msg":"Hyperledger Burrow is a permissioned Ethereum smart contract machine that newly joined the Hyperledger family as an incubation project!  We are very honoured and look forward to closer integrations and collaboration within the Hyperledger umbrella.  You can find the code development for Burrow here: https://github.com/hyperledger/burrow","username":"benjaminbollen","ts":"2017-04-26T15:47:40.989Z"}
{"msg":"@silasdavis and I will move our development discussion from internal slack here and we welcome people to join those discussions and the development","username":"benjaminbollen","ts":"2017-04-26T15:48:51.071Z"}
{"msg":"Has joined the channel.","username":"silasdavis","ts":"2017-04-26T15:48:51.121Z","type":"uj"}
{"msg":"Last perhaps I want to thank @Dan and @amundson for a two days at the Hyperledger hackfest. I safely touched ground and will look to do a first PR burrow-evm as a sawtooth transaction processor by COB tomorrow (I slept on the flight back sorry :) )","username":"benjaminbollen","ts":"2017-04-26T15:51:54.100Z"}
{"msg":"Last perhaps I want to thank @Dan and @amundson for a two days at the Hyperledger hackfest. I safely touched ground and will look to do a first PR burrow-evm as a sawtooth transaction processor by COB tomorrow (I slept on the flight back sorry )","username":"benjaminbollen","ts":"2017-04-26T15:51:54.100Z"}
{"msg":"Has joined the channel.","username":"Dan","ts":"2017-04-26T15:51:54.164Z","type":"uj"}
{"msg":"Has joined the channel.","username":"amundson","ts":"2017-04-26T15:51:54.181Z","type":"uj"}
{"msg":"Has joined the channel.","username":"adamludvik","ts":"2017-04-26T16:04:47.859Z","type":"uj"}
{"msg":"Has joined the channel.","username":"boydjohnson","ts":"2017-04-26T16:28:21.607Z","type":"uj"}
{"msg":"Yeah that was great meeting up. I'm glad we were able to hold up the hacking part of the hackfest. Good participation too from @VipinB, @stan.liberman, Ram and others.","username":"Dan","ts":"2017-04-26T17:06:54.905Z"}
{"msg":"Has joined the channel.","username":"stan.liberman","ts":"2017-04-26T17:06:54.970Z","type":"uj"}
{"msg":"Has joined the channel.","username":"VipinB","ts":"2017-04-26T17:06:54.988Z","type":"uj"}
{"msg":"I'm sure @bbehlendorf and crew over in the other meeting would have enjoyed the hands on activity.","username":"Dan","ts":"2017-04-26T17:08:11.808Z"}
{"msg":"Has joined the channel.","username":"bbehlendorf","ts":"2017-04-26T17:08:11.867Z","type":"uj"}
{"msg":"Has joined the channel.","username":"agunde","ts":"2017-04-26T17:40:44.163Z","type":"uj"}
{"msg":"It was really a great way to kick off our collaboration and get to know more about the EVM and Burrow specifically.","username":"amundson","ts":"2017-04-26T17:42:28.503Z"}
{"msg":"Has joined the channel.","username":"pschwarz","ts":"2017-04-26T17:44:19.185Z","type":"uj"}
{"msg":"Looking forward to the PR!","username":"pschwarz","ts":"2017-04-26T17:46:50.882Z"}
{"msg":"Has joined the channel.","username":"mfford","ts":"2017-04-26T18:15:15.062Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kelly_","ts":"2017-04-26T18:19:20.780Z","type":"uj"}
{"msg":"@benjaminbollen - @adamludvik (Adam), @pschwarz (Peter), @boydjohnson (Boyd), and myself are all ready to help as-needed on the burrow-evm branch.  We will try and have a PR to add a payload protobuf with some code to create/submit a transaction with it soon.","username":"amundson","ts":"2017-04-26T23:04:41.495Z"}
{"msg":"@benjaminbollen - Is it correct that the ABI is only used on the client side when creating the transaction, and that we do not need to send it as part of the transaction?","username":"amundson","ts":"2017-04-26T23:05:52.254Z"}
{"msg":"Has joined the channel.","username":"LoveshHarchandani","ts":"2017-04-27T06:44:22.802Z","type":"uj"}
{"msg":"Has joined the channel.","username":"DrTES","ts":"2017-04-27T12:07:06.044Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dklesev","ts":"2017-04-27T16:22:10.070Z","type":"uj"}
{"msg":"that is correct; the ABI sits at the client side; internally though we have plans for the ABI definition to be understood by the chain;  this is hard to do on a public ETH chain, and wasnt incorporate but is possible on a permissioned chain and of a lot of value","username":"benjaminbollen","ts":"2017-04-27T16:37:26.714Z"}
{"msg":"that is correct; the ABI sits at the client side; internally though we have plans for the ABI definition to be understood by the chain;  this is hard to do on a public ETH chain, and wasnt part of the public ETH design but is possible on a permissioned chain and of a lot of value","username":"benjaminbollen","ts":"2017-04-27T16:37:26.714Z"}
{"msg":"(this also was dependent on EIP 141; which allows to interject a hash into the compiled contract code to match the ABI definition to compiled smart contract code)","username":"benjaminbollen","ts":"2017-04-27T16:38:50.164Z"}
{"msg":"Hi @benjaminbollen, maybe there should be optional attestations from a TEE to ensure that the code was deployed from a secure node. This can start with just being in the deployment of the contract and some sort of protocol interacting with the ABI hash. Further we can look at this being part of sensitive or high value transactions (also on an optional basis)-this way we harden the trust envelope (maybe cheaply)","username":"VipinB","ts":"2017-04-27T17:15:38.821Z"}
{"msg":"hi @VipinB !  that is a great suggestion.  We have the foundation for that through the permissioning system, as `CREATE` is a permissioned execution step; but this can be much further worked out and connected to other attestations (TEE as you suggest) and better integrated user experience","username":"benjaminbollen","ts":"2017-04-27T18:06:49.042Z"}
{"msg":"Has joined the channel.","username":"PrestonByrne","ts":"2017-04-27T18:26:31.197Z","type":"uj"}
{"msg":"Has joined the channel.","username":"DerekTiffany","ts":"2017-04-28T05:15:09.359Z","type":"uj"}
{"msg":"Has joined the channel.","username":"atq","ts":"2017-04-28T16:34:17.263Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sstone1","ts":"2017-04-29T14:34:09.035Z","type":"uj"}
{"msg":"tkuhrt","username":"rjones","ts":"2017-05-01T18:34:15.045Z","type":"subscription-role-added"}
{"msg":"Has joined the channel.","username":"Lakshmipadmaja","ts":"2017-05-02T04:59:14.334Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jrosmith","ts":"2017-05-02T15:12:39.848Z","type":"uj"}
{"msg":"hey all, i'm testing out burrow and figured id get started by familiarizing myself with monax, i'm working through the examples here: https://monax.io/docs/getting-started/#fn:7","username":"jrosmith","ts":"2017-05-02T15:13:47.093Z"}
{"msg":"oops just kidding, thats a troubeshooting guide. working through these: https://monax.io/docs/getting-started/","username":"jrosmith","ts":"2017-05-02T15:14:21.893Z"}
{"msg":"currently on step 4.1 and I'm having an issue with installing the packages. my package.json currently looks like so: \n\n```\n{\n  \"name\": \"idis_app\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"@monax/legacy-contracts\": \"^0.16.0\",\n    \"prompt\": \"*\"\n  }\n}\n```","username":"jrosmith","ts":"2017-05-02T15:15:02.298Z"}
{"msg":"im running `npm install` from `~/.monax/apps/idi and am getting the following output:\n```\nidis_app@0.0.1 /Users/jrosmith/.monax/apps/idi\n└─┬ prompt@1.0.0 \n  ├── colors@1.1.2 \n  ├── pkginfo@0.4.0 \n  ├─┬ read@1.0.7 \n  │ └── mute-stream@0.0.7 \n  ├── revalidator@0.1.8 \n  ├─┬ utile@0.3.0 \n  │ ├── async@0.9.2 \n  │ ├── deep-equal@0.2.2 \n  │ ├── i@0.3.5 \n  │ ├─┬ mkdirp@0.5.1 \n  │ │ └── minimist@0.0.8 \n  │ ├── ncp@1.0.1 \n  │ └─┬ rimraf@2.6.1 \n  │   └─┬ glob@7.1.1 \n  │     ├── fs.realpath@1.0.0 \n  │     ├─┬ inflight@1.0.6 \n  │     │ └── wrappy@1.0.2 \n  │     ├── inherits@2.0.3 \n  │     ├─┬ minimatch@3.0.3 \n  │     │ └─┬ brace-expansion@1.1.7 \n  │     │   ├── balanced-match@0.4.2 \n  │     │   └── concat-map@0.0.1 \n  │     ├── once@1.4.0 \n  │     └── path-is-absolute@1.0.1 \n  └─┬ winston@2.1.1 \n    ├── async@1.0.0 \n    ├── colors@1.0.3 \n    ├── cycle@1.0.3 \n    ├── eyes@0.1.8 \n    ├── isstream@0.1.2 \n    ├── pkginfo@0.3.1 \n    └── stack-trace@0.0.9 \n\nnpm WARN idis_app@0.0.1 No description\nnpm WARN idis_app@0.0.1 No repository field.\nnpm WARN idis_app@0.0.1 No license field.\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: ansi-regex@2.1.1 (node_modules/@monax/legacy-contracts/node_modules/ansi-regex):\nnpm WARN enoent SKIPPING OPTIONAL DEPENDENCY: ENOENT: no such file or directory, rename '/Users/jrosmith/.monax/apps/idi/node_modules/.staging/ansi-regex-57a48697' -> '/Users/jrosmith/.monax/apps/idi/node_modules/@monax/legacy-contracts/node_modules/ansi-regex'\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: ansi-styles@2.2.1 (node_modules/@monax/legacy-contracts/node_modules/ansi-styles):\nnpm WARN enoent SKIPPING OPTIONAL DEPENDENCY: ENOENT: no such file or directory, rename '/Users/jrosmith/.monax/apps/idi/node_modules/.staging/ansi-styles-db3a4a9e' -> '/Users/jrosmith/.monax/apps/idi/node_modules/@monax/legacy-contracts/node_modules/ansi-styles'\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: any-promise@1.3.0 (node_modules/@monax/legacy-contracts/node_modules/any-promise):\nnpm WARN enoent SKIPPING OPTIONAL DEPENDENCY: ENOENT: no such file or directory, rename '/Users/jrosmith/.monax/apps/idi/node_modules/.staging/any-promise-8f1cc9c7' -> '/Users/jrosmith/.monax/apps/idi/node_modules/@monax/legacy-contracts/node_modules/any-promise'\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: asn1@0.2.3 (node_modules/@monax/legacy-contracts/node_modules/asn1):\nnpm WARN enoent SKIPPING OPTIONAL DEPENDENCY: ENOENT: no such file or directory, rename '/Users/jrosmith/.monax/apps/idi/node_modules/.staging/asn1-002f5167' -> '/Users/jrosmith/.monax/apps/idi/node_modules/@monax/legacy-contracts/node_modules/asn1'\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: assert-plus@0.2.0 (node_modules/@monax/legacy-contracts/node_modules/assert-plus):\nnpm WARN enoent SKIPPING OPTIONAL DEPENDENCY: ENOENT: no such file or directory, rename '/Users/jrosmith/.monax/apps/idi/node_modules/.staging/assert-plus-71a2e590' -> '/Users/jrosmith/.monax/apps/idi/node_modules/@monax/legacy-contracts/node_modules/assert-plus'\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: asynckit@0.4.0 (node_modules/@monax/legacy-contracts/node_modules/asynckit):\nnpm WARN enoent SKIPPING OPTIONAL DEPENDENCY: ENOENT: no such file or directory, rename '/Users/jrosmith/.monax/apps/idi/node_modules/.staging/asynckit-461bc7f0' -> '/Users/jrosmith/.monax/apps/idi/node_modules/@monax/legacy-contracts/node_modules/asynckit'\nnpm ERR! Darwin 16.5.0\nnpm ERR! argv \"/usr/local/Cellar/node/7.1.0/bin/node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! node v6.10.0\nnpm ERR! npm  v3.10.10\nnpm ERR! path /Users/jrosmith/.monax/apps/idi/node_modules/.staging/bignumber.js-d9f80baa\nnpm ERR! code ENOENT\nnpm ERR! errno -2\nnpm ERR! syscall rename\n\nnpm ERR! enoent ENOENT: no such file or directory, rename '/Users/jrosmith/.monax/apps/idi/node_modules/.staging/bignumber.js-d9f80baa' -> '/Users/jrosmith/.monax/apps/idi/node_modules/@monax/legacy-contracts/node_modules/bignumber.js'\nnpm ERR! enoent ENOENT: no such file or directory, rename '/Users/jrosmith/.monax/apps/idi/node_modules/.staging/bignumber.js-d9f80baa' -> '/Users/jrosmith/.monax/apps/idi/node_modules/@monax/legacy-contracts/node_modules/bignumber.js'\nnpm ERR! enoent This is most likely not a problem with npm itself\nnpm ERR! enoent and is related to npm not being able to find a file.\nnpm ERR! enoent \n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/jrosmith/.monax/apps/idi/npm-debug.log\n```","username":"jrosmith","ts":"2017-05-02T15:16:01.421Z"}
{"msg":"not sure if this an error on my end or an issue with the package? ","username":"jrosmith","ts":"2017-05-02T15:16:32.106Z"}
{"msg":"Has joined the channel.","username":"compleatang","ts":"2017-05-02T16:48:13.646Z","type":"uj"}
{"msg":"Has joined the channel.","username":"beauson45","ts":"2017-05-03T08:09:13.249Z","type":"uj"}
{"msg":"Ended up resolving the issues. Updated my package.json so that `@monax/legacy-contracts` points to `0.16.7` and upgraded npm","username":"jrosmith","ts":"2017-05-03T15:21:10.976Z"}
{"msg":"great!  note that we have moved the javascript libraries into legacy mode, which we will maintain; but the idea is very much for burrow to fully move out of monax tooling and the associated javascript libraries and for burrow to live independently of monax tooling;  unfortunately right now the documentation and user interfaces are still all written for monax; not burrow directly","username":"benjaminbollen","ts":"2017-05-03T16:04:08.662Z"}
{"msg":"Has joined the channel.","username":"schwentker2","ts":"2017-05-03T19:18:07.951Z","type":"uj"}
{"msg":"Has joined the channel.","username":"snowy13","ts":"2017-05-04T08:59:02.160Z","type":"uj"}
{"msg":"Has joined the channel.","username":"himansri","ts":"2017-05-04T11:20:56.489Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dennismckinnon","ts":"2017-05-04T15:39:11.083Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cbf","ts":"2017-05-07T19:47:08.579Z","type":"uj"}
{"msg":"Has joined the channel.","username":"hshimo","ts":"2017-05-08T05:39:20.089Z","type":"uj"}
{"msg":"we have a new channel - #sawtooth-burrow for discussion specific to sawtooth+burrow integration","username":"amundson","ts":"2017-05-08T17:00:34.182Z"}
{"msg":"I am digging into the burrow evm code a little to get a better understanding of what it does and how it works, as well as skimming the Ethereum yellow paper. I am hoping I can get some help with a few questions. Let me know if there is a better place to ask these. Thanks!\n1. Is the storage referred to by opcodes SLOAD and SSTORE blockchain storage?\n2. Is this storage always associated with an account?\n3. The AppState interface define by the burrow evm seems to treat accounts and storage differently, as does the FakeAppState type. Is this out of necessity or convenience?\n4. How is storage for an account limited?","username":"adamludvik","ts":"2017-05-09T20:35:17.018Z"}
{"msg":"1) Yes\n2) Yes\n3) .... Dunno Ben will have to address\n4) Contract storage is a key-value storage system which allows for any 32 byte key. ","username":"dennismckinnon","ts":"2017-05-09T22:10:00.184Z"}
{"msg":"2*) We have introduced some things such as the namereg and permissions. The Namereg has its own trie I believe and permissions I forget how they are associated. But there is probably discussion to be had about how the division of these things are going to work.","username":"dennismckinnon","ts":"2017-05-09T22:12:44.889Z"}
{"msg":"hi Adam.  I think this channel is the perefect place to ask such questions;  \n\n3. FakeAppStore can be misleading as it stores all storage for all accounts in the same storage (by appending the account address and storage location to make a bigger unique key)\nwhen you look at the AppState interface (it is poorly documented) the first word256 is the account address to get/set storage for; the second word256 is the key location in the storage for that account;\n\nIn Burrow the EVM will act on a TxCache (which implements AppState; https://github.com/hyperledger/burrow/blob/master/manager/burrow-mint/state/tx_cache.go#L30-L34) where it will keep for storage a Tuple256 (account and storage key); this TxCache itself is synced back to the BlockCache backend (which for us then also holds a cache for the NameRegistry);  The TxCache does a conversion to/from vmAccounts (which dont hold their own stateRoot) to stateAccounts (https://github.com/hyperledger/burrow/blob/master/account/account.go#L55-L64) which do have the stateRoot;  When syncing TxCache back to BlockCache you see we start splitting the storage for the accounts: https://github.com/hyperledger/burrow/blob/master/manager/burrow-mint/state/tx_cache.go#L143-L146 \n\nThe BlockCache is backed up by State and will make a trie for storage for each account;  these tries are put in the trie for all accounts in state ","username":"benjaminbollen","ts":"2017-05-10T12:22:38.316Z"}
{"msg":"hi Adam.  I think this channel is the perefect place to ask such questions;  \n\n3. FakeAppState can be misleading as it stores all storage for all accounts in the same storage (by appending the account address and storage location to make a bigger unique key)\nwhen you look at the AppState interface (it is poorly documented) the first word256 is the account address to get/set storage for; the second word256 is the key location in the storage for that account;\n\nIn Burrow the EVM will act on a TxCache (which implements AppState; https://github.com/hyperledger/burrow/blob/master/manager/burrow-mint/state/tx_cache.go#L30-L34) where it will keep for storage a Tuple256 (account and storage key); this TxCache itself is synced back to the BlockCache backend (which for us then also holds a cache for the NameRegistry);  The TxCache does a conversion to/from vmAccounts (which dont hold their own stateRoot) to stateAccounts (https://github.com/hyperledger/burrow/blob/master/account/account.go#L55-L64) which do have the stateRoot;  When syncing TxCache back to BlockCache you see we start splitting the storage for the accounts: https://github.com/hyperledger/burrow/blob/master/manager/burrow-mint/state/tx_cache.go#L143-L146 \n\nThe BlockCache is backed up by State and will make a trie for storage for each account;  these tries are put in the trie for all accounts in state ","username":"benjaminbollen","ts":"2017-05-10T12:22:38.316Z"}
{"msg":"this way we prevent unneeded trie updates and minimise garbarge generation; @adamludvik ","username":"benjaminbollen","ts":"2017-05-10T12:25:45.947Z"}
{"msg":"4. the storage of an account is theoretically only limited by the 256bit key addressing space","username":"benjaminbollen","ts":"2017-05-10T12:26:19.618Z"}
{"msg":"4. the storage of an account is theoretically only limited by the 256bit key addressing space, and 256bit value","username":"benjaminbollen","ts":"2017-05-10T12:26:19.618Z"}
{"msg":"4. the storage of an account is theoretically only limited by the 256bit key addressing space, and 256bit value per key","username":"benjaminbollen","ts":"2017-05-10T12:26:19.618Z"}
{"msg":"in public ethereum there is a cost associated to storage, for us we only have an as wide as possible execution constraint per transaction to write into the storage","username":"benjaminbollen","ts":"2017-05-10T12:27:53.154Z"}
{"msg":"in public ethereum there is a cost associated to storage, for us we only have an as wide as possible execution constraint per transaction to write into the storage (running out of gas)","username":"benjaminbollen","ts":"2017-05-10T12:27:53.154Z"}
{"msg":"@adamludvik so in a first draft; we could lean closer to FakeAppState than to the State in Burrow (or at least that is the argument for cutting the EVM out at AppSate; rather than at our Application Blockchain Interface (underneath State handling);  ","username":"benjaminbollen","ts":"2017-05-10T12:27:53.154Z"}
{"msg":"additionally Address+Key is a 20+32 byte depth","username":"benjaminbollen","ts":"2017-05-10T13:06:50.035Z"}
{"msg":"so we will want to deal with that differently in Sawtooth","username":"benjaminbollen","ts":"2017-05-10T13:08:44.831Z"}
{"msg":"so we can't naievely do that","username":"benjaminbollen","ts":"2017-05-10T13:08:44.831Z"}
{"msg":"Thanks both of you for the detailed answers! They were a big help.","username":"adamludvik","ts":"2017-05-10T21:13:13.227Z"}
{"msg":"Not a problem! excited to work on this!","username":"dennismckinnon","ts":"2017-05-10T21:22:17.779Z"}
{"msg":"I'm re-doing the vagrant setup because i was partway through the tutorials last week and then all the docs have changed :P","username":"dennismckinnon","ts":"2017-05-10T21:23:23.619Z"}
{"msg":"Has joined the channel.","username":"KentLandholm","ts":"2017-05-11T09:48:13.271Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jaemin.lim","ts":"2017-05-11T13:08:47.724Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dhuseby","ts":"2017-05-11T14:13:27.449Z","type":"uj"}
{"msg":"Probably a good idea. :) We are making a big push right now to update and improve our documentation.","username":"adamludvik","ts":"2017-05-11T14:38:21.092Z"}
{"msg":"Quick question about the Account type. There is an Other field which doesn't seem to be used by the VM. Does that field have an intended purpose? I see it being used by TxCache to store a pubkey and storage root, but is this a burrow/tendermint specific usage?","username":"adamludvik","ts":"2017-05-11T14:42:50.641Z"}
{"msg":"I posted written comments back in #sawtooth-burrow where option 4. might shine a light on that question; namely that the StorageRoot allows us to store the storage in the DB as a new MerkleTree; and such for each account","username":"benjaminbollen","ts":"2017-05-11T16:29:06.965Z"}
{"msg":"the PublicKey is used for ed25519 validation of signatures (ed25519 is more efficient than secp256k1 but doesnt support public key recovery); in burrow every tx has the public key in it; but on the first tx for an public key derived account, the public key is immutably written to that account and hence used for verification of messages ","username":"benjaminbollen","ts":"2017-05-11T16:33:29.485Z"}
{"msg":"\"StorageRoot allows us to store the storage in the DB as a new MerkleTree\" Cool!","username":"adamludvik","ts":"2017-05-11T16:59:49.425Z"}
{"msg":"@amundson ^","username":"adamludvik","ts":"2017-05-11T16:59:54.417Z"}
{"msg":"Has joined the channel.","username":"czar0","ts":"2017-05-15T20:08:06.254Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kellyo","ts":"2017-05-16T01:06:38.470Z","type":"uj"}
{"msg":"Has left the channel.","username":"rjones","ts":"2017-05-16T19:37:45.515Z","type":"ul"}
{"msg":"Has joined the channel.","username":"Donald Liu","ts":"2017-05-17T01:58:29.497Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2017-05-17T16:20:39.381Z","type":"uj"}
{"msg":"@benjaminbollen do you know someone on github named sushantdm ? they have requested becoming a burrow maintainer, which would give them commit rights to burrow. should I approve or deny that request?","username":"rjones","ts":"2017-05-17T16:21:20.936Z"}
{"msg":"@adamludvik @benjaminbollen do you know someone on github named sushantdm ? they have requested becoming a burrow maintainer, which would give them commit rights to burrow. should I approve or deny that request?","username":"rjones","ts":"2017-05-17T16:21:20.936Z"}
{"msg":"https://github.com/sushantdm","username":"rjones","ts":"2017-05-17T16:21:34.587Z"}
{"msg":"@silasdavis @compleatang ^^^","username":"rjones","ts":"2017-05-17T16:22:23.369Z"}
{"msg":"I do not know them, so would be deny from me","username":"silasdavis","ts":"2017-05-17T17:00:28.344Z"}
{"msg":"there was someone who Ben had mentioned about becoming a maintainer","username":"silasdavis","ts":"2017-05-17T17:00:49.715Z"}
{"msg":"but there is no need for someone to have commit access to contribute","username":"silasdavis","ts":"2017-05-17T17:01:26.364Z"}
{"msg":"I don't think we are yet at the stage where we want to have PRs merged without either Ben or I having seen it","username":"silasdavis","ts":"2017-05-17T17:01:43.649Z"}
{"msg":"and I'm sure any co-maintainers would like to be introduced","username":"silasdavis","ts":"2017-05-17T17:02:31.995Z"}
{"msg":"what did he say in his request?","username":"silasdavis","ts":"2017-05-17T17:02:43.736Z"}
{"msg":"","username":"rjones","ts":"2017-05-17T17:09:04.080Z","attachments":[{"title":"File Uploaded: Screen Shot 2017-05-17 at 10.08.45 AM.png","title_link":"/file-upload/j5MN7WQatvcL8njTt/Screen Shot 2017-05-17 at 10.08.45 AM.png","image_url":"/file-upload/j5MN7WQatvcL8njTt/Screen Shot 2017-05-17 at 10.08.45 AM.png","image_type":"image/png","image_size":64157,"url":"/file-upload/j5MN7WQatvcL8njTt/Screen Shot 2017-05-17 at 10.08.45 AM.png","remote":false,"fileId":"j5MN7WQatvcL8njTt","fileName":"Screen Shot 2017-05-17 at 10.08.45 AM.png"}]}
{"msg":"I denied the request. I can re-invite them if I was incorrect in that","username":"rjones","ts":"2017-05-17T17:09:48.394Z"}
{"msg":"yeah","username":"silasdavis","ts":"2017-05-17T17:19:55.979Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2017-05-17T17:21:49.993Z","type":"ul"}
{"msg":"@rjones that is a safe deny from my side too; he can object here should my memory be super faulty","username":"benjaminbollen","ts":"2017-05-18T14:31:17.237Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2017-05-18T14:31:17.272Z","type":"uj"}
{"msg":"@benjaminbollen done and done","username":"rjones","ts":"2017-05-18T16:59:13.101Z"}
{"msg":"Quick question. Ethereum defines the address to be assigned to a newly created account as “the rightmost 160 bits of the Keccak hash of the RLP encoding of the structure containing only the sender and the nonce”. I see the following in `txs/tx.go` for account creation:\n```\nfunc NewContractAddress(caller []byte, nonce int) []byte {\n    temp := make([]byte, 32+8)\n    copy(temp, caller)\n    PutInt64BE(temp[32:], int64(nonce))\n    hasher := ripemd160.New()\n    hasher.Write(temp) // does not error\n    return hasher.Sum(nil)\n}\n```\nDoes this follow that spec, with the exception of using ripemd160 instead of sha3?","username":"adamludvik","ts":"2017-05-18T17:23:12.549Z"}
{"msg":"@silasdavis can you do initial work to update to Tendermint 0.10.0-rc1 in a feature branch off of develop?","username":"benjaminbollen","ts":"2017-05-19T10:04:08.422Z"}
{"msg":"@adamludvik yes, so burrow will have different accounts calculated (ie we use ripemd160 instead of truncated SHA3)","username":"benjaminbollen","ts":"2017-05-19T10:06:52.173Z"}
{"msg":"this is a choice that can be remade; or carried over in STL; it is relevant before EVM execution on validating the signatures to the account","username":"benjaminbollen","ts":"2017-05-19T10:08:01.703Z"}
{"msg":"to be EVM compatible it is sufficient for it to be 20 bytes; we initially (and still have the framework for) built it to be configurable (ed25519 + ripemd160; or secp256k1 + SHA3); but we found ourselves defaulting to ed25519","username":"benjaminbollen","ts":"2017-05-19T10:14:50.123Z"}
{"msg":"to be EVM compatible it is sufficient for it to be 20 bytes; we initially (and still have the framework for) built it to be configurable (ed25519 + ripemd160; or secp256k1 + SHA3); but we found ourselves defaulting to ed25519 + ripemd160","username":"benjaminbollen","ts":"2017-05-19T10:14:50.123Z"}
{"msg":"Has joined the channel.","username":"PriteshPatel","ts":"2017-05-19T18:24:54.903Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bmalavan","ts":"2017-05-20T14:26:24.745Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AlexisRabeuf","ts":"2017-05-23T09:24:29.742Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zhangchao","ts":"2017-05-23T09:37:57.885Z","type":"uj"}
{"msg":"is there anybody  who can give a comparison between burrow and etherum","username":"zhangchao","ts":"2017-05-23T09:55:37.278Z"}
{"msg":"burrow looks like etherum on the one hand,  and looks like fabric on the other hand","username":"zhangchao","ts":"2017-05-23T09:58:03.802Z"}
{"msg":"Hi @zhangchao, 'ethereum' has few different meanings or senses. There is Ethereum the foundation, ethereum the 'specification' (people like to say it is specified by the 'yellow paper', which is almost true, there is ethereum the public chain, and there are ethereum node clients (like go-ethereum or parity). Burrow is a blockchain node client so the most direct comparison would be with something like go-ethereum, so I'll get to that. Burrow doesn't really compare the Ethereum foundation or the public chain (out there), so I'll discount those.\n\nThere is another sense in which Burrow 'is ethereum', in that our execution engine is an implementation of the Ethereum Virtual Machine (EVM) which is a bytecode language and stack machine specification on which smart contracts are written (in languages like Solidity). Our blockchain state is also in the 'ethereum world view', having to do with accounts at certain 20-byte addresses.\n\nTo compare us to public ethereum clients makes sense as a comparison, but a more apt comparison would probably be to other 'permissioned' or 'enterprise' ethereum clients (some standardisation around what it means to run non-public ethereum-based blockchains is happening at https://entethalliance.org/, I don't care much for the enterprise moniker, but fundamentally running chains amongst non-anonymous collaborating identities is different from the public chain use case.\n\nThere are other 'enterprise ethereum clients' (as which Burrow may be loosely classified) such as Quorum and I belief to some extent Parity. We are by far the most mature (at least, oldest) permissioned ethereum (that is EVM running) client. We are not substitutably compatible with the Ethereum public chain as public ethereum node clients are. And we have made different choices about various things. However we are contract-level compatible with smart contracts written for Ethereum (your Solidity code will run on us). The most important things we do differently (by design rather than by accident) are:\n\n- We use Tendermint consensus with a lightly proof-of-stake approach but more importantly with finality\n- We have a powerful secure native system (snatives) for running non-smart contract code outside of the EVM.\n- We have a deeply integrated permissioning system that is accessible from smart contracts using certain snatives\n- We have an independent implementation of the EVM according to the spec\n- We have a different event system/model\n\nWith respect to the comparison with fabric, we are both full blockchain node clients for a non-public (enterprise) setting so we are similar there. There are plans in the offing to further modularise Burrow to have it run not as a full blockchain node but as an execution substrate on top of other blockchains like Sawtooth Lake (there is active development on this now), and possibly in the future on Fabric too if there is interest from the Hyperledger community.","username":"silasdavis","ts":"2017-05-23T18:36:38.509Z"}
{"msg":"Hi @zhangchao, 'ethereum' has few different meanings or senses. There is Ethereum the foundation, ethereum the 'specification' (people like to say it is specified by the 'yellow paper', which is almost true), there is ethereum the public chain, and there are ethereum node clients (like go-ethereum or parity). Burrow is a blockchain node client so the most direct comparison would be with something like go-ethereum, so I'll get to that. Burrow doesn't really compare the Ethereum foundation or the public chain (out there), so I'll discount those.\n\nThere is another sense in which Burrow 'is ethereum', in that our execution engine is an implementation of the Ethereum Virtual Machine (EVM) which is a bytecode language and stack machine specification on which smart contracts are written (in languages like Solidity). Our blockchain state is also in the 'ethereum world view', having to do with accounts at certain 20-byte addresses.\n\nTo compare us to public ethereum clients makes sense as a comparison, but a more apt comparison would probably be to other 'permissioned' or 'enterprise' ethereum clients (some standardisation around what it means to run non-public ethereum-based blockchains is happening at https://entethalliance.org/, I don't care much for the enterprise moniker, but fundamentally running chains amongst non-anonymous collaborating identities is different from the public chain use case.\n\nThere are other 'enterprise ethereum clients' (as which Burrow may be loosely classified) such as Quorum and I belief to some extent Parity. We are by far the most mature (at least, oldest) permissioned ethereum (that is EVM running) client. We are not substitutably compatible with the Ethereum public chain as public ethereum node clients are. And we have made different choices about various things. However we are contract-level compatible with smart contracts written for Ethereum (your Solidity code will run on us). The most important things we do differently (by design rather than by accident) are:\n\n- We use Tendermint consensus with a lightly proof-of-stake approach but more importantly with finality\n- We have a powerful secure native system (snatives) for running non-smart contract code outside of the EVM.\n- We have a deeply integrated permissioning system that is accessible from smart contracts using certain snatives\n- We have an independent implementation of the EVM according to the spec\n- We have a different event system/model\n\nWith respect to the comparison with fabric, we are both full blockchain node clients for a non-public (enterprise) setting so we are similar there. There are plans in the offing to further modularise Burrow to have it run not as a full blockchain node but as an execution substrate on top of other blockchains like Sawtooth Lake (there is active development on this now), and possibly in the future on Fabric too if there is interest from the Hyperledger community.","username":"silasdavis","ts":"2017-05-23T18:36:38.509Z"}
{"msg":"Hi @zhangchao, 'ethereum' has few different meanings or senses. There is Ethereum the foundation, ethereum the 'specification' (people like to say it is specified by the 'yellow paper', which is almost true), there is ethereum the public chain, and there are ethereum node clients (like go-ethereum or parity). Burrow is a blockchain node client so the most direct comparison would be with something like go-ethereum, so I'll get to that. Burrow doesn't really compare the Ethereum foundation or the public chain (out there), so I'll discount those.\n\nThere is another sense in which Burrow 'is ethereum', in that our execution engine is an implementation of the Ethereum Virtual Machine (EVM) which is a bytecode language and stack machine specification on which smart contracts are written (in languages like Solidity). Our blockchain state is also in the 'ethereum world view', having to do with accounts at certain 20-byte addresses.\n\nTo compare us to public ethereum clients makes sense as a comparison, but a more apt comparison would probably be to other 'permissioned' or 'enterprise' ethereum clients (some standardisation around what it means to run non-public ethereum-based blockchains is happening at https://entethalliance.org/). I don't care much for the enterprise moniker, but fundamentally running chains amongst non-anonymous collaborating identities is different from the public chain use case.\n\nThere are other 'enterprise ethereum clients' (as which Burrow may be loosely classified) such as Quorum and I belief to some extent Parity. We are by far the most mature (at least, oldest) permissioned ethereum (that is EVM running) client. We are not substitutably compatible with the Ethereum public chain as public ethereum node clients are. And we have made different choices about various things. However we are contract-level compatible with smart contracts written for Ethereum (your Solidity code will run on us). The most important things we do differently (by design rather than by accident) are:\n\n- We use Tendermint consensus with a lightly proof-of-stake approach but more importantly with finality\n- We have a powerful secure native system (snatives) for running non-smart contract code outside of the EVM.\n- We have a deeply integrated permissioning system that is accessible from smart contracts using certain snatives\n- We have an independent implementation of the EVM according to the spec\n- We have a different event system/model\n\nWith respect to the comparison with fabric, we are both full blockchain node clients for a non-public (enterprise) setting so we are similar there. There are plans in the offing to further modularise Burrow to have it run not as a full blockchain node but as an execution substrate on top of other blockchains like Sawtooth Lake (there is active development on this now), and possibly in the future on Fabric too if there is interest from the Hyperledger community.","username":"silasdavis","ts":"2017-05-23T18:36:38.509Z"}
{"msg":"Hi @zhangchao, 'ethereum' has few different meanings or senses. There is Ethereum the foundation, ethereum the 'specification' (people like to say it is specified by the 'yellow paper', which is almost true), there is ethereum the public chain, and there are ethereum node clients (like go-ethereum or parity). Burrow is a blockchain node client so the most direct comparison would be with something like go-ethereum, so I'll get to that. Burrow doesn't really compare the Ethereum foundation or the public chain (out there), so I'll discount those.\n\nThere is another sense in which Burrow 'is ethereum', in that our execution engine is an implementation of the Ethereum Virtual Machine (EVM) which is a bytecode language and stack machine specification on which smart contracts are written (in languages like Solidity). Our blockchain state is also in the 'ethereum world view', having to do with accounts at certain 20-byte addresses.\n\nTo compare us to public ethereum clients makes sense as a comparison, but a more apt comparison would probably be to other 'permissioned' or 'enterprise' ethereum clients (some standardisation around what it means to run non-public ethereum-based blockchains is happening at https://entethalliance.org/). I don't care much for the enterprise moniker, but fundamentally running chains amongst non-anonymous collaborating identities is different from the public chain setting.\n\nThere are other 'enterprise ethereum clients' (as which Burrow may be loosely classified) such as Quorum and I belief to some extent Parity. We are by far the most mature (at least, oldest) permissioned ethereum (that is EVM running) client. We are not substitutably compatible with the Ethereum public chain as public ethereum node clients are. And we have made different choices about various things. However we are contract-level compatible with smart contracts written for Ethereum (your Solidity code will run on us). The most important things we do differently (by design rather than by accident) are:\n\n- We use Tendermint consensus with a lightly proof-of-stake approach but more importantly with finality\n- We have a powerful secure native system (snatives) for running non-smart contract code outside of the EVM.\n- We have a deeply integrated permissioning system that is accessible from smart contracts using certain snatives\n- We have an independent implementation of the EVM according to the spec\n- We have a different event system/model\n\nWith respect to the comparison with fabric, we are both full blockchain node clients for a non-public (enterprise) setting so we are similar there. There are plans in the offing to further modularise Burrow to have it run not as a full blockchain node but as an execution substrate on top of other blockchains like Sawtooth Lake (there is active development on this now), and possibly in the future on Fabric too if there is interest from the Hyperledger community.","username":"silasdavis","ts":"2017-05-23T18:36:38.509Z"}
{"msg":"Hi @zhangchao, 'ethereum' has few different meanings or senses. There is Ethereum the foundation, ethereum the 'specification' (people like to say it is specified by the 'yellow paper', which is almost true), there is ethereum the public chain, and there are ethereum node clients (like go-ethereum or parity). Burrow is a blockchain node client so the most direct comparison would be with something like go-ethereum, so I'll get to that. Burrow doesn't really compare the Ethereum foundation or the public chain (out there), so I'll discount those.\n\nThere is another sense in which Burrow 'is ethereum', in that our execution engine is an implementation of the Ethereum Virtual Machine (EVM) which is a bytecode language and stack machine specification on which smart contracts are written (in languages like Solidity). Our blockchain state is also in the 'ethereum world view', having to do with accounts at certain 20-byte addresses.\n\nTo compare us to public ethereum clients makes sense as a comparison, but a more apt comparison would probably be to other 'permissioned' or 'enterprise' ethereum clients (some standardisation around what it means to run non-public ethereum-based blockchains is happening at https://entethalliance.org/). I don't care much for the enterprise moniker, but fundamentally running chains amongst non-anonymous collaborating identities is different from the public chain setting.\n\nThere are other 'enterprise ethereum clients' (as which Burrow may be loosely classified) such as Quorum and I belief to some extent Parity. We are by far the most mature (at least, oldest) permissioned ethereum (that is EVM running) client. We are not substitutably compatible with the Ethereum public chain as public ethereum node clients are. And we have made different choices about various things. However we are contract-level compatible with smart contracts written for Ethereum (your Solidity code will run on us). The most important things we do differently (by design rather than by accident) are:\n\n- We use Tendermint consensus with a lightly proof-of-stake approach but more importantly with finality\n- We have a powerful secure native system (snatives) for running non-smart contract code outside of the EVM.\n- We have a deeply integrated permissioning system that is accessible from smart contracts using certain snatives\n- We have an independent implementation of the EVM according to the spec\n- We have a different event system/model\n\nWith respect to the comparison with fabric, we are both full blockchain node clients in a non-public (enterprise) setting so we are similar in that respect, and we are both smart contract platforms. There are plans in the offing to further modularise Burrow to have it run not as a full blockchain node but as an execution substrate on top of other blockchains like Sawtooth Lake (there is active development on this now), and possibly in the future on Fabric too if there is interest from the Hyperledger community.","username":"silasdavis","ts":"2017-05-23T18:36:38.509Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2017-05-23T19:08:48.813Z","type":"ul"}
{"msg":"@silasdavis , very clear explaination, it helps to me and others who are interested. Public blockchains include Ethereum have wallet, but I dont think enterprise chains like burrow/fabric has it, so it's an another major difference. But in some cases, especially in some finance related domain, token is a very useful data to store something like coin/credit/payment. Does burrow support it","username":"zhangchao","ts":"2017-05-24T02:52:22.022Z"}
{"msg":"@silasdavis , very clear explaination, it helps to me and others who are interested. Public blockchains include Ethereum have wallet, but I dont think enterprise chains like burrow/fabric has it, so it's an another major difference. But in some cases, especially in some finance related domain, token is a very useful data to store something like coin/credit/payment. Does burrow support it in the future version","username":"zhangchao","ts":"2017-05-24T02:52:22.022Z"}
{"msg":"Burrow does have an internal token, much like Eth, and all accounts have a balance that can be changed by Calls or a SendTx. This token is generally used as a way of controlling who can do computation (call contracts) and to bound that computation through the charging of gas (also like ethereum) rather than a bearer of value. It would be possible to make use of the token from smart contracts, however you could just as well represent value in a completely custom way by writing it into a contract (in the simplest case as a table of balances amongst whatever you consider to be 'accounts'). I suppose the crucial difference is that on public ethereum the Eth token is meant to connect you to some 'external' notion of value. This is necessary in the public anonymous setting, but in a permissioned chain since you have some external knowledge of the identities you can imbue those identities with whatever external value or significance that you like. On the other hand the internal token of a freshly spun-up Burrow chain has no external value (though there are ways you could link it to value). A big goal of the ethereum chain is to provide natively an interface to external value through its token,.","username":"silasdavis","ts":"2017-05-24T10:33:34.274Z"}
{"msg":"Burrow does have an internal token, much like Eth, and all accounts have a balance that can be changed by Calls or a SendTx. This token is generally used as a way of controlling who can do computation (call contracts) and to bound that computation through the charging of gas (also like ethereum) rather than a bearer of value. It would be possible to make use of the token from smart contracts, however you could just as well represent value in a completely custom way by writing it into a contract (in the simplest case as a table of balances amongst whatever you consider to be 'accounts'). I suppose the crucial difference is that on public ethereum the Eth token is meant to connect you to some 'external' notion of value. This is necessary in the public anonymous setting, but in a permissioned chain since you have some external knowledge of the identities you can imbue those identities with whatever external value or significance that you like. On the other hand the internal token of a freshly spun-up Burrow chain has no external value (though there are ways you could link it to value). A big goal of the ethereum chain is to provide natively an interface to external value through its token. If I wanted an link to external monetary value I would probably find a way to relate activity on my Burrow chain to transactions moving money on the public ethereum chain -- that's what it's for.","username":"silasdavis","ts":"2017-05-24T10:33:34.274Z"}
{"msg":"Burrow does have an internal token, much like Eth, and all accounts have a balance that can be changed by Calls or a SendTx. This token is generally used as a way of controlling who can do computation (call contracts) and to bound that computation through the charging of gas (also like ethereum) rather than a bearer of value. It would be possible to make use of the token from smart contracts, however you could just as well represent value in a completely custom way by writing it into a contract (in the simplest case as a table of balances amongst whatever you consider to be 'accounts'). I suppose the crucial difference is that on public ethereum the Eth token is meant to connect you to some 'external' notion of value. This is necessary in the public anonymous setting, but in a permissioned chain since you have some external knowledge of the identities you can imbue those identities with whatever external value or significance that you like. On the other hand the internal token of a freshly spun-up Burrow chain has no external value (though there are ways you could link it to value). A big goal of the ethereum chain is to provide natively an interface to external value through its token. If I wanted an link to external monetary value I would probably find a way to relate activity on my Burrow chain to transactions moving money on the public ethereum chain or bitcoin - that is what they're for.","username":"silasdavis","ts":"2017-05-24T10:33:34.274Z"}
{"msg":"So I'd hesitate to say you shouldn't use our internal token, but it is conspicuous that no-one does, and moreover I don't see a good reason to couple the notion of 'token' you may have to the internal token (which in Burrow is more used for book-keeping) or the notion of 'account' you may have to out notion of account (a place where code resides, and where identity is defined). You have more freedom to define these at the contract level (I may use contract/account/address somewhat interchangeably - they refer to different aspects of a unified object), though I can see cases where you might want one contract/account per 'bank account' if that is what you are thinking of. ","username":"silasdavis","ts":"2017-05-24T10:37:41.864Z"}
{"msg":"So I'd hesitate to say you shouldn't use our internal token, but it is conspicuous that almost no-one does, and moreover I don't see a good reason to couple the notion of 'token' you may have to the internal token (which in Burrow is more used for book-keeping) or the notion of 'account' you may have to out notion of account (a place where code resides, and where identity is defined). You have more freedom to define these at the contract level (I may use contract/account/address somewhat interchangeably - they refer to different aspects of a unified object), though I can see cases where you might want one contract/account per 'bank account' if that is what you are thinking of. ","username":"silasdavis","ts":"2017-05-24T10:37:41.864Z"}
{"msg":"So I'd hesitate to say you shouldn't use our internal token, but it is conspicuous that almost no-one seems to, and moreover I don't see a good reason to couple the notion of 'token' you may have to the internal token (which in Burrow is more used for book-keeping) or the notion of 'account' you may have to out notion of account (a place where code resides, and where identity is defined). You have more freedom to define these at the contract level (I may use contract/account/address somewhat interchangeably - they refer to different aspects of a unified object), though I can see cases where you might want one contract/account per 'bank account' if that is what you are thinking of. ","username":"silasdavis","ts":"2017-05-24T10:37:41.864Z"}
{"msg":"It's also worth noting that when we re-introduce validator bonding/unbonding and as we work on the EVM we are probably due a rethink on how we prices gas and possibly how we think of the internal token. It seems it has an important role but it has inherited from public ethereum and feels a bit vestigial in some places. Our gas pricing is also rather arbitrary (we can get away with caring a lot less about this in a permissioned context).","username":"silasdavis","ts":"2017-05-24T10:39:56.776Z"}
{"msg":"When you refer to 'wallet' I'm not sure if you are referring to a portable key store or perhaps a 'light client'. Both are possible with Burrow, but we do really have a light client, though in some sense you could describe any app using our RPC as a light client. We could provide something that could ask for proofs of state that could work a bit like: https://github.com/tendermint/light-client. We have some plans to provide a kind of lightweight node (that does't validate or maintain the entire blockchain). In terms of key storage we currently have: https://github.com/monax/keys which provides a mixture of key storage and crypto as a service. It is unaudited crypto for development purposes and is not really to be trusted. We aim to replace it with a more robust system imminently, that would be an interface that could be implemented against various backends including hardware security module backed devices.","username":"silasdavis","ts":"2017-05-24T10:45:55.593Z"}
{"msg":"Has joined the channel.","username":"naolduga","ts":"2017-05-29T01:29:34.325Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pd93","ts":"2017-05-31T12:12:59.228Z","type":"uj"}
{"msg":"Has left the channel.","username":"jrosmith","ts":"2017-05-31T17:47:57.641Z","type":"ul"}
{"msg":"Has joined the channel.","username":"miranni","ts":"2017-05-31T18:39:47.890Z","type":"uj"}
{"msg":"Hey everyone, hope all is well. I had to ask you guys, what do I need to learn in order to further my knowledge as far as developing, deploying, and understanding the mechanics of blockchain technology? All I really know is Linux Sys Admin stuff and some bash scripting. But I've fallen in love with this concept and I'm willing to learn anything that helps.","username":"miranni","ts":"2017-05-31T18:40:06.043Z"}
{"msg":"Has joined the channel.","username":"pauldups","ts":"2017-05-31T21:47:52.317Z","type":"uj"}
{"msg":"hi miranni, there s a lot of documentation and explainers that we ve written on monax,io","username":"benjaminbollen","ts":"2017-05-31T21:49:03.357Z"}
{"msg":"hi miranni, there s a lot of documentation and explainers that we ve written on monax.io","username":"benjaminbollen","ts":"2017-05-31T21:49:03.357Z"}
{"msg":"if you have more questions you can ask them here, but we have most of our community on slack.monax.io","username":"benjaminbollen","ts":"2017-05-31T21:49:39.921Z"}
{"msg":"Has joined the channel.","username":"cbruguera","ts":"2017-06-01T17:56:08.684Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=d4sdZHryNv6g9qjJZ) @silasdavis , the wallet I said actually means the balance of token, l am wondering if burrow has it.","username":"zhangchao","ts":"2017-06-02T01:32:20.027Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=d4sdZHryNv6g9qjJZ","url":"https://chat.hyperledger.org/channel/burrow?msg=d4sdZHryNv6g9qjJZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi, Burrow team. I created a shared calendar for all Hyperledger community meetings. You can find it here: http://bit.ly/HyperledgerCal. Use the &ctz=_TZ_ option to specify your time zone. See the TZ column for list of options: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List. I would really love to add any Burrow meetings to this calendar.","username":"tkuhrt","ts":"2017-06-02T19:05:17.186Z"}
{"msg":"@zhangchao every account has an associated balance, which you can query. Here is the data structure: https://github.com/hyperledger/burrow/blob/master/account/account.go#L59","username":"silasdavis","ts":"2017-06-03T11:52:28.387Z"}
{"msg":"Here's documentation on (one of) the API's to get account information: https://github.com/hyperledger/burrow/blob/master/docs/specs/api.md#get-account","username":"silasdavis","ts":"2017-06-03T11:53:23.532Z"}
{"msg":"Has joined the channel.","username":"travin","ts":"2017-06-05T19:51:52.524Z","type":"uj"}
{"msg":"Hi Hyperledger Burrow team. I'm from the White Paper WG and we're looking for someone to write the overview section about Burrow as well as perhaps include a highlighted feature for that section. If you're interested, or know someone I should contact, please send me a private message about it. ","username":"travin","ts":"2017-06-05T19:52:48.999Z"}
{"msg":"Has joined the channel.","username":"npnjuguna","ts":"2017-06-06T05:40:35.277Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dinghaiyang","ts":"2017-06-07T02:27:13.986Z","type":"uj"}
{"msg":"Has joined the channel.","username":"catbus","ts":"2017-06-07T18:42:25.383Z","type":"uj"}
{"msg":"Has joined the channel.","username":"triptananda","ts":"2017-06-12T09:00:42.025Z","type":"uj"}
{"msg":"back in marmot company","username":"triptananda","ts":"2017-06-12T09:00:57.974Z"}
{"msg":"Has joined the channel.","username":"Wenlin","ts":"2017-06-12T18:43:02.271Z","type":"uj"}
{"msg":"Has joined the channel.","username":"elsesiy","ts":"2017-06-13T08:01:40.709Z","type":"uj"}
{"msg":"Has joined the channel.","username":"marc4gov","ts":"2017-06-13T11:11:14.415Z","type":"uj"}
{"msg":"Hi all, I have issues restarting a cloud node in a multi-node chain, filed at https://github.com/hyperledger/burrow/issues/611 It's really nagging me, I can't restart a chain...","username":"marc4gov","ts":"2017-06-13T11:14:22.204Z"}
{"msg":"Has left the channel.","username":"naolduga","ts":"2017-06-14T17:24:18.375Z","type":"ul"}
{"msg":"Has joined the channel.","username":"rguikers","ts":"2017-06-20T09:01:12.454Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JoseHorta","ts":"2017-06-20T13:01:49.922Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AYOUB_HAMIDI","ts":"2017-06-20T14:04:17.405Z","type":"uj"}
{"msg":"Has joined the channel.","username":"stanliberman","ts":"2017-06-21T01:23:54.081Z","type":"uj"}
{"msg":"Has joined the channel.","username":"katiehennells","ts":"2017-06-21T13:39:05.571Z","type":"uj"}
{"msg":"Hi I am a little new, and I am trying to get Hyperledger Burrow running locally, and I am receiving a Time Out before connecting to the server. I followed the tutorial in the hyperledger/burrow github, and used monax to create the genesis, config and priv_validator files. Not sure what the next step is here and would appreciate any help!","username":"katiehennells","ts":"2017-06-21T20:46:25.686Z"}
{"msg":"@katiehennells, how are you running burrow? directly on your local machine or using docker (i.e. the way monax recommends)?","username":"atq","ts":"2017-06-22T11:17:41.913Z"}
{"msg":"on docker","username":"katiehennells","ts":"2017-06-22T14:31:37.457Z"}
{"msg":"nvm!","username":"katiehennells","ts":"2017-06-22T16:35:52.740Z"}
{"msg":"ok","username":"atq","ts":"2017-06-22T17:23:29.243Z"}
{"msg":"@benjaminbollen I'm not sure if `@monax/legacy-contracts` will still be maintained, but I noticed a bug when promisifying the regular js contract functions with the node 8 function `require('util').promisify`. Seems like getting data (`constant` functions) works fine, but transacting - however returning correct responses - doesn't seem to get committed to the chain. Any thoughts?","username":"marc4gov","ts":"2017-06-23T13:49:48.583Z"}
{"msg":"@benjaminbollen I'm not sure if `@monax/legacy-contracts` will still be maintained, but I noticed a bug when promisifying the regular js contract functions with the node 8 function `require('util').promisify`. Seems like getting data (`constant` functions) works fine, but transacting - however returning correct responses - doesn't seem to get committed to the chain. Any thoughts? For now, I'm writing boilerplate for it to work like so: ```// function addTask(title, desc, budget, time, manager, user, client) {\n//     return new Promise(\n//         function(resolve, reject) {\n//             taskmanagerContract.addTask(\n//                 title, desc, budget, time, manager, user, client,\n//                 (error, data) => {\n//                     if (error) {\n//                         reject(error)\n//                     } else {\n//                         resolve(data)\n//                     }\n//                 })\n//         })\n// }```","username":"marc4gov","ts":"2017-06-23T13:49:48.583Z"}
{"msg":"Has joined the channel.","username":"djones2","ts":"2017-06-23T14:23:57.570Z","type":"uj"}
{"msg":"Please raise this as an issue with version information and reproducibility steps thx cc @dennismckinnon any insights?","username":"benjaminbollen","ts":"2017-06-23T14:25:43.008Z"}
{"msg":"Hi everyone. I have a question about atomicity of transactions. If I send a transaction to a contract, which triggers a wave of transactions to many other contracts (and so on), what guarantees do I have about all those transactions actually happening? Is there an \"all-or-nothing\" atomicity?","username":"djones2","ts":"2017-06-23T14:46:36.908Z"}
{"msg":"I'm also a little confused about the deterministic nature of smart contract execution. To my mind, the outcome of running a set of transactions in some particular order can be deterministic. But the order is chosen somehow. When tendermint reaches a consensus on order, is it simply that one validator chose an order (perhaps based on arrival time of transaction messages) and applied them to its view of the world before sharing the block around for agreement?","username":"djones2","ts":"2017-06-23T14:58:08.573Z"}
{"msg":"And while other nodes may have been working on a different order, when they receive the proposed block and validate it, they throw away/roll-back their world state and apply the new block in the order defined?","username":"djones2","ts":"2017-06-23T14:59:19.828Z"}
{"msg":"Has joined the channel.","username":"jmcnevin","ts":"2017-06-23T17:19:57.863Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SebastianB 4","ts":"2017-06-23T21:07:04.594Z","type":"uj"}
{"msg":"Has joined the channel.","username":"paulransfield","ts":"2017-06-23T22:35:07.887Z","type":"uj"}
{"msg":"morning","username":"paulransfield","ts":"2017-06-23T22:35:22.695Z"}
{"msg":"Has joined the channel.","username":"toddmvc","ts":"2017-06-24T02:30:08.874Z","type":"uj"}
{"msg":"Has joined the channel.","username":"santo9813","ts":"2017-06-24T04:23:00.492Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jppgks","ts":"2017-06-24T08:24:20.895Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ThePleasurable","ts":"2017-06-24T12:19:19.529Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Pn8TAcbE5x4p4M5HG) @benjaminbollen Ok, https://github.com/monax/legacy-contracts.js/issues/99","username":"marc4gov","ts":"2017-06-24T13:33:42.442Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Pn8TAcbE5x4p4M5HG","url":"https://chat.hyperledger.org/channel/burrow?msg=Pn8TAcbE5x4p4M5HG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I'm sure this is asked before, but it would be helpful if we get back some useful error messages from the js lib, when transacting fails due to `modifier` constraints on Solidity contracts","username":"marc4gov","ts":"2017-06-24T14:58:44.410Z"}
{"msg":"I'm sure this is asked before, but it would be helpful if we get back some useful error messages from the js lib, when transacting fails due to `modifier` constraints on Solidity contracts. Like pointing to the `modifier` which is the cause of the issue in some sort of 'stack trace'. ","username":"marc4gov","ts":"2017-06-24T14:58:44.410Z"}
{"msg":"Has joined the channel.","username":"VoR0220","ts":"2017-06-24T15:55:13.852Z","type":"uj"}
{"msg":"@marc4gov Agreed. It would be useful. Waiting on Revert Opcode which may or may not be returning error info, and that can make these things a lot easier to deal with (particularly as it comes to standard libraries). ","username":"VoR0220","ts":"2017-06-24T15:56:24.554Z"}
{"msg":"@djones2: \n\" If I send a transaction to a contract, which triggers a wave of transactions to many other contracts (and so on), what guarantees do I have about all those transactions actually happening?\": It's guaranteed by design.\n\" Is there an \"all-or-nothing\" atomicity?\": Correct, it's all or nothing.\nRe: the order of execution of TX: Yes, an order is chosen, by one agreed validators (I think they rotate in a round robin fashion), and that defines the order in which the TX will be executed. Note that this implies that the TX execution is sequential. ","username":"atq","ts":"2017-06-26T09:00:13.826Z"}
{"msg":"Thanks @atq ","username":"djones2","ts":"2017-06-26T09:04:12.729Z"}
{"msg":"Has joined the channel.","username":"ReinaldoPadron","ts":"2017-06-27T08:28:33.733Z","type":"uj"}
{"msg":"Hello, I don't really know if this is the right place, but I am working on a personal real estate project in which I want to do many process involving blockchain, ICO, blockchain accounting etc , and i need a team for it ","username":"ReinaldoPadron","ts":"2017-06-27T08:31:49.778Z"}
{"msg":"If there is someone interested my email is padronreinaldo@360net-work.com","username":"ReinaldoPadron","ts":"2017-06-27T08:33:33.046Z"}
{"msg":"Has joined the channel.","username":"VarunDeshpande","ts":"2017-06-27T09:20:06.143Z","type":"uj"}
{"msg":"I am following the getting started tutorial of monax. I was able to successfully do everything but when I restarted my PC. following the same tutorial, the deployment of smart contract does not work.\n\nEverything goes well till this point :\n`monax pkgs do --chain firstchain --address $addr -v`\n```Using Compiler at                             https://compilers.monax.io:10160\nUsing Chain at                                firstchain\nUsing Signer at                               http://172.17.0.2:4767\nError connecting to node (tcp://172.17.0.3:46657) to get chain id: Post http://172.17.0.3:46657: dial tcp 172.17.0.3:46657: getsockopt: no route to host\n```\nI even did ` eval $(docker-machine env monax)` but still it does not work.","username":"VarunDeshpande","ts":"2017-06-27T09:21:17.674Z"}
{"msg":"Has joined the channel.","username":"gpflanagan","ts":"2017-06-27T19:28:58.243Z","type":"uj"}
{"msg":"I've noted `glide update` will break the build. Does this suggest that `glide.yaml` needs a few more versions pinned?","username":"djones2","ts":"2017-06-28T10:06:57.669Z"}
{"msg":"I'm trying to use a forked version of a dependency and it looks like I'll have to hand-edit `glide.lock` to achieve this, otherwise incompatible versions of other dependencies will be pulled in.","username":"djones2","ts":"2017-06-28T10:07:45.702Z"}
{"msg":"@here QQ - how to I restart a Burrow chain that I'm testing with (running on just one node)?","username":"djones2","ts":"2017-06-29T14:37:07.635Z"}
{"msg":"I.e. reset back to the genesis state and begin creating blocks from the start.","username":"djones2","ts":"2017-06-29T14:37:36.881Z"}
{"msg":"In case it affects anything, this is a chain that I created with `monax chains make`, but I'm running it via `burrow serve...`.","username":"djones2","ts":"2017-06-29T14:41:13.193Z"}
{"msg":"Has joined the channel.","username":"VamzR","ts":"2017-07-02T18:15:35.713Z","type":"uj"}
{"msg":"Hi everyone. I'm launching a service that requires Fabric's blockchain for tagging & tracking of assets. I am also trying to combine this with an ICO, which requires the ethereum world computer. Is there a way to allow my ethereum contracts on the Live ether net to communicate with my private Fabric Ledger? Can Burrow  help me with this?","username":"VamzR","ts":"2017-07-02T18:17:14.553Z"}
{"msg":"Has joined the channel.","username":"GeometricEnergy","ts":"2017-07-02T20:14:23.773Z","type":"uj"}
{"msg":"@djones2 : just run burrow serve again.","username":"atq","ts":"2017-07-03T09:33:13.917Z"}
{"msg":"@djones2 : just run `burrow serve` again.","username":"atq","ts":"2017-07-03T09:33:13.917Z"}
{"msg":"@djones2: re: dependencies, there is another additional problem that arise as some deps are hard coded to hyper ledger/burrow instead of being relative to the current fork. for example in `hyperledger/burrow/manager/burrow-mint/transactor.go` ( @benjaminbollen, @silasdavis : FYI","username":"atq","ts":"2017-07-03T09:37:53.644Z"}
{"msg":"@VamzR : Hyperledger Burrow is for permissioned networks. While it implements the Ethereum Virtual Machine (EVM) specification, it does not use the public Ethereum network. You will need to determine what is the linkage between Hyperledger Fabric and Ethereum and maintain that in your application.","username":"tkuhrt","ts":"2017-07-03T20:50:01.091Z"}
{"msg":"Is there a website and docs for Burrow specifically? I'm coming from pure Monax, and I still don't understand to what degree are these two projects independent...","username":"cbruguera","ts":"2017-07-03T21:24:08.119Z"}
{"msg":"@cbruguera: burrow is the blockchain implementation underneath monax. It used to be called erisdb in the past, and it uses tendermint at its core. Monax added on top of tendermint an EVM implementation that supports permissions, they built a set of tools to manage the whole ecosystem (CLI creation/start/stop of chains, deployment of smart contracts, JS libs to interact with smart contracts) and have built a very comprehensive set of smart contracts libs for various business domains (they have strong roots in the legal space). Now, the blockchain part has been rebranded burrow and what is referred to as \"monax\" is the toolkit to interact with a burrow blockchain. ","username":"atq","ts":"2017-07-03T21:42:01.121Z"}
{"msg":"@cbruguera: burrow is the blockchain implementation underneath monax. It used to be called erisdb in the past, and it uses tendermint at its core. Monax added on top of tendermint an EVM implementation that supports permissions (I believe they had the first working implementation of a permissioned blockchain), they built a set of tools to manage the whole ecosystem (CLI creation/start/stop of chains, deployment of smart contracts, JS libs to interact with smart contracts) and have built a very comprehensive set of smart contracts libs for various business domains (they have strong roots in the legal space). Now, the blockchain part has been rebranded burrow and what is referred to as \"monax\" is the toolkit to interact with a burrow blockchain. ","username":"atq","ts":"2017-07-03T21:42:01.121Z"}
{"msg":"so functionally, they are independent (monax sits on top of burrito), but originally, they both come from the Monax team (formerly Eris).","username":"atq","ts":"2017-07-03T21:43:00.790Z"}
{"msg":"so functionally, they are independent (monax sits on top of burrow), but originally, they both come from the Monax team (formerly Eris).","username":"atq","ts":"2017-07-03T21:43:00.790Z"}
{"msg":"When you run `monax chains start my_chain --init-dir $config_dir` it spawns a docker machine which runs a \"burrow server\" based on the config data you pass it.","username":"atq","ts":"2017-07-03T21:44:59.899Z"}
{"msg":"Has joined the channel.","username":"mtxset","ts":"2017-07-04T09:44:08.776Z","type":"uj"}
{"msg":"Hello, do I use monax to put contracts into burrow blockchain?","username":"mtxset","ts":"2017-07-04T09:44:55.263Z"}
{"msg":"@atq Re. `burrow serve...`, that doesn't seem sufficient. It picks up where it left off (e.g. at block X, rather than block 1). I seem to have found a solution involving deleting the `data` directory from the chain working dir.","username":"djones2","ts":"2017-07-04T10:01:09.706Z"}
{"msg":"@atq Re. dependencies, I've raised https://github.com/hyperledger/burrow/issues/623","username":"djones2","ts":"2017-07-04T10:01:39.331Z"}
{"msg":"I'm not sure hard-coding is a problem. That's the Go way isn't it? One can use git forks to get around that.","username":"djones2","ts":"2017-07-04T10:02:19.659Z"}
{"msg":"(Note: I'm new to Go, so I may be talking nonsense)","username":"djones2","ts":"2017-07-04T10:02:33.172Z"}
{"msg":"@djones2, I misunderstood you: clean $config_dir (remove data indeed) and reset the priv_validator.json file.","username":"atq","ts":"2017-07-04T10:02:49.136Z"}
{"msg":"Thanks.","username":"djones2","ts":"2017-07-04T10:03:14.634Z"}
{"msg":"basically, the resetting of priv_validator file is mostly removing the block height, the last sig and anything other than private key, pub key and address (don't have the file easily accessible now, sorry)","username":"atq","ts":"2017-07-04T10:04:36.239Z"}
{"msg":"yup, spot on","username":"djones2","ts":"2017-07-04T10:10:33.923Z"}
{"msg":"(forgot to say I also did that :-) )","username":"djones2","ts":"2017-07-04T10:10:39.939Z"}
{"msg":"Has joined the channel.","username":"mindraker","ts":"2017-07-04T10:47:30.947Z","type":"uj"}
{"msg":"atq, so how does one work with smart contracts using burrow?","username":"mtxset","ts":"2017-07-04T13:49:15.475Z"}
{"msg":"@atq, so how does one work with smart contracts using burrow?","username":"mtxset","ts":"2017-07-04T13:49:15.475Z"}
{"msg":"@mtxset https://monax.io/docs/getting-started/","username":"djones2","ts":"2017-07-04T15:05:23.272Z"}
{"msg":"djones2, so you do it through monax, thought if you run burrow you do it through burrow","username":"mtxset","ts":"2017-07-04T15:12:11.273Z"}
{"msg":"@djones2, so you do it through monax, thought if you run burrow you do it through burrow","username":"mtxset","ts":"2017-07-04T15:12:11.273Z"}
{"msg":"@mtxset, check my reply to @cbruguera a few posts above.","username":"atq","ts":"2017-07-04T18:47:26.732Z"}
{"msg":"burrow exposes a json RPC api over http or websockets. The monax cli tools allow you to \"talk\" to the burrow bc node.","username":"atq","ts":"2017-07-04T18:48:16.630Z"}
{"msg":"else you have to do things manually.","username":"atq","ts":"2017-07-04T18:48:25.485Z"}
{"msg":"Thanks for your reply @atq. Now, is there any website/documentation specifically for burrow?","username":"cbruguera","ts":"2017-07-04T21:41:19.517Z"}
{"msg":"Thanks for your reply @atq ...Now, is there any website/documentation specifically for burrow?","username":"cbruguera","ts":"2017-07-04T21:41:19.517Z"}
{"msg":"I heard Monax was going to back off from burrow development and leave it to the hyperledger community, is that correct?","username":"cbruguera","ts":"2017-07-04T21:42:48.311Z"}
{"msg":"On the same subject, javascript libraries have been marked as \"deprecated\" by Monax, are there any ongoing efforts to resume these libraries' development by hyperledger as complements of Burrow technology?... It seems to me that client-side libraries/SDKs are really important components for a smart contract platform such as burrow/monax.","username":"cbruguera","ts":"2017-07-04T21:45:05.431Z"}
{"msg":"@atq, yes, it is, but where is API description?","username":"mtxset","ts":"2017-07-05T06:48:26.786Z"}
{"msg":"I guess: https://github.com/hyperledger/burrow/blob/master/docs/specs/api.md","username":"mtxset","ts":"2017-07-05T07:00:59.516Z"}
{"msg":"@mtxset: correct. you can also find our Swift implementation here: https://gitlab.com/katalysis/BurrowBlockchain (@cbrugera).","username":"atq","ts":"2017-07-05T08:26:26.758Z"}
{"msg":"@mtxset: correct. you can also find our Swift implementation here: https://gitlab.com/katalysis/BurrowBlockchain (@cbruguera).","username":"atq","ts":"2017-07-05T08:26:26.758Z"}
{"msg":"@mtxset: correct. you can also find our Swift implementation here: https://gitlab.com/katalysis/BurrowBlockchain (@cbruguera)","username":"atq","ts":"2017-07-05T08:26:26.758Z"}
{"msg":"@mtxset: correct. you can also find our Swift implementation here: https://gitlab.com/katalysis/BurrowBlockchain ( @cbruguera )","username":"atq","ts":"2017-07-05T08:26:26.758Z"}
{"msg":"@atq, is there example with solidity contract being deployed and executed on burrow?","username":"mtxset","ts":"2017-07-05T08:33:23.151Z"}
{"msg":"@cbruguera, yes client side libs are quite important. We are ourselves using the monax/burrow framework for our own product, and have written some Swift libs to interact with the blockchain. Wrt Monax scaling back on the js client libs, my take is that they probably do not have the resources to maintain them for free at their current stage. As a startup, we are in the same situation of needing to make sure we spend our time wisely :).","username":"atq","ts":"2017-07-05T08:33:42.810Z"}
{"msg":"@mtxset, you mean through Swift?","username":"atq","ts":"2017-07-05T08:35:18.794Z"}
{"msg":"no. this is just the api implementation. would love to put it on our roadmap, but for now, no time.","username":"atq","ts":"2017-07-05T08:35:51.861Z"}
{"msg":"if just through any means, I guess the monax tutorials are quite good. and their tests: https://github.com/monax/monax/tree/master/tests/jobs_fixtures","username":"atq","ts":"2017-07-05T08:36:22.760Z"}
{"msg":"currently, we craft the byte code to call the contracts semi by hand (https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI).","username":"atq","ts":"2017-07-05T08:39:40.421Z"}
{"msg":"deploying contracts is mostly sending a Tx to the 0 address so should not be rocket science to implement.","username":"atq","ts":"2017-07-05T08:40:12.814Z"}
{"msg":"so, basically it's not yet for production, although possible, I guess fabric should be sufficient  ","username":"mtxset","ts":"2017-07-05T08:49:16.942Z"}
{"msg":"I am looking for a list of emails for the maintainers of Hyperledger Burrow. I did not see anything in the source code. Does this exist somewhere that you can point me to? I would like to send an email to the maintainers of Hyperledger Burrow without using the mailing list at lists.hyperledger.org.","username":"tkuhrt","ts":"2017-07-06T19:09:22.753Z"}
{"msg":"Has left the channel.","username":"jmcnevin","ts":"2017-07-06T20:00:46.257Z","type":"ul"}
{"msg":"Shameless plug: https://medium.com/@marc.minnee/project-management-blockchain-part-2-df6b944aca26","username":"marc4gov","ts":"2017-07-06T21:26:01.608Z"}
{"msg":"Has joined the channel.","username":"william123","ts":"2017-07-10T19:50:33.635Z","type":"uj"}
{"msg":"@atq, https://github.com/hyperledger/burrow/blob/master/rpc/tendermint/core/routes.go are working rpc functions, and there is broadcast_tx, could you share with an example (tx sample)?","username":"mtxset","ts":"2017-07-11T05:45:01.603Z"}
{"msg":"@mtxset, the way it works high level is at follows: you have 3 main entry points. $ip:46657, which is the http entry point for the web api. $ip:1337/rpc, which is the JSON-RPC entry point for http rest. you need to POST and put the json as payload. finally, you have the $ip:1337/socketrpc, which is the web socket entry point. payload is the same JSON-RPC as the HTTP REST one.","username":"atq","ts":"2017-07-11T06:59:02.388Z"}
{"msg":"Regarding payload examples, I don't have anything precoded unfortunately.","username":"atq","ts":"2017-07-11T07:16:50.204Z"}
{"msg":"Regarding payload examples, I don't have anything precooked unfortunately.","username":"atq","ts":"2017-07-11T07:16:50.204Z"}
{"msg":"when I have some time, I will clean some internal stuff I have in Swift and share it. ","username":"atq","ts":"2017-07-11T07:18:13.188Z"}
{"msg":"the Websocket endpoint is not as stable as the HTTP one, so I added a BroadcastAndHold entry point in this PR: https://github.com/hyperledger/burrow/pull/624. It may make your life easier if you are able to sign locally.","username":"atq","ts":"2017-07-11T07:20:18.809Z"}
{"msg":"One thing to note is that if you use the Broadcast* endpoint, you need to be able to sign messages locally. Else you need to use the TransactAndHold endpoint and send in your private key with it.","username":"atq","ts":"2017-07-11T07:21:14.690Z"}
{"msg":"@atq, well API page is out dated but it works fine with: https://github.com/hyperledger/burrow/blob/master/rpc/tendermint/core/routes.go\nI managed to use get_account, list_accounts, and blockchain (tested RPC as well as REST)\nWhat I'm asking is the how do I encode/put out the transcation itself: I dont know format I'm suppsed to send the tx in broadcast_tx\nYea signinng is following part","username":"mtxset","ts":"2017-07-11T07:37:10.330Z"}
{"msg":"@mtxset: this is an example payload:\n```\n{\"id\":\"B4316A2E-4801-4051-B126-BD8B69E41189\\/3\",\"jsonrpc\":\"2.0\",\"method\":\"burrow.broadcastTx\",\"params\":[2,{\"address\":\"7A2ECA9A87849E167F63632EAF98F3316B8564DB\",\"data\":\"F746D0E00000000000000000000000006419EE42DB9F90C3FC70736D47AD002AB50F7293000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000011616C6578406B6174616C797369732E696F0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"fee\":1,\"gas_limit\":1000000000,\"input\":{\"address\":\"B0DC1A182C21306A171CA9DFCD220C36170F0339\",\"amount\":1,\"pub_key\":[1,\"6E6FE248002D6787DA1811315EA0E223E5EA84D48EAADCC55079471A08F7A19C\"],\"sequence\":1,\"signature\":[1,\"4E804C05E51302F7C24D789EC0BEC7F2FB3BABEDA3DD35016B81BA04FBA3FA11C72634072A4B72D8A819A34FA074F47CFBBA3741E99DFAA5F8DF9D4879D2C80C\"]}}]}\n```","username":"atq","ts":"2017-07-11T08:13:59.020Z"}
{"msg":"just send this as the body of he post request or as the WS payload.","username":"atq","ts":"2017-07-11T08:15:10.477Z"}
{"msg":"just send this as the body of the post request or as the WS payload.","username":"atq","ts":"2017-07-11T08:15:10.477Z"}
{"msg":"As this is a broadcastTX (no Hold), you will also need to subscribe to the event and listen for the result to come back.","username":"atq","ts":"2017-07-11T08:16:26.972Z"}
{"msg":"(check TransactAndHold at https://github.com/hyperledger/burrow/blob/master/manager/burrow-mint/transactor.go:212)","username":"atq","ts":"2017-07-11T08:18:37.222Z"}
{"msg":"I understand JSON format for broadcast but how do you get data, do you just copy bytecode from solidity compiler?","username":"mtxset","ts":"2017-07-11T08:26:20.664Z"}
{"msg":"No, I generate it.","username":"atq","ts":"2017-07-11T08:40:03.746Z"}
{"msg":"https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI","username":"atq","ts":"2017-07-11T08:40:24.950Z"}
{"msg":"the above gives you the format.","username":"atq","ts":"2017-07-11T08:40:33.812Z"}
{"msg":"the first 4 bytes are the function signature, and then you need to encode the  params.","username":"atq","ts":"2017-07-11T08:41:16.465Z"}
{"msg":"thank you","username":"mtxset","ts":"2017-07-11T08:51:31.855Z"}
{"msg":"@atq, do you know why burrow slowed down the development (last commit was 3 months ago)","username":"mtxset","ts":"2017-07-11T11:52:39.077Z"}
{"msg":"and if they plan to continue on developing?","username":"mtxset","ts":"2017-07-11T11:54:04.268Z"}
{"msg":"and if they plan to continue the development?","username":"mtxset","ts":"2017-07-11T11:54:04.268Z"}
{"msg":"@mtxset: as far as I know, development is still going on (maybe more so in private forks though). there are PRs coming in once in a while (especially on the develop branch). I think 0.17 is expected to be out within a few weeks. @benjaminbollen or @compleatang might be able to give a better picture?","username":"atq","ts":"2017-07-11T11:58:54.820Z"}
{"msg":"Bump: https://chat.hyperledger.org/channel/burrow?msg=jWttZM4ofYcMjF5CH","username":"tkuhrt","ts":"2017-07-11T21:36:01.776Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=jWttZM4ofYcMjF5CH","url":"https://chat.hyperledger.org/channel/burrow?msg=jWttZM4ofYcMjF5CH","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"Audrius","ts":"2017-07-12T08:01:23.606Z","type":"uj"}
{"msg":"There has been more recent work on develop v0.17","username":"benjaminbollen","ts":"2017-07-12T10:06:29.614Z"}
{"msg":"and other work has been done on the monax fork because it originally included GPLv3 licenced code and hence can as such not be part of HL Burrow","username":"benjaminbollen","ts":"2017-07-12T10:13:20.058Z"}
{"msg":"@tkuhrt that is ben@monax.io and silas@monax.io","username":"benjaminbollen","ts":"2017-07-12T11:07:18.573Z"}
{"msg":"Thanks, Ben","username":"tkuhrt","ts":"2017-07-12T15:00:45.625Z"}
{"msg":"Has joined the channel.","username":"rock_martin","ts":"2017-07-14T05:54:27.090Z","type":"uj"}
{"msg":"Has joined the channel.","username":"RobertDiebels","ts":"2017-07-15T13:14:32.117Z","type":"uj"}
{"msg":"Hi guys, I've got a question about launching Burrow in a Kubernetes cluster.","username":"RobertDiebels","ts":"2017-07-15T13:15:06.449Z"}
{"msg":"Would I be correct in assuming that https://github.com/hyperledger/burrow/blob/d7e7449db97230c361458dbba4377f9270e5c295/deployment/start_in_cluster is meant to be triggered from inside a container?","username":"RobertDiebels","ts":"2017-07-15T13:15:31.363Z"}
{"msg":"And you'd set the variables used in that script through a deployment defintion like this one: https://github.com/hyperledger/burrow/blob/d7e7449db97230c361458dbba4377f9270e5c295/deployment/kubernetes/node000-deploy.yaml","username":"RobertDiebels","ts":"2017-07-15T13:16:39.793Z"}
{"msg":"Another question I have would be about CHAIN_SEEDS in those scripts.","username":"RobertDiebels","ts":"2017-07-15T13:18:48.563Z"}
{"msg":"Do those have to be actual instance IPs ? ","username":"RobertDiebels","ts":"2017-07-15T13:19:26.205Z"}
{"msg":"Does that var have to contain instance IPs ? ","username":"RobertDiebels","ts":"2017-07-15T13:19:26.205Z"}
{"msg":"Has joined the channel.","username":"arba 6","ts":"2017-07-16T18:57:37.008Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cre8bidio","ts":"2017-07-17T00:43:22.544Z","type":"uj"}
{"msg":"Has joined the channel.","username":"wvierber","ts":"2017-07-17T09:39:16.253Z","type":"uj"}
{"msg":"Has joined the channel.","username":"highlander","ts":"2017-07-18T20:20:52.329Z","type":"uj"}
{"msg":"Has left the channel.","username":"mtxset","ts":"2017-07-19T06:51:39.233Z","type":"ul"}
{"msg":"Has joined the channel.","username":"tim-d-blue","ts":"2017-07-19T15:05:13.393Z","type":"uj"}
{"msg":"Has joined the channel.","username":"colinGrahms","ts":"2017-07-21T07:09:04.681Z","type":"uj"}
{"msg":"Hi guys, back with a question. Does the Dockerfile in: https://github.com/hyperledger/burrow/blob/master/Dockerfile need to use the Monax base image?","username":"RobertDiebels","ts":"2017-07-21T09:03:50.262Z"}
{"msg":"Has joined the channel.","username":"entangled90","ts":"2017-07-21T11:38:30.302Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Varun2887","ts":"2017-07-21T12:08:23.362Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Siciliano","ts":"2017-07-27T09:30:18.101Z","type":"uj"}
{"msg":"Has joined the channel.","username":"iainbarclay","ts":"2017-07-27T10:26:03.505Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Raje","ts":"2017-07-27T21:43:13.751Z","type":"uj"}
{"msg":"Has joined the channel.","username":"CBTheis","ts":"2017-07-28T20:33:55.540Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Chaoz","ts":"2017-07-31T12:56:53.550Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JamesKempf","ts":"2017-07-31T18:27:49.002Z","type":"uj"}
{"msg":"I have Sawtooth and Burrow built and installed, and have brought them up. I am now trying to set up an account using seth. The docs say that it requires an alias for a key. Is this a filename with the public key in it, and, if so, what does the format of the public key need to be (sorry if this question is clueless).","username":"JamesKempf","ts":"2017-07-31T18:33:44.730Z"}
{"msg":"Sawtooth and Burrow are separate projects. Currently the integration between the two is Sawtooth a transaction family that wraps the Burrow-EVM (v0.16). So you don't need to run both. The seth \"alias\" is just a keyword you define which you use to refer to your private key later.","username":"adamludvik","ts":"2017-07-31T18:52:12.872Z"}
{"msg":"I'm now running sawtooth-validator and sawtooth-rest-api in addition to burrow-evm-tp. Are you saying that I don't need to run the sawtooth*? W.r.t. seth, when I run the command to create an account, I get this:","username":"JamesKempf","ts":"2017-07-31T19:49:31.817Z"}
{"msg":"ubuntu@blockchain01:~$  seth --verbose account create --permissions=+all player01\nError: Couldn't load key from alias: No key with alias player01","username":"JamesKempf","ts":"2017-07-31T19:49:38.136Z"}
{"msg":"So it seems to me that it wants to load a key, or maybe I'm missing something?","username":"JamesKempf","ts":"2017-07-31T19:50:02.871Z"}
{"msg":"Hey @JamesKempf you may have better luck asking in #sawtooth ","username":"kelly_","ts":"2017-07-31T20:17:09.565Z"}
{"msg":"@adamludvik is the sawtooth EVM expert so could try pinging him as well","username":"kelly_","ts":"2017-07-31T20:17:25.781Z"}
{"msg":"Sorry for the delay. The correct sequence of commands is:\n`sawtooth keygen --key-dir . player01`\n`seth account import player01.priv player01`\n\nand then what you ran:\n`seth --verbose account create --permissions=+all player01`","username":"adamludvik","ts":"2017-08-01T17:08:07.906Z"}
{"msg":"Has joined the channel.","username":"jwcoates","ts":"2017-08-01T18:15:49.758Z","type":"uj"}
{"msg":"Right, I did that and used the command line option to insert a contract but when I look it is not there, even tho sawtooth shows the transaction as having completed:","username":"JamesKempf","ts":"2017-08-01T21:43:37.988Z"}
{"msg":"ubuntu@blockchain01:~$ seth show 93ba86c118af79cd4b37cd87bf7229031c3c33f0\n\nAddress: 93ba86c118af79cd4b37cd87bf7229031c3c33f0\nBalance: 0\nCode   :\nNonce  : 2\nPerms  : +root,+send,+call,+contract,+account\n(No Storage Set)\n\nDo I need to set storage for the account? \n","username":"JamesKempf","ts":"2017-08-01T21:44:43.276Z"}
{"msg":"Has joined the channel.","username":"tprafull","ts":"2017-08-03T18:19:07.840Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Eric.Bui","ts":"2017-08-06T11:07:46.285Z","type":"uj"}
{"msg":"Has joined the channel.","username":"FrankShikhaliev","ts":"2017-08-06T11:21:40.625Z","type":"uj"}
{"msg":"Has joined the channel.","username":"juleschamp","ts":"2017-08-07T13:05:32.346Z","type":"uj"}
{"msg":"Has joined the channel.","username":"skbodwell","ts":"2017-08-07T17:49:26.434Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mavstronaut","ts":"2017-08-08T04:02:57.490Z","type":"uj"}
{"msg":"hi all,\ni am new to blockchain and hyperledger. Can anyone please help me with the setup of burrow","username":"Varun2887","ts":"2017-08-08T06:32:13.717Z"}
{"msg":"any good link to set it up will be helpful","username":"Varun2887","ts":"2017-08-08T06:32:24.692Z"}
{"msg":"following `https://github.com/hyperledger/burrow` will help?","username":"Varun2887","ts":"2017-08-08T06:33:47.717Z"}
{"msg":"```varun]# go get -d github.com/hyperledger/burrow\ncan't load package: package github.com/hyperledger/burrow: no buildable Go source files in /root/go/src/github.com/hyperledger/burrow\n```","username":"Varun2887","ts":"2017-08-08T06:57:19.867Z"}
{"msg":"getting this error","username":"Varun2887","ts":"2017-08-08T06:57:23.428Z"}
{"msg":"Hi @Varun2887 ","username":"benjaminbollen","ts":"2017-08-08T10:02:10.882Z"}
{"msg":"Hi @Varun2887 if you clone the repo you can follow the install from source instructions on https://github.com/hyperledger/burrow#for-developers","username":"benjaminbollen","ts":"2017-08-08T10:02:10.882Z"}
{"msg":"but this does not include the user tooling which we are currently evaluating on how to best port them from GPLv3 to Apache licenced code into Hyperledger","username":"benjaminbollen","ts":"2017-08-08T10:03:52.805Z"}
{"msg":"also, Marmots are back","username":"benjaminbollen","ts":"2017-08-08T10:17:19.169Z"}
{"msg":"we 've been underground to work on the strategy and new technology features that we see as necessary for the fast evolving blockchain space","username":"benjaminbollen","ts":"2017-08-08T10:18:26.633Z"}
{"msg":"we 've been underground to work on the strategy and new technology features that we see as necessary for the fast evolving blockchain space\nwe'll start sharing these proposals for Burrow shortly","username":"benjaminbollen","ts":"2017-08-08T10:18:26.633Z"}
{"msg":"m able to install glide and go","username":"Varun2887","ts":"2017-08-08T10:19:25.806Z"}
{"msg":"```To run burrow, just type $ burrow serve --work-dir <path to chain directory>, where the chain directory needs to contain the configuration, genesis file, and private validator file as generated by monax chains make.```","username":"Varun2887","ts":"2017-08-08T10:19:35.464Z"}
{"msg":"in instruction it doesnt say to install monax","username":"Varun2887","ts":"2017-08-08T10:19:51.961Z"}
{"msg":"monax is a prerequisite?","username":"Varun2887","ts":"2017-08-08T10:20:07.597Z"}
{"msg":"@benjaminbollen ?","username":"Varun2887","ts":"2017-08-08T10:20:17.835Z"}
{"msg":"monax is the user tooling that does it all for you; but we will want to help build and integrate with a new Hyperledger toolset","username":"benjaminbollen","ts":"2017-08-08T10:21:03.350Z"}
{"msg":"i have had used eris before","username":"Varun2887","ts":"2017-08-08T10:22:12.712Z"}
{"msg":"do i need to install monax now to run burrow?","username":"Varun2887","ts":"2017-08-08T10:22:25.399Z"}
{"msg":"it would still be the smoothest experience","username":"benjaminbollen","ts":"2017-08-08T10:27:35.415Z"}
{"msg":"a lot of the tooling is currently GPLv3 and could not be ported over to Apache","username":"benjaminbollen","ts":"2017-08-08T10:28:01.883Z"}
{"msg":"but core libraries I have largely completed as new Apache licenced code","username":"benjaminbollen","ts":"2017-08-08T10:28:31.296Z"}
{"msg":"but this is WIP","username":"benjaminbollen","ts":"2017-08-08T10:28:38.886Z"}
{"msg":"Im working on the Burrow roaadmap to v1.0 now and the work for the tooling will be an important part of that","username":"benjaminbollen","ts":"2017-08-08T10:29:48.668Z"}
{"msg":"Im working on the Burrow roadmap to v1.0 now and the work for the tooling will be an important part of that","username":"benjaminbollen","ts":"2017-08-08T10:29:48.668Z"}
{"msg":"will it be advisable to keep huge data onchain and involve no offchain database?","username":"Varun2887","ts":"2017-08-09T07:55:11.752Z"}
{"msg":"Has joined the channel.","username":"yezooz","ts":"2017-08-09T09:06:10.752Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MadhavaReddy","ts":"2017-08-09T12:51:02.174Z","type":"uj"}
{"msg":"as a first rule, I recommend to only keep the data on chain that is needed to progress the state of the smart contracts, ie what you need to calculate; all other state that is not read, or written to by the smart contract can be linked to with a hash and stored off chain","username":"benjaminbollen","ts":"2017-08-09T15:29:53.853Z"}
{"msg":"hi everyone","username":"Varun2887","ts":"2017-08-11T09:55:33.138Z"}
{"msg":"need help on setting up burrow","username":"Varun2887","ts":"2017-08-11T09:55:42.322Z"}
{"msg":"i have installed burrow and monax as per `https://github.com/hyperledger/burrow`","username":"Varun2887","ts":"2017-08-11T09:58:15.487Z"}
{"msg":"have created a chain","username":"Varun2887","ts":"2017-08-11T09:58:23.377Z"}
{"msg":"what shall be done next","username":"Varun2887","ts":"2017-08-11T09:58:28.312Z"}
{"msg":"`[root@ip-hyperledger]# ./monax chains start test --init-dir ~/.monax/chains/test/test_full_000\nAPI error (404): {\"message\":\"oci runtime error: container_linux.go:247: starting container process caused \\\"exec: \\\\\\\"mintkey\\\\\\\": executable file not found in $PATH\\\"\\n\"}\n\nFailed to transliterate [priv_validator.json] to monax-key:\n`","username":"Varun2887","ts":"2017-08-11T10:02:10.585Z"}
{"msg":"```[root@ip-hyperledger]# ./monax chains start test --init-dir ~/.monax/chains/test/test_full_000\nAPI error (404): {\"message\":\"oci runtime error: container_linux.go:247: starting container process caused \\\"exec: \\\\\\\"mintkey\\\\\\\": executable file not found in $PATH\\\"\\n\"}\n\nFailed to transliterate [priv_validator.json] to monax-key:```","username":"Varun2887","ts":"2017-08-11T10:02:23.284Z"}
{"msg":"what shall be done","username":"Varun2887","ts":"2017-08-11T10:02:47.517Z"}
{"msg":"Has joined the channel.","username":"bobatibm","ts":"2017-08-11T11:50:36.892Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ol.popov","ts":"2017-08-13T12:03:16.846Z","type":"uj"}
{"msg":"Hello. My name is Alex and I'm trying to test burrow =) Dows anyone encountered the same error ? ```Failed to load core: Failed to load consensus module configuration: Error reading config: consensus module tendermint (tendermint-0.0) is not supported by burrow-0.16.4```","username":"ol.popov","ts":"2017-08-13T12:04:58.063Z"}
{"msg":"Ok. Somehow I've managed to lauch borrow using monax. I've also found borrow-client. Is it able to call smart contract function via rpc?","username":"ol.popov","ts":"2017-08-13T14:06:42.205Z"}
{"msg":"Has joined the channel.","username":"glotov","ts":"2017-08-16T12:11:55.916Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tskzh","ts":"2017-08-17T16:11:52.869Z","type":"uj"}
{"msg":"Hi! What is the format of the data that `GetBlock` API call returns? In particular, its `data.txs` is a hex string like this `02010114C83...02`, how to decipher it? (Monax v0.17.0)","username":"glotov","ts":"2017-08-18T13:35:30.905Z"}
{"msg":"Has joined the channel.","username":"liotru","ts":"2017-08-19T12:22:55.203Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Anh-Dung","ts":"2017-08-21T09:26:42.438Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AcidumIrae","ts":"2017-08-21T09:34:42.775Z","type":"uj"}
{"msg":"we've deprecated the monax hosted explainers but the repository still has the spec file https://github.com/hyperledger/burrow/blob/master/docs/specs/api.md#get-block","username":"benjaminbollen","ts":"2017-08-21T09:45:50.057Z"}
{"msg":"the `data.txs` is the go-wire encoded list of transactions as treated as bytestrings by Tendermint","username":"benjaminbollen","ts":"2017-08-21T09:47:12.909Z"}
{"msg":"Has joined the channel.","username":"PacoEcotrust","ts":"2017-08-21T10:42:30.078Z","type":"uj"}
{"msg":"Has joined the channel.","username":"smhi","ts":"2017-08-21T12:58:53.797Z","type":"uj"}
{"msg":"Are previous monax versions (< 0.18.0) removed from the apt-get repository?","username":"cbruguera","ts":"2017-08-21T23:17:49.305Z"}
{"msg":"I'm trying to downgrade monax, to no avail.","username":"cbruguera","ts":"2017-08-21T23:18:01.747Z"}
{"msg":"Nevermind, I already did via curl.","username":"cbruguera","ts":"2017-08-21T23:55:29.609Z"}
{"msg":"Has joined the channel.","username":"timblankers","ts":"2017-08-23T07:45:24.650Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zexuhat","ts":"2017-08-23T08:47:08.062Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sethlordde","ts":"2017-08-23T20:40:28.480Z","type":"uj"}
{"msg":"Has joined the channel.","username":"FabricioMendes","ts":"2017-08-25T16:51:00.591Z","type":"uj"}
{"msg":"Has joined the channel.","username":"stingley","ts":"2017-08-29T00:18:15.386Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yogeshquick","ts":"2017-08-30T11:58:37.070Z","type":"uj"}
{"msg":"is this channel active?","username":"Varun2887","ts":"2017-08-31T07:50:53.759Z"}
{"msg":":) It has not been very active.  But it will be again, as of today.","username":"benjaminbollen","ts":"2017-08-31T14:41:38.965Z"}
{"msg":"@benjaminbollen can you take a look at this please: https://github.com/hyperledger/burrow/pull/644","username":"silasdavis","ts":"2017-08-31T15:09:44.125Z"}
{"msg":"Has joined the channel.","username":"lmrln","ts":"2017-09-01T09:59:42.473Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sambitnayak","ts":"2017-09-01T13:39:21.865Z","type":"uj"}
{"msg":"Hi, do we have Docker images for Burrow? Or any instructions to generate and run such containers would be helpful...  And, will sawtooth-core have to be separately installed and run?","username":"sambitnayak","ts":"2017-09-01T13:42:41.814Z"}
{"msg":"@sambitnayak we do: https://quay.io/repository/monax/db?tab=tags","username":"silasdavis","ts":"2017-09-01T13:46:57.236Z"}
{"msg":"However the primary way to run this is by using the 'monax' tool, see here: https://quay.io/repository/monax/db?tab=tags","username":"silasdavis","ts":"2017-09-01T13:47:11.369Z"}
{"msg":"However the primary way to run this is by using the 'monax' tool, see here: https://monax.io/docs/getting-started/","username":"silasdavis","ts":"2017-09-01T13:47:11.369Z"}
{"msg":"there is ongoing work to decouple Burrow from the Monax tool and provide better 'direct' support for running on Kubernetes","username":"silasdavis","ts":"2017-09-01T13:48:14.605Z"}
{"msg":"there is ongoing work to decouple Burrow from the Monax tool and provide better 'direct' support for running on Kubernetes for example","username":"silasdavis","ts":"2017-09-01T13:48:14.605Z"}
{"msg":"monax tool on github: https://github.com/monax/monax","username":"silasdavis","ts":"2017-09-01T13:48:46.503Z"}
{"msg":"the current images rely on the monax tool to do various bits of docker orchestration in particular setting up keys and data containers","username":"silasdavis","ts":"2017-09-01T13:49:31.930Z"}
{"msg":"It is rather biased towards a dev rather an ops point of view","username":"silasdavis","ts":"2017-09-01T13:49:50.174Z"}
{"msg":"thanks","username":"sambitnayak","ts":"2017-09-01T14:06:58.199Z"}
{"msg":"Has joined the channel.","username":"fabcan","ts":"2017-09-04T07:55:50.405Z","type":"uj"}
{"msg":"just did a `brew install monax` and tried `monax init` but got an `exit status 1`. I'm sure I've seen this before but can't recall the solution? Any help available? ","username":"marc4gov","ts":"2017-09-05T20:45:30.944Z"}
{"msg":"@marc4gov could you check if you see the same issue if you install using go directly with `go get github.com/monax/monax/cmd/monax`?","username":"silasdavis","ts":"2017-09-06T11:16:48.541Z"}
{"msg":"You would need Go installed and `$GOPATH` set","username":"silasdavis","ts":"2017-09-06T11:17:04.930Z"}
{"msg":"the binary will be in `$GOPATH/bin/monax`","username":"silasdavis","ts":"2017-09-06T11:17:31.617Z"}
{"msg":"the binary will be compiled to `$GOPATH/bin/monax`","username":"silasdavis","ts":"2017-09-06T11:17:31.617Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=c4JiSdNzR5NpXNatW) @silasdavis yes, same issue","username":"marc4gov","ts":"2017-09-06T11:38:58.304Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=c4JiSdNzR5NpXNatW","url":"https://chat.hyperledger.org/channel/burrow?msg=c4JiSdNzR5NpXNatW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"jadhavajay","ts":"2017-09-07T13:05:37.789Z","type":"uj"}
{"msg":"bollen","username":"VipinB","ts":"2017-09-07T19:57:31.277Z"}
{"msg":"Hey everyone. I've got a question. Where does Burrow look for the genesis file of a chain? What dir?","username":"RobertDiebels","ts":"2017-09-08T11:37:08.065Z"}
{"msg":"I'm trying out the Docker container and I'm getting an error: `panic: Panicked on a Sanity Check: Error initializing DB: sync /home/monax/.monax/data/burrowmint/data/burrowmint.db: invalid argument`","username":"RobertDiebels","ts":"2017-09-08T11:37:48.397Z"}
{"msg":"I copied over the quay.io db image to my own docker repo. So I'd have everything in one spot.","username":"RobertDiebels","ts":"2017-09-08T11:38:37.862Z"}
{"msg":"I'm using this: `docker run -v /c/Users/Robert/Containers/burrowconfig:/home/monax/.monax --rm --name burrow-node robertdiebels/burrow-node` command to run the node/server.","username":"RobertDiebels","ts":"2017-09-08T11:40:14.989Z"}
{"msg":"Burrowconfig contains the genesis.json, config.toml and priv_validator.json","username":"RobertDiebels","ts":"2017-09-08T11:41:07.295Z"}
{"msg":"Hi @silasdavis ! Any word on whether or not Burrow will switch to using `dep` as a package manager for Go :P ","username":"VoR0220","ts":"2017-09-08T13:24:41.191Z"}
{"msg":"Has joined the channel.","username":"analyticbastard","ts":"2017-09-09T16:06:39.088Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cfs314","ts":"2017-09-10T09:17:38.735Z","type":"uj"}
{"msg":"In case anyone was wondering. I was using Docker from the QuickStart terminal on Windows. It works on Linux just fine.","username":"RobertDiebels","ts":"2017-09-10T13:41:23.464Z"}
{"msg":"Hey @VoR0220 I am using `dep` on a related project (I had tried it before, but it actually seems to work now) so it could happen...","username":"silasdavis","ts":"2017-09-11T16:33:47.269Z"}
{"msg":"@RobertDiebels I've replied to your ticket, you should just be able to run Burrow natively on your Windows host: https://github.com/hyperledger/burrow/issues/654","username":"silasdavis","ts":"2017-09-11T16:34:24.488Z"}
{"msg":"@marc4gov this isn't something I can reproduce on my linux machine, and I don't have a mac to try this on if it is an issue there. Is `exit status 1` all it outputs? Could you try `monax -d init`? I'm not up-to-date on the state of docker on mac, are you using docker machine?","username":"silasdavis","ts":"2017-09-11T16:39:17.064Z"}
{"msg":"Has joined the channel.","username":"leogzl","ts":"2017-09-15T11:18:08.363Z","type":"uj"}
{"msg":"@silasdavis I'm using docker machine indeed and `monax -d init` outputs the same as `monax init`","username":"marc4gov","ts":"2017-09-15T16:24:06.599Z"}
{"msg":"Has joined the channel.","username":"denis4net","ts":"2017-09-15T23:36:23.732Z","type":"uj"}
{"msg":"Hey everyone, can anyone point me to post or explanation, what is difference between monax and hyperledger? Or monax is just a project that are migrating to hyperledger?","username":"denis4net","ts":"2017-09-16T08:24:57.178Z"}
{"msg":"Hey everyone, can anyone point me to post or explanation, what is difference between monax and hyperledger? Or monax is just a project that migrating to hyperledger?","username":"denis4net","ts":"2017-09-16T08:24:57.178Z"}
{"msg":"@denis4net  https://www.hyperledger.org/blog/2017/04/10/hey-you-got-your-ethereum-in-my-hyperledger","username":"silasdavis","ts":"2017-09-16T19:16:47.859Z"}
{"msg":"Hyperledger is an open source guild of blockchain-related projects","username":"silasdavis","ts":"2017-09-16T19:17:29.267Z"}
{"msg":"Monax is a company: monax.io","username":"silasdavis","ts":"2017-09-16T19:17:36.850Z"}
{"msg":"Burrow is the nom de plume of a permissioned EVM-based blockchain since it joined Hyperledger","username":"silasdavis","ts":"2017-09-16T19:18:17.401Z"}
{"msg":"Has joined the channel.","username":"argman","ts":"2017-09-18T07:17:37.665Z","type":"uj"}
{"msg":"Has left the channel.","username":"argman","ts":"2017-09-18T07:17:45.497Z","type":"ul"}
{"msg":"Has joined the channel.","username":"HintikkaKimmo","ts":"2017-09-18T16:32:47.842Z","type":"uj"}
{"msg":"But Hyperledger burrow (blockchain) can't exists without other tools, like `monax chains`, etc.","username":"denis4net","ts":"2017-09-19T10:58:24.754Z"}
{"msg":"But Hyperledger burrow (blockchain) can't exists/operate without other tools, like `monax chains`, etc.","username":"denis4net","ts":"2017-09-19T10:58:24.754Z"}
{"msg":"But Hyperledger burrow (blockchain) can't exists/operate without other tools, like `monax chains`, etc. Why they are located in different repositories?","username":"denis4net","ts":"2017-09-19T10:58:24.754Z"}
{"msg":"It can, it just requires a proper configuration to be present. A template configuration is documented here: https://github.com/hyperledger/burrow/blob/master/config/templates.go. Currently it is easier to use the monax tool to generate this, but there is nothing to stop you from using those functions to create your own config or writing it by hand.","username":"silasdavis","ts":"2017-09-19T13:18:58.779Z"}
{"msg":"Has joined the channel.","username":"danconway","ts":"2017-09-21T19:04:22.384Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zachgoll","ts":"2017-09-22T18:27:33.516Z","type":"uj"}
{"msg":"Will Burrow have Solidity events implemented for the upcoming 0.8 release? Also, the Solidity documentation says that transactions don't return a value, but there is a note in the seth Go code that return values from transactions will be implemented at some point. Does this mean that the results of the transaction (success-failure) will be returned or that the external function will be allowed to return values? Thx.","username":"JamesKempf","ts":"2017-09-22T20:12:00.908Z"}
{"msg":"@JamesKempf Burrow does implement solidity events. I'm not sure which release you are referring to with 0.8, are you confusing Burrow and Sawtooth/seth? Seth is integrating parts of the Burrow EVM.","username":"silasdavis","ts":"2017-09-23T14:18:06.664Z"}
{"msg":"Has joined the channel.","username":"avi-nyc","ts":"2017-09-23T21:38:32.642Z","type":"uj"}
{"msg":"Sorry, I thought Burrow and Sawtooth were on the same release schedule.","username":"JamesKempf","ts":"2017-09-24T01:39:34.915Z"}
{"msg":"Has joined the channel.","username":"PascalVerlinden","ts":"2017-09-25T15:23:20.901Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tbrooke","ts":"2017-09-25T20:15:48.547Z","type":"uj"}
{"msg":"hi guys... so I am working with a fresh install of monax v 0.16 and trying to show someone a basic deploy but getting a http 503 error, \nI first tried to compile without compiler flag and got 503 error... then I set a local var $comp=$(monax services inspect compilers NetworkSettings.IPAddress)","username":"stingley","ts":"2017-09-26T12:03:38.997Z"}
{"msg":"hi guys... so I am working with a fresh install of monax v 0.16 and trying to show someone a basic deploy but getting a http 503 error, \nI first tried to compile without compiler flag and got 503 error... then I set a local var comp=$(monax services inspect compilers NetworkSettings.IPAddress)","username":"stingley","ts":"2017-09-26T12:03:38.997Z"}
{"msg":"hi guys... so I am working with a fresh install of monax in a new environment.. v 0.16 and trying to show someone a basic deploy but getting a http 503 error, \nI first tried to compile without compiler flag and got 503 error... then I set a local var comp=$(monax services inspect compilers NetworkSettings.IPAddress)","username":"stingley","ts":"2017-09-26T12:03:38.997Z"}
{"msg":"hi guys... so I am working with a fresh install of monax in a new environment.. v 0.16 and trying to show someone a basic deploy but getting a http 503 error, \nI first tried to compile without compiler flag and got the error... then I set a local var comp=$(monax services inspect compilers NetworkSettings.IPAddress)","username":"stingley","ts":"2017-09-26T12:03:38.997Z"}
{"msg":"monax pkgs do --chain test_chain --address $addr --compiler http://$comp:9099","username":"stingley","ts":"2017-09-26T12:03:46.987Z"}
{"msg":"\"Error compiling contracts: Compilers error: HTTP error: 503\"","username":"stingley","ts":"2017-09-26T12:05:01.580Z"}
{"msg":"I have updated the compilers.toml file to include the ports... but using both 9090 and 9099 produce same error","username":"stingley","ts":"2017-09-26T12:16:34.709Z"}
{"msg":"I have updated the compilers.toml file to include the ports... but both 9090 and 9099 result in same error","username":"stingley","ts":"2017-09-26T12:16:34.709Z"}
{"msg":"[service]\nimage = quay.io/monax/compilers:0.16.0\ndata_container = true\nports = [9090:9090, 9099:9099]\nuser = \nexec_host =\nvolumes = []","username":"stingley","ts":"2017-09-26T12:16:38.204Z"}
{"msg":"@stingley Is there anything stopping you from upgrading to a more recent version? I believe we dropped the remote compilers concept in 0.17.0 (of the monax tool), I'd recommend using monax 0.18.0","username":"silasdavis","ts":"2017-09-27T10:48:30.160Z"}
{"msg":"Thanks @silasdavis we are going to go ahead and try that.... after much debugging we figured out most of these issues are related to some proxy settings we are stuck with for now. Hopefully can be resolved","username":"stingley","ts":"2017-09-27T12:19:23.493Z"}
{"msg":"Has joined the channel.","username":"ShaneGiehll","ts":"2017-09-28T03:11:00.878Z","type":"uj"}
{"msg":"Hey guys, any idea why monax v 0.18 would not run any of the jobs in the epm.yaml and not return an error? the yaml file and contract are in the .monax/apps folder","username":"ShaneGiehll","ts":"2017-09-28T03:14:34.082Z"}
{"msg":"Hey guys, any idea why monax v 0.18 would not run any of the jobs in the epm.yaml and not return an error on compile? the yaml file and contract are in the .monax/apps folder","username":"ShaneGiehll","ts":"2017-09-28T03:14:34.082Z"}
{"msg":"@silasdavis im working with stingley","username":"ShaneGiehll","ts":"2017-09-28T03:16:24.965Z"}
{"msg":"","username":"ShaneGiehll","ts":"2017-09-28T03:30:49.038Z","attachments":[{"title":"File Uploaded: Clipboard - September 28, 2017 2:30 PM","title_link":"/file-upload/DR3JAnc4BM9Ryje7P/Clipboard - September 28, 2017 2:30 PM","image_url":"/file-upload/DR3JAnc4BM9Ryje7P/Clipboard - September 28, 2017 2:30 PM","image_type":"image/png","image_size":157756,"url":"/file-upload/DR3JAnc4BM9Ryje7P/Clipboard - September 28, 2017 2:30 PM","remote":false,"fileId":"DR3JAnc4BM9Ryje7P","fileName":"Clipboard - September 28, 2017 2:30 PM"}]}
{"msg":"also would like to mention we are behind a proxy, if you know any ports or interactions that monax pkgs do uses( both local and non-local)","username":"ShaneGiehll","ts":"2017-09-28T05:40:49.958Z"}
{"msg":"that would greatly help","username":"ShaneGiehll","ts":"2017-09-28T05:40:59.073Z"}
{"msg":"@silasdavis ","username":"ShaneGiehll","ts":"2017-09-28T08:48:36.974Z"}
{"msg":"is there any simple configuration for using any of the recent versions behind a proxy? @silasdavis ... 0.17 or 0.18","username":"stingley","ts":"2017-09-29T10:28:43.939Z"}
{"msg":"we opened ports 1-12000 on our proxy but still couldnt deploy with 0.18 ..","username":"stingley","ts":"2017-09-29T10:33:33.113Z"}
{"msg":"Has joined the channel.","username":"johanherman","ts":"2017-09-29T19:18:41.100Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=sfJFxfNi2tPegQcn2) @silasdavis Thanks. Could you point me to the documentation that answers to the following questsions:\n1. Is it possible to add account/validator to the running chain?\n2. Is it possible to disable internal cryptocurrency and gas limit and why it is needed in the permissioned blockchain?\n","username":"denis4net","ts":"2017-09-30T14:10:36.042Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=sfJFxfNi2tPegQcn2","url":"https://chat.hyperledger.org/channel/burrow?msg=sfJFxfNi2tPegQcn2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=sfJFxfNi2tPegQcn2) @silasdavis Thanks. Could you point me to the documentation that answers to the following questsions:\n1. Is it possible to add account/validator to the running chain?\n2. Is it possible to disable internal cryptocurrency and gas limit and why it is needed in the permissioned blockchain?\n3. What will the project replace legacy-contracts.js?\n","username":"denis4net","ts":"2017-09-30T14:10:36.042Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=sfJFxfNi2tPegQcn2","url":"https://chat.hyperledger.org/channel/burrow?msg=sfJFxfNi2tPegQcn2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"carlos_frijoles","ts":"2017-10-02T14:15:23.567Z","type":"uj"}
{"msg":"@ShaneGiehll `monax pkgs do` uses TCP port 46657, and the javascript libraries use 1337","username":"silasdavis","ts":"2017-10-04T10:11:37.464Z"}
{"msg":"@denis4net \n1. \na) You can add accounts by issuing a `SendTx` which will create the recipient account if it does not exist and sending a `PermissionsTx`. Both are most readily accomplished with the monax tool at the moment, see: https://monax.io/docs/documentation/pm/#epm-definition-files. But the relevant RPC endpoints are also there to be called\n\nb) The ability to mutate the validator set was relatively recently (re)introduced to Tendermint (validator bonding/unbonding had been a feature of eris-db which went on to become Burrow and Tendermint separately). I have integrated the latest Tendermint in a development branch, once stabilised with some other refactoring I'll be in a position to reintroduce validator set changes.\n\n2. \na) It is not possible to disable it, but it is possible to largely ignore it if you want - by setting large limits or zero fees.\n\nb) It exists for a mixture of vestigial reasons (it's definition is part of Ethereum and provides some level of compatibility) but also some legitimate reasons. It is the 'working fluid' of the blockchain and you have to have some of it to act as in 1a) above it provides a mechanism to create an account (really we imagine all accounts 'exist' a priori but only some have the value and permissions to act), but it also provides a mechanism to prevent infinite loops in our Turing complete machine and to limit the amount of work a (possibly bad) actor can do by controlling the amount of gas they can buy. Whereas permissions are boolean, an account's value is a tunable integer so we can give less to accounts that have no reason to use a lot, or we can meter it out over time by sending it from another account. Having said that the way Burrow prices gas and deals with fees could be improved (fees just vanish), however should you have a use for the token most of the parameters are settable. It is needed for gas consumption at the very least (so we have some termination guarantees). We could definitely think more about the concept of value/gas in a permissioned chain (how to simplify it or how to make better use of it) but frankly it just hasn't got in the way enough to be a problem for us so far.\n\n3. We plan to support a subset of web3 allowing us to use native Ethereum alternatives to legacy-contracts. However I also plan to pull legacy contracts into a monorepo comprising a minimal set of moanx-keys, legacy contracts, monax pkgs, in order to make working with upgraded Burrow easier in the medium term and so the subset we use ourselves can be maintained.\n\nWe are quite resourced constrained at the moment, with only really me working on Burrow, and we are building out our own cloud-based platform using it so it is actively receiving some love but my work is focused on our needs (which it helps hone the code base for a specific - still general purpose EVM). On the other side we are ramping up within Hyperledger - on Friday I am meeting with various people from Hyperledger - in order to get more contributions and really launch Burrow as an lean EVM execution engine that works well as a Tendermint app and a library for other chains. So you find us in something of a transitionary period. If you have an interest in using the code and would like to contribute to the upkeep of things like legacy-contracts then we are looking for maintainers and I would be glad to collaborate .","username":"silasdavis","ts":"2017-10-04T11:01:31.494Z"}
{"msg":"You might find this a useful reference to what you can do with `monax pkgs do`: https://github.com/monax/monax/tree/master/tests/jobs_fixtures","username":"silasdavis","ts":"2017-10-04T11:10:17.629Z"}
{"msg":"it's the actual tests we run against Burrow, with a bit of experimentation you should be able to understand how things work. https://monax.io/docs/getting-started/ is also relevant, but I am afraid not currently maintained. As I say, this is a period of transition for us.","username":"silasdavis","ts":"2017-10-04T11:12:32.857Z"}
{"msg":"Hi @silasdavis , I wanted to introduce myself. I am Dan Conway one of the founders of www.cubeform.io  A newly forming consultancy firm in the space. We are joining the hyperledger foundation and hope to contribute however we can. I am formerly one of the lead developers of Expanse, a smart contract platform that implemented the EVM on its chain, and as such have a decent understanding of the evm and ethereums internals. I have long been a fan of eris/monax, infact often referencing it to the rest of the expanse team for the kind of project we should model ourselves after. Anyways, I am looking forward to working with you to contribute to burrow and hyperledger as a whole.","username":"danconway","ts":"2017-10-05T16:25:47.353Z"}
{"msg":"Has joined the channel.","username":"pradeeppadmarajaiah","ts":"2017-10-06T15:39:54.056Z","type":"uj"}
{"msg":"antastic! Having met with ","username":"silasdavis","ts":"2017-10-06T18:34:28.782Z"}
{"msg":"Fantastic! Having met with Brian today I am drafting an email for the technical-discuss list that will explain a bit about what I am currently working on with respect to Burrow","username":"silasdavis","ts":"2017-10-06T18:34:28.782Z"}
{"msg":"Should send tomorrow and will duplicate here","username":"silasdavis","ts":"2017-10-06T18:35:08.296Z"}
{"msg":"Has joined the channel.","username":"souradeep-das","ts":"2017-10-07T17:10:03.653Z","type":"uj"}
{"msg":"Has joined the channel.","username":"PrithviS","ts":"2017-10-09T05:47:23.745Z","type":"uj"}
{"msg":"Hey guys, question on Burrow accounts. Let's say I generate roughly 3000 accounts. Do all of those have to be validators in the network? Or is it possible to only have 50 of them validate?","username":"RobertDiebels","ts":"2017-10-10T13:54:06.547Z"}
{"msg":"Validators and accounts are entirely independent concepts so yes","username":"silasdavis","ts":"2017-10-10T14:56:31.879Z"}
{"msg":"usually we talk about participants and validators\n","username":"silasdavis","ts":"2017-10-10T14:56:51.076Z"}
{"msg":"we would usually expect them to be disjoint too, but this is not a requirement","username":"silasdavis","ts":"2017-10-10T14:57:06.062Z"}
{"msg":"take:","username":"silasdavis","ts":"2017-10-10T14:57:08.903Z"}
{"msg":"\n```\n{\n\t\"genesis_time\": \"2017-09-13T11:52:00.817Z\",\n\t\"chain_id\": \"test\",\n\t\"params\": {\n\t\t\"global_permissions\": {\n\t\t\t\"base\": {\n\t\t\t\t\"perms\": 2302,\n\t\t\t\t\"set\": 16383\n\t\t\t},\n\t\t\t\"roles\": []\n\t\t}\n\t},\n\t\"accounts\": [\n\t\t{\n\t\t\t\"address\": \"F74A500F4E3C281693BCC8ECE12A6A663E7ED37F\",\n\t\t\t\"amount\": 99999999999999,\n\t\t\t\"name\": \"test_full_000\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"base\": {\n\t\t\t\t\t\"perms\": 16383,\n\t\t\t\t\t\"set\": 16383\n\t\t\t\t},\n\t\t\t\t\"roles\": []\n\t\t\t}\n\t\t}\n\t],\n\t\"validators\": [\n\t\t{\n\t\t\t\"pub_key\": [\n\t\t\t\t1,\n\t\t\t\t\"0D15FC3E5966836B8253B57292956351A0CBE092EEF88644823CBD26B3D00420\"\n\t\t\t],\n\t\t\t\"amount\": 9999999999,\n\t\t\t\"name\": \"test_full_000\",\n\t\t\t\"unbond_to\": [\n\t\t\t\t{\n\t\t\t\t\t\"address\": \"F74A500F4E3C281693BCC8ECE12A6A663E7ED37F\",\n\t\t\t\t\t\"amount\": 9999999999\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n```","username":"silasdavis","ts":"2017-10-10T14:57:39.859Z"}
{"msg":"that is a 'simple chain' genesis that has a single account that is both a validator and a participant","username":"silasdavis","ts":"2017-10-10T14:58:31.418Z"}
{"msg":"it's not obvious that the validator is the same because you'd have to ripemd160 the public key, but it is, as sort of implied by the unbond_to address ","username":"silasdavis","ts":"2017-10-10T14:59:23.384Z"}
{"msg":"BTW, I don't know Tendermint would cope with 3000 validators, i've never tried :)","username":"silasdavis","ts":"2017-10-10T15:00:06.684Z"}
{"msg":"Ok got it thanks :D /","username":"RobertDiebels","ts":"2017-10-10T21:04:31.615Z"}
{"msg":"Has joined the channel.","username":"mredmundto","ts":"2017-10-11T02:56:41.571Z","type":"uj"}
{"msg":"Has joined the channel.","username":"FilipeCGarcia","ts":"2017-10-12T11:58:15.739Z","type":"uj"}
{"msg":"Hey guys, I noticed this: `[service]\\nimage = \\\"quay.io/monax/db:0.16.3\\\"` in the config.toml file generated by the monax tooling. Is this used anywhere?","username":"RobertDiebels","ts":"2017-10-12T12:36:40.071Z"}
{"msg":"Hey guys, I noticed this: `[service] image = \"quay.io/monax/db:0.16.3\"` in the config.toml file generated by the monax tooling. Is this used anywhere?","username":"RobertDiebels","ts":"2017-10-12T12:36:40.071Z"}
{"msg":"Has left the channel.","username":"william123","ts":"2017-10-12T13:41:18.301Z","type":"ul"}
{"msg":"Has joined the channel.","username":"bennettneale","ts":"2017-10-12T22:48:52.594Z","type":"uj"}
{"msg":"In solidity... keccak256 hashing a string literal versus keccak256 hashing a string memory variable is still returning different results in Monax... we tested using compiler v 0.4.4 where we get expected hashed output on Remix but different value calling the function on Burrow ............ is there a known workaround in Burrow... some known padding to make it the same as the string literal?","username":"stingley","ts":"2017-10-13T06:57:45.512Z"}
{"msg":"In solidity... keccak256 hashing a string literal versus keccak256 hashing a string memory variable is still returning different results in Monax... we tested using compiler v 0.4.4 where we get expected hashed output on Remix but different value calling the function on Burrow ............ is there a known workaround in Burrow... some known padding to make it the same as the string literal","username":"stingley","ts":"2017-10-13T06:57:45.512Z"}
{"msg":"keccak256 hashing a string literal versus keccak256 hashing a string memory variable is still returning different results in Monax... we tested using compiler v 0.4.4 where we get expected hashed output on Remix but different value calling the function on Burrow ............ is there a known workaround in Burrow... some known padding to make it the same as the string literal","username":"stingley","ts":"2017-10-13T06:57:45.512Z"}
{"msg":"in other words, this: https://github.com/ethereum/solidity/issues/966","username":"stingley","ts":"2017-10-13T06:57:57.461Z"}
{"msg":"@silasdavis ","username":"stingley","ts":"2017-10-13T07:59:16.548Z"}
{"msg":"@stingley could you provide a test case that demonstrates the issue, including what you expect the value to be? I assume that solidity compiler precomputes the value in the literal case. I'd need to take a look at the generated bytecode to understand the divergence","username":"silasdavis","ts":"2017-10-16T16:54:32.703Z"}
{"msg":"@RobertDiebels that should be used by `monax chains start --init-dir <chain dir> <chain name>` as the image that will be used as the node","username":"silasdavis","ts":"2017-10-16T16:55:24.673Z"}
{"msg":"","username":"stingley","ts":"2017-10-17T05:03:17.997Z","attachments":[{"type":"file","title":"keccak256_test.zip","title_link":"/file-upload/veMKww7QuhB8RQkjP/keccak256_test.zip","url":"/file-upload/veMKww7QuhB8RQkjP/keccak256_test.zip","remote":false,"fileId":"veMKww7QuhB8RQkjP","fileName":"keccak256_test.zip"}]}
{"msg":"there is a contract with a set function and 2 get functions to show the divergence ... the Javascript file prints the 2 hashed values @silasdavis ... we figured out that 0x is being prepended in the memory case so if we add that it matches","username":"stingley","ts":"2017-10-17T05:06:44.158Z"}
{"msg":"could be a bug in the monax contracts library? since as I said the remix compiler of the same version gives us what we expect","username":"stingley","ts":"2017-10-17T05:07:36.873Z"}
{"msg":"also wanted to ask this channel if anyone is using burrow with either Truffle or Embark? Haven't found any of that documentation yet if it exists","username":"stingley","ts":"2017-10-17T05:08:07.279Z"}
{"msg":"Has joined the channel.","username":"robinrob","ts":"2017-10-17T11:23:22.176Z","type":"uj"}
{"msg":"Has joined the channel.","username":"CryptoSha","ts":"2017-10-19T18:55:42.518Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mredmundto85","ts":"2017-10-21T20:43:49.673Z","type":"uj"}
{"msg":"Has joined the channel.","username":"simonmullaney","ts":"2017-10-24T11:28:16.998Z","type":"uj"}
{"msg":"@silasdavis ah thanks! I've got another question. Does a Burrow-node continue pinging it's seeds until it finds them? Or does it crash if it can't find them?","username":"RobertDiebels","ts":"2017-10-25T08:10:36.966Z"}
{"msg":"Has joined the channel.","username":"guoger","ts":"2017-10-27T01:36:58.969Z","type":"uj"}
{"msg":"hi Burrow gurus, I'm new to this project and trying to understand some background and history here, particularly I'm trying to understand the relation between Burrow, Monax, Tendermin, erid_db. IIUC, eris_db is *renamed* to Burrow, and it's using Tendermint as underlying bft consensus implementation. Is Monax a commercial distribution of Burrow? please correct me if I'm wrong. Thx!","username":"guoger","ts":"2017-10-27T02:53:23.023Z"}
{"msg":"According to the incubation proposal:\n> For a bit of overall historical context on the background, goals, and learnings of where Burrow\nhas grown out of please see this Github file. At that time we said the following:\nHowever the link there (https://github.com/eris-ltd/eris/blob/release_0.12/docs/specs/motivation.md) is broken, anybody knows where it's moved? thx","username":"guoger","ts":"2017-10-27T02:55:28.875Z"}
{"msg":"According to the incubation proposal:\n> For a bit of overall historical context on the background, goals, and learnings of where Burrow has grown out of please see this Github file. At that time we said the following:\nHowever the link there (https://github.com/eris-ltd/eris/blob/release_0.12/docs/specs/motivation.md) is broken, anybody knows where it's moved? thx","username":"guoger","ts":"2017-10-27T02:55:28.875Z"}
{"msg":"@guoger as far as I know Monax (company) originally started under the name of Eris. Burrow was first called ErisDB, MonaxDB and then Burrow when it was moved to the Hyperledger project.","username":"RobertDiebels","ts":"2017-10-27T08:08:09.592Z"}
{"msg":"@RobertDiebels thanks! so what's the relation between Monax(the project https://github.com/monax/monax/) and Burrow?","username":"guoger","ts":"2017-10-27T08:32:57.505Z"}
{"msg":"Clones I believe.","username":"RobertDiebels","ts":"2017-10-27T08:33:48.503Z"}
{"msg":"Or mirrors.","username":"RobertDiebels","ts":"2017-10-27T08:33:55.446Z"}
{"msg":"the structure looks quite different tho... I'm trying to follow getting-started tutorial https://monax.io/docs/getting-started/, and one of the container it starts actually executes `burrow serve`. So I guess `Monax` is somehow a wrapper/set of tooling to interact with `Burrow`?","username":"guoger","ts":"2017-10-27T08:36:28.717Z"}
{"msg":"Yes the CLI is.","username":"RobertDiebels","ts":"2017-10-27T08:37:58.652Z"}
{"msg":"It generates the configuration for a Burrow node","username":"RobertDiebels","ts":"2017-10-27T08:38:08.489Z"}
{"msg":"is Monax is simply a cli tool to interact with Burrow, why isn't it included in Burrow then?","username":"guoger","ts":"2017-10-27T08:42:33.958Z"}
{"msg":"That's not a question I can answer","username":"RobertDiebels","ts":"2017-10-27T08:44:28.039Z"}
{"msg":"I only know that the CLI to generate Burrow config is named `monax`","username":"RobertDiebels","ts":"2017-10-27T08:44:51.677Z"}
{"msg":"That's good enough! thank you sir! I feel `Monax` as a project also comes with some other tools, e.g. `monax-keys`, `compilers` etc that are necessary to build a `Burrow` network and application on top of it.","username":"guoger","ts":"2017-10-27T08:48:27.997Z"}
{"msg":"Yes correct.","username":"RobertDiebels","ts":"2017-10-27T08:49:47.493Z"}
{"msg":"By my knowledge those are used as part of the configuration generation. What they do exactly I don't know.","username":"RobertDiebels","ts":"2017-10-27T08:50:24.541Z"}
{"msg":"I might not be correct though. Someone from the Burrow team could shed more light on that.","username":"RobertDiebels","ts":"2017-10-27T08:50:49.953Z"}
{"msg":"Thx a lot!","username":"guoger","ts":"2017-10-27T08:51:29.853Z"}
{"msg":"Has joined the channel.","username":"nicolapaoli","ts":"2017-10-30T16:08:34.285Z","type":"uj"}
{"msg":"@RobertDiebels thanks for fielding these questions!","username":"silasdavis","ts":"2017-11-02T10:14:03.503Z"}
{"msg":"@guoger You might find that my recent post to the Hyperledger TSC is useful: https://lists.hyperledger.org/pipermail/hyperledger-tsc/2017-October/001163.html","username":"silasdavis","ts":"2017-11-02T10:14:27.119Z"}
{"msg":"it describes some refactoring work I am just coming to the end of now, some of the history, and future plans","username":"silasdavis","ts":"2017-11-02T10:14:55.667Z"}
{"msg":"No problem :D","username":"RobertDiebels","ts":"2017-11-02T10:15:15.819Z"}
{"msg":"@guoger Monax (formerly Eris) is the company behind Burrow (formerly eris-db) and monax (formerly eris) is the command line developer tooling suite","username":"silasdavis","ts":"2017-11-02T10:16:05.797Z"}
{"msg":"The supporting services/projects of keys/compilers (no longer needed)/legacy-contracts.js/legacy.db are not strictly necessary to run a Burrow chain","username":"silasdavis","ts":"2017-11-02T10:17:19.285Z"}
{"msg":"but in reality they soft dependencies","username":"silasdavis","ts":"2017-11-02T10:17:43.716Z"}
{"msg":"but in reality they are soft dependencies","username":"silasdavis","ts":"2017-11-02T10:17:43.716Z"}
{"msg":"you could generate the necessary config, provide a keys endpoint (which is want you are supposed to do in production)","username":"silasdavis","ts":"2017-11-02T10:18:20.956Z"}
{"msg":"you could generate the necessary config, provide a keys endpoint (which is want you are supposed to do in production) and talk to our RPC layers directly if you wanted","username":"silasdavis","ts":"2017-11-02T10:18:20.956Z"}
{"msg":"but you'd have to read the Burrow code and sample files to do this (not impossible, and I think @RobertDiebels runs things 'from scratch')","username":"silasdavis","ts":"2017-11-02T10:18:53.841Z"}
{"msg":"the monax tool makes heavy use of docker","username":"silasdavis","ts":"2017-11-02T10:19:07.229Z"}
{"msg":"which gives some nice developer experience benefits, but does obscure certain things","username":"silasdavis","ts":"2017-11-02T10:19:21.318Z"}
{"msg":"Also we have some core functionality in the sub-command `monax pkgs do` which is really the only way to deploy contracts to Burrow","username":"silasdavis","ts":"2017-11-02T10:19:50.898Z"}
{"msg":"You should read my TSC post to understand more, but I am working on a more 'batteries included' experience with just Burrow, and to reduce our maintenance overhead","username":"silasdavis","ts":"2017-11-02T10:20:37.158Z"}
{"msg":"the monax tooling provides some uniquely useful stuff, but the coupling between it and Burrow currently is not ideal, and we would really need some assistance from the community to maintain some of the features","username":"silasdavis","ts":"2017-11-02T10:21:14.081Z"}
{"msg":"One key way to make Burrow more standalone is to provide a web3 RPC layer (so Ethereum tooling will work with Burrow out of the box), and that is on the roadmap - the first step of which - unifying our RPC logic I have done on my branch here, with this service: https://github.com/silasdavis/burrow/blob/bosmarmot/rpc/service.go which I intend to use as the basis for implementing a web3 interface","username":"silasdavis","ts":"2017-11-02T10:23:07.457Z"}
{"msg":"@silasdavis yea I use the RPC layer. Btw could you take a look at my previous question?","username":"RobertDiebels","ts":"2017-11-02T14:44:49.137Z"}
{"msg":"Has joined the channel.","username":"chokha","ts":"2017-11-03T06:26:29.920Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sidhujag","ts":"2017-11-03T16:30:26.211Z","type":"uj"}
{"msg":"Hey guys just a quick question.. where do the EVM smart contracts live? is there a scaling plan where the contracts can live on the cloud as opposed to the blockchain and anchored onto the chain? since its permissioned does that mean that data does not necessarily have to be onchain and can be offchain?","username":"sidhujag","ts":"2017-11-03T16:31:22.024Z"}
{"msg":"Has joined the channel.","username":"miguelcalero","ts":"2017-11-05T21:43:58.418Z","type":"uj"}
{"msg":"Has joined the channel.","username":"grkvlt","ts":"2017-11-07T13:37:05.037Z","type":"uj"}
{"msg":"Has joined the channel.","username":"shaneG","ts":"2017-11-07T21:26:25.064Z","type":"uj"}
{"msg":"@silasdavis Hey! I'm using the npm package @Monax/Legacy-contracts to interact with my Monax 17 deployed contracts and i seem to be having an issue when calling the 'selfdestruct(address)' method in solidity 0.4.4. when calling my method, kill(){selfdestruct([msg.sender | tx.origin | 0x0...]);//i use one of those}, I receive a ''transact and hold\" error. what is very odd to me is that every time this happens my chain breaks. Have you ever heard of something like this happening before?","username":"shaneG","ts":"2017-11-07T21:39:22.814Z"}
{"msg":"have also tried selfdestruct(this)","username":"shaneG","ts":"2017-11-07T21:40:20.462Z"}
{"msg":"Has joined the channel.","username":"john111","ts":"2017-11-08T05:36:52.748Z","type":"uj"}
{"msg":"I'm trying to follow the [getting started guide](https://monax.io/docs/getting-started/) and got a problem. Essentially what I did is:\n```\n$ monax chains make firstchain --account-types=Root:2,Full:1 --unsafe\n$ monax chains start firstchain --init-dir $chain_dir_this\n$ monax pkgs do --chain firstchain --address $addr\n```\nThe output of `monax ls` is:\n```\nSERVICE        ON     VERSION\ncompilers      *      0.18.0\nkeys           *      0.17.0\n\nCHAIN          ON     VERSION\nfirstchain     *      0.17.0\n```\nHowever, the `epm.output.json` only contains:\n```\n{\n  \"assertStorage\": \"\",\n  \"defaultAddr\": \"92D306F1E82E3C16F9CB513402D6A49D38CB2C8A\",\n  \"deployStorageK\": \"\",\n  \"queryStorage\": \"\",\n  \"setStorage\": \"\",\n  \"setStorageBase\": \"\"\n}%\n```\nWhereas I'm expecting tx hash, addr of deployment, per statement in that guide:\n>  You should see the output in jobs_output.json which will have the transaction hash of the transactions as well as the address of the deployed idi.sol contract.\n\nYour help is appreciated!","username":"guoger","ts":"2017-11-08T06:59:23.256Z"}
{"msg":"@silasdavis thank you so much for the response earlier, appreciated!","username":"guoger","ts":"2017-11-08T07:00:25.427Z"}
{"msg":"Has joined the channel.","username":"Southside","ts":"2017-11-08T14:33:55.146Z","type":"uj"}
{"msg":"@silasdavis do you know if burrow conforms to this API - https://github.com/ethereum/EIPs/issues/56","username":"kelly_","ts":"2017-11-08T17:14:51.478Z"}
{"msg":"@silasdavis do you know if monax is compatible with web3? a.k.a if i have deployed a contract using monax, can i use web3 to communicate with it?","username":"shaneG","ts":"2017-11-08T20:50:10.380Z"}
{"msg":"Has joined the channel.","username":"srongzhe","ts":"2017-11-09T03:52:32.764Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Jimskie","ts":"2017-11-09T23:21:30.960Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mastreips","ts":"2017-11-10T18:24:41.452Z","type":"uj"}
{"msg":"Does anyone know what is difference between Burrow and Ethermint?\n","username":"denis4net","ts":"2017-11-11T23:22:37.356Z"}
{"msg":"Has joined the channel.","username":"Russell-Columbia","ts":"2017-11-11T23:29:34.573Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=TNhFA5khJzwhitAYN) @shaneG ","username":"denis4net","ts":"2017-11-12T16:37:44.070Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=TNhFA5khJzwhitAYN","url":"https://chat.hyperledger.org/channel/burrow?msg=TNhFA5khJzwhitAYN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=TNhFA5khJzwhitAYN) @shaneG \n@silasdavis pointed me (https://chat.hyperledger.org/channel/burrow?msg=sHkboeWGZz6SYMz48) that he works on it, but still APIs are not compatible. I read that etheremint is compatible with geth api.","username":"denis4net","ts":"2017-11-12T16:37:44.070Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=TNhFA5khJzwhitAYN","url":"https://chat.hyperledger.org/channel/burrow?msg=TNhFA5khJzwhitAYN","remote":true,"fileId":null,"fileName":null},{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=sHkboeWGZz6SYMz48","url":"https://chat.hyperledger.org/channel/burrow?msg=sHkboeWGZz6SYMz48","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"HoangLong","ts":"2017-11-13T17:46:11.240Z","type":"uj"}
{"msg":"Has joined the channel.","username":"myin2000","ts":"2017-11-13T21:35:37.168Z","type":"uj"}
{"msg":"@guoger regarding the documentation claiming you will see transaction hashes then that looks like it is out of date. I for the epm.output.json:\n```\n{\n  \"assertStorage\": \"passed\",\n  \"defaultAddr\": \"AE930451D830D456C80A14ED4DF6B20582578B1D\",\n  \"deployStorageK\": \"9C79F0654D7631ED7293A320A5A586DBC3C5C121\",\n  \"queryStorage\": \"17\",\n  \"setStorage\": \"\"\n}\n```\nWhere the deployStorageK value is the address of the idi contract","username":"silasdavis","ts":"2017-11-16T15:54:26.127Z"}
{"msg":"I'm really sorry but I don't have any time to dig in support our monax tool other than to say it should work and does for me.","username":"silasdavis","ts":"2017-11-16T15:55:11.209Z"}
{"msg":"@shaneG We are not web3 compatible, this is something that is planned and I am expecting to get multiple development resources to help do this. Another place to look is with the sawtooth lake team of have integrated (a slightly older) version of the burrow EVM and have an experimental web3 client.","username":"silasdavis","ts":"2017-11-16T15:56:10.273Z"}
{"msg":"This might help with where I am at: https://lists.hyperledger.org/pipermail/hyperledger-tsc/2017-October/001163.html","username":"silasdavis","ts":"2017-11-16T15:56:48.291Z"}
{"msg":"Burrow is a state of flux, but I think there is a lot of promise and willing from the Hyperledger community to give us some momentum. But I'm afraid for now you would need to deploy using the Monax tool or our APIs directly. We are aiming for web3 compatibility and to maintain a subset of our tooling. But my priority now is working the Burrow's EVM and the current refactor which i hope to have a version to develop the end of next week","username":"silasdavis","ts":"2017-11-16T15:58:25.613Z"}
{"msg":"@kelly_ the link you posted looks like an idea to provide a better ABI for certain purposes. This is the metadata that tells you how to formulate EVM code to call functions deployed with a language like solidity. This is handled a layer below Burrow, which is not ABI-aware it just runs EVM code. The monax tool uses the existing ethereum ABI code to do that work when formulating transactions. So the answer is 'no', but also perhaps the question doesn't quite apply to Burrow ;)","username":"silasdavis","ts":"2017-11-16T16:00:40.559Z"}
{"msg":"@denis4net ethermint is a bolt-on of Tendermint to go-ethereum. It uses go-ethereum's GPL licensed EVM implementation","username":"silasdavis","ts":"2017-11-16T16:01:22.882Z"}
{"msg":"Burrow has its own implementation of the EVM which is simpler than go-ethereum in some ways and licensed under Apache","username":"silasdavis","ts":"2017-11-16T16:01:47.699Z"}
{"msg":"the vision for Burrow is to be a fast single process Tendermint + liberally licensed EVM on the one hand, and a good EVM library on the other hand for integration with other platforms","username":"silasdavis","ts":"2017-11-16T16:02:24.140Z"}
{"msg":"Burrow also has native permissioning deeply hooked into the EVM and a functionality for calling native code called SNatives","username":"silasdavis","ts":"2017-11-16T16:02:49.208Z"}
{"msg":"I want to make Burrow a lean library for running EVM code with extensibility for permissioned/enterprise use cases","username":"silasdavis","ts":"2017-11-16T16:03:44.895Z"}
{"msg":"that also happens to have a standalone mode where it operates as a full stack blockchain on its own using Tendermint if you don't need the flexibility of Sawtooth or Fabric","username":"silasdavis","ts":"2017-11-16T16:04:27.697Z"}
{"msg":"Has joined the channel.","username":"denofernandes","ts":"2017-11-16T16:31:24.947Z","type":"uj"}
{"msg":"Has joined the channel.","username":"czarx","ts":"2017-11-17T04:20:35.372Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SupriyaMudaliar","ts":"2017-11-17T11:56:44.491Z","type":"uj"}
{"msg":"Has joined the channel.","username":"iwanbk","ts":"2017-11-18T04:28:59.911Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Infodataway","ts":"2017-11-18T10:34:34.865Z","type":"uj"}
{"msg":"Has joined the channel.","username":"saadmir","ts":"2017-11-20T02:54:36.010Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Riussi","ts":"2017-11-20T08:50:37.274Z","type":"uj"}
{"msg":"Has joined the channel.","username":"robertdavid010","ts":"2017-11-27T14:02:38.573Z","type":"uj"}
{"msg":"@denis4net would like to work on deploying burrow without monax, on base install of core client. Does documentation for doing this exist?","username":"robertdavid010","ts":"2017-11-27T14:04:02.280Z"}
{"msg":"@robertdavid010 I have some code that I am using while I am running the integration tests for Burrow that will help with deploying Burrow here: https://github.com/hyperledger/burrow/pull/657","username":"silasdavis","ts":"2017-11-27T14:46:02.586Z"}
{"msg":"in particular: https://github.com/hyperledger/burrow/blob/hypermarmot/genesis/spec/genesis_spec.go","username":"silasdavis","ts":"2017-11-27T14:47:40.303Z"}
{"msg":"provides a way of describing a template GenesisDoc (and so GenesisState) and a new 'configure' command will convert that to a Burrow configuration generating keys along the way","username":"silasdavis","ts":"2017-11-27T14:48:19.661Z"}
{"msg":"It has a dependency on running a keys service, our version of which is is still bound up with the monax tooling","username":"silasdavis","ts":"2017-11-27T14:48:48.152Z"}
{"msg":"but just so you are aware, this should be helpful, though the current 'burrow serve' will work standalone with the appropriate genesis.json and priv_validator.json","username":"silasdavis","ts":"2017-11-27T14:49:45.326Z"}
{"msg":"The upcoming version will no longer reads private keys directly from the filesystem but uses the monax-keys interface for signing","username":"silasdavis","ts":"2017-11-27T14:50:30.836Z"}
{"msg":"Here's an example one-liner that create a chain template, configures it, and runs Burrow: `burrow spec --participant-accounts 2 --full-accounts 1 | burrow configure --genesis-spec=- --validator-index 0 | burrow -c-`","username":"silasdavis","ts":"2017-11-27T14:51:04.999Z"}
{"msg":"Though I'm afraid this version is still a work-in-progress and requires an updated version of monax pkgs do or monax/legacy-contracts.js to deploy contracts","username":"silasdavis","ts":"2017-11-27T14:56:22.281Z"}
{"msg":"thank you","username":"robertdavid010","ts":"2017-11-27T18:37:13.172Z"}
{"msg":"I may just start digging in and work up my own ad hoc deploy....","username":"robertdavid010","ts":"2017-11-27T18:38:43.225Z"}
{"msg":"not sure how much work it would be","username":"robertdavid010","ts":"2017-11-27T18:38:49.535Z"}
{"msg":"Has joined the channel.","username":"heath","ts":"2017-11-28T06:27:50.486Z","type":"uj"}
{"msg":"Has joined the channel.","username":"iamprem","ts":"2017-11-30T21:53:43.960Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ugSjDJHwFPRNzTHPd) @silasdavis I got some time today and looked into this problem. The [doc](https://monax.io/docs/deploying-advanced-smart-contracts-to-a-chain/) needs to be updated. `set`, `deploy` etc should be top-level fields, instead of being nested in `job`. So `epm.yaml` should be:\n```\njobs:\n\n- name: deployGSFactory\n  job:\n    deploy:\n      contract: GSFactory.sol\n      instance: all\n\n- name: createGSContract\n  job:\n    call:\n      destination: $deployGSFactory\n      data: create\n      abi: GSFactory\n\n- name:  getGSAddr\n  job:\n    query-contract:\n      destination: $deployGSFactory\n      data: getLast\n      abi: $deployGSFactory\n\n- name: assertAddr\n  job:\n    assert:\n      key: $getGSAddr\n      relation: eq\n      val: $createGSContract\n\n- name: setStorage\n  job:\n    call:\n      destination: $createGSContract\n      data: set $setStorageBase\n      abi: GSContract\n\n- name: queryStorage\n  job:\n    query-contract:\n      destination: $createGSContract\n      data: get\n      abi: GSContract\n\n- name: assertStorage\n  job:\n    assert:\n      key: $queryStorage\n      relation: eq\n      val: $setStorageBase\n```\nI've confirmed that it works as expected with this modification","username":"guoger","ts":"2017-12-01T08:03:07.836Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ugSjDJHwFPRNzTHPd","url":"https://chat.hyperledger.org/channel/burrow?msg=ugSjDJHwFPRNzTHPd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ugSjDJHwFPRNzTHPd) @silasdavis I got some time today and looked into this problem. The [doc](https://monax.io/docs/deploying-advanced-smart-contracts-to-a-chain/) needs to be updated. `set`, `deploy` etc should be top-level fields, instead of being nested in `job`. So `epm.yaml` should be:\n```\njobs:\n\n- name: setStorageBase\n  set:\n    val: 5\n\n- name: deployStorageK\n  deploy:\n    contract: idi.sol\n\n- name: setStorage\n  call:\n    destination: $deployStorageK\n    data: set $setStorageBase\n\n- name: queryStorage\n  query-contract:\n    destination: $deployStorageK\n    data: get\n\n- name: assertStorage\n  assert:\n    key: $queryStorage\n    relation: eq\n    val: $setStorageBase\n```\nI've confirmed that it works as expected with this modification","username":"guoger","ts":"2017-12-01T08:03:07.836Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ugSjDJHwFPRNzTHPd","url":"https://chat.hyperledger.org/channel/burrow?msg=ugSjDJHwFPRNzTHPd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@silasdavis another question, I'm trying to look at burrow container log, but it seems to be fairly bloated with tendermint log where blocks are cut periodically (~ every second). How can I slow that down so I could focus on logs i'm interested","username":"guoger","ts":"2017-12-01T08:15:28.515Z"}
{"msg":"@silasdavis another question, I'm trying to look at burrow container log, but it seems to be fairly bloated with tendermint log where blocks are cut periodically (~ every second). How can I slow that down so I could focus on logs i'm interested. Also, how to turn on EVM log?","username":"guoger","ts":"2017-12-01T08:15:28.515Z"}
{"msg":"thx","username":"guoger","ts":"2017-12-01T08:15:29.725Z"}
{"msg":"Has joined the channel.","username":"PetrVlasekCA","ts":"2017-12-01T13:06:42.407Z","type":"uj"}
{"msg":"In current version of burrow pass `--debug` to `burrow serve` to get the EVM log, in the next version that will be absorbed into logging","username":"silasdavis","ts":"2017-12-01T13:55:10.212Z"}
{"msg":"In current version of burrow pass `--debug` to `burrow serve` to get the EVM log printed to stdout, in the next version that will be absorbed into the main logging as a 'trace' message","username":"silasdavis","ts":"2017-12-01T13:55:10.212Z"}
{"msg":"@guoger ","username":"silasdavis","ts":"2017-12-01T13:56:42.489Z"}
{"msg":"The logging config provides a fairly powerful way to arbitrarily filter or annotate logs, but is not terribly well documented at the moment, and really needs a mechanism for spitting out presets to use as a basis to write a config to your needs","username":"silasdavis","ts":"2017-12-01T13:59:18.079Z"}
{"msg":"However in the meantime there is a little introduction here: https://github.com/hyperledger/burrow/blob/master/config/templates.go#L298-L324 and there is a stub command you could edit to your needs here that will help you generate logging config: https://github.com/hyperledger/burrow/blob/master/util/logging/cmd/main.go ","username":"silasdavis","ts":"2017-12-01T14:00:19.767Z"}
{"msg":"that little command line app is using a sort of fluent logging sink interfaces so if you have auto-completion in a Go editor or IDE you should find it fairly discoverable ","username":"silasdavis","ts":"2017-12-01T14:01:25.678Z"}
{"msg":"the example there shows you how to build a filter","username":"silasdavis","ts":"2017-12-01T14:01:55.783Z"}
{"msg":"Unfortunately TOML is not a particularly nice language for writing down recursive data structures, but here is what it would look like:\n\n```\n[logging]\n  [logging.root_sink]\n\n    [[logging.root_sink.sinks]]\n      [logging.root_sink.sinks.output]\n        output_type = \"stderr\"\n\n    [[logging.root_sink.sinks]]\n      [logging.root_sink.sinks.transform]\n        transform_type = \"filter\"\n        filter_mode = \"exclude_when_all_match\"\n\n        [[logging.root_sink.sinks.transform.predicates]]\n          key_regex = \"module\"\n          value_regex = \"p2p\"\n\n        [[logging.root_sink.sinks.transform.predicates]]\n          key_regex = \"captured_logging_source\"\n          value_regex = \"tendermint_log15\"\n\n      [[logging.root_sink.sinks.sinks]]\n        [logging.root_sink.sinks.sinks.output]\n          output_type = \"syslog\"\n          url = \"\"\n          tag = \"Burrow-network\"\n\n      [[logging.root_sink.sinks.sinks]]\n        [logging.root_sink.sinks.sinks.output]\n          output_type = \"file\"\n          path = \"/var/log/burrow-network.log\"\n```","username":"silasdavis","ts":"2017-12-01T14:03:23.750Z"}
{"msg":"just put something like that in your config.toml","username":"silasdavis","ts":"2017-12-01T14:03:35.713Z"}
{"msg":"Regarding docs, thanks for finding that, we don't really have the time to maintain those tutorials, but we need to have clear specs in against our tooling","username":"silasdavis","ts":"2017-12-01T14:05:13.702Z"}
{"msg":"You can read about what I'm planning to do to fix this here:  https://wiki.hyperledger.org/projects/burrow/roadmap_2018_q1","username":"silasdavis","ts":"2017-12-01T14:05:24.263Z"}
{"msg":"You can read about what I'm doing to fix this here:  https://wiki.hyperledger.org/projects/burrow/roadmap_2018_q1","username":"silasdavis","ts":"2017-12-01T14:05:24.263Z"}
{"msg":"If you feel like making a PR to correct that file: https://github.com/monax/monax/blob/master/docs/contracts_deploying_adv/epm.yaml then it would be much appreciatd","username":"silasdavis","ts":"2017-12-01T14:09:06.823Z"}
{"msg":"If you feel like making a PR to correct that file: https://github.com/monax/monax/blob/master/docs/contracts_deploying_adv/epm.yaml then it would be much appreciated","username":"silasdavis","ts":"2017-12-01T14:09:06.823Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ozEzxXQTAbR6CAQBM) @silasdavis created PR https://github.com/monax/monax/pull/1440","username":"guoger","ts":"2017-12-04T03:05:13.980Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ozEzxXQTAbR6CAQBM","url":"https://chat.hyperledger.org/channel/burrow?msg=ozEzxXQTAbR6CAQBM","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"Luker501","ts":"2017-12-04T09:00:16.553Z","type":"uj"}
{"msg":"Hello all. Thought I joined a couple of weeks ago but forgot to click on the join button for this channel :-/ anyway I'm here to learn :grinning: ","username":"Luker501","ts":"2017-12-04T09:01:07.980Z"}
{"msg":"Has joined the channel.","username":"abutler","ts":"2017-12-04T11:56:47.557Z","type":"uj"}
{"msg":"Has joined the channel.","username":"finterran","ts":"2017-12-05T01:19:20.620Z","type":"uj"}
{"msg":"Greetings all! Happy to be apart of the community and contribute where I can!","username":"finterran","ts":"2017-12-05T01:57:45.448Z"}
{"msg":"Greetings all! Happy to be a part of the community and contribute where I can!","username":"finterran","ts":"2017-12-05T01:57:45.448Z"}
{"msg":"Has joined the channel.","username":"bird_alone","ts":"2017-12-05T04:42:39.046Z","type":"uj"}
{"msg":"Hi there, what is your particular interest in Burrow?","username":"silasdavis","ts":"2017-12-05T15:58:32.452Z"}
{"msg":"Has joined the channel.","username":"SomaNayak","ts":"2017-12-06T18:02:57.616Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bzeyben","ts":"2017-12-07T18:16:39.401Z","type":"uj"}
{"msg":"Looking to use burrow as a test-bed for a project. I'm quite fond of the modularity the Tendermint engine provides, and I think is is really great what you guys have done with it  in the Burrow project (as well as the Monax configuration and deployment tool set)!","username":"finterran","ts":"2017-12-08T00:56:03.411Z"}
{"msg":"Looking to use burrow as a test-bed for a project. I'm quite fond of the modularity the Tendermint engine provides, and I think it is really great what you guys have done with it  in the Burrow project (as well as the Monax configuration and deployment tool set)!","username":"finterran","ts":"2017-12-08T00:56:03.411Z"}
{"msg":":thumbsup: ","username":"finterran","ts":"2017-12-08T00:56:52.034Z"}
{"msg":"is it possible to setup nodes behind a firewall? inside a VM?","username":"Chaoz","ts":"2017-12-08T02:55:59.722Z"}
{"msg":"Has joined the channel.","username":"Soundharya","ts":"2017-12-08T05:27:08.368Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dharuq","ts":"2017-12-09T19:37:20.328Z","type":"uj"}
{"msg":"Has joined the channel.","username":"FrancisKabu","ts":"2017-12-10T22:16:46.377Z","type":"uj"}
{"msg":"hi everybody,\ni have an issue in starting monax \n\n*root @ abb-HP-ProDesk-400-G1-SFF: ~ # sudo apt-get update & sudo apt-get install monax\nReceived from: 1 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]\nReached: 2 http://ppa.launchpad.net/yannubuntu/boot-repair/ubuntu xenial InRelease\nReached: 3 http://ma.archive.ubuntu.com/ubuntu xenial InRelease\nReceived from: 4 http://ma.archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]\nAchieved: 5 https://download.docker.com/linux/ubuntu xenial InRelease\nAchieved: 6 https://pkgs.monax.io/apt xenial InRelease\nReceived from: 7 http://ma.archive.ubuntu.com/ubuntu xenial-backports InRelease [102 kB]\n306 kb received in 0s (501 kb / s)\nReading package lists ... Done\nReading package lists ... Done\nBuilding the dependency tree\nReading status information ... Done\nmonax is already the newest version (0.18.0-1).\nYou can run \"apt-get -f install\" to fix these problems:\nThe following packages contain unmet dependencies:\n rocketchat: Depends: libappindicator1 but will not be installed\nE: Dependencies not satisfied. Try \"apt-get -f install\" without package\n(or indicate a solution).\nroot @ abb-HP-ProDesk-400-G1-SFF: ~ # monax init\nThe command \"monax\" was not found, did you mean:\n The \"mona\" command of the \"mona\" (universe) package\nmonax: command not found *\n\nany idea please i tried the solution proposed in the \"Tutorials | Trouble Shooting Your Installation\" page 'https://monax.io/docs/install-troubleshooting/' & didn't work for me !\n","username":"AYOUB_HAMIDI","ts":"2017-12-12T12:24:08.277Z"}
{"msg":"Has joined the channel.","username":"Metis","ts":"2017-12-13T09:03:13.050Z","type":"uj"}
{"msg":"@AYOUB_HAMIDI I suggest you install directly from the monax repo: https://github.com/monax/monax","username":"silasdavis","ts":"2017-12-13T14:13:57.115Z"}
{"msg":"i.e.\n```\ngo get github.com/monax/monax/cmd/monax\nmonax init\n```","username":"silasdavis","ts":"2017-12-13T14:14:13.436Z"}
{"msg":"i.e.\n```\ngo get github.com/monax/monax/cmd/monax\nmonax init\n```","username":"silasdavis","ts":"2017-12-13T14:14:13.436Z"}
{"msg":"Has joined the channel.","username":"iago001","ts":"2017-12-16T14:10:22.410Z","type":"uj"}
{"msg":"Has joined the channel.","username":"b9lab-damien","ts":"2017-12-16T22:44:28.161Z","type":"uj"}
{"msg":"Has joined the channel.","username":"muasif80","ts":"2017-12-19T14:49:28.236Z","type":"uj"}
{"msg":"hi is burrow alternative to ethereum","username":"muasif80","ts":"2017-12-19T14:49:50.423Z"}
{"msg":"From https://github.com/hyperledger/burrow/blob/master/README.md: Hyperledger Burrow is a permissioned Ethereum smart-contract blockchain node. It executes Ethereum smart contract code on a permissioned virtual machine. Burrow provides transaction finality and high transaction throughput on a proof-of-stake Tendermint consensus engine.","username":"tkuhrt","ts":"2017-12-19T18:37:00.151Z"}
{"msg":"silasdavis","username":"tkuhrt","ts":"2017-12-19T20:51:49.760Z","type":"subscription-role-added"}
{"msg":"Has joined the channel.","username":"PabloBascunana","ts":"2017-12-20T08:49:14.110Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rohanagarwal","ts":"2017-12-25T21:30:42.575Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SaiChaitanya","ts":"2017-12-26T02:13:53.896Z","type":"uj"}
{"msg":"hi, marmot (slack) and support.monax.io return 404 errors? ","username":"SaiChaitanya","ts":"2017-12-26T02:15:08.774Z"}
{"msg":"Has joined the channel.","username":"davux","ts":"2017-12-26T19:38:21.826Z","type":"uj"}
{"msg":"@SaiChaitanya As far as I know all burrows support has moved to this rocketchat, Monax offers instead a premium support package to this url: https://monax.io/packages/ . @silasdavis , anything to add?","username":"fabcan","ts":"2017-12-28T08:19:13.373Z"}
{"msg":"Has joined the channel.","username":"tommling","ts":"2017-12-28T18:39:23.747Z","type":"uj"}
{"msg":"Hi all, happy holidays. I am exploring Burrow / Seth at the moment and I am having a little trouble building burrow from source. Glide keeps prompting me for my github information when fetching the tendermint/go-clist package. It appears that this package may have been moved to ```https://github.com/tendermint/tmlibs/tree/master/clist```","username":"tommling","ts":"2017-12-28T18:43:26.291Z"}
{"msg":"Hi all, happy holidays. I am exploring Burrow / Seth at the moment and I am having a little trouble building burrow from source. Glide keeps prompting me for my github information when fetching the tendermint/go-clist package. It appears that this package may have been moved to https://github.com/tendermint/tmlibs/tree/master/clist","username":"tommling","ts":"2017-12-28T18:43:26.291Z"}
{"msg":"err, at least tendermint/tmlibs/go-clist","username":"tommling","ts":"2017-12-28T18:43:46.494Z"}
{"msg":"err, at least https://github.com/tendermint/tmlibs/go-clist","username":"tommling","ts":"2017-12-28T18:43:46.494Z"}
{"msg":"err, at least `/tendermint/tmlibs/go-clist`","username":"tommling","ts":"2017-12-28T18:43:46.494Z"}
{"msg":"Hi @tommling you'll need to edit glide.yaml. We'd love a pull request so this doesn't catch others. ","username":"compleatang","ts":"2017-12-29T10:06:11.642Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=wo7bvtigLq3gddDo7) @SaiChaitanya\n\nYes those channels are dead. We've moved to purely using this chat and github issues. ","username":"compleatang","ts":"2017-12-29T10:07:24.086Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=wo7bvtigLq3gddDo7","url":"https://chat.hyperledger.org/channel/burrow?msg=wo7bvtigLq3gddDo7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"No worries, I will set up a request. THanks","username":"tommling","ts":"2017-12-29T16:58:53.805Z"}
{"msg":"Hey @compleatang , I made an issue and a PR (issue #660)","username":"tommling","ts":"2017-12-29T18:33:04.657Z"}
{"msg":"It seems that this is more of a problem with v0.9.2 of tendermint, which in a sanity test I tried installing in isolation and I hit the same error","username":"tommling","ts":"2017-12-29T18:33:45.071Z"}
{"msg":"Could be. It was around then that they were moving around a bunch of pkgs IIRC. Silas has a tmint upgrade in the works AFAIK. ","username":"compleatang","ts":"2017-12-29T18:40:24.103Z"}
{"msg":"Thanks for the pr! ","username":"compleatang","ts":"2017-12-29T18:40:32.600Z"}
{"msg":"Yeah, i think its moot","username":"tommling","ts":"2017-12-29T18:43:26.469Z"}
{"msg":"I was about to propose a new tmint version would be the most elegant fix","username":"tommling","ts":"2017-12-29T18:43:40.718Z"}
{"msg":"Has joined the channel.","username":"SearchCommander","ts":"2017-12-29T20:14:20.784Z","type":"uj"}
{"msg":"Has joined the channel.","username":"elias_p","ts":"2017-12-30T10:29:19.283Z","type":"uj"}
{"msg":"Thanks @fabcan, @SaiChaitanya this is the place to come for Burrow help now.","username":"silasdavis","ts":"2017-12-30T17:42:10.027Z"}
{"msg":"@tommling I have upgraded the development branch of Burrow to Tendermint v0.12.0. I'll take another pass before release and upgrade us to at least v0.15.0","username":"silasdavis","ts":"2017-12-30T17:42:10.761Z"}
{"msg":"Has joined the channel.","username":"marc0o","ts":"2017-12-30T19:31:15.968Z","type":"uj"}
{"msg":"Awesome, I will try and build from the dev instead of master","username":"tommling","ts":"2018-01-01T15:07:44.612Z"}
{"msg":"thanks @silasdavis ","username":"tommling","ts":"2018-01-01T15:07:51.773Z"}
{"msg":"Happy newyears all!","username":"tommling","ts":"2018-01-01T15:07:57.447Z"}
{"msg":"@tommling you will be able to build master with `make install_vendor && make build` - we have been using glide for dependency management so our dependencies are not checked in","username":"silasdavis","ts":"2018-01-02T10:48:08.021Z"}
{"msg":"the development branch I am referring to is 'hypermarmot' not 'develop', for now I would recommend sticking with master","username":"silasdavis","ts":"2018-01-02T10:48:32.700Z"}
{"msg":"Has joined the channel.","username":"Rishabh-Sharma","ts":"2018-01-07T06:02:59.035Z","type":"uj"}
{"msg":"=]","username":"tommling","ts":"2018-01-09T16:08:36.160Z"}
{"msg":"Has joined the channel.","username":"KurtRudolph","ts":"2018-01-09T23:51:19.580Z","type":"uj"}
{"msg":"Has joined the channel.","username":"analog76","ts":"2018-01-16T08:46:15.140Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nicholas","ts":"2018-01-17T16:49:14.557Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bigmoby","ts":"2018-01-17T17:06:47.444Z","type":"uj"}
{"msg":"Has joined the channel.","username":"erikpupo","ts":"2018-01-17T23:22:05.993Z","type":"uj"}
{"msg":"Has joined the channel.","username":"williamremor","ts":"2018-01-18T04:03:50.115Z","type":"uj"}
{"msg":"Hey @silasdavis, was there ever an effort to integrate burrow chains in trufffle environments? I thought way back when Monax was Eris I saw something on the Truffle docs but its escaping me","username":"stingley","ts":"2018-01-18T14:38:13.322Z"}
{"msg":"Has joined the channel.","username":"B2BProgrammer","ts":"2018-01-19T09:38:31.217Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pouladzade","ts":"2018-01-22T06:54:05.150Z","type":"uj"}
{"msg":"Has joined the channel.","username":"prithveesh","ts":"2018-01-22T11:43:55.770Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bhavneesh","ts":"2018-01-22T17:16:12.327Z","type":"uj"}
{"msg":"Developers needed; https://paeanproject.org\nEmail me at bhavneesh@vasudacapitalmanagement.com","username":"bhavneesh","ts":"2018-01-22T17:16:15.550Z"}
{"msg":"Has joined the channel.","username":"Ishee","ts":"2018-01-23T10:30:47.475Z","type":"uj"}
{"msg":"Can we use hyperledger and Ethereum together?","username":"Ishee","ts":"2018-01-23T10:30:50.338Z"}
{"msg":"Has joined the channel.","username":"fedealconada","ts":"2018-01-23T18:40:15.384Z","type":"uj"}
{"msg":"HI all, I'm trying to install Burrow but I'm gettin the error mentioned in PR (issue #660). I've already checkout out that branch and tried `glide install` it runs okay. But now, I'm having problems again related to`go-clist` when i run `go install` inside `cmd/burrow/` directory...  Any ideas?","username":"fedealconada","ts":"2018-01-23T18:54:03.659Z"}
{"msg":"bhavneesh","username":"silasdavis","ts":"2018-01-23T19:22:00.708Z","type":"user-muted"}
{"msg":"User <em>User_1</em> removed by <em>silasdavis</em>.","username":"silasdavis","ts":"2018-01-23T19:22:04.996Z","type":"ru"}
{"msg":"Has joined the channel.","username":"mohit.sharma","ts":"2018-01-24T10:15:08.563Z","type":"uj"}
{"msg":"Hi All, I am unable to install hyperledger burrow on my ubuntu 16.04 machine, please help?\nI followed the instruction given in the official site but it didn't worked!!","username":"mohit.sharma","ts":"2018-01-24T10:18:54.126Z"}
{"msg":"","username":"mohit.sharma","ts":"2018-01-24T10:19:23.856Z","attachments":[{"type":"file","title":"errorMessage.png","title_link":"/file-upload/k297TctL3drRBTbR4/errorMessage.png","image_url":"/file-upload/k297TctL3drRBTbR4/errorMessage.png","image_type":"image/png","image_size":631940,"url":"/file-upload/k297TctL3drRBTbR4/errorMessage.png","remote":false,"fileId":"k297TctL3drRBTbR4","fileName":"errorMessage.png"}]}
{"msg":"@fedealconada, @mohit.sharma, @tommling was good enough to report and make a PR for this bug - there are a couple of issues with it, but I'll take the time now to make a hotfix","username":"silasdavis","ts":"2018-01-24T11:26:32.988Z"}
{"msg":"so, what can I do then? there is no solution at the moment?","username":"fedealconada","ts":"2018-01-24T11:51:16.764Z"}
{"msg":"i'll check your new PR @silasdavis :)","username":"fedealconada","ts":"2018-01-24T12:02:59.116Z"}
{"msg":"Just getting tests passing... but this fixes the issue: https://github.com/hyperledger/burrow/pull/672","username":"silasdavis","ts":"2018-01-24T12:07:47.486Z"}
{"msg":"bit of a WTF from our friends at Tendermint who have broken their own released build by permanently deleting a repository, which didn't need to happen","username":"silasdavis","ts":"2018-01-24T12:08:13.695Z"}
{"msg":"bit of a WTF from our friends at Tendermint who have broken one of their own previous releases by permanently deleting a repository, which didn't need to happen","username":"silasdavis","ts":"2018-01-24T12:08:13.695Z"}
{"msg":"but c'est la vie","username":"silasdavis","ts":"2018-01-24T12:08:18.187Z"}
{"msg":"This won't be an issue going forward as we are vendoring deps as I mention in that hotfix PR","username":"silasdavis","ts":"2018-01-24T12:09:03.375Z"}
{"msg":"great, i've just checked it out, but i'm getting another error when doing `go install`","username":"fedealconada","ts":"2018-01-24T12:17:55.343Z"}
{"msg":"```\n../../vendor/golang.org/x/net/trace/trace.go:67:2: cannot find package \"context\" in any of:\n\t/home/fedealconada/go/src/github.com/hyperledger/burrow/vendor/context (vendor tree)\n\t/usr/lib/go-1.6/src/context (from $GOROOT)\n\t/home/fedealconada/go/src/context (from $GOPATH)\n```","username":"fedealconada","ts":"2018-01-24T12:18:02.323Z"}
{"msg":"That'll be your go version I think","username":"silasdavis","ts":"2018-01-24T12:30:33.158Z"}
{"msg":"You need >= go 1.7: https://golang.org/doc/go1.7","username":"silasdavis","ts":"2018-01-24T12:31:14.651Z"}
{"msg":"where context was moved to stdlib","username":"silasdavis","ts":"2018-01-24T12:31:24.019Z"}
{"msg":"thanks @silasdavis, it worked","username":"fedealconada","ts":"2018-01-24T19:25:59.163Z"}
{"msg":"i have a new question","username":"fedealconada","ts":"2018-01-24T19:27:39.206Z"}
{"msg":"_<path to chain directory>, where the chain directory needs to contain the configuration, genesis file, and private validator file as generated by monax chains make_","username":"fedealconada","ts":"2018-01-24T19:27:51.741Z"}
{"msg":"is there any example for that?","username":"fedealconada","ts":"2018-01-24T19:28:06.208Z"}
{"msg":"Has joined the channel.","username":"AlanDickman","ts":"2018-01-24T19:44:17.062Z","type":"uj"}
{"msg":"Has joined the channel.","username":"reyaansh","ts":"2018-01-25T11:55:23.744Z","type":"uj"}
{"msg":"is it possible to have a light weight client node? Because if I want to develop a dapp, I would like to interact with the light node...","username":"fedealconada","ts":"2018-01-26T12:02:01.424Z"}
{"msg":"This is something I would like to provide. Tendermint has a proof-of-concept for this here: https://github.com/tendermint/tendermint/tree/master/lite ","username":"silasdavis","ts":"2018-01-26T12:40:19.081Z"}
{"msg":"however we use Tendermint in a more tightly bound way than via its RPC","username":"silasdavis","ts":"2018-01-26T12:40:38.112Z"}
{"msg":"What we generally do now is talk to a trusted full node over our RPCs - so your dapp does not need to run a co-located instance (though I would like to move to this for signing purposes)","username":"silasdavis","ts":"2018-01-26T12:44:59.247Z"}
{"msg":"I would consider a proper light client as an improvement to this with the possibility of fetching proofs from multiple validators","username":"silasdavis","ts":"2018-01-26T12:45:42.461Z"}
{"msg":"the light client would act as a special type of cryptographically verifying RPC proxy - I think this might fit into the broader arc of work on the RPC","username":"silasdavis","ts":"2018-01-26T12:46:35.528Z"}
{"msg":"Has joined the channel.","username":"vinayak mahajan","ts":"2018-01-29T06:20:48.198Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tasmiya_n","ts":"2018-01-29T12:28:30.436Z","type":"uj"}
{"msg":"@silasdavis thanks! :)","username":"fedealconada","ts":"2018-01-30T15:56:02.631Z"}
{"msg":"could any body suggest any link or site from where i can start hyperledger burrow from the scratch?? I am finding it bit complex to start !","username":"mohit.sharma","ts":"2018-01-31T05:58:49.210Z"}
{"msg":"Has joined the channel.","username":"ranjan008","ts":"2018-01-31T06:17:12.169Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dilipsam","ts":"2018-01-31T16:18:07.811Z","type":"uj"}
{"msg":"Has joined the channel.","username":"LeDang","ts":"2018-02-01T04:00:10.077Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JitendraKumar","ts":"2018-02-01T12:08:36.173Z","type":"uj"}
{"msg":"Hii\ncould anybody please help, I am getting the following error \n*Burrow error: Call of method \"toJSON\" with parameters 'server' responded with \"Method not found: burrow.toJSON\"*\nwhile doing this\n\n`var burrowFactory = require('@monax/legacy-db');\nvar burrow = burrowFactory.createInstance('http://172.17.0.3:1337/rpc');\n\nconsole.log(burrow);`","username":"mohit.sharma","ts":"2018-02-02T09:29:39.227Z"}
{"msg":"Has joined the channel.","username":"steveruckdashel","ts":"2018-02-02T19:52:23.554Z","type":"uj"}
{"msg":"Has joined the channel.","username":"fredrbl","ts":"2018-02-03T18:30:59.991Z","type":"uj"}
{"msg":"Hey! I am building solidity smart contracts for buying and storing energy, and I am planning to put them on the hyperledger Burrow. However, I wonder on the scalability of Burrow. How many transactions could Burrow process every second? Assuming an average system with normal bandwidth between nodes, ca. 100 nodes and that a transaction use 21 000 gas.. Do anyone have an estimation? cheers","username":"fredrbl","ts":"2018-02-03T18:34:01.877Z"}
{"msg":"Has joined the channel.","username":"SamuelDare","ts":"2018-02-04T13:12:30.234Z","type":"uj"}
{"msg":"Hi","username":"SamuelDare","ts":"2018-02-04T13:14:39.971Z"}
{"msg":"Trying to install this on my macosx","username":"SamuelDare","ts":"2018-02-04T13:14:47.609Z"}
{"msg":"```\nPros-MacBook-Pro:Code Santi$ go get -d github.com/hyperledger/burrow\ncan't load package: package github.com/hyperledger/burrow: no Go files in /Users/pro/go/src/github.com/hyperledger/burrow\n```","username":"SamuelDare","ts":"2018-02-04T13:15:05.326Z"}
{"msg":"Has joined the channel.","username":"ajithjosek","ts":"2018-02-04T20:20:09.932Z","type":"uj"}
{"msg":"Has joined the channel.","username":"eugene-babichenko","ts":"2018-02-05T12:52:55.100Z","type":"uj"}
{"msg":"Hi, I am thinking of using Burrow in my project. One thing I am interested in: does Burrow support `block.coinbase` (I need to know the current validator) and if not, when is it going to be supported?","username":"eugene-babichenko","ts":"2018-02-05T12:54:25.033Z"}
{"msg":"@mohit.sharma we are in the process of refactoring some documentation. The best resource is still: https://monax.io/docs/ but there may be some out-of-date details","username":"silasdavis","ts":"2018-02-05T13:16:41.402Z"}
{"msg":"@mohit.sharma that looks like a docker address, if you are working locally try `localhost:1337` that port should be published to host","username":"silasdavis","ts":"2018-02-05T13:27:41.164Z"}
{"msg":"@silasdavis I am able to communicate with myChain through Monax CLI but unable to connect through nodejs module, can you help me out in that?? ","username":"mohit.sharma","ts":"2018-02-05T13:30:50.173Z"}
{"msg":"@fredrbl I couldn't give you a good estimate now, other than to say it would almost certainly be network-request bound - it might be worth asking tendermint if they have data for 100 node networks - our scaling will be similar, though with that gas usage (note our gas schedule is a little different to public ethereum - mostly because we don't need to care about it much and it hasn't changed in a while) you might start to see some computational bound. These numbers are something I would be interested in myself, and when I get round to load testing our own networks will have. If you would like to run some benchmarks I can find somewhere to take them as contributions and build on in the future.","username":"silasdavis","ts":"2018-02-05T13:33:27.122Z"}
{"msg":"@mohit.sharma  they are different RPCs","username":"silasdavis","ts":"2018-02-05T13:33:52.548Z"}
{"msg":"which version of Burrow are you using?","username":"silasdavis","ts":"2018-02-05T13:33:58.806Z"}
{"msg":"@silasdavis version 0.17.1","username":"mohit.sharma","ts":"2018-02-05T13:35:30.037Z"}
{"msg":"@silasdavis  specifically i want to deply contract on burrow and also communicate with the contract as well as with the burrow server, I try to use @monax/legacy-db and @monax/legacy-contracts, but get stuck over the connection url part","username":"mohit.sharma","ts":"2018-02-05T13:37:46.719Z"}
{"msg":"@eugene-babichenko as in `block.miner` in https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getblockbyhash ?","username":"silasdavis","ts":"2018-02-05T13:37:49.744Z"}
{"msg":"If so, then I think 'no and never' is the direct answer because our consensus mechanism does not work on the basis of providing block rewards to a miner. We use the proof-of-authority/proof-of-stage round robin Tendermint consensus engine","username":"silasdavis","ts":"2018-02-05T13:39:17.904Z"}
{"msg":"there is a block proposer for each round (who's turn it is to propose), but I would need to understand what you are trying to achieve before recommending that","username":"silasdavis","ts":"2018-02-05T13:41:02.125Z"}
{"msg":"@mohit.sharma have you tried using localhost?","username":"silasdavis","ts":"2018-02-05T13:41:20.794Z"}
{"msg":"`curl localhost:1337/network` as a smoke test","username":"silasdavis","ts":"2018-02-05T13:41:47.513Z"}
{"msg":"yes! I tried..","username":"mohit.sharma","ts":"2018-02-05T13:41:52.348Z"}
{"msg":"and you launched using docker?","username":"silasdavis","ts":"2018-02-05T13:42:01.025Z"}
{"msg":"can you send `docker ps` output ","username":"silasdavis","ts":"2018-02-05T13:42:24.704Z"}
{"msg":"","username":"mohit.sharma","ts":"2018-02-05T13:45:14.561Z","attachments":[{"type":"file","title":"scrrenshot.png","title_link":"/file-upload/gHz4YKfKLLRj8ZH8T/scrrenshot.png","image_url":"/file-upload/gHz4YKfKLLRj8ZH8T/scrrenshot.png","image_type":"image/png","image_size":428879,"url":"/file-upload/gHz4YKfKLLRj8ZH8T/scrrenshot.png","remote":false,"fileId":"gHz4YKfKLLRj8ZH8T","fileName":"scrrenshot.png"}]}
{"msg":"@silasdavis I just need to get the address of the validator who signed the last block.","username":"eugene-babichenko","ts":"2018-02-05T13:49:38.402Z"}
{"msg":"ordinarily all validators sign every block - what are you trying to use this information for?","username":"silasdavis","ts":"2018-02-05T13:50:33.185Z"}
{"msg":"@mohit.sharma looks like you are able to contact the V0 (JS) rpc using localhost. I'm sorry but I don't have time right now to help you debug your issue further. I want to provide a more up-to-date hello world/node test case. I have just re-uploaded an out-of-date sample repository here: https://github.com/silasdavis/hello-doug. I'm afraid a lot of it is out-of-date so you'll have to read the code to work out how to update it.","username":"silasdavis","ts":"2018-02-05T13:53:05.072Z"}
{"msg":"the error you are getting looks like you don't have a proper private key set but rather the string `privKey` ... ?","username":"silasdavis","ts":"2018-02-05T13:54:00.274Z"}
{"msg":"I will post a hello world that works against our current libs in the next few days","username":"silasdavis","ts":"2018-02-05T13:54:19.494Z"}
{"msg":"Has joined the channel.","username":"gaurav94","ts":"2018-02-05T15:12:58.045Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ohhopi","ts":"2018-02-05T15:58:15.726Z","type":"uj"}
{"msg":"Hi there, \nAre there any simple means to benchmark burrow/monax performance tx/sec-wise ?","username":"ohhopi","ts":"2018-02-05T15:59:08.930Z"}
{"msg":"Has joined the channel.","username":"romankrav4","ts":"2018-02-05T18:39:20.844Z","type":"uj"}
{"msg":"@silasdavis ohk :)","username":"mohit.sharma","ts":"2018-02-06T04:55:39.171Z"}
{"msg":"'Burrow error:  Call of method \"toJSON\" with parameters 'server' responded with \"\"'\n\nanybody knows how to rectify this error,I am getting while connecting nodejs to monax burrow server","username":"mohit.sharma","ts":"2018-02-06T06:07:36.872Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=xcinJrc8hGfBGZC6A) @silasdavis Thanks for a good answer! Ok, I will ask Tendermint about this, and hopefully they have an estimation. Will post the answer here in that case!","username":"fredrbl","ts":"2018-02-06T22:29:21.345Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=xcinJrc8hGfBGZC6A","url":"https://chat.hyperledger.org/channel/burrow?msg=xcinJrc8hGfBGZC6A","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=xcinJrc8hGfBGZC6A) @silasdavis Thanks for a good answer! Ok, I will ask Tendermint about this, and hopefully they have an estimation. Will post the answer here","username":"fredrbl","ts":"2018-02-06T22:29:21.345Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=xcinJrc8hGfBGZC6A","url":"https://chat.hyperledger.org/channel/burrow?msg=xcinJrc8hGfBGZC6A","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=5ifyR3KdwBDQbZBzG) @fredrbl We'd absolutely love community assistance in providing such a benchmarking system. it should not be too difficult to construct and we'd be happy to pull it into the CI/CD system to allow everyone to track performance based on usage patterns like you suggest. This is something the entire ethereum community could leverage to provide strong comparison across permissioned EVM chain designs.","username":"compleatang","ts":"2018-02-07T13:34:50.917Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=5ifyR3KdwBDQbZBzG","url":"https://chat.hyperledger.org/channel/burrow?msg=5ifyR3KdwBDQbZBzG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"eccheung4","ts":"2018-02-07T15:25:43.028Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zramsay","ts":"2018-02-08T18:11:04.794Z","type":"uj"}
{"msg":"Has left the channel.","username":"dharuq","ts":"2018-02-09T10:31:51.431Z","type":"ul"}
{"msg":"how to create new participant account in existing burrow chain???","username":"mohit.sharma","ts":"2018-02-12T06:52:26.186Z"}
{"msg":"When executing burrow cmd using monax cli getting  Docker: {\"message\":\"OCI runtime create failed: container_linux.go:296: starting container process caused \\\"exec: \\\\\\\"Accounts.getAccount\\\\\\\": executable file not found in $PATH\\\": unknown\"}\n","username":"gaurav94","ts":"2018-02-12T07:04:52.978Z"}
{"msg":"","username":"gaurav94","ts":"2018-02-12T07:06:04.478Z","attachments":[{"type":"file","title":"docker.png","title_link":"/file-upload/jpGDewDwnPAeYhpw4/docker.png","image_url":"/file-upload/jpGDewDwnPAeYhpw4/docker.png","image_type":"image/png","image_size":126075,"url":"/file-upload/jpGDewDwnPAeYhpw4/docker.png","remote":false,"fileId":"jpGDewDwnPAeYhpw4","fileName":"docker.png"}]}
{"msg":"Has joined the channel.","username":"kakuzu","ts":"2018-02-12T15:18:59.414Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AnthonyHall 1","ts":"2018-02-12T16:47:44.823Z","type":"uj"}
{"msg":"Hello all, I am new and just started building my first blockchain this past week using hyperledger. This blockchain framework satisfies most of my needs for the appliation I want to develop. The only piece I see lacking from what I need is a cryptocurrency component that would allow for value exchange when queries are executed (e.g. I want to transfer value from the participant that is querying the data to the person that owns the data.) Does anyone have suggestions about what I can do to or use to make this happen while still using Hyperledger? ","username":"AnthonyHall 1","ts":"2018-02-12T16:52:42.970Z"}
{"msg":"can i just install burrow do i have to install monax.","username":"kakuzu","ts":"2018-02-12T19:07:53.496Z"}
{"msg":"how could we add new accounts using RPC endpoints using node js?","username":"gaurav94","ts":"2018-02-13T11:27:15.963Z"}
{"msg":"Any help will be appreciated ?","username":"gaurav94","ts":"2018-02-13T11:27:27.580Z"}
{"msg":"Has joined the channel.","username":"ragu","ts":"2018-02-14T05:23:43.337Z","type":"uj"}
{"msg":"Hi All,\nI am using git hub for hyperledger burrow installation.I am getting error(Fatal error reading configuration from /opt/gopkg/src/github.com/hyperledger/burrow/config.toml) when i use burrow serve command.Any body know what is the solution of this problem.And how to move it to further process?.\nI am using Go version 1.8.3 for this process.","username":"ragu","ts":"2018-02-14T05:33:59.817Z"}
{"msg":"Hi All,\nI am using git hub for hyperledger burrow installation.I am getting error(Fatal error reading configuration from /opt/gopkg/src/github.com/hyperledger/burrow/config.toml) when i use burrow serve command.Any body know what is the solution of this issue.And how to move it to further process?.\nI am using Go version 1.8.3 for this process.","username":"ragu","ts":"2018-02-14T05:33:59.817Z"}
{"msg":"@ragu please see the Makefile","username":"silasdavis","ts":"2018-02-14T11:27:20.209Z"}
{"msg":"@gaurav94 you need to use `Send` or `SendAndHold` on the 1337 RPC to the target account, then you will need to use a `PermissionTx` or the permissions snatives. I'm afraid I do have an example to hand and I do not have the time over the next 2 weeks to create one. However we are in the process of getting some help to revive some old tutorials that show you how to do this with the JS libs.","username":"silasdavis","ts":"2018-02-14T11:35:47.173Z"}
{"msg":"Here is an example how to Send with monax pkgs do: https://github.com/monax/monax/blob/master/tests/jobs_fixtures/app00-basic_functionality_jobs/epm.yaml","username":"silasdavis","ts":"2018-02-14T11:36:01.584Z"}
{"msg":"here is an example of setting permissions with monax pkgs do: https://github.com/monax/monax/blob/master/tests/jobs_fixtures/app03-basic_and_advanced_permission_txs_and_queries/epm.yaml ","username":"silasdavis","ts":"2018-02-14T11:36:21.377Z"}
{"msg":"here is the JS lib for sending: https://github.com/monax/legacy-db.js/blob/master/lib/transactions.js#L147-L150","username":"silasdavis","ts":"2018-02-14T11:36:52.641Z"}
{"msg":"Here is the virtual permission contract you can call like a regular EVM contract (from burrow's `make snatives`):\n```\npragma solidity >=0.0.0;\n\n/**\n* Interface for managing Secure Native authorizations.\n* @dev This interface describes the functions exposed by the SNative permissions layer in burrow.\n* @dev These functions can be accessed as if this contract were deployed at a special address (0x0A758FEB535243577C1A79AE55BED8CA03E226EC).\n* @dev This special address is defined as the last 20 bytes of the sha3 hash of the the contract name.\n* @dev To instantiate the contract use:\n* @dev Permissions permissions = Permissions(address(sha3(\"Permissions\")));\n*/\ncontract Permissions {\n    /**\n    * @notice Adds a role to an account\n    * @param _account account address\n    * @param _role role name\n    * @return result whether role was added\n    */\n    function addRole(address _account, bytes32 _role) constant returns (bool result);\n\n    /**\n    * @notice Removes a role from an account\n    * @param _account account address\n    * @param _role role name\n    * @return result whether role was removed\n    */\n    function removeRole(address _account, bytes32 _role) constant returns (bool result);\n\n    /**\n    * @notice Indicates whether an account has a role\n    * @param _account account address\n    * @param _role role name\n    * @return result whether account has role\n    */\n    function hasRole(address _account, bytes32 _role) constant returns (bool result);\n\n    /**\n    * @notice Sets the permission flags for an account. Makes them explicitly set (on or off).\n    * @param _account account address\n    * @param _permission the base permissions flags to set for the account\n    * @param _set whether to set or unset the permissions flags at the account level\n    * @return result the effective permissions flags on the account after the call\n    */\n    function setBase(address _account, uint64 _permission, bool _set) constant returns (uint64 result);\n\n    /**\n    * @notice Unsets the permissions flags for an account. Causes permissions being unset to fall through to global permissions.\n    * @param _account account address\n    * @param _permission the permissions flags to unset for the account\n    * @return result the effective permissions flags on the account after the call\n    */\n    function unsetBase(address _account, uint64 _permission) constant returns (uint64 result);\n\n    /**\n    * @notice Indicates whether an account has a subset of permissions set\n    * @param _account account address\n    * @param _permission the permissions flags (mask) to check whether enabled against base permissions for the account\n    * @return result whether account has the passed permissions flags set\n    */\n    function hasBase(address _account, uint64 _permission) constant returns (bool result);\n\n    /**\n    * @notice Sets the global (default) permissions flags for the entire chain\n    * @param _permission the permissions flags to set\n    * @param _set whether to set (or unset) the permissions flags\n    * @return result the global permissions flags after the call\n    */\n    function setGlobal(uint64 _permission, bool _set) constant returns (uint64 result);\n}\n\n```","username":"silasdavis","ts":"2018-02-14T11:38:37.384Z"}
{"msg":"So I'm afraid its self-service for now, but as I say we are working towards getting back some friendlier documentation - I am just resource constrained right now and have just finished moving a lot of code around invalidating some previous docs ","username":"silasdavis","ts":"2018-02-14T11:39:58.144Z"}
{"msg":"Has joined the channel.","username":"RiyazPanarwala","ts":"2018-02-14T12:13:37.274Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jetbasrawi","ts":"2018-02-14T13:39:23.003Z","type":"uj"}
{"msg":"not much is available for docs check the monax.io","username":"kakuzu","ts":"2018-02-14T14:53:27.987Z"}
{"msg":"@silasdavis Thank you for your reply.. What is the use of Makefile?","username":"ragu","ts":"2018-02-15T05:15:05.925Z"}
{"msg":"@silasdavis Thank for your reply.. What is the use of Makefile?","username":"ragu","ts":"2018-02-15T05:15:05.925Z"}
{"msg":"@silasdavis Thanks for your reply.. What is the use of Makefile?","username":"ragu","ts":"2018-02-15T05:15:05.925Z"}
{"msg":"@silasdavis Thanks for your reply.. What is the use of Makefile?.What to do with that file?","username":"ragu","ts":"2018-02-15T05:15:05.925Z"}
{"msg":"the makefile has targets for compiling burrow","username":"zramsay","ts":"2018-02-15T14:46:29.577Z"}
{"msg":"Hey guys, question. Can the container `monax/monax` [ https://quay.io/repository/monax/monax?tab=tags ] be used to create monax configuration on Windows using the Docker Toolbox? If so, how do I run the image locally? Because I can't seem to get it to boot.","username":"RobertDiebels","ts":"2018-02-15T16:36:45.548Z"}
{"msg":"My goal is to create a  Kubernetes cluster for Hyperledger Burrow. I'd rather not use the container to create the necessary configuration inside the cluster though. As running in Kubernets requires changes to the seed-ips and the moniker and I'd rather change the configuration off-cluster.","username":"RobertDiebels","ts":"2018-02-15T16:39:43.764Z"}
{"msg":"Hi All,\nI need to create smart contract for my learning process.I have installed monax platform for that process.I don't have clear idea about  how token transactions happens in monax ?,What is the use of .yaml,validators files? and How these files works?","username":"ragu","ts":"2018-02-16T06:30:28.232Z"}
{"msg":"Hi All,\nI need to create smart contract for my learning process.I have installed monax platform for that process.I don't have clear idea about  how token transactions happens in monax ?,What is the use of .yaml,validators files? and How these files are working?","username":"ragu","ts":"2018-02-16T06:30:28.232Z"}
{"msg":"Has joined the channel.","username":"mtgran","ts":"2018-02-16T13:52:01.591Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=EwdM5oQsPyXd5XaJz) For those interested. I managed to answer my own question. If you're on Windows and you want to generate configuration for Burrow. Simply do the following.  Install Docker Toolbox (or native), afterwards run the following commands: ```docker run --rm -v /windows/hostpath:/root/.monax -it --privileged --name monax-cli -d quay.io/monax/monax:0.18.0-dind /bin/bash\ndocker exec monax-cli monax init --yes\ndocker exec monax-cli monax chains make kubechain --account-types=Full:1,Validator:3 --unsafe```","username":"RobertDiebels","ts":"2018-02-16T14:02:42.092Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=EwdM5oQsPyXd5XaJz","url":"https://chat.hyperledger.org/channel/burrow?msg=EwdM5oQsPyXd5XaJz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"dv29","ts":"2018-02-17T08:06:09.934Z","type":"uj"}
{"msg":"Hi All,","username":"pouladzade","ts":"2018-02-17T13:55:38.657Z"}
{"msg":"with snak you will have these facilities:\n\n    Easily install and uninstall hyperledger burrow.\n    Built-in smart contract compilation, linking, deployment.\n    Having interaction with blockchain(Burrow) directly via linux terminal.\n    Automated contract testing with Mocha and Chai(will be added in future).\n    Network management for deploying to many public & private networks.\n    Interactive console for direct contract communication(will be added in future).\n","username":"pouladzade","ts":"2018-02-17T13:55:58.093Z"}
{"msg":"https://www.npmjs.com/package/snak","username":"pouladzade","ts":"2018-02-17T13:56:13.525Z"}
{"msg":"https://github.com/pouladzade/snack","username":"pouladzade","ts":"2018-02-17T13:56:33.418Z"}
{"msg":"All contributions are welcome: use-cases, documentation, code, patches, bug reports, feature requests, etc.","username":"pouladzade","ts":"2018-02-17T13:57:02.781Z"}
{"msg":"@pouladzade does this work on windows?","username":"RobertDiebels","ts":"2018-02-17T17:28:30.871Z"}
{"msg":"@RobertDiebels No sorry, At least not yet","username":"pouladzade","ts":"2018-02-17T17:28:59.992Z"}
{"msg":"because it uses bash script for installing and uninstalling the burrow","username":"pouladzade","ts":"2018-02-17T17:29:29.820Z"}
{"msg":"But easily you can modify it to support windows, please feel free to fork it or send any pull request","username":"pouladzade","ts":"2018-02-17T17:31:20.210Z"}
{"msg":"Ah ok. I'm working on something similar. Also with NodeJS. However I'm working on a tool to convert the configuration to a Kubernetes Cluster.","username":"RobertDiebels","ts":"2018-02-17T17:33:09.435Z"}
{"msg":"Ah ok. I'm working on something similar. Also with NodeJS. However I'm working on a tool to convert blockchain configuration to a Kubernetes Cluster.","username":"RobertDiebels","ts":"2018-02-17T17:33:09.435Z"}
{"msg":"I've already got most of it functioning. Just need to make sure the nodes can find each other.","username":"RobertDiebels","ts":"2018-02-17T17:33:36.489Z"}
{"msg":"https://www.npmjs.com/package/kubechain <- the package if you're interested","username":"RobertDiebels","ts":"2018-02-17T17:34:05.906Z"}
{"msg":"@RobertDiebels Actually the most useful parts are facilitating the compiling, deploying and testing(not ready yet) smart contracts over the burrow","username":"pouladzade","ts":"2018-02-17T17:39:41.185Z"}
{"msg":"Aaaah ok","username":"RobertDiebels","ts":"2018-02-17T17:40:09.145Z"}
{"msg":"So the Solidity thing?","username":"RobertDiebels","ts":"2018-02-17T17:40:14.811Z"}
{"msg":"I haven't looked at Burrow's full capabilities yet","username":"RobertDiebels","ts":"2018-02-17T17:40:44.623Z"}
{"msg":"the other functions like installing, uninstalling, sending transactions, ... are as a utility","username":"pouladzade","ts":"2018-02-17T17:40:48.346Z"}
{"msg":"So I don't know to much about it. Seems cool :D","username":"RobertDiebels","ts":"2018-02-17T17:40:59.278Z"}
{"msg":"@RobertDiebels  yes solidity","username":"pouladzade","ts":"2018-02-17T17:41:03.100Z"}
{"msg":"@gaurav94  I think there is no issue","username":"pouladzade","ts":"2018-02-17T17:41:03.100Z"}
{"msg":"I'm just focussing on getting a local test network running via kubernetes.","username":"RobertDiebels","ts":"2018-02-17T17:41:41.329Z"}
{"msg":"actually I aiming to provide something like Truffle with extra capabilities but it's not ready yet","username":"pouladzade","ts":"2018-02-17T17:42:06.076Z"}
{"msg":"I'm unfamiliar with Truffle as well haha :P","username":"RobertDiebels","ts":"2018-02-17T17:43:00.037Z"}
{"msg":"for now it can compile, migrate, send transaction, install Burrow, uninstall Burrow","username":"pouladzade","ts":"2018-02-17T17:43:02.578Z"}
{"msg":"@RobertDiebels :grin: ","username":"pouladzade","ts":"2018-02-17T17:43:46.954Z"}
{"msg":"Nice :D","username":"RobertDiebels","ts":"2018-02-17T17:44:30.441Z"}
{"msg":"Thanks ","username":"pouladzade","ts":"2018-02-17T17:44:40.689Z"}
{"msg":"I'll star the repo.","username":"RobertDiebels","ts":"2018-02-17T17:45:34.982Z"}
{"msg":"Will check back if there's windows support :D","username":"RobertDiebels","ts":"2018-02-17T17:45:42.950Z"}
{"msg":"Thank you so much","username":"pouladzade","ts":"2018-02-17T17:47:23.534Z"}
{"msg":"I will work on that if I find more free time","username":"pouladzade","ts":"2018-02-17T17:48:33.714Z"}
{"msg":"We have some kubernetes scripts that I believe are in kubernetes incubation. It would be great to join all this work together and there are areas where changes to core burrow can help and I am keen to make. ","username":"silasdavis","ts":"2018-02-17T21:11:39.962Z"}
{"msg":"@silasdavis I checked them out [  ]. I've got a question on precedence of configuration. If I assign values to the environment variables \"CHAIN_NAME\", \"CHAIN_NODE_NUMBER\" and \"CHAIN_SEEDS\" via kubernetes. As well as adding a config.toml with a configMap. Which values will be used?","username":"RobertDiebels","ts":"2018-02-18T13:10:24.134Z"}
{"msg":"@silasdavis I checked them out [ https://github.com/hyperledger/burrow/blob/d7e7449db97230c361458dbba4377f9270e5c295/deployment/kubernetes/node000-deploy.yaml ]. I've got a question on precedence of configuration. If I assign values to the environment variables \"CHAIN_NAME\", \"CHAIN_NODE_NUMBER\" and \"CHAIN_SEEDS\" via kubernetes. As well as adding a config.toml with a configMap. Which values will be used?","username":"RobertDiebels","ts":"2018-02-18T13:10:24.134Z"}
{"msg":"Hi @silasdavis  I am able to create new account using rpc endpoint using below code:\n\nvar burrowFactory = require('@monax/legacy-db');\nlet chainUrl = 'http://localhost:1337/rpc';\nlet accounts = require('./accounts.json');\nvar burrow = burrowFactory.createInstance(chainUrl);\nvar myAccount = burrow.accounts();\nmyAccount.genPrivAccount(accounts.node1_full_000, function(error, result){\nif (!error){\nconsole.log('result = ', JSON.stringify(result,null,4));\n}\nelse{\nconsole.log(error);\n}\n});\n\nI am able to get the address along with pubKey and PrivKey but I cannot see this account is added in blockchain when I run the below code:\n\nfunction showAccounts(error,data){\nif(data){\nvar str = JSON.stringify(data,null,4);\nconsole.log(str);\n} \nelse{\nconsole.log(error); \n}\n}\n\nvar loadAccounts = ()=>{\nvar burrow = burrowDbFactory.createInstance(\"http://localhost:1337/rpc\");\nvar accounts = burrow.accounts();\naccounts.getAccounts(showAccounts);\n}\n\nNeither any file in burrow chain are reflected.\nI was going through issue list and found the same issue on github: https://github.com/hyperledger/burrow/issues/227\nAs our team is looking for this solution earliest.\nAny help would be appreciated. Thanks in advance.  \n","username":"gaurav94","ts":"2018-02-19T06:10:16.063Z"}
{"msg":"","username":"pouladzade","ts":"2018-02-19T08:09:57.598Z","attachments":[{"type":"file","title":"Clipboard - February 19, 2018 4:09 PM","title_link":"/file-upload/xpwTsSkBmcuwiXDn6/Clipboard - February 19, 2018 4:09 PM","image_url":"/file-upload/xpwTsSkBmcuwiXDn6/Clipboard - February 19, 2018 4:09 PM","image_type":"image/png","image_size":64243,"url":"/file-upload/xpwTsSkBmcuwiXDn6/Clipboard - February 19, 2018 4:09 PM","remote":false,"fileId":"xpwTsSkBmcuwiXDn6","fileName":"Clipboard - February 19, 2018 4:09 PM"}]}
{"msg":"@gaurav94  I think there is no issue with this function","username":"pouladzade","ts":"2018-02-19T08:11:24.276Z"}
{"msg":"@gaurav94  this function only creates the key pair based on the Ed25519 and does not have any effect on the blockchain ","username":"pouladzade","ts":"2018-02-19T08:11:30.630Z"}
{"msg":"So it would be helpful for me if any one suggest me the method to create a account using rpc endpoint using node js?","username":"gaurav94","ts":"2018-02-19T08:13:16.890Z"}
{"msg":"@gaurav94  I think you need to do this : Pipe.addAccount(accountData)","username":"pouladzade","ts":"2018-02-19T08:14:12.801Z"}
{"msg":"@gaurav94  it's in legacy-contracts.js  https://github.com/monax/legacy-contracts.js","username":"pouladzade","ts":"2018-02-19T08:14:56.163Z"}
{"msg":"thanks @pouladzade ..:)  I will try for it n get back :)","username":"gaurav94","ts":"2018-02-19T08:17:31.296Z"}
{"msg":"@gaurav94  you are welcome","username":"pouladzade","ts":"2018-02-19T08:18:06.114Z"}
{"msg":"@pouladzade  I appreciate your help on this, but Pipe.addAccount(accountData) adds account temporary in local catch of DevPipe object but doesn't reflect in blockchain. ","username":"gaurav94","ts":"2018-02-19T08:57:40.596Z"}
{"msg":"@gaurav94 I see, actually I am going to implement create account for Burrow, Whenever I get it done I will get back to u","username":"pouladzade","ts":"2018-02-19T09:00:12.922Z"}
{"msg":"o @pouladzade  thanks :)","username":"gaurav94","ts":"2018-02-19T11:16:00.462Z"}
{"msg":"Hey guys I thought I'd update you on my progress with Kubernetes.","username":"RobertDiebels","ts":"2018-02-19T18:26:10.496Z"}
{"msg":"I was struggling to get things running for quite some time. Apparently Tendermint has a bit of code that forces `seeds` to be actual IP addresses.","username":"RobertDiebels","ts":"2018-02-19T18:27:34.750Z"}
{"msg":"I was struggling to get things running for quite some time. Apparently Tendermint has a [bit of code that forces](https://github.com/tendermint/tendermint/blob/a1a5cb59a70e3075dbfc58614d2f1b83d5ad2a8b/p2p/netaddress.go) `seeds` to be actual IP addresses.","username":"RobertDiebels","ts":"2018-02-19T18:27:34.750Z"}
{"msg":"I tried using DNS to tell Burrow where to find other validators as this is much easier. Pod IP's are dynamic and they can change at any time.","username":"RobertDiebels","ts":"2018-02-19T18:29:21.493Z"}
{"msg":"It took me a while to find out that Tendermint doesn't do a lookup for dns.","username":"RobertDiebels","ts":"2018-02-19T18:29:52.777Z"}
{"msg":"As the error message is really cryptic.","username":"RobertDiebels","ts":"2018-02-19T18:30:04.919Z"}
{"msg":"This was the message: ` Error in address kubechain-full-000.burrow.burrow.svc.cluster.local:46656: lookup kubechain-full-000.burrow.burrow.svc.cluster.local: no such host`","username":"RobertDiebels","ts":"2018-02-19T18:30:39.120Z"}
{"msg":"The address/name is fine. It just isn't an IP address.","username":"RobertDiebels","ts":"2018-02-19T18:32:28.086Z"}
{"msg":"Right now I'm thinking of writing an init-container which does a lookup for the DNS-names. Then replaces them with IP-addresses in the config.toml.","username":"RobertDiebels","ts":"2018-02-19T18:34:23.215Z"}
{"msg":"It's a bit hacky though and I'd rather be able to just use dns-names.","username":"RobertDiebels","ts":"2018-02-19T18:34:45.398Z"}
{"msg":"I just spotted a mistake. They also do a LookupIP to get an IPaddress for a host.","username":"RobertDiebels","ts":"2018-02-19T18:43:53.271Z"}
{"msg":"Ok I think I found the issue. But I would like to check with either @pouladzade or @silasdavis . Am I correct in assuming that if Burrow cannot launch Tendermint for whatever reason, burrow stops running?","username":"RobertDiebels","ts":"2018-02-19T19:22:08.728Z"}
{"msg":"If so, my problem is due to that.","username":"RobertDiebels","ts":"2018-02-19T19:22:47.784Z"}
{"msg":"Since Kubernetes expects a container to keep on running. If it does not it restarts a pod. In this case I have 4 pods and each pod is added as a seed via its DNS name within the cluster.","username":"RobertDiebels","ts":"2018-02-19T19:30:02.208Z"}
{"msg":"My assumption here is that all seeds need to be up at the same time for the lookup to succeed. So my 4 pods need to be up at the same time. Which they are not.","username":"RobertDiebels","ts":"2018-02-19T19:31:29.279Z"}
{"msg":"What I'm seeing is this. \n1. First pod goes up.\n2. Second pod goes up.\n3. First pod can resolve the second pod.\n4. First pod cannot resolve the third pod.\n5. First pod crashes and restarts.\n6. Other pods come up.\n7. They also crash because the first pod is busy restarting.\n8. Now we are in a loop where the pods keep restarting and trying to find each other.","username":"RobertDiebels","ts":"2018-02-19T19:34:20.999Z"}
{"msg":"So my request would be to not stop the application if it cannot find all seeds. Instead it should retry and only stop retrying after X amount of time.","username":"RobertDiebels","ts":"2018-02-19T19:35:33.675Z"}
{"msg":"Hi again, I created [a feature request](https://github.com/tendermint/tendermint/issues/1230) in the Tendermint repository. I believe this is something that should be solved by them since Burrow doesn't and shouldn't know what caused Tendermint to crash.","username":"RobertDiebels","ts":"2018-02-20T11:14:32.314Z"}
{"msg":"On the move Robert but sounds like we can do better on this. I'm moving onto deployment stuff next week I'll see how I get on and look into what you're saying here in a bit more detail ","username":"silasdavis","ts":"2018-02-20T15:30:02.106Z"}
{"msg":"@silasdavis No problem :D . I just checked the issue I've created in Tendermint and it's been moved into the TO-DO list for Tendermint 0.16.0 ","username":"RobertDiebels","ts":"2018-02-21T12:02:02.151Z"}
{"msg":"Has joined the channel.","username":"Er1ck","ts":"2018-02-21T21:45:02.651Z","type":"uj"}
{"msg":"Has joined the channel.","username":"anaik","ts":"2018-02-22T17:43:57.940Z","type":"uj"}
{"msg":"Has left the channel.","username":"kakuzu","ts":"2018-02-22T19:46:36.385Z","type":"ul"}
{"msg":"Hi All<","username":"ragu","ts":"2018-02-23T04:41:44.256Z"}
{"msg":"Hi All,\nI want to connect burrow server using monax/legacy-db to access burrow chain functionality.\nI am using node js for burrow server connectivity.But when i am going to connect with burrow server ,i am receiving following error.I don't have a clear idea to how to resolve this issue.If any body know the solution of this issue ,that will more helpful for my future process.\n\nI am using following code for that process,\n\nvar burrowFactory = require('');\nlet chainUrl = 'http://localhost:1337/rpc';\nlet accounts = require('./accounts.json');\nvar burrow = burrowFactory.createInstance(chainUrl);\nvar myAccount = burrow.accounts();\nmyAccount.genPrivAccount(accounts.node1_full_000, function(error, result){\nif (!error){\nconsole.log('result = ', JSON.stringify(result,null,4));\n}\nelse{\nconsole.log(error);\n}\n});\n\nError:\n\n Burrow {\nserver: undefined,\n_unsafe:\nUnsafe {\nserver: undefined,\n_validator: SinglePolicyValidator { _policy: true } },\n_accounts:\nAccounts {\nserver: undefined,\n_unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] } },\n_blockChain: BlockChain { server: undefined },\n_consensus: Consensus { server: undefined },\n_events:\nEvents {\n_pollingInterval: 1000,\nserver: undefined,\nsub: { [Function: HttpEventSub] super: [Function: EventSub] } },\n_namereg:\nNameReg {\nserver: undefined,\n_unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] },\n_events: Events { _pollingInterval: 1000, server: undefined, _sub: [Function] } },\n_network: Network { server: undefined },\n_transactions:\nTransactions {\nserver: undefined,\n_unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] } } }\nAccounts {\nserver: undefined,\n_unsafe:\nUnsafe {\nserver: undefined,\n_validator: SinglePolicyValidator { _policy: true } } }\nReceived request for details.\nserver started at 10.0.0.141:8000\nBurrow error: Call of method \"toJSON\" with parameters 'server' responded with \"Error: socket hang up\".\n(node:4743) UnhandledPromiseRejectionWarning: TypeError: Cannot destructure property reject of 'undefined' or 'null'.\nat values.next.then (/home/gauravagarwal/.monax/apps/legacydb/node_modules//lib/index.js:13:57)\nat\n(node:4743) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\n(node:4743) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. ","username":"ragu","ts":"2018-02-23T04:41:44.256Z"}
{"msg":"you're not importing the Client `var burrowFactory = require('');`","username":"RobertDiebels","ts":"2018-02-23T09:26:13.740Z"}
{"msg":"var createAccount = (burrowURL, pass_phrase)=>{\n\n    let burrowDbFactory  = require('@monax/legacy-db');\n    let burrow           = burrowDbFactory.createInstance(burrowURL);\n    let accounts         = burrow.accounts();\n\n    accounts.genPrivAccount(pass_phrase, function (error, result) {\n        if (!error) {\n            console.log('Account : \\n', JSON.stringify(result, null, 4));\n            createPipe(result);\n        }\n        else {\n            console.log(error);\n        }\n    });\n}","username":"pouladzade","ts":"2018-02-23T19:03:09.440Z"}
{"msg":"you can try this one, It works for me ","username":"pouladzade","ts":"2018-02-23T19:03:33.778Z"}
{"msg":"","username":"pouladzade","ts":"2018-02-23T19:04:21.282Z","attachments":[{"type":"file","title":"Clipboard - February 24, 2018 3:04 AM","title_link":"/file-upload/6mPKJ2pQXmnfRxPXp/Clipboard - February 24, 2018 3:04 AM","image_url":"/file-upload/6mPKJ2pQXmnfRxPXp/Clipboard - February 24, 2018 3:04 AM","image_type":"image/png","image_size":80545,"url":"/file-upload/6mPKJ2pQXmnfRxPXp/Clipboard - February 24, 2018 3:04 AM","remote":false,"fileId":"6mPKJ2pQXmnfRxPXp","fileName":"Clipboard - February 24, 2018 3:04 AM"}]}
{"msg":"Bu please comment createPipe(result); ","username":"pouladzade","ts":"2018-02-23T19:06:39.969Z"}
{"msg":"But","username":"pouladzade","ts":"2018-02-23T19:06:45.371Z"}
{"msg":"I tried to make it more easy but it seems I forgot to remove [createPipe(result);]!!!!!!!!!!!","username":"pouladzade","ts":"2018-02-23T19:07:44.770Z"}
{"msg":"Has joined the channel.","username":"beylerian","ts":"2018-02-26T05:26:51.747Z","type":"uj"}
{"msg":"has anyone tried using burrow as a side-chain? any good leads/docs ?","username":"beylerian","ts":"2018-02-26T05:27:29.722Z"}
{"msg":"Is there any way to start the chain from the last block height we stopped the chain?? Coz if we stop the chain and try to start again it reads the chain till the last block stopped and then continue to start the chain after that","username":"gaurav94","ts":"2018-02-26T09:41:13.464Z"}
{"msg":"@gaurav94 I'm not sure I understand the question. I can't really make sense of:\n> Coz if we stop the chain and try to start again it reads the chain till the last block stopped and then continue to start the chain after that \n","username":"silasdavis","ts":"2018-02-26T12:44:15.026Z"}
{"msg":"When Burrow is restarted it will have Tendermint replay all blocks up to the latest block known to the Tendermint network","username":"silasdavis","ts":"2018-02-26T12:45:19.606Z"}
{"msg":"Burrow will load the nodes local DB on 0.17.0 and then replay any it is missing","username":"silasdavis","ts":"2018-02-26T12:45:53.530Z"}
{"msg":"current develop will actually have Tendermint replay the lot on restart","username":"silasdavis","ts":"2018-02-26T12:46:05.626Z"}
{"msg":"","username":"gaurav94","ts":"2018-02-26T12:48:10.903Z","attachments":[{"type":"file","title":"block-429382.png","title_link":"/file-upload/zfuWbZCaH9DNcy8JQ/block-429382.png","image_url":"/file-upload/zfuWbZCaH9DNcy8JQ/block-429382.png","image_type":"image/png","image_size":505875,"url":"/file-upload/zfuWbZCaH9DNcy8JQ/block-429382.png","remote":false,"fileId":"zfuWbZCaH9DNcy8JQ","fileName":"block-429382.png"}]}
{"msg":"This looks like some corruption of DB, there are some issues with Tendermint that have been fixed and are now in the develop branch of Burrow","username":"silasdavis","ts":"2018-02-26T13:21:48.866Z"}
{"msg":"Thanks alot @silasdavis ","username":"gaurav94","ts":"2018-02-27T05:46:42.294Z"}
{"msg":":)","username":"gaurav94","ts":"2018-02-27T05:46:46.931Z"}
{"msg":"Hey guys, question. Which version of Tendermint is tied to which version of Burrow?","username":"RobertDiebels","ts":"2018-02-27T16:38:25.743Z"}
{"msg":"Develop is on 0.15.0 and ummm master is on 0.9.2 I think ","username":"silasdavis","ts":"2018-02-27T17:42:47.892Z"}
{"msg":"Great thanks :D :thumbup: ","username":"RobertDiebels","ts":"2018-02-27T19:28:41.503Z"}
{"msg":"Has joined the channel.","username":"VikasJakhar","ts":"2018-02-27T20:06:01.779Z","type":"uj"}
{"msg":"Hey guys. Thought I'd let you know that I've got a working version of Burrow on a Kubernetes cluster.","username":"RobertDiebels","ts":"2018-02-28T19:07:06.058Z"}
{"msg":"I'll be doing some fine-tuning the rest of the week. Hopefully I'll have a release ready for next week.","username":"RobertDiebels","ts":"2018-02-28T19:08:05.809Z"}
{"msg":"Has joined the channel.","username":"dplumb","ts":"2018-02-28T22:26:13.249Z","type":"uj"}
{"msg":"Has joined the channel.","username":"hvandurme","ts":"2018-03-01T08:01:12.742Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AyushyaChitransh","ts":"2018-03-01T10:51:19.999Z","type":"uj"}
{"msg":"Hello everyone, I am coming straight from ethereum platform. Was trying to get a better understanding of burrow. Came to know it uses monax. Which should I know first? Both are new to me","username":"AyushyaChitransh","ts":"2018-03-01T11:02:42.236Z"}
{"msg":"The [readme](https://github.com/bluecollarcoding/burrow/blob/8e546756e3d0f27b1a43dddfba8c9c97a8eae2c1/README.md) which is still in WIP gave a clearer idea, that I may not need monax. First i'll read about burrow and try running it.","username":"AyushyaChitransh","ts":"2018-03-01T11:22:47.220Z"}
{"msg":"@RobertDiebels  Greate news! congratulations","username":"pouladzade","ts":"2018-03-01T12:47:44.582Z"}
{"msg":"@RobertDiebels maybe I also can use it and embed it inside my software if the license allows me!","username":"pouladzade","ts":"2018-03-01T12:48:38.335Z"}
{"msg":"Has joined the channel.","username":"SKDHANUKA","ts":"2018-03-01T17:24:58.986Z","type":"uj"}
{"msg":"I am unable to build, facing many errors. Errors starting from `cannot find package \"github.com/BurntSushi/toml\"` Do I need to `get` these packages individually?","username":"AyushyaChitransh","ts":"2018-03-01T17:58:04.688Z"}
{"msg":"okay, I figured out, it was a problem due to gvm","username":"AyushyaChitransh","ts":"2018-03-01T18:34:21.782Z"}
{"msg":"@pouladzade thanks :D . I haven't decided on a proper license yet. I will probably do that soon as well.","username":"RobertDiebels","ts":"2018-03-01T22:04:09.102Z"}
{"msg":"When I do `go get github.com/hyperledger/burrow/...` I am getting following errors:\n\n```\n# github.com/hyperledger/burrow/account\naccount/account.go:86:20: undefined: wire.Codec\naccount/priv_account.go:38:26: invalid type assertion: pA.PrivKey.(crypto.PrivKeyEd25519) (non-interface type crypto.PrivKey on left)\naccount/priv_account.go:67:9: cannot use pubKey (type crypto.PubKeyEd25519) as type crypto.PubKey in field value\naccount/priv_account.go:68:10: cannot use privKey (type crypto.PrivKeyEd25519) as type crypto.PrivKey in field value\naccount/priv_account.go:87:9: cannot use pubKey (type crypto.PubKeyEd25519) as type crypto.PubKey in field value\naccount/priv_account.go:88:10: cannot use privKey (type crypto.PrivKeyEd25519) as type crypto.PrivKey in field value\naccount/priv_account.go:103:9: cannot use pubKey (type crypto.PubKeyEd25519) as type crypto.PubKey in field value\naccount/priv_account.go:104:10: cannot use privKey (type crypto.PrivKeyEd25519) as type crypto.PrivKey in field value\n# github.com/hyperledger/burrow/genesis\ngenesis/make_genesis_file.go:146:9: cannot use pubKey (type crypto.PubKeyEd25519) as type crypto.PubKey in field value\ngenesis/types.go:128:29: cannot convert nil to type crypto.PubKey\n# github.com/tendermint/go-p2p\n../../tendermint/go-p2p/peer.go:169:42: cannot use p.PubKey() (type crypto.PubKeyEd25519) as type crypto.PubKey in argument to peerNodeInfo.PubKey.Equals\n../../tendermint/go-p2p/secret_connection.go:51:34: invalid type assertion: locPrivKey.PubKey().(crypto.PubKeyEd25519) (non-interface type crypto.PubKey on left)\n../../tendermint/go-p2p/secret_connection.go:99:26: invalid type assertion: remPubKey.(crypto.PubKeyEd25519) (non-interface type crypto.PubKey on left)\n../../tendermint/go-p2p/secret_connection.go:258:43: invalid type assertion: locPrivKey.Sign(challenge[:]).(crypto.SignatureEd25519) (non-interface type crypto.Signature on left)\n../../tendermint/go-p2p/secret_connection.go:273:48: cannot use pubKey (type crypto.PubKeyEd25519) as type crypto.PubKey in field value\n../../tendermint/go-p2p/secret_connection.go:273:56: cannot use signature (type crypto.SignatureEd25519) as type crypto.Signature in field value\n../../tendermint/go-p2p/secret_connection.go:297:40: cannot use remSignature (type crypto.SignatureEd25519) as type crypto.Signature in argument to remPubKey.VerifyBytes\n../../tendermint/go-p2p/switch.go:157:44: invalid type assertion: nodePrivKey.PubKey().(crypto.PubKeyEd25519) (non-interface type crypto.PubKey on left)\n../../tendermint/go-p2p/switch.go:216:42: cannot use peer.PubKey() (type crypto.PubKeyEd25519) as type crypto.PubKey in argument to sw.nodeInfo.PubKey.Equals\n../../tendermint/go-p2p/switch.go:534:31: invalid type assertion: privKey.PubKey().(crypto.PubKeyEd25519) (non-interface type crypto.PubKey on left)\n../../tendermint/go-p2p/switch.go:534:31: too many errors\n```","username":"AyushyaChitransh","ts":"2018-03-02T03:30:41.506Z"}
{"msg":"It started working after `glide install` should it be included in the readme too?","username":"AyushyaChitransh","ts":"2018-03-02T03:37:34.311Z"}
{"msg":"Has joined the channel.","username":"niyuelin","ts":"2018-03-02T06:10:57.875Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kakuzu","ts":"2018-03-02T19:40:01.278Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kevinstr","ts":"2018-03-02T19:47:48.930Z","type":"uj"}
{"msg":"Are there any Monax experts here? I'm doing an internship about monax","username":"kevinstr","ts":"2018-03-02T19:48:11.776Z"}
{"msg":"Hi guys, I just finished Seriality, a library for serializing and deserializing Solidity types, I would be glad if you take a look and let me know if you have any comments about it.\n\nhttps://github.com/pouladzade/Seriality\n","username":"pouladzade","ts":"2018-03-03T10:41:16.814Z"}
{"msg":"","username":"pouladzade","ts":"2018-03-03T10:42:08.793Z","attachments":[{"type":"file","title":"seriality-sample.png","title_link":"/file-upload/QEvakEgZwg9ohooHJ/seriality-sample.png","image_url":"/file-upload/QEvakEgZwg9ohooHJ/seriality-sample.png","image_type":"image/png","image_size":317282,"url":"/file-upload/QEvakEgZwg9ohooHJ/seriality-sample.png","remote":false,"fileId":"QEvakEgZwg9ohooHJ","fileName":"seriality-sample.png"}]}
{"msg":"Just pushed a new version of Kubechain [ https://www.npmjs.com/package/kubechain ] with Hyperledger Burrow support.","username":"RobertDiebels","ts":"2018-03-03T11:24:44.209Z"}
{"msg":"Would like to state that I'm still at 0.x so I expect usage to change by the time I get to 1.0.","username":"RobertDiebels","ts":"2018-03-03T11:26:47.352Z"}
{"msg":"@pouladzade looks interesting, I think the readme could do with some motivation and an idea of the problem Seriality is trying to solve. Also I personally find the `_underscore` naming hideously, hideously ugly :) but that might be one of those sectarian unresolvable disputes...","username":"silasdavis","ts":"2018-03-03T11:36:41.289Z"}
{"msg":"@pouladzade looks interesting, I think the readme could do a brief section on the motivation for writing the library and an idea of the problem Seriality is trying to solve. Also I personally find the `_underscore` naming hideously, hideously ugly :) but that might be one of those sectarian unresolvable disputes...","username":"silasdavis","ts":"2018-03-03T11:36:41.289Z"}
{"msg":"@pouladzade looks interesting, I think the readme could do a brief section on the motivation for writing the library and an idea of the problem Seriality is trying to solve. Also I personally find the `_underscore` naming convention hideously, hideously ugly :) but that might be one of those sectarian unresolvable disputes...","username":"silasdavis","ts":"2018-03-03T11:36:41.289Z"}
{"msg":"@pouladzade looks interesting, I think the readme could do a brief section on the motivation for writing the library and an idea of the problem Seriality is trying to solve. Also I personally find the `_underscore` naming convention hideously, hideously ugly :) but that might be one of those unresolvable sectarian disputes...","username":"silasdavis","ts":"2018-03-03T11:36:41.289Z"}
{"msg":"@RobertDiebels great - it would be good for you to have a go deploying develop - what will become burrow 0.18.0 - some fairly significant changes there","username":"silasdavis","ts":"2018-03-03T11:38:34.882Z"}
{"msg":"@silasdavis  thank you for your comments, I am agree with you about the underscore, and gonna to make it more readable","username":"pouladzade","ts":"2018-03-03T11:38:42.332Z"}
{"msg":"@silasdavis  thank you for your comments, I am agree with you about the underscore, and gonna make it more readable","username":"pouladzade","ts":"2018-03-03T11:38:42.332Z"}
{"msg":"@silasdavis could you explain what you mean by: 'it would be good for you to have a go deploying develop'? Did you mean a binary I could run instead of the dind-container? Because I fully agree with that. Would ease the deployment significantly.","username":"RobertDiebels","ts":"2018-03-03T12:35:38.216Z"}
{"msg":"@silasdavis I applied some of your suggestions on Seriality, Thanks again :)","username":"pouladzade","ts":"2018-03-03T13:22:24.649Z"}
{"msg":"@pouladzade I've added the code from your ticket to a test that I will add to  Bosmarmot's test suite: https://github.com/silasdavis/bosmarmot/tree/app39-remix-byte-cast/monax/tests/jobs_fixtures/app39-sign-extension ","username":"silasdavis","ts":"2018-03-03T14:06:19.085Z"}
{"msg":"I'm wondering if we could integrate a more complete test case from Seriality","username":"silasdavis","ts":"2018-03-03T14:07:06.493Z"}
{"msg":"They way we do it is to have the solidity files along with an epm.yaml that deploys, tests, and makes assertions about the return results in the same directory","username":"silasdavis","ts":"2018-03-03T14:07:50.276Z"}
{"msg":"If you clone bosmarmot and run `make test_integration` it runs all of them. The one on my branch needs you to run a more recent Burrow though","username":"silasdavis","ts":"2018-03-03T14:09:16.417Z"}
{"msg":"If you want to try the test I have written you'd need to install monax-keys:\n\n```\ngo get github.com/monax/bosmarmot/keys/cmd/monax-keys\n\n```\n And Burrow from my SIGNEXTEND fix PR then run:\n\n```\n\ncd $GOPATH/src/github.com/monax/bosmarmot/monax/tests/ && rm -rf .burrow && burrow &\nmonax-keys server --port 48002 --dir $GOPATH/src/github.com/monax/bosmarmot &\nboot=false $GOPATH/src/github.com/monax/bosmarmot/monax/tests/test_jobs.sh app39\n```\n\nWhich will run the test with local keys and burrow","username":"silasdavis","ts":"2018-03-03T14:16:59.265Z"}
{"msg":"@silasdavis I'll ask it here. I've e-mailed your company (Monax) several times to different addresses for premium support for my university. An answer would be nice.","username":"kevinstr","ts":"2018-03-03T17:21:21.528Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Exqtqi6pJBSL8PAmR) @RobertDiebels I mean to use the develop branch of Burrow which does things fairly differently - different config, no priv_vaidator file (keys instead). Wat you have there against 0.17.0 unfortunately will not work for 0.18.0, which will have many fixes and enhancements","username":"silasdavis","ts":"2018-03-03T19:13:00.342Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Exqtqi6pJBSL8PAmR","url":"https://chat.hyperledger.org/channel/burrow?msg=Exqtqi6pJBSL8PAmR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@kevinstr responded in dm","username":"silasdavis","ts":"2018-03-03T19:13:11.267Z"}
{"msg":"Has joined the channel.","username":"TanmoyBanerjee","ts":"2018-03-04T15:07:29.942Z","type":"uj"}
{"msg":"Hi all,","username":"TanmoyBanerjee","ts":"2018-03-04T15:07:56.353Z"}
{"msg":"I have a question for all of the members.Can You guys please help me out whether Hyperledger Burrow will be able to execute the smart contracts of Ethereum?","username":"TanmoyBanerjee","ts":"2018-03-04T15:09:41.129Z"}
{"msg":"If yes what will be the cost for the same.Same as Ethereum?","username":"TanmoyBanerjee","ts":"2018-03-04T15:10:32.286Z"}
{"msg":"Has joined the channel.","username":"dhiraj18","ts":"2018-03-04T15:19:48.077Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tomislav","ts":"2018-03-04T15:21:46.341Z","type":"uj"}
{"msg":"Has joined the channel.","username":"LaurenNeely","ts":"2018-03-04T16:58:52.059Z","type":"uj"}
{"msg":"@silasdavis aaah ok. Got it :D :thumbsup: ","username":"RobertDiebels","ts":"2018-03-04T17:17:55.320Z"}
{"msg":"I've considered splitting my adapters into separate packages and let users decide which versions to use. I think doing that should help with differences per version, like the ones you just mentioned. Right now I'm focusing on getting everything up and running in AWS.","username":"RobertDiebels","ts":"2018-03-04T17:20:19.903Z"}
{"msg":"Has joined the channel.","username":"anil.k","ts":"2018-03-04T18:10:42.326Z","type":"uj"}
{"msg":"Has joined the channel.","username":"etrn","ts":"2018-03-04T23:17:25.900Z","type":"uj"}
{"msg":"Is it possible to make users able to login using burrow?","username":"kevinstr","ts":"2018-03-05T15:23:35.685Z"}
{"msg":"for example: a users login, invokes a smart contract, and another user receives a self-made token (I made the token when configuring the blockchain)","username":"kevinstr","ts":"2018-03-05T15:23:59.952Z"}
{"msg":"@TanmoyBanerjee yes, you can execute solidity on burrow. cost is an enterprise model .. i.e. gas is finite but free. ","username":"Dan","ts":"2018-03-05T15:25:18.736Z"}
{"msg":"@dan @silasdavis  where can i read docs on permission based smart contract ","username":"kakuzu","ts":"2018-03-05T16:46:58.020Z"}
{"msg":"","username":"kakuzu","ts":"2018-03-05T16:47:23.381Z","attachments":[{"type":"file","title":"Clipboard - March 5, 2018 11:46 AM","title_link":"/file-upload/nsGvkjC5e3odRMLP4/Clipboard%20-%20March%205,%202018%2011:46%20AM","image_url":"/file-upload/nsGvkjC5e3odRMLP4/Clipboard%20-%20March%205,%202018%2011:46%20AM","image_type":"image/png","image_size":53126,"url":"/file-upload/nsGvkjC5e3odRMLP4/Clipboard%20-%20March%205,%202018%2011:46%20AM","remote":false,"fileId":"nsGvkjC5e3odRMLP4","fileName":"Clipboard - March 5, 2018 11:46 AM"}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=okirtNuy7YDktRyFs) @kakuzu ","username":"kevinstr","ts":"2018-03-05T18:10:06.463Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=okirtNuy7YDktRyFs","url":"https://chat.hyperledger.org/channel/burrow?msg=okirtNuy7YDktRyFs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=okirtNuy7YDktRyFs) @kakuzu  https://monax.io/docs/deploying-advanced-smart-contracts-to-a-chain/ is this what you mean?","username":"kevinstr","ts":"2018-03-05T18:10:26.807Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=okirtNuy7YDktRyFs","url":"https://chat.hyperledger.org/channel/burrow?msg=okirtNuy7YDktRyFs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"yeah, i know that's why i am asking them to help. I am unable to understand the permission layer how it works and does smart contract have specific accounts which can access that and who have authority to deploy smart contract.","username":"kakuzu","ts":"2018-03-05T18:16:54.513Z"}
{"msg":"Has joined the channel.","username":"Preetam007","ts":"2018-03-06T08:26:40.884Z","type":"uj"}
{"msg":"Hi team,\n\nCould anyone tell me what a root, participant and full account is? I use them when I invoke the command \"monax chains make --acount-types=Root:1,full1,Participant:1","username":"kevinstr","ts":"2018-03-06T08:34:07.982Z"}
{"msg":"nvm :) I found the definitions in the account-type folder.","username":"kevinstr","ts":"2018-03-06T08:37:21.995Z"}
{"msg":"@kakuzu our documentation of the permissions is a little indirect at the moment. I have someone working on producing an up-to-date and reasonably comprehensive tutorial/primer. Until then worth looking at how we manipulate permissions with monax pkgs do: https://github.com/monax/bosmarmot/blob/master/monax/tests/jobs_fixtures/app03-basic_and_advanced_permission_txs_and_queries/epm.yaml. You can also see the possible permissions enumerated here: https://github.com/hyperledger/burrow/blob/develop/permission/permissions.go#L28 ","username":"silasdavis","ts":"2018-03-06T13:28:01.396Z"}
{"msg":"You can also run `make snatives` to generate our native permission contract","username":"silasdavis","ts":"2018-03-06T13:28:21.427Z"}
{"msg":"I'll aim to add some more detailed comments to the permissions code when I have time.","username":"silasdavis","ts":"2018-03-06T13:28:37.336Z"}
{"msg":"@kevinstr that's right - how they are defined now","username":"silasdavis","ts":"2018-03-06T13:28:53.635Z"}
{"msg":"I also have some contributors working on documenting the overall design/structure of Burrow","username":"silasdavis","ts":"2018-03-06T13:29:40.581Z"}
{"msg":"@kakuzu to try and answer you question. Permissions are granted to accounts either by values set in the genesis.json or by calling our SNative (secure native) contract that handles permissions (exampe usage: https://github.com/monax/bosmarmot/tree/master/monax/tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer)\n\n...\nActually I've just made a pull request with what I was going to put here in directr answer to you: https://github.com/hyperledger/burrow/pull/710\nA","username":"silasdavis","ts":"2018-03-06T13:57:40.501Z"}
{"msg":"@kakuzu to try and answer you question. Permissions are granted to accounts either by values set in the genesis.json or by calling our SNative (secure native) contract that handles permissions (exampe usage: https://github.com/monax/bosmarmot/tree/master/monax/tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer)\n\n...\nActually I've just made a pull request with what I was going to put here in directr answer to you: https://github.com/hyperledger/burrow/pull/710\n","username":"silasdavis","ts":"2018-03-06T13:57:40.501Z"}
{"msg":"which at least adds some more comments on permissions","username":"silasdavis","ts":"2018-03-06T13:57:58.475Z"}
{"msg":"@silasdavis  if you need help with the docs update let me know i would love to help. It will also help me learn","username":"kakuzu","ts":"2018-03-06T17:01:43.867Z"}
{"msg":"@kakuzu I surely would! If you want to have a go at documenting anything (like permissions) and submitting a PR to docs/ then I would be happy to review/iterate with you","username":"silasdavis","ts":"2018-03-06T17:09:42.845Z"}
{"msg":"@zramsay is working on some explainers and might be useful to coordinate if you do","username":"silasdavis","ts":"2018-03-06T17:10:06.901Z"}
{"msg":"If you did want to take this on I could make some time for a call also. I can't really get stuck into docs now, but I could try and give you a download from my head","username":"silasdavis","ts":"2018-03-06T17:10:43.413Z"}
{"msg":"sure let me know where i can find the docs , i will go through it and run stuff if something missing or fails i will let them know.","username":"kakuzu","ts":"2018-03-06T17:11:36.912Z"}
{"msg":"I've added a bit of commentary to: https://github.com/hyperledger/burrow/blob/develop/permission/permissions.go","username":"silasdavis","ts":"2018-03-06T17:15:11.412Z"}
{"msg":"Hello everybody.\n\nI've got a very general question. Is Burrow more mature than Fabric?","username":"kevinstr","ts":"2018-03-06T20:47:17.238Z"}
{"msg":"@silasdavis Hi Silas, we're using Monax / Burrow for a POC and encounter an issue with version 0.17 and 0.18. This can be reproduced with the code in the repo on  https://github.com/pascalverlinden/perfo and the readme contains more information.\nCould be related to the version of Tendermint used by Monax, but I'm not sure. \nI would appreciate any help.","username":"PascalVerlinden","ts":"2018-03-06T21:00:38.426Z"}
{"msg":"@PascalVerlinden reproduction looks good - though I haven't tried it yet. Can you create an issue on https://github.com/hyperledger/burrow/ with a link to that repo and I'll try to get to it. You can copy paste from repo don't worry about proforma ","username":"silasdavis","ts":"2018-03-07T14:01:17.460Z"}
{"msg":"@kevinstr It depends what you mean by mature. Burrow (formerly eris-db) is older than Fabric - one of the oldest permissioned ledgers (well before Hyperledger) with the first code written in December 2014 which branched off to become Tendermint. Because of this the codebase has gone through some gymnastics - from consensus engine + EVM, to separate EVM + state + snatives, to its current incarnation as a EVM library and Tendermint harness. It has had quite a few interesting things built on it and I will be putting into production for Monax. It has some dark corners, and some things I would like to change, but I would argue the basics are solid and it has real BFT consensus through Tendermint.\n\nOn the other hand ","username":"silasdavis","ts":"2018-03-07T14:08:06.908Z"}
{"msg":"@kevinstr It depends what you mean by mature. Burrow (formerly eris-db) is older than Fabric - one of the oldest permissioned ledgers (well before Hyperledger) with the first code written in December 2014 which branched off to become Tendermint. Because of this the codebase has gone through some gymnastics - from consensus engine + EVM, to separate EVM + state + snatives, to its current incarnation as a EVM library and Tendermint harness. It has had quite a few interesting things built on it and I will be putting into production for Monax. It has some dark corners, and some things I would like to change, but I would argue the basics are solid and it has real BFT consensus through Tendermint.\n\nOn the other hand Fabric is younger but will certainly be older in terms of developer-hours and number of eyes on the codebase. It has a lot of mindshare, good tooling, good community, and good developers. It has an expansive design and is highly pluggable. It does not provide a BFT consensus (in their model, ordering) service.\n\n\n","username":"silasdavis","ts":"2018-03-07T14:08:06.908Z"}
{"msg":"@kevinstr It depends what you mean by mature. Burrow (formerly eris-db) is older than Fabric - one of the oldest permissioned ledgers (well before Hyperledger) with the first code written in December 2014 which branched off to become Tendermint. Because of this the codebase has gone through some gymnastics - from consensus engine + EVM, to separate EVM + state + snatives, to its current incarnation as a EVM library and Tendermint harness. It has had quite a few interesting things built on it and I will be putting into production for Monax. It has some dark corners, and some things I would like to change, but I would argue the basics are solid and it has real BFT consensus through Tendermint.\n\nOn the other hand Fabric is younger but will certainly be older in terms of developer-hours and number of eyes on the codebase. It has a lot of mindshare, good tooling, good community, and good developers. It has an expansive design and is highly pluggable. It does not provide a BFT consensus (in their model, ordering) service.\n\n\nBoth Sawtooth Lake and Fabric are great projects with broader goals than Burrow. And they are both integrating Burrow's EVM see #sawtooth-seth and #fabric-evm. Burrow's future is being 'in the mix' in projects with pluggable consensus and arbitrary transaction processors. Burrow as a standalone unit provides a fast simple EVM and consensus engine all in a single process and single language. This is how I see Burrow's niche - the 'redis of blockchain'.","username":"silasdavis","ts":"2018-03-07T14:08:06.908Z"}
{"msg":"@kevinstr It depends what you mean by mature. Burrow (formerly eris-db) is older than Fabric - Burrow is one of the oldest permissioned ledgers (well before Hyperledger) with the first code written in December 2014 which branched off to become Tendermint. Because of this the codebase has gone through some gymnastics - from consensus engine + EVM, to separate EVM + state + snatives, to its current incarnation as a EVM library and Tendermint harness. It has had quite a few interesting things built on it and I will be putting into production for Monax. It has some dark corners, and some things I would like to change, but I would argue the basics are solid and it has real BFT consensus through Tendermint.\n\nOn the other hand Fabric is younger but will certainly be older in terms of developer-hours and number of eyes on the codebase. It has a lot of mindshare, good tooling, good community, and good developers. It has an expansive design and is highly pluggable. It does not provide a BFT consensus (in their model, ordering) service.\n\n\nBoth Sawtooth Lake and Fabric are great projects with broader goals than Burrow. And they are both integrating Burrow's EVM see #sawtooth-seth and #fabric-evm. Burrow's future is being 'in the mix' in projects with pluggable consensus and arbitrary transaction processors. Burrow as a standalone unit provides a fast simple EVM and consensus engine all in a single process and single language. This is how I see Burrow's niche - the 'redis of blockchain'.","username":"silasdavis","ts":"2018-03-07T14:08:06.908Z"}
{"msg":"And of course, we are primarily (for now) an EVM execution environment. Ethereum/Solidity/the EVM has pluses and minuses.","username":"silasdavis","ts":"2018-03-07T14:16:59.047Z"}
{"msg":"Okay, thank you!","username":"kevinstr","ts":"2018-03-07T15:06:55.389Z"}
{"msg":"I encountered an error when deploying contracts with monax pkgs do --chain (name) --address (address)","username":"kevinstr","ts":"2018-03-07T15:07:28.806Z"}
{"msg":"","username":"kevinstr","ts":"2018-03-07T15:07:36.054Z","attachments":[{"type":"file","title":"Clipboard - March 7, 2018 4:07 PM","title_link":"/file-upload/aY7jcLPdLgs4u4n5q/Clipboard%20-%20March%207,%202018%204:07%20PM","image_url":"/file-upload/aY7jcLPdLgs4u4n5q/Clipboard%20-%20March%207,%202018%204:07%20PM","image_type":"image/png","image_size":399228,"url":"/file-upload/aY7jcLPdLgs4u4n5q/Clipboard%20-%20March%207,%202018%204:07%20PM","remote":false,"fileId":"aY7jcLPdLgs4u4n5q","fileName":"Clipboard - March 7, 2018 4:07 PM"}]}
{"msg":"this is the error...","username":"kevinstr","ts":"2018-03-07T15:07:40.639Z"}
{"msg":"Anybody has any idea?","username":"kevinstr","ts":"2018-03-07T15:07:44.081Z"}
{"msg":"I have 4 full accounts.","username":"kevinstr","ts":"2018-03-07T15:07:53.086Z"}
{"msg":"@silasdavis thanks for your reply, I've added an issue as you requested, see https://github.com/hyperledger/burrow/issues/713","username":"PascalVerlinden","ts":"2018-03-07T15:20:04.460Z"}
{"msg":"@silasdavis BTW, I was trying to install the development branch of Burrow. Installation was successful, but when I try to start with burrow serve --work-dir as stated on the github page, I get an error (incorrect usage), because the option --work-dir is not supported. How can I start? And is it still possible to use the JS SDK? ","username":"PascalVerlinden","ts":"2018-03-07T15:27:59.990Z"}
{"msg":"Okay, I managed to solve it by using validators. However, I'm encountering a new problem now.","username":"kevinstr","ts":"2018-03-07T15:34:52.460Z"}
{"msg":"I have a multi chain node","username":"kevinstr","ts":"2018-03-07T15:34:58.716Z"}
{"msg":"started it with monax chains make (name) --seeds-ip=....","username":"kevinstr","ts":"2018-03-07T15:35:12.579Z"}
{"msg":"next I copied the account folder to the other VMs","username":"kevinstr","ts":"2018-03-07T15:35:24.545Z"}
{"msg":"I then started the chain on each VM","username":"kevinstr","ts":"2018-03-07T15:35:35.685Z"}
{"msg":"now, I'm trying to access the contract with the legacy-contracts js library","username":"kevinstr","ts":"2018-03-07T15:35:49.533Z"}
{"msg":"and I'm getting this error:","username":"kevinstr","ts":"2018-03-07T15:35:53.156Z"}
{"msg":"","username":"kevinstr","ts":"2018-03-07T15:36:00.386Z","attachments":[{"type":"file","title":"Clipboard - March 7, 2018 4:35 PM","title_link":"/file-upload/5tjGoDahY4GQnmPnt/Clipboard%20-%20March%207,%202018%204:35%20PM","image_url":"/file-upload/5tjGoDahY4GQnmPnt/Clipboard%20-%20March%207,%202018%204:35%20PM","image_type":"image/png","image_size":606622,"url":"/file-upload/5tjGoDahY4GQnmPnt/Clipboard%20-%20March%207,%202018%204:35%20PM","remote":false,"fileId":"5tjGoDahY4GQnmPnt","fileName":"Clipboard - March 7, 2018 4:35 PM"}]}
{"msg":"This is the code","username":"kevinstr","ts":"2018-03-07T15:38:18.326Z"}
{"msg":"","username":"kevinstr","ts":"2018-03-07T15:38:23.067Z","attachments":[{"type":"file","title":"Clipboard - March 7, 2018 4:38 PM","title_link":"/file-upload/YmzjRfQycx3fcEmDp/Clipboard%20-%20March%207,%202018%204:38%20PM","image_url":"/file-upload/YmzjRfQycx3fcEmDp/Clipboard%20-%20March%207,%202018%204:38%20PM","image_type":"image/png","image_size":275264,"url":"/file-upload/YmzjRfQycx3fcEmDp/Clipboard%20-%20March%207,%202018%204:38%20PM","remote":false,"fileId":"YmzjRfQycx3fcEmDp","fileName":"Clipboard - March 7, 2018 4:38 PM"}]}
{"msg":"When I do a GET call to the port via Postman I get this:","username":"kevinstr","ts":"2018-03-07T15:39:14.843Z"}
{"msg":"","username":"kevinstr","ts":"2018-03-07T15:39:19.315Z","attachments":[{"type":"file","title":"Clipboard - March 7, 2018 4:39 PM","title_link":"/file-upload/P7tC49ZBfY3eePu2R/Clipboard%20-%20March%207,%202018%204:39%20PM","image_url":"/file-upload/P7tC49ZBfY3eePu2R/Clipboard%20-%20March%207,%202018%204:39%20PM","image_type":"image/png","image_size":177935,"url":"/file-upload/P7tC49ZBfY3eePu2R/Clipboard%20-%20March%207,%202018%204:39%20PM","remote":false,"fileId":"P7tC49ZBfY3eePu2R","fileName":"Clipboard - March 7, 2018 4:39 PM"}]}
{"msg":"Help would be very much appreciated.","username":"kevinstr","ts":"2018-03-07T15:39:26.188Z"}
{"msg":"@kevinstr you need a chainurl with a protocol and port like `http://127.0.0.1:1337`","username":"silasdavis","ts":"2018-03-07T16:54:57.981Z"}
{"msg":"@PascalVerlinden please see usage section in readme of develop branch: https://github.com/hyperledger/burrow/blob/develop/README.md#usage\n\nCommand is just `burrow` now - bear in mind config has changed","username":"silasdavis","ts":"2018-03-07T16:55:53.957Z"}
{"msg":"JS support on develop is a WIP in our new tooling monorepo: https://github.com/monax/bosmarmot/tree/develop but we have most test passing. Should be working for the brave end of this week.","username":"silasdavis","ts":"2018-03-07T16:56:41.566Z"}
{"msg":"@silasdavis thank you. But how come that my browser gives a 404?","username":"kevinstr","ts":"2018-03-07T17:07:07.701Z"}
{"msg":"Has joined the channel.","username":"vishwasbalakrishna","ts":"2018-03-07T21:29:23.281Z","type":"uj"}
{"msg":"Burrow guys, please show up on Identity WG to volunteer on the Burrow Identity model in our Paper doc","username":"VipinB","ts":"2018-03-08T15:30:45.852Z"}
{"msg":"See https://docs.google.com/document/d/1zDPVDer9G-IjqicB65G9Uo2RhzpYLY4mGpVpEPu_Wt4/edit?usp=drivesdk for the more complete volunteer list by section. The burrow section is empty...\n","username":"VipinB","ts":"2018-03-08T15:31:19.835Z"}
{"msg":"Dead air!!!","username":"VipinB","ts":"2018-03-08T15:34:28.564Z"}
{"msg":"Adam Smith strikes again","username":"VipinB","ts":"2018-03-08T15:35:19.463Z"}
{"msg":"Has joined the channel.","username":"Gandalf","ts":"2018-03-09T03:56:46.902Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JoeriExelmans","ts":"2018-03-09T08:27:46.749Z","type":"uj"}
{"msg":"Updated PascalVerlinden's issue: https://github.com/hyperledger/burrow/issues/713 . Tried to run the example code with the latest git version of burrow and bosmarmot tooling, still encountering serious performance issues. Steps that were taken can be found here: https://github.com/pascalverlinden/perfo/blob/latest-version/README.md","username":"JoeriExelmans","ts":"2018-03-09T09:31:51.644Z"}
{"msg":"Hi @silasdavis and @zramsay  would like some insight on the differences between Burrow and Ethermint. Btw, been using Burrow sine the early eris-db days","username":"snowy13","ts":"2018-03-09T17:03:53.925Z"}
{"msg":"Hi @silasdavis and @zramsay  would like some insight on the differences between Burrow and Ethermint. Btw, been using Burrow since the early eris-db days","username":"snowy13","ts":"2018-03-09T17:03:53.925Z"}
{"msg":"PS Glad to see you're carrying on the marmot legacy with bosmarmot even with Preston gone...","username":"snowy13","ts":"2018-03-09T17:07:40.712Z"}
{"msg":"Ethermint actually is an Go Ethereum node(application layer) which uses the Tendermint so you can use all the tools which are compatible with ethereum specification like web3.js truffle, remix, mist, ....","username":"pouladzade","ts":"2018-03-09T17:12:47.921Z"}
{"msg":"Right gotcha...but no permissions right?","username":"snowy13","ts":"2018-03-09T17:14:15.982Z"}
{"msg":"and as far as I know and work with doesn't have the permission ","username":"pouladzade","ts":"2018-03-09T17:14:55.639Z"}
{"msg":"The very important feature of Burrow is to support the permission, so you can have a privileged blockchain   ","username":"pouladzade","ts":"2018-03-09T17:16:10.511Z"}
{"msg":"Burrow handles the permissions withe the native contracts","username":"pouladzade","ts":"2018-03-09T17:16:59.787Z"}
{"msg":"And of course the burrow fork of web3.js has been refactored to run server side right?","username":"snowy13","ts":"2018-03-09T17:19:04.584Z"}
{"msg":"I just know they used the part of web3 codes in Legacy_db and legacy_contracts, if i am not mistaken","username":"pouladzade","ts":"2018-03-09T17:20:48.525Z"}
{"msg":"but what do you mean the server side???","username":"pouladzade","ts":"2018-03-09T17:21:21.164Z"}
{"msg":"My bad..not sure","username":"snowy13","ts":"2018-03-09T17:22:00.140Z"}
{"msg":"Web3 is a javascript library which provides the interface to communicate with ethereum node","username":"pouladzade","ts":"2018-03-09T17:24:15.031Z"}
{"msg":"Got confused lol, its been a while. legacy-contracts.js would not load client side.","username":"snowy13","ts":"2018-03-09T19:21:15.531Z"}
{"msg":"legacy-contracts is something like web3 , for communicating with Burrow's node through the rpc-json ","username":"pouladzade","ts":"2018-03-09T19:38:08.706Z"}
{"msg":"Right. Bottom line though, no point in using ethermint for a permissioned chain network right?","username":"snowy13","ts":"2018-03-09T20:02:39.814Z"}
{"msg":"No pint","username":"pouladzade","ts":"2018-03-10T05:40:59.222Z"}
{"msg":"No point","username":"pouladzade","ts":"2018-03-10T05:40:59.222Z"}
{"msg":"Has joined the channel.","username":"maddydev","ts":"2018-03-10T23:29:33.899Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JulianGordonHK","ts":"2018-03-11T01:03:53.755Z","type":"uj"}
{"msg":"","username":"gaurav94","ts":"2018-03-12T10:21:36.523Z","attachments":[{"type":"file","title":"panicError.png","title_link":"/file-upload/5T2jWFPAkStRGvgnd/panicError.png","image_url":"/file-upload/5T2jWFPAkStRGvgnd/panicError.png","image_type":"image/png","image_size":523612,"url":"/file-upload/5T2jWFPAkStRGvgnd/panicError.png","remote":false,"fileId":"5T2jWFPAkStRGvgnd","fileName":"panicError.png"}]}
{"msg":"You're running may nodes on the same machine? You can try increasing the ulimit: https://www.tecmint.com/increase-set-open-file-limits-in-linux/ ","username":"silasdavis","ts":"2018-03-12T10:25:28.666Z"}
{"msg":"Actually I'm trying to make 1000 request to put data in burrow chain in parallel. When my CPU utilisation is 10%-15% it runs normally but after the execution its CPU utilisation come to 50%-60% which remain the same then after and again when I try to make same 1000 request again on burrow chain the chain stops as shown in above image with the CPU utilisation 100%.","username":"gaurav94","ts":"2018-03-12T12:44:21.925Z"}
{"msg":"Has joined the channel.","username":"shiyj93","ts":"2018-03-13T02:39:29.890Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=R3ZKCmKdNQtnRYR2e) @gaurav94 I have the same problem on Monax 0.17 & 0.18, and something similar on the latest develop git version (see PascalVerlinden & my comment above). Made a plot that shows CPU usage of burrow as more contracts are created: https://plot.ly/~joeri.exelmans/1/ . As you are experiencing, CPU usage remains high even when you stop creating contracts. When CPU usage comes close to 100%, transactions become slower (from 1000 ms initially to >2000 ms).","username":"JoeriExelmans","ts":"2018-03-13T11:14:51.469Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=R3ZKCmKdNQtnRYR2e","url":"https://chat.hyperledger.org/channel/burrow?msg=R3ZKCmKdNQtnRYR2e","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"maya1982","ts":"2018-03-13T15:13:20.731Z","type":"uj"}
{"msg":"@PascalVerlinden @JoeriExelmans I have done some analysis on your issue: https://github.com/hyperledger/burrow/issues/713","username":"silasdavis","ts":"2018-03-13T23:51:56.386Z"}
{"msg":"I have been able to confirm it, and I think I have been able to provide a temporary fix","username":"silasdavis","ts":"2018-03-13T23:52:09.812Z"}
{"msg":"Has joined the channel.","username":"brian038","ts":"2018-03-14T15:26:54.524Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Valveware","ts":"2018-03-14T15:54:14.031Z","type":"uj"}
{"msg":"Hello everyone, I'm new here! If I understood correctly it's not currently possible to get started with Monax using MacOS or Windows, right? If I am running Linux is it best to try and get familiar with Monax or should I already be looking into the bosmarmot github?","username":"Valveware","ts":"2018-03-14T15:57:41.084Z"}
{"msg":"Bosmarmot still isn't stable, but we're getting there. I'd recommend starting with monax for tooling if you are looking to begin soonish. Bosmarmot won't be terribly different in terms of what it does and it's user interface, but under the hood is greatly improved. ","username":"compleatang","ts":"2018-03-14T17:13:28.599Z"}
{"msg":"While we have a disclaimer regarding osx, our smart contracts team all use osx and monax 0.18 along with \"native docker\" for osx and there do not seem to be any pressing issues. ","username":"compleatang","ts":"2018-03-14T17:14:30.231Z"}
{"msg":"Has joined the channel.","username":"jjjjpppp","ts":"2018-03-15T00:59:04.891Z","type":"uj"}
{"msg":"Alright that's great to hear! I'm trying to see if I can use monax and the burrow Blockchain for an internship research project. And the permission model seems exactly what I need for the use case I've been given. I've been trying to complete the getting started tutorial, I can get everything installed through homebrew. Then I created a monax docker with virtualbox. But after I run eval $(docker-machine env monax) every monax command returns exit status 1. Any chance you know what I'm doing wrong?","username":"Valveware","ts":"2018-03-15T08:02:57.224Z"}
{"msg":"Alright that's great to hear! I'm trying to see if I can use monax and the burrow Blockchain for an internship research project. And the permission model seems exactly what I need for the use case I've been given. I've been trying to complete the getting started tutorial, I can get everything installed through homebrew. Then I created a monax docker with virtualbox. But after I run eval $(docker-machine env monax) every monax command returns exit status 1. Any chance you know what I'm doing wrong? Is it easier to get Bosmarmot to work?","username":"Valveware","ts":"2018-03-15T08:02:57.224Z"}
{"msg":"Alright that's great to hear! I'm trying to see if I can use monax and the burrow Blockchain for an internship research project. And the permission model seems exactly what I need for the use case I've been given. I've been trying to complete the getting started tutorial, I can get everything installed through homebrew. Then I created a monax docker with virtualbox. But after I run eval $(docker-machine env monax) every monax command returns exit status 1. Any chance you know what I'm doing wrong? Is it easier to get Bosmarmot to work? \n\nEDIT: I think the issue was me naming the docker monax? It seems to be solved by naming it default, moving on! :sweat_smile:","username":"Valveware","ts":"2018-03-15T08:02:57.224Z"}
{"msg":"@Valveware if you want to just get the network up and running. You might be interested in my Kubernetes project: https://github.com/kubechain/kubechain/blob/master/docs/tutorials/burrow-on-minikube.md","username":"RobertDiebels","ts":"2018-03-15T12:44:22.677Z"}
{"msg":"It's very very pre-alpha so don't expect advanced stuff to be working just yet.","username":"RobertDiebels","ts":"2018-03-15T12:44:47.525Z"}
{"msg":"Also it's on 0.17.0 of Burrow and Silas told me a lot has changed in 0.18.0.","username":"RobertDiebels","ts":"2018-03-15T12:46:02.108Z"}
{"msg":"@RobertDiebels I will definitely check it out :smile: . My assignment's goal is to setup a private blockchain. After I have successfully chosen and setup a Blockchain there's the following use case. There are 3 roles: management, HR and employee. As a member of HR I must be able to deploy a file or a hash of that file , the file contains agreements and has to be signed by one of each roles. Only the three people part of said file can view it's contents. So after reading up on different platforms I think I can achieve this by using burrow, put the logic in smart contracts with monax in solidity and use a web frontend with metamask to have a user interface. :thinking:","username":"Valveware","ts":"2018-03-15T13:07:05.135Z"}
{"msg":"Hmm.. as of yet I don't have a complete framework that would allow you to talk with the network from outside the cluster. Nor do I have the scaffolding ready for you to create your own containers. I think you would need one of those to send messages to the network. Best to not use my setup right now than :D","username":"RobertDiebels","ts":"2018-03-15T13:11:10.336Z"}
{"msg":"It seems like an interesting project though, I'll follow it :relaxed: but first I'll see where monax/bos can get me ","username":"Valveware","ts":"2018-03-15T13:14:50.233Z"}
{"msg":"Thanks! And good luck :D","username":"RobertDiebels","ts":"2018-03-15T13:15:13.370Z"}
{"msg":"Thanks I'll need it :sweat_smile:","username":"Valveware","ts":"2018-03-15T13:18:41.564Z"}
{"msg":"@RobertDiebels that's neat. You can also refer to our helm charts which are in the main charts rwpo (for k8s) if that will be helpful to your cause. They're what we use internally at Monax.","username":"compleatang","ts":"2018-03-16T00:35:41.026Z"}
{"msg":"Has joined the channel.","username":"yopep","ts":"2018-03-16T05:56:38.743Z","type":"uj"}
{"msg":"@compleatang thanks :D . What kind PersistentVolumes do the charts use? Because I ran into a whole lot of trouble when combining Minikube, Virtualbox and HostPath-PV's (the only ones Minikube supports).","username":"RobertDiebels","ts":"2018-03-16T10:31:17.149Z"}
{"msg":"Has joined the channel.","username":"lkolisko","ts":"2018-03-16T11:56:54.403Z","type":"uj"}
{"msg":"Don't remember but should be configra able","username":"compleatang","ts":"2018-03-18T02:00:04.568Z"}
{"msg":"Has joined the channel.","username":"anshulkathuria34","ts":"2018-03-18T16:31:13.282Z","type":"uj"}
{"msg":"Burrow allows members to be validated in a permissioned network but at the same time, everyone else can view the transactions iff you dont setup a private blockchain. Ami Right?","username":"anshulkathuria34","ts":"2018-03-18T16:33:09.041Z"}
{"msg":"Has joined the channel.","username":"vahuja4","ts":"2018-03-19T05:44:14.456Z","type":"uj"}
{"msg":"Hi All, new to the blockchain world. Trying to get some hands-on experience using Monax. I followed the multi-node chain tutorial (https://monax.io/docs/chain-deploying/#step-1-create-cloud-machine) to set up a simple permissioned chain on AWS. Now, when I try to deploy a simple smart contract, the output json does not contain any transaction hash. `{\n  \"assertStorage\": \"\",\n  \"defaultAddr\": \"5CE6EED5C61E37E84959F1209318062620672E84\",\n  \"deployStorageK\": \"\",\n  \"queryStorage\": \"\",\n  \"setStorage\": \"\",\n  \"setStorageBase\": \"\"\n}\n`. Any pointers on how to debug this?","username":"vahuja4","ts":"2018-03-19T05:48:48.954Z"}
{"msg":"Hi All, new to the blockchain world. Trying to get some hands-on experience using Monax. I followed the multi-node chain tutorial (https://monax.io/docs/chain-deploying/#step-1-create-cloud-machine) to set up a simple permissioned chain on AWS. Now, when I try to deploy a simple smart contract, the output json does not contain any transaction hash. `{\n  \"assertStorage\": \"\",\n  \"defaultAddr\": \"5CE6EED5C61E37E84959F1209318062620672E84\",\n  \"deployStorageK\": \"\",\n  \"queryStorage\": \"\",\n  \"setStorage\": \"\",\n  \"setStorageBase\": \"\"\n}\n`. Any pointers on how to debug this?","username":"vahuja4","ts":"2018-03-19T05:48:48.954Z"}
{"msg":"I can see consensus messages being exchanged between the nodes:","username":"vahuja4","ts":"2018-03-19T05:51:36.965Z"}
{"msg":"INFO[03-19|05:50:39] Added to lastPrecommits: VoteSet{H:4762 R:0 T:2 +2/3:C1F6E73A2FD7A0C89307A3681D66374EA4EE1449:1:C4F15B5F5091 BA{4:XXXX} map[]} log_channel=Info run_id=e84ecaf1-2b29-11e8-8d2f-ed0b5fd035f2 trace=\"[capture.go:48 handler_go14.go:14 handler_go14.go:14 logger.go:109 logger.go:142 state.go:1396 state.go:1350 state.go:679 state.go:631 asm_amd64.s:2337]\" scope=Serve captured_logging_source=tendermint_log15 module=consensus\nDBUG[03-19|05:50:39] Broadcast                                log_channel=Trace run_id=e84ecaf1-2b29-11e8-8d2f-ed0b5fd035f2 trace=\"[capture.go:51 handler_go14.go:14 handler_go14.go:14 logger.go:109 logger.go:138 switch.go:348 reactor.go:331 reactor.go:308 events.go:141 events.go:178 events.go:144 events.go:135 events.go:157 state.go:1397 state.go:1350 state.go:679 state.go:631 asm_amd64.s:2337]\" scope=Serve captured_logging_source=tendermint_log15 module=p2p channel=20 msg=\"{ConsensusMessage:[HasVote VI:3 V:{4762/00/2} VI:3]}\"\nDBUG[03-19|05:50:39] Send                                     log_channel=Trace run_id=e84ecaf1-2b29-11e8-8d2f-ed0b5fd035f2 trace=\"[capture.go:51 handler_go14.go:14 handler_go14.go:14 logger.go:109 logger.go:138 connection.go:211 peer.go:233 switch.go:351 asm_amd64.s:2337]\" scope=Serve captured_logging_source=tendermint_log15 module=p2p channel=20 conn=MConn{52.10.7.235:56048} msg=\"{ConsensusMessage:[HasVote VI:3 V:{4762/00/2} VI:3]}\"\nDBUG[03-19|05:50:39] Write Msg Packet                         log_channel=Trace run_id=e84ecaf1-2b29-11e8-8d2f-ed0b5fd035f2 trace=\"[capture.go:51 handler_go14.go:14 handler_go14.go:14 logger.go:109 logger.go:138 connection.go:629 connection.go:374 connection.go:340 connection.go:307 asm_amd64.s:2337]\" scope=Serve captured_logging_source=tendermint_log15 module=p2p conn=MConn{52.10.7.235:56048} packet=\"MsgPacket{20:1502129A00020103 T:1}\"\nDBUG[03-19|05:50:39] Send                                     log_channel=Trace run_id=e84ecaf1-2b29-11e8-8d2f-ed0b5fd035f2 trace=\"[capture.go:51 handler_go14.go:14 handler_go14.go:14 logger.go:109 logger.go:138 connection.go:211 peer.go:233 switch.go:351 asm_amd64.s:2337]\" scope=Serve captured_logging_source=tendermint_log15 module=p2p channel=20 conn=MConn{35.163.223.169:46656} msg=\"{ConsensusMessage:[HasVote VI:3 V:{4762/00/2} VI:3]}\"\nDBUG[03-19|05:50:39] Send                                     log_channel=Trace run_id=e84ecaf1-2b29-11e8-8d2f-ed0b5fd035f2 trace=\"[capture.go:51 handler_go14.go:14 handler_go14.go:14 logger.go:109 logger.go:138 connection.go:211 peer.go:233 switch.go:351 asm_amd64.s:2337]\" scope=Serve captured_logging_source=tendermint_log15 module=p2p channel=20 conn=MConn{34.213.195.177:48714} msg=\"{ConsensusMessage:[HasVote VI:3 V:{4762/00/2} VI:3]}\"\nDBUG[03-19|05:50:39] Write Msg Packet                         log_channel=Trace run_id=e84ecaf1-2b29-11e8-8d2f-ed0b5fd035f2 trace=\"[capture.go:51 handler_go14.go:14 handler_go14.go:14 logger.go:109 logger.go:138 connection.go:629 connection.go:374 connection.go:340 connection.go:307 asm_amd64.s:2337]\" scope=Serve captured_logging_source=tendermint_log15 module=p2p conn=MConn{34.213.195.177:48714} packet=\"MsgPacket{20:1502129A00020103 T:1}\"\nDBUG[03-19|05:50:39] Write Msg Packet                         log_channel=Trace run_id=e84ecaf1-2b29-11e8-8d2f-ed0b5fd035f2 trace=\"[capture.go:51 handler_go14.go:14 handler_go14.go:14 logger.go:109 logger.go:138 connection.go:629 connection.go:374 connection.go:340 connection.go:307 asm_amd64.s:2337]\" scope=Serve captured_logging_source=tendermint_log15 module=p2p conn=MConn{35.163.223.169:46656} packet=\"MsgPacket{20:1502129A00020103 T:1}\"\n","username":"vahuja4","ts":"2018-03-19T05:52:18.310Z"}
{"msg":"But, nothing which indicates 'BLOCK CREATION'","username":"vahuja4","ts":"2018-03-19T05:52:34.767Z"}
{"msg":"*But, nothing which indicates 'BLOCK CREATION'*","username":"vahuja4","ts":"2018-03-19T05:52:34.767Z"}
{"msg":"Please ignore the above question: I got it to work","username":"vahuja4","ts":"2018-03-19T06:29:36.015Z"}
{"msg":"","username":"kevinstr","ts":"2018-03-19T13:47:25.100Z","attachments":[{"type":"file","title":"Clipboard - March 19, 2018 2:47 PM","title_link":"/file-upload/Bfov3e9Gr8vJgPy3W/Clipboard%20-%20March%2019,%202018%202:47%20PM","image_url":"/file-upload/Bfov3e9Gr8vJgPy3W/Clipboard%20-%20March%2019,%202018%202:47%20PM","image_type":"image/png","image_size":466225,"url":"/file-upload/Bfov3e9Gr8vJgPy3W/Clipboard%20-%20March%2019,%202018%202:47%20PM","remote":false,"fileId":"Bfov3e9Gr8vJgPy3W","fileName":"Clipboard - March 19, 2018 2:47 PM"}]}
{"msg":"anybody got an idea?","username":"kevinstr","ts":"2018-03-19T13:47:29.597Z"}
{"msg":"It happens when trying to add a string to an array in the contract via web3","username":"kevinstr","ts":"2018-03-19T13:47:44.299Z"}
{"msg":"sorry, it happens when getting a value from this array","username":"kevinstr","ts":"2018-03-19T13:49:54.137Z"}
{"msg":"Has joined the channel.","username":"canerbuga","ts":"2018-03-19T14:28:34.699Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=f4zAo5tykyCCyeLu7) @anshulkathuria34 yes, that's correct. anyone that can connect into the network to validate it can see the transactions.","username":"compleatang","ts":"2018-03-19T14:55:33.506Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=f4zAo5tykyCCyeLu7","url":"https://chat.hyperledger.org/channel/burrow?msg=f4zAo5tykyCCyeLu7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@kevinstr that's _usually_ a solidity error. not a very helpful one, but it's basically the way that solidity throws.","username":"compleatang","ts":"2018-03-19T14:56:52.519Z"}
{"msg":"Has joined the channel.","username":"kevinmcmahon","ts":"2018-03-19T17:41:08.250Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ck0316","ts":"2018-03-20T03:44:26.981Z","type":"uj"}
{"msg":"When setting up a chain, how does one distribute the private keys if --unsafe is not used? And what is the name registry? (users can have a permission to use the name registry)","username":"Valveware","ts":"2018-03-20T08:16:05.847Z"}
{"msg":"Has joined the channel.","username":"Benoit.R","ts":"2018-03-20T09:49:37.187Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ShikarSharma","ts":"2018-03-20T22:35:16.748Z","type":"uj"}
{"msg":"Getting this error when trying to use legacy-contracts.js to execute a smart contract: Burrow error:  Call of method \"toJSON\" with parameters 'server' responded with \"Method not found: burrow.toJSON\".","username":"vahuja4","ts":"2018-03-21T06:42:03.422Z"}
{"msg":"Getting this error when trying to use legacy-contracts.js to execute a smart contract: Burrow error:  *Call of method \"toJSON\" with parameters 'server' responded with \"Method not found: burrow.toJSON\".*","username":"vahuja4","ts":"2018-03-21T06:42:03.422Z"}
{"msg":"here is how my server.js looks like: ","username":"vahuja4","ts":"2018-03-21T06:43:12.532Z"}
{"msg":"`var contracts = require('@monax/legacy-contracts');\n\n// URL to the rpc endpoint of the Burrow server.\nvar burrowURL = \"http://localhost:1337/rpc\";\nvar accJson = require(\"./data.json\")\n\n//var contractManager = contracts.newContractManagerDev(burrowURL, accJson);\n\nvar myAbi = [{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"name\":\"retVal\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"}]\n\nvar contractAddress = accJson.address\n\nvar contractManager = contracts.newContractManagerDev(burrowURL, accJson);\n\n\nconsole.log(\"--cm--\", contractManager)\nvar myContractFactory = contractManager.newContractFactory(myAbi);\n`","username":"vahuja4","ts":"2018-03-21T06:43:15.940Z"}
{"msg":"I have the burrow server running on the same machine","username":"vahuja4","ts":"2018-03-21T06:44:04.368Z"}
{"msg":"Here is the output of `curl localhost:1337/network\n{\"client_version\":\"0.9.2\",\"moniker\":\"multichain_full_000\",\"listening\":true,\"listeners\":[],\"peers\":[{\"node_info\":{\"pub_key\":\"8F781BBA00150B89A3FF5AA6009D26CBBB3325FE43D4B9EA001E16239F0B501A\",\"moniker\":\"multichain_validator_002\",\"network\":\"multichain\",\"remote_addr\":\"35.164.145.9:46656\",\"listen_addr\":\"172.17.0.4:46656\",\"version\":\"0.9.2\",\"other\":[\"wire_version=0.6.1\",\"p2p_version=0.5.0\",\"consensus_version=v1/0.2.2\",\"rpc_version=0.7.0/3\",\"tx_index=off\",\"rpc_addr=\"]},\"is_outbound\":true},{\"node_info\":{\"pub_key\":\"A33B9C731A4AB851E6D4481899F979729FEB78DFC5246588892467D95E833156\",\"moniker\":\"multichain_validator_000\",\"network\":\"multichain\",\"remote_addr\":\"34.213.195.177:46656\",\"listen_addr\":\"172.17.0.4:46656\",\"version\":\"0.9.2\",\"other\":[\"wire_version=0.6.1\",\"p2p_version=0.5.0\",\"consensus_version=v1/0.2.2\",\"rpc_version=0.7.0/3\",\"tx_index=off\",\"rpc_addr=\"]},\"is_outbound\":true},{\"node_info\":{\"pub_key\":\"261693D883CF5569EEAA41A4530DA097FA9C86990C374D0F6D7B752326710E5C\",\"moniker\":\"multichain_validator_001\",\"network\":\"multichain\",\"remote_addr\":\"52.10.7.235:46656\",\"listen_addr\":\"172.17.0.4:46656\",\"version\":\"0.9.2\",\"other\":[\"wire_version=0.6.1\",\"p2p_version=0.5.0\",\"consensus_version=v1/0.2.2\",\"rpc_version=0.7.0/3\",\"tx_index=off\",\"rpc_addr=\"]},\"is_outbound\":true}]}`","username":"vahuja4","ts":"2018-03-21T06:47:37.153Z"}
{"msg":"Here is the output of `$curl localhost:1337/network`\n`{\"client_version\":\"0.9.2\",\"moniker\":\"multichain_full_000\",\"listening\":true,\"listeners\":[],\"peers\":[{\"node_info\":{\"pub_key\":\"8F781BBA00150B89A3FF5AA6009D26CBBB3325FE43D4B9EA001E16239F0B501A\",\"moniker\":\"multichain_validator_002\",\"network\":\"multichain\",\"remote_addr\":\"35.164.145.9:46656\",\"listen_addr\":\"172.17.0.4:46656\",\"version\":\"0.9.2\",\"other\":[\"wire_version=0.6.1\",\"p2p_version=0.5.0\",\"consensus_version=v1/0.2.2\",\"rpc_version=0.7.0/3\",\"tx_index=off\",\"rpc_addr=\"]},\"is_outbound\":true},{\"node_info\":{\"pub_key\":\"A33B9C731A4AB851E6D4481899F979729FEB78DFC5246588892467D95E833156\",\"moniker\":\"multichain_validator_000\",\"network\":\"multichain\",\"remote_addr\":\"34.213.195.177:46656\",\"listen_addr\":\"172.17.0.4:46656\",\"version\":\"0.9.2\",\"other\":[\"wire_version=0.6.1\",\"p2p_version=0.5.0\",\"consensus_version=v1/0.2.2\",\"rpc_version=0.7.0/3\",\"tx_index=off\",\"rpc_addr=\"]},\"is_outbound\":true},{\"node_info\":{\"pub_key\":\"261693D883CF5569EEAA41A4530DA097FA9C86990C374D0F6D7B752326710E5C\",\"moniker\":\"multichain_validator_001\",\"network\":\"multichain\",\"remote_addr\":\"52.10.7.235:46656\",\"listen_addr\":\"172.17.0.4:46656\",\"version\":\"0.9.2\",\"other\":[\"wire_version=0.6.1\",\"p2p_version=0.5.0\",\"consensus_version=v1/0.2.2\",\"rpc_version=0.7.0/3\",\"tx_index=off\",\"rpc_addr=\"]},\"is_outbound\":true}]}`","username":"vahuja4","ts":"2018-03-21T06:47:37.153Z"}
{"msg":"Has joined the channel.","username":"joaofguerreiro","ts":"2018-03-21T11:37:35.839Z","type":"uj"}
{"msg":"Hi guys, is there the possibility of developing a Burrow blockchain application that does not consume gas?","username":"joaofguerreiro","ts":"2018-03-21T11:38:04.161Z"}
{"msg":"Has joined the channel.","username":"jongchulseon","ts":"2018-03-21T12:33:57.023Z","type":"uj"}
{"msg":"@joaofguerreiro I have only just started looking into blockchain technology so my answer may not be correct. But as far as I understand is that in contrast to other Blockchains which use gas to 'pay' for transactions, hyperledger burrow uses gas just to make sure there are no infinite loops. In other blockchain technologies you need the gas to pay for the transaction while in burrow the appropriate amount of gas is distributed to the user so he can complete a transaction as long as he is permissioned to do so. This is how I interpreted it, I hope this source is valid [https://softjourn.com/blog/fabric-chaincode-vs-burrow-evm/]","username":"Valveware","ts":"2018-03-21T14:29:12.725Z"}
{"msg":"Helpful answer, thanks @Valveware ","username":"joaofguerreiro","ts":"2018-03-21T15:44:49.854Z"}
{"msg":"Do you happen to know why the project is so dead since last summer? It's too bad... I see so much potential in Burrow","username":"joaofguerreiro","ts":"2018-03-21T15:46:14.627Z"}
{"msg":"not dead :)","username":"silasdavis","ts":"2018-03-21T16:03:07.578Z"}
{"msg":"see develop branch: https://github.com/hyperledger/burrow/tree/develop","username":"silasdavis","ts":"2018-03-21T16:03:23.223Z"}
{"msg":"major refactor has been undertaken","username":"silasdavis","ts":"2018-03-21T16:03:41.471Z"}
{"msg":"I'm looking to make a release when possible but my focus is stabilising develop on our use case which should exercise the code significantly","username":"silasdavis","ts":"2018-03-21T16:04:11.077Z"}
{"msg":"oh my bad @silasdavis I was only looking at the master branch","username":"joaofguerreiro","ts":"2018-03-21T16:11:08.345Z"}
{"msg":"Keep up with the great work then :) ","username":"joaofguerreiro","ts":"2018-03-21T16:11:22.563Z"}
{"msg":"Any estimation for the release date? ","username":"joaofguerreiro","ts":"2018-03-21T16:11:31.452Z"}
{"msg":"@Valveware typically it is not ideal to distribute private keys unless one is talking about within a cluster. the name registry is a dead simple key:value storage that folks can use to register things. it's been a feature of burrow for ages but it's not heavily used","username":"compleatang","ts":"2018-03-21T23:45:50.191Z"}
{"msg":"Has joined the channel.","username":"floatware","ts":"2018-03-22T05:08:04.335Z","type":"uj"}
{"msg":"","username":"gaurav94","ts":"2018-03-22T05:53:27.878Z","attachments":[{"type":"file","title":"makeBuildOfDevelop.png","title_link":"/file-upload/KSMt3JNKaQAJXSmLe/makeBuildOfDevelop.png","image_url":"/file-upload/KSMt3JNKaQAJXSmLe/makeBuildOfDevelop.png","image_type":"image/png","image_size":346195,"url":"/file-upload/KSMt3JNKaQAJXSmLe/makeBuildOfDevelop.png","remote":false,"fileId":"KSMt3JNKaQAJXSmLe","fileName":"makeBuildOfDevelop.png"}]}
{"msg":"I get the above error when i take a pull of develop branch and make build","username":"gaurav94","ts":"2018-03-22T05:54:02.582Z"}
{"msg":"same with perfo branch","username":"gaurav94","ts":"2018-03-22T09:08:54.880Z"}
{"msg":"Thanks @compleatang that clears things up for me :slight_smile:","username":"Valveware","ts":"2018-03-22T10:00:51.107Z"}
{"msg":"Has left the channel.","username":"floatware","ts":"2018-03-22T21:03:29.372Z","type":"ul"}
{"msg":"Has joined the channel.","username":"brycebudd","ts":"2018-03-22T21:11:55.931Z","type":"uj"}
{"msg":"Has joined the channel.","username":"PrashantS","ts":"2018-03-23T03:15:09.447Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dexhunter","ts":"2018-03-23T05:38:45.603Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MrLongmire","ts":"2018-03-23T07:50:15.944Z","type":"uj"}
{"msg":"@gaurav94 upgrade to go 1.10","username":"silasdavis","ts":"2018-03-24T12:50:08.366Z"}
{"msg":"thnks @silasdavis ","username":"gaurav94","ts":"2018-03-26T03:57:53.181Z"}
{"msg":"can i use the chain which I have created using monax with 1 full account. If yes, can you guide me how to run that? Previously I was doing it through burrow serve --work-dir <path to config.toml and genesis.config>. But  now I'm not able to use burrow serve cmd with the perfo branch","username":"gaurav94","ts":"2018-03-26T05:14:04.949Z"}
{"msg":"Has joined the channel.","username":"chessequality","ts":"2018-03-26T07:12:27.916Z","type":"uj"}
{"msg":"Has joined the channel.","username":"KaranA 3","ts":"2018-03-26T09:54:33.877Z","type":"uj"}
{"msg":"I've been trying to setup a multinode chain and I think I am on the right path, however there seems to be an error. when looking at the logs they are having trouble connecting to each other the errors I am getting are Timed out, failed dealing address and error dealing seed . the explicit errors are \"dial tcp (ipaddress:46656: I/o timeout. Any clue to how I can fix this? I am using ubuntu 16.04 nodes deployed on azure ","username":"Valveware","ts":"2018-03-26T13:47:30.730Z"}
{"msg":"I've been trying to setup a multinode chain and I think I am on the right path, however there seems to be an error. when looking at the logs they are having trouble connecting to each other the errors I am getting are Timed out, failed dealing address and error dealing seed . the explicit errors are \"dial tcp (ipaddress:46656: I/o timeout. Any clue to how I can fix this? I am using ubuntu 16.04 nodes deployed on azure. I am following the multinode tutorial","username":"Valveware","ts":"2018-03-26T13:47:30.730Z"}
{"msg":"I've been trying to setup a multinode chain and I think I am on the right path, however there seems to be an error. when looking at the logs they are having trouble connecting to each other the errors I am getting are Timed out, failed dialing address and error dialing seed . the explicit errors are \"dial tcp (ipaddress:46656: I/o timeout. Any clue to how I can fix this? I am using ubuntu 16.04 nodes deployed on azure. I am following the multinode tutorial","username":"Valveware","ts":"2018-03-26T13:47:30.730Z"}
{"msg":"SOLUTION: open the ports :sweat_smile:","username":"Valveware","ts":"2018-03-26T14:18:44.746Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=SJFEkmfdA2KwA2QzJ) SOLUTION: open the ports 😅","username":"Valveware","ts":"2018-03-26T14:28:36.400Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=SJFEkmfdA2KwA2QzJ","url":"https://chat.hyperledger.org/channel/burrow?msg=SJFEkmfdA2KwA2QzJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"So I have now setup my blockchain, it has a full node and three validator nodes running in the cloud. How can I now start adding accounts? Do I add them through a smart contract? Do I need to write one myself or do I call an existing contract? If so, how? :thinking:","username":"Valveware","ts":"2018-03-27T06:43:14.295Z"}
{"msg":"@gaurav94 I think you need at least 3 validator nodes to run a chain, but I could be wrong. \n \nYou need to copy the matching account folders found in ~/.monax/chains/$YOURCHAINNAME/ to each node in the matching path. It contains a config.toml genesis.json and privileged_validator.json and privileged_validator.json\nRun this on the full node:\nmonax chains start $YOURCHAINNAME --init-dir ~/.monax/chains/full_000 --logrotate\n\n\nOn validator node 1:\nmonax chains start $YOURCHAINNAME --init-dir ~/.monax/chains/validator_000 --logrotate\n\n\nOn validator node 2:\nmonax chains start $YOURCHAINNAME --init-dir ~/.monax/chains/validator_001 --logrotate\n\nOn validator node 3:\nmonax chains start $YOURCHAINNAME --init-dir ~/.monax/chains/validator_002 --logrotate","username":"Valveware","ts":"2018-03-27T07:04:51.821Z"}
{"msg":"This i can do it using monax tooling @Valveware \nBut when I use the burrow develop  branch, I get the privilege of creating accounts using burrow command  *burrow spec --participant-accounts=1 --full-accounts=1 > genesis-spec.json* which create the genesis file.\nAfter that I need to run *burrow configure --genesis-spec=genesis-spec.json --validator-index=0 > burrow.toml* to generate toml file. In this toml file I can find my address and public key of generated account, but no where around I could see the private key to access the burrow chain over RPC","username":"gaurav94","ts":"2018-03-27T07:10:57.667Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=7yn4AGFEGgfCkPmfj) @gaurav94  Please correct me if I'm wrong but I THINK it should be possible to add accounts when the chain is already running without changing the genesis file. So a system 'admin' can add employees for example. I just can't find any information on HOW to do it though :confused:","username":"Valveware","ts":"2018-03-27T08:14:11.567Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=7yn4AGFEGgfCkPmfj","url":"https://chat.hyperledger.org/channel/burrow?msg=7yn4AGFEGgfCkPmfj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Even I'm afraid to do so... alternate to it I wrote my own smart contract to create account.","username":"gaurav94","ts":"2018-03-27T11:50:41.003Z"}
{"msg":"What is the command to show the transactions? Assuming this is possible.","username":"kevinstr","ts":"2018-03-27T17:37:35.961Z"}
{"msg":"Has joined the channel.","username":"dennis-bsi","ts":"2018-03-28T02:22:36.678Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sanjayjaiswal","ts":"2018-03-28T05:38:37.830Z","type":"uj"}
{"msg":"Hi team","username":"sanjayjaiswal","ts":"2018-03-28T05:39:12.174Z"}
{"msg":"https://github.com/hyperledger/burrow this repo I need  to setup in linux posiible???","username":"sanjayjaiswal","ts":"2018-03-28T05:41:05.542Z"}
{"msg":"@sanjayjaiswal  Yes it is possible see https://monax.io/docs/getting-started/","username":"Valveware","ts":"2018-03-28T05:47:30.193Z"}
{"msg":"is there any microservice for hyperledger burrow ???","username":"sanjayjaiswal","ts":"2018-03-28T05:48:17.644Z"}
{"msg":"@Valveware is there any microservice for hyperledger burrow ???","username":"sanjayjaiswal","ts":"2018-03-28T05:48:17.644Z"}
{"msg":"@Valveware maybe I need a microservice on hyperledger burrow. so is there repo of this.so I understand microservice on this","username":"sanjayjaiswal","ts":"2018-03-28T05:48:17.644Z"}
{"msg":"@Valveware maybe I need a microservice on hyperledger burrow. so is there repo of this.so I understand microservice on this","username":"sanjayjaiswal","ts":"2018-03-28T05:48:17.644Z"}
{"msg":"You can install burrow seperately but I have only used monax","username":"Valveware","ts":"2018-03-28T05:51:11.501Z"}
{"msg":"@Valveware maybe I need a microservice on hyperledger burrow. so is there repo of this.so I understand microservice on this","username":"sanjayjaiswal","ts":"2018-03-28T05:53:06.911Z"}
{"msg":"@Valveware maybe I need a microservice on hyperledger burrow. so is there repo of this.so I understand microservice on this","username":"sanjayjaiswal","ts":"2018-03-28T05:53:06.911Z"}
{"msg":"???","username":"sanjayjaiswal","ts":"2018-03-28T06:15:56.360Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=JWiuZ64B8dzNmJqgN) @kevinstr You don't mean monax chains logs -f , right? This seems to only show the blocks :thinking:","username":"Valveware","ts":"2018-03-28T06:46:36.453Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=JWiuZ64B8dzNmJqgN","url":"https://chat.hyperledger.org/channel/burrow?msg=JWiuZ64B8dzNmJqgN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=JWiuZ64B8dzNmJqgN) @kevinstr You don't mean monax chains logs $YOURCHAINNAME -f , right? This seems to only show the blocks :thinking:","username":"Valveware","ts":"2018-03-28T06:46:36.453Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=JWiuZ64B8dzNmJqgN","url":"https://chat.hyperledger.org/channel/burrow?msg=JWiuZ64B8dzNmJqgN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@Valveware maybe I need a microservice on hyperledger burrow. so is there repo of this.so I understand microservice on this","username":"sanjayjaiswal","ts":"2018-03-28T06:56:45.538Z"}
{"msg":"Hi all, We are going  lunch a private testnet with the develop branch, but as I tested the rpc on port 1337 is not ready yet, I wanted know when it will be ready and do you have any plan to move to Tendermint 17?","username":"pouladzade","ts":"2018-03-28T11:08:58.150Z"}
{"msg":"for now we can run the new burrow with the monax-keys , and already using the tendermint rpc ","username":"pouladzade","ts":"2018-03-28T11:10:23.782Z"}
{"msg":"no i mean the transactions, like \"address xxx to address yyy\"","username":"kevinstr","ts":"2018-03-28T12:09:59.512Z"}
{"msg":"Hi everyone! I have made an Ethereum application that requires 50 standard Ethereum transactions per second (given that one tx use 21 000 gas). Any idea of the corresponding feasibility of implementing this in a burrow chain? What is needed of computational power and bandwidth in order to achieve this scalability?","username":"fredrbl","ts":"2018-03-28T15:05:52.191Z"}
{"msg":"In general, any information about how the scalability varies with available computer power/bandwidth is useful!","username":"fredrbl","ts":"2018-03-28T15:05:57.986Z"}
{"msg":"Has joined the channel.","username":"KOttoni","ts":"2018-03-28T16:51:46.798Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=YpAobEGEK2Lxkr4G4) @pouladzade We probably won't have time to upgrade beyond 0.16 before we stabilize and release 0.18. We are finalizing the 1337 stuff now and making sure legacy-js test suite works. We hope to finalize the 0.18 release before end of next week.","username":"compleatang","ts":"2018-03-28T20:51:10.886Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=YpAobEGEK2Lxkr4G4","url":"https://chat.hyperledger.org/channel/burrow?msg=YpAobEGEK2Lxkr4G4","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ntuCSGwhpYhy3A7dm) @Valveware @gaurav94 to create accounts with the global default permissions just send the account a single token or use the monax pkgs suite to create Account. We have examples in the jobs_fixtures directory of the test suite within the monax repository (or bosmarmot).","username":"compleatang","ts":"2018-03-28T20:53:50.117Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ntuCSGwhpYhy3A7dm","url":"https://chat.hyperledger.org/channel/burrow?msg=ntuCSGwhpYhy3A7dm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=h7Jug6i5kpg8Bu3Zi) @fredrbl burrow is fast but such benchmarks are exceedingly hard to commit to because it all depends on the complexity of the contract call stack. ","username":"compleatang","ts":"2018-03-28T20:55:07.600Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=h7Jug6i5kpg8Bu3Zi","url":"https://chat.hyperledger.org/channel/burrow?msg=h7Jug6i5kpg8Bu3Zi","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=wvztTmQH7cMLnZjCS) @kevinstr this is not queryable from burrow. Blockchains are better thought of as event logs than traditional databases. The solution to this problem is to pipe information into traditional db to enable advanced queries.","username":"compleatang","ts":"2018-03-28T20:57:09.869Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=wvztTmQH7cMLnZjCS","url":"https://chat.hyperledger.org/channel/burrow?msg=wvztTmQH7cMLnZjCS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=sJ4RykDKwPPeRhcs9) @compleatang ","username":"gaurav94","ts":"2018-03-29T04:02:59.537Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=sJ4RykDKwPPeRhcs9","url":"https://chat.hyperledger.org/channel/burrow?msg=sJ4RykDKwPPeRhcs9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=sJ4RykDKwPPeRhcs9) @compleatang \nSending token to that newly generated address gives us error in return saying the account doesn't exist.. :(","username":"gaurav94","ts":"2018-03-29T04:04:13.463Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=sJ4RykDKwPPeRhcs9","url":"https://chat.hyperledger.org/channel/burrow?msg=sJ4RykDKwPPeRhcs9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@compleatang  Another query I have:\nwhen I use the burrow develop branch, I get the privilege of starting my chain  using burrow command *burrow spec --participant-accounts=1 --full-accounts=1 > genesis-spec.json* which create the genesis file.\nAfter that I need to run *burrow configure --genesis-spec=genesis-spec.json --validator-index=0 > burrow.toml* to generate toml file. In this toml file I can find my address and public key of generated account, but no where around I could see the private key to access the burrow chain over RPC :( Where would I get my private key of the respective accounts, so that I can create my manager object using legacy-contract in nodejs??","username":"gaurav94","ts":"2018-03-29T04:09:00.107Z"}
{"msg":"Has joined the channel.","username":"jaswanth","ts":"2018-03-29T04:16:48.686Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ZPDCEO","ts":"2018-03-29T06:28:02.993Z","type":"uj"}
{"msg":"Thanks @compleatang ! I will check out the jobs in the test suite, I didn't think about looking in there :face_palm: . Next step for me is setting up accounts and their roles. Then I will need to look into seeing if I can hook it all up to a frontend.","username":"Valveware","ts":"2018-03-29T07:10:33.067Z"}
{"msg":"@gaurav94 Hey have you checked out the known chain making tutorial? I know this concerns the monax platform and not the hyperledger burrow directly. BUT as far as I understood an address is the hash of a public key, so if you generate your own pub-priv key pairs you can put the address and the public key in the genesis file, and keep the private key for your RPC calls. Could this be a solution to your problem? :thinking:","username":"Valveware","ts":"2018-03-29T07:13:20.988Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=7Donzm6JFwav55xio) @compleatang Thank you","username":"pouladzade","ts":"2018-03-29T09:31:25.125Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=7Donzm6JFwav55xio","url":"https://chat.hyperledger.org/channel/burrow?msg=7Donzm6JFwav55xio","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi i want to setup hyperledger/burrow on ubuntu linux?\n\nanyone help","username":"sanjayjaiswal","ts":"2018-03-29T11:11:28.143Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE) @sanjayjaiswal  See Installation: (master branch) https://github.com/hyperledger/burrow/blob/master/README.md ; (develop branch) https://github.com/hyperledger/burrow/blob/develop/README.md\n\nFor the monax tooling platform: https://github.com/monax/monax\nFor bosmarmot tools: https://github.com/monax/bosmarmot\n\nSee Introductory curriculum here: https://wiki.hyperledger.org/projects/burrow/roadmap_2018_q1","username":"Valveware","ts":"2018-03-29T12:01:50.561Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE","url":"https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE) @sanjayjaiswal  \nSee Installation: (master branch) https://github.com/hyperledger/burrow/blob/master/README.md ; (develop branch) https://github.com/hyperledger/burrow/blob/develop/README.md\n\nFor the monax tooling platform: https://github.com/monax/monax\nFor bosmarmot tools: https://github.com/monax/bosmarmot\n\nSee Introductory curriculum here: https://wiki.hyperledger.org/projects/burrow/roadmap_2018_q1","username":"Valveware","ts":"2018-03-29T12:01:50.561Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE","url":"https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE) @sanjayjaiswal  \nSee Installation: \n(master branch) https://github.com/hyperledger/burrow/blob/master/README.md ; \n(develop branch) https://github.com/hyperledger/burrow/blob/develop/README.md\n\nFor the monax tooling platform: https://github.com/monax/monax\nFor bosmarmot tools: https://github.com/monax/bosmarmot\n\nSee Introductory curriculum here: https://wiki.hyperledger.org/projects/burrow/roadmap_2018_q1","username":"Valveware","ts":"2018-03-29T12:01:50.561Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE","url":"https://chat.hyperledger.org/channel/burrow?msg=E73MYuXxiMH4AoafE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@compleatang Thank you for the answer. So it's not possible to view transactions at all in Burrow?","username":"kevinstr","ts":"2018-03-29T12:39:15.357Z"}
{"msg":"Kevin, you can pull specific blocks which give you the tx'es. Here are the endpoints available on master.\n\n```\nAvailable endpoints:\nhttp://localhost:46657/chain_id\nhttp://localhost:46657/dump_consensus_state\nhttp://localhost:46657/genesis\nhttp://localhost:46657/list_accounts\nhttp://localhost:46657/list_names\nhttp://localhost:46657/list_unconfirmed_txs\nhttp://localhost:46657/list_validators\nhttp://localhost:46657/net_info\nhttp://localhost:46657/status\nhttp://localhost:46657/unsafe/gen_priv_account\n\nEndpoints that require arguments:\nhttp://localhost:46657/blockchain?minHeight=_&maxHeight=_\nhttp://localhost:46657/broadcast_tx?tx=_\nhttp://localhost:46657/call?fromAddress=_&toAddress=_&data=_\nhttp://localhost:46657/call_code?fromAddress=_&code=_&data=_\nhttp://localhost:46657/dump_storage?address=_\nhttp://localhost:46657/get_account?address=_\nhttp://localhost:46657/get_block?height=_\nhttp://localhost:46657/get_name?name=_\nhttp://localhost:46657/get_storage?address=_&key=_\nhttp://localhost:46657/subscribe?eventId=_\nhttp://localhost:46657/unsafe/sign_tx?tx=_&privAccounts=_\nhttp://localhost:46657/unsubscribe?subscriptionId=_\n```","username":"compleatang","ts":"2018-03-29T13:28:58.290Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=QWSaDhwkX3EgC7vzh) @gaurav94 burrow develop is in the late stages of stabilizing after it's massive refactor. We are changing how the js libs will connect to burrow such that burrow's connection to the key server will conduct the signing. So when this stabilizes early next week you won't use your private key in the js libs but rather will just send the address to sign from. Give us a few more days to finish stabilizing and it'll all be usable.","username":"compleatang","ts":"2018-03-29T13:31:39.854Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=QWSaDhwkX3EgC7vzh","url":"https://chat.hyperledger.org/channel/burrow?msg=QWSaDhwkX3EgC7vzh","remote":true,"fileId":null,"fileName":null}]}
{"msg":"is there any database for burrow?\n","username":"sanjayjaiswal","ts":"2018-03-29T13:59:52.558Z"}
{"msg":"compleatang","username":"tkuhrt","ts":"2018-03-29T16:04:21.639Z","type":"subscription-role-added"}
{"msg":"Has joined the channel.","username":"kpbird","ts":"2018-03-30T03:30:39.760Z","type":"uj"}
{"msg":"is there any database config for burrow?\n\n","username":"sanjayjaiswal","ts":"2018-03-30T11:09:14.769Z"}
{"msg":"@gaurav94 $HOME/.monax/keys/data/","username":"snowy13","ts":"2018-03-30T12:49:04.191Z"}
{"msg":"Thanks Tracey","username":"compleatang","ts":"2018-03-30T15:23:27.278Z"}
{"msg":"Thanks Tracy","username":"compleatang","ts":"2018-03-30T15:23:27.278Z"}
{"msg":"Has joined the channel.","username":"ousooners2834","ts":"2018-03-30T16:20:18.002Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Pan0ptic","ts":"2018-03-30T16:27:50.763Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MikeCohen","ts":"2018-03-30T18:51:35.022Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=nKGfuH8qtzS2tmejE) @compleatang \nThanks  :)","username":"gaurav94","ts":"2018-03-31T05:41:43.974Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=nKGfuH8qtzS2tmejE","url":"https://chat.hyperledger.org/channel/burrow?msg=nKGfuH8qtzS2tmejE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=gBKNXdcBcmKrWmHXc) @snowy13 \nThis goes again with monax.... I'm trying without monax","username":"gaurav94","ts":"2018-03-31T05:42:20.027Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=gBKNXdcBcmKrWmHXc","url":"https://chat.hyperledger.org/channel/burrow?msg=gBKNXdcBcmKrWmHXc","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"thalisson","ts":"2018-04-01T02:38:43.762Z","type":"uj"}
{"msg":"@gaurav94 So you're not running the monax/key server?","username":"snowy13","ts":"2018-04-01T15:28:15.967Z"}
{"msg":"Has joined the channel.","username":"thangnv","ts":"2018-04-02T09:46:27.506Z","type":"uj"}
{"msg":"Hi I'm trying to play around with burrow evm source code, but I can not figure out how to deploy smart contract into app state","username":"thangnv","ts":"2018-04-02T09:54:15.258Z"}
{"msg":"Hi I'm trying to play around with burrow evm source code, but I can not figure out how to deploy smart contract into app state from solc bin file","username":"thangnv","ts":"2018-04-02T09:54:15.258Z"}
{"msg":"```func main() {\n\tappState := NewAppState()\n\tcaller := appState.CreateAccount(new(vm.Account))\n\tcaller.Balance = 1000000000\n\tappState.UpdateAccount(caller)\n\n\tcode, err := ioutil.ReadFile(\"target/greeter.bin\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tevm := vm.NewVM(\n\t\tappState,\n\t\tvm.DefaultDynamicMemoryProvider,\n\t\tvm.Params{GasLimit: math.MaxInt64},\n\t\tcaller.Address,\n\t\t[]byte{},\n\t)\n\n\tcallee := appState.CreateAccount(caller)\n\tvar gas int64 = 1000000000\n\tret, err := evm.Call(caller, callee, code, code, 0, &gas)\n\tif err != nil {\n\t\tpanic(fmt.Errorf(\"failed to call: %v\", err.Error()))\n\t}\n\tfmt.Printf(\"\\nlen=%v ret=%v gas=%v\", len(ret), hex.EncodeToString(ret), gas)\n\tfmt.Printf(\"\\ncallee.Balance=%v\", appState.GetAccount(callee.Address).Balance)\n\tfmt.Printf(\"\\ncallee.Code=%v\", len(appState.GetAccount(callee.Address).Code))\n\tfmt.Printf(\"\\ncaller.Balance=%v\", appState.GetAccount(caller.Address).Balance)\n}```","username":"thangnv","ts":"2018-04-02T09:55:05.862Z"}
{"msg":"this is my sample code I tried as I followed other part in source code","username":"thangnv","ts":"2018-04-02T09:55:37.772Z"}
{"msg":"Can anyone help me with this thing? Thanks.","username":"thangnv","ts":"2018-04-02T09:56:07.782Z"}
{"msg":"Has joined the channel.","username":"audreyle","ts":"2018-04-02T17:11:50.441Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ThangDC","ts":"2018-04-03T07:19:01.330Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AnshulPadyal","ts":"2018-04-03T10:46:00.878Z","type":"uj"}
{"msg":"Has joined the channel.","username":"andreamagagna","ts":"2018-04-03T13:18:51.015Z","type":"uj"}
{"msg":"Hi everyone! I'm new at this project... I wanted to ask you if you have ever been in this situation:\nI'm trying to make rpc-json calls on the blockchain, and when I put the \"broadcast_tx\" method it gets this error:\n```\n{\"jsonrpc\":\"2.0\",\"id\":\"\",\"result\":null,\"error\":\"Error converting http params to args: Expected type [Byte,?] but got type map[string]interface {}\"}\n```","username":"andreamagagna","ts":"2018-04-03T13:21:02.193Z"}
{"msg":"Does anyone know the reason?","username":"andreamagagna","ts":"2018-04-03T13:23:31.916Z"}
{"msg":"this might help: https://github.com/hyperledger/burrow/blob/master/docs/specs/api.md#formatting-conventions","username":"snowy13","ts":"2018-04-03T15:15:13.867Z"}
{"msg":"Can you show us how the call is formulated?","username":"snowy13","ts":"2018-04-03T15:15:42.067Z"}
{"msg":"Thanks @snowy13 I'm looking at that documentation... I've just found out I was making mistakes on the port","username":"andreamagagna","ts":"2018-04-03T15:53:30.857Z"}
{"msg":"But I've not solved the issue... now the error is this:\n```\n{\"error\":{\"code\":-32603,\"message\":\"Error broadcasting transaction: Internal error: Error invalid address\"},\"id\":\"1\",\"jsonrpc\":\"2.0\"}\n```","username":"andreamagagna","ts":"2018-04-03T15:55:13.320Z"}
{"msg":"The call is written in C#:\n```/*\n              public class CallTx\n            {\n            public string priv_key { get; set; }\n            public string data { get; set; }\n            public string address { get; set; }\n            public double fee { get; set; }\n            public double gas_limit { get; set; }\n            }\n              */\n            CallTx transaction = new CallTx()\n            {\n                priv_key = \"68D30E29CFF4657CAF2C0F51202F5A88F4567F64D1346BE73FF55F4A3E8F9CAD3FE162DBEE6A16A0CA656E74DEF0222FF92FC31020CA427EDB7D62C1B1B0293A\",\n                data = \"6369616F\",\n                address = \"37438860845C5C26B5709D820E93281D87B96D04\",\n                fee = 0.1,\n                gas_limit = 30000\n            };\n\n            string output = JsonConvert.SerializeObject(transaction);\n            var httpWebRequest = (HttpWebRequest)WebRequest.Create(nodeURL);\n            httpWebRequest.ContentType = \"application/json\";\n            httpWebRequest.Method = \"POST\";\n\n            using (\n                var streamWriter = new StreamWriter(httpWebRequest.GetRequestStream()))\n            {\n                string json = \"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"burrow.transact\\\",\\\"params\\\":\" + output + \",\\\"id\\\":\\\"1\\\"}\";\n\n                Console.WriteLine(json);\n                streamWriter.Write(json);\n                streamWriter.Flush();\n                streamWriter.Close();\n            }\n\n\n            var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();\n            using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))\n            {\n                var result = streamReader.ReadToEnd();\n                return result;\n            }```","username":"andreamagagna","ts":"2018-04-03T15:56:47.644Z"}
{"msg":"Has left the channel.","username":"joaofguerreiro","ts":"2018-04-03T18:20:05.881Z","type":"ul"}
{"msg":"Has joined the channel.","username":"cditzler","ts":"2018-04-03T21:18:31.564Z","type":"uj"}
{"msg":"Good morning guys, I've just managed to broadcast a transaction... now, how can i decode tha block data?","username":"andreamagagna","ts":"2018-04-04T09:56:20.269Z"}
{"msg":"Hi. Is there a comprehensive feature comparison of Burrow vs. Quorum? ","username":"cditzler","ts":"2018-04-04T12:14:36.021Z"}
{"msg":"Also, can we use Truffle with Burrow? Is there a similar tool?","username":"cditzler","ts":"2018-04-04T12:18:38.232Z"}
{"msg":"Found web3 and tooling are not currently supported; on the 2018 roadmap: https://wiki.hyperledger.org/projects/burrow/roadmap_2018_q1","username":"cditzler","ts":"2018-04-04T13:03:59.622Z"}
{"msg":"Has left the channel.","username":"zachgoll","ts":"2018-04-04T21:34:13.683Z","type":"ul"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=nKGfuH8qtzS2tmejE) @compleatang Please update us with this changes... It will be really helpfull to us....","username":"gaurav94","ts":"2018-04-05T06:08:51.538Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=nKGfuH8qtzS2tmejE","url":"https://chat.hyperledger.org/channel/burrow?msg=nKGfuH8qtzS2tmejE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"","username":"gaurav94","ts":"2018-04-05T06:32:13.824Z","attachments":[{"type":"file","title":"peerError.png","title_link":"/file-upload/mvcCh3AcJGqecMfaZ/peerError.png","image_url":"/file-upload/mvcCh3AcJGqecMfaZ/peerError.png","image_type":"image/png","image_size":673482,"url":"/file-upload/mvcCh3AcJGqecMfaZ/peerError.png","remote":false,"fileId":"mvcCh3AcJGqecMfaZ","fileName":"peerError.png"}]}
{"msg":" I am looking to peer the node on my local machine","username":"gaurav94","ts":"2018-04-05T06:32:32.931Z"}
{"msg":"changes the seed port to 50001","username":"gaurav94","ts":"2018-04-05T06:32:47.057Z"}
{"msg":"Any help?","username":"gaurav94","ts":"2018-04-05T06:32:52.207Z"}
{"msg":"Has joined the channel.","username":"ravipatisivaramaprasad","ts":"2018-04-05T07:20:57.312Z","type":"uj"}
{"msg":"@compleatang I think you provided me with a link to some Burrow Helm charts. I have a question on those. Did you test deploying on AWS? If so, what provisioning are you using? Dynamic or static? If dynamic, which provisioner are you using?","username":"RobertDiebels","ts":"2018-04-05T11:46:32.405Z"}
{"msg":"@compleatang I think you provided me with a link to some Burrow Helm charts a while ago. I have a question on those. Did you test deploying on AWS? If so, what provisioning are you using? Dynamic or static? If dynamic, which provisioner are you using?","username":"RobertDiebels","ts":"2018-04-05T11:46:32.405Z"}
{"msg":"I'm running into some issues with dynamic provisioning of AWS EBS volumes and I really don't want to create the volumes manually.","username":"RobertDiebels","ts":"2018-04-05T11:47:03.738Z"}
{"msg":"I'm considering using Open-EBS as an alternative. I wanted to use EFS but that would require manual creation and it's not free-tier eligible.","username":"RobertDiebels","ts":"2018-04-05T11:48:48.628Z"}
{"msg":"The reason I'm asking is because I ran into an issue with goleveldb crashing on Hostpath volumes due to some low-level issue.","username":"RobertDiebels","ts":"2018-04-05T11:51:10.800Z"}
{"msg":"And I believe Open-EBS uses a the hostpath `/var/openebs/*` to do it's provisioning on each node.","username":"RobertDiebels","ts":"2018-04-05T11:51:38.088Z"}
{"msg":"If you got it working on AWS I'd love to know.","username":"RobertDiebels","ts":"2018-04-05T11:52:06.408Z"}
{"msg":"Has joined the channel.","username":"kpkrish","ts":"2018-04-05T13:29:12.457Z","type":"uj"}
{"msg":"@RobertDiebels haven't tested on AWS, but dynamic provisioning of the PVCs works without any issue on GCE which we use. What your describing sounds like a problem between k8s and AWS rather than any problem with the charts. Unless you have a range of specialized storage provisioners set up I've never seen the issues that you've described. We migrated from AWS to GCE about 4 months ago, but before that we used prior versions of various charts, including what we eventually open sourced for the burrow charts. Those charts on AWS used dynamic PVC provisioning vis EBS and I never ran into any issues. That said we were pretty stock all the way down in that regard. Admittedly k8s storage provisioning has changed drastically since then as well... ","username":"compleatang","ts":"2018-04-05T14:48:55.442Z"}
{"msg":"The burrow chart is in kubernetes/charts/stable on GH. ","username":"compleatang","ts":"2018-04-05T14:49:12.239Z"}
{"msg":"https://github.com/kubernetes/charts/tree/master/stable/burrow","username":"compleatang","ts":"2018-04-05T14:49:57.021Z"}
{"msg":"@compleatang \n\"works without any issue on GCE\"\nThank you! I might switch to GCE than for my project.\n\n\"sounds like a problem between k8s and AWS\"\nCorrect. More precisely this issue: https://github.com/kubernetes/kubernetes/issues/45726\n\n\"Unless you have a range of specialized storage provisioners\"\nI'm using the default `aws-ebs` provisioner. To date I have no idea what's wrong but the issue I mentioned earlier has existed for almost a year now.\n\nThanks for the response! Glad to know the charts are ok. I'll give them a try on AWS. Will let you know if I run into anything.","username":"RobertDiebels","ts":"2018-04-06T10:09:26.665Z"}
{"msg":"cool.","username":"compleatang","ts":"2018-04-06T15:09:59.172Z"}
{"msg":"Is it possible now to make a frontend using RPC/web3 for the develop branch?","username":"Valveware","ts":"2018-04-09T05:47:47.953Z"}
{"msg":"In an ecosystem containing 3 validator nodes and 1 sergeant/full node. What would be a good way to store encrypted textiles","username":"Valveware","ts":"2018-04-09T14:13:15.931Z"}
{"msg":"In an ecosystem containing 3 validator nodes and 1 sergeant/full node. What would be a good way to store encrypted textfiles? Linking one or more nodes to a mongodb? Or just storing the encrypted data on the Blockchain? What would you guys do?","username":"Valveware","ts":"2018-04-09T14:13:15.931Z"}
{"msg":"In an ecosystem containing 3 validator nodes and 1 sergeant/full node. What would be a good way to store encrypted textfiles? Linking one or more nodes to a mongodb? Or just storing the encrypted data on the Blockchain? What would you guys do? The goal is to have the file approved by 3 invitees and to make sure it's not able to change anymore. So the immutability of Blockchain would have to come into play somewhere...","username":"Valveware","ts":"2018-04-09T14:13:15.931Z"}
{"msg":"Has joined the channel.","username":"cliveb","ts":"2018-04-09T18:58:11.693Z","type":"uj"}
{"msg":"Has joined the channel.","username":"harishperfect","ts":"2018-04-09T23:54:44.342Z","type":"uj"}
{"msg":"Has joined the channel.","username":"varinder","ts":"2018-04-10T05:47:51.167Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nicovalencia","ts":"2018-04-10T16:52:09.932Z","type":"uj"}
{"msg":"Current develop branch does not support web3 although we'd welcome contributions in that direction. I'd recommend checking out ipfs for your file storage challenge. We've used it heavily for a long time m","username":"compleatang","ts":"2018-04-10T17:37:35.867Z"}
{"msg":"Has joined the channel.","username":"Rekha","ts":"2018-04-11T05:27:15.325Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB) @compleatang Thanks I'll check out ipfs! Does this mean ut is currently not possible to make a frontend in combination with hyperledger burrow?","username":"Valveware","ts":"2018-04-11T05:46:56.225Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB","url":"https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB) @compleatang Thanks I'll check out ipfs! Does this mean it is currently not possible to make a frontend in combination with hyperledger burrow?","username":"Valveware","ts":"2018-04-11T05:46:56.225Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB","url":"https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I am at beginner level trying Hyperledger-Burrow. I followed official github link of burrow to install and followed monax official doc to create chains, also written smart contracts with solidity and deployed it using `monax pkgs do ..`. But I have a doubt of how to create a block and how to make a transaction in Burrow? Please give your suggestions on this.","username":"Rekha","ts":"2018-04-11T05:50:23.553Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB) @compleatang  We are ready for contributing on the web3, but I think the RPC layer of the Burrow also need to be compatible with the web3 like API","username":"pouladzade","ts":"2018-04-11T06:07:15.015Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB","url":"https://chat.hyperledger.org/channel/burrow?msg=WrYvfHymHzZGpcAXB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"actually implementing web3 for burrow is very important for us, but since the 1337 is not ready in the develop branch we can't decide about it","username":"pouladzade","ts":"2018-04-11T06:09:44.870Z"}
{"msg":"Hi @compleatang  I guess the signing thing is resolved for rpc. But i'm yet facing the issue for signing through RPC. I am passing {\"address\": \"F1EB764DC85C29D91A5F64CC23D8958149A19C31\",\n    \"pubKey\": \"D486F924AFA99084DA8234CB2C411BD5A29236AA646D476B4783ECC57E3FD665\",\n    \"privKey\": \"\"}\nin this format. Since I'm not getting any private key generated when I start the chain, so I'm passing it empty.\nError getting in return is:\n","username":"gaurav94","ts":"2018-04-12T06:59:37.391Z"}
{"msg":"","username":"gaurav94","ts":"2018-04-12T06:59:58.544Z","attachments":[{"type":"file","title":"signingRPC.png","title_link":"/file-upload/d8jb8vKWtPBaTygKB/signingRPC.png","image_url":"/file-upload/d8jb8vKWtPBaTygKB/signingRPC.png","image_type":"image/png","image_size":262619,"url":"/file-upload/d8jb8vKWtPBaTygKB/signingRPC.png","remote":false,"fileId":"d8jb8vKWtPBaTygKB","fileName":"signingRPC.png"}]}
{"msg":"I'm using develop branch ","username":"gaurav94","ts":"2018-04-12T07:00:54.550Z"}
{"msg":"Has joined the channel.","username":"zigen 1","ts":"2018-04-12T08:51:34.794Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yxnl","ts":"2018-04-12T15:04:32.119Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MaheshBalan_Pravici","ts":"2018-04-12T16:25:30.655Z","type":"uj"}
{"msg":"Has joined the channel.","username":"lvzewen","ts":"2018-04-15T14:10:39.748Z","type":"uj"}
{"msg":"Hi all, I have a question on how to debug the transactions made in Burrow?","username":"Rekha","ts":"2018-04-17T05:33:26.621Z"}
{"msg":"Has joined the channel.","username":"SanjayOjha","ts":"2018-04-17T10:08:11.874Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=mfucjbNyEDQpwd54L) @pouladzade It's stable now...","username":"compleatang","ts":"2018-04-17T20:08:09.357Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=mfucjbNyEDQpwd54L","url":"https://chat.hyperledger.org/channel/burrow?msg=mfucjbNyEDQpwd54L","remote":true,"fileId":null,"fileName":null}]}
{"msg":"well its stable on develop. all our JS tests pass","username":"compleatang","ts":"2018-04-17T20:08:22.360Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=sZjA3RSXjrdnsbCsG) @Valveware It is typically an anti-pattern to directly connect front ends to the chain. We highly recommend running through a middleware server. In which case it is very easy to connect burrow.","username":"compleatang","ts":"2018-04-17T20:09:16.045Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=sZjA3RSXjrdnsbCsG","url":"https://chat.hyperledger.org/channel/burrow?msg=sZjA3RSXjrdnsbCsG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=MhPSEwFvANisfFfeK) @Rekha block creation happens automatically as long as your chain is running. if you want to make a transaction you have a number of options. the easiest is to leverage the monax pkgs do 's yaml interface to set up your chain and then leverage burrow's javascript libraries to build middleware","username":"compleatang","ts":"2018-04-17T20:10:32.555Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=MhPSEwFvANisfFfeK","url":"https://chat.hyperledger.org/channel/burrow?msg=MhPSEwFvANisfFfeK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=hvXWuvGDDPLnrxNcC) @gaurav94 that won't work, you need to either only give it the address or give it the private key. Use monax services exec keys -- monax-keys convert --addr $ADDR to convert the private key into the correct encoding for that json file.","username":"compleatang","ts":"2018-04-17T20:12:07.649Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=hvXWuvGDDPLnrxNcC","url":"https://chat.hyperledger.org/channel/burrow?msg=hvXWuvGDDPLnrxNcC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@compleatang Could you give an example of such a middleware server? :thinking_face: ","username":"Valveware","ts":"2018-04-18T05:49:39.693Z"}
{"msg":"Has left the channel.","username":"andreamagagna","ts":"2018-04-18T07:16:54.829Z","type":"ul"}
{"msg":"@compleatang , Thanks for your suggestion. \n\nI followed the monax official doc https://monax.io/docs/getting-started/ \nand tried `monax pkgs do` with one chain and output is as follows\n```$ monax pkgs do --chain advchain --address $addr\n\n*****Executing Job*****\n\nJob Name                                      defaultAddr\n```\n\nThe content of output json file is \n\n```\n$ cat epm.output.json \n{\n  \"assertStorage\": \"\",\n  \"defaultAddr\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"deployStorageK\": \"\",\n  \"queryStorage\": \"\",\n  \"setStorage\": \"\",\n  \"setStorageBase\": \"\"\n}\n```\nI am unable to see the execution output for the jobs(i.e assertStorage, deployStorageK...) defined in epm.yaml file.","username":"Rekha","ts":"2018-04-18T10:18:41.276Z"}
{"msg":"@compleatang , the isuue got resolved with the link https://ethereum.stackexchange.com/questions/31956/monax-issue-in-executing-job-configuration-file/","username":"Rekha","ts":"2018-04-18T10:42:07.983Z"}
{"msg":"Is it possible to update monax/burrow, I think I've got quite a buggy version","username":"kevinstr","ts":"2018-04-19T10:16:12.565Z"}
{"msg":"Hey guys, could anyone tell me what the right permission value is for creating a SendTx?","username":"RobertDiebels","ts":"2018-04-19T14:58:34.732Z"}
{"msg":"Kevinstr, you can use develop branch if you want, if you have a bug you can identify we'd love a report on it, but we're just finalizing and stabilizing for thr next release of burrow now. ","username":"compleatang","ts":"2018-04-19T19:07:13.104Z"}
{"msg":"Valve, typically folks build REST API server's in node that use the js libraries and then provide a restful interface for front end apps.","username":"compleatang","ts":"2018-04-19T19:08:17.222Z"}
{"msg":"Robert, I'm not sure. What branch of burrow are you using? ","username":"compleatang","ts":"2018-04-19T19:09:15.043Z"}
{"msg":"@RobertDiebels it's `Send` which is 2 i.e. the second bit in the binary representation of the permission bitset: 0b10","username":"silasdavis","ts":"2018-04-19T20:25:27.313Z"}
{"msg":"`burrow spec` can help with this:  \n```\n$> burrow spec -f1 -p1                               \n{                                                    \n\t\"Accounts\": [\n\t\t{\n\t\t\t\"Amount\": 99999999999999,\n\t\t\t\"AmountBonded\": 9999999999,\n\t\t\t\"Name\": \"Full_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"all\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Amount\": 9999999999,\n\t\t\t\"Name\": \"Participant_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"send\",\n\t\t\t\t\"call\",\n\t\t\t\t\"name\",\n\t\t\t\t\"hasRole\"\n\t\t\t]\n\t\t}\n\t]\n```","username":"silasdavis","ts":"2018-04-19T20:26:41.656Z"}
{"msg":"`burrow spec` can help with this:  \n```\n$> burrow spec -f1 -p1                               \n{                                                    \n\t\"Accounts\": [\n\t\t{\n\t\t\t\"Amount\": 99999999999999,\n\t\t\t\"AmountBonded\": 9999999999,\n\t\t\t\"Name\": \"Full_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"all\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Amount\": 9999999999,\n\t\t\t\"Name\": \"Participant_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"send\",\n\t\t\t\t\"call\",\n\t\t\t\t\"name\",\n\t\t\t\t\"hasRole\"\n\t\t\t]\n\t\t}\n\t]\n```","username":"silasdavis","ts":"2018-04-19T20:26:41.656Z"}
{"msg":"`burrow spec` can help with this:  \n```\n$> burrow spec -f1 -p1                               \n{                                                    \n\t\"Accounts\": [\n\t\t{\n\t\t\t\"Amount\": 99999999999999,\n\t\t\t\"AmountBonded\": 9999999999,\n\t\t\t\"Name\": \"Full_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"all\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Amount\": 9999999999,\n\t\t\t\"Name\": \"Participant_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"send\",\n\t\t\t\t\"call\",\n\t\t\t\t\"name\",\n\t\t\t\t\"hasRole\"\n\t\t\t]\n\t\t}\n\t]\n}\n```","username":"silasdavis","ts":"2018-04-19T20:26:41.656Z"}
{"msg":"`burrow spec` can help with this:  \n```\n$ burrow spec -f1 -p1                               \n{                                                    \n\t\"Accounts\": [\n\t\t{\n\t\t\t\"Amount\": 99999999999999,\n\t\t\t\"AmountBonded\": 9999999999,\n\t\t\t\"Name\": \"Full_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"all\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Amount\": 9999999999,\n\t\t\t\"Name\": \"Participant_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"send\",\n\t\t\t\t\"call\",\n\t\t\t\t\"name\",\n\t\t\t\t\"hasRole\"\n\t\t\t]\n\t\t}\n\t]\n}\n```","username":"silasdavis","ts":"2018-04-19T20:26:41.656Z"}
{"msg":"`burrow spec` can help with this:  \n```\n$ burrow spec -f1 -p1                               \n{                                                    \n\t\"Accounts\": [\n\t\t{\n\t\t\t\"Amount\": 99999999999999,\n\t\t\t\"AmountBonded\": 9999999999,\n\t\t\t\"Name\": \"Full_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"all\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Amount\": 9999999999,\n\t\t\t\"Name\": \"Participant_0\",\n\t\t\t\"Permissions\": [\n\t\t\t\t\"send\",\n\t\t\t\t\"call\",\n\t\t\t\t\"name\",\n\t\t\t\t\"hasRole\"\n\t\t\t]\n\t\t}\n\t]\n}\n```","username":"silasdavis","ts":"2018-04-19T20:26:41.656Z"}
{"msg":"Has left the channel.","username":"agunde","ts":"2018-04-19T20:27:04.821Z","type":"ul"}
{"msg":"(from develop branch)","username":"silasdavis","ts":"2018-04-19T20:27:09.843Z"}
{"msg":"(from develop branch)","username":"silasdavis","ts":"2018-04-19T20:27:09.843Z"}
{"msg":"Stupid question perhaps, but how do I check which version of Burrow I got?","username":"kevinstr","ts":"2018-04-20T06:05:56.405Z"}
{"msg":"Has joined the channel.","username":"alekhyam","ts":"2018-04-20T11:21:13.072Z","type":"uj"}
{"msg":"I am working on monax platform for burrow and I did until `monax pkgs do`. Then  I tried monax legacy-contracts(https://github.com/monax/legacy-contracts.js) to write js file to connect with the blockchain but I am not able call the functions of my contract using `contractAddress`. The output of my contract is as follows. \n```\nContract {\n  address: '<path/to/solidityfile>',\n  abi: \n   [ { constant: false,\n       inputs: [Array],\n       name: 'set',\n       outputs: [],\n       payable: false,\n       stateMutability: 'nonpayable',\n       type: 'function' },\n     { constant: true,\n       inputs: [],\n       name: 'get',\n       outputs: [Array],\n       payable: false,\n       stateMutability: 'view',\n       type: 'function' } ],\n  set: \n   { [Function: bound ]\n     request: [Function: bound ],\n     call: [Function: bound ],\n     sendTransaction: [Function: bound ],\n     estimateGas: [Function: bound ],\n     getData: [Function: bound ],\n     uint256: [Circular] },\n  get: \n   { [Function: bound ]\n     request: [Function: bound ],\n     call: [Function: bound ],\n     sendTransaction: [Function: bound ],\n     estimateGas: [Function: bound ],\n     getData: [Function: bound ],\n     '': [Circular] } }\n```\nWill anyone please provide me any links for making transaction in burrow with monax.\nCan I see any blocks that are added after making the transaction at REST endpoint http://<IP>:46657/blockchain. Currently I seeing empty blocks","username":"alekhyam","ts":"2018-04-20T12:21:10.215Z"}
{"msg":"Has joined the channel.","username":"RB0071","ts":"2018-04-20T13:17:19.932Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=7Dhiw8rgnDqTKXpvc) @kevinstr `burrow version`","username":"compleatang","ts":"2018-04-20T18:52:34.774Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=7Dhiw8rgnDqTKXpvc","url":"https://chat.hyperledger.org/channel/burrow?msg=7Dhiw8rgnDqTKXpvc","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Alek our getting started page on monax.io covers this. ","username":"compleatang","ts":"2018-04-20T18:54:44.392Z"}
{"msg":"Has joined the channel.","username":"YoussefAshraf","ts":"2018-04-20T22:50:30.591Z","type":"uj"}
{"msg":"@silasdavis how would that translate to the `perms:{}` object in the `genesis.json` file?","username":"RobertDiebels","ts":"2018-04-21T16:00:46.214Z"}
{"msg":"@silasdavis ~~how would that translate to the `perms:{}` object in the `genesis.json` file?~~ Sratch that. I was using the wrong account-type.","username":"RobertDiebels","ts":"2018-04-21T16:00:46.214Z"}
{"msg":"@silasdavis ~~how would that translate to the `perms:{}` object in the `genesis.json` file?~~ Scratch that. I was using the wrong account-type.","username":"RobertDiebels","ts":"2018-04-21T16:00:46.214Z"}
{"msg":"Has joined the channel.","username":"sunnrunner","ts":"2018-04-21T23:05:45.539Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sstercan","ts":"2018-04-22T09:34:51.742Z","type":"uj"}
{"msg":"@compleatang Hi, I am very new to Nodejs. Can you suggest me a better link that explains how to use JavaScript API in a easiest way?","username":"Rekha","ts":"2018-04-23T05:27:22.476Z"}
{"msg":"I would like that as well. I'm getting these errors when using `@monax/legacy-db.js`: `\"Error broadcasting transaction: Unknown error returned: Duplicate transaction (ignored)\"` and `\"Error broadcasting transaction: Internal error: Error invalid sequence. Got 1, expected 2\"`.","username":"RobertDiebels","ts":"2018-04-23T07:55:40.366Z"}
{"msg":"The only thing I could find on the duplicate transaction was: https://github.com/hyperledger/burrow/blob/9c70b8c8f68fce8e6dc9642fae992e9f3bc178b3/rpc/tendermint/test/rpc_client_test.go#L66","username":"RobertDiebels","ts":"2018-04-23T09:01:08.514Z"}
{"msg":"There is no mention of Duplicate transactions elsewhere. I can't find the Error message either.","username":"RobertDiebels","ts":"2018-04-23T09:01:54.834Z"}
{"msg":"There is no mention of Duplicate transactions elsewhere. I can't find the Error message definition either.","username":"RobertDiebels","ts":"2018-04-23T09:01:54.834Z"}
{"msg":"How can I decode data transaction hash(i.e data_hash, data:{txs:\"XXX\"}) of blocks in hyperledger burrow?","username":"alekhyam","ts":"2018-04-23T10:11:23.802Z"}
{"msg":"Has joined the channel.","username":"meganeshkaila","ts":"2018-04-23T11:48:11.362Z","type":"uj"}
{"msg":"Has joined the channel.","username":"GaneshKaila","ts":"2018-04-23T12:07:11.586Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=BPbRBjZW97gfgYAky) Check out web3js and monax/legacy-contracts. The github and npm pages will teach you everything you need to know.","username":"kevinstr","ts":"2018-04-23T14:06:56.407Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=BPbRBjZW97gfgYAky","url":"https://chat.hyperledger.org/channel/burrow?msg=BPbRBjZW97gfgYAky","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"hosemose","ts":"2018-04-24T04:56:47.383Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jchenibm","ts":"2018-04-24T08:09:01.866Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Startoy","ts":"2018-04-24T08:17:06.448Z","type":"uj"}
{"msg":"Hello @compleatang Thank you for the answer. However the \"burrow\" command was not found (Linux LTS 16). I've installed Monax, following the tutorial on the website.","username":"kevinstr","ts":"2018-04-24T09:24:07.770Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB) @kevinstr just type burrow into the terminal it should look similar to this\nburrow is the node server of a burrow chain.  burrow combines\na modular consensus engine and application manager to run a chain to suit\nyour needs.\n\nMade with <3 by Monax Industries.\n\nComplete documentation is available at https://monax.io/docs\n\n_*VERSION:\n 0.17.1*_\n\nUsage:\n  burrow [flags]\n  burrow [command]\n\nAvailable Commands:\n  help        Help about any command\n  serve       burrow serve starts a burrow node with client API enabled by default.\n\nFlags:\n  -d, --debug     debug level output; the most output available for burrow; if it is too chatty use verbose flag; default respects $BURROW_DEBUG\n  -h, --help      help for burrow\n  -v, --verbose   verbose output; more output than no output flags; less output than debug level; default respects $BURROW_VERBOSE\n\nUse \"burrow [command] --help\" for more information about a command.\n","username":"YoussefAshraf","ts":"2018-04-24T09:31:20.721Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB","url":"https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB) @kevinstr just type burrow into the terminal it should look similar to this\nburrow is the node server of a burrow chain.  burrow combines\na modular consensus engine and application manager to run a chain to suit\nyour needs.\n\nMade with <3 by Monax Industries.\n\nComplete documentation is available at https://monax.io/docs\n\n*VERSION:\n 0.17.1*\n\nUsage:\n  burrow [flags]\n  burrow [command]\n\nAvailable Commands:\n  help        Help about any command\n  serve       burrow serve starts a burrow node with client API enabled by default.\n\nFlags:\n  -d, --debug     debug level output; the most output available for burrow; if it is too chatty use verbose flag; default respects $BURROW_DEBUG\n  -h, --help      help for burrow\n  -v, --verbose   verbose output; more output than no output flags; less output than debug level; default respects $BURROW_VERBOSE\n\nUse \"burrow [command] --help\" for more information about a command.\n","username":"YoussefAshraf","ts":"2018-04-24T09:31:20.721Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB","url":"https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@kevinstr The monax-cli doesn't install Burrow afaik. I think you need to start the chain running `monax chains ` and it will take care of the rest.","username":"RobertDiebels","ts":"2018-04-24T09:35:23.702Z"}
{"msg":"I believe it runs in Docker so you need to have that installed.","username":"RobertDiebels","ts":"2018-04-24T09:35:37.915Z"}
{"msg":"Alternatively you could follow this installation guide: https://github.com/hyperledger/burrow#installation if you want to install locally.","username":"RobertDiebels","ts":"2018-04-24T09:35:58.943Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB) @kevinstr  \nhttps://github.com/hyperledger/burrow#for-developers \njust take care of that command REPO=$($GOPATH/src/github.com/hyperledger/burrow) to be REPO=\"$GOPATH/src/github.com/hyperledger/burrow\" instead\n\n","username":"YoussefAshraf","ts":"2018-04-24T09:36:03.614Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB","url":"https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Do you guys have any idea how to send Eth using legacy-contracts.js ?\n","username":"YoussefAshraf","ts":"2018-04-24T09:37:58.603Z"}
{"msg":"Hello, It's possible that I can create a new account and use that to call a function in smart contract ?\nbecause I've used legacy-contracts(Devpipe) to create a new account and set to default account and do function on deployed smart contract.\nthe log said don't know that account. so how can I add a account to blockchain?\nThank you :slight_smile:","username":"Startoy","ts":"2018-04-24T09:48:20.224Z"}
{"msg":"(sorry for my weird english..)","username":"Startoy","ts":"2018-04-24T09:51:34.983Z"}
{"msg":"The reason I ask btw is this error that I frequently get. It sometimes pops up, sometimes it doesn't. Redeploying my smart contracts fixes the error.","username":"kevinstr","ts":"2018-04-24T10:00:11.828Z"}
{"msg":"","username":"kevinstr","ts":"2018-04-24T10:00:29.792Z","attachments":[{"type":"file","title":"Clipboard - 24 april 2018 12:00","title_link":"/file-upload/3ECyESFrXEyMwA2tC/Clipboard%20-%2024%20april%202018%2012:00","image_url":"/file-upload/3ECyESFrXEyMwA2tC/Clipboard%20-%2024%20april%202018%2012:00","image_type":"image/png","image_size":500113,"url":"/file-upload/3ECyESFrXEyMwA2tC/Clipboard%20-%2024%20april%202018%2012:00","remote":false,"fileId":"3ECyESFrXEyMwA2tC","fileName":"Clipboard - 24 april 2018 12:00"}]}
{"msg":"","username":"kevinstr","ts":"2018-04-24T10:00:38.470Z","attachments":[{"type":"file","title":"Clipboard - 24 april 2018 12:00","title_link":"/file-upload/YoSAQj6Dbbip4g9Ch/Clipboard%20-%2024%20april%202018%2012:00","image_url":"/file-upload/YoSAQj6Dbbip4g9Ch/Clipboard%20-%2024%20april%202018%2012:00","image_type":"image/png","image_size":500113,"url":"/file-upload/YoSAQj6Dbbip4g9Ch/Clipboard%20-%2024%20april%202018%2012:00","remote":false,"fileId":"YoSAQj6Dbbip4g9Ch","fileName":"Clipboard - 24 april 2018 12:00"}]}
{"msg":"Might be that the burrow server is temporarily not available? Or that it crashed and is causing the transaction to time out? Did you check your logs before redeploying your smart contracts?","username":"RobertDiebels","ts":"2018-04-24T10:21:01.100Z"}
{"msg":"can anyone help me :(\nI generate a new account via legacy-contracts and set to default account and call a constant function(return int). \nThis is a result : ","username":"Startoy","ts":"2018-04-24T11:28:11.430Z"}
{"msg":"","username":"Startoy","ts":"2018-04-24T11:28:12.580Z","attachments":[{"type":"file","title":"burrow error : account does not exist","title_link":"/file-upload/GKcYQfHaad63ESeyj/burrow%20error%20:%20account%20does%20not%20exist","image_url":"/file-upload/GKcYQfHaad63ESeyj/burrow%20error%20:%20account%20does%20not%20exist","image_type":"image/png","image_size":114751,"url":"/file-upload/GKcYQfHaad63ESeyj/burrow%20error%20:%20account%20does%20not%20exist","remote":false,"fileId":"GKcYQfHaad63ESeyj","fileName":"burrow error : account does not exist"}]}
{"msg":"on web : ","username":"Startoy","ts":"2018-04-24T11:29:41.432Z"}
{"msg":"","username":"Startoy","ts":"2018-04-24T11:29:51.181Z","attachments":[{"type":"file","title":"error","title_link":"/file-upload/4HyLEcXXKcckr5SgE/error","image_url":"/file-upload/4HyLEcXXKcckr5SgE/error","image_type":"image/png","image_size":9155,"url":"/file-upload/4HyLEcXXKcckr5SgE/error","remote":false,"fileId":"4HyLEcXXKcckr5SgE","fileName":"error"}]}
{"msg":"@Startoy might be me but it looks like a Pub-key not an Address.","username":"RobertDiebels","ts":"2018-04-24T13:09:12.169Z"}
{"msg":"Also, I don't see it in the other print-screen. So are you sure the account has been made?","username":"RobertDiebels","ts":"2018-04-24T13:10:26.308Z"}
{"msg":"@RobertDiebels The NodeJS api loaded the other data, except for the messages, which you can see in the screenshot","username":"kevinstr","ts":"2018-04-24T18:09:58.005Z"}
{"msg":"sorry that's my mistake, As I said before. use node default address(which read from file) seem works fine both non-constant and constant function. But when I generate and add a new account .This is result look like:\n","username":"Startoy","ts":"2018-04-25T02:52:43.464Z"}
{"msg":"","username":"Startoy","ts":"2018-04-25T02:52:45.599Z","attachments":[{"type":"file","title":"getlistofaccount","title_link":"/file-upload/jHJZiSMrKjJLAqxyd/getlistofaccount","image_url":"/file-upload/jHJZiSMrKjJLAqxyd/getlistofaccount","image_type":"image/png","image_size":51540,"url":"/file-upload/jHJZiSMrKjJLAqxyd/getlistofaccount","remote":false,"fileId":"jHJZiSMrKjJLAqxyd","fileName":"getlistofaccount"}]}
{"msg":"","username":"Startoy","ts":"2018-04-25T02:53:34.764Z","attachments":[{"type":"file","title":"burrow error","title_link":"/file-upload/YHxYM8ncP4vMrgtNg/burrow%20error","image_url":"/file-upload/YHxYM8ncP4vMrgtNg/burrow%20error","image_type":"image/png","image_size":84804,"url":"/file-upload/YHxYM8ncP4vMrgtNg/burrow%20error","remote":false,"fileId":"YHxYM8ncP4vMrgtNg","fileName":"burrow error"}]}
{"msg":"","username":"Startoy","ts":"2018-04-25T02:55:58.322Z","attachments":[{"type":"file","title":"smartcontract","title_link":"/file-upload/YGrsJqqkFbRAYrgne/smartcontract","image_url":"/file-upload/YGrsJqqkFbRAYrgne/smartcontract","image_type":"image/png","image_size":47766,"url":"/file-upload/YGrsJqqkFbRAYrgne/smartcontract","remote":false,"fileId":"YGrsJqqkFbRAYrgne","fileName":"smartcontract"}]}
{"msg":"I'm trying to use node to interact with burrow, but I don't seem to get how it works. I've been trying stuff like this:\n```\n> var burrowFactory = require('@monax/legacy-db');\nundefined\n> burrow = burrowFactory.createInstance(\"http://172.17.0.3:1337/rpc\");\nBurrow {\n  server: undefined,\n  _unsafe: \n   Unsafe {\n     server: undefined,\n     _validator: SinglePolicyValidator { _policy: true } },\n  _accounts: \n   Accounts {\n     server: undefined,\n     _unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] } },\n  _blockChain: BlockChain { server: undefined },\n  _consensus: Consensus { server: undefined },\n  _events: \n   Events {\n     _pollingInterval: 1000,\n     server: undefined,\n     _sub: { [Function: HttpEventSub] super_: [Function: EventSub] } },\n  _namereg: \n   NameReg {\n     server: undefined,\n     _unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] },\n     _events: Events { _pollingInterval: 1000, server: undefined, _sub: [Function] } },\n  _network: Network { server: undefined },\n  _transactions: \n   Transactions {\n     server: undefined,\n     _unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] } } }\n> var accounts = burrow.accounts()\nundefined\n> avvounts.getAccounts()\nReferenceError: avvounts is not defined\n> accounts.getAccounts()\nundefined\n> Burrow error:  Call of method \"toJSON\" with parameters 'server' responded with \"Error: connect ETIMEDOUT 172.17.0.3:1337\".\n> Burrow error:  Call of method \"toJSON\" with parameters 'server' responded with \"Error: connect ETIMEDOUT 172.17.0.3:1337\".\n```","username":"Valveware","ts":"2018-04-25T07:32:09.277Z"}
{"msg":"I'm trying to use node to interact with burrow, but I don't seem to get how it works. I've been trying stuff like this:\n```\n> var burrowFactory = require('@monax/legacy-db');\nundefined\n> burrow = burrowFactory.createInstance(\"http://172.17.0.3:1337/rpc\");\nBurrow {\n  server: undefined,\n  _unsafe: \n   Unsafe {\n     server: undefined,\n     _validator: SinglePolicyValidator { _policy: true } },\n  _accounts: \n   Accounts {\n     server: undefined,\n     _unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] } },\n  _blockChain: BlockChain { server: undefined },\n  _consensus: Consensus { server: undefined },\n  _events: \n   Events {\n     _pollingInterval: 1000,\n     server: undefined,\n     _sub: { [Function: HttpEventSub] super_: [Function: EventSub] } },\n  _namereg: \n   NameReg {\n     server: undefined,\n     _unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] },\n     _events: Events { _pollingInterval: 1000, server: undefined, _sub: [Function] } },\n  _network: Network { server: undefined },\n  _transactions: \n   Transactions {\n     server: undefined,\n     _unsafe: Unsafe { server: undefined, _validator: [SinglePolicyValidator] } } }\n> var accounts = burrow.accounts()\nundefined\n> avvounts.getAccounts()\nReferenceError: avvounts is not defined\n> accounts.getAccounts()\nundefined\n> Burrow error:  Call of method \"toJSON\" with parameters 'server' responded with \"Error: connect ETIMEDOUT 172.17.0.3:1337\".\n> Burrow error:  Call of method \"toJSON\" with parameters 'server' responded with \"Error: connect ETIMEDOUT 172.17.0.3:1337\".\n```\nHow can I do it properly? I did npm init and installed both @monax/legacy-db and @monax/legacy-contracts and am executing node from that folder. I made sure the ip was correct running monax chains ip testchain","username":"Valveware","ts":"2018-04-25T07:32:09.277Z"}
{"msg":"@Valveware I think that you are doing it properly (I'm doing the same thing and it works for me). The server you're trying to connect to just isn't responding. How did you setup the server? Did you ensure the nodes are functioning properly? Because it might not be available to process transactions.","username":"RobertDiebels","ts":"2018-04-25T08:04:17.992Z"}
{"msg":"@RobertDiebels it's just a chain made like in the monax getting started tutorial. I wish I could try it on the network I set up on azure but mystudent subscription ran out","username":"Valveware","ts":"2018-04-25T08:07:44.115Z"}
{"msg":"@Valveware You might be interested in my project. It uses Kubernetes though. So you might have to learn a thing or two about that first.","username":"RobertDiebels","ts":"2018-04-25T08:09:09.407Z"}
{"msg":"If you're already using NodeJS you're probably familiar with the code aspect of it.","username":"RobertDiebels","ts":"2018-04-25T08:09:52.996Z"}
{"msg":"https://github.com/kubechain/kubechain","username":"RobertDiebels","ts":"2018-04-25T08:10:08.787Z"}
{"msg":"You can pull that and add your own Container in an AccountPod.","username":"RobertDiebels","ts":"2018-04-25T08:10:32.263Z"}
{"msg":"@RobertDiebels Kubernetes is an alternative to docker, right?","username":"Valveware","ts":"2018-04-25T08:11:17.710Z"}
{"msg":"It uses Docker containers to orchestrate clusters.","username":"RobertDiebels","ts":"2018-04-25T08:11:58.185Z"}
{"msg":"So it's more of an alternative to Docker swarm than Docker.","username":"RobertDiebels","ts":"2018-04-25T08:12:07.930Z"}
{"msg":"It makes it easier for you to deploy Containerized applications in a network. Would be the main jist of it.","username":"RobertDiebels","ts":"2018-04-25T08:12:51.484Z"}
{"msg":"Alright, I'll see if I can understand it and try to set up my network that way","username":"Valveware","ts":"2018-04-25T08:13:26.264Z"}
{"msg":"But if you don't know that much about it I'd advice to keep going as you are now. Might be to much learning for the project you're undertaking.","username":"RobertDiebels","ts":"2018-04-25T08:13:30.498Z"}
{"msg":"@silasdavis @compleatang @zramsay Guys if I may ask. How long does it take for an Account to update it's Sequence after a transaction has been processed? I've created a setup with 4 validator nodes and I'm hitting these errors: `\"Error broadcasting transaction: Unknown error returned: Duplicate transaction (ignored)\"` and `\"Error broadcasting transaction: Internal error: Error invalid sequence. Got 1, expected 2\"`. I've asked over at the Tendermint chat and they said upping the Sequence should be enough to not get the `Duplicate transaction` error.","username":"RobertDiebels","ts":"2018-04-25T09:53:06.934Z"}
{"msg":"So I tracked down the code that processes `SendTx`'s to this [bit of code](https://github.com/hyperledger/burrow/blob/9c70b8c8f68fce8e6dc9642fae992e9f3bc178b3/manager/burrow-mint/transactor.go#L267) and the actual updating of the Account's index to [this bit](https://github.com/hyperledger/burrow/blob/9c70b8c8f68fce8e6dc9642fae992e9f3bc178b3/manager/burrow-mint/state/execution.go).","username":"RobertDiebels","ts":"2018-04-25T09:56:16.205Z"}
{"msg":"I'm outputting 3 Tx/s on 4 nodes, totalling 12 Tx/s, and I was wondering maybe that was to fast? I was at 100 Tx/s on 4 nodes (400 Tx/s) and reduced it to 12 Tx/s but that didn't resolve the bugs.","username":"RobertDiebels","ts":"2018-04-25T09:58:38.291Z"}
{"msg":"I'm outputting 3 Tx/s on 4 nodes, totalling 12 Tx/s, and I was wondering maybe that was to fast? I was at 100 Tx/s on 4 nodes (400 Tx/s) and reduced it to 12 Tx/s but that didn't resolve the errors.","username":"RobertDiebels","ts":"2018-04-25T09:58:38.291Z"}
{"msg":"The only thing I can imagine is that the first transaction that comes in is stil lbeing validated when the second one comes in and the Account.Sequence isn't updated yet. So it tosses in a sequence of 1.","username":"RobertDiebels","ts":"2018-04-25T10:00:51.243Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB) @kevinstr gotcha. Check the docker image then. It will have the version. ","username":"compleatang","ts":"2018-04-25T13:07:47.234Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB","url":"https://chat.hyperledger.org/channel/burrow?msg=2aEfLu6J8Mz5dJAJB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=N6tWTdYuymYnCECkz) @RobertDiebels this is a solved issue on develop. On older versions you'd need to either wait for the block to process or manually track thr nonce client side. ","username":"compleatang","ts":"2018-04-25T13:09:47.194Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=N6tWTdYuymYnCECkz","url":"https://chat.hyperledger.org/channel/burrow?msg=N6tWTdYuymYnCECkz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@compleatang i'm assuming that's the develop branch for 0.18.x ?","username":"RobertDiebels","ts":"2018-04-25T13:33:58.347Z"}
{"msg":"can I generate a new account and use that do transaction on web api ?","username":"Startoy","ts":"2018-04-26T02:13:36.925Z"}
{"msg":"Has joined the channel.","username":"IVictorFeng","ts":"2018-04-26T02:29:27.951Z","type":"uj"}
{"msg":"Has joined the channel.","username":"maestrus","ts":"2018-04-26T08:28:16.298Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nuxibyte","ts":"2018-04-26T15:49:06.872Z","type":"uj"}
{"msg":"Has joined the channel.","username":"shiyj","ts":"2018-04-26T16:30:03.741Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Wesley2018","ts":"2018-04-27T00:41:56.981Z","type":"uj"}
{"msg":"Has joined the channel.","username":"timboblockchain","ts":"2018-04-27T14:30:27.952Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cryptogrampus","ts":"2018-04-29T03:24:28.797Z","type":"uj"}
{"msg":"Yes, indeed. ","username":"compleatang","ts":"2018-04-29T19:30:00.831Z"}
{"msg":"@compleatang it's seem didn't work (gen -> set as default -> do a non-constant function on smart contract) \nresult as this : ","username":"Startoy","ts":"2018-04-30T04:41:39.279Z"}
{"msg":"","username":"Startoy","ts":"2018-04-30T04:41:46.603Z","attachments":[{"type":"file","title":"burrow error invalid address","title_link":"/file-upload/fJtuyDDzsu7pSSt4c/burrow%20error%20invalid%20address","image_url":"/file-upload/fJtuyDDzsu7pSSt4c/burrow%20error%20invalid%20address","image_type":"image/png","image_size":80881,"url":"/file-upload/fJtuyDDzsu7pSSt4c/burrow%20error%20invalid%20address","remote":false,"fileId":"fJtuyDDzsu7pSSt4c","fileName":"burrow error invalid address"}]}
{"msg":"To those who are interested I've resolved this: `\"Error broadcasting transaction: Internal error: Error invalid sequence. Got 1, expected 2\"` error. I ended up getting the error on both `send()` and `sendAndHold()` I traced it down to the following. \n- I had a 1-to-many relation for clients and servers. So, a \"client\" application had a multitude of servers it would connect to.\n- I had a 1-to-many relation for clients and destination addresses. So, a client had multiple addresses to which it would transfer amounts.\n- I had multiple clients operating at the same time with the same properties as above.\n\nThis resulted in Burrow not updating the `PrivAccount.Sequence` fast enough even if I was using `sendAndHold`.\n\nCurrently I have 1 application generating transactions at a rate of about 0.8 Tx/s. It only sends new transactions with randomized Addresses when it receives a result from sendAndHold.\nThe only way I currently see to improve performance would be to bind  addresses and servers to 1 and only 1 client application. That way I won't get the `Sequence` error because I'm using different Addresses on each Burrow server.\nStill that would only amount to about 4 Tx/s.\n\nI also tried tracking the Sequence locally which was easy. However, there is no method to sign transactions client-side. So I decided to use the `signTx` rpc method. This resulted in a bunch of TypeErrors if which I couldn't determine the JSON properties that caused them, since the error messaged returned from the server only states a mismatch between 2 types, not which property it verified.\n\nSo I have a few questions: \n- What can I do to increase performance using the NodeJS client?","username":"RobertDiebels","ts":"2018-04-30T12:59:16.076Z"}
{"msg":"To those who are interested I've resolved this: `\"Error broadcasting transaction: Internal error: Error invalid sequence. Got 1, expected 2\"` error. I ended up getting the error on both `send()` and `sendAndHold()` I traced it down to the following. \n- I had a 1-to-many relation for clients and servers. So, a \"client\" application had a multitude of servers it would connect to.\n- I had a 1-to-many relation for clients and destination addresses. So, a client had multiple addresses to which it would transfer amounts.\n- I had multiple clients operating at the same time with the same properties as above.\n\nThis resulted in Burrow not updating the `PrivAccount.Sequence` fast enough even if I was using `sendAndHold`.\n\nCurrently I have 1 application generating transactions at a rate of about 0.8 Tx/s. It only sends new transactions with randomized Addresses when it receives a result from sendAndHold.\nThe only way I currently see to improve performance would be to bind  addresses and servers to 1 and only 1 client application. That way I won't get the `Sequence` error because I'm using different Addresses on each Burrow server.\nStill that would only amount to about 4 Tx/s.\n\nI also tried tracking the Sequence locally which was easy. However, there is no method to sign transactions client-side. So I decided to use the `signTx` rpc method. This resulted in a bunch of TypeErrors if which I couldn't determine the JSON properties that caused them, since the error messaged returned from the server only states a mismatch between 2 types, not which property it validated.\n\nSo I have a few questions: \n- What can I do to increase performance using the NodeJS client?\n- Is there any tooling to sign client-side with NodeJS?\n\nAnd a suggestion:\n- Can you update the RPC error messages when decoding Bytes, so that it also states which property it validated?","username":"RobertDiebels","ts":"2018-04-30T12:59:16.076Z"}
{"msg":"I have setup a chain using monax tooling and started that chain, I also installed the two npm packages that can be used to interact with burrow and smart contracts\nThe chain's ip is 172.17.0.2 when using monax chains ip testchain.\nThen I go to a project which has the two npm packages installed and open a terminal there.\nI then do the following:\n```\nvar burrowFactory = require('@monax/legacy-db');\nundefined\n> var burrow = burrowFactory.createInstance(\"http://172.17.0.2:1337/rpc\");\nundefined\n```\nHowever the server property stays undefined:\n```\n> burrow.accounts\n[Function]\n> burrow.accounts()\nAccounts {\n  server: undefined,\n  _unsafe: \n   Unsafe {\n     server: undefined,\n     _validator: SinglePolicyValidator { _policy: true } } }\n```\nWhat could I be doing wrong?","username":"Valveware","ts":"2018-05-01T09:27:26.701Z"}
{"msg":"Which version of legacy-db are you using and how are you printing this?","username":"RobertDiebels","ts":"2018-05-01T09:34:27.070Z"}
{"msg":"Might want to try `console.info(JSON.stringify(burrow.accounts()));` I believe that plain printing is a bit iffy sometimes.","username":"RobertDiebels","ts":"2018-05-01T09:35:45.188Z"}
{"msg":"Also, have you tried getting something from the server?","username":"RobertDiebels","ts":"2018-05-01T09:36:03.132Z"}
{"msg":"This is my current setup: https://github.com/RobertDiebels/burrow-transacter","username":"RobertDiebels","ts":"2018-05-01T09:37:50.734Z"}
{"msg":"It's written in type script though.","username":"RobertDiebels","ts":"2018-05-01T09:38:01.658Z"}
{"msg":"@RobertDiebels \nThis is what I get when executing that command:\n```\n> console.info(JSON.stringify(burrow.accounts()));\n{\"_unsafe\":{\"_validator\":{\"_policy\":true}}}\nundefined\n```\n","username":"Valveware","ts":"2018-05-01T09:42:55.678Z"}
{"msg":"@RobertDiebels \nThis is what I get when executing that command:\n```\n> console.info(JSON.stringify(burrow.accounts()));\n{\"_unsafe\":{\"_validator\":{\"_policy\":true}}}\nundefined\n```\n Can I run that burrow transacter server locally to see if it works with that chain?","username":"Valveware","ts":"2018-05-01T09:42:55.678Z"}
{"msg":"@Valveware Really does seem like the server is not getting defined than.","username":"RobertDiebels","ts":"2018-05-01T09:54:39.023Z"}
{"msg":"Also, you can try to run that code. It expects a few files to operate though and you'll need to add typescript.","username":"RobertDiebels","ts":"2018-05-01T09:55:45.405Z"}
{"msg":"The files it expects are located in the `resources` folder","username":"RobertDiebels","ts":"2018-05-01T09:56:07.059Z"}
{"msg":"Do I need to use that Dockerfile somehow to set it up? Or can I just run the code?","username":"Valveware","ts":"2018-05-01T10:39:50.124Z"}
{"msg":"@Valveware You'll need to run typescript to transpile to javascript, you won't need the Dockerfile.","username":"RobertDiebels","ts":"2018-05-01T11:16:48.460Z"}
{"msg":"It only builds an image I use in my Kubernetes cluster.","username":"RobertDiebels","ts":"2018-05-01T11:16:59.688Z"}
{"msg":"Has joined the channel.","username":"Aswath8687","ts":"2018-05-01T19:47:55.600Z","type":"uj"}
{"msg":"I tried the same thing again using the vagrant GitHub package, and I get the same result. I tried it on different computers and they don't have a firewall so I think that can't be it ..\n```\nvagrant@contrib-jessie:~/testnpm$ monax chains start test_chain --init-dir ~/vagrant/test_chain/test_chain_full_000\nvagrant@contrib-jessie:~/testnpm$ monax ls\nSERVICE        ON     VERSION\nkeys           *      0.17.0\n                                              \nCHAIN          ON     VERSION\ntest_chain     *      0.17.0\n                                              \nvagrant@contrib-jessie:~/testnpm$ monax chains ip test_chain\n172.17.0.3\nvagrant@contrib-jessie:~/testnpm$ ls \nnode_modules/ package.json  \nvagrant@contrib-jessie:~/testnpm$ ls node_modules/\n@monax       aws-sign2        commander             extsprintf                har-validator     is-typedarray        lodash          punycode              stealthy-require  tweetnacl\n@nodeguy     aws4             core-util-is          fj-curry                  has-ansi          isstream             mime-db         qs                    stringstream      ultron\nansi-regex   bcrypt-pbkdf     cryptiles             forever-agent             hawk              iteray               mime-types      ramda                 strip-ansi        uuid\nansi-styles  bluebird         dashdash              form-data                 hoek              jsbn                 mz              request               supports-color    verror\nany-promise  boom             delayed-stream        g-functions               http-signature    json-schema          oauth-sign      request-promise       thenify           ws\nasn1         caseless         ecc-jsbn              generate-function         is-my-ip-valid    json-stringify-safe  object-assign   request-promise-core  thenify-all       xtend\nassert-plus  chalk            escape-string-regexp  generate-object-property  is-my-json-valid  jsonpointer          pinkie          sntp                  tough-cookie\nasynckit     combined-stream  extend                getpass                   is-property       jsprim               pinkie-promise  sshpk                 tunnel-agent\nvagrant@contrib-jessie:~/testnpm$ node\n> var burrowFactory = require('@monax/\n@monax/legacy-db   @monax/legacy-db/  \n\n> var burrowFactory = require('@monax/legacy-db');\nundefined\n> var burrow = burrowFactory.createInstance(\"http://172.17.0.3:1337/rpc\");\nundefined\n> burrow.accounts()\nAccounts {\n  server: undefined,\n  _unsafe: \n   Unsafe {\n     server: undefined,\n     _validator: SinglePolicyValidator { _policy: true } } }\n> Burrow error:  Call of method \"toJSON\" with parameters 'server' responded with \"Method not found: burrow.toJSON\".\nBurrow error:  Call of method \"toJSON\" with parameters 'server' responded with \"Method not found: burrow.toJSON\".\n(node:20425) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: Cannot convert a Symbol value to a string\n\n```\n\nI really don't understand why it won't let me connect and I am running out of options to try :( .\nWhat am I doing wrong?","username":"Valveware","ts":"2018-05-02T08:01:48.700Z"}
{"msg":"Why are you using the node command line instead of a Javascript file?","username":"RobertDiebels","ts":"2018-05-02T08:27:30.793Z"}
{"msg":"I've never done that before and I don't know what the consequences are of doing so.","username":"RobertDiebels","ts":"2018-05-02T08:28:26.329Z"}
{"msg":"I'd advice to create a `index.js` file and use the same code to check for different results.","username":"RobertDiebels","ts":"2018-05-02T08:28:57.254Z"}
{"msg":"Also, it appears you're sending an RPC request to the server with the name 'burrow.toJSON'. This doesn't exist in the API.","username":"RobertDiebels","ts":"2018-05-02T08:30:22.930Z"}
{"msg":"Maybe try calling `burrow.accounts().getAccounts(null, (error, result) => {})`","username":"RobertDiebels","ts":"2018-05-02T08:31:42.266Z"}
{"msg":"Maybe try calling `burrow.accounts().getAccounts(null, (error, result) => { console.info(\"Error:\", error); console.info(\"Result:\", result)});`","username":"RobertDiebels","ts":"2018-05-02T08:31:42.266Z"}
{"msg":"Ive put that code in a js file and it is running as we speak","username":"Valveware","ts":"2018-05-02T08:35:25.537Z"}
{"msg":":fingers_crossed:","username":"Valveware","ts":"2018-05-02T08:35:36.472Z"}
{"msg":"This is the result:\nindex.js:\n```\nvar burrowFactory = require('@monax/legacy-db');\nvar burrow = burrowFactory.createInstance(\"http://172.17.0.3:1337/rpc\");\nburrow.accounts().getAccounts(null, (error, result) => { console.info(\"Error:\", error); console.info(\"Result:\", result)});\n```\n\n```\nnode index.js\nBurrow error:  Call of method \"getAccounts\" with parameters { filters: [] } responded with \"Error: connect ETIMEDOUT 172.17.0.3:1337\".\nError: { Error: Error: connect ETIMEDOUT 172.17.0.3:1337\n    at values.next.then (/Users/merlijnversteegen/Documents/Truffle/node test/node_modules/@nodeguy/json-rpc/lib/index.js:16:30)\n    at <anonymous>\n  method: 'getAccounts',\n  params: [ { filters: [] } ],\n  code: -32300,\n  data:\n   { Error: connect ETIMEDOUT 172.17.0.3:1337\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1173:14)\n     errno: 'ETIMEDOUT',\n     code: 'ETIMEDOUT',\n     syscall: 'connect',\n     address: '172.17.0.3',\n     port: 1337 },\n  message: 'Error: connect ETIMEDOUT 172.17.0.3:1337' }\nResult: undefined\n```","username":"Valveware","ts":"2018-05-02T08:39:54.099Z"}
{"msg":"So it seems as though it just can't get a connection or something :thinking:","username":"Valveware","ts":"2018-05-02T08:40:16.574Z"}
{"msg":"Would appear so. I don't know your network setup so you'll have to verify that the Burrow server you're connecting to is up at that IP.","username":"RobertDiebels","ts":"2018-05-02T08:42:08.635Z"}
{"msg":"It seems that the command you told me does work in a vagrant setup","username":"Valveware","ts":"2018-05-02T08:48:35.750Z"}
{"msg":"It doesn't work on my host","username":"Valveware","ts":"2018-05-02T08:48:42.430Z"}
{"msg":"So there must be something preventing my host to make that connection to a started chain","username":"Valveware","ts":"2018-05-02T08:49:08.344Z"}
{"msg":"It's just a single full_node chain as a test_chain","username":"Valveware","ts":"2018-05-02T08:49:34.621Z"}
{"msg":"But if I have a multinode setup I have to make the vagrant entities communicate with each other, which probably won't work if the host has that issue :thinking: ","username":"Valveware","ts":"2018-05-02T08:51:36.697Z"}
{"msg":"I don't remember telling you about a command :thinking: ","username":"RobertDiebels","ts":"2018-05-02T08:55:39.357Z"}
{"msg":"I meant this:\n```\nburrow.accounts().getAccounts(null, (error, result) => { console.info(\"Error:\", error); console.info(\"Result:\", result)});\n```","username":"Valveware","ts":"2018-05-02T08:56:30.478Z"}
{"msg":"The command works afaik. The client just can't connect to the burrow server.","username":"RobertDiebels","ts":"2018-05-02T08:57:51.548Z"}
{"msg":"Did you try running it without vagrant?","username":"RobertDiebels","ts":"2018-05-02T08:59:10.228Z"}
{"msg":"Using `monax chains`","username":"RobertDiebels","ts":"2018-05-02T08:59:29.229Z"}
{"msg":"the only scenario I got to work right now:\nstartup vagrant,\nmonax chains make test_chain\nmonax chains start ... \ncheck the chain ip\nrun index.js with node from inside the vagrant ssh","username":"Valveware","ts":"2018-05-02T09:00:52.178Z"}
{"msg":"Are you on Linux or Windows?","username":"RobertDiebels","ts":"2018-05-02T09:01:24.694Z"}
{"msg":"your host machine","username":"RobertDiebels","ts":"2018-05-02T09:01:30.741Z"}
{"msg":"I am on mac","username":"Valveware","ts":"2018-05-02T09:01:31.251Z"}
{"msg":"Ah.","username":"RobertDiebels","ts":"2018-05-02T09:01:45.851Z"}
{"msg":"Well I don't know a lot about Mac unfortunately. Also don't know if monax supports running on Mac.","username":"RobertDiebels","ts":"2018-05-02T09:02:25.638Z"}
{"msg":"Might be something really specific with Vagrant as well.","username":"RobertDiebels","ts":"2018-05-02T09:02:54.982Z"}
{"msg":"Most of the time it's the same as for linux, and I was told the monax developers all use Mac so 🤷‍♂️","username":"Valveware","ts":"2018-05-02T09:04:19.463Z"}
{"msg":"But I also have access to a windows","username":"Valveware","ts":"2018-05-02T09:04:47.295Z"}
{"msg":"I'll try to see if I can get it to work over there","username":"Valveware","ts":"2018-05-02T09:04:56.102Z"}
{"msg":"Won't work on Windows afaik.","username":"RobertDiebels","ts":"2018-05-02T09:05:14.854Z"}
{"msg":"I asked because you said you were using Vagrant.","username":"RobertDiebels","ts":"2018-05-02T09:05:28.769Z"}
{"msg":"And I was going to suggest not using Vagrant and just use Monax's tooling to spin up the chain.","username":"RobertDiebels","ts":"2018-05-02T09:05:48.126Z"}
{"msg":"If they work on Mac the tooling should work there.","username":"RobertDiebels","ts":"2018-05-02T09:06:39.680Z"}
{"msg":"Yeah I can spin up a chain on Mac and the logging shows it's making blocks","username":"Valveware","ts":"2018-05-02T09:07:11.185Z"}
{"msg":"I just can't connect to it using the js library as I should :/","username":"Valveware","ts":"2018-05-02T09:07:36.834Z"}
{"msg":"Well if it times out the only thing I can think of is that the IP doesn't exist.","username":"RobertDiebels","ts":"2018-05-02T09:09:32.796Z"}
{"msg":"I disabled the firewall and added\npass in proto tcp from any to any port 1337\non startup that's about all I could think of","username":"Valveware","ts":"2018-05-02T09:09:59.821Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=TWGyn3btxWzqW3KJi) @RobertDiebels the javascript libraries use the Transactor which effectively works under the assumption you are communicating with a 'local' instance of Burrow (for some suitable definition of local). The sequence number provides replay protection on signed transactions, and the transaction acts a proxy for signing for you and tries to set the sequence number by looking at the local check cache which is fed by the mempool (on develop now there is the ability to transact by address rather than sending the private key, where burrow will then ask its keys connection to sign for a particular address). The heuristic of looking at the most recent sequence number of the account in the check cache only works when a particular input account is only being used with a single node within a single block.","username":"silasdavis","ts":"2018-05-02T09:16:12.277Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=TWGyn3btxWzqW3KJi","url":"https://chat.hyperledger.org/channel/burrow?msg=TWGyn3btxWzqW3KJi","remote":true,"fileId":null,"fileName":null}]}
{"msg":"This only applies with 'stacking' transactions within the period of a single block (1-2 seconds)","username":"silasdavis","ts":"2018-05-02T09:16:53.077Z"}
{"msg":"You are right to identify that if you have control over the client you can ensure you send a run of transactions with a consecutive sequence of sequence numbers","username":"silasdavis","ts":"2018-05-02T09:17:42.952Z"}
{"msg":"however in the general case you could not expect this to work across multiple clients (approximating the network as non-deterministic) because you wouldn't be able to control the ordering between transactions sent from different clients","username":"silasdavis","ts":"2018-05-02T09:18:49.189Z"}
{"msg":"On some specifics:\n> - I had a 1-to-many relation for clients and destination addresses. So, a client had multiple addresses to which it would transfer amounts.\nThis seems the wrong way round... It should only matter what the 'from' address is not the 'destination' that's where we check the sequence number\n\n> This resulted in Burrow not updating the `PrivAccount.Sequence` fast enough even if I was using `sendAndHold`.\nThis _ought_ not to be the case. `sendAndHold` waits until a transaction has been committed so the next send should query the freshest sequence number","username":"silasdavis","ts":"2018-05-02T09:23:54.459Z"}
{"msg":"are you running against latest develop, there are some changes I made about 2 weeks ago that work around various edge cases regarding sequence numbers","username":"silasdavis","ts":"2018-05-02T09:24:24.217Z"}
{"msg":"Hi Silas, thanks for the response. I'll try to reply to your points. Have to read them thoroughly so I understand. Gimme a minute.","username":"RobertDiebels","ts":"2018-05-02T09:26:15.287Z"}
{"msg":"To be clear: we run burrow with several hundred transactions per second","username":"silasdavis","ts":"2018-05-02T09:27:21.256Z"}
{"msg":"perhaps so I can be clearer to","username":"silasdavis","ts":"2018-05-02T09:27:33.195Z"}
{"msg":"Can you expand a bit on:\n> Currently I have 1 application generating transactions at a rate of about 0.8 Tx/s. It only sends new transactions with randomized Addresses","username":"silasdavis","ts":"2018-05-02T09:28:03.571Z"}
{"msg":"Yes.","username":"RobertDiebels","ts":"2018-05-02T09:28:19.700Z"}
{"msg":"so you are sending transactions with random input addresses?","username":"silasdavis","ts":"2018-05-02T09:28:24.906Z"}
{"msg":"I created a tiny 'client' which uses `@monax/legacy-db` to send transactions towards Burrow servers. See: https://github.com/RobertDiebels/burrow-transacter","username":"RobertDiebels","ts":"2018-05-02T09:30:00.062Z"}
{"msg":"I wrapped it in a Docker container and deployed it to Kubernetes.","username":"RobertDiebels","ts":"2018-05-02T09:30:34.492Z"}
{"msg":"\"so you are sending transactions with random input addresses? \". Yes.","username":"RobertDiebels","ts":"2018-05-02T09:30:48.852Z"}
{"msg":" Yes. [ ](https://chat.hyperledger.org/channel/burrow?msg=GNL5ZH8ipsi4Ncawr) ","username":"RobertDiebels","ts":"2018-05-02T09:30:48.852Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=GNL5ZH8ipsi4Ncawr","url":"https://chat.hyperledger.org/channel/burrow?msg=GNL5ZH8ipsi4Ncawr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I provide the client with the original genesis file and load the Addresses from there.","username":"RobertDiebels","ts":"2018-05-02T09:31:24.213Z"}
{"msg":"Then on each transaction I pick a random Address, and a random Server.","username":"RobertDiebels","ts":"2018-05-02T09:31:50.557Z"}
{"msg":"Correction. I used to pick a random server. Now I just use 1 server.","username":"RobertDiebels","ts":"2018-05-02T09:32:32.922Z"}
{"msg":"Correction. I used to pick a random server per transaction. Now I just use 1 server which I pick randomly, and use it for all transactions.","username":"RobertDiebels","ts":"2018-05-02T09:32:32.922Z"}
{"msg":"The Addresses I still pick randomly.","username":"RobertDiebels","ts":"2018-05-02T09:33:25.188Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=HGqxJixJHHnZwGAML) \" The heuristic of looking at the most recent sequence number of the account in the check cache only works when a particular input account is only being used with a single node within a single block.\". If I understand correctly. Both the definition of 'local' and 'single node' mean that if, I have a NodeJS client it should have a unique relation with an account. The client then sends transactions to only one (local) Burrow Server/Node associated with that account so the sequence used to sign the transaction can be pulled from it's cache.","username":"RobertDiebels","ts":"2018-05-02T10:25:30.283Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=HGqxJixJHHnZwGAML","url":"https://chat.hyperledger.org/channel/burrow?msg=HGqxJixJHHnZwGAML","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Which means that you can't use `send()` or `sendAndHold()` to connect to different nodes using the same privateKey parameter.","username":"RobertDiebels","ts":"2018-05-02T10:26:38.857Z"}
{"msg":"That was exactly what I was doing. As I was unaware that the nodes only handled transactions for 1 and only 1 \"from\"-account. I'll see if I can crank up the transaction speed with this knowledge.","username":"RobertDiebels","ts":"2018-05-02T10:29:49.514Z"}
{"msg":"@silasdavis If you're done helping RobertDriebels, could you help me out on why I can't get a connection to my burrow server, if you have time to do so?","username":"Valveware","ts":"2018-05-02T10:32:28.233Z"}
{"msg":"@Valveware I have a few mins","username":"silasdavis","ts":"2018-05-02T10:36:08.898Z"}
{"msg":"will just reply a bit further to @RobertDiebels ","username":"silasdavis","ts":"2018-05-02T10:36:16.787Z"}
{"msg":"Alright , thanks @silasdavis :)","username":"Valveware","ts":"2018-05-02T10:37:44.426Z"}
{"msg":"@silasdavis just to summarize:\nI am trying to connect to the server e.g. to get a list of accounts. I am not able to do so on my host (Mac). I followed the following steps:\n```\nmonax chains make test_chain\nmonax chains start test_chain --init-dir ~/.monax/chains/test_chain/test_chain_full_000\n```\n\nThe chains is running and making blocks, I can see so in the logging\nI ask for the server ip using\n```\nmonax chains ip test_chain\n```\nThen I run a javascript file containing the following:\n```\nvar burrowFactory = require('@monax/legacy-db');\nvar burrow = burrowFactory.createInstance(\"http://172.17.0.3:1337/rpc\"); // 172.17.0.3 being the ip from monax chains ip\nburrow.accounts().getAccounts(null, (error, result) => { console.info(\"Error:\", error); console.info(\"Result:\", result)});\n```\nWhich results in\n```\nBurrow error:  Call of method \"getAccounts\" with parameters { filters: [] } responded with \"Error: connect ETIMEDOUT 172.17.0.3:1337\".\nError: { Error: Error: connect ETIMEDOUT 172.17.0.3:1337\n    at values.next.then (/Users/merlijnversteegen/Documents/Truffle/node test/node_modules/@nodeguy/json-rpc/lib/index.js:16:30)\n    at <anonymous>\n  method: 'getAccounts',\n  params: [ { filters: [] } ],\n  code: -32300,\n  data:\n   { Error: connect ETIMEDOUT 172.17.0.3:1337\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1173:14)\n     errno: 'ETIMEDOUT',\n     code: 'ETIMEDOUT',\n     syscall: 'connect',\n     address: '172.17.0.3',\n     port: 1337 },\n  message: 'Error: connect ETIMEDOUT 172.17.0.3:1337' }\nResult: undefined\n```\n\nWhen I use monax-vagrant and do vagrant up v0.18.0\nIt successfully makes a vagrant and when I do the exact same steps inside the vagrant ssh it does get me a resulting list of accounts(0x0 and 1 other account)\nSo the issue is - I think - with the host not being able to connect to the chain it's running.\nI also do not know how I can test if the host can reach the vagrant's chain.\n","username":"Valveware","ts":"2018-05-02T10:55:07.178Z"}
{"msg":"@silasdavis just to summarize:\nI am trying to connect to the server e.g. to get a list of accounts. I am not able to do so on my host (Mac). I followed the following steps:\n```\nmonax chains make test_chain\nmonax chains start test_chain --init-dir ~/.monax/chains/test_chain/test_chain_full_000\n```\n\nThe chains is running and making blocks, I can see so in the logging\nI ask for the server ip using\n```\nmonax chains ip test_chain\n```\nThen I run a javascript file containing the following:\n```\nvar burrowFactory = require('@monax/legacy-db');\nvar burrow = burrowFactory.createInstance(\"http://172.17.0.3:1337/rpc\"); // 172.17.0.3 being the ip from monax chains ip\nburrow.accounts().getAccounts(null, (error, result) => { console.info(\"Error:\", error); console.info(\"Result:\", result)});\n```\nWhich results in\n```\nBurrow error:  Call of method \"getAccounts\" with parameters { filters: [] } responded with \"Error: connect ETIMEDOUT 172.17.0.3:1337\".\nError: { Error: Error: connect ETIMEDOUT 172.17.0.3:1337\n    at values.next.then (/Users/merlijnversteegen/Documents/Truffle/node test/node_modules/@nodeguy/json-rpc/lib/index.js:16:30)\n    at <anonymous>\n  method: 'getAccounts',\n  params: [ { filters: [] } ],\n  code: -32300,\n  data:\n   { Error: connect ETIMEDOUT 172.17.0.3:1337\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1173:14)\n     errno: 'ETIMEDOUT',\n     code: 'ETIMEDOUT',\n     syscall: 'connect',\n     address: '172.17.0.3',\n     port: 1337 },\n  message: 'Error: connect ETIMEDOUT 172.17.0.3:1337' }\nResult: undefined\n```\n\nWhen I use monax-vagrant and do vagrant up v0.18.0\nIt successfully makes a vagrant and when I do the exact same steps inside the vagrant ssh it does get me a resulting list of accounts(0x0 and 1 other account)\nSo the issue is - I think - with the host not being able to connect to the chain it's running.\nI also do not know how I can test if the host can reach the vagrant's chain.\nMaybe it has to do with docker or something, which I am by no means an expert in ...","username":"Valveware","ts":"2018-05-02T10:55:07.178Z"}
{"msg":"> As I was unaware that the nodes only handled transactions for 1 and only 1 \"from\"-account.\n\nThis isn't strictly true - first of all if you wait for the transaction to be closed into a block - as in *AndHold then that transaction is committed so if you query from another node you should see the same sequence number. If you want to get many transaction from the same input account (i.e. private key as it currently is) in the _same block_ then there is no way to order the sequence numbers between different clients, unless you use a consensus network! In which case the advice is just to run a participant node 'local' to your client. This is effectively what a bitcoin or ethereum wallet is.","username":"silasdavis","ts":"2018-05-02T11:07:06.231Z"}
{"msg":"Regarding `signTx` that will only work if you are able to go-wire serialise your transaction locally, which we have no libary in JS to do annoyingly. You can use burrow-client to do this though","username":"silasdavis","ts":"2018-05-02T11:08:37.600Z"}
{"msg":"@Valveware I would like to herd you towards using out develop version...","username":"silasdavis","ts":"2018-05-02T11:10:21.887Z"}
{"msg":"which can be run more easily without doccker","username":"silasdavis","ts":"2018-05-02T11:10:56.146Z"}
{"msg":"which can be run more easily without docker","username":"silasdavis","ts":"2018-05-02T11:10:56.146Z"}
{"msg":"I'm actually looking to push a pre-release version to master today, but I need to update some documentation","username":"silasdavis","ts":"2018-05-02T11:11:25.396Z"}
{"msg":"you should be able to build and run locally on your mac","username":"silasdavis","ts":"2018-05-02T11:11:40.742Z"}
{"msg":"you'd just need go and make","username":"silasdavis","ts":"2018-05-02T11:11:47.692Z"}
{"msg":"And I can use burrow develop without using the monax tooling / bosmarmot tooling or should I use one of those?","username":"Valveware","ts":"2018-05-02T11:12:28.257Z"}
{"msg":"currently you will need bosmarmot `bos`, and/or the latest version of https://www.npmjs.com/package/@monax/legacy-contracts and `monax-keys` (also in bosmarmot)","username":"silasdavis","ts":"2018-05-02T11:14:40.633Z"}
{"msg":"keys is currently being integrated into Burrow","username":"silasdavis","ts":"2018-05-02T11:14:57.489Z"}
{"msg":"ultimately I'd like almost everything to be hosted in that single binary","username":"silasdavis","ts":"2018-05-02T11:15:07.877Z"}
{"msg":"Keys is just for generating key pairs? ","username":"Valveware","ts":"2018-05-02T11:15:19.857Z"}
{"msg":"and signing","username":"silasdavis","ts":"2018-05-02T11:15:25.085Z"}
{"msg":"Alright then when the prerelease is out I will try to setup a chain using bos","username":"Valveware","ts":"2018-05-02T11:16:26.327Z"}
{"msg":"`go get -u github.com/monax/bosmarmot/keys/cmd/monax-key`","username":"silasdavis","ts":"2018-05-02T11:16:52.452Z"}
{"msg":"gets you keys","username":"silasdavis","ts":"2018-05-02T11:16:54.915Z"}
{"msg":"if you clone burrow and checkout develop you can try straight away","username":"silasdavis","ts":"2018-05-02T11:17:09.918Z"}
{"msg":"are you familiar with go?","username":"silasdavis","ts":"2018-05-02T11:17:28.492Z"}
{"msg":"I have installed it to do some go get -u's and I can read it but that's about it","username":"Valveware","ts":"2018-05-02T11:18:06.461Z"}
{"msg":"is your GOPATH set?","username":"silasdavis","ts":"2018-05-02T11:18:25.865Z"}
{"msg":"yeah","username":"Valveware","ts":"2018-05-02T11:18:31.830Z"}
{"msg":"for burrow:\n\n```\ngo get -u github.com/hyperledger/burrow \ncd $GOPATH/src/github.com/hyperledger/burrow\ngit checkout develop\nmake install_db\n```","username":"silasdavis","ts":"2018-05-02T11:19:43.678Z"}
{"msg":"then provided `$GOPATH/bin` is in your `$PATH`","username":"silasdavis","ts":"2018-05-02T11:20:10.739Z"}
{"msg":"`$ burrow` should give you a help message","username":"silasdavis","ts":"2018-05-02T11:20:20.649Z"}
{"msg":"let me know if that works and I'll show you how to spin up a chain","username":"silasdavis","ts":"2018-05-02T11:20:35.122Z"}
{"msg":"Should I delete everything I have in the src and bin folders?","username":"Valveware","ts":"2018-05-02T11:20:54.118Z"}
{"msg":"and just go get keys and burrow?","username":"Valveware","ts":"2018-05-02T11:21:04.747Z"}
{"msg":"Or is it safe to do it without deleting it?","username":"Valveware","ts":"2018-05-02T11:21:23.633Z"}
{"msg":"no you can leave other repos","username":"silasdavis","ts":"2018-05-02T11:21:26.244Z"}
{"msg":"if you have already cloned burrow","username":"silasdavis","ts":"2018-05-02T11:21:30.738Z"}
{"msg":"you may need to just check you have latest develop with `git reset --hard origin/develop` from the burrow repo and develop branch","username":"silasdavis","ts":"2018-05-02T11:22:00.552Z"}
{"msg":"but you shouldn't need that unless you have checked out develop","username":"silasdavis","ts":"2018-05-02T11:22:22.283Z"}
{"msg":"or made local changes","username":"silasdavis","ts":"2018-05-02T11:22:25.396Z"}
{"msg":"Alright I'm trying it all now","username":"Valveware","ts":"2018-05-02T11:23:11.181Z"}
{"msg":"Once `burrow --version` should give you `0.18.1+commit.v0.17.1-158-g70e602d9`","username":"silasdavis","ts":"2018-05-02T11:23:22.979Z"}
{"msg":"@silasdavis alright, It works! I did have to add /cmd/burrow to the burrow go get but now it gives the correct version","username":"Valveware","ts":"2018-05-02T11:31:50.391Z"}
{"msg":"oh... yeah it will complain about no go files but it will have still pulled the repo","username":"silasdavis","ts":"2018-05-02T11:38:41.456Z"}
{"msg":"you built with `make install_db` though righr?","username":"silasdavis","ts":"2018-05-02T11:38:50.279Z"}
{"msg":"Yep","username":"Valveware","ts":"2018-05-02T11:39:03.857Z"}
{"msg":"burrow --version\n0.18.1+commit.v0.17.1-158-g70e602d9","username":"Valveware","ts":"2018-05-02T11:39:21.818Z"}
{"msg":"cool, for a quick and dirty single node chain just run:\n\n```\nmonax-keys server&\nmkdir chainface\ncd chainface\nburrow spec -p1 -f1 | burrow configure -s- -v0 > burrow.toml\nburrow\n```","username":"silasdavis","ts":"2018-05-02T11:40:30.104Z"}
{"msg":"`burrow spec` generates a `GenesisSpec` which is a chain template","username":"silasdavis","ts":"2018-05-02T11:41:58.953Z"}
{"msg":"`burrow configure` uses this template and fills in the gaps where necessary with defaults, and most importantly creates keys in the monax-keys instance where keys/addresses are not supplied","username":"silasdavis","ts":"2018-05-02T11:42:35.870Z"}
{"msg":"When executing the burrow spec line it tells me this: \n```\nUnable to set ValidatorAddress from provided validator-index since no GenesisDoc/GenesisSpec provided.\n```","username":"Valveware","ts":"2018-05-02T11:43:18.580Z"}
{"msg":"This should do the same thing right?\n```\nburrow spec --participant-accounts=1 --full-accounts=1 > genesis-spec.json\nburrow configure --genesis-spec=genesis-spec.json --validator-index=0 > burrow.toml\n```","username":"Valveware","ts":"2018-05-02T11:47:09.510Z"}
{"msg":"Yes... it would appear i've broken the stdin... I'll fix that","username":"silasdavis","ts":"2018-05-02T11:53:33.954Z"}
{"msg":"This is what ```burrow``` returns:\n``` Sourcing config from first of: JSON config file at 'burrow.toml' then defaults\nSourcing config from JSON config file at 'burrow.toml'\ncould not obtain config: invalid character 'V' looking for beginning of value\n```\nburrow.toml:\n```\nValidatorAddress = \"7617F988F0EF2870EB2DD81E43FAF2443C27E508\"\n\n[GenesisDoc]\n  GenesisTime = 2018-05-02T11:46:34Z\n  ChainName = \"BurrowChain_2A0FC2\"\n  [GenesisDoc.GlobalPermissions]\n    Roles = []\n    [GenesisDoc.GlobalPermissions.Base]\n      Perms = 2302\n      SetBit = 16383\n\n  [[GenesisDoc.Accounts]]\n    Address = \"7617F988F0EF2870EB2DD81E43FAF2443C27E508\"\n    PublicKey = \"{\\\"type\\\":\\\"ed25519\\\",\\\"data\\\":\\\"5E7F7C2A52CD26E74876B4922D095CF1006854E89D01AE3818D4C37250D6BAE4\\\"}\"\n    Amount = 99999999999999\n    Name = \"Full_0\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = 16383\n        SetBit = 16383\n\n  [[GenesisDoc.Accounts]]\n    Address = \"A313C7AA4FBF9F5E144D07B9B255C4AB44E667AA\"\n    PublicKey = \"{\\\"type\\\":\\\"ed25519\\\",\\\"data\\\":\\\"1AD16E314E57F26AF1F155ED39DBB28A408116D13AA2B6902952BCF545D2FF7E\\\"}\"\n    Amount = 9999999999\n    Name = \"Participant_0\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = 2118\n        SetBit = 2118\n\n  [[GenesisDoc.Validators]]\n    Address = \"7617F988F0EF2870EB2DD81E43FAF2443C27E508\"\n    PublicKey = \"{\\\"type\\\":\\\"ed25519\\\",\\\"data\\\":\\\"5E7F7C2A52CD26E74876B4922D095CF1006854E89D01AE3818D4C37250D6BAE4\\\"}\"\n    Amount = 9999999999\n    Name = \"Full_0\"\n\n    [[GenesisDoc.Validators.UnbondTo]]\n      Address = \"7617F988F0EF2870EB2DD81E43FAF2443C27E508\"\n      PublicKey = \"{\\\"type\\\":\\\"ed25519\\\",\\\"data\\\":\\\"5E7F7C2A52CD26E74876B4922D095CF1006854E89D01AE3818D4C37250D6BAE4\\\"}\"\n      Amount = 9999999999\n\n[Tendermint]\n  Seeds = \"\"\n  ListenAddress = \"tcp://0.0.0.0:46656\"\n  Moniker = \"\"\n  TendermintRoot = \".burrow\"\n\n[Keys]\n  URL = \"http://localhost:4767\"\n\n[RPC]\n  [RPC.V0]\n    Disabled = false\n    [RPC.V0.Server]\n      ChainId = \"\"\n      [RPC.V0.Server.bind]\n        address = \"localhost\"\n        port = 1337\n      [RPC.V0.Server.TLS]\n        tls = false\n        cert_path = \"\"\n        key_path = \"\"\n      [RPC.V0.Server.CORS]\n        enable = false\n        allow_credentials = false\n        max_age = 0\n      [RPC.V0.Server.HTTP]\n        json_rpc_endpoint = \"/rpc\"\n      [RPC.V0.Server.web_socket]\n        websocket_endpoint = \"/socketrpc\"\n        max_websocket_sessions = 50\n        read_buffer_size = 4096\n        write_buffer_size = 4096\n  [RPC.TM]\n    Disabled = false\n    ListenAddress = \"tcp://localhost:46657\"\n  [RPC.Profiler]\n    Disabled = true\n    ListenAddress = \"tcp://localhost:6060\"\n\n[Logging]\n  ExcludeTrace = false\n  NonBlocking = false\n  [Logging.RootSink]\n    [Logging.RootSink.Output]\n      OutputType = \"stderr\"\n      Format = \"json\"\n```","username":"Valveware","ts":"2018-05-02T11:54:39.737Z"}
{"msg":"This is what \n```\nburrow\n``` \nreturns:\n``` \nSourcing config from first of: JSON config file at 'burrow.toml' then defaults\nSourcing config from JSON config file at 'burrow.toml'\ncould not obtain config: invalid character 'V' looking for beginning of value\n```\nburrow.toml:\n```\nValidatorAddress = \"7617F988F0EF2870EB2DD81E43FAF2443C27E508\"\n\n[GenesisDoc]\n  GenesisTime = 2018-05-02T11:46:34Z\n  ChainName = \"BurrowChain_2A0FC2\"\n  [GenesisDoc.GlobalPermissions]\n    Roles = []\n    [GenesisDoc.GlobalPermissions.Base]\n      Perms = 2302\n      SetBit = 16383\n\n  [[GenesisDoc.Accounts]]\n    Address = \"7617F988F0EF2870EB2DD81E43FAF2443C27E508\"\n    PublicKey = \"{\\\"type\\\":\\\"ed25519\\\",\\\"data\\\":\\\"5E7F7C2A52CD26E74876B4922D095CF1006854E89D01AE3818D4C37250D6BAE4\\\"}\"\n    Amount = 99999999999999\n    Name = \"Full_0\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = 16383\n        SetBit = 16383\n\n  [[GenesisDoc.Accounts]]\n    Address = \"A313C7AA4FBF9F5E144D07B9B255C4AB44E667AA\"\n    PublicKey = \"{\\\"type\\\":\\\"ed25519\\\",\\\"data\\\":\\\"1AD16E314E57F26AF1F155ED39DBB28A408116D13AA2B6902952BCF545D2FF7E\\\"}\"\n    Amount = 9999999999\n    Name = \"Participant_0\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = 2118\n        SetBit = 2118\n\n  [[GenesisDoc.Validators]]\n    Address = \"7617F988F0EF2870EB2DD81E43FAF2443C27E508\"\n    PublicKey = \"{\\\"type\\\":\\\"ed25519\\\",\\\"data\\\":\\\"5E7F7C2A52CD26E74876B4922D095CF1006854E89D01AE3818D4C37250D6BAE4\\\"}\"\n    Amount = 9999999999\n    Name = \"Full_0\"\n\n    [[GenesisDoc.Validators.UnbondTo]]\n      Address = \"7617F988F0EF2870EB2DD81E43FAF2443C27E508\"\n      PublicKey = \"{\\\"type\\\":\\\"ed25519\\\",\\\"data\\\":\\\"5E7F7C2A52CD26E74876B4922D095CF1006854E89D01AE3818D4C37250D6BAE4\\\"}\"\n      Amount = 9999999999\n\n[Tendermint]\n  Seeds = \"\"\n  ListenAddress = \"tcp://0.0.0.0:46656\"\n  Moniker = \"\"\n  TendermintRoot = \".burrow\"\n\n[Keys]\n  URL = \"http://localhost:4767\"\n\n[RPC]\n  [RPC.V0]\n    Disabled = false\n    [RPC.V0.Server]\n      ChainId = \"\"\n      [RPC.V0.Server.bind]\n        address = \"localhost\"\n        port = 1337\n      [RPC.V0.Server.TLS]\n        tls = false\n        cert_path = \"\"\n        key_path = \"\"\n      [RPC.V0.Server.CORS]\n        enable = false\n        allow_credentials = false\n        max_age = 0\n      [RPC.V0.Server.HTTP]\n        json_rpc_endpoint = \"/rpc\"\n      [RPC.V0.Server.web_socket]\n        websocket_endpoint = \"/socketrpc\"\n        max_websocket_sessions = 50\n        read_buffer_size = 4096\n        write_buffer_size = 4096\n  [RPC.TM]\n    Disabled = false\n    ListenAddress = \"tcp://localhost:46657\"\n  [RPC.Profiler]\n    Disabled = true\n    ListenAddress = \"tcp://localhost:6060\"\n\n[Logging]\n  ExcludeTrace = false\n  NonBlocking = false\n  [Logging.RootSink]\n    [Logging.RootSink.Output]\n      OutputType = \"stderr\"\n      Format = \"json\"\n```","username":"Valveware","ts":"2018-05-02T11:54:39.737Z"}
{"msg":"bear with I think the most recent commit on develop has cludged a couple of things!","username":"silasdavis","ts":"2018-05-02T11:54:57.243Z"}
{"msg":"No problem, I am just really happy you're taking the time to go through this process with me :blush:","username":"Valveware","ts":"2018-05-02T11:55:51.137Z"}
{"msg":"Well good job I am - I can use this to make sure the quick start actually works :0","username":"silasdavis","ts":"2018-05-02T11:59:25.505Z"}
{"msg":"Well at least my stupidity can be helpful to others :sweat_smile:","username":"Valveware","ts":"2018-05-02T12:00:52.021Z"}
{"msg":"Has joined the channel.","username":"mansoor","ts":"2018-05-02T12:41:06.044Z","type":"uj"}
{"msg":"Has joined the channel.","username":"seanyoung","ts":"2018-05-02T12:51:50.840Z","type":"uj"}
{"msg":"Sorry @Valveware I've been pulled on to calls just returning to this","username":"silasdavis","ts":"2018-05-02T14:54:43.344Z"}
{"msg":"@silasdavis No problem :)","username":"Valveware","ts":"2018-05-03T05:42:14.905Z"}
{"msg":"@silasdavis Im here for 2.5 more hours and otherwise I am also here tomorrow all day, if you're wondering when I'm available :thumbsup_tone1: ","username":"Valveware","ts":"2018-05-03T07:26:05.250Z"}
{"msg":"Hey @silasdavis any update on the pre-release?","username":"Valveware","ts":"2018-05-04T09:38:47.928Z"}
{"msg":"Hi there @Valveware sorry I was knocked back yesterday with conjunctivitis, I'm just working on it now and I'll ping you when pushed and we can walk through","username":"silasdavis","ts":"2018-05-04T13:13:42.694Z"}
{"msg":"Has joined the channel.","username":"nathanaw","ts":"2018-05-05T02:25:38.443Z","type":"uj"}
{"msg":"Hi friends! I am Nathan Aw from Singapore. This is urgent, I need to do a hyperledger burrow demo to students in Singapore to get them excited about burrow. Any resources will be very useful, please? nathan.mk.aw@gmail.com","username":"nathanaw","ts":"2018-05-05T02:26:11.924Z"}
{"msg":"Has joined the channel.","username":"uvaraj6","ts":"2018-05-07T05:58:27.296Z","type":"uj"}
{"msg":"@silasdavis Great, thanks!","username":"Valveware","ts":"2018-05-07T06:18:11.679Z"}
{"msg":"What can you do when you need to deploy a DApp contract which hits you with \"'Error when transacting: Insufficient gas'\"?","username":"Valveware","ts":"2018-05-07T11:38:33.990Z"}
{"msg":"One option I can do is to supply the contract with the addresses of the other contracts that it makes in it's constructor so I can deploy them seperately. But I think I am only allowed to give 2 parameters when deploying contracts so I guess I should put them in an array :thinking_face:  ","username":"Valveware","ts":"2018-05-07T11:42:48.200Z"}
{"msg":"Is there a way to change the gas limit, and a way to check beforehand how much gas a deployment would cost?","username":"Valveware","ts":"2018-05-07T12:56:29.964Z"}
{"msg":"@Valveware if you're hitting insufficient gas, I'd highly recommend looking at your solidity code. At Monax, we have some extremely complex solidity suites of contracts which would never be operational on Ethereum mainnet. Whenever we have never hit insufficient gas unless there is an error in our solidity code. You can search the code for the `MaxGas` setting and adjust it and recompile if you really need to, but burrow's default gas limit is set extremely high. ","username":"compleatang","ts":"2018-05-07T13:40:29.025Z"}
{"msg":"IOWs we've never come up against the maxGas when there is not an error in our solidity, despite having extremely deep call stacks and extenuated micro-services style smart contracts suites which spend gas like it's going out of style....","username":"compleatang","ts":"2018-05-07T13:41:23.384Z"}
{"msg":"The max gas is set in the config.js file of legacy-contracts? And it is set to 1000000?","username":"Valveware","ts":"2018-05-07T13:45:59.239Z"}
{"msg":"it's the max Gas setting in burrow that matters.","username":"compleatang","ts":"2018-05-07T13:47:13.524Z"}
{"msg":"Well it must be an error in my code then since I haven't touched that...\nThis is the method that seems to be too expensive to execute:\n```\ncontract ContractService {\n    // creator of the CMC\n    address owner;\n    // Mapping of all contracts' names and their addresses\n    mapping (bytes32=>address) public contracts;\n    // When this modifier is used only the owner can execute that function.\n    modifier onlyOwner () {require(msg.sender == owner); _;}\n    // Constructor\n    constructor() public {\n        owner = msg.sender;\n        contracts[\"igrow\"] = owner;\n    }\n    //Adds a contract to the list\n    function addContract(bytes32 contractName, address contractAddress) /*onlyOwner*/ public {\n        ContractServiceEnabled(contractAddress).setContractServiceAddress(address(this));\n        contracts[contractName] = contractAddress;\n    }\n}\n```","username":"Valveware","ts":"2018-05-07T13:47:47.832Z"}
{"msg":"the addContract method","username":"Valveware","ts":"2018-05-07T13:48:09.966Z"}
{"msg":"don't work at solidity level so can't help you any further unfortunately.","username":"compleatang","ts":"2018-05-07T13:48:44.413Z"}
{"msg":"Oh that's alright , I'll keep digging ","username":"Valveware","ts":"2018-05-07T13:49:17.264Z"}
{"msg":"It actually goes like this if there's someone else who knows something about Solidity.\nI am now successfully deploying 8 contracts, the first seven are services and repositories, the eight one will be the 'api' which the middleware nodes express server wil use to make calls. This eighth contract uses the above contractservice to keep track of all the services. The services use the same instance to track their repo's etc. Now when I call the api with a name and an address of a contract to add, it calls addContract , with that bytes32 name and an address. This is is the method that seems too expensive to complete for some reason although the things it is doing, setting an address to a bytes32 in a mapping and setting an address on a contract doesn't seem that complicated :/","username":"Valveware","ts":"2018-05-07T14:05:45.855Z"}
{"msg":"I am adding the contracts one by one so it should be small transactions :thinking_face: ","username":"Valveware","ts":"2018-05-07T14:21:27.759Z"}
{"msg":"Has joined the channel.","username":"robwahl","ts":"2018-05-07T15:31:42.530Z","type":"uj"}
{"msg":"@compleatang @silasdavis I'm looking into coding an extension for Caliper which would add Hyperledger Burrow to their list of supported projects. have you guys looked into that yet? [ https://github.com/hyperledger/caliper ]","username":"RobertDiebels","ts":"2018-05-07T16:43:01.672Z"}
{"msg":"@Valveware readme on develop should have sufficient instructions now: https://github.com/hyperledger/burrow/tree/develop we can pick up where we left of. I'm also planning to merge to master today","username":"silasdavis","ts":"2018-05-08T09:40:15.441Z"}
{"msg":"@Valveware I take it you are running with burrow 0.17.1 (i.e. through the monax tool version 0.18.0)?","username":"silasdavis","ts":"2018-05-08T09:53:14.530Z"}
{"msg":"If you are compiling with solidity > 0.4.4 and older Burrow you will hit insufficient gas due to a change (EIP-158 IIRC) that is in latest burrow but not the older version","username":"silasdavis","ts":"2018-05-08T09:54:05.852Z"}
{"msg":"@silasdavis , great I will check it out asap! I might wait till it's on master later today, but I'll keep you posted, thanks for the help! :)","username":"Valveware","ts":"2018-05-08T10:48:32.400Z"}
{"msg":"@silasdavis By the way, when I was interacting with the old burrow from monax 0.18 , I ran into some troubles with the legacy-contracts npm library, There seemed to be an issue with the 17.0 standard version, but I was able to fix it by using the 16.8 version instead :thinking_face: ","username":"Valveware","ts":"2018-05-08T10:52:00.381Z"}
{"msg":"The error happened in dev_pipe, where it called ``` callback(null, data.CallData.Callee) ```, while it should have been        ``` callback(null, data.call_data.callee)```","username":"Valveware","ts":"2018-05-08T11:12:02.328Z"}
{"msg":"yep there have been a few breaking changes, this ought to have been made clearer, once we release Burrow the latest versions of everything will be compatible","username":"silasdavis","ts":"2018-05-08T11:12:25.418Z"}
{"msg":"Sweet :ok_hand: , just wanted to let you know if it wasn't a known error","username":"Valveware","ts":"2018-05-08T11:13:08.321Z"}
{"msg":"Can this docker image be used to setup a cluster on a single machine? https://quay.io/repository/monax/burrow?tab=info","username":"Valveware","ts":"2018-05-08T13:58:35.848Z"}
{"msg":"Has joined the channel.","username":"edumonk","ts":"2018-05-08T14:33:04.229Z","type":"uj"}
{"msg":"How can you get the plain private key from monax-keys? I need them for this:\n```\nvar contracts = require('@monax/legacy-contracts');\nvar burrowURL = \"http://localhost:1337/rpc\";\nvar accountData = require('/some/account/data.json');\nvar contractManager = contracts.newContractManagerDev(burrowURL, accountData);\n```\nHowever it seems monax-keys stores them in an encrypted way at ~/.monax/keys/data","username":"Valveware","ts":"2018-05-09T07:40:12.032Z"}
{"msg":"it stores it like\n```\n{\"Id\":\"MGQwYTIzODMtZjI3NC00OTI3LThlNGYtMzRlYzIzZTBkZThj\",\"Type\":\"ed25519,ripemd160\",\"Address\":\"55DA1FD361566CD3D6BE04A9DC01AA1AF37BBE40\",\"PrivateKey\":\"rwHIJrGORQh13QwWzc6sOo+qpyEGxjbIL/Lnl2Q/WzJlITGlh1dDLoZrxCCV9mCnHI+Zg016zGPVIhzA9Zss8Q==\"}\n```\nSo I am using it like this\n```\n{\n    \"pubKey\":\"652131A58757432E866BC42095F660A71C8F99834D7ACC63D5221CC0F59B2CF1\",\n    \"address\":\"55DA1FD361566CD3D6BE04A9DC01AA1AF37BBE40\",\n    \"privKey\":\"rwHIJrGORQh13QwWzc6sOo+qpyEGxjbIL/Lnl2Q/WzJlITGlh1dDLoZrxCCV9mCnHI+Zg016zGPVIhzA9Zss8Q==\"\n}\n```\n\nHowever it expects  util.js it expects it to be of this format:\n^[0-9a-fA-F]{128}$  which means it has to be the raw public key of 128 characters\n","username":"Valveware","ts":"2018-05-09T09:20:42.303Z"}
{"msg":"it stores it like\n```\n{\n\"Id\":\"MGQwYTIzODMtZjI3NC00OTI3LThlNGYtMzRlYzIzZTBkZThj\",\n\"Type\":\"ed25519,ripemd160\",\"Address\":\"55DA1FD361566CD3D6BE04A9DC01AA1AF37BBE40\",\n\"PrivateKey\":\"rwHIJrGORQh13QwWzc6sOo+qpyEGxjbIL/Lnl2Q/WzJlITGlh1dDLoZrxCCV9mCnHI+Zg016zGPVIhzA9Zss8Q==\"\n}\n```\nSo I am using it like this\n```\n{\n    \"pubKey\":\"652131A58757432E866BC42095F660A71C8F99834D7ACC63D5221CC0F59B2CF1\",\n    \"address\":\"55DA1FD361566CD3D6BE04A9DC01AA1AF37BBE40\",\n    \"privKey\":\"rwHIJrGORQh13QwWzc6sOo+qpyEGxjbIL/Lnl2Q/WzJlITGlh1dDLoZrxCCV9mCnHI+Zg016zGPVIhzA9Zss8Q==\"\n}\n```\n\nHowever it expects  util.js it expects it to be of this format:\n^[0-9a-fA-F]{128}$  which means it has to be the raw public key of 128 characters\n","username":"Valveware","ts":"2018-05-09T09:20:42.303Z"}
{"msg":"it stores it like\n```\n{\n\"Id\":\"MGQwYTIzODMtZjI3NC00OTI3LThlNGYtMzRlYzIzZTBkZThj\",\n\"Type\":\"ed25519,ripemd160\",\"Address\":\"55DA1FD361566CD3D6BE04A9DC01AA1AF37BBE40\",\n\"PrivateKey\":\"rwHIJrGORQh13QwWzc6sOo+qpyEGxjbIL/Lnl2Q/WzJlITGlh1dDLoZrxCCV9mCnHI+Zg016zGPVIhzA9Zss8Q==\"\n}\n```\nSo I am using it like this\n```\n{\n    \"pubKey\":\"652131A58757432E866BC42095F660A71C8F99834D7ACC63D5221CC0F59B2CF1\",\n    \"address\":\"55DA1FD361566CD3D6BE04A9DC01AA1AF37BBE40\",\n    \"privKey\":\"rwHIJrGORQh13QwWzc6sOo+qpyEGxjbIL/Lnl2Q/WzJlITGlh1dDLoZrxCCV9mCnHI+Zg016zGPVIhzA9Zss8Q==\"\n}\n```\n\nHowever it expects  util.js it expects it to be of this format:\n^[0-9a-fA-F]{128}$  which means it has to be the raw public key of 128 characters\n\nAnd it happens in the devPipe when it is trying to transact a new contract, it's not happy with the given privKey","username":"Valveware","ts":"2018-05-09T09:20:42.303Z"}
{"msg":"I found the private key for the node running the serve in a hidden folder created with burrow serve","username":"Valveware","ts":"2018-05-09T10:04:03.357Z"}
{"msg":"Now I managed to supply a valid private key, but when I am deploying a contract I run into the following error:\n```\nBurrow error:  Call of method \"transactAndHold\" with parameters { priv_key: '91821BA9DB370652E3860921A6F8930DD0CA9E78F5532AD3FE9B486D1E68356D8DF\n49E0AEAA21F3ECA633B6D5AB29896C2C45A89445C54351FA5B10DC166E172',  address: '',  data: '<left out>',\n  gas_limit: 1000000,\n  fee: 1 } responded with \"response error when calling monax-keys at http://localhost:4767/pub: open ~/.monax/keys/data/56E9B4AEBE464B2AB1F6521871A2099FCE8847FD/56E9B4AEBE464B2AB1F6521871A2099FCE8847FD: no such file or directory\".\n{ Error: response error when calling monax-keys at http://localhost:4767/pub: open ~/.monax/keys/data/56E9B4AEBE464B2AB1F6521871A2099FCE8847FD/56E9B4AEBE464B2AB1F6521871A2099FCE8847FD: no such file or directory\n    at values.next.then (~/Documents/Truffle/node_test/node_modules/@nodeguy/json-rpc/lib/index.js:16:30)\n    at <anonymous>\n  method: 'transactAndHold',  params:\n   [ { priv_key: '91821BA9DB370652E3860921A6F8930DD0CA9E78F5532AD3FE9B486D1E68356D8DF49E0AEAA21F3ECA633B6D5AB29896C2C45A89445C54351FA5B10DC166E172',\n       address: '',\n       data: '<left out>',\n       gas_limit: 1000000,\n       fee: 1 } ],\n  code: -32603,\n  message: 'response error when calling monax-keys at http://localhost:4767/pub: open ~/.monax/keys/data/56E9B4AEBE464B2AB1F6521871A2099FCE8847FD/56E9B4AEBE464B2AB1F6521871A2099FCE8847FD: no such file or directory' }\n(node:15959) UnhandledPromiseRejectionWarning: Error: response error when calling monax-keys at http://localhost:4767/pub: open ~/.monax/keys/data/56E9B4AEBE464B2AB1F6521871A2099FCE8847FD/56E9B4AEBE464B2AB1F6521871A2099FCE8847FD: no such file or directory\n    at values.next.then (~/Documents/Truffle/node_test/node_modules/@nodeguy/json-rpc/lib/index.js:16:30)\n    at <anonymous>\n```\nThe key with address '56E9B4AEBE464B2AB1F6521871A2099FCE8847FD' does not exist on the my system, that address is also not the validator nor the participant of the chain, yet somehow it goes looking for that particular address :thinking: ","username":"Valveware","ts":"2018-05-09T11:13:33.424Z"}
{"msg":"Hi @Valveware, I'm afraid this is a still a bit of a wringle with where we were at with keys, here is how you can generate the accounts.json that the JS libs are after: https://github.com/monax/bosmarmot/blob/master/test/generate-accounts.json.sh","username":"silasdavis","ts":"2018-05-09T12:05:21.971Z"}
{"msg":"as in `monax-keys convert --addr 933A2DE86C7E0F5A58126156D3DFADD0C59D973D`","username":"silasdavis","ts":"2018-05-09T12:09:55.979Z"}
{"msg":"I'm trying it as we speak :)","username":"Valveware","ts":"2018-05-09T12:10:51.760Z"}
{"msg":"I suspect the key you may have found on disk was: `.burrow/config/node_key.json`?","username":"silasdavis","ts":"2018-05-09T12:11:52.354Z"}
{"msg":"Yep that was it","username":"Valveware","ts":"2018-05-09T12:13:37.481Z"}
{"msg":"But your new method seems to work!","username":"Valveware","ts":"2018-05-09T12:13:43.532Z"}
{"msg":"I only had to change pub_key and priv_key to pubKey and privKey","username":"Valveware","ts":"2018-05-09T12:14:01.385Z"}
{"msg":"The json it generated had pub_key priv_key and I know it requires pubKey privKey by now :p , I just hope that doesn't mean I'm using a wrong version :sweat_smile:","username":"Valveware","ts":"2018-05-09T12:23:27.789Z"}
{"msg":"Btw if revert is not yet supported does that mean I should not be using assert, require and revert?","username":"Valveware","ts":"2018-05-09T12:41:07.618Z"}
{"msg":"Has left the channel.","username":"RobertDiebels","ts":"2018-05-09T12:56:51.100Z","type":"ul"}
{"msg":"Hello, presently is there any way to interact with burrow using web3 given that legacy-contracts.js is marked as deprecated?","username":"mansoor","ts":"2018-05-09T13:48:45.557Z"}
{"msg":"@mansoor You can still use legacy-contracts.js and legacy-db.js , with v0.18 of burrow you can use the latest versions of both (v0.17)","username":"Valveware","ts":"2018-05-09T13:59:40.519Z"}
{"msg":"Oh cool, thanks!","username":"mansoor","ts":"2018-05-09T14:02:18.282Z"}
{"msg":"On a related note, are there any examples of usage of the JSON-RPC API? I'm having some difficulties bootstrapping my client (All I need from it is the output of GetConsensusState and GetBlock ).","username":"mansoor","ts":"2018-05-09T14:14:24.593Z"}
{"msg":"FYI, Function descriptions here: https://github.com/hyperledger/burrow/blob/master/docs/specs/api.md","username":"mansoor","ts":"2018-05-09T14:15:07.168Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2018-05-10T01:15:33.975Z","type":"uj"}
{"msg":"@silasdavis please examine https://hub.docker.com/r/ryjones/burrow/ . I made it using the auto-build options for a repo. is that what you wanted? or do you really want to push from the CI system?","username":"rjones","ts":"2018-05-10T01:16:16.483Z"}
{"msg":"it should build a new image on each merge.","username":"rjones","ts":"2018-05-10T01:17:22.383Z"}
{"msg":"Has joined the channel.","username":"JohnH_Traede","ts":"2018-05-10T04:41:29.031Z","type":"uj"}
{"msg":"Has joined the channel.","username":"krisc 4","ts":"2018-05-10T04:43:26.830Z","type":"uj"}
{"msg":"Ry, we prefer to push from CI than use dockers auto build system. ","username":"compleatang","ts":"2018-05-10T17:39:28.135Z"}
{"msg":"Has joined the channel.","username":"sgaddam","ts":"2018-05-11T05:38:34.593Z","type":"uj"}
{"msg":"Hello erverybody. My monax instance crashes sometimes. I have 4 nodes running, on 4 seperate VM's. When I perform a \"monax ls\" after a couple of days not using the blockchain on the vm where the smart contract was deployed and the chain created, it says the blockchain is down.","username":"kevinstr","ts":"2018-05-15T06:33:35.504Z"}
{"msg":"Whatever I do, I can't get it up","username":"kevinstr","ts":"2018-05-15T06:33:44.619Z"}
{"msg":"any solutions?","username":"kevinstr","ts":"2018-05-15T06:33:48.095Z"}
{"msg":"Do the VM's ever shut down or go to sleep? Maybe due to energy savings settings?","username":"Valveware","ts":"2018-05-15T06:46:15.062Z"}
{"msg":"they don't shut down or go to sleep","username":"kevinstr","ts":"2018-05-15T06:51:22.751Z"}
{"msg":"Then I can't help you, sorry :/","username":"Valveware","ts":"2018-05-15T07:04:05.125Z"}
{"msg":"Hard to debug in isolation. Maybe start by looking at log usage and whether VMs disk is full... ","username":"compleatang","ts":"2018-05-15T08:27:06.571Z"}
{"msg":"Can Solidity v0.4.23 be used with this commit having been merged? https://github.com/hyperledger/burrow/commit/8dd8c0f3161af81b65c7c3fdca5d7a439d1a1483\nBefore I was experiencing a \"RETURNDATASIZE not yet implemented\" error, this might have solved it? I was using the new feature where it's possible to use dynamic arrays..","username":"Valveware","ts":"2018-05-15T09:16:48.233Z"}
{"msg":"Has joined the channel.","username":"obs0811","ts":"2018-05-15T10:07:31.506Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sauravverma","ts":"2018-05-15T10:29:12.580Z","type":"uj"}
{"msg":"@Valveware that should give us support","username":"silasdavis","ts":"2018-05-15T10:48:51.544Z"}
{"msg":"I am yet to produce a test case, if you are in a position to create one then a PR would be gratefully received, see here for the form: https://github.com/monax/bosmarmot/tree/develop/monax/tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type","username":"silasdavis","ts":"2018-05-15T10:50:09.370Z"}
{"msg":"Would just need to be some suitable solidity, and an epm.yaml file as used by our `bos` tool (are you using bos?)","username":"silasdavis","ts":"2018-05-15T10:50:36.396Z"}
{"msg":"Alternatively if you are able to test with some real solidity and confirm or reject it as working I can work that into a test case","username":"silasdavis","ts":"2018-05-15T10:51:16.768Z"}
{"msg":"I'm looking into it right now, I think bos pkgs works the same as monax pkgs. Although I'be been deploying using the js libraries I think I can figure it out that way","username":"Valveware","ts":"2018-05-15T11:12:55.170Z"}
{"msg":"@silasdavis When executing \n```\nbos pkgs do --keys=\"http://localhost:4767\" --chain-url=\"tcp://localhost:46657\" --address=6C5D947A9184BA3A376FFABD1AAF24B5AFDA6F8F\n```\nI get the following error:\n```\nerror deploying contract Driver: error connecting to node (tcp://localhost:46657) to fetch account (6C5D947A9184BA3A376FFABD1AAF24B5AFDA6F8F): Post http://localhost:46657: dial tcp [::1]:46657: connect: connection refused\n```\nWhat could cause this? In my Burrow.toml file I do find this:\n```\n[RPC.TM]\n    Disabled = false\n    ListenAddress = \"tcp://localhost:46657\"\n```","username":"Valveware","ts":"2018-05-15T12:02:09.114Z"}
{"msg":"I managed to solve the issue, just getting an assertion fail atm so checking that out","username":"Valveware","ts":"2018-05-15T12:35:53.757Z"}
{"msg":"Is it not possible to set a string array variable in yaml like this?\n```\n- name: setCarArrayVariable\n  set:\n      data: [ \"Red Car\", \"Green Car\", \"Blue Car\" ]\n\n\n```","username":"Valveware","ts":"2018-05-15T12:40:30.165Z"}
{"msg":"It seems to have worked, also an array gets returned however I do not know how I can assert if they are equal :sweat_smile: But it seems to be correct","username":"Valveware","ts":"2018-05-15T12:46:09.190Z"}
{"msg":"I think I managed to make a pull request :)","username":"Valveware","ts":"2018-05-15T13:02:27.069Z"}
{"msg":"@Valveware Hello","username":"seanyoung","ts":"2018-05-15T15:54:09.269Z"}
{"msg":"Let me know if I can help","username":"seanyoung","ts":"2018-05-15T15:54:17.726Z"}
{"msg":"@seanyoung Hello :) I think I made it work, but the reason it failed on CI is because I told it it was ^0.4.23 and I believe it is only capable of doing ^0.4.22? I couldn't figure out how to set an array of strings to a variable in the epm file. So I couldn't get an assert right\n```\n+- name: assertCarArray\n +  assert:\n +      key: $queryDriverCarArray      relation: ne\n     val: \"\"\n```","username":"Valveware","ts":"2018-05-15T16:14:38.505Z"}
{"msg":"@seanyoung Hello :) I think I made it work, but the reason it failed on CI is because I told it it was ^0.4.23 and I believe it is only capable of doing ^0.4.22? I couldn't figure out how to set an array of strings to a variable in the epm file. So I couldn't get an assert right\n```\n- name: assertCarArray\n    assert:\n     key: $queryDriverCarArray      relation: ne\n     val: \"\"\n```\nThis value I would like to put $setCarArrayVariable, but I tried to define it in a few ways as a variable, but I couldn't figure out the correct syntax for it. The variable should be equal to a string array like this [ 'Red Car', 'Green Car', 'Blue Car'] But the variable remained empty but I could see the method did return the correct array I set it to","username":"Valveware","ts":"2018-05-15T16:14:38.505Z"}
{"msg":"Has joined the channel.","username":"danultimate","ts":"2018-05-15T17:01:11.842Z","type":"uj"}
{"msg":"Has joined the channel.","username":"psprings","ts":"2018-05-15T20:29:00.279Z","type":"uj"}
{"msg":"I think bos has variable assertion on array elements but not the whole array. ","username":"compleatang","ts":"2018-05-15T22:43:45.581Z"}
{"msg":" Thanks Valve! ","username":"compleatang","ts":"2018-05-15T22:44:00.064Z"}
{"msg":"@compleatang Alright, I'll try to figure out a way to do that assertion in a different way\n","username":"Valveware","ts":"2018-05-16T06:22:59.110Z"}
{"msg":"Has anyone ever experienced this kind of error?\n```\nBurrow error:  Call of method \"transactAndHold\" with parameters { priv_key: 'A6837D541CF61F626B0F74CFA36011AE20D47878B9EB0A05943F026528FDCC0AA185F5DE747332FB27CA4E4F2364D7B295345839AA0353165552C16FE359FEA1',\n  address: 'AA60C5E6524030E6838D7999881C3F423251FC52',\n  data: '1888e600000000000000000000000000e370cf4203ab8114cd55b981fb29ca141ea9c504E88AD66C01C15C798F9D6C8628776EF0B71491F1EA4614976396D90F6E82F4465061727469636970616e74205a65726f000000000000000000000000000000000000000000000000000000006c5d947a9184ba3a376ffabd1aaf24b5afda6f8f0000000000000000000000000000000000000000000000000000000000000000',\n  gas_limit: 1000000,\n  fee: 1 } responded with \"private key is not of the right length: 0\n\".\n{ Error: private key is not of the right length: 0\n\n    at values.next.then (/Users/merlijnversteegen/Documents/Contracts/Server/node_modules/@nodeguy/json-rpc/lib/index.js:16:30)\n    at <anonymous>\n  method: 'transactAndHold',\n  params:\n   [ { priv_key: 'A6837D541CF61F626B0F74CFA36011AE20D47878B9EB0A05943F026528FDCC0AA185F5DE747332FB27CA4E4F2364D7B295345839AA0353165552C16FE359FEA1',\n       address: 'AA60C5E6524030E6838D7999881C3F423251FC52',\n       data: '1888e600000000000000000000000000e370cf4203ab8114cd55b981fb29ca141ea9c504E88AD66C01C15C798F9D6C8628776EF0B71491F1EA4614976396D90F6E82F4465061727469636970616e74205a65726f000000000000000000000000000000000000000000000000000000006c5d947a9184ba3a376ffabd1aaf24b5afda6f8f0000000000000000000000000000000000000000000000000000000000000000',\n       gas_limit: 1000000,\n       fee: 1 } ],\n  code: -32602,\n  message: 'private key is not of the right length: 0\\n' }\n```\n\nBecause I can't find where this error gets thrown and what causes it because I should be supplying a private key of the correct length :thinking_face: ","username":"Valveware","ts":"2018-05-16T06:24:17.076Z"}
{"msg":"Could this be a new error, that happens only on the develop branch?","username":"Valveware","ts":"2018-05-16T07:24:29.228Z"}
{"msg":"It also happens when I deploy contracts in the same way as I did before, and it happened when calling a non-view function on a contract. I can however call view functions without that error it seems","username":"Valveware","ts":"2018-05-16T07:29:13.953Z"}
{"msg":"(using the same credentials)","username":"Valveware","ts":"2018-05-16T07:29:21.228Z"}
{"msg":"I am able to deploy the contract with the same account address using bos tooling, but the errors happen when doing things using the js libraries","username":"Valveware","ts":"2018-05-16T07:46:19.753Z"}
{"msg":"@Valveware that's another thing I know very little about, let me see if I can find out","username":"seanyoung","ts":"2018-05-16T08:41:02.810Z"}
{"msg":"I am currently trying to debug through the code to try to find exactly where it's going wrong","username":"Valveware","ts":"2018-05-16T08:50:13.934Z"}
{"msg":"I am currently trying to debug through the code to try to find exactly where it's going wrong\nBut so far I can't pinpoint it yet :(","username":"Valveware","ts":"2018-05-16T08:50:13.934Z"}
{"msg":"So I figured out where it goes wrong","username":"Valveware","ts":"2018-05-16T12:34:56.165Z"}
{"msg":"In unsafe.js theres a function Unsafe.prototype.transactAndHold . It makes the parameters and it does give a prove_key, however Burrow expects an inputAccount object, so I gave it one with a privateKey and it seems to work but then I get this error: \"error when transacting: call error: REVERT not yet fully implemented\"\" does this mean I explicitly called revert somewhere in my solidity code?\n","username":"Valveware","ts":"2018-05-16T12:39:17.290Z"}
{"msg":"Newer versions of solidity use the revert opcode, which is not implemented yet.","username":"seanyoung","ts":"2018-05-16T12:42:15.802Z"}
{"msg":"Hopefully we'll have an implementation soon, @smblucker  is working on it. The checkTx will reject any opcodes without executing (as I understand the code)","username":"seanyoung","ts":"2018-05-16T12:51:38.817Z"}
{"msg":"Has joined the channel.","username":"smblucker","ts":"2018-05-16T12:51:38.908Z","type":"uj"}
{"msg":"Oh darn, I thought we were able to use 0.4.22 already :/","username":"Valveware","ts":"2018-05-16T13:16:09.880Z"}
{"msg":"Now I am getting insufficient gas errors on even the simplest contracts :thinking_face: ","username":"Valveware","ts":"2018-05-16T14:17:46.109Z"}
{"msg":"Scratch that I ran out of balance of the node I was testing with :sweat_smile: ","username":"Valveware","ts":"2018-05-16T14:22:09.490Z"}
{"msg":"haha nice","username":"silasdavis","ts":"2018-05-16T14:25:24.181Z"}
{"msg":"BTW your PR to bosmarmot just needs a rebase I think ","username":"silasdavis","ts":"2018-05-16T14:25:39.489Z"}
{"msg":"for tests to pass","username":"silasdavis","ts":"2018-05-16T14:25:44.877Z"}
{"msg":"regarding JS libs","username":"silasdavis","ts":"2018-05-16T14:25:51.311Z"}
{"msg":"we have change the parameter there, I'm just checking to see what status is with those getting on NPM","username":"silasdavis","ts":"2018-05-16T14:26:42.703Z"}
{"msg":"I'm afraid you're working at the bleeding edge","username":"silasdavis","ts":"2018-05-16T14:26:52.620Z"}
{"msg":"Yeah I have been meaning to ask you @silasdavis is there a better version of the js libraries I can download? Since the changes with the inputAccount instead of priv_key? I have managed to get it working somewhat by editing the js libraries myself but I am not sure that's a good idea :|","username":"Valveware","ts":"2018-05-16T14:27:53.669Z"}
{"msg":"I will get one pushed ASAP if not I'm just consulting my colleague","username":"silasdavis","ts":"2018-05-16T14:28:23.628Z"}
{"msg":"Alright, good to hear :slight_smile: ","username":"Valveware","ts":"2018-05-16T14:29:12.914Z"}
{"msg":"Once I get my nodjs server to work as an api properly I think I should be close to finishing the proof of concept and then I will write out the steps I took to get a dapp working . I hope that can be put to good use by other people wanting to try out burrow with making a dapp. I can write about angular, nodjs express, testing solidity with truffle and setting up and deploying to burrow","username":"Valveware","ts":"2018-05-16T14:32:33.618Z"}
{"msg":"We are going to merge the JS libs... once we have done that we'll make sure we have automatic pushing to NPM from master","username":"silasdavis","ts":"2018-05-16T14:33:04.003Z"}
{"msg":"That would be very helpful to the project","username":"silasdavis","ts":"2018-05-16T14:33:23.848Z"}
{"msg":"That would hopefully make the js libs simpler","username":"Valveware","ts":"2018-05-16T14:35:33.940Z"}
{"msg":"Great, looking forward to it :blush: ","username":"Valveware","ts":"2018-05-16T14:38:02.111Z"}
{"msg":"Valve, indeed that would be very helpful.. ! 😀","username":"compleatang","ts":"2018-05-17T13:53:11.349Z"}
{"msg":"@compleatang For the Bachelor paper that goes with my proof of concept I would like to include some diagrams explaining the architecture of Burrow and I wanted to ask are these still valid diagrams(aside from the Eris namechange)? Since it dates from over a year ago: https://www.altoros.com/blog/hyperledger-incubation-burrow-integrates-permissioned-ethereum-virtual-machine/","username":"Valveware","ts":"2018-05-17T14:07:22.429Z"}
{"msg":"Has joined the channel.","username":"ApurvTandon","ts":"2018-05-18T06:33:01.081Z","type":"uj"}
{"msg":"Hi guys, I've already updated Snak (https://github.com/pouladzade/snack) for burrow 0.18.0 ","username":"pouladzade","ts":"2018-05-18T06:56:02.684Z"}
{"msg":"https://www.npmjs.com/package/snak","username":"pouladzade","ts":"2018-05-18T06:56:06.263Z"}
{"msg":"It supports Linux  and Darwin for now,  hope it will be useful for you too!","username":"pouladzade","ts":"2018-05-18T06:57:27.872Z"}
{"msg":"looks great","username":"silasdavis","ts":"2018-05-18T21:30:11.171Z"}
{"msg":"are you aware of our address-based signing changes? We should get that in there...","username":"silasdavis","ts":"2018-05-18T21:30:24.800Z"}
{"msg":"we are planning to collapse the current JS libs into a single one","username":"silasdavis","ts":"2018-05-18T21:31:03.249Z"}
{"msg":"and also to replace the current RPC with a GRPC interface","username":"silasdavis","ts":"2018-05-18T21:31:22.723Z"}
{"msg":"I'm wondering if that new library could itself be merged into snak","username":"silasdavis","ts":"2018-05-18T21:32:31.165Z"}
{"msg":"I'm also wondering if you would be interested in the possibility of becoming a Burrow maintainer, in particular owning the JS libs...?","username":"silasdavis","ts":"2018-05-18T21:33:33.510Z"}
{"msg":"It wouldn't be a just you thing, but I think given your efforts it would make sense to at least have you in the loop on what we are doing on that side of things","username":"silasdavis","ts":"2018-05-18T21:34:14.922Z"}
{"msg":"Has joined the channel.","username":"JulesMiller","ts":"2018-05-21T01:39:49.310Z","type":"uj"}
{"msg":"Hello, can anyone help me. I'm deploying smart contract via monax pkgs. call a function by js lib seems work fine. \nbut if I deployed via js lib I can't call any function except the constant function\ndid I miss something :( ?","username":"Startoy","ts":"2018-05-21T05:21:24.901Z"}
{"msg":"```\n`MONAX 9389: { method: 'burrow.transactAndHold',\n  params:\n   { priv_key: 'C344039035A691C71755345C13BF719A92085D7AA4ABD75E1B54C74FA0E88E2151F2A0180B9D                          97ED1F73D32D31BBA9E21974C7870DC85D58F063D3EE7FEEC4D8',\n     address: 'DB3C7FF5D229C772C5BA2870A5D26BC1E08E4F4C',\n     data: '0b8c737e00000000000000000000000000000000000000000000000000000000000002e500000000                          00000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000                          00000000000000000000000000140000000000000000000000000000000000000000000000000000000000000002                          0000000000000000000000000000000000000000000000000000000000000013426f6f6b203a2054686520547265                          617375726500000000000000000000000000',\n     gas_limit: 1000000,\n     fee: 1 },\n  id: 'HbOyLpNmb/yoghG2I4gIhU7d4jx9HgTiKBx7MbclVZQ=',\n  jsonrpc: '2.0' }`\n\n``` ","username":"Startoy","ts":"2018-05-21T06:55:47.871Z"}
{"msg":"stuck here and get no response","username":"Startoy","ts":"2018-05-21T06:56:31.359Z"}
{"msg":"this is code\n`var myContract;\ncontractManager.newContractFactory(ABI).new((err, contract) => {\n        if (err) {\n                throw error\n        }\n        myContract = contract\n})\n`","username":"Startoy","ts":"2018-05-21T06:59:36.870Z"}
{"msg":"```\nthis is code\n`var myContract;\ncontractManager.newContractFactory(ABI).new((err, contract) => {\n        if (err) {\n                throw error\n        }\n        myContract = contract\n})\n`\n``` ","username":"Startoy","ts":"2018-05-21T06:59:36.870Z"}
{"msg":"this is code\n```\n`var myContract;\ncontractManager.newContractFactory(ABI).new((err, contract) => {\n        if (err) {\n                throw error\n        }\n        myContract = contract\n})\n`\n``` ","username":"Startoy","ts":"2018-05-21T06:59:36.870Z"}
{"msg":"this is code\n```\n`var myContract;\ncontractManager.newContractFactory(ABI).new((err, contract) => {\n        if (err) {\n                throw error\n        }\n        myContract = contract\n})\n`\n``` \n\nI left it for a while and got\n```\nTransaction timed out.\n``` \n\nI notice that if I use default account. I got timed out\nbut if I use new generate account I got  `Private key is not of the right length: 0\\n` instead, like Valveware","username":"Startoy","ts":"2018-05-21T06:59:36.870Z"}
{"msg":"I left it for a while and got\n```\nTransaction timed out.\n``` ","username":"Startoy","ts":"2018-05-21T07:44:50.902Z"}
{"msg":"I left it for a while and got\n```\nTransaction timed out.\n``` \n\nI notice that if I use default account. I got timed out\nbut if I use new generate account I got  `Private key is not of the right length: 0\\n` instead like Valveware","username":"Startoy","ts":"2018-05-21T07:44:50.902Z"}
{"msg":"I left it for a while and got\n```\nTransaction timed out.\n``` \n\nI notice that if I use default account. I got timed out\nbut if I use new generate account I got  `Private key is not of the right length: 0\\n` instead, like Valveware","username":"Startoy","ts":"2018-05-21T07:44:50.902Z"}
{"msg":"Has joined the channel.","username":"AnkurDaharwal","ts":"2018-05-21T08:41:58.223Z","type":"uj"}
{"msg":"Hello, Can anyone help me please. \nI've deployed contract via `monax pkgs do`. everything works fine, I can call functions using legacy-contract\nbut if I deployed by` contractFactory.new()`. \nis transactAndHold and in a half minute got \n`code: -32603,\n  message: 'Transaction timed out.`\n(all constant/view functions are working fine)\ndid I miss something ?","username":"Startoy","ts":"2018-05-21T09:46:55.167Z"}
{"msg":"```\nHello, Can anyone help me please. \nI've deployed contract via `monax pkgs do`. everything works fine, I can call functions using legacy-contract\nbut if I deployed by` contractFactory.new()`. \nis transactAndHold and in a half minute got \n`code: -32603,\n  message: 'Transaction timed out.`\n(all constant/view functions are working fine)\ndid I miss something ?\n``` ","username":"Startoy","ts":"2018-05-21T09:46:55.167Z"}
{"msg":"Hello, Can anyone help me please. \nI've deployed contract via `monax pkgs do`. everything works fine, I can call functions using legacy-contract\nbut if I deployed by `contractFactory.new()`. \nis transactAndHold and in a half minute got \n`code: -32603,\n  message: 'Transaction timed out.\n`\n(all constant/view functions are working fine)\ndid I miss something ?","username":"Startoy","ts":"2018-05-21T09:46:55.167Z"}
{"msg":"Hello, Can anyone help me please. \nI've deployed contract via `monax pkgs do`. everything works fine, I can call functions using legacy-contract\nbut if I deployed by `contractFactory.new()`\nis transactAndHold and in a half minute got \n`code: -32603,\nmessage: 'Transaction timed out.\n`\n(all constant/view functions are working fine)\ndid I miss something ?","username":"Startoy","ts":"2018-05-21T09:46:55.167Z"}
{"msg":"Hello, Can anyone help me please. \nI've deployed contract via `monax pkgs do`. everything works fine, I can call functions using legacy-contract\nbut if I deployed by `contractFactory.new()`\nis transactAndHold and in a half minute got \n`code: -32603,\nmessage: 'Transaction timed out`\n(all constant/view functions are working fine)\ndid I miss something ?","username":"Startoy","ts":"2018-05-21T09:46:55.167Z"}
{"msg":"Hello, Can anyone help me please. \nI've deployed contract via `monax pkgs do`. everything works fine, I can call functions using legacy-contract\nbut if I deployed by `contractFactory.new()`\nis transactAndHold and in a half minute got \n```\ncode: -32603,\nmessage: 'Transaction timed out\n``` \n(all constant/view functions are working fine)\ndid I miss something ?","username":"Startoy","ts":"2018-05-21T09:46:55.167Z"}
{"msg":"Hello, Can anyone help me please. \nI've deployed contract via `monax pkgs do`. everything works fine, I can call functions using legacy-contract\nbut if I deployed by `contractFactory.new()`\nis transactAndHold and in a half minute got \n```code: -32603,\nmessage: 'Transaction timed out\n``` \n(all constant/view functions are working fine)\ndid I miss something ?","username":"Startoy","ts":"2018-05-21T09:46:55.167Z"}
{"msg":"Hello, Can anyone help me please. \nI've deployed contract via `monax pkgs do`. everything works fine, I can call functions using legacy-contract\nbut if I deployed by `contractFactory.new()`\nis transactAndHold and in half minute got \n```code: -32603,\nmessage: 'Transaction timed out\n``` \n(all constant/view functions are working fine)\ndid I miss something ?","username":"Startoy","ts":"2018-05-21T09:46:55.167Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=zAPEwrxyfZMLxiz4j) @silasdavis About \"address-based signing changes\"  Do you mean the monax_keys stuff? ","username":"pouladzade","ts":"2018-05-21T11:21:31.573Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=zAPEwrxyfZMLxiz4j","url":"https://chat.hyperledger.org/channel/burrow?msg=zAPEwrxyfZMLxiz4j","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=g8JEXyCAGaTN9eF4u) @silasdavis I would be glad if I can help.","username":"pouladzade","ts":"2018-05-21T11:26:04.546Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=g8JEXyCAGaTN9eF4u","url":"https://chat.hyperledger.org/channel/burrow?msg=g8JEXyCAGaTN9eF4u","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"vlas 6","ts":"2018-05-22T06:45:42.511Z","type":"uj"}
{"msg":"I've been looking at the API and the documentation is incomplete, especially the getBlock return fields (https://github.com/hyperledger/burrow/blob/master/docs/specs/api.md). There are TODOs there without a type which are making it difficult for me to parse the returned value. Any updates on this? :)","username":"mansoor","ts":"2018-05-22T13:57:43.755Z"}
{"msg":"@mansoor: See here for the method definition: https://github.com/hyperledger/burrow/blob/develop/rpc/v0/methods.go#L387-L397, which gives you this type: https://github.com/hyperledger/burrow/blob/develop/rpc/result.go#L69-L72 ","username":"silasdavis","ts":"2018-05-22T18:59:59.318Z"}
{"msg":"probably the easiest thing to do would just dump the returned  JSON to debug","username":"silasdavis","ts":"2018-05-22T19:00:14.102Z"}
{"msg":"If you are able to update any missing docs then a PR would be gratefully accepted","username":"silasdavis","ts":"2018-05-22T19:00:31.706Z"}
{"msg":"Has joined the channel.","username":"PoojaVarshneya","ts":"2018-05-22T20:46:34.459Z","type":"uj"}
{"msg":"Has joined the channel.","username":"shaileshjgd","ts":"2018-05-23T02:47:36.823Z","type":"uj"}
{"msg":"Could it be that Burrow is not threaded? For example: when I'm trying to get data from a smart contract on the blockchain via 2 different threads, it just doesn't return any data and sometimes it gives a TransactAndHold error.","username":"kevinstr","ts":"2018-05-23T11:30:14.819Z"}
{"msg":"@silasdavis Done. Updated description for getblock. Sent a PR to develop.","username":"mansoor","ts":"2018-05-24T10:29:14.601Z"}
{"msg":"Kevin, burrow has channels (similar to threads in go), but the chain itself isn't threaded. What version of burrow are you using right now? We've updated that pipeline significantly in 0.18 and would encourage you to try that.","username":"compleatang","ts":"2018-05-24T12:11:59.725Z"}
{"msg":"@Valveware can I introduce you to @KellyCooper who would be very interested in helping you contribute your experience and tutorial that you were offering to write up into the Hyperledger docs and give it some visibility - which hopefully you could reference as part of your thesis","username":"silasdavis","ts":"2018-05-24T14:53:02.958Z"}
{"msg":"Has joined the channel.","username":"KellyCooper","ts":"2018-05-24T14:53:03.551Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=j6Sbn2aPhjbRd4edJ) @valveware feel free to reach out, I'm with the training and education workgroup. We can assist, test, etc. your documentation.","username":"KellyCooper","ts":"2018-05-24T14:56:02.538Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=j6Sbn2aPhjbRd4edJ","url":"https://chat.hyperledger.org/channel/burrow?msg=j6Sbn2aPhjbRd4edJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"#training-and-education-wg includes volunteers available to edit, test and contribute to tutorials and learning materials. Feel free to post possible collaboration in the wg or @KellyCooper. We have many volunteers for beginning projects and some volunteers for advanced. One way we can support your efforts is as users/consumers to comment on clarity, strengths and gaps in your documentation/materials. Your request(s) will be viewed by the group every Monday and we can track/manage on our end. Thanks, Kelly","username":"KellyCooper","ts":"2018-05-24T15:29:07.023Z"}
{"msg":"Has joined the channel.","username":"GPhysics","ts":"2018-05-25T05:40:50.695Z","type":"uj"}
{"msg":"Has joined the channel.","username":"BALACHUPPALA","ts":"2018-05-29T06:02:11.600Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yasu","ts":"2018-05-29T08:29:42.879Z","type":"uj"}
{"msg":"@compleatang  I have downloaded latest Burrow code from github. When I am trying the command `burrow serve --validator-index=0 ` , I am facing the  error: *Error: incorrect usage*. How can I resolve this issue?","username":"Rekha","ts":"2018-05-29T11:30:59.675Z"}
{"msg":"It is now `burrow start --validator-index=0`","username":"silasdavis","ts":"2018-05-29T12:19:37.853Z"}
{"msg":"Ok, Thank you. But I run the above command, I am having following error: *{\"caller\":\"blockchain.go:106\",\"database_key\":\"426C6F636B636861696E5374617465\",\"log_channel\":\"Info\",\"message\":\"Trying to load blockchain state from database\",\"run_id\":\"715d7d93-633b-11e8-8311-6a67eb7116da\",\"scope\":\"LoadOrNewBlockchain\",\"time\":\"2018-05-29T12:25:59.108406537Z\"}\ncould not create Burrow kernel: error creating or loading blockchain state: GenesisDoc passed to LoadOrNewBlockchain has hash: 0xD777D10BE6FA80A9DE9A71F59C3EC5297F5362818C6F8CB3F3777AF91762DBD2, which does not match the one found in database: 0x5C343CDCF75260010AB7427E584623007236BBF90C27A7AF2E7742D52B7F4E68* ","username":"Rekha","ts":"2018-05-29T12:28:15.460Z"}
{"msg":"Ok, Thank you. But I run the above command, I am having following error: *{\"caller\":\"blockchain.go:106\",\"database_key\":\"426C6F636B636861696E5374617465\",\"log_channel\":\"Info\",\"message\":\"Trying to load blockchain state from database\",\"run_id\":\"715d7d93-633b-11e8-8311-6a67eb7116da\",\"scope\":\"LoadOrNewBlockchain\",\"time\":\"2018-05-29T12:25:59.108406537Z\"}\ncould not create Burrow kernel: error creating or loading blockchain state: GenesisDoc passed to LoadOrNewBlockchain has hash: 0xD777D10BE6FA80A9DE9A71F59C3EC5297F5362818C6F8CB3F3777AF91762DBD2, which does not match the one found in database: 0x5C343CDCF75260010AB7427E584623007236BBF90C27A7AF2E7742D52B7F4E68* . I just did `make install_db` after `go get`. How to solve this issue?","username":"Rekha","ts":"2018-05-29T12:28:15.460Z"}
{"msg":"Has joined the channel.","username":"grice_32","ts":"2018-05-29T16:38:25.392Z","type":"uj"}
{"msg":"@Rekha the error is telling you that the burrow local levelDB that is trying to load `now` is different than what is saved to disk. There are two ways around this. (a) if you do not need the previous data then remove the `.burrow` directory, or (b) if you do, then just change directories and start burrow in a different directory which will write a new `.burrow` directory and database to disk. ","username":"compleatang","ts":"2018-05-30T09:40:09.939Z"}
{"msg":"Has joined the channel.","username":"tahaf10","ts":"2018-05-30T10:33:32.901Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jwaup","ts":"2018-05-30T13:52:48.950Z","type":"uj"}
{"msg":"Has joined the channel.","username":"WingAaron","ts":"2018-05-31T00:16:33.548Z","type":"uj"}
{"msg":"@Valveware thanks for the PR! we'll get it merged today most likely.","username":"compleatang","ts":"2018-05-31T08:44:29.945Z"}
{"msg":"@KellyCooper we'd love to leverage the #training-and-education-wg 's resources to on tutorials and learning materials. How can we get started? Happy to have a quick call soon-ish if that's helpful for everyone.","username":"compleatang","ts":"2018-05-31T08:45:26.744Z"}
{"msg":"Has joined the channel.","username":"lev-tatarov","ts":"2018-05-31T15:22:22.386Z","type":"uj"}
{"msg":"maturity","username":"lev-tatarov","ts":"2018-05-31T15:24:23.947Z"}
{"msg":"Has joined the channel.","username":"AspramShadyan","ts":"2018-05-31T19:26:12.063Z","type":"uj"}
{"msg":"Hi everyone. I have some questions connected to the functionality that Burrow offers. I need to know whether I can implement multisignature transactions using Burrow API. ","username":"AspramShadyan","ts":"2018-05-31T19:26:23.484Z"}
{"msg":"Yes, this is something easily done with the EVM, see: https://github.com/ConsenSys/MultiSigWallet","username":"silasdavis","ts":"2018-05-31T19:39:25.034Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ZMJebhHDXFAnLkGf4) @compleatang Monday @ 10:00 am PST we will have our working group call if you would like to discuss what you're working and on and how we can support your efforts. Or, you and I can talk and I can report out to the group. Would be great to have you on the call. ","username":"KellyCooper","ts":"2018-06-01T05:03:24.158Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ZMJebhHDXFAnLkGf4","url":"https://chat.hyperledger.org/channel/burrow?msg=ZMJebhHDXFAnLkGf4","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"pathfinder2104","ts":"2018-06-01T09:56:13.521Z","type":"uj"}
{"msg":"Hi everyone again. I need to know if Burrow offers the functionality to make coin transactions in cryptocurrency exchanges? Are there any APIs available?","username":"AspramShadyan","ts":"2018-06-01T11:44:26.234Z"}
{"msg":"@KellyCooper if you happen to have a calendar invite could you send to silas@monax.io - helps avoid timezone screw ups?","username":"silasdavis","ts":"2018-06-01T12:55:19.010Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=icYRP9hrcqStNYLrK) @silasdavis I emailed the info and asked Tracy (originator) to send you the Google invite as well. Thanks, Kelly","username":"KellyCooper","ts":"2018-06-01T13:31:37.970Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=icYRP9hrcqStNYLrK","url":"https://chat.hyperledger.org/channel/burrow?msg=icYRP9hrcqStNYLrK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"mselimi","ts":"2018-06-01T15:01:40.851Z","type":"uj"}
{"msg":"Hi everyone ! Is there any tutorial (demo) on how to run EVM in Burrow or Sawtooth ? Your help is greatly appreciated. Thanks","username":"mselimi","ts":"2018-06-01T15:05:21.175Z"}
{"msg":"Has joined the channel.","username":"Nawinbit","ts":"2018-06-01T17:24:06.558Z","type":"uj"}
{"msg":"Hi all, i am working on monax platform for past three months. I am  using @momax legacy contract module for communicate with monax platform. In that i am getting error(which throwing infinity time and chain got broken) like burrow error: call of method event pool. With parameter{sub_id:xxxx} respond with subscription not active, wherever I am listening the contract events.  I am getting this error after completing 50 or 60 transaction.Please provide me the solution. If you need a screenshot of the error console, i will share across you. ","username":"Nawinbit","ts":"2018-06-01T18:56:52.998Z"}
{"msg":"Has joined the channel.","username":"vanderheijden86","ts":"2018-06-02T10:10:59.133Z","type":"uj"}
{"msg":"So you guys use the ","username":"vanderheijden86","ts":"2018-06-02T10:20:27.418Z"}
{"msg":"Has joined the channel.","username":"DekoyM","ts":"2018-06-03T16:35:06.082Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=nGotZxLg57stkcGGo) @compleatang Thank you. Now Burrow is configured successfully. I have a doubt like what is the replacement command for `monax pkgs do ....`.","username":"Rekha","ts":"2018-06-04T07:26:59.233Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=nGotZxLg57stkcGGo","url":"https://chat.hyperledger.org/channel/burrow?msg=nGotZxLg57stkcGGo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"GeorgeMoore","ts":"2018-06-04T12:52:15.250Z","type":"uj"}
{"msg":"@Rekha see Monax/bosmarmot for the 7pgraded and repapced tooling for monax pkgs do. If you change to develop branch you'll see instructions. ","username":"compleatang","ts":"2018-06-04T13:45:41.520Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=H2pyYg2rbJHBX9FBE) @mselimi you'll have to ask in the #sawtooth-seth room for sawtooth. For burrow, we only run an evm. See my instructions above for a quick getting started tutorial.","username":"compleatang","ts":"2018-06-04T13:49:05.864Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=H2pyYg2rbJHBX9FBE","url":"https://chat.hyperledger.org/channel/burrow?msg=H2pyYg2rbJHBX9FBE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"SjirNijssen","ts":"2018-06-04T19:38:45.976Z","type":"uj"}
{"msg":"Burrow experts:  The Hyperledger T & E WG approved today the following: \"•Proposed transaction: Let us select the 15 most essential concepts (is not terms) in Fabric, Sawtooth, Burrow and Iroha, and describe clearly, using illustrating relevant examples, understandable to end users and management, how they relate, overlap and where they are different; look forward to endorsements.\"\n\nOn behalf of the WG I submit to you the first two concepts descriptions:   A blockchain is an append-only data structure; a blockchain (instance) consists at any moment in time of a number of blocks. A block contains a number of transactions. The contents of a block is encrypted and each block contains a hash of major parts. It contains also a copy of the hash of the previous block and this is the reason for the term chain. A transaction proposal is a proposal by a client application or administrator to the blockchain network community. The network community can decide to make the transaction proposal a valid transaction, or is classified as an invalid transaction. Please let us know which improvements you want to make to these two concept definitions. Thanks ","username":"SjirNijssen","ts":"2018-06-04T20:07:26.030Z"}
{"msg":"Has joined the channel.","username":"Gaoqi","ts":"2018-06-04T20:46:21.843Z","type":"uj"}
{"msg":"Has joined the channel.","username":"baoyangc","ts":"2018-06-05T01:53:49.544Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Douw3","ts":"2018-06-05T14:37:36.886Z","type":"uj"}
{"msg":"Hi All!\nI'm running into an issue trying to deploy a smart contract.  The error message: \"'transaction timed out TxHash: C643C5683243298AEE10E282129603116A316CA9'\" keeps appearing when I am broadcasting my new contract and I can't figure out where the issue is originating from. \nThe configuration is as such:\n-    network: 'BurrowChain_2A0FC2-E00F59'\n - version: '0.18.0'\n- rpc call:\n{ jsonrpc: '2.0',\n  method: 'burrow.transactAndHold',\n  params: \n   { priv_key: 'CC4D1982A72B78CCA1528F63A85A585E5A368532FA914EECB5BF0E82A83726571806B2C0B6E4E34945A43A8E6A105016CE0F7497717D2FA12343F5F21D675910',\n     data: '608060405234801561001057600080fd5b506101fc806100206000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063166dec531461006757806375aac69e146100b2578063eb638f12146100fd578063fa94904d14610148575b600080fd5b34801561007357600080fd5b5061009c6004803603810190808035906020019092919080359060200190929190505050610193565b6040518082815260200191505060405180910390f35b3480156100be57600080fd5b506100e760048036038101908080359060200190929190803590602001909291905050506101a0565b6040518082815260200191505060405180910390f35b34801561010957600080fd5b5061013260048036038101908080359060200190929190803590602001909291905050506101b6565b6040518082815260200191505060405180910390f35b34801561015457600080fd5b5061017d60048036038101908080359060200190929190803590602001909291905050506101c3565b6040518082815260200191505060405180910390f35b6000818303905092915050565b600081838115156101ad57fe5b05905092915050565b6000818301905092915050565b60008183029050929150505600a165627a7a72305820db38a58e7620e677bd311a38f35bab51a36254c7e8e9e3e23114ec9e9cf7dc990029',\n     address: '8B05651240631E5724CC380D7D249C1FC63F320B',\n     fee: 1,\n     gas_limit: 1000000 },\n  id: '0' }\n\n","username":"Douw3","ts":"2018-06-05T14:40:48.099Z"}
{"msg":"- response:\n{ error: \n   { code: -32603,\n     message: 'transaction timed out TxHash: C643C5683243298AEE10E282129603116A316CA9' },\n  id: '0',\n  jsonrpc: '2.0' }","username":"Douw3","ts":"2018-06-05T14:41:05.499Z"}
{"msg":"Fixed it...\nNote to self: don't provide an address if you're not transacting to a smart contract but trying to deploy one :') \n","username":"Douw3","ts":"2018-06-05T15:22:27.262Z"}
{"msg":"Hehe lol","username":"vanderheijden86","ts":"2018-06-05T17:22:58.111Z"}
{"msg":"Hehehe","username":"vanderheijden86","ts":"2018-06-05T17:22:58.111Z"}
{"msg":"Has joined the channel.","username":"sassafrassas","ts":"2018-06-05T19:47:06.950Z","type":"uj"}
{"msg":"Douw, yes indeed. It's a frustrating nuance at first. However code without an address is how burrow knows to create a new contract from the transaction.","username":"compleatang","ts":"2018-06-05T20:13:08.047Z"}
{"msg":"@SjirNijssen that's well received. What's the best way to keep up with this effort and see all the topics? Is there a wiki somewhere or google doc? ","username":"compleatang","ts":"2018-06-06T08:23:18.560Z"}
{"msg":"@compleatang Thank you. The idea is to gradually build up a set of fundamental concepts. It has been sent to Burrow, Iroha, Fabric and Sawtooth. As ","username":"SjirNijssen","ts":"2018-06-06T14:08:16.655Z"}
{"msg":"@compleatang As soon as all the reactions are in, or coming Friday, the answers will be processed and the next few basic concepts will be added. If you believe you have a better approach, please be sure that is welcome. Hence I would expect that we have in the first colum the name of the concept, then a definition, then how the Borrow concept relates to this, then the Fabric, then Iroha and then Sawtooth. ","username":"SjirNijssen","ts":"2018-06-06T14:11:06.001Z"}
{"msg":"@SjirNijssen no worries. All that sounds reasonable. Just trying to be helpful without you having to dump in our room.","username":"compleatang","ts":"2018-06-06T17:51:09.355Z"}
{"msg":"Hey everyone!!\ndoes burrow not support address casting to smart contracts?\nwhen i try to cast an address to a contract and run a function from it it throws me this error:\n\nBurrow error:  Call of method \"transactAndHold\" with parameters { priv_key: '4FA9518F2508F4B00D1C0AF3DD2A8FE1B667DA2B251ABA92C111D483117B518A17DB80818065467CC45839B82D5644062F4A1EC369F398E5C4E5B54D1C0555CD',\n  address: 'FC9E0607F3895F2EED0A08E82453F94FD6C1857A',\n  data: '7c94c8ca000000000000000000000000b340ba08e27248381f3194ea4bb1916d15c86c9e',\n  gas_limit: 999999999,\n  fee: 1 } responded with \"Error when transacting: Insufficient gas\".\n\ndefinitely does not strike you as a gas error so i traced it a bit down the vm.go source and after commenting the original error this new one started showing up\n\nBurrow error:  Call of method \"transactAndHold\" with parameters { priv_key: '4FA9518F2508F4B00D1C0AF3DD2A8FE1B667DA2B251ABA92C111D483117B518A17DB80818065467CC45839B82D5644062F4A1EC369F398E5C4E5B54D1C0555CD',\n  address: '2471777FE02A4BC270EBEC42CE07CD32B3F607B9',\n  data: '7c94c8ca000000000000000000000000e036772a20ce7bcc4f4fed4d74b8eb45618de1ee',\n  gas_limit: 999999999,\n  fee: 1 } responded with \"Error when transacting: Invalid opcode 4D697373696E67206F70636F64652030783364\".\n\ni cant really understand whats going on here\noriginal sol code :  \n\n function getX(address addr) returns (uint) {\n    big b = big(addr);\n    return b.x();\n  }\n\ndoes the burrow evm have missing opcodes? because the same snippet runs perfectly on remix\ntia guys :D","username":"YoussefAshraf","ts":"2018-06-06T18:21:13.466Z"}
{"msg":"Has joined the channel.","username":"sidkasat","ts":"2018-06-07T03:41:38.069Z","type":"uj"}
{"msg":"which version of Burrow are you using, you probably need to upgrade to Burrow 0.18.0 and the Bos tool: https://github.com/monax/bosmarmot","username":"silasdavis","ts":"2018-06-07T08:40:15.830Z"}
{"msg":"'monax' is now deprecated","username":"silasdavis","ts":"2018-06-07T08:40:24.998Z"}
{"msg":"Has joined the channel.","username":"Aravindr86","ts":"2018-06-07T17:50:59.058Z","type":"uj"}
{"msg":"Has joined the channel.","username":"abraham","ts":"2018-06-08T03:52:27.201Z","type":"uj"}
{"msg":"Has joined the channel.","username":"aKesav","ts":"2018-06-08T07:32:15.022Z","type":"uj"}
{"msg":"hi all I am new to Hyperledger. Could someone direct me to any tutorials to do in hyperledger ? I have know etheruem well.","username":"Aravindr86","ts":"2018-06-08T13:03:21.609Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=2ky5RCN4XXSeNkMGh) @silasdavis \n","username":"YoussefAshraf","ts":"2018-06-08T13:08:37.511Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=2ky5RCN4XXSeNkMGh","url":"https://chat.hyperledger.org/channel/burrow?msg=2ky5RCN4XXSeNkMGh","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=2ky5RCN4XXSeNkMGh) @silasdavis  \nthat is a good idea, i was using 0.17\nwhen i updated to 0.18 and bosmarmot i am having an issue with keys\ndo you have any idea how i can use the new keys with legacy-contracts.js?\ntia :D","username":"YoussefAshraf","ts":"2018-06-08T13:11:25.992Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=2ky5RCN4XXSeNkMGh","url":"https://chat.hyperledger.org/channel/burrow?msg=2ky5RCN4XXSeNkMGh","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Youssef you'll need to upgrade your legacy contracts to the latest version. ","username":"compleatang","ts":"2018-06-08T19:36:42.821Z"}
{"msg":"Aravindr Hyperledger is a whole range of projects and frameworks each with its own direction and utility. Can you explain a bit more about what you're looking for? ","username":"compleatang","ts":"2018-06-08T19:37:44.667Z"}
{"msg":"@compleatang  Our organisation is trying to find out the capabilities of different versions of Hyperledger. I have already gone through Fabric . I want to set up and run Burrow next. could you direct me to any tutorials that discribes on the overall architecture ,installation  and deployment.","username":"Aravindr86","ts":"2018-06-08T19:57:50.527Z"}
{"msg":"Has joined the channel.","username":"enjoythecode","ts":"2018-06-09T07:26:07.343Z","type":"uj"}
{"msg":"Has left the channel.","username":"enjoythecode","ts":"2018-06-09T07:26:40.375Z","type":"ul"}
{"msg":"since when is Monax deprecated?","username":"kevinstr","ts":"2018-06-09T17:06:08.657Z"}
{"msg":"Aravindr, sure, the best place to start is here -> https://github.com/hyperledger/burrow/blob/develop/README.md","username":"compleatang","ts":"2018-06-10T00:57:55.528Z"}
{"msg":"For a more tool.focused approach see here -> https://github.com/monax/bosmarmot/blob/develop/README.md","username":"compleatang","ts":"2018-06-10T00:58:42.443Z"}
{"msg":"Kevin, since earlier this year when we began working on bos and migrating much of the functionality around keys and chain making into bos itself.","username":"compleatang","ts":"2018-06-10T00:59:50.623Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=CogQTcnM95DcofAHq) @compleatang thanx for ur quick reply\nafaik it hasn't been for over a year, and is actually a bit buggy this version 0.16 https://github.com/monax/legacy-contracts.js\ni have made some changes to make it work with burrow 0.17 https://github.com/JoeRoumy/legacy-contracts.js\nbut 0.18 is not coming through with me, they keys generated are encrypted i guess and are not usable within the js code\ntia 😃","username":"YoussefAshraf","ts":"2018-06-10T07:35:32.602Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=CogQTcnM95DcofAHq","url":"https://chat.hyperledger.org/channel/burrow?msg=CogQTcnM95DcofAHq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"patelvasu","ts":"2018-06-11T07:16:51.124Z","type":"uj"}
{"msg":"","username":"compleatang","ts":"2018-06-11T09:11:36.073Z","attachments":[{"type":"file","title":"screenshot-www.npmjs.com-2018.06.11-10-11-01.png","title_link":"/file-upload/M4Yv6MdTHaFu9Bmky/screenshot-www.npmjs.com-2018.06.11-10-11-01.png","image_url":"/file-upload/M4Yv6MdTHaFu9Bmky/screenshot-www.npmjs.com-2018.06.11-10-11-01.png","image_type":"image/png","image_size":94156,"url":"/file-upload/M4Yv6MdTHaFu9Bmky/screenshot-www.npmjs.com-2018.06.11-10-11-01.png","remote":false,"fileId":"M4Yv6MdTHaFu9Bmky","fileName":"screenshot-www.npmjs.com-2018.06.11-10-11-01.png"}]}
{"msg":"FYI, we've moved our current work to https://github.com/monax/bosmarmot that's where the updated code sites. If you make some changes, we'd love PRs back upstream so others can benefit!","username":"compleatang","ts":"2018-06-11T09:13:15.624Z"}
{"msg":"FYI, we've moved our current work to https://github.com/monax/bosmarmot that's where the updated code sits. If you make some changes, we'd love PRs back upstream so others can benefit!","username":"compleatang","ts":"2018-06-11T09:13:15.624Z"}
{"msg":"in the next release of the library we will ship the ability to not use private keys within the library at all, but rather send an address which burrow has in its keys folder and burrow will sign on behalf of the lbirary. all in all this will be significantly safer. We have not removed the old way of signing, but it is significantly more safe to just pass an address and let burrow handle the keys and signing.","username":"compleatang","ts":"2018-06-11T09:15:03.939Z"}
{"msg":"@compleatang  Thank you!!","username":"Aravindr86","ts":"2018-06-11T13:48:26.016Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=XSADLwiiHgSGRzQwK) @compleatang okaayy thank you this worked brilliantly ","username":"YoussefAshraf","ts":"2018-06-12T13:29:00.981Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=XSADLwiiHgSGRzQwK","url":"https://chat.hyperledger.org/channel/burrow?msg=XSADLwiiHgSGRzQwK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=QvuAiXqN9rFi9SigQ) @compleatang sure:ok_hand:","username":"YoussefAshraf","ts":"2018-06-12T13:29:38.967Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=QvuAiXqN9rFi9SigQ","url":"https://chat.hyperledger.org/channel/burrow?msg=QvuAiXqN9rFi9SigQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Do you have any idea if i want the minimum time between blocks to be larger than one second where i should look? or where i should edit? \ntia :D","username":"YoussefAshraf","ts":"2018-06-12T13:31:22.870Z"}
{"msg":"Has joined the channel.","username":"kenty","ts":"2018-06-12T15:45:01.500Z","type":"uj"}
{"msg":"hi guys, so I built burrow and bos on a new system yesterday (so, monax-keys is gone and im going thru Bosmamot steps) ... and I am having issues right at the end trying to deploy with bos ... interestingly, I get two different errors with different use of flags. In the first case with the chain flag, keys flag, and address flag I get an error 'cannot talk to the keys instance'.... even tho I can run `burrow keys list`. When I try using only the address flag, I cannot talk to the chain and get and INTERNAL_ERROR 32603. I have verified for certain I am using the proper account ( examined the genesis.json as well as running `burrow keys list` ) ... any idea where I went wrong?","username":"stingley","ts":"2018-06-12T15:59:34.093Z"}
{"msg":"hi guys, so I built burrow v 0.18.1 and bos v 0.2.0 on a new system yesterday (so, monax-keys is gone and im going thru Bosmamot steps) ... and I am having issues right at the end trying to deploy with bos ... interestingly, I get two different errors with different use of flags. In the first case with the chain flag, keys flag, and address flag I get an error 'cannot talk to the keys instance'.... even tho I can run `burrow keys list`. When I try using only the address flag, I cannot talk to the chain and get and INTERNAL_ERROR 32603. I have verified for certain I am using the proper account ( examined the genesis.json as well as running `burrow keys list` ) ... any idea where I went wrong?","username":"stingley","ts":"2018-06-12T15:59:34.093Z"}
{"msg":"","username":"stingley","ts":"2018-06-12T15:59:52.228Z","attachments":[{"type":"file","title":"bos deploy fail.png","title_link":"/file-upload/Czcdpd3g9TcgM9cjg/bos%20deploy%20fail.png","image_url":"/file-upload/Czcdpd3g9TcgM9cjg/bos%20deploy%20fail.png","image_type":"image/png","image_size":152418,"url":"/file-upload/Czcdpd3g9TcgM9cjg/bos%20deploy%20fail.png","remote":false,"fileId":"Czcdpd3g9TcgM9cjg","fileName":"bos deploy fail.png"}]}
{"msg":"","username":"stingley","ts":"2018-06-12T16:00:01.174Z","attachments":[{"type":"file","title":"bos deploy fail 2.png","title_link":"/file-upload/rWnhQaAGsnYypmeTt/bos%20deploy%20fail%202.png","image_url":"/file-upload/rWnhQaAGsnYypmeTt/bos%20deploy%20fail%202.png","image_type":"image/png","image_size":197826,"url":"/file-upload/rWnhQaAGsnYypmeTt/bos%20deploy%20fail%202.png","remote":false,"fileId":"rWnhQaAGsnYypmeTt","fileName":"bos deploy fail 2.png"}]}
{"msg":"Has joined the channel.","username":"basilji","ts":"2018-06-12T17:06:38.476Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sigma67","ts":"2018-06-12T22:53:04.775Z","type":"uj"}
{"msg":"Has joined the channel.","username":"GowthamG","ts":"2018-06-13T08:50:48.677Z","type":"uj"}
{"msg":"@stingley the grpc keys service in burrow listens on port 10997, not 4767. ","username":"seanyoung","ts":"2018-06-13T08:52:29.811Z"}
{"msg":"also,  grpc wants the url without the http:// prefix. So it should be \"bos --keys=\"localhost:10997 ... \" (which also the default argument for --keys)","username":"seanyoung","ts":"2018-06-13T08:53:49.568Z"}
{"msg":"Has joined the channel.","username":"aswinuthara","ts":"2018-06-13T08:54:18.911Z","type":"uj"}
{"msg":"@stingley if you can't connect can you run with --debug flag, that will help us ferret out what may be happening with the connection. our test runner in bos/tests can give some hints around configuration and flags... ","username":"compleatang","ts":"2018-06-14T10:57:01.350Z"}
{"msg":"","username":"aswinuthara","ts":"2018-06-14T12:31:35.069Z","attachments":[{"type":"file","title":"Screenshot from 2018-06-14 18-00-27.png","title_link":"/file-upload/QsNNKaS2qPph6QpHX/Screenshot%20from%202018-06-14%2018-00-27.png","image_url":"/file-upload/QsNNKaS2qPph6QpHX/Screenshot%20from%202018-06-14%2018-00-27.png","image_type":"image/png","image_size":80325,"url":"/file-upload/QsNNKaS2qPph6QpHX/Screenshot%20from%202018-06-14%2018-00-27.png","remote":false,"fileId":"QsNNKaS2qPph6QpHX","fileName":"Screenshot from 2018-06-14 18-00-27.png"}]}
{"msg":"Has joined the channel.","username":"paulananth","ts":"2018-06-14T16:19:49.668Z","type":"uj"}
{"msg":"What are your Burrow and Bos versions? Can you please rerun with the debug flag and send across the results? ","username":"compleatang","ts":"2018-06-16T00:23:27.131Z"}
{"msg":"Has joined the channel.","username":"RenanKruger","ts":"2018-06-16T13:57:32.906Z","type":"uj"}
{"msg":"Has joined the channel.","username":"faustovanin","ts":"2018-06-16T14:01:24.128Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ricardoshuree","ts":"2018-06-16T14:07:10.766Z","type":"uj"}
{"msg":"","username":"basilji","ts":"2018-06-18T06:10:12.121Z","attachments":[{"type":"file","title":"log.txt","title_link":"/file-upload/LnGx25Z6tm2r4gtyF/log.txt","url":"/file-upload/LnGx25Z6tm2r4gtyF/log.txt","remote":false,"fileId":"LnGx25Z6tm2r4gtyF","fileName":"log.txt"}]}
{"msg":"","username":"basilji","ts":"2018-06-18T06:10:12.121Z","attachments":[{"type":"file","title":"log.txt","title_link":"/file-upload/LnGx25Z6tm2r4gtyF/log.txt","url":"/file-upload/LnGx25Z6tm2r4gtyF/log.txt","remote":false,"fileId":"LnGx25Z6tm2r4gtyF","fileName":"log.txt"}]}
{"msg":"basilji, the burrow version you have is just in the midst of a bunch of instability between it and bos. please rerun against commit f11bca8961d2013b45ce0c55f46dff975a080eff or greater and let us know if the error persists. ","username":"compleatang","ts":"2018-06-18T08:18:51.973Z"}
{"msg":"","username":"basilji","ts":"2018-06-18T11:13:57.234Z","attachments":[{"type":"file","title":"logs.txt","title_link":"/file-upload/vFQTPso8fauww33YP/logs.txt","url":"/file-upload/vFQTPso8fauww33YP/logs.txt","remote":false,"fileId":"vFQTPso8fauww33YP","fileName":"logs.txt"}]}
{"msg":"Thanks @compleatang   Still I am getting the error \nburrow version\n0.18.1+commit.v0.18.0-98-gf11bca8\n\nbos version\n0.2.0+commit.b5f6db7\n\n","username":"basilji","ts":"2018-06-18T11:14:20.855Z"}
{"msg":"ok. are you trying from a fresh directory with a fresh burrow.toml and/or genesis.json? if so please file an issue in hyperledger/burrow with a way that we can recreate the issue and we'll take a look. we are not seeing this issue at all and our integrations tests are passing ","username":"compleatang","ts":"2018-06-18T16:46:21.065Z"}
{"msg":"@compleatang Yes I am trying it from a fresh directory with fresh burrow.toml and genesis.json","username":"basilji","ts":"2018-06-19T04:28:32.284Z"}
{"msg":"@compleatang Yes I am trying it from a fresh directory with fresh burrow.toml and genesis.json\nI have raised the issue  under hyperledger/burrow repo [Issue in contract deployment #811]","username":"basilji","ts":"2018-06-19T04:28:32.284Z"}
{"msg":"Hai all, I'm also facing the same issue, so do we have any other method for contract deployment??","username":"aswinuthara","ts":"2018-06-20T08:28:51.485Z"}
{"msg":"Is there any document available for setting up multi node for Burrow","username":"basilji","ts":"2018-06-20T08:35:05.053Z"}
{"msg":"@basilji we've recreated the issue. if you upgrade to bos's develop branch that will fix the problem. cc @aswinuthara ","username":"compleatang","ts":"2018-06-20T09:00:01.382Z"}
{"msg":"Basilji the best we have available is in the monax repos under the legacy-docs section. Those are old and we don't currently have bandwidth to update them, but we'd love some assistance from the community here :)","username":"compleatang","ts":"2018-06-20T09:00:59.555Z"}
{"msg":"Thanks @compleatang  . Its working fine","username":"basilji","ts":"2018-06-20T10:54:36.985Z"}
{"msg":"@compleatang  In new  0.18.0 monax/legacy-contracts  its mentioned to use require('/some/account/data.json') .Do we need to create data.json manually","username":"basilji","ts":"2018-06-20T12:38:20.329Z"}
{"msg":"@compleatang  In new  0.18.0 monax/legacy-contracts  its mentioned to use require('/some/account/data.json') .Do we need to create data.json manually with the information that is created under .keys/data","username":"basilji","ts":"2018-06-20T12:38:20.329Z"}
{"msg":"you'll need the address only. cc @dennismckinnon who can fill in the details. ","username":"compleatang","ts":"2018-06-20T14:57:38.620Z"}
{"msg":"Has joined the channel.","username":"Katie_Wei","ts":"2018-06-20T18:40:31.304Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Villarreal","ts":"2018-06-21T01:52:39.348Z","type":"uj"}
{"msg":"@dennismckinnon  I am getting below error while I am trying to invoke the contract using monax/legacy-contracts\nBurrow error:  Call of method \"transactAndHold\" with parameters { inputAccount:\n   { address: undefined,\n     privateKey: 'lFisFkwVnf7nzLPqqfRAyR43sc+UQAJs26135n7tvSPhkfFdA/33YTjWtO51A80BEKw/3dcqEp9r/z4wyZdvIA==' },\n  address: '642A238E9572A0693150FEC73436125843210C4A',\n  data: '1f7554c8',\n  gasLimit: 1000000,\n  fee: 1 } responded with \"go-hex: invalid byte: U+006C 'l'\".\n{ Error: go-hex: invalid byte: U+006C 'l'\n    at values.next.then (/home/twinapp/chain_dir_new/node_modules/@nodeguy/json-rpc/lib/index.js:16:30)\n    at <anonymous>\n  method: 'transactAndHold',\n  params:\n   [ { inputAccount: [Object],\n       address: '642A238E9572A0693150FEC73436125843210C4A',\n       data: '1f7554c8',\n       gasLimit: 1000000,\n       fee: 1 } ],\n  code: -32602,\n  message: 'go-hex: invalid byte: U+006C \\'l\\'' }\n","username":"basilji","ts":"2018-06-21T05:15:20.116Z"}
{"msg":"@dennismckinnon  I am getting below error while I am trying to invoke the contract using monax/legacy-contracts\nBurrow error:  Call of method \"transactAndHold\" with parameters { inputAccount:\n   { address: undefined,\n     privateKey: 'lFisFkwVnf7nzLPqqfRAyR43sc+UQAJs26135n7tvSPhkfFdA/33YTjWtO51A80BEKw/3dcqEp9r/z4wyZdvIA==' },\n  address: '642A238E9572A0693150FEC73436125843210C4A',\n  data: '1f7554c8',\n  gasLimit: 1000000,\n  fee: 1 } responded with \"go-hex: invalid byte: U+006C 'l'\".\n{ Error: go-hex: invalid byte: U+006C 'l'\n    at values.next.then (/home/twinapp/chain_dir_new/node_modules/@nodeguy/json-rpc/lib/index.js:16:30)\n    at <anonymous>\n  method: 'transactAndHold',\n  params:\n   [ { inputAccount: [Object],\n       address: '642A238E9572A0693150FEC73436125843210C4A',\n       data: '1f7554c8',\n       gasLimit: 1000000,\n       fee: 1 } ],\n  code: -32602,\n  message: 'go-hex: invalid byte: U+006C \\'l\\'' }\n\n\nI have taken the privateKey from the .keys/data file","username":"basilji","ts":"2018-06-21T05:15:20.116Z"}
{"msg":"you'll need to change the privateKey from base64 encoding to hex bytes if you want to use it. but you shouldn't need to. you should just use the sign with address. ","username":"compleatang","ts":"2018-06-21T09:20:45.240Z"}
{"msg":"if you really want to use the private key and the public key then you'll need to transform them. ","username":"compleatang","ts":"2018-06-21T09:21:02.193Z"}
{"msg":"here's a \"simple\" one liner to do that: `burrow keys export --addr=$(cat $CHAIN_SOURCE_DIRECTORY/keys/names/server_key) | jq -r '.PrivateKey.Plain' | base64 -d -i | hexdump -v -e '/1 \"%02x\" ' | awk '{print toupper($0)}'`","username":"compleatang","ts":"2018-06-21T09:21:17.452Z"}
{"msg":"you'll need to change the fields after the `jq` command as needed for the address and public key to have the same formatting.","username":"compleatang","ts":"2018-06-21T09:22:01.652Z"}
{"msg":"Thanks @compleatang ","username":"basilji","ts":"2018-06-21T11:26:04.553Z"}
{"msg":"I was able to invoke smart contract using monax/legacy-contracts, but when I tried to handle multiple event call back its giving  below error \n\nBurrow error:  Call of method \"eventPoll\" with parameters { subId: 'F0DCD88320E00DAB21DA4625390B1910D531443B45A9021880FB533B50B9F4A4' } responded with \"Subscription not active. ID: F0DCD88320E00DAB21DA4625390B1910D531443B45A9021880FB533B50B9F4A4\".\n(node:1467) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1425): TypeError: Cannot read property 'EventDataLog' of undefined\n","username":"basilji","ts":"2018-06-22T04:51:23.713Z"}
{"msg":"Has left the channel.","username":"dklesev","ts":"2018-06-22T12:28:08.012Z","type":"ul"}
{"msg":"Has joined the channel.","username":"rudimk","ts":"2018-06-23T04:14:37.390Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Mahesh1 2","ts":"2018-06-23T16:56:35.910Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dyeghikoo","ts":"2018-06-25T14:10:27.923Z","type":"uj"}
{"msg":"Has joined the channel.","username":"GiuseppeLittera","ts":"2018-06-25T20:13:01.951Z","type":"uj"}
{"msg":"Could anybody help on above issue .","username":"basilji","ts":"2018-06-26T06:30:55.493Z"}
{"msg":"Has joined the channel.","username":"raymondfx","ts":"2018-06-26T09:47:52.906Z","type":"uj"}
{"msg":"","username":"adamludvik","ts":"2018-06-27T10:15:10.855Z","attachments":[{"type":"file","title":"IMG_20180627_121136602.jpg","title_link":"/file-upload/TvXGbprZGymcBSPcB/IMG_20180627_121136602.jpg","image_url":"/file-upload/TvXGbprZGymcBSPcB/IMG_20180627_121136602.jpg","image_type":"image/jpeg","image_size":3560441,"url":"/file-upload/TvXGbprZGymcBSPcB/IMG_20180627_121136602.jpg","remote":false,"fileId":"TvXGbprZGymcBSPcB","fileName":"IMG_20180627_121136602.jpg"}]}
{"msg":"I am digging the new Burrow sticker","username":"adamludvik","ts":"2018-06-27T10:15:20.795Z"}
{"msg":":)","username":"silasdavis","ts":"2018-06-27T18:35:38.750Z"}
{"msg":"oh nice","username":"silasdavis","ts":"2018-06-27T18:35:42.868Z"}
{"msg":"I don't even have one","username":"silasdavis","ts":"2018-06-27T18:35:47.277Z"}
{"msg":"I do have Sawtooth on my bag still though, I must say it's a godo one","username":"silasdavis","ts":"2018-06-27T18:35:55.853Z"}
{"msg":"I do have Sawtooth on my bag still though, I must say it's a good one","username":"silasdavis","ts":"2018-06-27T18:35:55.853Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=7gNwJDcwJqumJkhxA) @adamludvik Jealous!!!","username":"snowy13","ts":"2018-06-27T19:37:43.057Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=7gNwJDcwJqumJkhxA","url":"https://chat.hyperledger.org/channel/burrow?msg=7gNwJDcwJqumJkhxA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"hello guys,\nis it possible to send wei with the TransactAndHold method? \nif so what param name does burrow expect since \"value\" did not work\n`  var param = {inputAccount: inputAccount, address, data, gasLimit: gasLimit, fee, *value:2000*}\n`","username":"YoussefAshraf","ts":"2018-06-27T23:13:27.852Z"}
{"msg":"hello guys,\nis it possible to send wei with the TransactAndHold method? \nif so what param name does burrow expect since \"value\" did not work\n`  var param = {inputAccount: inputAccount, address, data, gasLimit: gasLimit, fee, *value:2000*}`\nTia guys :D","username":"YoussefAshraf","ts":"2018-06-27T23:13:27.852Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=7gNwJDcwJqumJkhxA) \nohh very nicee","username":"YoussefAshraf","ts":"2018-06-27T23:20:00.242Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=7gNwJDcwJqumJkhxA","url":"https://chat.hyperledger.org/channel/burrow?msg=7gNwJDcwJqumJkhxA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"jhscheufen","ts":"2018-06-28T11:42:37.757Z","type":"uj"}
{"msg":"","username":"dyeghikoo","ts":"2018-06-28T13:05:11.001Z","attachments":[{"type":"file","title":"Clipboard - 28 de junio de 2018 15:05","title_link":"/file-upload/i7B9J4mWJP3bPGP8b/Clipboard%20-%2028%20de%20junio%20de%202018%2015:05","image_url":"/file-upload/i7B9J4mWJP3bPGP8b/Clipboard%20-%2028%20de%20junio%20de%202018%2015:05","image_type":"image/png","image_size":26548,"url":"/file-upload/i7B9J4mWJP3bPGP8b/Clipboard%20-%2028%20de%20junio%20de%202018%2015:05","remote":false,"fileId":"i7B9J4mWJP3bPGP8b","fileName":"Clipboard - 28 de junio de 2018 15:05"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-06-28T13:05:11.001Z","attachments":[{"type":"file","title":"Clipboard - 28 de junio de 2018 15:05","title_link":"/file-upload/i7B9J4mWJP3bPGP8b/Clipboard%20-%2028%20de%20junio%20de%202018%2015:05","image_url":"/file-upload/i7B9J4mWJP3bPGP8b/Clipboard%20-%2028%20de%20junio%20de%202018%2015:05","image_type":"image/png","image_size":26548,"url":"/file-upload/i7B9J4mWJP3bPGP8b/Clipboard%20-%2028%20de%20junio%20de%202018%2015:05","remote":false,"fileId":"i7B9J4mWJP3bPGP8b","fileName":"Clipboard - 28 de junio de 2018 15:05"}]}
{"msg":"by adding a validator address to the burrow.toml or the flags. see `burrow start --help` for more information.","username":"compleatang","ts":"2018-06-28T13:06:21.285Z"}
{"msg":"All, we've released burrow v0.19.0 with big stability and usability improvement's, better integration capacity with kubernetes, and first implementation of a coherent grpc framework for enhanced integration with external systems. The Monax tools for burrow have also been updated. This should be the final big release where Monax tooling (other than js libraries) are required. ","username":"compleatang","ts":"2018-06-28T13:20:25.120Z"}
{"msg":"https://github.com/hyperledger/burrow/releases/tag/v0.19.0","username":"compleatang","ts":"2018-06-28T13:20:29.784Z"}
{"msg":"@dyeghikoo  specifically add `ValidatorAddress = \"Xxxx\"` to your burrow.toml or use `--validator-address=Xxxxx` on command line. ","username":"compleatang","ts":"2018-06-28T13:22:09.006Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Xdh7djFtY5QH8zPuS) @basilji  this is normally an intermittent error resulting from the hacky event polling system on the burrow side","username":"dennismckinnon","ts":"2018-06-28T13:50:23.221Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Xdh7djFtY5QH8zPuS","url":"https://chat.hyperledger.org/channel/burrow?msg=Xdh7djFtY5QH8zPuS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Luckily the next version of the libs will be switching over to grpc and a better event pipeline so this error should finally be vanquished","username":"dennismckinnon","ts":"2018-06-28T13:51:18.755Z"}
{"msg":"Has joined the channel.","username":"jelbazi","ts":"2018-06-28T15:48:52.738Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Ra55AmoDnnZyjtcxm) any help would be greaty appreciated guys :D\ni am trying to get the smart contract to detect that msg.value has the value that is sent\neven the sendAndHold method correctly transfers the amount but msg.value appears to be 0 in the fallback method ","username":"YoussefAshraf","ts":"2018-06-28T20:19:24.990Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Ra55AmoDnnZyjtcxm","url":"https://chat.hyperledger.org/channel/burrow?msg=Ra55AmoDnnZyjtcxm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Ra55AmoDnnZyjtcxm) any help would be greaty appreciated guys :D\ni am trying to get the smart contract to detect that msg.value has the value that is sent\neven the sendAndHold method correctly transfers the amount but the fallback method is never triggered","username":"YoussefAshraf","ts":"2018-06-28T20:19:24.990Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Ra55AmoDnnZyjtcxm","url":"https://chat.hyperledger.org/channel/burrow?msg=Ra55AmoDnnZyjtcxm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Youssef that's like three different semi-complex questions rolled into one 😀 Can you unpack a bit more what you are trying to accomplish and what's failing?","username":"compleatang","ts":"2018-06-28T22:46:13.706Z"}
{"msg":"Has joined the channel.","username":"ricktobacco","ts":"2018-06-29T06:38:00.029Z","type":"uj"}
{"msg":"So is it unheard of to run two hyperledger projects together. So if I am interested in Indy, but I want smart contract functionality, can I run them together, or at least have them coordinate in some way if they run on separate networks?","username":"ricktobacco","ts":"2018-06-29T06:38:02.593Z"}
{"msg":"Not unheard of. Quilt is meant to provide some level of bridging but I'm not totally sure it's compatibility with burrow or Indy. In the short run you'd just need to bridge via oracles. This use case pattern we think would be widely used and we'd love contributions that make it easy as possible to connect... ","username":"compleatang","ts":"2018-06-29T08:22:54.027Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=jfzEWo7pDMynwFokf) @dennismckinnon \nThanks @dennismckinnon . I tried with 0.19.0+commit.v0.18.0-145-g7daf9ec version still we have the issue.","username":"basilji","ts":"2018-06-29T09:07:25.216Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=jfzEWo7pDMynwFokf","url":"https://chat.hyperledger.org/channel/burrow?msg=jfzEWo7pDMynwFokf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"AbidiBassem","ts":"2018-06-29T11:04:36.690Z","type":"uj"}
{"msg":"Basiliji is your chain on and making blocks after the call? Is your node layer still able to connect to the blockchain after the call? Every time this error arises that I've seen it is a connectivity issue or a chain instability issue. ","username":"compleatang","ts":"2018-06-29T11:23:54.033Z"}
{"msg":"   yes all the time chain is on.","username":"basilji","ts":"2018-06-29T11:43:13.914Z"}
{"msg":"   yes all the time chain is on. This issue will happen if we call the contract function (which is having event) continuously. For example if we call the function in async manner for 20 iteration , it will work as expected but if exceeds more than that it will fail.","username":"basilji","ts":"2018-06-29T11:43:13.914Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M) \nokay so that wasnt very clear, my bad @compleatang \ni am trying to implement the five types model, and honestly everything is perfect except for one thing; wei\ni am using the legacy contracts (LCs) and i try to call a payable function on the smart contract (SC) to send it some wei \nso the contractFactory uses transactAndHold by default but i see no option to add a \"value\" attribute to that request so msg.value reads 0 in the SC\nanother option i tried was to use the sendAndHold method of the txs object from LCs and aim for the fallback method but the sendAndHold does not trigger the fallback even tho wei was transfered succesfully to the SC\nso basically the SC has no way to detect that it received  ","username":"YoussefAshraf","ts":"2018-06-29T19:03:42.344Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M","url":"https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M) \nokay so that wasnt very clear, my bad @compleatang \n\ni am trying to implement the five types model, and honestly everything is perfect except for one thing; wei\ni am using the legacy contracts (LCs) and i try to call a payable function on the smart contract (SC) to send it some wei \nso the contractFactory uses transactAndHold by default but i see no option to add a \"value\" attribute to that request so msg.value reads 0 in the SC\nanother option i tried was to use the sendAndHold method of the txs object from LCs and aim for the fallback method but the sendAndHold does not trigger the fallback even tho wei was transfered succesfully to the SC\nso basically the SC has no way to detect that it received any wei or of course know how much was received\n","username":"YoussefAshraf","ts":"2018-06-29T19:03:42.344Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M","url":"https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M) \nokay so that wasnt very clear, my bad @compleatang \n\ni am trying to implement the five types model, and honestly everything is perfect except for one thing; wei\ni am using the legacy contracts (LCs) and i try to call a payable function on the smart contract (SC) to send it some wei \nso the contractFactory uses transactAndHold by default but i see no option to add a \"value\" attribute to that request so msg.value reads 0 in the SC\nanother option i tried was to use the sendAndHold method of the txs object from LCs and aim for the fallback method but the sendAndHold does not trigger the fallback even tho wei was transfered succesfully to the SC\nso basically the SC has no way to detect that it received any wei or of course know how much was received\n\nAny thoughts on either of those 2 methods would be great","username":"YoussefAshraf","ts":"2018-06-29T19:03:42.344Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M","url":"https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M) \nokay so that wasnt very clear, my bad @compleatang \n\ni am trying to implement the five types model, and honestly everything is perfect except for one thing; wei\ni am using the legacy contracts (LCs) and i try to call a payable function on the smart contract (SC) to send it some wei \nso the contractFactory uses transactAndHold by default but i see no option to add a \"value\" attribute to that request so msg.value reads 0 in the SC\nanother option i tried was to use the sendAndHold method of the txs object from LCs and aim for the fallback method but the sendAndHold does not trigger the fallback even tho wei was transfered succesfully to the SC\nso basically the SC has no way to detect that it received any wei or of course know how much was received\n\nAny thoughts on either of those 2 methods would be great, thank you :D","username":"YoussefAshraf","ts":"2018-06-29T19:03:42.344Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M","url":"https://chat.hyperledger.org/channel/burrow?msg=vDwG26cY3DdN4pb6M","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"boatnoy","ts":"2018-06-30T19:13:34.644Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vagnerasilva","ts":"2018-07-01T13:03:28.273Z","type":"uj"}
{"msg":"Has joined the channel.","username":"FarhadNadi","ts":"2018-07-01T16:50:46.505Z","type":"uj"}
{"msg":" [ ](https://chat.hyperledger.org/channel/burrow?msg=qDJr5HSTJhCEoPWRa)  any ideas guys? :sweat_smile:","username":"YoussefAshraf","ts":"2018-07-01T18:43:53.868Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=qDJr5HSTJhCEoPWRa","url":"https://chat.hyperledger.org/channel/burrow?msg=qDJr5HSTJhCEoPWRa","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@YoussefAshraf so this has been a long-standing omission of Transactor. We basically have it hard-wired to always transfer 0 value. For historical reasons it was kept this way. We have done a load of ugprade work to implement a GRPC-based RPC layer and I have just pushed a change that allows you to set the value to transfer: https://github.com/hyperledger/burrow/pull/826","username":"silasdavis","ts":"2018-07-02T11:27:47.299Z"}
{"msg":"However on the RPC that current legacy-contracts uses I have maintained the same behaviour and not exposed the value parameter for backward compatibility","username":"silasdavis","ts":"2018-07-02T11:28:22.927Z"}
{"msg":"We are working on a refactored, unified, GRPC-based version of legacy-contract.js and legacy-db.js (we will name burrow.js) that uses GRPC and should be able to expose value for you","username":"silasdavis","ts":"2018-07-02T11:29:37.331Z"}
{"msg":"The change to the GRPC library will be on develop soon (next hour or so I expect) so it would be possible for you to start calling this by using GRPC yourself - though this will require effort to set up JS libs against our protobuf definition. Alternatively you can wait for our next JS release against GRPC - which I think should be able to include this. I think we are pretty close to this maybe 1 week away from a develop release.","username":"silasdavis","ts":"2018-07-02T11:31:24.076Z"}
{"msg":"if you can live with non-payable contracts for a little while then this is coming","username":"silasdavis","ts":"2018-07-02T11:31:51.720Z"}
{"msg":"You an also formulate CallTxs with the Go client libraries/bos which has always allowed you to set the value (actually it exposes `amount` where `amount = value + fee` - whereas I have exposed `value` on the transactor RPC from that PR)","username":"silasdavis","ts":"2018-07-02T11:32:57.352Z"}
{"msg":"Hi all, \n\nI've been trying to work my way through setting up a burrow chain. I come across all kinds of weird errors and/or lack of direction though.\nAlso there seem to be multiple (partial) pieces of information and implementations (eris db, burrow, bosmarmot, snak, monax) that make it pretty complicated coming in without knowledge about the project. \n\nSo I have a few questions:\n-   Is there any documentation/tutorial on setting up and running a blockchain with hyperledger burrow, while not needing to change parts of the (GO) source code?\n-   Would you say burrow is production ready yet (as in, a workable BC solution to run a global business, using smart contracts, on top off)?\n-   Is there any company already running a business on top of (a forked version of) burrow?\n\n(Maybe a question for another place, but maybe someone knows more about this) -   What are the main differences between Fabric and Burrow (apart from being able to use the EVM with burrow)?\n\nThanks!","username":"jelbazi","ts":"2018-07-02T12:47:06.504Z"}
{"msg":"@silasdavis Oh, so it was omitted, that makes sense now\nfirst of all thank you for this amazing reply, i have no problem setting up js i have fiddled with it before and am sort of familiar with it\ni will give it a try and report back when all is well, again thank you for that effort  :smile:","username":"YoussefAshraf","ts":"2018-07-02T13:23:28.929Z"}
{"msg":"@jelbazi \ni am not an expert however i will try to answer you afaik and of course if am wrong sbdy correct me \n- you very much can run a chain without changing the source code, check the official bosmarmot github page, and maybe this will help you a bit even tho its outdate https://github.com/monax/legacy-docs\n- my personal opinion is that it is near ready, the devs are doing a great job so within a couple of weeks maybe it would be\n- no idea at all\n- this is a huge question for casually asking, needs some googling ;)","username":"YoussefAshraf","ts":"2018-07-02T13:30:00.350Z"}
{"msg":"@jelbazi \ni am not an expert however i will try to answer you afaik and of course if am wrong sbdy correct me \n- you very much can run a chain without changing the source code, check the official bosmarmot github page, and maybe this will help you a bit even tho its outdated https://github.com/monax/legacy-docs\n- my personal opinion is that it is near ready, the devs are doing a great job so within a couple of weeks maybe it would be\n- no idea at all\n- this is a huge question for casually asking, needs some googling ;)","username":"YoussefAshraf","ts":"2018-07-02T13:30:00.350Z"}
{"msg":"@jelbazi eris-db was the name of the same codebase as Burrow before it joined hyperledger. There is no fork of Burrow, just hyperledger/burrow. Bosmarmot is a single repo containing all of the Monax-built tooling. We are reforming that to provide a better jumpstart but that should be your starting place. \n\n> - Is there any documentation/tutorial on setting up and running a blockchain with hyperledger burrow, while not needing to change parts of the (GO) source code?\nThe Bosmarmot README there that talks you through running a single-node chain and deploying some contract: https://github.com/monax/bosmarmot. I'm not sure where you have needed to modify Burrow source code in order to run - that should not be the case.\n\n> - Would you say burrow is production ready yet (as in, a workable BC solution to run a global business, using smart contracts, on top off)?\nThis is somewhat subjective question which depends on your standards for production ready. For example, I do not think TSB's online banking is production ready but it is still deployed by a global business... We are running it as the backbone for our Agreements Network: https://agreements.network/ (currently in beta testing). It has been used over multiple years for many different projects, most of which were proof of concepts (btw I believe Burrow is the oldest project in Hyperledger and probably the oldest permissioned ledger - citation needed, but it was essentially started later 2014 I believe ;) though developer hours is a better proxy for maturity). I know of a number of companies who are building their production systems out on Burrow, but all are pre-release. Burrow has plenty of work to do, and Tendermint is pre-1.0.0, but I am not really aware of a blockchain project I would call 'production hardened' - 'production readiness' is a function of your capacity for risk, the downside of various types of failure, and your ability to recover from disaster. For Monax I am putting equal effort into fixing things we know are broken and providing robust 1st and 2nd line disaster recovery mechanisms for running systems (things like state rollback via governance primitives)\n\n- Is there any company already running a business on top of (a forked version of) burrow?\nWe are: https://agreements.network/ :) And it's not a fork. I know of at least two companies that are running off partially forked Burrow, but I'm afraid I'm not allowed to say who they are\n\n\n> What are the main differences between Fabric and Burrow (apart from being able to use the EVM with burrow)?\nThis is a good question and I should really put something on the wiki. I usually answer with reference to Sawtooth Lake and Fabric:\n\n- Burrow is a single Go process heavily tied to Tendermint consensus (though we do have some experiments outside of that...) whereas STL and Fabric are multi-process microservice architectures with some form of pluggable consensus (STL) or endorsement (Fabric)\n- Burrow uses a full Byzantine Fault Tolerant (BFT) consensus mechanism (Tendermint), but Fabric and STL do not offer one yet\n- Burrow runs EVM smart contracts (and extensions through SNatives) whereas STL and Fabric run may different types of code through chaincode (Fabric) and transaction families (STL)\n- Burrow has a native token but STL and Fabric do not (you could implement one with contracts though)\n\nMy one-liner would be 'Burrow is the redis of blockchain' - it doesn't support pluggable flexibility but as a result has fewer moving parts and aims to be fast and light (for a blockchain anyway). This is something of an aspiration/statement of intent as much as an authorative statement of where we are now...\n\n","username":"silasdavis","ts":"2018-07-02T13:45:30.680Z"}
{"msg":"@jelbazi eris-db was the name of the same codebase as Burrow before it joined hyperledger. There is no fork of Burrow, just hyperledger/burrow. Bosmarmot is a single repo containing all of the Monax-built tooling. We are reforming that to provide a better jumpstart but that should be your starting place. \n\n> - Is there any documentation/tutorial on setting up and running a blockchain with hyperledger burrow, while not needing to change parts of the (GO) source code?\nThe Bosmarmot README there that talks you through running a single-node chain and deploying some contract: https://github.com/monax/bosmarmot. I'm not sure where you have needed to modify Burrow source code in order to run - that should not be the case.\n\n> - Would you say burrow is production ready yet (as in, a workable BC solution to run a global business, using smart contracts, on top off)?\nThis is somewhat subjective question which depends on your standards for production ready. For example, I do not think TSB's online banking is production ready but it is still deployed by a global business... We are running it as the backbone for our Agreements Network: https://agreements.network/ (currently in beta testing). It has been used over multiple years for many different projects, most of which were proof of concepts (btw I believe Burrow is the oldest project in Hyperledger and probably the oldest permissioned ledger - citation needed, but it was essentially started later 2014 I believe ;) though developer hours is a better proxy for maturity). I know of a number of companies who are building their production systems out on Burrow, but all are pre-release. Burrow has plenty of work to do, and Tendermint is pre-1.0.0, but I am not really aware of a blockchain project I would call 'production hardened' - 'production readiness' is a function of your capacity for risk, the downside of various types of failure, and your ability to recover from disaster. For Monax I am putting equal effort into fixing things we know are broken and providing robust 1st and 2nd line disaster recovery mechanisms for running systems (things like state rollback via governance primitives)\n\n- Is there any company already running a business on top of (a forked version of) burrow?\nWe are: https://agreements.network/ :) And it's not a fork. I know of at least two companies that are running off partially forked Burrow, but I'm afraid I'm not allowed to say who they are\n\n\n> What are the main differences between Fabric and Burrow (apart from being able to use the EVM with burrow)?\nThis is a good question and I should really put something on the wiki. I usually answer with reference to Sawtooth Lake and Fabric:\n\n- Burrow is a single Go process heavily tied to Tendermint consensus (though we do have some experiments outside of that...) whereas STL and Fabric are multi-process microservice architectures with some form of pluggable consensus (STL) or endorsement (Fabric)\n- Burrow uses a full Byzantine Fault Tolerant (BFT) consensus mechanism (Tendermint), but Fabric and STL do not offer one yet\n- Burrow runs EVM smart contracts (and extensions through SNatives) whereas STL and Fabric run may different types of code through chaincode (Fabric) and transaction families (STL)\n- Burrow has a native token but STL and Fabric do not (you could implement one with contracts though)\n\nMy one-liner would be 'Burrow is the redis of blockchain' - it doesn't support pluggable flexibility but as a result has fewer moving parts and aims to be fast and light (for a blockchain anyway). This is something of an aspiration/statement of intent as much as an authorative statement of where we are now...\n\n","username":"silasdavis","ts":"2018-07-02T13:45:30.680Z"}
{"msg":"@jelbazi eris-db was the name of the same codebase as Burrow before it joined hyperledger. There is no fork of Burrow, just hyperledger/burrow. Bosmarmot is a single repo containing all of the Monax-built tooling. We are reforming that to provide a better jumpstart but that should be your starting place. \n\n> - Is there any documentation/tutorial on setting up and running a blockchain with hyperledger burrow, while not needing to change parts of the (GO) source code?\nThe Bosmarmot README there that talks you through running a single-node chain and deploying some contract: https://github.com/monax/bosmarmot. I'm not sure where you have needed to modify Burrow source code in order to run - that should not be the case.\n\n> - Would you say burrow is production ready yet (as in, a workable BC solution to run a global business, using smart contracts, on top off)?\nThis is somewhat subjective question which depends on your standards for production ready. For example, I do not think TSB's online banking is production ready but it is still deployed by a global business... We are running it as the backbone for our Agreements Network: https://agreements.network/ (currently in beta testing). It has been used over multiple years for many different projects, most of which were proof of concepts (btw I believe Burrow is the oldest project in Hyperledger and probably the oldest permissioned ledger - citation needed, but it was essentially started later 2014 I believe ;) though developer hours is a better proxy for maturity). I know of a number of companies who are building their production systems out on Burrow, but all are pre-release. Burrow has plenty of work to do, and Tendermint is pre-1.0.0, but I am not really aware of a blockchain project I would call 'production hardened' - 'production readiness' is a function of your capacity for risk, the downside of various types of failure, and your ability to recover from disaster. For Monax I am putting equal effort into fixing things we know are broken and providing robust 1st and 2nd line disaster recovery mechanisms for running systems (things like state rollback via governance primitives)\n\n- Is there any company already running a business on top of (a forked version of) burrow?\nWe are: https://agreements.network/ :) And it's not a fork. I know of at least two companies that are running off partially forked Burrow, but I'm afraid I'm not allowed to say who they are\n\n\n> What are the main differences between Fabric and Burrow (apart from being able to use the EVM with burrow)?\nThis is a good question and I should really put something on the wiki. I usually answer with reference to Sawtooth Lake and Fabric:\n\n- Burrow is a single Go process heavily tied to Tendermint consensus (though we do have some experiments outside of that...) whereas STL and Fabric are multi-process microservice architectures with some form of pluggable consensus (STL) or endorsement (Fabric)\n- Burrow uses a full Byzantine Fault Tolerant (BFT) consensus mechanism (Tendermint), but Fabric and STL do not offer one yet\n- Burrow runs EVM smart contracts (and extensions through SNatives) whereas STL and Fabric run may different types of code through chaincode (Fabric) and transaction families (STL)\n- Burrow has a native token but STL and Fabric do not (you could implement one with contracts though)\n\nMy one-liner would be 'Burrow is the redis of blockchain' - it doesn't support pluggable flexibility but as a result has fewer moving parts and aims to be fast and light (for a blockchain anyway). This is something of an aspiration/statement of intent as much as an authorative statement of where we are now...\n\n","username":"silasdavis","ts":"2018-07-02T13:45:30.680Z"}
{"msg":"node","username":"jelbazi","ts":"2018-07-03T12:16:06.168Z"}
{"msg":"Thank you for your quick and detailed response!","username":"jelbazi","ts":"2018-07-03T12:16:06.168Z"}
{"msg":"I have a single-node burrow chain running now. The previous attempt was probably an error on my part (through which I got the idea I had to change some source material).\n\nProduction ready is indeed somewhat subjective. For me, it specifically means running a permissioned blockchain network with SC's that handle logic (and transactions) of tokens/value/assets for ultimately millions of users(not nodes), while abiding by GDPR rules. Still not enough details for a thorough evaluation probably. But the burrow chain is part of the product core in this sense.\n\n\n\n","username":"jelbazi","ts":"2018-07-03T12:28:14.974Z"}
{"msg":"Hello, regarding single node, is there any Docker configuration for burrow ? I saw the Dockerfile in burrow repo but I'm looking for the yml","username":"Benoit.R","ts":"2018-07-03T20:14:15.289Z"}
{"msg":"Has joined the channel.","username":"toniyasundaram","ts":"2018-07-04T03:18:17.424Z","type":"uj"}
{"msg":"","username":"Benoit.R","ts":"2018-07-04T15:38:20.957Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"@Benoit.R I did not use a Docker config. Just went through the readme step by step.","username":"jelbazi","ts":"2018-07-04T17:58:51.455Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=xr7CwKdEutHKPMoat) @jelbazi Sorry I was not asking you especially ;) I have been able to run a node too but I wanted to start two more validators in order to check how they synchronise and communicate (with a persistent peer)","username":"Benoit.R","ts":"2018-07-04T20:13:10.389Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=xr7CwKdEutHKPMoat","url":"https://chat.hyperledger.org/channel/burrow?msg=xr7CwKdEutHKPMoat","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@jelbazi Sorry I was not asking you especially ;) I have been able to run a node too but I wanted to start two more validators in order to check how they synchronise and communicate (with a persistent peer)","username":"Benoit.R","ts":"2018-07-04T20:13:10.389Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=xr7CwKdEutHKPMoat","url":"https://chat.hyperledger.org/channel/burrow?msg=xr7CwKdEutHKPMoat","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"BabuPallam","ts":"2018-07-04T22:15:13.138Z","type":"uj"}
{"msg":"","username":"dyeghikoo","ts":"2018-07-05T08:46:21.380Z","attachments":[{"type":"file","title":"Clipboard - July 5, 2018 10:46 AM","title_link":"/file-upload/9JZrmMBzEaSQR9zew/Clipboard%20-%20July%205,%202018%2010:46%20AM","image_url":"/file-upload/9JZrmMBzEaSQR9zew/Clipboard%20-%20July%205,%202018%2010:46%20AM","image_type":"image/png","image_size":72522,"url":"/file-upload/9JZrmMBzEaSQR9zew/Clipboard%20-%20July%205,%202018%2010:46%20AM","remote":false,"fileId":"9JZrmMBzEaSQR9zew","fileName":"Clipboard - July 5, 2018 10:46 AM"}]}
{"msg":"Has joined the channel.","username":"seetharamangr","ts":"2018-07-05T10:26:24.448Z","type":"uj"}
{"msg":"Is there any information about permissions? How can I make a participant without permissions?","username":"dyeghikoo","ts":"2018-07-05T11:42:31.851Z"}
{"msg":"","username":"dyeghikoo","ts":"2018-07-05T12:31:09.047Z","attachments":[{"type":"file","title":"Clipboard - July 5, 2018 2:30 PM","title_link":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","image_url":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","image_type":"image/png","image_size":6264,"url":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","remote":false,"fileId":"Rggo6h2Rj2zZ5v2cN","fileName":"Clipboard - July 5, 2018 2:30 PM"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-05T12:31:09.047Z","attachments":[{"type":"file","title":"Clipboard - July 5, 2018 2:30 PM","title_link":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","image_url":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","image_type":"image/png","image_size":6264,"url":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","remote":false,"fileId":"Rggo6h2Rj2zZ5v2cN","fileName":"Clipboard - July 5, 2018 2:30 PM"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-05T12:31:09.047Z","attachments":[{"type":"file","title":"Clipboard - July 5, 2018 2:30 PM","title_link":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","image_url":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","image_type":"image/png","image_size":6264,"url":"/file-upload/Rggo6h2Rj2zZ5v2cN/Clipboard%20-%20July%205,%202018%202:30%20PM","remote":false,"fileId":"Rggo6h2Rj2zZ5v2cN","fileName":"Clipboard - July 5, 2018 2:30 PM"}]}
{"msg":"For the last hour I've been trying to deploy a contract with 2 dependencies (BasicToken.sol which imports SafeMath.sol & ERC20Basic.sol --> https://github.com/OpenZeppelin/openzeppelin-solidity/tree/master/contracts/token/ERC20).\n\nI am using this (see below) epm.yaml (based on --> https://github.com/monax/bosmarmot/blob/develop/tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/epm.yaml):\n\njobs:\n\n- name: deployBasicToken\n  deploy:\n      contract: BasicToken.sol\n      instance: BasicToken\n\n- name: deployERC20Basic\n  deploy:\n      contract: BasicToken.sol\n      instance: ERC20Basic\n\n- name: deploySafeMath\n  deploy:\n      contract: BasicToken.sol\n      instance: SafeMath\n","username":"jelbazi","ts":"2018-07-05T14:54:51.933Z"}
{"msg":"After deploying only the ABI for BasicToken shows up. The others are empty arrays. (ERC20Basic I can understand, it is implemented by BasicToken)","username":"jelbazi","ts":"2018-07-05T14:56:01.100Z"}
{"msg":"(BTW, the pasted yaml above format shifts to the left, but the format in the file is correct)","username":"jelbazi","ts":"2018-07-05T14:56:42.175Z"}
{"msg":"Or could it be that it's because SafeMath is a library?","username":"jelbazi","ts":"2018-07-05T14:58:37.608Z"}
{"msg":"Has joined the channel.","username":"mickaelcanu","ts":"2018-07-05T15:54:27.400Z","type":"uj"}
{"msg":"Hi ","username":"mickaelcanu","ts":"2018-07-05T15:54:32.967Z"}
{"msg":"I installed and serve burrow from AMS EC2","username":"mickaelcanu","ts":"2018-07-05T15:54:54.320Z"}
{"msg":"https://aws.amazon.com/marketplace/library/ref=bill_eml_2","username":"mickaelcanu","ts":"2018-07-05T15:54:54.755Z"}
{"msg":"What is the next step ?","username":"mickaelcanu","ts":"2018-07-05T15:55:01.353Z"}
{"msg":"How to access to blockchain, read, write ","username":"mickaelcanu","ts":"2018-07-05T15:55:21.233Z"}
{"msg":"need tuto please","username":"mickaelcanu","ts":"2018-07-05T15:55:24.402Z"}
{"msg":"Has joined the channel.","username":"Thaddeus","ts":"2018-07-05T18:01:32.805Z","type":"uj"}
{"msg":"@mickaelcanu see the readme in this repo to get yourself started -> https://github.com/monax/bosmarmot","username":"compleatang","ts":"2018-07-06T12:50:51.696Z"}
{"msg":"@jelbazi did you get it figured out? ","username":"compleatang","ts":"2018-07-06T12:51:19.048Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Pr8KPyKr8NvPeLrhz) @Benoit.R At Monax we use Docker and Kubernetes exclusively and have open sourced much of our work. Dockerfiles are available here -> https://quay.io/monax/db (tagged images will get pushed to docker hub under hyperledger/burrow but we still need a bit of work to route that in the CI system). You can find helm charts for running burrow nodes in kubernetes here -> https://github.com/kubernetes/charts  those latter charts need a bit of updating in the official helm charts but I haven't had time to PR to them. the most recent editions of the helm charts are available here -> https://github.com/agreements-network/charts in that repo you'll want to see src/burrow chart. YOu can install those charts to kubernetes by referencing the helm repo -> https://charts.agreements.network ","username":"compleatang","ts":"2018-07-06T12:54:26.420Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Pr8KPyKr8NvPeLrhz","url":"https://chat.hyperledger.org/channel/burrow?msg=Pr8KPyKr8NvPeLrhz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@basilji I suspect you're encountering a challenge with some of the system design considerations we've had to take into account in burrow. Namely when working asyncronously the chain will have a hard time certifying some of the transactions if they are not sent syncronously. This is because of the necessity to add the nonce of a particular account into the signed bytes that are needed by the chain. This is meant as a feature rather than a bug and is necessary to guard against replay attacks and other attacks. Functionally what happens sometimes with load tests based on asyncronously referencing a single account is that these nonces get out of order which the chain won't like. Our advice here would be to perform load testing across a range of sending accounts perhaps 20-50. we're working on some updates on both the chain side and javascript side to address some of this, the remainder of it (the hacky websockets coding) will be fixed when we finish the migration to GRPC and release burrow.js","username":"compleatang","ts":"2018-07-06T13:00:37.680Z"}
{"msg":"If anyone wants to test burrow.js which is greatly improved but still needs namereg and a few other additions, you can find it (for now) here -> https://github.com/monax/bosmarmot/tree/burrow.js/burrow.js","username":"compleatang","ts":"2018-07-06T13:01:30.123Z"}
{"msg":"There's currently no docs and its fast moving but if you're familiar enough with js and interested to get increased stability feel free to dig in. But as I said, YMMV and its completely self-service for now.","username":"compleatang","ts":"2018-07-06T13:02:20.667Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=bFo2D7uziE6aDHhyf) @compleatang Nope, not yet sadly. \nAm using these as examples --> https://github.com/monax/monax/tree/master/tests/jobs_fixtures\nStill getting empty ABI's (apart from the BasicToken.sol).","username":"jelbazi","ts":"2018-07-06T13:17:27.071Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=bFo2D7uziE6aDHhyf","url":"https://chat.hyperledger.org/channel/burrow?msg=bFo2D7uziE6aDHhyf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"With this input:\n\n\n\nOutput I get:\n\n*****Executing Job*****\n\nJob Name                                    => defaultAddr\n\n*****Executing Job*****\n\nJob Name                                    => deploySafeMath\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/SafeMath\nDeploying Contract                          name => SafeMath\n                                            addr => A588E2FE042A6D00385CE4194911936C0C4A017A\n\n*****Executing Job*****\n\nJob Name                                    => deployBasicToken\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/SafeMath\nDeploying Contract                          name => SafeMath\n                                            addr => 5C8CDB9A313CB0C0AAE3A1C2F580BB18F9404F6A\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/BasicToken\nDeploying Contract                          name => BasicToken\n                                            addr => 609D902F892613DCD60E1F7B666462E061B8B4A3\n","username":"jelbazi","ts":"2018-07-06T13:20:17.247Z"}
{"msg":"With this input:\n\njobs:                                      \n                                           \n- name: deploySafeMath                     \n  deploy:                                  \n    contract: SafeMath.sol                 \n                                           \n- name: deployBasicToken                   \n  deploy:                                  \n    contract: BasicToken.sol               \n    instance: all                          \n    libraries: SafeMath:$deploySafeMath    \n\nOutput I get:\n\n*****Executing Job*****\n\nJob Name                                    => defaultAddr\n\n*****Executing Job*****\n\nJob Name                                    => deploySafeMath\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/SafeMath\nDeploying Contract                          name => SafeMath\n                                            addr => A588E2FE042A6D00385CE4194911936C0C4A017A\n\n*****Executing Job*****\n\nJob Name                                    => deployBasicToken\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/SafeMath\nDeploying Contract                          name => SafeMath\n                                            addr => 5C8CDB9A313CB0C0AAE3A1C2F580BB18F9404F6A\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/BasicToken\nDeploying Contract                          name => BasicToken\n                                            addr => 609D902F892613DCD60E1F7B666462E061B8B4A3\n","username":"jelbazi","ts":"2018-07-06T13:20:17.247Z"}
{"msg":"With this input:\n\njobs:                                      \n                                           \n- name: deploySafeMath                     \n  deploy:                                  \n    contract: SafeMath.sol                 \n                                           \n- name: deployBasicToken                   \n  deploy:                                  \n    contract: BasicToken.sol               \n    instance: all                          \n    libraries: SafeMath:$deploySafeMath    \nI get this output:\n\n*****Executing Job*****\n\nJob Name                                    => defaultAddr\n\n*****Executing Job*****\n\nJob Name                                    => deploySafeMath\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/SafeMath\nDeploying Contract                          name => SafeMath\n                                            addr => A588E2FE042A6D00385CE4194911936C0C4A017A\n\n*****Executing Job*****\n\nJob Name                                    => deployBasicToken\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/SafeMath\nDeploying Contract                          name => SafeMath\n                                            addr => 5C8CDB9A313CB0C0AAE3A1C2F580BB18F9404F6A\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/BasicToken\nDeploying Contract                          name => BasicToken\n                                            addr => 609D902F892613DCD60E1F7B666462E061B8B4A3\n","username":"jelbazi","ts":"2018-07-06T13:20:17.247Z"}
{"msg":"With this input:\n\njobs:                                      \n                                           \n- name: deploySafeMath                     \n  deploy:                                  \n    contract: SafeMath.sol                 \n                                           \n- name: deployBasicToken                   \n  deploy:                                  \n    contract: BasicToken.sol               \n    instance: all                          \n    libraries: SafeMath:$deploySafeMath    \n\nI get this output:\n\n*****Executing Job*****\n\nJob Name                                    => defaultAddr\n\n*****Executing Job*****\n\nJob Name                                    => deploySafeMath\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/SafeMath\nDeploying Contract                          name => SafeMath\n                                            addr => A588E2FE042A6D00385CE4194911936C0C4A017A\n\n*****Executing Job*****\n\nJob Name                                    => deployBasicToken\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/SafeMath\nDeploying Contract                          name => SafeMath\n                                            addr => 5C8CDB9A313CB0C0AAE3A1C2F580BB18F9404F6A\nSaving ABI                                  => /root/burrowchain/contracts/testdependencies/abi/BasicToken\nDeploying Contract                          name => BasicToken\n                                            addr => 609D902F892613DCD60E1F7B666462E061B8B4A3\n","username":"jelbazi","ts":"2018-07-06T13:20:17.247Z"}
{"msg":"(Using the aforementioned contracts + library in the openzeppelin repo)","username":"jelbazi","ts":"2018-07-06T13:22:10.848Z"}
{"msg":"Has joined the channel.","username":"EricPetruzzelli","ts":"2018-07-07T12:00:07.378Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vmag","ts":"2018-07-08T17:10:09.198Z","type":"uj"}
{"msg":"it is possible to connect metamask with burrow? Im using metamask trying to connect to 127.0.0.1:1337 with burrow running but it doesnt work","username":"dyeghikoo","ts":"2018-07-09T08:48:17.751Z"}
{"msg":"Has joined the channel.","username":"ShuaishuaiJing","ts":"2018-07-09T09:21:54.713Z","type":"uj"}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:58:38.522Z","attachments":[{"type":"file","title":"error.PNG","title_link":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_type":"image/png","image_size":145610,"url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","remote":false,"fileId":"AnFXoZhcdCobYbZu5","fileName":"error.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:58:38.522Z","attachments":[{"type":"file","title":"error.PNG","title_link":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_type":"image/png","image_size":145610,"url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","remote":false,"fileId":"AnFXoZhcdCobYbZu5","fileName":"error.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:58:38.522Z","attachments":[{"type":"file","title":"error.PNG","title_link":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_type":"image/png","image_size":145610,"url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","remote":false,"fileId":"AnFXoZhcdCobYbZu5","fileName":"error.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:58:38.522Z","attachments":[{"type":"file","title":"error.PNG","title_link":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_type":"image/png","image_size":145610,"url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","remote":false,"fileId":"AnFXoZhcdCobYbZu5","fileName":"error.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:58:38.522Z","attachments":[{"type":"file","title":"error.PNG","title_link":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_type":"image/png","image_size":145610,"url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","remote":false,"fileId":"AnFXoZhcdCobYbZu5","fileName":"error.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:58:38.522Z","attachments":[{"type":"file","title":"error.PNG","title_link":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_type":"image/png","image_size":145610,"url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","remote":false,"fileId":"AnFXoZhcdCobYbZu5","fileName":"error.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:58:38.522Z","attachments":[{"type":"file","title":"error.PNG","title_link":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","image_type":"image/png","image_size":145610,"url":"/file-upload/AnFXoZhcdCobYbZu5/error.PNG","remote":false,"fileId":"AnFXoZhcdCobYbZu5","fileName":"error.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:59:30.270Z","attachments":[{"type":"file","title":"index.PNG","title_link":"/file-upload/xs6SkHWQPJr6brX34/index.PNG","image_url":"/file-upload/xs6SkHWQPJr6brX34/index.PNG","image_type":"image/png","image_size":180878,"url":"/file-upload/xs6SkHWQPJr6brX34/index.PNG","remote":false,"fileId":"xs6SkHWQPJr6brX34","fileName":"index.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T10:59:30.270Z","attachments":[{"type":"file","title":"index.PNG","title_link":"/file-upload/xs6SkHWQPJr6brX34/index.PNG","image_url":"/file-upload/xs6SkHWQPJr6brX34/index.PNG","image_type":"image/png","image_size":180878,"url":"/file-upload/xs6SkHWQPJr6brX34/index.PNG","remote":false,"fileId":"xs6SkHWQPJr6brX34","fileName":"index.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T11:00:29.359Z","attachments":[{"type":"file","title":"data.PNG","title_link":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","image_url":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","image_type":"image/png","image_size":52110,"url":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","remote":false,"fileId":"XKnkRNzmeJWgDhDEB","fileName":"data.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T11:00:29.359Z","attachments":[{"type":"file","title":"data.PNG","title_link":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","image_url":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","image_type":"image/png","image_size":52110,"url":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","remote":false,"fileId":"XKnkRNzmeJWgDhDEB","fileName":"data.PNG"}]}
{"msg":"","username":"dyeghikoo","ts":"2018-07-09T11:00:29.359Z","attachments":[{"type":"file","title":"data.PNG","title_link":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","image_url":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","image_type":"image/png","image_size":52110,"url":"/file-upload/XKnkRNzmeJWgDhDEB/data.PNG","remote":false,"fileId":"XKnkRNzmeJWgDhDEB","fileName":"data.PNG"}]}
{"msg":"Has joined the channel.","username":"ds2xor","ts":"2018-07-10T02:37:38.712Z","type":"uj"}
{"msg":"anybody?","username":"ds2xor","ts":"2018-07-10T02:38:56.158Z"}
{"msg":"when will the readme be updated? or some plan of it?","username":"ds2xor","ts":"2018-07-10T02:39:23.298Z"}
{"msg":"I let you an example of application with node. Using the example from github:\nvar contracts = require('@monax/legacy-contracts');\nvar burrowURL = \"http://localhost:1337/rpc\";\nvar accountData = require('./some/account/data.json');\nvar burrowModule = require(\"@monax/legacy-db\");\nvar burrow = burrowModule.createInstance(\"http://localhost:1337/rpc\");\nvar pipe = new contracts.pipes.DevPipe(burrow, accountData);\nvar contractManager = contracts.newContractManager(pipe);\n//var contractManager = contracts.newContractManagerDev(burrowURL, accountData);\npipe.addAccount(accountData);\n\nvar myAbi = [\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"a\",\n\t\t\t\t\"type\": \"int256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"b\",\n\t\t\t\t\"type\": \"int256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"add\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"sum\",\n\t\t\t\t\"type\": \"int256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n]\n\n\nvar myCompiledCode = \"608060405234801561001057600080fd5b5060a18061001f6000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663a5f3c23b81146043575b600080fd5b348015604e57600080fd5b50605e6004803590602001356071565b6040805191825251602090910181900390f35b01905600a165627a7a723058209a5381868f4f44d1e5eed455065d85edc820ca572a40ad9cfa213d5edf0aa2610029\";\n\nvar myContractFactory = contractManager.newContractFactory(myAbi);\n\nvar myNewContract;\nmyContractFactory.new({data: myCompiledCode}, function(error, contract){\n    if (error) {\n        throw error;\n\t}\n\tmyNewContract = contract;\n\ttry{\n\t\tmyNewContract.add( 34, 22, (err, resp) => {\n\t\t\tconsole.log(resp.toNumber())\n\t\t})\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\n});","username":"dyeghikoo","ts":"2018-07-10T17:44:05.100Z"}
{"msg":"","username":"dyeghikoo","ts":"2018-07-10T17:47:26.451Z","attachments":[{"type":"file","title":"Clipboard - July 10, 2018 7:45 PM","title_link":"/file-upload/HduNWG3t6e4G9otNF/Clipboard%20-%20July%2010,%202018%207:45%20PM","image_url":"/file-upload/HduNWG3t6e4G9otNF/Clipboard%20-%20July%2010,%202018%207:45%20PM","image_type":"image/png","image_size":22309,"url":"/file-upload/HduNWG3t6e4G9otNF/Clipboard%20-%20July%2010,%202018%207:45%20PM","remote":false,"fileId":"HduNWG3t6e4G9otNF","fileName":"Clipboard - July 10, 2018 7:45 PM"}]}
{"msg":"Is the 'signbyaddress' option already implemented?\nI am getting transaction time outs trying to call a contract function.","username":"jelbazi","ts":"2018-07-12T11:55:56.112Z"}
{"msg":"Has joined the channel.","username":"dannychen","ts":"2018-07-14T07:23:51.547Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Diego-Blocknitive","ts":"2018-07-16T15:23:25.478Z","type":"uj"}
{"msg":"Has joined the channel.","username":"FlavioSS","ts":"2018-07-18T10:52:23.825Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bleriot.zhang","ts":"2018-07-19T02:48:37.019Z","type":"uj"}
{"msg":"Has joined the channel.","username":"david-kim-tpe","ts":"2018-07-19T07:10:44.040Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jinlee","ts":"2018-07-19T08:07:19.108Z","type":"uj"}
{"msg":"Has joined the channel.","username":"PizzaPolice12","ts":"2018-07-19T21:23:18.706Z","type":"uj"}
{"msg":"Do we need to purchase ether in order to facilitate transactions on Burrow to cover gas costs?","username":"PizzaPolice12","ts":"2018-07-19T21:24:01.970Z"}
{"msg":"I thought the Burrow EVM is maintained privately among private nodes designated in an org?","username":"PizzaPolice12","ts":"2018-07-19T21:24:32.132Z"}
{"msg":"Has joined the channel.","username":"pandagopal","ts":"2018-07-20T05:13:19.708Z","type":"uj"}
{"msg":"Has joined the channel.","username":"GulshanKrish","ts":"2018-07-20T18:28:42.373Z","type":"uj"}
{"msg":"Hello, does anyone have a proper documentation on hyperledger burrow. The information provided on the hyperledger burrow official page is not that explanatory for me. Any ideas?","username":"GulshanKrish","ts":"2018-07-20T18:28:47.027Z"}
{"msg":"Has joined the channel.","username":"BulentEgrilmez","ts":"2018-07-20T19:59:42.889Z","type":"uj"}
{"msg":"Has left the channel.","username":"rjones","ts":"2018-07-20T22:57:58.368Z","type":"ul"}
{"msg":"@PizzaPolice12 no ether is not required. that only operates on the public blockchain network. burrow is a framework for setting up one's own networks. it has a native token which you can use, and we currently set gas cost at 0 because it is not something that is usually used by burrow users. ","username":"compleatang","ts":"2018-07-21T12:02:04.344Z"}
{"msg":"@GulshanKrish try here for the most up to date docs -> https://github.com/monax/bosmarmot","username":"compleatang","ts":"2018-07-21T12:02:26.502Z"}
{"msg":"Has joined the channel.","username":"JaswanthReddyV","ts":"2018-07-22T10:42:44.389Z","type":"uj"}
{"msg":"@compleatang Thank you. It was all technical. It would be good if i get to know the basics of burrow, how it works and how its used?","username":"GulshanKrish","ts":"2018-07-22T20:43:17.151Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=TYriFY6uWZMSZiAm3) @ricktobacco Were using Fabric for supply chain data and Burrow for financial transactions. We prefer the later's deterministic behavior for certain use cases, plus solidity is kind of elegant for tokens, despite its flaws. ","username":"snowy13","ts":"2018-07-23T10:30:03.236Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=TYriFY6uWZMSZiAm3","url":"https://chat.hyperledger.org/channel/burrow?msg=TYriFY6uWZMSZiAm3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"tbenzies","ts":"2018-07-23T20:21:04.432Z","type":"uj"}
{"msg":"Reminder to register for the final Hackfest of the year in Montreal (October 3-4) http://hyperledger.org/event/hyperledger-hackfest-october-2018","username":"tbenzies","ts":"2018-07-23T20:21:08.103Z"}
{"msg":"@all Burrow v0.20.0 is out. And it's a very important release. We've also released a pre-release version of the brand new burrow.js here -> https://www.npmjs.com/package/@monax/burrow the big ticket items are now validator set changes are back in and also everything is using the shiny new GRPC interface. It also \"feels\" even faster thanks to optimizations on our end and upgrades on Tendermint's end. Current tendermint version for the release is 0.24.4","username":"compleatang","ts":"2018-07-24T15:38:24.263Z"}
{"msg":"Please note that there's a breaking change in the hashing algorithm for addresses. Tendermint changed on their end and we followed. This will mean that any keys used for testing, deployments, or operations from previous versions of burrow will **NO LONGER WORK**.... please keep this in mind in your upgrade path.","username":"compleatang","ts":"2018-07-24T15:39:38.373Z"}
{"msg":"We hope that this will be one of the final breaking changes to the keys/addresses interface pre 1.0","username":"compleatang","ts":"2018-07-24T15:40:01.283Z"}
{"msg":"@knkski @adamludvik @dplumb ^","username":"Dan","ts":"2018-07-24T18:27:15.158Z"}
{"msg":"Has joined the channel.","username":"knkski","ts":"2018-07-24T18:27:15.327Z","type":"uj"}
{"msg":"Has left the channel.","username":"Varun2887","ts":"2018-07-25T05:32:57.881Z","type":"ul"}
{"msg":"fyi @compleatang just joined the hyperledger #training-and-education-wg ... be keen to work on team developing tutorials linking burrow to agreement network :)","username":"paulransfield","ts":"2018-07-25T18:39:43.416Z"}
{"msg":"Hi Paul! Great news. ","username":"compleatang","ts":"2018-07-25T22:36:27.852Z"}
{"msg":"Has joined the channel.","username":"naviat","ts":"2018-07-26T08:56:33.985Z","type":"uj"}
{"msg":"Hi marmots! I've been trying to get up and running again with Burrow after a few months away. I have been following the tutorial here (https://github.com/monax/bosmarmot). All good until I get to \"bos --keys=\"localhost:10997\" \\\n\t--chain-url=\"tcp://localhost:46657\" \\\n\t--address=0A40DC874BC932B78AC390EAD1C1BF33469597AB\" . I note that you have to change the --address field, which I have done. Then I run into the error: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = \"transport: Error while dialing dial tcp: address tcp://localhost:46657: too many colons in address\"\nSo I check the localhost addresses in my burrow.toml and compare them to your burrow.toml file. Firstly I note that the address localhost:46657 is in your file at the [RPC.TM] section but it is not in my file at the [RPC.TM] section so I change my --chain-url (I think your tutorial should include a reminder for the user to do this). But then more importantly, I note that your burrow.toml file includes a URL in the [Keys] section, but my burrow.toml file does not have a URL in the [Keys] section, instead it has the following properties: (i) GRPCServiceEnabled; (ii)  AllowBadFilePermissions; (iii) RemoteAddress; (iv)  KeysDirectory.... Any ideas why this is the case, and if it is the source of my original error? ","username":"Luker501","ts":"2018-07-26T17:31:21.723Z"}
{"msg":"Has joined the channel.","username":"Vishal3152","ts":"2018-07-27T04:29:34.922Z","type":"uj"}
{"msg":"Hi @Luker501 that needs to get updated. Are you working against Burrow v0.20.0 ? If so then just remove the `--keys` and `--chain-url` flags completely. We've now migrated everything to use the GRPC endpoint. If you had a chance, we'd love a PR on that README so others can benefit. We're just a bit underwater with a bunch of things at Monax. ","username":"compleatang","ts":"2018-07-27T09:02:33.421Z"}
{"msg":"For 98% of uses the `--keys` flag will now not be needed and the `--chain-url` flag should be defaulted to `--chain-url=localhost:10997` ","username":"compleatang","ts":"2018-07-27T09:03:30.982Z"}
{"msg":"@compleatang thanks for the info. Yeah I am using the latest Burrow version... I'll go through everything again on Monday, hopefully things will work! If I can see obvious issues with the docs I'll make PRs then. Cheers","username":"Luker501","ts":"2018-07-27T12:08:45.013Z"}
{"msg":":+1_tone2: ","username":"compleatang","ts":"2018-07-27T16:52:01.137Z"}
{"msg":"Has joined the channel.","username":"merq","ts":"2018-07-27T21:15:37.389Z","type":"uj"}
{"msg":"Has joined the channel.","username":"PMoura","ts":"2018-07-27T22:48:56.504Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ThiagoAzevedo","ts":"2018-07-28T15:37:30.767Z","type":"uj"}
{"msg":"@paulransfield a great target for this would be our new RPC layer based on GRPC which I think will allow people to do some interesting things if they new about it and how to use it. For some context see: https://github.com/hyperledger/burrow/issues/817. My time is pretty tight at the moment but I'd love to see progress here and can find some time to help - just need to make sure my effort gets directed where it can have the biggest multiplier ","username":"silasdavis","ts":"2018-07-29T11:00:06.869Z"}
{"msg":"Just read through your agreements network paper. Looks good. I'm not sure how/if you can make some aspects of an instantiated contract not fully readable by everyone on your network though (i.e. in the style of something like Fabric) - having some aspects of a contract private between the signers is desirable for legal documents right?","username":"Luker501","ts":"2018-07-29T13:06:10.452Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=DpctnXapkP8QS5JWm) @silasdavis Hi @silasdavis ... thanks for the reply ... what is your preferred timeframe ... do you have a preferred branded template to use ... can you point me at an exemplar so I can see the existing style ... and i'd be keen to help, but 7 working days from now may be the fastest I can progress an idea into learnable material ...","username":"paulransfield","ts":"2018-07-29T18:39:29.072Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=DpctnXapkP8QS5JWm","url":"https://chat.hyperledger.org/channel/burrow?msg=DpctnXapkP8QS5JWm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=DpctnXapkP8QS5JWm) @silasdavis Hi @silasdavis ... thanks for the reply ... what is your preferred timeframe ... do you have a preferred branded template to use ... can you point me at an exemplar so I can see the existing style ... and i'd be keen to help, but 7 working days from now may be the fastest I can progress an idea into learnable material ...\n\ni'll spend a few hours just looking into https://grpc.io/docs/ ... ","username":"paulransfield","ts":"2018-07-29T18:39:29.072Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=DpctnXapkP8QS5JWm","url":"https://chat.hyperledger.org/channel/burrow?msg=DpctnXapkP8QS5JWm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"","username":"paulransfield","ts":"2018-07-30T01:54:58.779Z","attachments":[{"type":"file","title":"Clipboard - July 30, 2018 1:55 PM","title_link":"/file-upload/ZG4zcPi4i4hPuLh79/Clipboard%20-%20July%2030,%202018%201:55%20PM","image_url":"/file-upload/ZG4zcPi4i4hPuLh79/Clipboard%20-%20July%2030,%202018%201:55%20PM","image_type":"image/png","image_size":93483,"url":"/file-upload/ZG4zcPi4i4hPuLh79/Clipboard%20-%20July%2030,%202018%201:55%20PM","remote":false,"fileId":"ZG4zcPi4i4hPuLh79","fileName":"Clipboard - July 30, 2018 1:55 PM"}]}
{"msg":"Hi @silasdavis ... just brought a couple of Udemy courses on gRPC (circa 4 hours) and Protocol Buffers  (circa 4 hours) ... US$15 each ... Protocol Buffers a pre-requisite for GRPC ... it'll take me a couple of days to complete both courses ... but then i\"m in a better place to help ... so far I've enjoyed listening to the tutor (he has 14,000 learners enrolled across 14 courses) ...\n\nhere's the url for each course:  \n- Protocol Buffers - https://www.udemy.com/share/100isU/  \n- gRPC - https://www.udemy.com/share/100n7i/\n\n","username":"paulransfield","ts":"2018-07-30T01:59:00.037Z"}
{"msg":"Hi @silasdavis ... just brought a couple of Udemy courses on gRPC (circa 4 hours) and Protocol Buffers  (circa 4 hours) ... US$15 each ... Protocol Buffers a pre-requisite for GRPC ... it'll take me a couple of days to complete both courses ... but then i\"m in a better place to help ... so far I've enjoyed listening to the tutor (he has 14,000 learners enrolled across 14 courses) ...\n\nhere's the url for each course:  \n- Protocol Buffers - https://www.udemy.com/share/100isU/  \n- gRPC - https://www.udemy.com/share/100n7i/\n\ni now see that gRPC is a necessary toolset within my own tech skillset ","username":"paulransfield","ts":"2018-07-30T01:59:00.037Z"}
{"msg":"Has joined the channel.","username":"sathishNS","ts":"2018-07-30T11:44:07.838Z","type":"uj"}
{"msg":"Has joined the channel.","username":"homilly","ts":"2018-07-30T12:44:23.808Z","type":"uj"}
{"msg":"@silasdavis thanks for this resources. I have been looking for something like this","username":"Thaddeus","ts":"2018-07-30T18:17:08.732Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=RiEzCxrD3vZv6PMmZ) Ok I've sorted this out and corrected the github readme... Now does anyone know of a tutorial that shows how to interact with the chain without using a yaml file? I.e. by broadcasting transactions only or using the API gateway? I cannot find one but this seems to be the next step forward. Even a previous tutorial on an older version could help me get started.","username":"Luker501","ts":"2018-07-31T10:46:44.344Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=RiEzCxrD3vZv6PMmZ","url":"https://chat.hyperledger.org/channel/burrow?msg=RiEzCxrD3vZv6PMmZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@Luker501 if you look in our (Monax's) legacy-docs repo you'll see some more tutorials for doing that. You'll likely want to use javascript as it's quite hefty to go to bare metal. Also because now we're on GRPC it's not something you can easily formulate and then add via curl. ","username":"compleatang","ts":"2018-07-31T15:25:52.245Z"}
{"msg":"As to your question on the AN, it's really about what you put on chain. I don't personally believe a bag of spaghetti in terms of tons of state channels is operationally viable for a large public network on the one hand. On the other hand, most of the commercially viable information can be kept off chain. As an example, if I want to have a sale of widgets contract then the fact that i'm ordering widgets isn't really commercially important information. the commercially important information typically is how many widgets i'm ordering and at what price. the latter two (if I'm contemplating submitting invoices and payments via traditional systems -- something the AN is explicitly designed for) can be kept in encrypted parameters off chain, referenced by the API when it needs to trigger an invoice to be sent or a payment to be made. ","username":"compleatang","ts":"2018-07-31T15:29:06.254Z"}
{"msg":"The workflow that is kept on chain will just be the legally significant event that, e.g., an invoice was sent or the payment was received. ","username":"compleatang","ts":"2018-07-31T15:29:39.134Z"}
{"msg":"There is exposure on chain to the fact that I'm ordering widgets (while we can obfuscate what the individual process steps are doing, pattern matching is likely to be relatively easy) and *when* I'm ordering widgets. But there is only so much one can do to get the on chain benefits. ","username":"compleatang","ts":"2018-07-31T15:30:36.129Z"}
{"msg":"Has joined the channel.","username":"angieology","ts":"2018-07-31T17:51:06.981Z","type":"uj"}
{"msg":"Thanks for the info! Ok I understand your logic regarding AN.","username":"Luker501","ts":"2018-08-01T11:45:03.204Z"}
{"msg":"Regarding burrow, I've been playing around with it a bit more. Looks like you cannot deploy a contract with abstract functions thought? :( I've logged this as an issue here: https://github.com/hyperledger/burrow/issues/846). In the mean time I'm going to have to think how I can get around this issue for my dapp.","username":"Luker501","ts":"2018-08-01T11:46:28.812Z"}
{"msg":"Ah no worries, didn't know you cannot deploy an abstract contract... I will continue my bug searching then...","username":"Luker501","ts":"2018-08-01T11:50:37.783Z"}
{"msg":"","username":"paulransfield","ts":"2018-08-01T17:42:17.827Z","attachments":[{"type":"file","title":"Clipboard - August 2, 2018 5:42 AM","title_link":"/file-upload/2okwnnSE9n84TJ3Mw/Clipboard%20-%20August%202,%202018%205:42%20AM","image_url":"/file-upload/2okwnnSE9n84TJ3Mw/Clipboard%20-%20August%202,%202018%205:42%20AM","image_type":"image/png","image_size":355857,"url":"/file-upload/2okwnnSE9n84TJ3Mw/Clipboard%20-%20August%202,%202018%205:42%20AM","remote":false,"fileId":"2okwnnSE9n84TJ3Mw","fileName":"Clipboard - August 2, 2018 5:42 AM"}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=G6cTwDvmymdijS3Xo) Hi @silasdavis ... Stephane Mareek's Protocol Buffers Udemy course was very well constructed, delivered and informative ... i'm now starting his gRPC course ...\n\n","username":"paulransfield","ts":"2018-08-01T17:42:21.247Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=G6cTwDvmymdijS3Xo","url":"https://chat.hyperledger.org/channel/burrow?msg=G6cTwDvmymdijS3Xo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"","username":"paulransfield","ts":"2018-08-01T17:57:01.238Z","attachments":[{"type":"file","title":"Clipboard - August 2, 2018 5:56 AM","title_link":"/file-upload/tQGmQGHwHqXmDAYdA/Clipboard%20-%20August%202,%202018%205:56%20AM","image_url":"/file-upload/tQGmQGHwHqXmDAYdA/Clipboard%20-%20August%202,%202018%205:56%20AM","image_type":"image/png","image_size":338576,"url":"/file-upload/tQGmQGHwHqXmDAYdA/Clipboard%20-%20August%202,%202018%205:56%20AM","remote":false,"fileId":"tQGmQGHwHqXmDAYdA","fileName":"Clipboard - August 2, 2018 5:56 AM"}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=G6cTwDvmymdijS3Xo) Hi @silasdavis ... Stephane Mareek's Protocol Buffers Udemy course was very well constructed, delivered and informative ... i'm now starting his gRPC course ...\n\n","username":"paulransfield","ts":"2018-08-01T17:58:10.182Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=G6cTwDvmymdijS3Xo","url":"https://chat.hyperledger.org/channel/burrow?msg=G6cTwDvmymdijS3Xo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"mmartinez.blocknitive","ts":"2018-08-02T11:24:31.212Z","type":"uj"}
{"msg":"Hi there!","username":"mmartinez.blocknitive","ts":"2018-08-02T11:24:39.885Z"}
{"msg":"I have a problem following bosmarmot getting started at https://github.com/monax/bosmarmot. ","username":"mmartinez.blocknitive","ts":"2018-08-02T11:25:28.048Z"}
{"msg":"When I try to test and deploy the smart contract (I have an emp.yaml and a .sol in the same dir), I got an error at executing job that says: \nunexpected end of JSON input                \nError compiling contracts: Language error:  \nunexpected end of JSON input\n","username":"mmartinez.blocknitive","ts":"2018-08-02T11:26:48.780Z"}
{"msg":"When I try to test and deploy the smart contract (I have an emp.yaml and a .sol in the same dir), I got an error at executing job that says: \ninvalid character 'E' looking for beginning of value\nError compiling contracts: Language error:  \ninvalid character 'E' looking for beginning of value","username":"mmartinez.blocknitive","ts":"2018-08-02T11:26:48.780Z"}
{"msg":"any ideas?","username":"mmartinez.blocknitive","ts":"2018-08-02T11:26:55.469Z"}
{"msg":"I just executed:  bos --address=C00EBA326E7E0E72C9E4A03AD0555D1496939601\n","username":"mmartinez.blocknitive","ts":"2018-08-02T11:29:56.122Z"}
{"msg":"Has joined the channel.","username":"kryp70","ts":"2018-08-02T12:48:48.698Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=YcmZWRTQCDFEJQNdf) @mmartinez.blocknitive is that definitely the address at the top of your burrow.toml file?","username":"Luker501","ts":"2018-08-06T08:51:51.620Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=YcmZWRTQCDFEJQNdf","url":"https://chat.hyperledger.org/channel/burrow?msg=YcmZWRTQCDFEJQNdf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"yes @Luker501 ","username":"mmartinez.blocknitive","ts":"2018-08-06T08:55:28.333Z"}
{"msg":"yes @Luker501 . Thanks for your reply. Here is my burrow.toml https://pastebin.com/vNp6hEBf and my gensis-spec-json: https://pastebin.com/B0AjMwn5","username":"mmartinez.blocknitive","ts":"2018-08-06T08:55:28.333Z"}
{"msg":"send me your toml file and epm file and I'll check it on mine","username":"Luker501","ts":"2018-08-06T08:57:54.979Z"}
{"msg":"My smart contract: https://pastebin.com/mDbKSKSK and my epm.yaml : https://pastebin.com/ZDppzRdC (both of them in the same folder)","username":"mmartinez.blocknitive","ts":"2018-08-06T08:59:40.972Z"}
{"msg":"I am using last versions of burrow and bosmarmot (0.20.1 and 0.4.0)","username":"mmartinez.blocknitive","ts":"2018-08-06T09:02:30.263Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=a27dSRcenfosjqoLx) @mmartinez.blocknitive Hmmm I haven't got a hang of the burrow configure command yet so I can't seem to load your files. I would suggest raising it as an issue in github in the bosmarmot location. Otherwise it might get lost herer","username":"Luker501","ts":"2018-08-06T09:15:19.809Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=a27dSRcenfosjqoLx","url":"https://chat.hyperledger.org/channel/burrow?msg=a27dSRcenfosjqoLx","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@Luker501 thx for ur help. i will do that! You mean burrow github with bosmarmot label or bosmarmot?? Idk if bosmarmot repo is active at all...","username":"mmartinez.blocknitive","ts":"2018-08-06T09:19:24.609Z"}
{"msg":"https://github.com/hyperledger/burrow/issues/848","username":"mmartinez.blocknitive","ts":"2018-08-06T09:35:11.211Z"}
{"msg":"ok fair enough","username":"Luker501","ts":"2018-08-06T09:38:40.379Z"}
{"msg":"What does Hyperledger burrow adds to Ethereum smart contracts?","username":"GulshanKrish","ts":"2018-08-06T17:01:14.952Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=32FzfTBkQXk4NnuoT) @mmartinez.blocknitive What version/branch of bos and burrow are you using? This is likely a version incongruity","username":"compleatang","ts":"2018-08-06T21:34:03.895Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=32FzfTBkQXk4NnuoT","url":"https://chat.hyperledger.org/channel/burrow?msg=32FzfTBkQXk4NnuoT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Qw58zgRcXqmfD6Dfi) @GulshanKrish Burrow runs an EVM that is very close to the evm running on the ethereum public network. Burrow is useful for managing your own blockchain networks that require an EVM. ","username":"compleatang","ts":"2018-08-06T21:35:42.600Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Qw58zgRcXqmfD6Dfi","url":"https://chat.hyperledger.org/channel/burrow?msg=Qw58zgRcXqmfD6Dfi","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"frontad","ts":"2018-08-07T09:53:36.385Z","type":"uj"}
{"msg":"Hello, I am learning the use of burrow. Where can I find detailed tutorials? The official documentation is too simple.","username":"frontad","ts":"2018-08-07T10:39:16.572Z"}
{"msg":"@compleatang I think there are something shoule be clarified that? Newcomers should know what they are useful to contribue to the burrow? So the link or the banner of this chat should show that","username":"ThangDC","ts":"2018-08-07T14:31:25.184Z"}
{"msg":"pls correct me if Im wrong ;)","username":"ThangDC","ts":"2018-08-07T14:31:40.280Z"}
{"msg":"Have you looked at https://github.com/monax/bosmarmot ","username":"compleatang","ts":"2018-08-08T02:53:59.266Z"}
{"msg":"hey there! one question, Burrow 0.20 doest work with RPC? It has only GRPC? Why if I access to localhost:10997 I cant see its API?\nI am trying to connect with Burrow server via nodejs ","username":"mmartinez.blocknitive","ts":"2018-08-08T08:49:58.045Z"}
{"msg":"Has joined the channel.","username":"yura_litvish","ts":"2018-08-08T12:36:47.243Z","type":"uj"}
{"msg":"fyi @silasdavis ... https://www.nytimes.com/2018/08/07/opinion/stem-girls-math-practice.html?action=click&module=Trending&pgtype=Article&region=Footer&contentCollection=Trending","username":"paulransfield","ts":"2018-08-09T05:35:36.466Z"}
{"msg":"fyi @silasdavis ...this reply from the hyperledger training working group ... @paulransfield You can definitely let people in the burrow channel that the Hyperledger MOOC on edX has over 104k total enrollments to date, in less than 10 months since it went live. By the way, we are working on a second version of the MOOC, most likely launching at the end of October, and it would be really good if we could add a chapter on Burrow. If there is anybody interested in assisting with that, I would be happy to connect with then and discuss about it. We will be adding new chapters on Indy and Composer, and one on Burrow would be a great addition","username":"paulransfield","ts":"2018-08-09T05:37:47.817Z"}
{"msg":"I completed this mooc in December ... they used a short video interview of the tech leads to introduce a given toolset ... if they repeated this approach, which has its pros n cons, then it's not much more than being videoed with an existing pitch deck ","username":"paulransfield","ts":"2018-08-09T05:43:24.716Z"}
{"msg":"Has joined the channel.","username":"uhaider","ts":"2018-08-09T07:56:45.037Z","type":"uj"}
{"msg":"ps","username":"mmartinez.blocknitive","ts":"2018-08-09T10:50:07.679Z"}
{"msg":"@mmartinez.blocknitive we have updated the docs for burrow.js: https://github.com/monax/bosmarmot/tree/develop/burrow.js ","username":"silasdavis","ts":"2018-08-09T13:31:42.182Z"}
{"msg":"This communicates with Burrow over GRPC","username":"silasdavis","ts":"2018-08-09T13:31:59.513Z"}
{"msg":"could you take a read of that, if you have any feedback that would be useful, PRs for corrections/improvements to that document even better","username":"silasdavis","ts":"2018-08-09T13:32:31.803Z"}
{"msg":"@frontad hopefully some of that is useful to you too","username":"silasdavis","ts":"2018-08-09T13:32:54.996Z"}
{"msg":"Has joined the channel.","username":"disrupt101","ts":"2018-08-09T14:30:41.057Z","type":"uj"}
{"msg":"Great! Thanks @silasdavis for your reply and updating the doc!","username":"mmartinez.blocknitive","ts":"2018-08-10T07:28:07.667Z"}
{"msg":"I have another question, is it possible to create a network of nodes with Burrow? I can't see any insight on the repo!","username":"mmartinez.blocknitive","ts":"2018-08-10T07:28:42.193Z"}
{"msg":"I am trying to set up at least 3 nodes on a burrow network and see how they works in a permissioned way! I tried to see the permissioned stuff above accounts on Burrow 0.19 and does not work (account with no permissions could deploy and call functions of a smart contact using legacy-contracts-js). How is the permissioned stuff over accounts and nodes going on? ","username":"mmartinez.blocknitive","ts":"2018-08-10T07:58:47.065Z"}
{"msg":"Yes certainly possible. Just distribute the config, genesis and keys to wherever the three nodes are running. If you're doing it all on a single machine make sure to watch the port conflicts. ","username":"compleatang","ts":"2018-08-10T10:08:18.922Z"}
{"msg":"Is there any stuff related to peers? which config do you mean? a toml?","username":"mmartinez.blocknitive","ts":"2018-08-10T10:09:17.423Z"}
{"msg":"As to permissions each account, when created gets the global default permissions for your chain which are human readable in the genesis spec and machine readable in the gensis.jaon","username":"compleatang","ts":"2018-08-10T10:09:29.838Z"}
{"msg":"My default global permissions allow for the deployment of contracts. ","username":"compleatang","ts":"2018-08-10T10:09:50.512Z"}
{"msg":"Not sure what you mean by anything with peers? And by config I mean the burrow.toml ","username":"compleatang","ts":"2018-08-10T10:10:46.677Z"}
{"msg":"Within the burrow.toml there are fields for peers. ","username":"compleatang","ts":"2018-08-10T10:11:06.857Z"}
{"msg":"How I say to one node that it has 2 nodes? Ah, ok, on burrow.toml ok","username":"mmartinez.blocknitive","ts":"2018-08-10T10:11:21.917Z"}
{"msg":"Is there any doc about this?","username":"mmartinez.blocknitive","ts":"2018-08-10T10:11:31.375Z"}
{"msg":"Pull requests welcome 😀","username":"compleatang","ts":"2018-08-10T10:11:59.331Z"}
{"msg":"hahaha ok. First of all i will try to read minds :D","username":"mmartinez.blocknitive","ts":"2018-08-10T10:12:39.199Z"}
{"msg":"There are some overviews at https://github.com/monax/bosmarmot","username":"compleatang","ts":"2018-08-10T10:12:49.621Z"}
{"msg":"okey, thanks a lot @compleatang ","username":"mmartinez.blocknitive","ts":"2018-08-10T10:13:22.751Z"}
{"msg":"Np. We're happy to help here and we know the docs could improve. Just under water with our own Monax stuff. ","username":"compleatang","ts":"2018-08-10T10:14:14.347Z"}
{"msg":"@compleatang what port is used for the network? tendermint or tm?","username":"mmartinez.blocknitive","ts":"2018-08-10T10:23:29.549Z"}
{"msg":"@compleatang which port is used for the network? tendermint or tm?","username":"mmartinez.blocknitive","ts":"2018-08-10T10:23:29.549Z"}
{"msg":"Has joined the channel.","username":"jaredvacanti","ts":"2018-08-13T05:00:06.014Z","type":"uj"}
{"msg":"error validating Burrow package file at epm.yaml: Address: must be valid 20 byte hex-encoded string like 'PrivateAccount{1453F97E6A4CAD70A286827D607342D1D7808AD4}'; Package: (Jobs: (0: (account: (address: did not validate any requirements: must be a variable placeholder like $marmotVariable, must be valid 20 byte hex-encoded string like 'PrivateAccount{1453F97E6A4CAD70A286827D607342D1D7808AD4}'.).).).).","username":"ds2xor","ts":"2018-08-13T06:27:05.554Z"}
{"msg":"I got such error when I try 'bos --address==B3E755E4D0C489BCE03B56ADDA09A493A6A98E52'","username":"ds2xor","ts":"2018-08-13T06:27:28.116Z"}
{"msg":"  [[GenesisDoc.Validators]]\n    Address = \"B3E755E4D0C489BCE03B56ADDA09A493A6A98E52\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"E2A25F4604E129CC0F8526D0240C17E6CEBC44753D513F45E8270D4B5F31923B\\\"}\"\n    Amount = 9999999999\n    Name = \"Full_0\"\n\n    [[GenesisDoc.Validators.UnbondTo]]\n      Address = \"B3E755E4D0C489BCE03B56ADDA09A493A6A98E52\"\n      PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"E2A25F4604E129CC0F8526D0240C17E6CEBC44753D513F45E8270D4B5F31923B\\\"}\"\n","username":"ds2xor","ts":"2018-08-13T06:28:08.560Z"}
{"msg":"above is the config in my toml file, how can I figure out this problem?","username":"ds2xor","ts":"2018-08-13T06:30:03.280Z"}
{"msg":"I have check all the things that I can, but still get this problem. I use app06 directory as my test, anyone can give some help? thx.","username":"ds2xor","ts":"2018-08-13T06:31:24.082Z"}
{"msg":"@ds2xor check versions of burrow, bos and solc. How did you install solc?","username":"mmartinez.blocknitive","ts":"2018-08-13T06:49:05.398Z"}
{"msg":"╰─$ bos version                                                                                                  2 ↵\n0.4.0+commit.7cb63a1e","username":"ds2xor","ts":"2018-08-13T06:53:25.367Z"}
{"msg":"╰─$ burrow -v\n0.20.1+commit.v0.18.0-204-g5ec7ab83","username":"ds2xor","ts":"2018-08-13T06:53:36.341Z"}
{"msg":"╰─$ solc --version                                                                                             127 ↵\nsolc, the solidity compiler commandline interface\nVersion: 0.4.24+commit.e67f0147.Darwin.appleclang","username":"ds2xor","ts":"2018-08-13T06:53:45.957Z"}
{"msg":"can't remember the exact solc install time,  maybe use the brew","username":"ds2xor","ts":"2018-08-13T06:54:53.423Z"}
{"msg":"I am working on mac, does this matter?","username":"ds2xor","ts":"2018-08-13T06:55:11.134Z"}
{"msg":"Idk... it seems okay..","username":"mmartinez.blocknitive","ts":"2018-08-13T06:55:33.919Z"}
{"msg":"How did you start burrow? upload your genesis-spec.json and burrow.toml to pastebin and show me please","username":"mmartinez.blocknitive","ts":"2018-08-13T06:55:51.756Z"}
{"msg":"ok,","username":"ds2xor","ts":"2018-08-13T06:56:06.523Z"}
{"msg":"https://pastebin.com/4KMEzgpm, the genesis-spec.json file","username":"ds2xor","ts":"2018-08-13T06:58:37.780Z"}
{"msg":"https://pastebin.com/BnsrkyS2 the burrow.toml file","username":"ds2xor","ts":"2018-08-13T06:59:57.533Z"}
{"msg":"burrow start --validator-index=0","username":"ds2xor","ts":"2018-08-13T07:00:19.461Z"}
{"msg":"I use the commands in the bosmarmot readme to start the burrow","username":"ds2xor","ts":"2018-08-13T07:01:38.116Z"}
{"msg":"seems fine... check burrow server is running","username":"mmartinez.blocknitive","ts":"2018-08-13T07:04:10.942Z"}
{"msg":"how to check it? 'ps -a' can see it","username":"ds2xor","ts":"2018-08-13T07:05:30.120Z"}
{"msg":"'ps aux | grep burrow'","username":"mmartinez.blocknitive","ts":"2018-08-13T07:07:14.336Z"}
{"msg":"and cat your burrow.log","username":"mmartinez.blocknitive","ts":"2018-08-13T07:07:36.888Z"}
{"msg":"'cat burrow.log | tail -5'","username":"mmartinez.blocknitive","ts":"2018-08-13T07:07:44.592Z"}
{"msg":"i've search the error string in source files, located at job_manager.go","username":"ds2xor","ts":"2018-08-13T07:08:39.485Z"}
{"msg":"\terr = do.Validate()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"error validating Burrow package file at %s: %v\", do.YAMLPath, err)\n","username":"ds2xor","ts":"2018-08-13T07:08:42.426Z"}
{"msg":"seems like format check error","username":"ds2xor","ts":"2018-08-13T07:08:56.687Z"}
{"msg":"imbeder          99539   0.1  0.8 558503228 138940 s000  SN    4:24下午  15:53.39 burrow start --validator-index=0","username":"ds2xor","ts":"2018-08-13T07:10:32.421Z"}
{"msg":"ps aux | grep burrow is above result","username":"ds2xor","ts":"2018-08-13T07:10:46.691Z"}
{"msg":"and the burrow.log?\nBos works for me following the getting started, I recommend you to close everything, reset your computer and restart the process","username":"mmartinez.blocknitive","ts":"2018-08-13T07:12:22.321Z"}
{"msg":"the file is too big, i will delete it and start up burrow again.","username":"ds2xor","ts":"2018-08-13T07:13:24.969Z"}
{"msg":"'cat burrow.log | tail -5'","username":"mmartinez.blocknitive","ts":"2018-08-13T07:13:44.950Z"}
{"msg":"{\"caller\":\"mempool.go:419\",\"component\":\"Tendermint\",\"height\":75531,\"log_channel\":\"Info\",\"message\":\"Recheck txs\",\"module\":\"mempool\",\"numtxs\":0,\"run_id\":\"9f48ef50-9ec8-11e8-805e-76f5aa62bc9d\",\"scope\":\"tendermint.NewNode\",\"time\":\"2018-08-13T07:16:40.992973798Z\"}\n{\"caller\":\"indexer_service.go:62\",\"component\":\"Tendermint\",\"height\":75531,\"log_channel\":\"Info\",\"message\":\"Indexed block\",\"module\":\"txindex\",\"run_id\":\"9f48ef50-9ec8-11e8-805e-76f5aa62bc9d\",\"scope\":\"tendermint.NewNode\",\"time\":\"2018-08-13T07:16:40.993541304Z\"}\n{\"caller\":\"switch.go:240\",\"channel\":32,\"component\":\"Tendermint\",\"log_channel\":\"Trace\",\"message\":\"Broadcast\",\"module\":\"p2p\",\"msgBytes\":\"C96A6FA808989C091801\",\"run_id\":\"9f48ef50-9ec8-11e8-805e-76f5aa62bc9d\",\"scope\":\"tendermint.NewNode\",\"time\":\"2018-08-13T07:16:40.99364493Z\"}\n{\"caller\":\"ticker.go:100\",\"component\":\"Tendermint\",\"log_channel\":\"Trace\",\"message\":\"Received tick\",\"module\":\"consensus\",\"new_ti\":{\"duration\":996226047,\"height\":75532,\"round\":0,\"step\":1},\"old_ti\":{\"duration\":3000000000,\"height\":75531,\"round\":0,\"step\":3},\"run_id\":\"9f48ef50-9ec8-11e8-805e-76f5aa62bc9d\",\"scope\":\"tendermint.NewNode\",\"time\":\"2018-08-13T07:16:40.99373395Z\"}\n{\"caller\":\"ticker.go:122\",\"component\":\"Tendermint\",\"dur\":\"996.226047ms\",\"height\":75532,\"log_channel\":\"Trace\",\"message\":\"Scheduled timeout\",\"module\":\"consensus\",\"round\":0,\"run_id\":\"9f48ef50-9ec8-11e8-805e-76f5aa62bc9d\",\"scope\":\"tendermint.NewNode\",\"step\":\"RoundStepNewHeight\",\"time\":\"2018-08-13T07:16:40.993831985Z\"}","username":"ds2xor","ts":"2018-08-13T07:17:00.560Z"}
{"msg":"I have restarted burrow and try the same command 'bos --address==B3E755E4D0C489BCE03B56ADDA09A493A6A98E52'","username":"ds2xor","ts":"2018-08-13T07:17:41.391Z"}
{"msg":"still get the same error, and the above log is the log after i got the error","username":"ds2xor","ts":"2018-08-13T07:18:16.062Z"}
{"msg":"no idea @ds2xor it seems everyhing okay...","username":"mmartinez.blocknitive","ts":"2018-08-13T07:20:04.140Z"}
{"msg":"try to solc your smart contract first","username":"mmartinez.blocknitive","ts":"2018-08-13T07:20:26.316Z"}
{"msg":"all right,  i will try it.","username":"ds2xor","ts":"2018-08-13T07:25:58.954Z"}
{"msg":"thank you","username":"ds2xor","ts":"2018-08-13T07:26:02.598Z"}
{"msg":"@ds2xor can you pastebin or gist the yaml file you are giving to bos please? this is likely a formatting error in the yaml. ","username":"compleatang","ts":"2018-08-13T09:00:39.081Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=k7Nyyz823ySYcck8c) @mmartinez.blocknitive default ports are: \n\npeer: 26656\nGRPC: 10997\ninfo (old TM RPC): 26658","username":"compleatang","ts":"2018-08-13T09:01:52.282Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=k7Nyyz823ySYcck8c","url":"https://chat.hyperledger.org/channel/burrow?msg=k7Nyyz823ySYcck8c","remote":true,"fileId":null,"fileName":null}]}
{"msg":"thanks @compleatang ","username":"mmartinez.blocknitive","ts":"2018-08-13T09:38:47.233Z"}
{"msg":"@compleatang https://pastebin.com/yw26W6cU here is my yaml file","username":"ds2xor","ts":"2018-08-13T11:12:23.453Z"}
{"msg":"just the file in the officail test app06 ","username":"ds2xor","ts":"2018-08-13T11:12:39.008Z"}
{"msg":"I have tried again, and now it works. Try to review how did i fix it..","username":"ds2xor","ts":"2018-08-13T13:50:30.972Z"}
{"msg":"seems like the only reason is 'bos --address==B3E755E4D0C489BCE03B56ADDA09A493A6A98E52'","username":"ds2xor","ts":"2018-08-13T13:50:42.483Z"}
{"msg":"i use '==' but '='","username":"ds2xor","ts":"2018-08-13T13:50:56.902Z"}
{"msg":"i did not change anything except this. sorry for the mistake","username":"ds2xor","ts":"2018-08-13T13:51:18.695Z"}
{"msg":"ah that error message is not that helpful though","username":"silasdavis","ts":"2018-08-13T14:44:32.323Z"}
{"msg":"glad it's fixed.","username":"compleatang","ts":"2018-08-13T14:57:02.262Z"}
{"msg":"I found that burrow use mow.cli as the command package and bos use cobra, is there some tech reason for the choice or just no why?","username":"ds2xor","ts":"2018-08-14T02:22:10.136Z"}
{"msg":"just wondering ... is anyone using Hyperledger Indy with Hyperledger Burrow?","username":"paulransfield","ts":"2018-08-14T03:55:22.436Z"}
{"msg":"Hey, I would like to try the following scenario: there are 3 individuals (A,B and C). A send a tx to transfer amount to B but C cannot see that tx. Could i make this? I should deal with accounts or nodes?\nAnd another thing, Is it possible to set that an account cannot call smart contract functions?","username":"mmartinez.blocknitive","ts":"2018-08-14T06:38:57.287Z"}
{"msg":"I found burrow use Apache license, and bosmarmot's burrow.js use GPL3.0 or later, but didn't find bos license, when will you update the license? will burrow.js use Apache license too?","username":"ds2xor","ts":"2018-08-14T14:21:32.801Z"}
{"msg":"@ds2xor bos is licensed Apache and is currently being merged into burrow itself as the `burrow deploy` command. That will harmonize some of the package use and licenses. ","username":"compleatang","ts":"2018-08-15T08:57:48.942Z"}
{"msg":"Burrow.js will remain GPL3.0 for now because we have dependencies on packages that are currently incompatible with Apache. We'd like to make it Apache but have more work to do to duplicate some of the effort of our dependencies before we can finalize the transition to Apache. ","username":"compleatang","ts":"2018-08-15T08:58:38.281Z"}
{"msg":"@mmartinez.blocknitive yes, you can modify an account's permissions for an example of how to do this see this test fixture -> https://github.com/monax/bosmarmot/tree/develop/tests/jobs_fixtures/app03-basic_and_advanced_permission_txs_and_queries","username":"compleatang","ts":"2018-08-15T08:59:49.051Z"}
{"msg":"as to \"hiding\" transactions, burrow does not allow such a feature unlike Sawtooth or Fabric. If it is on chain then all the validators can see the transaction. If this selective viewing of transactions is vital to your use case then I'd recommend that you utilize Sawtooth or Fabric in EVM mode rather than Burrow. In the alternative you could use a level 2 scaling and privacy solution in the vein of the state channel solutions that are getting developed. ","username":"compleatang","ts":"2018-08-15T09:01:42.181Z"}
{"msg":"All, please note that burrow v0.21.0 is out. This is basically a hotfix release after some non-deterministic issues were found in v0.20.0 from one of our upstream libraries (tendermint's serialization library) we *highly* encourage everyone to upgrade ASAP. https://github.com/hyperledger/burrow/releases/tag/v0.21.0","username":"compleatang","ts":"2018-08-21T15:56:24.038Z"}
{"msg":"Bonus is that we now are distributing statically compiled binaries as well.","username":"compleatang","ts":"2018-08-21T15:56:34.901Z"}
{"msg":"Has joined the channel.","username":"bdjidi","ts":"2018-08-21T22:47:30.895Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jon_s","ts":"2018-08-22T06:19:57.532Z","type":"uj"}
{"msg":"Has joined the channel.","username":"raheelz","ts":"2018-08-22T20:24:25.481Z","type":"uj"}
{"msg":"Has joined the channel.","username":"chainsaw","ts":"2018-08-23T17:39:52.445Z","type":"uj"}
{"msg":"Has joined the channel.","username":"grsind19","ts":"2018-08-23T20:18:57.311Z","type":"uj"}
{"msg":"Has joined the channel.","username":"InfoMiner","ts":"2018-08-24T19:41:00.731Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sccburrow","ts":"2018-08-27T12:32:23.061Z","type":"uj"}
{"msg":"Hello,\nI am currently trying to deploy a contract on hyperledger burrow (simple storage), I can start burrow, but when I try to deploy the contract with burrow deploy --address=[first burrow.toml address] it says exec: \"solc\": executable file not found in $PATH, but I have executed this in the direcotry where deploy.yaml and storage.sol is.","username":"sccburrow","ts":"2018-08-27T12:50:54.380Z"}
{"msg":"So does anybody know what I am doing wrong?","username":"sccburrow","ts":"2018-08-27T12:51:45.451Z"}
{"msg":"OS: Ubuntu 18.04 64 bit :)","username":"sccburrow","ts":"2018-08-28T08:04:49.705Z"}
{"msg":"if you're trying to compile a contract you'll need the solc binary on your machine. does `which solc` return a path? ","username":"compleatang","ts":"2018-08-28T08:57:37.841Z"}
{"msg":"thanks for the response\n no it does not return anything, how can I fix this?","username":"sccburrow","ts":"2018-08-28T09:07:06.874Z"}
{"msg":"you'll need to install the solidity compiler -> https://solidity.readthedocs.io/en/v0.4.24/installing-solidity.html","username":"compleatang","ts":"2018-08-28T09:15:58.547Z"}
{"msg":"then you'll be good to go. ","username":"compleatang","ts":"2018-08-28T09:16:03.661Z"}
{"msg":"for Ubuntu easiest way is:\n\n```\nsudo add-apt-repository ppa:ethereum/ethereum\nsudo apt-get update\nsudo apt-get install solc\n```","username":"compleatang","ts":"2018-08-28T09:16:35.232Z"}
{"msg":"Thanks, I think it would be helpful if this would be mentioned in the Installation / Getting Started of the readme of https://github.com/hyperledger/burrow","username":"sccburrow","ts":"2018-08-28T09:19:12.620Z"}
{"msg":"Indeed it would be. We welcome pull requests!","username":"compleatang","ts":"2018-08-28T09:26:14.813Z"}
{"msg":"Great it worked, okay I will try.  :)\nWhen I execute make build I only get /bin/borrow but not /bin/burrow-client, do you also know what I am doing wrong here?","username":"sccburrow","ts":"2018-08-28T09:31:54.672Z"}
{"msg":"you aren't doing anything wrong. burrow-client has been removed and the key functionality has been combined into the burrow binary.","username":"compleatang","ts":"2018-08-28T10:20:10.794Z"}
{"msg":"Has joined the channel.","username":"puneet","ts":"2018-08-28T10:42:58.167Z","type":"uj"}
{"msg":"is burrow interoperable with other blockchain(s) particularly with ethereum ? and can we use truffle migrations deployment on burrow evm ?","username":"puneet","ts":"2018-08-28T11:15:40.092Z"}
{"msg":"Is there a tutorial how I can test a smart contract deployed on burrow with javascript tests (like truffle)?","username":"sccburrow","ts":"2018-08-28T11:43:45.229Z"}
{"msg":"@puneet interoperable can mean any number of things. can you more precisely define your question? ","username":"compleatang","ts":"2018-08-28T15:05:37.606Z"}
{"msg":"@sccburrow check out burrow.js and it's tests -> https://github.com/monax/bosmarmot/tree/develop/burrow.js/test","username":"compleatang","ts":"2018-08-28T15:07:00.690Z"}
{"msg":"and the test runner here -> https://github.com/monax/bosmarmot/blob/develop/tests/burrow.js.sh","username":"compleatang","ts":"2018-08-28T15:07:17.953Z"}
{"msg":"okk cool, one last question (hopefully):\nhow can I make a test call from a certain address in an yaml test file, a normal function call looks like this:\n- name: [variable to save result in]\n  query-contract:\n      destination: [instance to send the call]\nfunction: [functionName]\n\nbut how do I specify to send a call from a certain address ? (in truffle javascript tests you would write {from: xxx} as a function argument)","username":"sccburrow","ts":"2018-08-29T07:57:50.235Z"}
{"msg":"okk cool, one last question (hopefully):\nhow can I make a test call from a certain address in an yaml test file, a normal function call looks like this:\n- name: [variable to save result in]\n  query-contract:\n      destination: [instance to send the call]\nfunction: [functionName]\n\nbut how do I specify to send a call from a certain address ? (in truffle javascript tests you would write {from: xxx} as a function argument)","username":"sccburrow","ts":"2018-08-29T07:57:50.235Z"}
{"msg":"okk cool, one last question (hopefully):\nhow can I make a test call from a certain address in an yaml test file, a normal function call looks like this:\n\n- name: [variable to save result in]\n  query-contract:\n      destination: [instance to send the call]\nfunction: [functionName]\n\nbut how do I specify to send a call from a certain address ? (in truffle javascript tests you would write {from: [address]} as an additional function argument)","username":"sccburrow","ts":"2018-08-29T07:57:50.235Z"}
{"msg":"okk cool, one last question (hopefully):\nhow can I make a test call from a certain address in a yaml test file, a normal function call looks like this:\n\n- name: [variable to save result in]\n  query-contract:\n      destination: [instance to send the call]\nfunction: [functionName]\n\nbut how do I specify to send a call from a certain address ? (in truffle javascript tests you would write {from: [address]} as an additional function argument)","username":"sccburrow","ts":"2018-08-29T07:57:50.235Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=mgbgqYQF3aMAjGFxF) @compleatang Thanks for reply! ,  I mean that we can push the tx merkle tree of multiple blocks regularly  to the main chain to provide proof  of asset in private chain so anybody can audit ?  I'm looking to have an edge to use burrow alternative to closed private chains.","username":"puneet","ts":"2018-08-29T08:31:29.240Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=mgbgqYQF3aMAjGFxF","url":"https://chat.hyperledger.org/channel/burrow?msg=mgbgqYQF3aMAjGFxF","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@puneet yes, you can pass in the appHash into Eth. That's dead simple and the block headers of each block give you the appHash (which is the root of the state merkle tree of the burrow chain); we also have the root of the block's merkle tree in the header as well. We don't currently have a function where a burrow node can do this directly. Currently you'd need a few functions in a middleware, but we are currently thinking through how to more easily help our users that want to interact. We'd love an issue which outlines exactly what you'd like to see from the burrow binary in terms of a user story here -> https://github.com/hyperledger/burrow/issues ","username":"compleatang","ts":"2018-08-29T10:07:22.803Z"}
{"msg":"@sccburrow yes that's possible, just pass in `account: [address]` in between name and query-contract (although query-contract's are simulated calls and are not signed). for the full reference see here -> https://godoc.org/github.com/hyperledger/burrow/deploy/def#Job","username":"compleatang","ts":"2018-08-29T10:09:54.439Z"}
{"msg":"@all Is anyone in the community willing to help get burrow working with truffle? We've been looking into this and @dennismckinnon from our team has a bit of time to start it, but we'd love some assistance from the community. From our early explorations it looks fairly doable. ","username":"compleatang","ts":"2018-08-29T10:14:30.973Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Mj99HfgRykvfeRuSg) @compleatang any examples that are made with burrow ? like for other projects in hyperledger umbrella there are different samples.","username":"puneet","ts":"2018-08-29T10:14:45.067Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Mj99HfgRykvfeRuSg","url":"https://chat.hyperledger.org/channel/burrow?msg=Mj99HfgRykvfeRuSg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"samples of sinking a block header into eth? not that i'm aware of. it's a matter of pulling block_info grabbing the hash you want and sending it to eth. not really complicated.","username":"compleatang","ts":"2018-08-29T10:18:15.418Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=HsxHssDnQuscFNKbr) @compleatang  not related to this particular issue , kind of getting started, I have looked into a sample storage.sol deploy but not sufficient . :)","username":"puneet","ts":"2018-08-29T10:20:09.895Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=HsxHssDnQuscFNKbr","url":"https://chat.hyperledger.org/channel/burrow?msg=HsxHssDnQuscFNKbr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"so in future burrow will be having a sidechain mechanism as a pluggable ?, are we guys following that road-map? just curious ...  where can  I look into roadmap ?","username":"puneet","ts":"2018-08-29T10:23:24.505Z"}
{"msg":"we're asking the community what they'd like to see from burrow as it relates to working with eth mainchain yes.","username":"compleatang","ts":"2018-08-29T10:24:23.840Z"}
{"msg":"roadmap is on wiki.hyperledger.org","username":"compleatang","ts":"2018-08-29T10:24:36.038Z"}
{"msg":"@compleatang  thanks for your response , best of luck!!","username":"puneet","ts":"2018-08-29T10:25:15.021Z"}
{"msg":"Puneet here's a small example:\n\n```\n# start burrow chain\nburrow spec -f1 | burrow configure -s- > burrow.toml\nburrow start -v0\n# pull app hash from block header\ncurl \"localhost:26658/block?height=2\" | jq -r .result.Block.header.app_hash > header.txt\n# send to eth\n```","username":"compleatang","ts":"2018-08-29T10:27:54.196Z"}
{"msg":"can we also pass this using rpc ?","username":"puneet","ts":"2018-08-29T10:29:32.415Z"}
{"msg":"yes. that was just meant to be a simple example. anything that can call http and parse json will do it.","username":"compleatang","ts":"2018-08-29T10:32:38.188Z"}
{"msg":"afaik  in  Public permissioned networks  Burrow can be a best pick. can you tell me any info how/where burrow is used in https://agreements.network/ ?","username":"puneet","ts":"2018-08-29T10:32:49.861Z"}
{"msg":"you don't even need the GRPC layer to do the above.","username":"compleatang","ts":"2018-08-29T10:32:54.486Z"}
{"msg":"burrow is the blockchain client for the agreements.network. ","username":"compleatang","ts":"2018-08-29T10:33:28.949Z"}
{"msg":"when the mainnet launches we'll be leveraging burrow's permission layer to provide advanced governance around new smart contracts added to the chain and ensuring that network level terms of service are agreed to by validators. ","username":"compleatang","ts":"2018-08-29T10:34:08.087Z"}
{"msg":"otherwise the permission layer will be turned either off (for `sudo` like permissions used on consortia chains, testnets, and local development chains)  or to fully public (for all other permissions).","username":"compleatang","ts":"2018-08-29T10:34:53.724Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=6AvnLKkTA3fGM9XxW) @compleatang It seems like I need to learn more about burrow now :sweat_smile: ","username":"puneet","ts":"2018-08-29T10:35:48.664Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=6AvnLKkTA3fGM9XxW","url":"https://chat.hyperledger.org/channel/burrow?msg=6AvnLKkTA3fGM9XxW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"hope you do! we are a bit slim on documentation because we're a small team, but always happy to answer questions when we can. and always looking for help on documentation and examples!!!!","username":"compleatang","ts":"2018-08-29T10:36:28.625Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=d9ERGKzhpbiqjMXLq) @compleatang your responses on time proves a lot ! thank you so much mate!! , I'll be looking forward for any contribution in future!","username":"puneet","ts":"2018-08-29T10:38:09.999Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=d9ERGKzhpbiqjMXLq","url":"https://chat.hyperledger.org/channel/burrow?msg=d9ERGKzhpbiqjMXLq","remote":true,"fileId":null,"fileName":null}]}
{"msg":":+1_tone2: ","username":"compleatang","ts":"2018-08-29T10:38:34.969Z"}
{"msg":"I'm working on an example where a public permissioned chain with known validators  but without trust ,Issue is  I don't want to use fabric or sawtooth it's best suitable for  private chain use cases , I want to have an future path for my project to have an \"public permissioned \" network with interoperable functionality so we can move the assets going forward. would burrow be a good pick ? ","username":"puneet","ts":"2018-08-29T10:43:30.809Z"}
{"msg":"I'm working on an example where a public permissioned chain with known validators  but without trust ,Issue is  I don't want to use fabric or sawtooth it's best suitable for  private chain use cases , future path for my project to have an \"public permissioned \" network with interoperable functionality so we can move the assets going forward. would burrow be a good pick ? ","username":"puneet","ts":"2018-08-29T10:43:30.809Z"}
{"msg":"I'm working on an example where a public permissioned chain with known validators  but without trust ,Issue is  I don't want to use fabric or sawtooth it's best suitable for  private chain use cases , future path for my project to have a \"public permissioned \" network with interoperable functionality so we can move the assets going forward. would burrow be a good pick ? ","username":"puneet","ts":"2018-08-29T10:43:30.809Z"}
{"msg":"That aligns with many of our requirements for the Agreements Network... So I'd say yes 😀","username":"compleatang","ts":"2018-08-29T11:33:19.175Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=wGM7tdPji2gGZdu56) @compleatang Where can I find more info about the Agreement Network. Thx","username":"SjirNijssen","ts":"2018-08-29T13:45:47.782Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=wGM7tdPji2gGZdu56","url":"https://chat.hyperledger.org/channel/burrow?msg=wGM7tdPji2gGZdu56","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has left the channel.","username":"tomislav","ts":"2018-08-29T14:07:53.594Z","type":"ul"}
{"msg":"https://agreements.network","username":"compleatang","ts":"2018-08-29T14:14:22.243Z"}
{"msg":"Has joined the channel.","username":"JSchlimmer","ts":"2018-08-29T15:39:08.990Z","type":"uj"}
{"msg":"Hello All, I'm new to Hyperledger chat but have a question pertaining to Hyperledger Burrow. Our resource needs the ability to accept / interpret / and disburse per a smart contract. I see many blogs and sites regarding Creating\" smart contracts but very little on what technology is needed to accept and interpret. I came across Hyperledger Burrow. Is this the add on / platform that is needed to accomplish my desired results? Thanks. #burrow ","username":"JSchlimmer","ts":"2018-08-29T15:39:16.269Z"}
{"msg":"@JSchlimmer it sounds like you might be talking our language, but it's a little difficult to understand what level of abstraction you are coming from with:\n> Our resource needs the ability to accept / interpret / and disburse per a smart contract\nAre you thinking in terms of a legal agreement represented in code (i.e. a smart contract), or making a payment where execution is implemented in code.\n\n> technology is needed to accept and interpret.\nAgain do you mean systems to do something based on the state of a smart contract?\n\nTo give some framework: a smart contract on Burrow is a piece of code - some logical rules (not necessarily a 'contract' of any kind - though it could be used to implement various elements of contract-ness). Certain authorised key-holders can prod that piece of code and have it change its values ('knight to E5', 'perform a 1 to 10 share split', whatever). We can consume the new state of the contract by querying it or by listening for events. If you ignore the way the state is maintain (via consensus on blockchain network) you can think of it as being like any kind of centralised data store - a google sheet, facebook, a cloud accounting package.","username":"silasdavis","ts":"2018-08-29T16:56:56.050Z"}
{"msg":"yes. based on the legal agreement within a smart contract,","username":"JSchlimmer","ts":"2018-08-29T16:58:01.918Z"}
{"msg":"@here we have made another step towards a slightly better documentation situation for our new tooling, here is an example app based on our latest stuff: https://github.com/monax/bosmarmot/tree/develop/example/basic-app","username":"silasdavis","ts":"2018-08-29T16:58:01.972Z"}
{"msg":"feedback welcome","username":"silasdavis","ts":"2018-08-29T16:58:17.898Z"}
{"msg":"We also recently added documentation on burrow.js: https://github.com/monax/bosmarmot/tree/develop/burrow.js","username":"silasdavis","ts":"2018-08-29T16:58:47.392Z"}
{"msg":"@JSchlimmer it sounds like you might be interested in what I work on for my day job - it used Burrow at its core - https://agreements.network/","username":"silasdavis","ts":"2018-08-29T16:59:30.570Z"}
{"msg":"@JSchlimmer it sounds like you might be interested in what I work on for my day job - it use Burrow at its core - https://agreements.network/","username":"silasdavis","ts":"2018-08-29T16:59:30.570Z"}
{"msg":"That is concerned with implementing legal agreements - a large part of which is code that runs _on top_ of Burrow rather than being _part of_ Burrow","username":"silasdavis","ts":"2018-08-29T17:00:49.561Z"}
{"msg":"The part that has me confused is what is software or Dapp is needed to interpret a created smart contract. Example: Part A gets under contract with party B to sell their house. Party A needs to place funds in escrow. Escrow agent recieves smart contract and funds. How do we read the smart contract? lol does that help explain?","username":"JSchlimmer","ts":"2018-08-29T17:00:57.047Z"}
{"msg":"i'm watching your video now.","username":"JSchlimmer","ts":"2018-08-29T17:01:27.574Z"}
{"msg":"yes great - so given that this is the sort of problem we are solving with the Agreements Network I can describe a bit about that, but if you'd like to know more specifically about that you might want to go to our telegram group: https://t.me/Agreements_Network. This channel is focused on general purpose use of Burrow (which I maintain).","username":"silasdavis","ts":"2018-08-29T17:02:45.904Z"}
{"msg":"The way a legal producer would model the scenario you describe would be produce a bundle, we call an archetype, of legal prose and an a process model (a workflow that sufficiently describes the parts of the agreement that are potentially executable - not all law is, most probably isn't)","username":"silasdavis","ts":"2018-08-29T17:04:14.767Z"}
{"msg":"this process model which is written in a language called BPMN (Business Process Modelling Notation) - it's a computerised flow chart.","username":"silasdavis","ts":"2018-08-29T17:05:05.575Z"}
{"msg":"heading there now. Am I wrong in saying that the agreement network is the tool needed to interpret executed smart contracts? Sorry, I'm just trying to simplify this for my brain.","username":"JSchlimmer","ts":"2018-08-29T17:05:43.620Z"}
{"msg":"Can you define what you mean by interpret?","username":"silasdavis","ts":"2018-08-29T17:06:14.716Z"}
{"msg":"As in - like a human lawyer?","username":"silasdavis","ts":"2018-08-29T17:06:32.255Z"}
{"msg":"Or as in a machine that understands a fulfilment event that says 'escrow funds received'?","username":"silasdavis","ts":"2018-08-29T17:07:04.799Z"}
{"msg":"I prefer option 2. specifically when the smart contracts defines who gets paid what and when.","username":"JSchlimmer","ts":"2018-08-29T17:07:29.729Z"}
{"msg":"we need to be able to understand that, have it populate into our system for disbursements","username":"JSchlimmer","ts":"2018-08-29T17:08:04.126Z"}
{"msg":"okay good, when we hit certain points in the process (and we can verify that parties that need to agree to move the process along have agreed via digital signatures) the system can emit events to listening system - legal backoffice, banking, whatever","username":"silasdavis","ts":"2018-08-29T17:08:43.540Z"}
{"msg":"Let me preface, all my focus here is on the sale of real estate.","username":"JSchlimmer","ts":"2018-08-29T17:08:54.337Z"}
{"msg":"and they can take some action based on that","username":"silasdavis","ts":"2018-08-29T17:08:54.965Z"}
{"msg":"so the agreements network provide an interface - the integration (which is what I think I would describe as your 'interpret') would need to be built into whatever system downstream needs to respond","username":"silasdavis","ts":"2018-08-29T17:10:05.163Z"}
{"msg":"but the idea of a stream of 'legal events' is probably what you should have in mind ","username":"silasdavis","ts":"2018-08-29T17:10:38.134Z"}
{"msg":"these can be consumed over our API","username":"silasdavis","ts":"2018-08-29T17:10:49.890Z"}
{"msg":"(this will be open source - anyone will be able to run it)","username":"silasdavis","ts":"2018-08-29T17:11:02.620Z"}
{"msg":"(this will be open source - anyone will be able to run it against their node)","username":"silasdavis","ts":"2018-08-29T17:11:02.620Z"}
{"msg":"Has joined the channel.","username":"oxae","ts":"2018-08-29T19:34:34.594Z","type":"uj"}
{"msg":"hello there\ni've successfully setup burrows even run the smart contracts and all that ","username":"oxae","ts":"2018-08-29T19:35:10.619Z"}
{"msg":"i was wondering where could i find documentation on how to interact with the node, things like sending transactions, reading the blockchain data","username":"oxae","ts":"2018-08-29T19:36:05.729Z"}
{"msg":"i understand this to be to role of a client","username":"oxae","ts":"2018-08-29T19:36:14.778Z"}
{"msg":"is every interaction with the chain supposed to be done with the yaml file","username":"oxae","ts":"2018-08-29T19:36:40.443Z"}
{"msg":"Typically that is done with middleware. You can check out the documentation for burrow.js which is a middleware library for node based applications here -> https://github.com/monax/bosmarmot in the burrow.js directory. Also there you can see a small example application which will do simple reading and contract calls","username":"compleatang","ts":"2018-08-29T22:18:00.324Z"}
{"msg":"Has joined the channel.","username":"kylekim","ts":"2018-08-30T03:19:28.078Z","type":"uj"}
{"msg":"When I try to deploy my contract from a specific address I get the eror expected a map, got 'string'\nThis is my deploy.yaml:\njobs:\n\n-name: setOwnerAddress\n  set:\n    val: \"[a valid address]\"\n\n- name: deployContract\n  account: $setOwnerAddress\n  deploy:\n    contract: myContract.sol\n\nhow can I defina a mapstructure?","username":"sccburrow","ts":"2018-08-30T07:27:09.948Z"}
{"msg":"When I try to deploy my contract from a specific address I get the eror expected a map, got 'string'\nThis is my deploy.yaml:\njobs:\n\n-name: setOwnerAddress\n  set:\n    val: \"[a valid address]\"\n\n- name: deployContract\n  account: $setOwnerAddress\n  deploy:\n    contract: myContract.sol\n\nhow can I define a mapstructure?","username":"sccburrow","ts":"2018-08-30T07:27:09.948Z"}
{"msg":"When I try to deploy my contract from a specific address I get the error: expected a map, got 'string'\nThis is my deploy.yaml:\njobs:\n\n-name: setOwnerAddress\n  set:\n    val: \"[a valid address]\"\n\n- name: deployContract\n  account: $setOwnerAddress\n  deploy:\n    contract: myContract.sol\n\nhow can I define a mapstructure?","username":"sccburrow","ts":"2018-08-30T07:27:09.948Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=mhbmDKRzpNRTTgcZL) @compleatang Hey! As I was trying to interact with burrow server using burrow.js and I faced some problems I think that make burrow working with truffle is needed! In addition, I checked out SNAK in the past and I think is an awesome idea. So, I am willing to participate in the project with your team. I am a full-stack developer and blockchain passionate. Pm me if you think I can help you in this duty!","username":"mmartinez.blocknitive","ts":"2018-08-30T07:33:46.118Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=mhbmDKRzpNRTTgcZL","url":"https://chat.hyperledger.org/channel/burrow?msg=mhbmDKRzpNRTTgcZL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"cc @dennismckinnon ","username":"compleatang","ts":"2018-08-30T08:24:50.372Z"}
{"msg":"@mmartinez.blocknitive what problems did you face? truffle would still use burrow.js under the hood....","username":"compleatang","ts":"2018-08-30T08:25:20.341Z"}
{"msg":"Hello\nis there a possibility to select for example the second address in the burrow.toml (the pendant to the truffle javascript test accounts[2])?","username":"sccburrow","ts":"2018-08-30T09:10:07.108Z"}
{"msg":"Hello\nis there a possibility to select for example the third address from the burrow.toml inside the deploy.yaml test/deploy file (the pendant to the truffle javascript test accounts[2])?","username":"sccburrow","ts":"2018-08-30T09:10:07.108Z"}
{"msg":"@sccburrow you can do this manually currently, but are you looking for something more automated that would run something like `burrow deploy -f deploy.yaml --validator-index 3` and then burrow would use the third key in the index (we currently have this functionality on start for example). Or are you looking for something more specific in the yaml itself? This would likely be an addition as currently we require reading from the genesis.json or burrow.toml and giving `burrow deploy` the actual address. We, e.g., in our CI system often do something like this:\n\n```\naddr=$(cat genesis.json | jq '.Accounts[] | select(.Name == \"Validator_$index\") | .Address')\n```","username":"compleatang","ts":"2018-08-30T12:05:05.583Z"}
{"msg":"@sccburrow you can do this manually currently, but are you looking for something more automated that would run something like `burrow deploy -f deploy.yaml --validator-index 3` and then burrow would use the third key in the index (we currently have this functionality on start for example). Or are you looking for something more specific in the yaml itself? This would likely be an addition as currently we require reading from the genesis.json or burrow.toml and giving `burrow deploy` the actual address. We, e.g., in our CI system often do something like this:\n\n```\naddr=$(cat genesis.json | jq '.Accounts[] | select(.Name == \"Validator_$index\") | .Address')\nburrow deploy -a $addr -f whatever.yaml\n```","username":"compleatang","ts":"2018-08-30T12:05:05.583Z"}
{"msg":"I am looking for something inside the deploy.yaml file something like (so I can jump inside the contract from one account/address to another):\njobs:\n  name: changeToAddress\n  account:\n    address: validator-index 3 OR Participant_3","username":"sccburrow","ts":"2018-08-30T12:45:32.655Z"}
{"msg":"I am looking for something inside the deploy.yaml file something like (so I can jump inside the contract from one account/address to another):\njobs:\n  name: changeToAddress\n  account:\n    address: validator-index 3 OR Participant_3","username":"sccburrow","ts":"2018-08-30T12:45:32.655Z"}
{"msg":"I am looking for something inside the deploy.yaml file something like (so I can jump inside the contract from one account/address to another):\njobs:\n  name: changeToAddress\n  account:\n    address: validator-index 3 OR Participant_3","username":"sccburrow","ts":"2018-08-30T12:45:32.655Z"}
{"msg":"Has joined the channel.","username":"theomarshanti","ts":"2018-08-30T15:05:41.565Z","type":"uj"}
{"msg":"Hello all - \nI have a very introductory question. I am approaching HyperLedger as an Ethereum Developer, but find the documentation too confusing to understand alone.\nCan someone please explain to me what Burrow is - separate from a \"Blockchain client\" - by comparing it to Ethereum? Per instance: \nI can use Geth (the Go-Ethereum client) to create a private Blockchain with as many Nodes as I wish. Can I do the same with Burrow? How about with any other HyperLedger projects such as Composer? \nWith Ethereum, I can house each geth Node of the Blockchain in multiple places (Terminal, Raspberry Pi, EC2); can I do the same with the nodes of my private Burrow blockchain?\nAdditionally, I can deploy Solidity Smart Contracts onto my Private Ethereum Blockchain; can I do this with a Burrow Blockchain?\n\nI apologize if my questions are either too basic or radically misinterpret Burrow. All help is appreciated.","username":"theomarshanti","ts":"2018-08-30T15:13:19.108Z"}
{"msg":"Hello all - \nI have a very introductory question. I am approaching HyperLedger as an Ethereum Developer, but find the documentation too confusing to understand alone.\nCan someone please explain to me what Burrow is - separate from a \"Blockchain client\" - by comparing it to Ethereum? Per instance: \nI can use Geth (the Go-Ethereum client) to create a private Blockchain with as many Nodes as I wish. Can I do the same with Burrow? How about with any other HyperLedger projects such as Composer? My understanding is that Burrow is unique in it's Smart Contract capabilities (but the rest of this behavior seems common to all Blockchains)\nCan any of the nodes I create \"mine\"/validate transactions/create blocks?\nWith Ethereum, I can house each geth Node of the Blockchain in multiple places (Terminal, Raspberry Pi, EC2); can I do the same with the nodes of my private Burrow blockchain?\nAdditionally, I can deploy Solidity Smart Contracts onto my Private Ethereum Blockchain and interact with them from my nodes that are connected to the Blockchain instance. Can I do this with a Burrow Blockchain?\n\nI apologize if my questions are either too basic or radically misinterpret Burrow. All help is appreciated.","username":"theomarshanti","ts":"2018-08-30T15:13:19.108Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=QT57afzGos3vinz2w) @compleatang haha not exactly burrow.js The problems were related to documentation, legacy-contracts.js, GRPC, and versioning stuff","username":"mmartinez.blocknitive","ts":"2018-08-30T16:25:43.471Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=QT57afzGos3vinz2w","url":"https://chat.hyperledger.org/channel/burrow?msg=QT57afzGos3vinz2w","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"gregmarlin","ts":"2018-08-30T20:09:47.717Z","type":"uj"}
{"msg":"","username":"compleatang","ts":"2018-08-30T20:43:58.693Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=JwbnS5EqJh4q4BBBA) @sccburrow We can change the account per job already but we don't currently have an ability to reference per named account. Feel free to file an issue in the repo outlining the user story you'd like to see and we'll look into it. In general it should be dead simple.","username":"compleatang","ts":"2018-08-30T20:46:50.025Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=JwbnS5EqJh4q4BBBA","url":"https://chat.hyperledger.org/channel/burrow?msg=JwbnS5EqJh4q4BBBA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@theomarshanti Hopefully all your answers are below:\n\nCan you set up a network with as many nodes as you want? Yes and no, currently there's an upper bound on Tendermint POS of 100 nodes, but below that yes.\n\nCan nodes validate? Yes, if you give them permissions to do so. \n\nCan burrow nodes run in different places? Yes, however for the same validator key that can only be running on one location currently. Tendermint is working on multi-sig for validators but currently one validator node: one key: one binary instance (running wherever you wish). One thing I'll point out that is a difference in GEth and Burrow is that Burrow has an inbuilt permission layer which makes this much easier if you don't want the whole network to be behind a VPN. \n\nCan Solidity be deploy? Yes, at Monax we deploy roughly 50k lines of Solidity a day to various burrow based networks. The network works the exact same as any GEth based network in this regard. \n\nIn general burrow is quite similar to GEth from the perspective of an application builder that's focusing on the solidity part. It's different from a network operator that is seeking to setup their network because we have Tendermint based proof of stake rather than POW and we have a permission layer which allows for you to, say, set only particular accounts that can deploy smart contracts, set other accounts that can validate but not send transactions, and whatever else you need to define for your network to operate smoothly. ","username":"compleatang","ts":"2018-08-30T22:29:48.766Z"}
{"msg":"I came to know about the burrow integration with fabric , can anybody tell me that what are the advantages that burrow can give to fabric  in response to standalone fabric project ? ","username":"puneet","ts":"2018-08-31T07:01:35.486Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm","username":"puneet","ts":"2018-08-31T07:03:31.740Z"}
{"msg":"Puneet, an EVM is the answer. ","username":"compleatang","ts":"2018-08-31T08:41:42.643Z"}
{"msg":"I'm going through the docs of agreements.network, I have a question where the data of user profile and passwords are store in the network ? is that  stored centrally? or the user also need to generate private key(s) like the validators does to participate in network .","username":"puneet","ts":"2018-08-31T08:48:42.457Z"}
{"msg":"@compleatang  I'm going through the docs of agreements.network, I have a question where the data of user profile and passwords are store in the network ? is that  stored centrally? or the user also need to generate private key(s) like the validators does to participate in network .","username":"puneet","ts":"2018-08-31T08:48:42.457Z"}
{"msg":"We (Monax) run our own API service that sits on top of the current Agreements Network testnets. This deployment has its own set of keys to operate on the network and authenticates _its_ users against a central database (postrgres), it then sends transactions on behalf of those users as a delegate.\n\nSome important things to note:\n- You can interact with the raw smart contract interface by signing and sending your own transactions\n- The API service and associated services will be release as open source in the next month or so as part of the Node Distribution - this will allow you to run the same front end server 'at the edge' whatever that means for you - in a kubernetes cluster like us, or on your laptop, whereby the API server would have access to your private keys\n- Each user is (or will be) represented by a user proxy contract that, that relays transactions on behalf of that users - effectively this is like a 'hot wallet'. Using this indirection we can layer various forms of authentication access control on the user proxy - it could only relay transactions for a specific key, it might need a threshold number of keys, the keys it authorised may belong to a web front end or may only reside on a secure HSM\n- The T3 test network is currently running with 11/12 validators, the quorum of which belong to us (in the test network stages) the other validators are being run by our network cofounders. As we spin this network out (the testnet series is building towards a production release) we will relinquish quorum (i.e. have less than 2/3 voting power) on the network\n\nTo be clear: there is no expectation that _we_ control your keys, but the architecture is multi-layered and there is scope for users who want to interact using a traditional service account model can do so. This lives in layers above the core decentralised network, and the Monax-flavoured gateway is just one - and ultimately will not be given any special status on the network.","username":"silasdavis","ts":"2018-08-31T09:41:17.537Z"}
{"msg":"We (Monax) run our own API service that sits on top of the current Agreements Network testnets. This deployment has its own set of keys to operate on the network and authenticates _its_ users against a central database (postrgres), it then sends transactions on behalf of those users as a delegate.\n\nSome important things to note:\n- You can interact with the raw smart contract interface by signing and sending your own transactions\n- The API service and associated services will be release as open source in the next month or so as part of the Node Distribution - this will allow you to run the same front end server 'at the edge' whatever that means for you - in a kubernetes cluster like us, or on your laptop, whereby the API server would have access to your private keys\n- Each user is (or will be) represented by a user proxy contract that, that relays transactions on behalf of that users - effectively this is like a 'hot wallet'. Using this indirection we can layer various forms of authentication/access control on the user proxy - it could only relay transactions for a specific key, it might need a threshold number of keys, the keys it authorised may belong to a web front end or may only reside on a secure HSM\n- The T3 test network is currently running with 11/12 validators, the quorum of which belong to us (in the test network stages) the other validators are being run by our network cofounders. As we spin this network out (the testnet series is building towards a production release) we will relinquish quorum (i.e. have less than 2/3 voting power) on the network\n\nTo be clear: there is no expectation that _we_ control your keys, but the architecture is multi-layered and there is scope for users who want to interact using a traditional service account model can do so. This lives in layers above the core decentralised network, and the Monax-flavoured gateway is just one - and ultimately will not be given any special status on the network.","username":"silasdavis","ts":"2018-08-31T09:41:17.537Z"}
{"msg":"We (Monax) run our own API service that sits on top of the current Agreements Network testnets. This deployment has its own set of keys to operate on the network and authenticates _its_ users against a central database (postrgres), it then sends transactions on behalf of those users as a delegate.\n\nSome important things to note:\n- You can interact with the raw smart contract interface by signing and sending your own transactions\n- The API service and associated services will be release as open source in the next month or so as part of the Node Distribution - this will allow you to run the same front end server 'at the edge' whatever that means for you - in a kubernetes cluster like us, or on your laptop, whereby the API server would have access to your private keys\n- Each user is (or will be) represented by a user proxy contract that, that relays transactions on behalf of that users - effectively this is like a 'hot wallet'. Using this indirection we can layer various forms of authentication/access control on the user proxy - it could only relay transactions for a specific key, it might need a threshold number of keys, the keys it authorised may belong to a web front end or may only reside on a secure HSM\n- The T3 test network is currently running with 11/12 validators, the quorum of which belong to us (in the test network stages) the other validators are being run by our network cofounders. As we spin this network out (the testnet series is building towards a production release) we will relinquish quorum (i.e. have less than 2/3 voting power) on the network\n\nTo be clear: there is no expectation that _we_ control your keys, but the architecture is multi-layered and there is scope for users who want to interact using a traditional service account model to do so. This lives in layers above the core decentralised network, and the Monax-flavoured gateway is just one - and ultimately will not be given any special status on the network.","username":"silasdavis","ts":"2018-08-31T09:41:17.537Z"}
{"msg":"We (Monax) run our own API service that sits on top of the current Agreements Network testnets. This deployment has its own set of keys to operate on the network and authenticates _its_ users against a central database (postrgres), it then sends transactions on behalf of those users as a delegate.\n\nSome important things to note:\n- You can interact with the raw smart contract interface by signing and sending your own transactions\n- The API service and associated services will be release as open source in the next month or so as part of the Node Distribution - this will allow you to run the same front end server 'at the edge' whatever that means for you - in a kubernetes cluster like us, or on your laptop, whereby the API server would have access to your private keys\n- Each user is (or will be) represented by a user proxy contract that, that relays transactions on behalf of that users - effectively this is like a 'hot wallet'. Using this indirection we can layer various forms of authentication/access control on the user proxy - it could only relay transactions for a specific key, it might need a threshold number of keys, the keys it authorised may belong to a web front end or may only reside on a secure HSM\n- The T3 test network is currently running with 11/12 validators, the quorum of which belong to us (in the test network stages) the other validators are being run by our network cofounders. As we spin this network out (the testnet series is building towards a production release) we will relinquish quorum (i.e. have less than 2/3 voting power) on the network\n\nTo be clear: there is no expectation that _we_ control your keys, but the architecture is multi-layered and there is scope for users who want to interact using a traditional service account model to do so. This lives in layers above the core decentralised network, and the Monax-flavoured gateway is just one of what will hopefully be many - and ultimately will not be given any special status on the network.","username":"silasdavis","ts":"2018-08-31T09:41:17.537Z"}
{"msg":"If you have any more questions about the Agreements Network as distinct from Burrow check out the telegram group on the AN page","username":"silasdavis","ts":"2018-08-31T09:42:04.785Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=4hXeFGQbCSYNwT4Dn) @silasdavis thanks! the delegation of calls are done via Vent ?  via burrow.js ?","username":"puneet","ts":"2018-08-31T09:56:41.444Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=4hXeFGQbCSYNwT4Dn","url":"https://chat.hyperledger.org/channel/burrow?msg=4hXeFGQbCSYNwT4Dn","remote":true,"fileId":null,"fileName":null}]}
{"msg":"is this repo https://github.com/pouladzade/snak   works with current version of burrow ? ","username":"puneet","ts":"2018-08-31T11:43:31.855Z"}
{"msg":"is this abandoned https://github.com/pouladzade/snak ?","username":"puneet","ts":"2018-08-31T11:46:52.598Z"}
{"msg":"can we use Web3 Compatibility of ethermint in burrow ? Afaik both runs on top of tendermint.","username":"puneet","ts":"2018-08-31T12:02:21.928Z"}
{"msg":"We're working on a web3 provider so folks can use truffle and such but it'll take some time to finalize that. Burrow does not implement web3 because that's a dumpster fire of handrolled code. But that can be abstracted for users. And we'll start working on a prototype along with truffle folks shortly. ","username":"compleatang","ts":"2018-08-31T13:09:58.970Z"}
{"msg":"https://twitter.com/trufflesuite/status/1034836958369865729?s=19","username":"compleatang","ts":"2018-08-31T13:10:29.657Z"}
{"msg":"Has joined the channel.","username":"sureshtedla","ts":"2018-08-31T17:28:27.273Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=vCzLHB4MkSZXsErD8) @compleatang Hi, what exactly do you mean by web3 being a dumpster fire of handrolled code? Is that a comment on its organisation or security issues, or anything else?","username":"Luker501","ts":"2018-08-31T21:50:05.084Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=vCzLHB4MkSZXsErD8","url":"https://chat.hyperledger.org/channel/burrow?msg=vCzLHB4MkSZXsErD8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"It's a custom json rpc framework which means that implementers need to handroll a bunch of code that's custom rather than using something like gRPC and protobuf which is much more deeply tested across a huge range of production systems and is maintained according to deep engineering principles. ","username":"compleatang","ts":"2018-09-01T08:17:07.335Z"}
{"msg":"is the state data stored same as ethereum (merkle-patricia-tree in leveldb) ? ","username":"puneet","ts":"2018-09-01T08:55:17.984Z"}
{"msg":"is the state data stored same as ethereum (merkle-patricia-tree in leveldb) or tendermint IAVL+ Tree ? ","username":"puneet","ts":"2018-09-01T08:55:17.984Z"}
{"msg":"I want to visualise the state data !","username":"puneet","ts":"2018-09-01T09:00:48.744Z"}
{"msg":"It's stored in as IAVL in LevelDB.","username":"compleatang","ts":"2018-09-01T11:17:39.788Z"}
{"msg":"@Luker501 haha @compleatang is being a little poetic with 'dumpster fire' - it's at least based on JSON-RPC - but it's perhaps not how you would build an RPC for an EVM all things being equal, it also isn't very modular. We still might try and support a proxy for it against our GRPC interfaces. I'd agree with with Case though - GRPC has a huge amount of testing and generality behind it, and perhaps more importantly forces you to define you domain model aside from you implementation/RPC layer (to some extent). It's also has some efficiency (binary format) and robustness (strongly typed schema) advantages over a typical JSON-RPC implementation - though of course the quality of the implementation matters. I would imagine geth's web3 layer is pretty solid these days really, but using GRPC means we can get solid clients for _free_ across a range of services including our ETL layer, and at the same time we define our public interfaces even when used in code.","username":"silasdavis","ts":"2018-09-01T12:10:58.161Z"}
{"msg":"@puneet the data model is more-or-less the same. We have permissions and roles associated with accounts that are serialised and stored in the IAVL tree. When you say visualise do you mean in your mind or literally? For a mental model we have an account tree of `Address -> Account (public key (maybe), balance, code, permissions, roles)` and a storage key `Address -> Word256 Key -> Word256 Value`","username":"silasdavis","ts":"2018-09-01T12:14:09.281Z"}
{"msg":"Thanks both. Good info! ","username":"Luker501","ts":"2018-09-01T15:44:03.216Z"}
{"msg":"Hello\nI tried to send some tokens to the contract and I got the fowllowing erromessage:\nJob Name                                    => sendToken\n\n                                           \n                                            defAddr => 1D9329964F26841367C48CE07A9D4B7E11ED128CrawErr => rpc error: code = Unknown desc = error returned by Tendermint in BroadcastTxSync ABCI log: CheckTx: Could not execute transaction: TxEnvelope{Signatures: 1, Tx: Tx{TxHash: FC582C37A431D711EEEA57F6DC8BDEA794127966; Payload: CallTx{TxInput{1D9329964F26841367C48CE07A9D4B7E11ED128C, Amount: 800, Sequence:99} -> AFA28A6E48C3A1D97092FE25CC2E839BA874C7AB: 98EA5FCA}}}, error: Error 24: Insufficient funds\n\nThere has been an error talking to your Burrow chain using account 1D9329964F26841367C48CE07A9D4B7E11ED128C.\n\nrpc error: code = Unknown desc = error returned by Tendermint in BroadcastTxSync ABCI log: CheckTx: Could not execute transaction: TxEnvelope{Signatures: 1, Tx: Tx{TxHash: FC582C37A431D711EEEA57F6DC8BDEA794127966; Payload: CallTx{TxInput{1D9329964F26841367C48CE07A9D4B7E11ED128C, Amount: 800, Sequence:99} -> AFA28A6E48C3A1D97092FE25CC2E839BA874C7AB: 98EA5FCA}}}, error: Error 24: Insufficient funds\n\nAs you can see I tried to send 800 to the contract from the address 1D9329964F26841367C48CE07A9D4B7E11ED128C, it says Insufficient funds, but the address has enough funds to proceed this transaction. Here is the entry in the burrow.toml of the address:\n\n  [[GenesisDoc.Accounts]]\n    Address = \"1D9329964F26841367C48CE07A9D4B7E11ED128C\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"E70E8F700A02FE1065339CF84A7D134B873EA37BA06194D6F6977C0335FC1B0A\\\"}\"\n    Amount = 9999999999\n    Name = \"Participant_1\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = 2118\n        SetBit = 2118\n\nThe test itself in the deploy.yaml is:\n- name: sendToken\n  call:\n    destination: $deploysmartGrid\n    function: depositEther\n    amount: 800\n\nCan anybody help me?","username":"sccburrow","ts":"2018-09-03T09:37:15.762Z"}
{"msg":"Hello\nI tried to send some tokens to the contract and I got the following erromessage:\nJob Name                                    => sendToken\n\n                                           \n                                            defAddr => 1D9329964F26841367C48CE07A9D4B7E11ED128CrawErr => rpc error: code = Unknown desc = error returned by Tendermint in BroadcastTxSync ABCI log: CheckTx: Could not execute transaction: TxEnvelope{Signatures: 1, Tx: Tx{TxHash: FC582C37A431D711EEEA57F6DC8BDEA794127966; Payload: CallTx{TxInput{1D9329964F26841367C48CE07A9D4B7E11ED128C, Amount: 800, Sequence:99} -> AFA28A6E48C3A1D97092FE25CC2E839BA874C7AB: 98EA5FCA}}}, error: Error 24: Insufficient funds\n\nThere has been an error talking to your Burrow chain using account 1D9329964F26841367C48CE07A9D4B7E11ED128C.\n\nrpc error: code = Unknown desc = error returned by Tendermint in BroadcastTxSync ABCI log: CheckTx: Could not execute transaction: TxEnvelope{Signatures: 1, Tx: Tx{TxHash: FC582C37A431D711EEEA57F6DC8BDEA794127966; Payload: CallTx{TxInput{1D9329964F26841367C48CE07A9D4B7E11ED128C, Amount: 800, Sequence:99} -> AFA28A6E48C3A1D97092FE25CC2E839BA874C7AB: 98EA5FCA}}}, error: Error 24: Insufficient funds\n\nAs you can see I tried to send 800 to the contract from the address 1D9329964F26841367C48CE07A9D4B7E11ED128C, it says Insufficient funds, but the address has enough funds to proceed this transaction. Here is the entry in the burrow.toml of the address:\n\n  [[GenesisDoc.Accounts]]\n    Address = \"1D9329964F26841367C48CE07A9D4B7E11ED128C\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"E70E8F700A02FE1065339CF84A7D134B873EA37BA06194D6F6977C0335FC1B0A\\\"}\"\n    Amount = 9999999999\n    Name = \"Participant_1\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = 2118\n        SetBit = 2118\n\nThe test itself in the deploy.yaml is:\n- name: sendToken\n  call:\n    destination: $deploysmartGrid\n    function: depositEther\n    amount: 800\n\nCan anybody help me?","username":"sccburrow","ts":"2018-09-03T09:37:15.762Z"}
{"msg":"Has joined the channel.","username":"easeev","ts":"2018-09-03T12:32:18.109Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=fnWH9xvqTxwtSFPYB) @silasdavis thanks for the response appreciated :) , can we view the storage data  key value pairs ? I have done quite research about this but haven't found any concrete solution to literally view data. we can explore leveldb's data but question is there any solution to view the IAVL structured data?  ","username":"puneet","ts":"2018-09-04T05:48:46.056Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=fnWH9xvqTxwtSFPYB","url":"https://chat.hyperledger.org/channel/burrow?msg=fnWH9xvqTxwtSFPYB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Ypy3doyjD6svFNMuw) @sccburrow have you tried with small amount ? ","username":"puneet","ts":"2018-09-04T05:51:55.417Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Ypy3doyjD6svFNMuw","url":"https://chat.hyperledger.org/channel/burrow?msg=Ypy3doyjD6svFNMuw","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Yeah I thought 800 is quiet small, but I tried it once again with amount 1 with the same result","username":"sccburrow","ts":"2018-09-04T05:59:44.826Z"}
{"msg":"can you post a pastebin link for the deploy.yaml ?","username":"puneet","ts":"2018-09-04T06:01:30.639Z"}
{"msg":"can you post a link for the deploy.yaml ?","username":"puneet","ts":"2018-09-04T06:01:30.639Z"}
{"msg":"of course","username":"sccburrow","ts":"2018-09-04T06:02:04.269Z"}
{"msg":"https://pastebin.com/r48zRGMz","username":"sccburrow","ts":"2018-09-04T06:03:27.777Z"}
{"msg":"everything works til the job sendToken","username":"sccburrow","ts":"2018-09-04T06:04:26.182Z"}
{"msg":"witdraw working>","username":"puneet","ts":"2018-09-04T06:06:53.032Z"}
{"msg":"withdrawToken working>","username":"puneet","ts":"2018-09-04T06:06:53.032Z"}
{"msg":"?","username":"puneet","ts":"2018-09-04T06:06:55.270Z"}
{"msg":"no because the test stops when i try to deposit something","username":"sccburrow","ts":"2018-09-04T06:07:23.355Z"}
{"msg":"(and I think when the deposit not works the withdraw has to fail, because the contract would have no funds)","username":"sccburrow","ts":"2018-09-04T06:08:00.777Z"}
{"msg":"i think, but not sure try with  the option data not with amount ? ","username":"puneet","ts":"2018-09-04T06:08:52.662Z"}
{"msg":"i think, but not sure try with  the option val not with amount ? ","username":"puneet","ts":"2018-09-04T06:08:52.662Z"}
{"msg":"- name: sendToken\n  call:\n    destination: $deploysmartGrid\n    function: depositEther\n    val: 800","username":"puneet","ts":"2018-09-04T06:09:52.703Z"}
{"msg":"okkay I will try but in the docs there is clearly amount specified (https://godoc.org/github.com/hyperledger/burrow/deploy/def#Call)","username":"sccburrow","ts":"2018-09-04T06:13:46.557Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=wBiZ8DoBo8GxNZ4S8) @sccburrow i'm finding this only, thanks for sharing","username":"puneet","ts":"2018-09-04T06:14:16.084Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=wBiZ8DoBo8GxNZ4S8","url":"https://chat.hyperledger.org/channel/burrow?msg=wBiZ8DoBo8GxNZ4S8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=wBiZ8DoBo8GxNZ4S8) @sccburrow i'm searching this only, thanks for sharing","username":"puneet","ts":"2018-09-04T06:14:16.084Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=wBiZ8DoBo8GxNZ4S8","url":"https://chat.hyperledger.org/channel/burrow?msg=wBiZ8DoBo8GxNZ4S8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"try with gas and fees (no use to burrow) but give it a short.","username":"puneet","ts":"2018-09-04T06:15:52.400Z"}
{"msg":"okay and how much should I try?","username":"sccburrow","ts":"2018-09-04T06:17:23.075Z"}
{"msg":"give the value 0 or anything , we need to mention  fees /gas arguments imo ?","username":"puneet","ts":"2018-09-04T06:19:01.381Z"}
{"msg":"same error with fee 1000 and gas 5","username":"sccburrow","ts":"2018-09-04T06:19:21.921Z"}
{"msg":"Job Name                                    => sendToken\n\n                                           \n                                            rawErr => rpc error: code = Unknown desc = exception during transaction execution: Call error: Error 4: Insufficient gasdefAddr => 1D9329964F26841367C48CE07A9D4B7E11ED128C\n\nThere has been an error talking to your Burrow chain using account 1D9329964F26841367C48CE07A9D4B7E11ED128C.\n\nrpc error: code = Unknown desc = exception during transaction execution: Call error: Error 4: Insufficient gas\n\n","username":"sccburrow","ts":"2018-09-04T06:20:48.627Z"}
{"msg":"now the error is not insufficient amount, bud insufficient gas with gas and fee 0","username":"sccburrow","ts":"2018-09-04T06:21:18.979Z"}
{"msg":"try gas 21000","username":"puneet","ts":"2018-09-04T06:21:36.707Z"}
{"msg":"great thanks it worked :)))))","username":"sccburrow","ts":"2018-09-04T06:22:55.056Z"}
{"msg":"yay","username":"puneet","ts":"2018-09-04T06:22:58.700Z"}
{"msg":"but I fdo not think that this is logical, all other calls worked without fee and gas mentioned, but when you want to send an amount you have to mention them\ndo you have a logical explanation for this?","username":"sccburrow","ts":"2018-09-04T06:25:00.937Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=AaFnuN7T7RRq98xqA) @sccburrow umm gas is of no use in the burrow ,  same think happens with the jp morgan's quorum . ","username":"puneet","ts":"2018-09-04T06:26:15.532Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=AaFnuN7T7RRq98xqA","url":"https://chat.hyperledger.org/channel/burrow?msg=AaFnuN7T7RRq98xqA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=AaFnuN7T7RRq98xqA) @sccburrow umm gas is of no use in the burrow ,  same think happens with the jp morgan's quorum , i do not have any explanation about this maybe experts can help.","username":"puneet","ts":"2018-09-04T06:26:15.532Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=AaFnuN7T7RRq98xqA","url":"https://chat.hyperledger.org/channel/burrow?msg=AaFnuN7T7RRq98xqA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"","username":"puneet","ts":"2018-09-04T07:14:49.520Z","attachments":[{"type":"file","title":"Burrow Blockchain Arch-SampleGraphic.jpg","title_link":"/file-upload/WYSycq4db5LLhkZnN/Burrow%20Blockchain%20Arch-SampleGraphic.jpg","image_url":"/file-upload/WYSycq4db5LLhkZnN/Burrow%20Blockchain%20Arch-SampleGraphic.jpg","image_type":"image/jpeg","image_size":48372,"url":"/file-upload/WYSycq4db5LLhkZnN/Burrow%20Blockchain%20Arch-SampleGraphic.jpg","remote":false,"fileId":"WYSycq4db5LLhkZnN","fileName":"Burrow Blockchain Arch-SampleGraphic.jpg"}]}
{"msg":"Hey, one question, is Burrow compatible with any of the Hyperledger Tools such as Caliper, Explorer...?","username":"mmartinez.blocknitive","ts":"2018-09-04T08:05:21.853Z"}
{"msg":"@mmartinez.blocknitive you'd need to check with those projects. most of them support fabric.","username":"compleatang","ts":"2018-09-04T09:46:46.818Z"}
{"msg":"Has joined the channel.","username":"gregdhill","ts":"2018-09-04T09:47:14.452Z","type":"uj"}
{"msg":"@sccburrow and @puneet it's a factor of defaults we give to burrow deploy. if you give it an amount then the assumption is that you will also give a fee and/or gas. ","username":"compleatang","ts":"2018-09-04T09:48:09.729Z"}
{"msg":"how to install burrow into $GOPATH/bin with make install_db ? ","username":"puneet","ts":"2018-09-05T11:08:36.883Z"}
{"msg":" *** No rule to make target 'install_db'.  Stop.","username":"puneet","ts":"2018-09-05T11:08:53.735Z"}
{"msg":"https://github.com/hyperledger/burrow/blob/develop/Makefile#L132","username":"compleatang","ts":"2018-09-05T12:31:24.991Z"}
{"msg":"tl'dr `make install_burrow`","username":"compleatang","ts":"2018-09-05T12:35:03.954Z"}
{"msg":"thanks for the note. i've updated the docs.","username":"compleatang","ts":"2018-09-05T12:35:11.593Z"}
{"msg":"Has joined the channel.","username":"wanglijun","ts":"2018-09-05T20:59:52.651Z","type":"uj"}
{"msg":"go get github.com/hyperledger/burrow\ncd github.com/hyperledger/burrow\nmake build","username":"wanglijun","ts":"2018-09-05T21:00:08.910Z"}
{"msg":"When I run 'make build' in windows, I got 'make' is not recognized as an internal or external command. What do I need?","username":"wanglijun","ts":"2018-09-05T21:01:04.532Z"}
{"msg":"@wanglijun you can check ENVIRONMENT VARIABLES, the path for that command should be there","username":"ThangDC","ts":"2018-09-06T01:51:13.739Z"}
{"msg":"@ThangDC  What software should I install to run 'make build' in windows? I think I don't have that. Thanks.","username":"wanglijun","ts":"2018-09-06T15:50:02.002Z"}
{"msg":"I have never tried in Windows before for burrow but I think you can try to download and install make tool from gnu Make  http://gnuwin32.sourceforge.net/packages/make.htm or gnuMCU build tools https://gnu-mcu-eclipse.github.io/windows-build-tools/install/","username":"ThangDC","ts":"2018-09-06T16:01:33.737Z"}
{"msg":"@wanglijun I have never tried in Windows before for burrow but I think you can try to download and install make tool from gnu Make  http://gnuwin32.sourceforge.net/packages/make.htm or gnuMCU build tools https://gnu-mcu-eclipse.github.io/windows-build-tools/install/","username":"ThangDC","ts":"2018-09-06T16:01:33.737Z"}
{"msg":"Hope that help!:)","username":"ThangDC","ts":"2018-09-06T16:37:21.567Z"}
{"msg":"Has joined the channel.","username":"mighty-pirate","ts":"2018-09-06T17:53:16.910Z","type":"uj"}
{"msg":"How Hyperledger Supporting this project? IMO documentation of this project is needed urgently.  only thing that is stopping in adoption right now!","username":"puneet","ts":"2018-09-07T07:31:20.957Z"}
{"msg":"@compleatang  @silasdavis  let me know If i can help in anyways , graphics/documentation or in nodejs SDK etc","username":"puneet","ts":"2018-09-07T07:32:56.640Z"}
{"msg":"Running  example of usage in setting and getting a name from bosmarmot readme file but when running it is stopping the node itself. \nError from node :  (node:10214) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead\n.payload.TxInput#0 is not a field: undefined\n(node:10214) UnhandledPromiseRejectionWarning: Error: 2 UNKNOWN: Stream removed\n","username":"puneet","ts":"2018-09-07T09:42:34.020Z"}
{"msg":"Running  example of usage in setting and getting a name from bosmarmot readme file but when running it is stopping the node itself. \n*Error from node :*\n  (node:10214) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead\n.payload.TxInput#0 is not a field: undefined\n(node:10214) UnhandledPromiseRejectionWarning: Error: 2 UNKNOWN: Stream removed\n\n*Error from Burrow Node:*\n{\"log_channel\":\"Trace\",\"message\":\"GRPC unary call\",\"method\":\"/rpcquery.Query/GetName\",\"run_id\":\"be9d8a8b-b281-11e8-8df9-5a1dbffc7d4a\",\"scope\":\"NewKernel()\",\"time\":\"2018-09-07T09:39:30.714403823Z\"}\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0xb6d2b6]\n\n","username":"puneet","ts":"2018-09-07T09:43:48.475Z"}
{"msg":"Running  example of usage in setting and getting a name from bosmarmot readme file but when running it is stopping the node itself. \n*Error from nodeJS :*\n  (node:10214) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead\n.payload.TxInput#0 is not a field: undefined\n(node:10214) UnhandledPromiseRejectionWarning: Error: 2 UNKNOWN: Stream removed\n\n*Error from Burrow Node:*\n{\"log_channel\":\"Trace\",\"message\":\"GRPC unary call\",\"method\":\"/rpcquery.Query/GetName\",\"run_id\":\"be9d8a8b-b281-11e8-8df9-5a1dbffc7d4a\",\"scope\":\"NewKernel()\",\"time\":\"2018-09-07T09:39:30.714403823Z\"}\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0xb6d2b6]\n\n","username":"puneet","ts":"2018-09-07T09:43:48.475Z"}
{"msg":"Running  example of usage in setting and getting a name from bosmarmot readme file but when running it is stopping the Burrow node itself. \n*Error from nodeJS :*\n  (node:10214) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead\n.payload.TxInput#0 is not a field: undefined\n(node:10214) UnhandledPromiseRejectionWarning: Error: 2 UNKNOWN: Stream removed\n\n*Error from Burrow Node:*\n{\"log_channel\":\"Trace\",\"message\":\"GRPC unary call\",\"method\":\"/rpcquery.Query/GetName\",\"run_id\":\"be9d8a8b-b281-11e8-8df9-5a1dbffc7d4a\",\"scope\":\"NewKernel()\",\"time\":\"2018-09-07T09:39:30.714403823Z\"}\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0xb6d2b6]\n\n","username":"puneet","ts":"2018-09-07T09:43:48.475Z"}
{"msg":"Running  example of usage in setting and getting a name from bosmarmot readme file but when running it is stopping the Burrow node itself. \n*Error from nodeJS :*\n  (node:10214) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead\n.payload.TxInput#0 is not a field: undefined\n(node:10214) UnhandledPromiseRejectionWarning: Error: 2 UNKNOWN: Stream removed\n\n*Error from Burrow Node:*\n{\"log_channel\":\"Trace\",\"message\":\"GRPC unary call\",\"method\":\"/rpcquery.Query/GetName\",\"run_id\":\"be9d8a8b-b281-11e8-8df9-5a1dbffc7d4a\",\"scope\":\"NewKernel()\",\"time\":\"2018-09-07T09:39:30.714403823Z\"}\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0xb6d2b6]\n\nCODE : https://pastebin.com/GQWCq6Vf","username":"puneet","ts":"2018-09-07T09:43:48.475Z"}
{"msg":"We'd love documentation assistance. Especially around graphics and getting started tutorials!","username":"compleatang","ts":"2018-09-07T14:19:13.673Z"}
{"msg":"cc @dennismckinnon ","username":"compleatang","ts":"2018-09-07T14:20:44.165Z"}
{"msg":"hello @puneet  I believe the error you are getting is due to you having an incorrect payload","username":"dennismckinnon","ts":"2018-09-07T14:48:56.345Z"}
{"msg":"in particular the \"Input\" field is not just the buffer of the address","username":"dennismckinnon","ts":"2018-09-07T14:49:19.002Z"}
{"msg":"its a TxInput object as described here https://github.com/monax/bosmarmot/blob/develop/burrow.js/protobuf/payload.proto#L33-L41","username":"dennismckinnon","ts":"2018-09-07T14:49:56.221Z"}
{"msg":"I wonder though is there a reason you are using the low-level grpc interface for this task?","username":"dennismckinnon","ts":"2018-09-07T14:50:19.309Z"}
{"msg":"You could also use burrow.namereg.set/get as described here https://github.com/monax/bosmarmot/tree/develop/burrow.js#namereg","username":"dennismckinnon","ts":"2018-09-07T14:51:20.514Z"}
{"msg":"Help in documentation would be greatly appreciated... I admit that the README i put together is somewhat lacking though technically complete it doesn't make for a good introduction point","username":"dennismckinnon","ts":"2018-09-07T14:52:21.359Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=wEeiQD99tuN4Ar3br) @dennismckinnon My concern is the low-level grpc interface  code that is available in README file needs updation , I will be pushing some updates on README files and will be helping in getting started guide on the example basic-app made by  @silasdavis .","username":"puneet","ts":"2018-09-08T05:47:26.227Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=wEeiQD99tuN4Ar3br","url":"https://chat.hyperledger.org/channel/burrow?msg=wEeiQD99tuN4Ar3br","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has left the channel.","username":"Thaddeus","ts":"2018-09-08T17:30:54.288Z","type":"ul"}
{"msg":"@puneet  how so? I just wrote that. though its awkward it should be accurate. it Admittedly references the protobuf files for descriptions of all the objects.","username":"dennismckinnon","ts":"2018-09-08T22:28:16.763Z"}
{"msg":"Has joined the channel.","username":"soccerhaotian","ts":"2018-09-09T02:16:32.672Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=58oSoj4edXjCe9S6a) @dennismckinnon I mean , can you tell me what I'm doing wrong ? how to run that example that you wrote :) I want to just run your code https://pastebin.com/GQWCq6Vf","username":"puneet","ts":"2018-09-09T10:57:26.081Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=58oSoj4edXjCe9S6a","url":"https://chat.hyperledger.org/channel/burrow?msg=58oSoj4edXjCe9S6a","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=58oSoj4edXjCe9S6a) @dennismckinnon I mean , can you tell me what I'm doing wrong ? how to run that example that you wrote :) https://pastebin.com/GQWCq6Vf","username":"puneet","ts":"2018-09-09T10:57:26.081Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=58oSoj4edXjCe9S6a","url":"https://chat.hyperledger.org/channel/burrow?msg=58oSoj4edXjCe9S6a","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"lisuo","ts":"2018-09-10T05:57:58.662Z","type":"uj"}
{"msg":"your payload needs to be an object of the form\n```\nvar setPayload = {\n    Input: {\n          Address: Buffer.from(account,'hex'),\n          Amount: 50000\n    },\n    Name:\"HELLO\",\n    Data:\"WORLD\",\n    Fee:5000\n}\n```","username":"dennismckinnon","ts":"2018-09-10T13:38:08.411Z"}
{"msg":"see here where I do it for wrapping the low level interface https://github.com/monax/bosmarmot/blob/develop/burrow.js/lib/namereg.js","username":"dennismckinnon","ts":"2018-09-10T13:39:07.179Z"}
{"msg":"you can access this function as burrow.namreg.set()","username":"dennismckinnon","ts":"2018-09-10T13:39:38.761Z"}
{"msg":"so you don't have to construct the payload yourself.","username":"dennismckinnon","ts":"2018-09-10T13:40:00.775Z"}
{"msg":"@puneet  ^","username":"dennismckinnon","ts":"2018-09-10T13:40:17.002Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ExhFE65Hfzbommopu) @dennismckinnon should we update the code here https://github.com/monax/bosmarmot/blob/develop/burrow.js/README.md ?\nhere it look like this : \nvar setPayload = {\n\tInput: Buffer.from(account, 'hex'),\n\tName: \"DOUG\",\n\tData: \"Marmot\",\n\tFee: 5000\n}","username":"puneet","ts":"2018-09-11T08:25:30.785Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ExhFE65Hfzbommopu","url":"https://chat.hyperledger.org/channel/burrow?msg=ExhFE65Hfzbommopu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ExhFE65Hfzbommopu) @dennismckinnon should we update the code here https://github.com/monax/bosmarmot/blob/develop/burrow.js/README.md ?\nhere it is looking like this : \nvar setPayload = {\n\tInput: Buffer.from(account, 'hex'),\n\tName: \"DOUG\",\n\tData: \"Marmot\",\n\tFee: 5000\n}","username":"puneet","ts":"2018-09-11T08:25:30.785Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ExhFE65Hfzbommopu","url":"https://chat.hyperledger.org/channel/burrow?msg=ExhFE65Hfzbommopu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"oh yes","username":"dennismckinnon","ts":"2018-09-11T15:44:46.187Z"}
{"msg":"so sorry thats a good catch","username":"dennismckinnon","ts":"2018-09-11T15:44:54.977Z"}
{"msg":"Has joined the channel.","username":"kid101","ts":"2018-09-11T19:51:08.366Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=uXRr3HcN3LtzyEQ4k) @dennismckinnon this is what  I'm trying to convey :sweat_smile: no issues, I have made the pull request :thumbsup:","username":"puneet","ts":"2018-09-12T06:11:23.461Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=uXRr3HcN3LtzyEQ4k","url":"https://chat.hyperledger.org/channel/burrow?msg=uXRr3HcN3LtzyEQ4k","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=uXRr3HcN3LtzyEQ4k) @dennismckinnon this is what  I'm trying to convey :sweat_smile: no issues, I have made the pull request :thumbsup: https://github.com/monax/bosmarmot/pull/135","username":"puneet","ts":"2018-09-12T06:11:23.461Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=uXRr3HcN3LtzyEQ4k","url":"https://chat.hyperledger.org/channel/burrow?msg=uXRr3HcN3LtzyEQ4k","remote":true,"fileId":null,"fileName":null}]}
{"msg":"thanks! much appreciated","username":"dennismckinnon","ts":"2018-09-12T19:42:33.910Z"}
{"msg":"Has joined the channel.","username":"arindammondal91","ts":"2018-09-15T09:09:26.432Z","type":"uj"}
{"msg":"Has joined the channel.","username":"anil.kandi","ts":"2018-09-17T18:53:05.490Z","type":"uj"}
{"msg":"Has left the channel.","username":"adamludvik","ts":"2018-09-18T15:09:47.489Z","type":"ul"}
{"msg":"Has joined the channel.","username":"gmkprabhu1983","ts":"2018-09-19T21:10:04.294Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rgunn","ts":"2018-09-20T03:59:01.875Z","type":"uj"}
{"msg":"Has joined the channel.","username":"srikanthy 2","ts":"2018-09-20T06:35:36.369Z","type":"uj"}
{"msg":"dumb question .. can burrow be used to develop automated excrow service? ","username":"srikanthy 2","ts":"2018-09-20T06:36:22.684Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=TMm3uv8jmiv6QpZvC) @srikanthy 2 why not ?","username":"puneet","ts":"2018-09-20T07:33:34.387Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=TMm3uv8jmiv6QpZvC","url":"https://chat.hyperledger.org/channel/burrow?msg=TMm3uv8jmiv6QpZvC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"quick question. Does anyone know the latest supported solidity version for Burrow?","username":"Luker501","ts":"2018-09-20T17:02:46.844Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=nNdH7FXqbn4Hp3zPX) @Luker501 It's base on the evm spec, The Solidity  should not matter","username":"pouladzade","ts":"2018-09-21T09:04:09.346Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=nNdH7FXqbn4Hp3zPX","url":"https://chat.hyperledger.org/channel/burrow?msg=nNdH7FXqbn4Hp3zPX","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=nNdH7FXqbn4Hp3zPX) @Luker501 It's base on the evm spec, The Solidity version  should not matter","username":"pouladzade","ts":"2018-09-21T09:04:09.346Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=nNdH7FXqbn4Hp3zPX","url":"https://chat.hyperledger.org/channel/burrow?msg=nNdH7FXqbn4Hp3zPX","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@pouladzade is exactly right @Luker501 . However we currently run our integration test suite using against solc v0.25 ","username":"compleatang","ts":"2018-09-21T17:42:40.964Z"}
{"msg":"@here burrow v0.22 is released. It's a smaller release with some bug fixes, a routine Tendermint upgrade (to v0.24) and niceties around `burrow deploy`. Next release will include some big steps forward in terms of network governance primitives and also token economic primitives.","username":"compleatang","ts":"2018-09-21T17:44:18.168Z"}
{"msg":"Has joined the channel.","username":"greg2git","ts":"2018-09-24T15:30:32.149Z","type":"uj"}
{"msg":"congrats!","username":"cbf","ts":"2018-09-24T17:55:41.293Z"}
{"msg":"Has joined the channel.","username":"PrakharShukla","ts":"2018-09-24T19:16:27.090Z","type":"uj"}
{"msg":"Has left the channel.","username":"jon_s","ts":"2018-09-25T09:08:50.317Z","type":"ul"}
{"msg":"congrats!","username":"ThangDC","ts":"2018-09-25T09:39:02.744Z"}
{"msg":"@here this isn't strictly burrow related, but certainly it is tangentially related to both burrow and a number of blockchains for business use cases. We'd like to let everyone know that our Blackstone project is now released. As part of this project we have a fully-featured business process execution engine and also a high level API which can injest BPMN models and translate those into process graphs in solidity which can be executed by the engine. If you are doing *anything* related to shared processes on a blockchain it's definitely worth checking out. Of course, because it is EVM code it'll also run on #sawtooth-seth and #fabric-evm over time (will need some wrapping to utilize their RPCs rather than burrows but the code itself will run fine). We hope it can be useful to everyone! https://github.com/agreements-network/blackstone","username":"compleatang","ts":"2018-09-25T13:34:56.470Z"}
{"msg":"Wow that looks really cool @compleatang !","username":"Dan","ts":"2018-09-25T17:59:03.628Z"}
{"msg":"(totally unimportant but was blackstone a WWII allusion?)","username":"Dan","ts":"2018-09-25T17:59:17.466Z"}
{"msg":"Haha. No it's an old judge is why we chose it, but there are tentacles to the name! Ask Silas for a wee demo in Montreal! :-) It's been a lot of work getting here. ","username":"compleatang","ts":"2018-09-25T19:45:03.963Z"}
{"msg":"cool. yes I will harangue @silasdavis in Montreal :)","username":"Dan","ts":"2018-09-25T20:13:59.425Z"}
{"msg":"Has joined the channel.","username":"tglaeser","ts":"2018-09-26T13:24:59.716Z","type":"uj"}
{"msg":"For version 0.11.x I found the API specified at https://github.com/monax/burrow/blob/develop/docs/specs/api.md ... is this still current? I cannot find anything equivalent at https://github.com/hyperledger/burrow for the latest development branch. Any pointers are highly appreciated. Thanks.","username":"tglaeser","ts":"2018-09-26T13:32:14.147Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=uPkLChomvv977984g) @compleatang Why not providing the web3 API as a Protobuf mapping?","username":"tglaeser","ts":"2018-09-26T13:43:35.667Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=uPkLChomvv977984g","url":"https://chat.hyperledger.org/channel/burrow?msg=uPkLChomvv977984g","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@tglaeser regarding web3, at Monax we've never used it. We're certainly open to community contributions but it's never been high enough priority for us to spend the time given all the other things to build. We are working on providing a burrow web3 provider which would allow web3 tooling that use the provider scheme to integrate with burrow over our GRPC framework rather than the web3 RPC schema. ","username":"compleatang","ts":"2018-09-27T13:06:36.823Z"}
{"msg":"That work isn't at the top of our stack right now, but it's fairly high in the stack. ","username":"compleatang","ts":"2018-09-27T13:06:57.140Z"}
{"msg":"best documentation for the GRPC and Info port is via godocs -> https://godoc.org/github.com/hyperledger/burrow/rpc","username":"compleatang","ts":"2018-09-27T13:08:15.797Z"}
{"msg":"Has joined the channel.","username":"sohamdighe14","ts":"2018-09-27T14:59:49.481Z","type":"uj"}
{"msg":"Has joined the channel.","username":"benjamincburns","ts":"2018-09-27T18:58:55.742Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JoseEdo","ts":"2018-09-27T22:12:04.749Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tarun.sharma","ts":"2018-09-27T23:08:19.714Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cheehk2015","ts":"2018-09-29T03:30:54.618Z","type":"uj"}
{"msg":"Hi, I intended to port my dapps to burrow but I struggling to figure out how to configure my own private peer nodes. Is there any tutorial or docs to guide me? Thanks","username":"cheehk2015","ts":"2018-09-29T03:35:17.033Z"}
{"msg":"Hi, I intended to port my solidity dapps to burrow but I am struggling to figure out how to configure more than one private peer nodes. Is there any tutorial or docs to guide me? Thanks","username":"cheehk2015","ts":"2018-09-29T03:35:17.033Z"}
{"msg":"Has joined the channel.","username":"forrunner","ts":"2018-09-29T04:34:57.011Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mcjl","ts":"2018-09-29T05:59:01.170Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vishal21pandita","ts":"2018-09-29T07:08:42.703Z","type":"uj"}
{"msg":"Has joined the channel.","username":"phymbert","ts":"2018-09-29T08:39:02.424Z","type":"uj"}
{"msg":"Hello Burrow contributors,\nFirst thank you for your great job on this project. I see issue 669 is flagged as help wanted, I coded a short implementation of abci.Query support for peer filtering, before I start to add integration test and submit PR. Is this contribution welcomed to burrow core?\nhttps://github.com/hyperledger/burrow/compare/develop...phymbert:authorised-only-node-sync","username":"phymbert","ts":"2018-09-29T09:23:18.325Z"}
{"msg":"Has joined the channel.","username":"phaniac","ts":"2018-10-01T18:29:59.598Z","type":"uj"}
{"msg":"Has joined the channel.","username":"handaanmol","ts":"2018-10-02T05:56:36.640Z","type":"uj"}
{"msg":"Thanks @compleatang - I believe that's along the lines I was thinking ... The _burrow web3 provider_ essentially exposing the web3 API as GRPC, which itself is an extension to the Protobuf core; would that be a correct description? What is the timeline? _Fairly high_ sounds almost like there will always be something with higher priority.","username":"tglaeser","ts":"2018-10-02T21:23:46.025Z"}
{"msg":"I can't give a timeline right now. At Monax we don't use web3 so we don't really have a selfish need to put resources behind the effort just now given other priorities. Obviously community help is always appreciated. ","username":"compleatang","ts":"2018-10-03T01:50:32.943Z"}
{"msg":"Has joined the channel.","username":"starkriedesel","ts":"2018-10-03T17:30:20.277Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nsabharwal","ts":"2018-10-04T20:33:02.646Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yoheiueda","ts":"2018-10-05T09:02:19.708Z","type":"uj"}
{"msg":"Has joined the channel.","username":"darkblue-b","ts":"2018-10-05T17:42:44.010Z","type":"uj"}
{"msg":"hi - my first day here.. I am about to jump into an Ethereum event, a big one.. I have been building and running Ethereum toolchain on Linux for the last week or so.. I just noticed this today .. ","username":"darkblue-b","ts":"2018-10-05T17:43:16.832Z"}
{"msg":".. not a GO-lang'r .. I noticed in the GETH Ether client, there is an option to build a binary that does not require the GOPATH and all that.. I am open to experimentin, obviously this is a \"fast pass\" but.. here to learn","username":"darkblue-b","ts":"2018-10-05T18:18:20.991Z"}
{"msg":"solidity solc here is 0425 .. new to me.. ","username":"darkblue-b","ts":"2018-10-05T18:24:58.347Z"}
{"msg":"Has joined the channel.","username":"JWilson1","ts":"2018-10-06T14:09:32.434Z","type":"uj"}
{"msg":"Darkblue this room is for discussing Hyperledger Burrow. Am sure there are multiple venues to discuss operating GEth. But nonetheless welcome! ","username":"compleatang","ts":"2018-10-07T08:22:19.457Z"}
{"msg":"Has joined the channel.","username":"carla","ts":"2018-10-07T11:41:30.050Z","type":"uj"}
{"msg":"","username":"carla","ts":"2018-10-07T11:42:22.707Z","attachments":[{"type":"file","title":"Capture du 2018-10-07 12-22-18.png","title_link":"/file-upload/jnxQeF6qRJ7kQmLsF/Capture%20du%202018-10-07%2012-22-18.png","image_url":"/file-upload/jnxQeF6qRJ7kQmLsF/Capture%20du%202018-10-07%2012-22-18.png","image_type":"image/png","image_size":12918,"url":"/file-upload/jnxQeF6qRJ7kQmLsF/Capture%20du%202018-10-07%2012-22-18.png","remote":false,"fileId":"jnxQeF6qRJ7kQmLsF","fileName":"Capture du 2018-10-07 12-22-18.png"}]}
{"msg":"Has joined the channel.","username":"Nareshtej","ts":"2018-10-08T05:22:57.937Z","type":"uj"}
{"msg":"hi @carla that looks like you're using seth, if so please visit #sawtooth-seth as we'd need a *lot* more context about what you're trying to do to help in this room. ","username":"compleatang","ts":"2018-10-08T10:41:36.951Z"}
{"msg":"/ join #sawtooth-seth ","username":"forrunner","ts":"2018-10-09T12:32:16.335Z"}
{"msg":"nm","username":"forrunner","ts":"2018-10-09T12:33:08.685Z"}
{"msg":"@compleatang  ok thank you.","username":"carla","ts":"2018-10-09T13:50:10.371Z"}
{"msg":"Has joined the channel.","username":"JyotiGoda","ts":"2018-10-10T17:48:35.334Z","type":"uj"}
{"msg":"Hello, I am a newbie to Hyperledger Burrow. I am trying to compile and run the basic-app but I get compile time errors. I am on Ubuntu 16.04. I tried initially as a regular user but ended up with permissions issued. Now I am trying with a root login. make start-chain works fine. However, when I try to run make start-app, I get a compile error saying ","username":"JyotiGoda","ts":"2018-10-10T17:51:23.553Z"}
{"msg":"Hello, I am a newbie to Hyperledger Burrow. I am trying to compile and run the basic-app but I get compile time errors. I am on Ubuntu 16.04. I tried initially as a regular user but ended up with permissions issues. Now I am trying with a root login. $ make start-chain works fine. However, when I try to run make start-app, I get a compile error saying ","username":"JyotiGoda","ts":"2018-10-10T17:51:23.553Z"}
{"msg":"Error compiling contracts: Compilers error: \nexit status 1\nmakefile:58: recipe for target 'deploy.output.json' failed\nmake: *** [deploy.output.json] Error 1\n","username":"JyotiGoda","ts":"2018-10-10T17:51:59.281Z"}
{"msg":"Can anybody help tell me what could be the issue?","username":"JyotiGoda","ts":"2018-10-10T17:52:22.610Z"}
{"msg":"Has joined the channel.","username":"mslavitch","ts":"2018-10-10T20:10:32.975Z","type":"uj"}
{"msg":"Has joined the channel.","username":"totolouis","ts":"2018-10-10T22:15:25.753Z","type":"uj"}
{"msg":"Hello @JyotiGoda , are you sure this is about Burrow ? I'm also new to Burrow, but I see no sign of a 'basic-app' (if there is, please link it :D)","username":"totolouis","ts":"2018-10-10T22:21:02.414Z"}
{"msg":"Hello @JyotiGoda , are you sure this is about Burrow ? I'm also new to Burrow, but I see no sign of a 'basic-app'.","username":"totolouis","ts":"2018-10-10T22:21:02.414Z"}
{"msg":"I also have a question, where can we find a list of available commands in yaml files ? If you look at the test app23 (https://github.com/hyperledger/burrow/tree/develop/tests/jobs_fixtures/app23-save_tx_hash_of_call), there is this save `save: tx` at the `setStorage` call. So, how do you know that the tx value will hash the data ?\n\nThanks a lot.","username":"totolouis","ts":"2018-10-10T22:26:23.595Z"}
{"msg":"I also have a question, where can we find a list of available commands in yaml files ? If you look at the test app23 (https://github.com/hyperledger/burrow/tree/develop/tests/jobs_fixtures/app23-save_tx_hash_of_call), there is this save `save: tx` at the `setStorage` call. So, how do you know that the `tx` value *can* hash the data, is there a documentation somewhere ?\n\nThanks a lot.","username":"totolouis","ts":"2018-10-10T22:26:23.595Z"}
{"msg":"@totolouis yes, this is about Burrow...more specifically about using burrow.js to develop a node.js application which can communicate with a solidity contract. The basic-app example can be found at https://github.com/monax/bosmarmot/tree/develop/example/basic-app","username":"JyotiGoda","ts":"2018-10-11T02:23:21.568Z"}
{"msg":"@JyotiGoda it looks like burrow deploy had trouble running the solidity compiler. Do you have solc in your path and is a recent version, and executable? I would recommend at least solc 0.4.24","username":"seanyoung","ts":"2018-10-11T10:39:48.896Z"}
{"msg":"@totolouis the deploy yaml is deserialised into these structures, there is some documentation in the struct definitions: https://github.com/hyperledger/burrow/blob/develop/deploy/def/jobs.go","username":"seanyoung","ts":"2018-10-11T10:43:12.793Z"}
{"msg":"@totolouis documentation is on godocs; specifically for what you're looking for it's here -> https://godoc.org/github.com/hyperledger/burrow/deploy/def#Call","username":"compleatang","ts":"2018-10-11T12:47:24.053Z"}
{"msg":"or, as Sean noted in the code itself.","username":"compleatang","ts":"2018-10-11T12:47:55.776Z"}
{"msg":"@compleatang @seanyoung Thanks a lot !! ","username":"totolouis","ts":"2018-10-11T17:27:55.430Z"}
{"msg":"@seanyoung Thanks you for your reply. I have checked the following:","username":"JyotiGoda","ts":"2018-10-11T17:52:53.527Z"}
{"msg":"@seanyoung Thanks you for your reply. I have checked the following: 1. The global $PATH variable includes /usr/local/lib. The solidity compiler (solcjs) resides in /usr/local/lib/node_modules/solc/solcjs I also have a link from /usr/local/bin called solc which links to the solcjs file. The link was initially not executable, I have tried to make it executable and retried but faced the same issue. 2. The solidity version I am using is solc 0.4.24   \n\nI am still facing the same issue and make start_app throws up the same error\n","username":"JyotiGoda","ts":"2018-10-11T17:52:53.527Z"}
{"msg":"@seanyoung Thank you for your reply. I have checked the following: 1. The global $PATH variable includes /usr/local/lib. The solidity compiler (solcjs) resides in /usr/local/lib/node_modules/solc/solcjs I also have a link from /usr/local/bin called solc which links to the solcjs file. The link was initially not executable, I have tried to make it executable and retried but faced the same issue. 2. The solidity version I am using is solc 0.4.24   \n\nI am still facing the same issue and make start_app throws up the same error\n","username":"JyotiGoda","ts":"2018-10-11T17:52:53.527Z"}
{"msg":"@seanyoung Thank you for your reply. I have checked the following: 1. The global $PATH variable includes /usr/local/lib. The solidity compiler (solcjs) resides in /usr/local/lib/node_modules/solc/solcjs I also have a link from /usr/local/bin called solc which links to the solcjs file. The link was initially not executable, I have tried to make it executable and retried but faced the same issue. 2. The solidity version I am using is solc 0.4.24   \n\nI am still facing the same issue and make start_app throws up the same error\nAlso, I am able to separately compile solidity files and manually deploy them on a separate burrow blockchain from a separate subfolder in the same parent folder. I am also able to use truffle to compile .sol files to deploy on private ethereum chains.\n","username":"JyotiGoda","ts":"2018-10-11T17:52:53.527Z"}
{"msg":"@JyotiGoda Maybe it has something to do with some paths in the makefile. Did your paths are the same as the file ?","username":"totolouis","ts":"2018-10-11T18:53:23.704Z"}
{"msg":"@totolouis I have given up trying to get the example app to work and simply deployed my contract onto the burrow blockchain manually. I am now in the process of setting up the javascript app which will communicate with the chain. I also understand that Burrow has an API interface that exposes REST endpoints to interact with the blockchain network and the application state through broadcasting transactions, or querying the current state of the application. Is there any documentation available for this interface?","username":"JyotiGoda","ts":"2018-10-11T19:59:58.542Z"}
{"msg":"@JyotiGoda I assume you are talking about burrow.js. You can find this *library* right there : https://www.npmjs.com/package/@monax/burrow","username":"totolouis","ts":"2018-10-11T20:43:32.076Z"}
{"msg":"@JyotiGoda I assume that you are talking about burrow.js. You can find this *library* right there : https://www.npmjs.com/package/@monax/burrow","username":"totolouis","ts":"2018-10-11T20:43:32.076Z"}
{"msg":"@JyotiGoda I assume that you are talking about burrow.js. You can find this *library* right there : https://github.com/monax/bosmarmot/tree/develop/burrow.js","username":"totolouis","ts":"2018-10-11T20:43:32.076Z"}
{"msg":"@JyotiGoda I assume that you are talking about burrow.js. You can find it right there : https://github.com/monax/bosmarmot/tree/develop/burrow.js","username":"totolouis","ts":"2018-10-11T20:43:32.076Z"}
{"msg":"@JyotiGoda solcjs won't work. Download https://github.com/ethereum/solidity/releases/download/v0.4.25/solc-static-linux and rename it solc, make it executable and ensure it is in the path","username":"seanyoung","ts":"2018-10-12T09:14:39.153Z"}
{"msg":"@JyotiGoda all documentation is available on godocs. start here for info server's ports -> https://godoc.org/github.com/hyperledger/burrow/rpc/rpcinfo#pkg-constants ","username":"compleatang","ts":"2018-10-12T10:14:14.825Z"}
{"msg":"hi - learning and discovering here.. I see Burrow uses the Tendermint consensus protocol (?) and clicking on two links brings me to explorecosmos.network .. How can I find out about the relationship between Cosmos network, Tendermint, Burrow and Apache Hyperledger ? ","username":"darkblue-b","ts":"2018-10-12T16:16:31.361Z"}
{"msg":"hm - I see Sunny Aggarwal => Researcher and Core Dev at Tendermint/Cosmos focusing on Proof of Stake and Blockchain Interoperability","username":"darkblue-b","ts":"2018-10-12T16:42:34.190Z"}
{"msg":"Has joined the channel.","username":"ahern077","ts":"2018-10-12T17:04:00.017Z","type":"uj"}
{"msg":"there isn't much linkage other than Cosmos is powered by a Tendermint consensus engine the same as Burrow. ","username":"compleatang","ts":"2018-10-12T22:43:11.880Z"}
{"msg":"Me and my team are considering conducting a research on a Hyperledger platform. If there is any specific area for research which can add value to the Burrow project, please let me know.","username":"tahaf10","ts":"2018-10-13T20:14:59.593Z"}
{"msg":"@tahaf10 what kind of research ideas are you looking for? research into current functionality, future functionality, abstract research? ","username":"compleatang","ts":"2018-10-15T10:21:40.555Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=cea6ME4zqpiRFB4LD) @compleatang Current Functionality. Performance Optimization. ","username":"tahaf10","ts":"2018-10-15T10:22:52.249Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=cea6ME4zqpiRFB4LD","url":"https://chat.hyperledger.org/channel/burrow?msg=cea6ME4zqpiRFB4LD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Cool. A potential project would be to understand the performance implications for various validator set configurations based on a given solidity contract. So for a validator set of 1 node, 4 nodes, 7 nodes, 10 nodes, etc. what is the through put allocation. Have you synced up with the performance and scalability working group (they have a channel in here somewhere)..?","username":"compleatang","ts":"2018-10-15T10:53:11.433Z"}
{"msg":"Right now I'm exploring the possibilities. All of my previous work has been on Fabric so I'll have to study Burrow in detail (Which I haven't yet) This is why I'm asking project leaders if they have any specific areas in mind (preferably related to performance optimization) which can add value to their projects. I've joined the performance and scalability work group but not much activity in there","username":"tahaf10","ts":"2018-10-15T11:04:39.589Z"}
{"msg":"Hi,  just wondering what is the purpose of gas in Hyperledger Burrow. It has any funcionality except from providing infinite loops? What happen If I spent all my gas and I need more to go on executing smart contract's functions? Could validators give gas to other accounts? When Validators \"mine\", they earn the term of gas called \"Amount\" or \"Power\"? Thanks in advance","username":"mmartinez.blocknitive","ts":"2018-10-15T13:08:32.950Z"}
{"msg":"infinite loops mainly. gas costs ZERO tokens in the burrow model, so callee's can give as much gas as needed to drive a contractual sequence. ","username":"compleatang","ts":"2018-10-15T15:24:18.675Z"}
{"msg":"And what happens if account's gas is equal to zero? How could an account earn some gas to perform txs?","username":"mmartinez.blocknitive","ts":"2018-10-15T15:57:25.964Z"}
{"msg":"the question conflates tokens and gas. in the public ethereum model one uses ETH (tokens) to purchase gas at a particular gas price. So when sending transactions one needs to have tokens sufficient to pay for gas at the rate of `gasAmount*gasPrice`. in the burrow model `gasPrice` is `0`. to the concept of an account having or not having gas doesn't matter. if the account has the permission to call a contract then they set how much gas they want to use in our communist :) system and send the transaction. ","username":"compleatang","ts":"2018-10-15T16:48:03.585Z"}
{"msg":"the question conflates tokens and gas. in the public ethereum model one uses ETH (tokens) to purchase gas at a particular gas price. So when sending transactions one needs to have tokens sufficient to pay for gas at the rate of `gasAmount*gasPrice`. in the burrow model `gasPrice` is `0`. so the concept of an account having or not having gas doesn't matter. if the account has the permission to call a contract then they set how much gas they want to use in our communist :) system and send the transaction. ","username":"compleatang","ts":"2018-10-15T16:48:03.585Z"}
{"msg":"haha I understand the communism style it is based on, but why we should set an \"amount\"pastebin","username":"mmartinez.blocknitive","ts":"2018-10-15T17:25:52.971Z"}
{"msg":"haha I understand the communism style it is based on, but why we should set an \"amount\" (native type) in genesis-spec.json ?","username":"mmartinez.blocknitive","ts":"2018-10-15T17:25:52.971Z"}
{"msg":"contracts can still use native token value in the normal ethereum way, it's just no value is subtracted based on the length of the computation. You can use native token to represent value or a bond for incentivisation. ","username":"silasdavis","ts":"2018-10-15T18:29:44.780Z"}
{"msg":"Has joined the channel.","username":"manuvarghese","ts":"2018-10-15T23:05:22.820Z","type":"uj"}
{"msg":"Ok, thanks for the info @silasdavis ","username":"mmartinez.blocknitive","ts":"2018-10-16T09:50:32.232Z"}
{"msg":"I am having some problems with the permissions. I am trying to set an account which can read  (call constant functions) and cannot write (make txs, change a var for example). What permissions this account should have? I set \"name\" and \"hasRole\" but doesnt work. It says I should add \"call\" permission, but If I do it, this account will be able to write. any idea?","username":"mmartinez.blocknitive","ts":"2018-10-16T10:52:22.869Z"}
{"msg":"this is not a level of granularity currently provided by permissions system","username":"silasdavis","ts":"2018-10-16T11:55:42.965Z"}
{"msg":"either you can `CALL` or not","username":"silasdavis","ts":"2018-10-16T11:55:53.809Z"}
{"msg":"however, we are just in the process of implementing `STATICCALL` and the way we are doing it is by providing some state interfaces that provide a firewall against writes","username":"silasdavis","ts":"2018-10-16T11:56:25.933Z"}
{"msg":"so this actually an interesting permission/mode","username":"silasdavis","ts":"2018-10-16T11:56:55.143Z"}
{"msg":"we currently have `CallTxSim` which performs a simulated call that will not make any writes","username":"silasdavis","ts":"2018-10-16T11:57:36.842Z"}
{"msg":"aha, ok that feature could be interesting","username":"mmartinez.blocknitive","ts":"2018-10-16T11:58:30.815Z"}
{"msg":"with that call you could see what would happen with an account that _was_ allowed to call code","username":"silasdavis","ts":"2018-10-16T11:59:08.050Z"}
{"msg":"I am trying to set multiple accounts with differente permissions, like can deploy or not, can write or not, can read or not","username":"mmartinez.blocknitive","ts":"2018-10-16T11:59:10.575Z"}
{"msg":"so the callee would need to know the address of some account that has suitable permissions","username":"silasdavis","ts":"2018-10-16T11:59:38.204Z"}
{"msg":"The way to think about the baked-in permissions are that they are firm backstop, like unix-style permissions, you often need finer grained permissions and you can use various solidity patterns to achieve that ","username":"silasdavis","ts":"2018-10-16T12:00:42.083Z"}
{"msg":"which can be more like access control list, role-based access controls, something like LDAP or PAM","username":"silasdavis","ts":"2018-10-16T12:01:25.929Z"}
{"msg":"You can also use the roles system to enforce system wide role-based permissions","username":"silasdavis","ts":"2018-10-16T12:01:56.446Z"}
{"msg":"since your smart contracts can use the hasRole and addRole snatives ","username":"silasdavis","ts":"2018-10-16T12:02:29.923Z"}
{"msg":"ensuring a particular transaction makes not writes is an interesting idea though. I'm not sure it quite fits as a permission. I don't think we have generally wanted to prevent an account from doing any writes anywhere","username":"silasdavis","ts":"2018-10-16T12:03:57.478Z"}
{"msg":"at the smart contract level by the way, STATICCALL is probably want you want","username":"silasdavis","ts":"2018-10-16T12:04:07.489Z"}
{"msg":"which is set by specifying `pure` in solidity","username":"silasdavis","ts":"2018-10-16T12:04:25.498Z"}
{"msg":"which is invoked on calls by specifying `pure` in solidity","username":"silasdavis","ts":"2018-10-16T12:04:25.498Z"}
{"msg":"if you contract code attempts a write then that will be an error","username":"silasdavis","ts":"2018-10-16T12:05:02.019Z"}
{"msg":"well, I think that solidity patterns + burrow permissions can be a great combination","username":"mmartinez.blocknitive","ts":"2018-10-16T12:08:31.830Z"}
{"msg":"nevertheless, I dont understand why you think a permission for deploy a contract is interesting but not a read permission.","username":"mmartinez.blocknitive","ts":"2018-10-16T12:09:42.012Z"}
{"msg":"In my opinion, a permissioned blockchain would include at least these three permissions.","username":"mmartinez.blocknitive","ts":"2018-10-16T12:11:11.204Z"}
{"msg":"usually participants need to be able to write to at least some contracts - such as their own proxy or wallet contracts. Also if you have access to a node you do in essence already have 'read' access to account to storage, and as I've said through CallTxSim. I suppose what this doesn't serve is a contract behaving differently by considering the reader in the case of a 'pure function' (solidity pure functions aren't really pure IMV because they depend on contract state even though they can't writ it).","username":"silasdavis","ts":"2018-10-16T12:18:12.742Z"}
{"msg":"The way to implement this would be to add a `WRITE` permission","username":"silasdavis","ts":"2018-10-16T12:18:30.838Z"}
{"msg":"which would have some overlap with `CREATE`, depending on how you look at it. You may want to allow 'read-only' creation I suppose.","username":"silasdavis","ts":"2018-10-16T12:19:24.820Z"}
{"msg":"I'd love to see a BIP on it: https://github.com/hyperledger/burrow/blob/develop/docs/BIPS/bip-X_template.md","username":"silasdavis","ts":"2018-10-16T12:19:59.721Z"}
{"msg":"unless input accounts have `WRITE` then we can run the VM with a read-only state and event sink","username":"silasdavis","ts":"2018-10-16T12:20:52.905Z"}
{"msg":"and it would be an error for them to call any contracts that modify state","username":"silasdavis","ts":"2018-10-16T12:21:39.343Z"}
{"msg":"the idea being that `READ` is just an implicit permission - as I say the other RPCs treat mere access as implicit grant of read","username":"silasdavis","ts":"2018-10-16T12:22:24.663Z"}
{"msg":"If you don't have time/inclination for a BIP then an issue would also serve as a placeholder for someone who may want to work on it to pick it up","username":"silasdavis","ts":"2018-10-16T12:23:29.482Z"}
{"msg":"I will create a BIP or Issue for sure. Nevertheless I feel like I am missing some info of the permission layer of the EVM...","username":"mmartinez.blocknitive","ts":"2018-10-16T12:25:44.504Z"}
{"msg":"btw, As far as I know, hasRole addRole and snatives, are used to change the account's permissions  while burrow is running, am i right?","username":"mmartinez.blocknitive","ts":"2018-10-16T12:26:48.754Z"}
{"msg":"There is some commentary here: https://github.com/hyperledger/burrow/blob/develop/permission/perm_flag.go","username":"silasdavis","ts":"2018-10-16T12:27:00.666Z"}
{"msg":"we could do with something fuller under docs/","username":"silasdavis","ts":"2018-10-16T12:27:11.033Z"}
{"msg":"those one just set roles - roles are just a bag of words","username":"silasdavis","ts":"2018-10-16T12:27:33.693Z"}
{"msg":"the permission flags themselves are set with `setBase`, `hasBase` etc:  https://github.com/hyperledger/burrow/blob/develop/permission/perm_flag.go#L40-L46","username":"silasdavis","ts":"2018-10-16T12:28:08.868Z"}
{"msg":"again if you have any appetite for helping putting together some markdown docs on permission I'd be happy to work with you on that and it would be appreciated","username":"silasdavis","ts":"2018-10-16T12:28:57.710Z"}
{"msg":" I will write a light doc about permissioning and feel free to correct it please :D","username":"mmartinez.blocknitive","ts":"2018-10-16T12:30:11.973Z"}
{"msg":"sure, always easier to correct than write from scratch. Feel free to leave a 'fill-in-the-blanks' type comment if you feel like it's missing","username":"silasdavis","ts":"2018-10-16T12:30:58.470Z"}
{"msg":"just another thing, the permission settings are uniform for all the smart contracts. are you planning to make it more flexible?","username":"mmartinez.blocknitive","ts":"2018-10-16T12:31:01.028Z"}
{"msg":"writing docs is question of time, but also being too close to the codebase/idiosyncrasies means I'm often not the right person to do some of them ","username":"silasdavis","ts":"2018-10-16T12:31:33.934Z"}
{"msg":"permissions currently apply for input accounts - it would need some careful thought about implementing variable permissions based on callee contract","username":"silasdavis","ts":"2018-10-16T12:32:44.998Z"}
{"msg":"in particularly we'd want to know that dealing with it in contract land would not be better","username":"silasdavis","ts":"2018-10-16T12:33:03.165Z"}
{"msg":"one thing that I think we will need is a more powerful namereg that has the notion of namespaces and 'authenticated namespaces' - we might consider extending the permissioning model to include some notion of a 'domain of contracts'","username":"silasdavis","ts":"2018-10-16T12:34:00.509Z"}
{"msg":"but this is a bit vague now (and needs me to write a BIP)","username":"silasdavis","ts":"2018-10-16T12:34:22.433Z"}
{"msg":"aha, that's the key thing. Maybe dealing with it in contract land would be enough... but a 'domain of contracts' sounds pretty reasonable","username":"mmartinez.blocknitive","ts":"2018-10-16T12:36:31.982Z"}
{"msg":"this may be too waffley already - but something we need at Monax is the ability to have contract events that are authenticated - i.e. are emitted from a group or namespace of contracts. That is a kind of permissioning that may or may not be something in the direction of what you are thinking about. ","username":"silasdavis","ts":"2018-10-16T12:36:49.853Z"}
{"msg":"closely related, yep","username":"mmartinez.blocknitive","ts":"2018-10-16T12:38:02.530Z"}
{"msg":"Well, thanks for the conversation @silasdavis \nvery constructive :)","username":"mmartinez.blocknitive","ts":"2018-10-16T12:38:56.409Z"}
{"msg":"I will write some docs about permmisioning asap","username":"mmartinez.blocknitive","ts":"2018-10-16T12:39:26.441Z"}
{"msg":"thanks!","username":"silasdavis","ts":"2018-10-16T12:39:50.965Z"}
{"msg":"Has joined the channel.","username":"echohtp","ts":"2018-10-16T19:15:33.356Z","type":"uj"}
{"msg":"hi everyone! im having some issue building a burrow container from the Dockerfile. ","username":"echohtp","ts":"2018-10-16T19:33:47.961Z"}
{"msg":"its failing on step 6/29 RUN make build","username":"echohtp","ts":"2018-10-16T19:34:01.600Z"}
{"msg":"Step 6/29 : RUN make build\n ---> Running in d3855c12ef0f\nmake: *** No rule to make target 'build'.  Stop.\nThe command '/bin/sh -c make build' returned a non-zero code: 2\nStep 6/29 : RUN make build\n ---> Running in d3855c12ef0f\nmake: *** No rule to make target 'build'.  Stop.\nThe command '/bin/sh -c make build' returned a non-zero code: 2\nStep 6/29 : RUN make build\n ---> Running in d3855c12ef0f\nmake: *** No rule to make target 'build'.  Stop.\nThe command '/bin/sh -c make build' returned a non-zero code: 2\nStep 6/29 : RUN make build\n ---> Running in d3855c12ef0f\nmake: *** No rule to make target 'build'.  Stop.\nThe command '/bin/sh -c make build' returned a non-zero code: 2\nStep 6/29 : RUN make build\n ---> Running in d3855c12ef0f\nmake: *** No rule to make target 'build'.  Stop.\nThe command '/bin/sh -c make build' returned a non-zero code: 2\nStep 6/29 : RUN make build\n ---> Running in d3855c12ef0f\nmake: *** No rule to make target 'build'.  Stop.\nThe command '/bin/sh -c make build' returned a non-zero code: 2\n","username":"echohtp","ts":"2018-10-16T19:34:44.551Z"}
{"msg":"Step 6/29 : RUN make build\n ---> Running in d3855c12ef0f\nmake: *** No rule to make target 'build'.  Stop.\nThe command '/bin/sh -c make build' returned a non-zero code: 2\n","username":"echohtp","ts":"2018-10-16T19:34:44.551Z"}
{"msg":"pointing docker build @ the github repo worked better ¯\\_(ツ)_/¯","username":"echohtp","ts":"2018-10-16T19:37:44.110Z"}
{"msg":"mmmmm why is there nothing to pull down from docker hub? but a listed project ~_~","username":"echohtp","ts":"2018-10-16T21:15:48.846Z"}
{"msg":"mmmmm why is there nothing to pull down from docker hub? but a listed project ","username":"echohtp","ts":"2018-10-16T21:15:48.846Z"}
{"msg":"Has joined the channel.","username":"resreassure","ts":"2018-10-17T13:06:43.277Z","type":"uj"}
{"msg":"What branch are you building from?","username":"silasdavis","ts":"2018-10-17T15:18:07.398Z"}
{"msg":"images here:","username":"silasdavis","ts":"2018-10-17T15:18:10.857Z"}
{"msg":"@echohtp  images here: https://hub.docker.com/r/hyperledger/burrow/tags/","username":"silasdavis","ts":"2018-10-17T15:18:10.857Z"}
{"msg":"@echohtp ","username":"silasdavis","ts":"2018-10-17T15:18:13.356Z"}
{"msg":"@echohtp ","username":"silasdavis","ts":"2018-10-17T15:18:13.356Z"}
{"msg":"are you you building from the root of the burrow directory","username":"silasdavis","ts":"2018-10-17T15:20:13.520Z"}
{"msg":"are you you building from the root of the burrow directory? Would expect that to create the issue you are seeing","username":"silasdavis","ts":"2018-10-17T15:20:13.520Z"}
{"msg":"hi @silasdavis ! good day","username":"echohtp","ts":"2018-10-17T16:09:44.862Z"}
{"msg":"i think i was trying to build from the root","username":"echohtp","ts":"2018-10-17T16:11:22.971Z"}
{"msg":"and thank you for pointing me to that link, since theres no latest tag it doesnt pull","username":"echohtp","ts":"2018-10-17T16:11:37.021Z"}
{"msg":"many thanks, this is exciting ","username":"echohtp","ts":"2018-10-17T16:11:53.388Z"}
{"msg":"is there anyone using burrow for smart contract assessing/audits?","username":"echohtp","ts":"2018-10-17T16:12:23.358Z"}
{"msg":"its my burrow usecase so id love to talk to a few people about it","username":"echohtp","ts":"2018-10-17T16:12:48.937Z"}
{"msg":"ahhh yasssss the docker pull worked. thanks a bunch, this is exciting, now to figure out the rest of the launching process ^_^;;;;","username":"echohtp","ts":"2018-10-17T16:15:09.295Z"}
{"msg":"OKAY! i have another question/issue! ","username":"echohtp","ts":"2018-10-17T16:25:47.589Z"}
{"msg":"im attempting to start the full node, ive created the toml file","username":"echohtp","ts":"2018-10-17T16:26:05.209Z"}
{"msg":"EYYY!!! the internet is just a series of tubES! ","username":"echohtp","ts":"2018-10-17T16:29:29.087Z"}
{"msg":":( booo another issue! yay problem solving","username":"echohtp","ts":"2018-10-17T16:54:49.099Z"}
{"msg":"hows everyone elses wednesday's going","username":"echohtp","ts":"2018-10-17T16:54:53.231Z"}
{"msg":"okay, if anyone has a solution for this, im all ears","username":"echohtp","ts":"2018-10-17T17:03:09.272Z"}
{"msg":"echo@pinkerton:~$ nc -zv 127.0.0.1 10997\nConnection to 127.0.0.1 10997 port [tcp/*] succeeded!\necho@pinkerton:~$ docker run --rm -it  -v `pwd`:/home/ hyperledger/burrow:0.22.0 deploy --address 9CB31E778E03591AEF3E3A31CE0EA3E43302CF62 -f /home/test.yaml \nrpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = \"transport: Error while dialing dial tcp 127.0.0.1:10997: connect: connection refused\"\n","username":"echohtp","ts":"2018-10-17T17:03:20.282Z"}
{"msg":"*sigh* such a quiet chat","username":"echohtp","ts":"2018-10-17T20:26:53.716Z"}
{"msg":"Has joined the channel.","username":"karthikmohan91","ts":"2018-10-18T04:48:06.072Z","type":"uj"}
{"msg":"Has joined the channel.","username":"lay-z","ts":"2018-10-18T11:28:14.625Z","type":"uj"}
{"msg":"@echohtp when you run that deploy command within the docker container it does not have access to your host's localhost. when you run the nc command it is accessing localhost from the host domain rather than from within the container. so basically the container based 127.0.0.1 is completely different from host's 127.0.0.1. you'll need to utilize docker's link command to link to the running burrow chain and then burrow deploy's --chain-url flag to point it to that address. just do a quick google for \"docker links\" to learn more.... ","username":"compleatang","ts":"2018-10-19T10:44:02.121Z"}
{"msg":"if you are experimenting on your dev machine you might prefer to just run the native binary, which you can grab from: https://github.com/hyperledger/burrow/releases ","username":"silasdavis","ts":"2018-10-19T11:49:34.066Z"}
{"msg":"docker is good for reproducibility and deployment but it can be better for debugging to be closer to the metal","username":"silasdavis","ts":"2018-10-19T11:50:17.392Z"}
{"msg":"I've made an issue for us to start pushing the latest tag: https://github.com/hyperledger/burrow/issues/939","username":"silasdavis","ts":"2018-10-19T11:53:31.639Z"}
{"msg":"Once you've got the burrow binary","username":"silasdavis","ts":"2018-10-19T11:56:36.685Z"}
{"msg":"Here's a quick-and-dirty one-liner to start a single-node chain:\n```\nburrow spec -f1 | burrow configure -s- > burrow.toml && burrow start -v0\n```","username":"silasdavis","ts":"2018-10-19T11:57:00.942Z"}
{"msg":"have a look at the output and help message for each sub-command to understand what's being done","username":"silasdavis","ts":"2018-10-19T11:57:32.597Z"}
{"msg":"Has joined the channel.","username":"devlintrace","ts":"2018-10-19T18:40:04.674Z","type":"uj"}
{"msg":"Has joined the channel.","username":"carlosfaria","ts":"2018-10-22T20:28:22.873Z","type":"uj"}
{"msg":"Hi everyone! Can smart contracts in Burrow change the permissions for a given account? I read this on https://www.hyperledger.org/wp-content/uploads/2017/06/HIP_Burrowv2.pdf : \"Roles can be updated via discrete transactions or by smart contracts.\"","username":"carlosfaria","ts":"2018-10-23T13:52:08.496Z"}
{"msg":"And what are the available options to change account permissions? govTx?","username":"carlosfaria","ts":"2018-10-23T13:53:23.394Z"}
{"msg":"any of the permission options (see godocs)","username":"compleatang","ts":"2018-10-23T15:02:10.127Z"}
{"msg":"https://github.com/hyperledger/burrow/tree/develop/tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer","username":"compleatang","ts":"2018-10-23T15:02:12.048Z"}
{"msg":"^^^ example of how to build the contract to interact with and adapt to the burrow permission layer.","username":"compleatang","ts":"2018-10-23T15:02:29.530Z"}
{"msg":"https://godoc.org/github.com/hyperledger/burrow/permission#pkg-constants","username":"compleatang","ts":"2018-10-23T15:03:20.144Z"}
{"msg":"^^^ docs","username":"compleatang","ts":"2018-10-23T15:03:23.568Z"}
{"msg":"Thank you @compleatang ","username":"carlosfaria","ts":"2018-10-23T16:43:39.125Z"}
{"msg":"@silasdavis @compleatang: Is there a roadmap that I can follow for https://github.com/hyperledger/burrow/issues/908 / https://github.com/hyperledger/burrow/issues/909? It would be nice to complete the burrow upgrade for seth in https://github.com/hyperledger/sawtooth-seth/pull/73, and it's blocked on those atm","username":"knkski","ts":"2018-10-23T18:59:28.459Z"}
{"msg":"@knkski moving to #burrow-downstream ","username":"compleatang","ts":"2018-10-24T09:07:24.300Z"}
{"msg":"There is any documentation about how to write deploy.yaml files? I'm following the examples.","username":"carlosfaria","ts":"2018-10-24T10:45:38.982Z"}
{"msg":"deploy.yaml main use is to test smart contracts? What are the existing alternatives in Burrow to interact with smart contracts? Thanks","username":"carlosfaria","ts":"2018-10-24T10:46:50.037Z"}
{"msg":"@carlosfaria all documentation is available on godocs. Start here -> https://godoc.org/github.com/hyperledger/burrow/deploy/def#Job then, e.g, to understand the fields for deploying contracts go here -> https://godoc.org/github.com/hyperledger/burrow/deploy/def#Deploy we have examples for nearly every paradigm for working with the system here -> https://github.com/hyperledger/burrow/tree/develop/tests/jobs_fixtures and to see how we structure things for one of the most complex solidity systems available in open source see here -> https://github.com/agreements-network/blackstone/blob/develop/contracts/deploy_contracts and here -> https://github.com/agreements-network/blackstone/tree/develop/contracts/src","username":"compleatang","ts":"2018-10-25T10:55:49.751Z"}
{"msg":"@carlosfaria all documentation is available on godocs. Start here -> https://godoc.org/github.com/hyperledger/burrow/deploy/def#Job then, e.g, to understand the fields for deploying contracts go here -> https://godoc.org/github.com/hyperledger/burrow/deploy/def#Deploy we have examples for nearly every paradigm for working with the system here -> https://github.com/hyperledger/burrow/tree/develop/tests/jobs_fixtures and to see how we structure things for one of the most complex solidity systems available in open source see here -> https://github.com/agreements-network/blackstone/blob/develop/contracts/deploy_contracts and here -> https://github.com/agreements-network/blackstone/tree/develop/contracts/src\n\n","username":"compleatang","ts":"2018-10-25T10:55:49.751Z"}
{"msg":"@carlosfaria all documentation is available on godocs. Start here -> https://godoc.org/github.com/hyperledger/burrow/deploy/def#Job then, e.g, to understand the fields for deploying contracts go here -> https://godoc.org/github.com/hyperledger/burrow/deploy/def#Deploy we have examples for nearly every paradigm for working with the system here -> https://github.com/hyperledger/burrow/tree/develop/tests/jobs_fixtures and to see how we structure things for one of the most complex solidity systems available in open source see here -> https://github.com/agreements-network/blackstone/blob/develop/contracts/deploy_contracts and here -> https://github.com/agreements-network/blackstone/tree/develop/contracts/src","username":"compleatang","ts":"2018-10-25T10:55:49.751Z"}
{"msg":"Thank you @compleatang I really appreciate !","username":"carlosfaria","ts":"2018-10-25T12:38:29.124Z"}
{"msg":"Thank you @compleatang ","username":"carlosfaria","ts":"2018-10-25T12:38:29.124Z"}
{"msg":"Has joined the channel.","username":"haniavis","ts":"2018-10-25T22:46:19.894Z","type":"uj"}
{"msg":"Has joined the channel.","username":"allegramarie","ts":"2018-10-26T14:13:04.078Z","type":"uj"}
{"msg":"Its possible to use burrow.js to create/fund accounts? How can I create an account? Its possible to use existing BIP32 protocol / HD wallets with burrow keystore ?","username":"carlosfaria","ts":"2018-10-30T18:16:07.991Z"}
{"msg":"Hi. Its possible to use burrow.js to create/fund accounts? How can I create an account? Its possible to use existing BIP32 protocol / HD wallets with burrow keystore ?","username":"carlosfaria","ts":"2018-10-30T18:16:07.991Z"}
{"msg":"Has joined the channel.","username":"fupeng","ts":"2018-11-02T08:14:50.783Z","type":"uj"}
{"msg":"Has joined the channel.","username":"denis3007","ts":"2018-11-02T10:39:44.191Z","type":"uj"}
{"msg":"#sawtooth ","username":"fupeng","ts":"2018-11-07T04:17:46.807Z"}
{"msg":"Has joined the channel.","username":"matthewphamilton","ts":"2018-11-07T11:17:39.937Z","type":"uj"}
{"msg":"Has joined the channel.","username":"VenkatThota","ts":"2018-11-08T11:14:52.624Z","type":"uj"}
{"msg":"Hi all, where is the list of account permissions? I've found this on another website, is it correct? (If so it looks like you cannot differentiate read permissions by the smart contract - either you have read permissions for all smart contracts or none): root = full permissions. Use with care.\nsend = permission to send TX.\ncall = permission to call contracts.\nname = permission to add an entry in name registry.\ncreate_contract = permission to create contract.\ncreate_account = permission to create an account.\nbond = permission to send a bond TX allowing to be part of the validator pool.\nadd_role = permission to add roles to accounts.\nhas_role = permission to query role of accounts.\nrm_role = permission to remove role from accounts.\nset_base = permission to set permissions.\nunset_base = permission to remove permissions.\nhas_base = permission to query permissions of an account.\nset_global = permission to set eris:db network parameters.","username":"Luker501","ts":"2018-11-08T17:04:01.731Z"}
{"msg":"(from: https://medium.com/katalysis-io/registering-and-permissioning-new-users-on-a-running-burrow-blockchain-968a9d25a0f8)","username":"Luker501","ts":"2018-11-08T17:04:19.207Z"}
{"msg":"https://godoc.org/github.com/hyperledger/burrow/permission","username":"compleatang","ts":"2018-11-09T10:31:35.285Z"}
{"msg":"Has joined the channel.","username":"RawanAlmousa","ts":"2018-11-09T17:44:44.656Z","type":"uj"}
{"msg":"I want to create a Blockchain that stores invoices entered by an employee at company A and also another employee from company B can view it so where should i start ?\n","username":"RawanAlmousa","ts":"2018-11-09T17:44:51.672Z"}
{"msg":"I need to have a node or account (permission) to read the blockchain state or anyone can read?","username":"carlosfaria","ts":"2018-11-12T16:25:12.383Z"}
{"msg":"Has joined the channel.","username":"LegoEngineering","ts":"2018-11-12T19:30:21.198Z","type":"uj"}
{"msg":"@carlosfaria depends on how you setup the network. If you leverage the whitelisting functionality then only whitelisted nodes can connect to a particular network. If you don't then any node connected to your network can sync. We have no particular read permission. All nodes on a burrow network have full access to the state of that network. ","username":"compleatang","ts":"2018-11-13T03:52:13.358Z"}
{"msg":"To see more about whitelisting network peers see this pull request. https://github.com/hyperledger/burrow/pull/924","username":"compleatang","ts":"2018-11-13T04:03:38.562Z"}
{"msg":"We welcome help documenting the feature. ","username":"compleatang","ts":"2018-11-13T04:03:51.891Z"}
{"msg":"Thanks @compleatang ","username":"carlosfaria","ts":"2018-11-13T10:14:02.157Z"}
{"msg":"Has joined the channel.","username":"tranhl","ts":"2018-11-14T05:26:54.994Z","type":"uj"}
{"msg":"hi guys, i'm looking to get a high-level understanding of the burrow architecture, and was wondering what the purpose of the name registry is","username":"tranhl","ts":"2018-11-14T05:27:36.866Z"}
{"msg":"would someone be able to direct me to some resources that explain the concept?","username":"tranhl","ts":"2018-11-14T05:27:53.619Z"}
{"msg":"Has joined the channel.","username":"hyper-sunder","ts":"2018-11-14T09:10:05.103Z","type":"uj"}
{"msg":"Hey Guys, I have read somewhere, Fabric 1.3 support EVM build-in which is used to run Ethereum Smart Contract. Hope using this, we can do `value transfer`. I would like know where does the `value transaction` happening? Could anyone help me to understand? I am new to burrow.","username":"hyper-sunder","ts":"2018-11-14T09:11:13.163Z"}
{"msg":"When an account is created, which permissions are taken as default? Or we need to set the permissions for every account?\nI saw that there is `DefaultAccountPermissions` available:\nhttps://github.com/hyperledger/burrow/blob/develop/permission/perm_flag.go#L58 is this the default permissions set when I create a new account?\nWe really want to collaborate in this project, but first we need to understand how it works.","username":"carlosfaria","ts":"2018-11-14T15:24:02.824Z"}
{"msg":"I tested and saw when creating a new account the permissions assigned was: `send | call | name | proposal | input | hasRole`. How can I add another default permissions?","username":"carlosfaria","ts":"2018-11-14T16:08:02.347Z"}
{"msg":"@carlosfaria do want to add a permission to an account, or change what permissions an account gets by default?","username":"seanyoung","ts":"2018-11-14T16:48:03.519Z"}
{"msg":"You can add permissions using burrow deploy:\n`jobs:\n- name: permTest1\n  permission:\n      action: setBase\n      target: $addr\n      permission: batch\n      value: \"true\"\n`","username":"seanyoung","ts":"2018-11-14T16:48:44.272Z"}
{"msg":"(put that into a deploy yaml, make sure addr is replace with the address you want)","username":"seanyoung","ts":"2018-11-14T16:49:13.336Z"}
{"msg":"@seanyoung I want to change the permissions that an account gets by default, to add `CreateContract` and `CreateAccount` as default. ","username":"carlosfaria","ts":"2018-11-14T16:55:02.199Z"}
{"msg":"@seanyoung I want to change the permissions that an account gets by default, to add `CreateContract` and `CreateAccount` as default. Is possible? ","username":"carlosfaria","ts":"2018-11-14T16:55:02.199Z"}
{"msg":"Has left the channel.","username":"hyper-sunder","ts":"2018-11-14T17:07:58.905Z","type":"ul"}
{"msg":"Carlos. Yes. You set that in the genesis file (either in burrow.toml by default or genesis.json if you're using a separate genesis file). There's a setting like globalDefaultPermissions or something to that effect. Just change that from the defaults before you instantiate the chain. ","username":"compleatang","ts":"2018-11-15T01:42:32.713Z"}
{"msg":"@tranhl  not much to explain. It's an in-built registry which you can use for your use case or not. We typically use it as a DNS like registry for key smart contracts and their addresses. So when we boot an application it can query a specific name, get a contracts address and interact with that contact directly. But it's just a key value storage layer so it can be used for whatever your use case may demand. ","username":"compleatang","ts":"2018-11-15T01:45:52.019Z"}
{"msg":"@hyper-sunder  please ask Fabric EVM questions in #fabric-evm  they can help you out over there. ","username":"compleatang","ts":"2018-11-15T01:47:02.570Z"}
{"msg":"Has joined the channel.","username":"hyper-sunder","ts":"2018-11-15T01:47:02.673Z","type":"uj"}
{"msg":"Thank you @compleatang I set the `GlobalPermissions` in the genesis and then config a new chain, but now when I create a new account, it does not show any permissions. I think something is wrong setting `GlobalPermissions`:\n```\n  \"GlobalPermissions\": [\n    \"send\",\n    \"call\",\n    \"name\",\n    \"hasRole\",\n    \"proposal\",\n    \"input\",\n    \"CreateAccount\",\n    \"CreateContract\"\n  ],\n```\n","username":"carlosfaria","ts":"2018-11-15T10:41:38.690Z"}
{"msg":"Thank you @compleatang I set the `GlobalPermissions` in the genesis and then config a new chain, but now when I create a new account, it does not show any permissions. I think something is wrong setting `GlobalPermissions`:\n```\n  \"GlobalPermissions\": [\n    \"send\",\n    \"call\",\n    \"name\",\n    \"hasRole\",\n    \"proposal\",\n    \"input\",\n    \"CreateAccount\",\n    \"CreateContract\"\n  ],\n```\nis this the correct way?\n","username":"carlosfaria","ts":"2018-11-15T10:41:38.690Z"}
{"msg":"In the burrow.toml I think is set in the correct way: \n```\n  [GenesisDoc.GlobalPermissions]\n    [GenesisDoc.GlobalPermissions.Base]\n      Perms = \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n      SetBit = \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n```","username":"carlosfaria","ts":"2018-11-15T10:43:28.486Z"}
{"msg":"In the burrow.toml (generated by the config) I think is set in the correct way: \n```\n  [GenesisDoc.GlobalPermissions]\n    [GenesisDoc.GlobalPermissions.Base]\n      Perms = \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n      SetBit = \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n```\n","username":"carlosfaria","ts":"2018-11-15T10:43:28.486Z"}
{"msg":"In the burrow.toml (generated by the config) I think `GlobalPermissions` are set in the correct way: \n```\n  [GenesisDoc.GlobalPermissions]\n    [GenesisDoc.GlobalPermissions.Base]\n      Perms = \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n      SetBit = \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n```\n","username":"carlosfaria","ts":"2018-11-15T10:43:28.486Z"}
{"msg":"Has joined the channel.","username":"smga3000","ts":"2018-11-15T18:46:21.300Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yshurik","ts":"2018-11-15T19:13:03.668Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=arCF9KXwF7pqLYryy) @compleatang thanks for the clarification. on the topic of contract address discovery, i noticed that to use the high level `contracts` API provided by `burrow.js`, you have to provide the burrow ABI as an argument in order to correctly initialise the contract interface object. this begs the question, 'how do we make the abi discoverable/retrievable by anyone with minimal prerequisite knowledge?'. do you have any recommendations as to how we go about this? could the name registry be a solution to this use case?","username":"tranhl","ts":"2018-11-16T01:58:40.323Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=arCF9KXwF7pqLYryy","url":"https://chat.hyperledger.org/channel/burrow?msg=arCF9KXwF7pqLYryy","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=arCF9KXwF7pqLYryy) @compleatang thanks for the clarification. on the topic of contract address discovery, i noticed that to use the high level `contracts` API provided by `burrow.js`, you have to provide the burrow ABI as an argument in order to correctly initialise the contract interface object (see https://github.com/monax/bosmarmot/blob/develop/burrow.js/README.md#3-contracts). this begs the question, 'how do we make the abi discoverable/retrievable by anyone with minimal prerequisite knowledge?'. do you have any recommendations as to how we go about this? could the name registry be a solution to this use case?","username":"tranhl","ts":"2018-11-16T01:58:40.323Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=arCF9KXwF7pqLYryy","url":"https://chat.hyperledger.org/channel/burrow?msg=arCF9KXwF7pqLYryy","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has left the channel.","username":"hyper-sunder","ts":"2018-11-16T08:58:40.340Z","type":"ul"}
{"msg":"I set the `GlobalPermissions`this way:\n```\n  \"GlobalPermissions\": {\n    \"Base\": {\n      \"Perms\": \"send | call | createContract | createAccount | name | proposal | input | hasRole\",\n      \"SetBit\": \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n    },\n    \"Roles\": []\n  }\n```\nfollowing the tests setup: https://github.com/hyperledger/burrow/blob/develop/tests/chain/genesis.json\nBut when I run `burrow configure` I get: `Could not read GenesisSpec: json: cannot unmarshal object into Go struct field GenesisSpec.GlobalPermissions of type []string`","username":"carlosfaria","ts":"2018-11-16T13:46:41.604Z"}
{"msg":"It's supposed to be an object, not an array, right? ","username":"carlosfaria","ts":"2018-11-16T13:48:10.604Z"}
{"msg":"@tranhl it could be. We've had an issue up to store ABIs Burrow side and to be able to retrieve them based on a hash of the contracts byte code but it hasn't risen to the top of our stack yet. (help always welcome!). ","username":"compleatang","ts":"2018-11-17T19:55:21.282Z"}
{"msg":"ABI management is frankly not a very easy use case. We publish all ABIs for the Agreements Network (a public permissioned chain we're building on top of burrow) to a git repository via CI and then turn on GH pages to allow easy retrieval of them. Strategies here depend on the use case frankly... ","username":"compleatang","ts":"2018-11-17T19:57:01.251Z"}
{"msg":"@carlosfaria yes the second way seems correct. Did you get it sorted? ","username":"compleatang","ts":"2018-11-17T19:57:31.352Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=wWek4giBxQm5nYCp3) @compleatang thanks for the insights! to avoid adding additional CI dependencies, i've gone with using the low-level `burrow.js` API, as it does not require access to the ABI. this leads to another question though, is it possible to register a permanent name in the name registry? i noticed that names registered in the name registry have expiry dates. ideally, if i'm going to use the name registry as a DNS for contract addresses, it would be nice to not have to worry about when the names expire","username":"tranhl","ts":"2018-11-18T23:57:52.321Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=wWek4giBxQm5nYCp3","url":"https://chat.hyperledger.org/channel/burrow?msg=wWek4giBxQm5nYCp3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Not currently, however if you set a really high fee rate it'll practically be there for a long time. This is another area we'd welcome assistance on...","username":"compleatang","ts":"2018-11-19T10:16:38.090Z"}
{"msg":"How far along is Burrow? Sorry if I missed this. Basically I'd like to implement a fairly simple solidity smart contract on sawtooth and be able to trigger a smart contract on ethereum from it. basically a hybrid of permissioned and permissionless where we do all the high transaction stuff in sawtooth/burrow","username":"smga3000","ts":"2018-11-19T21:05:22.493Z"}
{"msg":"Burrow is the oldest permissioned blockchain client. It's coming up on being a four year old codebase. So it's pretty far along we run very sophisticated solidity systems on burrow every day at Monax. Although we do not yet version it at 1.0 as the major dependency we have on Tendermint (burrow's consensus engine) is not yet at 1.0 and we are hesitant to version burrow >= 1.0 until that time. What you are looking to do is certainly doable depending on how you structure your integration between the chains. In any event, you should discuss in #sawtooth-seth room for your use case.","username":"compleatang","ts":"2018-11-20T10:05:06.263Z"}
{"msg":"Thank you very much for that feedback","username":"smga3000","ts":"2018-11-20T17:58:09.703Z"}
{"msg":"Has joined the channel.","username":"dev-d","ts":"2018-11-21T10:41:24.520Z","type":"uj"}
{"msg":"Hello Everyone... I have just joinned the group ..","username":"dev-d","ts":"2018-11-21T10:42:29.386Z"}
{"msg":"I have experience working on ethereum contracts ","username":"dev-d","ts":"2018-11-21T10:42:46.465Z"}
{"msg":"and recently I have started exploring on HyperLedger Burrow ","username":"dev-d","ts":"2018-11-21T10:43:08.388Z"}
{"msg":"I am able to figure out a good documentation which can lead me to guide for Node setup, Interaction with Node, Contract deployment and tools like truffle etc","username":"dev-d","ts":"2018-11-21T10:44:00.698Z"}
{"msg":"appreciate if I can get any leads from here","username":"dev-d","ts":"2018-11-21T10:44:18.263Z"}
{"msg":"Has joined the channel.","username":"JERRIN","ts":"2018-11-22T06:44:55.120Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bd","ts":"2018-11-22T12:28:33.231Z","type":"uj"}
{"msg":"hi folks, i'm ethereum developer and i use a lot web3, my question is, for Event's on web3 there is one thing that is ´PromiEvents´ and for other words i have a setup Node.js with burrow.js i sucessfully can deploy, create an instance of contracts , and call functions on contracts but what i'm try to do is when i call one function wich emits one event i want to capture like in web3. the response and the event. one thing wich web3 does is give me the block and tx hash of this 'contract method call'. how i can get this?","username":"bd","ts":"2018-11-22T12:36:03.503Z"}
{"msg":"hi folks, i'm ethereum developer and i use a lot web3, my question is, for Event's on web3 exist one thing is it ´PromiEvents´ and for other words i have a setup Node.js with burrow.js i sucessfully can deploy, create an instance of contracts , and call functions on contracts but what i'm try to do is when i call one function wich emits one event i want to capture like in web3. the response and the event. one thing wich web3 does is give-me the block and tx hash of this 'contract method call'. how i can get this?","username":"bd","ts":"2018-11-22T12:36:03.503Z"}
{"msg":"hi folks, i'm ethereum developer and i use a lot web3, my question is, for Event's on web3 exist one thing is it ´PromiEvents´ and for other words i have a setup Node.js with burrow.js i sucessfully can deploy, create an instance of contracts , and call functions on contracts but what i'm try to do is when i call one function wich emits one event i want to capture like in web3. the response and the event. one thing wich web3 does is give me the block and tx hash of this 'contract method call'. how i can get this?","username":"bd","ts":"2018-11-22T12:36:03.503Z"}
{"msg":"anyone can help with this question ? ","username":"bd","ts":"2018-11-22T12:37:33.761Z"}
{"msg":"we typically use vent to accomplish this -> https://github.com/monax/bosmarmot/tree/develop/vent ","username":"compleatang","ts":"2018-11-22T16:44:53.878Z"}
{"msg":"however the burrow.js library has some capabilities in this area but will need @dennismckinnon 's help","username":"compleatang","ts":"2018-11-22T16:45:20.988Z"}
{"msg":"ok thx","username":"bd","ts":"2018-11-22T16:45:48.626Z"}
{"msg":"Summoned, I appear","username":"dennismckinnon","ts":"2018-11-22T16:46:38.780Z"}
{"msg":"We do not currently add that information to the object because nobody has asked for it","username":"dennismckinnon","ts":"2018-11-22T16:47:46.690Z"}
{"msg":"It can be added though as it should be available in the return object from the grpc","username":"dennismckinnon","ts":"2018-11-22T16:48:06.505Z"}
{"msg":"https://github.com/monax/bosmarmot/blob/develop/burrow.js/protobuf/exec.proto#L79","username":"dennismckinnon","ts":"2018-11-22T16:49:34.636Z"}
{"msg":"this is the grpc spec. If you can tell me what information you want attached to the event object return I can put them in.","username":"dennismckinnon","ts":"2018-11-22T16:50:37.477Z"}
{"msg":"in particular the header section probably contains most of the information you might care about","username":"dennismckinnon","ts":"2018-11-22T16:51:14.686Z"}
{"msg":"I don't see blockhash included","username":"dennismckinnon","ts":"2018-11-22T16:52:09.156Z"}
{"msg":"so if thats something important to you we would need to update the grpc endpoint itself","username":"dennismckinnon","ts":"2018-11-22T16:52:27.271Z"}
{"msg":"Right now I don't return any of this meta data about the event https://github.com/monax/bosmarmot/blob/develop/burrow.js/protobuf/exec.proto#L79","username":"dennismckinnon","ts":"2018-11-22T16:53:28.800Z"}
{"msg":"but it is accessible","username":"dennismckinnon","ts":"2018-11-22T16:54:03.583Z"}
{"msg":"https://github.com/monax/bosmarmot/blob/develop/burrow.js/lib/contracts/event.js#L57","username":"dennismckinnon","ts":"2018-11-22T16:54:04.956Z"}
{"msg":":D thx @dennismckinnon só we have any way to get the hash of tx and block number, maybe we can math the executed method and get the event and return the Smart contract return value and the event emitted in one payload. ","username":"bd","ts":"2018-11-22T17:06:40.560Z"}
{"msg":":D thx @dennismckinnon só we have any way to get the hash of tx and block number, maybe we can match the executed method and get the event and return the values of Smart contract method and the event emitted in one payload. ","username":"bd","ts":"2018-11-22T17:06:40.560Z"}
{"msg":":D thx @dennismckinnon só we have any way to get the hash of tx and block number, maybe we can math the executed method and get the event and return the values of Smart contract method and the event emitted in one payload. ","username":"bd","ts":"2018-11-22T17:06:40.560Z"}
{"msg":"receipt = await ContractObject.setMsg(\"asdsds\");\n    /*\n      \n     { events: [\n        args { sender: 'BF6B575E6C7CECE899B04EA5D4FA56FD406BC5D2',\n                msgx: 'asdsds'\n            }\n     ], returnValue: \n          { raw: [], values: {} }\n     }\n     \n     */\n","username":"bd","ts":"2018-11-22T17:09:42.390Z"}
{"msg":"example:     receipt = await ContractObject.setMsg(\"asdsds\");\n    /*\n      \n     { events: [\n        args { sender: 'BF6B575E6C7CECE899B04EA5D4FA56FD406BC5D2',\n                msgx: 'asdsds'\n            }\n     ], returnValue: \n          { raw: [], values: {} }\n     }\n     \n     */\n\n\n","username":"bd","ts":"2018-11-22T17:09:42.390Z"}
{"msg":"receipt = await ContractObject.setMsg(\"asdsds\");\n    /*\n      \n     { events: [\n        args { sender: 'BF6B575E6C7CECE899B04EA5D4FA56FD406BC5D2',\n                msgx: 'asdsds'\n            }\n     ], returnValue: \n          { raw: [], values: {} }\n     }\n     \n     */\nexample:\n","username":"bd","ts":"2018-11-22T17:09:42.390Z"}
{"msg":"i don't see any example of this querystring -  https://github.com/monax/bosmarmot/tree/develop/burrow.js#burroweventslisten","username":"bd","ts":"2018-11-22T17:10:35.677Z"}
{"msg":"String - a pegjs querystring for filtering the returned events see here for grammar specification","username":"bd","ts":"2018-11-22T17:11:09.265Z"}
{"msg":"the querystring is like the contract address, signature of event, block number ?","username":"bd","ts":"2018-11-22T17:12:54.809Z"}
{"msg":"hmmm","username":"dennismckinnon","ts":"2018-11-23T00:46:10.133Z"}
{"msg":"that seems to be a broken link","username":"dennismckinnon","ts":"2018-11-23T00:46:15.094Z"}
{"msg":"https://github.com/monax/bosmarmot/blob/develop/burrow.js/protobuf/rpcevents.proto#L53-L87","username":"dennismckinnon","ts":"2018-11-23T00:46:16.756Z"}
{"msg":"this is the pegjs query spec","username":"dennismckinnon","ts":"2018-11-23T00:46:23.797Z"}
{"msg":"ok thx dennismckinnon ","username":"bd","ts":"2018-11-23T10:19:57.765Z"}
{"msg":"hi, i'm trying create an new account and add on burrow.js `var burrow = monax.createInstance(burrowURL, account, { ...`, but give-me one error  ` UnhandledPromiseRejectionWarning: Error: 2 UNKNOWN: error returned by Tendermint in BroadcastTxSync ABCI log: CheckTx: Could not execute transaction: TxEnvelope{Signatures: 1, Tx: Tx{TxHash: 425C7F6E9BA9C55620EF8C628D5EDEBC5EFD8803; Payload: CallTx{TxInput{0694A27F6B8B92902CBCEA272946E57FF8A2CF7D, Amount: 1, Sequence:1} -> E32D66A9A672B798D2A76410976872C832A08140: C4784FD4000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000066173647364...  error: validateInputs() expects to be able to retrieve account 0694A27F6B8B92902CBCEA272946E57FF8A2CF7D but it was not found\n","username":"bd","ts":"2018-11-23T16:39:22.364Z"}
{"msg":"hi, i'm trying create an new account and add on burrow.js `var burrow = monax.createInstance(burrowURL, account, { ...`, but give-me one error  ` UnhandledPromiseRejectionWarning: Error: 2 UNKNOWN: error returned by Tendermint in BroadcastTxSync ABCI log: CheckTx: Could not execute transaction: TxEnvelope{Signatures: 1, Tx: Tx{TxHash: 425C7F6E9BA9C55620EF8C628D5EDEBC5EFD8803; Payload: CallTx{TxInput{0694A27F6B8B92902CBCEA272946E57FF8A2CF7D, Amount: 1, Sequence:1} -> E32D66A9A672B798D2A76410976872C832A08140: C4784FD4000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000066173647364730000000000000000000000000000000000000000000000000000}}}, error: validateInputs() expects to be able to retrieve account 0694A27F6B8B92902CBCEA272946E57FF8A2CF7D but it was not found\n    at Object.exports.createStatusError (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/src/common.js:87:15)\n    at Object.onReceiveStatus (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/src/client_interceptors.js:1188:28)\n    at InterceptingListener._callNext (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/src/client_interceptors.js:564:42)\n    at InterceptingListener.onReceiveStatus (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/src/client_interceptors.js:614:8)\n    at callback (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/src/client_interceptors.js:841:24)\n(node:3189) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\n(node:3189) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n`     , for creating a new account i made this steps: 1) ","username":"bd","ts":"2018-11-23T16:39:22.364Z"}
{"msg":"hi, i'm trying create an new account and add on burrow.js `var burrow = monax.createInstance(burrowURL, account, { ...`, but give-me one error  ` UnhandledPromiseRejectionWarning: Error: 2 UNKNOWN: error returned by Tendermint in BroadcastTxSync ABCI log: CheckTx: Could not execute transaction: TxEnvelope{Signatures: 1, Tx: Tx{TxHash: 425C7F6E9BA9C55620EF8C628D5EDEBC5EFD8803; Payload: CallTx{TxInput{0694A27F6B8B92902CBCEA272946E57FF8A2CF7D, Amount: 1, Sequence:1} -> E32D66A9A672B798D2A76410976872C832A08140: C4784FD4000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000066173647364...","username":"bd","ts":"2018-11-23T16:39:22.364Z"}
{"msg":" keys gen \nEnter Password:****\n0694A27F6B8B92902CBCEA272946E57FF8A2CF7D","username":"bd","ts":"2018-11-23T16:39:33.124Z"}
{"msg":"> burrow keys gen \nEnter Password:****\n0694A27F6B8B92902CBCEA272946E57FF8A2CF7D","username":"bd","ts":"2018-11-23T16:39:52.041Z"}
{"msg":"keys export --addr 0694A27F6B8B92902CBCEA272946E57FF8A2CF7D --passphrase 1234","username":"bd","ts":"2018-11-23T16:40:01.892Z"}
{"msg":"burrow keys name hp 0694A27F6B8B92902CBCEA272946E57FF8A2CF7D","username":"bd","ts":"2018-11-23T16:40:22.556Z"}
{"msg":"if i run `burow keys list` is there...","username":"bd","ts":"2018-11-23T16:40:56.242Z"}
{"msg":"Address:\"0694A27F6B8B92902CBCEA272946E57FF8A2CF7D\" KeyName:\"hp\"","username":"bd","ts":"2018-11-23T16:41:09.550Z"}
{"msg":"i need to make some other step ? ","username":"bd","ts":"2018-11-23T16:41:33.161Z"}
{"msg":"```js \nvar account = '0694A27F6B8B92902CBCEA272946E57FF8A2CF7D';\n// var account = 'FC37D959A92E6106A617EDFA42142C6926B67EB0' - default full_0 working;\n// var account = 'BF6B575E6C7CECE899B04EA5D4FA56FD406BC5D2' - default validator working; \n```","username":"bd","ts":"2018-11-23T16:42:41.622Z"}
{"msg":"```js \nvar account = '0694A27F6B8B92902CBCEA272946E57FF8A2CF7D';\n// var account = 'FC37D959A92E6106A617EDFA42142C6926B67EB0' - default full_0 working;\n// var account = 'BF6B575E6C7CECE899B04EA5D4FA56FD406BC5D2' - default validator working; \n```\nvar burrow = monax.createInstance(burrowURL, account, {\n    objectReturn: true\n});\n","username":"bd","ts":"2018-11-23T16:42:41.622Z"}
{"msg":"```burrow.toml\n[GenesisDoc]\n  GenesisTime = 2018-11-19T12:54:34Z\n  ChainName = \"BurrowChain_FAB3C1\"\n  [GenesisDoc.Params]\n    ProposalThreshold = 3\n  [GenesisDoc.GlobalPermissions]\n    [GenesisDoc.GlobalPermissions.Base]\n      Perms = \"send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | hasRole\"\n      SetBit = \"root | send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | setBase | unsetBase | setGlobal | hasRole | addRole | removeRole\"\n\n  [[GenesisDoc.Accounts]]\n    Address = \"FC37D959A92E6106A617EDFA42142C6926B67EB0\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"1FF54277496C8E055DD7080B346D88AFD025F6DD37ADF6EDB27EF1DE65A29E77\\\"}\"\n    Amount = 99999999999999\n    Name = \"Full_0\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = \"root | send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | setBase | unsetBase | setGlobal | hasRole | addRole | removeRole\"\n        SetBit = \"root | send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | setBase | unsetBase | setGlobal | hasRole | addRole | removeRole\"\n\n  [[GenesisDoc.Accounts]]\n    Address = \"BF6B575E6C7CECE899B04EA5D4FA56FD406BC5D2\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"D3F695916FEE22D9B180FE037608497B70E63F9B92B7D7DFD5B91F5694928A48\\\"}\"\n    Amount = 9999999999\n    Name = \"Participant_0\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = \"send | call | name | proposal | input | hasRole\"\n        SetBit = \"send | call | name | proposal | input | hasRole\"\n\n  [[GenesisDoc.Validators]]\n    Address = \"FC37D959A92E6106A617EDFA42142C6926B67EB0\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"1FF54277496C8E055DD7080B346D88AFD025F6DD37ADF6EDB27EF1DE65A29E77\\\"}\"\n    Amount = 9999999999\n    Name = \"Full_0\"\n\n    [[GenesisDoc.Validators.UnbondTo]]\n      Address = \"FC37D959A92E6106A617EDFA42142C6926B67EB0\"\n      PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"1FF54277496C8E055DD7080B346D88AFD025F6DD37ADF6EDB27EF1DE65A29E77\\\"}\"\n      Amount = 9999999999\n\n```","username":"bd","ts":"2018-11-23T16:44:24.006Z"}
{"msg":"@dennismckinnon maybe you can help :D with this pls ? ","username":"bd","ts":"2018-11-23T16:46:08.925Z"}
{"msg":"sorry","username":"bd","ts":"2018-11-23T16:46:12.518Z"}
{"msg":"or anyone ???","username":"bd","ts":"2018-11-23T16:46:44.071Z"}
{"msg":"i 'm feeling a quite alone in this project :D ","username":"bd","ts":"2018-11-23T16:47:32.856Z"}
{"msg":"Has joined the channel.","username":"KirkWallace","ts":"2018-11-25T17:13:59.395Z","type":"uj"}
{"msg":"@dev-d i found this today https://www.npmjs.com/package/snak ","username":"bd","ts":"2018-11-26T10:32:59.000Z"}
{"msg":"Has joined the channel.","username":"lwan2000","ts":"2018-11-26T17:10:24.804Z","type":"uj"}
{"msg":"hi folks, anyone can help with some account's questions ? i want burrow accounts behavior like ethereum.","username":"bd","ts":"2018-11-26T17:49:38.746Z"}
{"msg":"i added this config","username":"bd","ts":"2018-11-26T17:50:06.576Z"}
{"msg":"```\n  [GenesisDoc.GlobalPermissions]\n    [GenesisDoc.GlobalPermissions.Base]\n      Perms = \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n      SetBit = \"send | call | createContract | createAccount | name | proposal | input | hasRole\"\n```","username":"bd","ts":"2018-11-26T17:50:07.231Z"}
{"msg":"and create accounts with burrow keys gen","username":"bd","ts":"2018-11-26T17:50:28.279Z"}
{"msg":"but i can't used with burrow.js","username":"bd","ts":"2018-11-26T17:50:40.209Z"}
{"msg":"but i can't used with burrow.js with the account created ","username":"bd","ts":"2018-11-26T17:50:40.209Z"}
{"msg":"why ? ","username":"bd","ts":"2018-11-26T17:50:42.597Z"}
{"msg":"Has joined the channel.","username":"ajeethkannan","ts":"2018-11-26T19:42:12.121Z","type":"uj"}
{"msg":"Hi there @bd ... I'm just finishing up a couple of things then I'm going to give you some attention :)","username":"silasdavis","ts":"2018-11-27T12:17:13.813Z"}
{"msg":"hi","username":"bd","ts":"2018-11-27T12:26:28.378Z"}
{"msg":"@silasdavis great news :D, i'm very happy ","username":"bd","ts":"2018-11-27T12:26:59.450Z"}
{"msg":"ping me when you have some time... thx @silasdavis ","username":"bd","ts":"2018-11-27T14:38:37.833Z"}
{"msg":"ping me when you do have some time... thx @silasdavis ","username":"bd","ts":"2018-11-27T14:38:37.833Z"}
{"msg":"let me know when you have some time... thx @silasdavis ","username":"bd","ts":"2018-11-27T14:38:37.833Z"}
{"msg":"@bd I'm around now","username":"silasdavis","ts":"2018-11-27T14:51:47.422Z"}
{"msg":"regarding you first issue at first glance it looks like your Burrow instance does not have access the key of the account you are using from burrow.jss","username":"silasdavis","ts":"2018-11-27T14:54:42.790Z"}
{"msg":"regarding you first issue at first glance it looks like your Burrow instance does not have access the key of the account you are using from burrow.js","username":"silasdavis","ts":"2018-11-27T14:54:42.790Z"}
{"msg":"Actually no we are passed that","username":"silasdavis","ts":"2018-11-27T14:59:53.217Z"}
{"msg":"the issue is that the input account does not exist in Burrow","username":"silasdavis","ts":"2018-11-27T15:00:10.904Z"}
{"msg":"you have created the key and the signing as been successful using that key","username":"silasdavis","ts":"2018-11-27T15:00:27.576Z"}
{"msg":"but creating the key does not create the account","username":"silasdavis","ts":"2018-11-27T15:00:36.827Z"}
{"msg":"how i can activate my account?","username":"bd","ts":"2018-11-27T15:07:51.845Z"}
{"msg":"There are four ways to 'create' an account: \n\n1. You can create an account at genesis where you can also set its permissions - typically you create a primary account you want to use to deploy contracts at genesis (you have one `BF6B575E6C7CECE899B04EA5D4FA56FD406BC5D2` and looks like you've got this)\n\n2. You can emit a SendTx (using transact.SendTxSync) to the account and it will be created (with default global permissions)\n\n3. You can create an account from a contract that emits a CREATE opcode (solidity `new MyContract()`). But you will not control the key.\n\n4. You can send value with a CALL opcode to contract and it will be created.","username":"silasdavis","ts":"2018-11-27T15:08:04.698Z"}
{"msg":"I think we really ought to have an explicit example with 2, which is how you should do this","username":"silasdavis","ts":"2018-11-27T15:08:28.414Z"}
{"msg":"to be honest, the reason it is like this is a little bit historical - the idea that without holding some token you can't act anyway. But in Burrow this is not true - we transact with zero gas fees (we meter gas to bound computation time but we don't charge for the gas run up) and value transfer is optional ","username":"silasdavis","ts":"2018-11-27T15:10:13.203Z"}
{"msg":"to be honest, the reason it is like this is a little bit historical - the idea that without holding some token you can't act anyway. But in Burrow this is not true - we transact with zero gas fees (we meter gas to bound computation time but we don't charge for the gas run up) and value transfer is optional.","username":"silasdavis","ts":"2018-11-27T15:10:13.203Z"}
{"msg":"I suppose the other thing is that as permissioned ledger rather than allowing any key to act as an account we require an existing entity to prod that account into existing by 'doing something' to it.","username":"silasdavis","ts":"2018-11-27T15:11:56.086Z"}
{"msg":"we could create an input account implicitly - but by doing that we would convey default chain permissions to it without any existing entity making that explicit.","username":"silasdavis","ts":"2018-11-27T15:12:33.473Z"}
{"msg":"Let me get you an example of creating your account, and I'll add it to the readme","username":"silasdavis","ts":"2018-11-27T15:12:47.479Z"}
{"msg":"hum i will test ","username":"bd","ts":"2018-11-27T15:14:41.557Z"}
{"msg":"Has joined the channel.","username":"samurai 4","ts":"2018-11-27T15:15:27.440Z","type":"uj"}
{"msg":"Hi everyone","username":"samurai 4","ts":"2018-11-27T15:18:18.256Z"}
{"msg":"@silasdavis Thank you very much for your help on the above. I think the documentation should state that `creating the key does not create the  account`\n \n@silasdavis Thank you very much for your help on the above. I think the documentation should state that `creating the key does not create the  account`\n \n@silasdavis thank you very much for your help on the above. I think that we could add that as a note to the documentation","username":"samurai 4","ts":"2018-11-27T15:19:11.763Z"}
{"msg":"@silasdavis Thank you very much for your help on the above. I think the documentation should state that `creating the key does not create the  account`\n \n@silasdavis Thank you very much for your help on the above. I think the documentation should state that `creating the key does not create the  account`\n \n","username":"samurai 4","ts":"2018-11-27T15:19:11.763Z"}
{"msg":"@silasdavis Thank you very much for your help on the above. I think the documentation should state that `creating the key does not create the  account`\n \n@silasdavis Thank you very much for your help on the above. I think the documentation should state that `creating the key does not create the  account`\n ","username":"samurai 4","ts":"2018-11-27T15:19:11.763Z"}
{"msg":"@silasdavis thanks for the help on the above. I think that we should add a note about that on the documentation","username":"samurai 4","ts":"2018-11-27T15:20:08.261Z"}
{"msg":"var accountFull_0 = 'A388CE800DAB14B9362FC44A8F217F169C3DA3A9'; // - default full_0 working;\n\nvar burrow = monax.createInstance(burrowURL, accountFull_0, {\n\tobjectReturn: true\n});\n\nvar newAccount = '1768CA5F249B0CB079AEBC084EE4177A8762FE8E';\n\nvar setPayload = {\n\tInput: {\n\t\tAddress: Buffer.from(newAccount, 'hex'),\n\t\tAmount: 1\n\t},\n\tName: 'DOUG',\n\tData: 'Marmot',\n\tFee: 5000\n};\n\n// Using a callback\nburrow.transact.SendTxSync(setPayload, function(error, data) {\n\tconsole.log('​error, data **********************************************************\\n\\n ', error, data);\n\tif (error) throw error; // or something more sensible\n\t// data object contains detailed information of the transaction execution.\n});\n\n\n..................................................................... burrow accounts \n\n\n\n\n../bin/burrow keys list                                           \n\nAddress:\"0694A27F6B8B92902CBCEA272946E57FF8A2CF7D\" KeyName:\"hp\"  <- new account \nAddress:\"1768CA5F249B0CB079AEBC084EE4177A8762FE8E\" KeyName:\"hp2\" \nAddress:\"A388CE800DAB14B9362FC44A8F217F169C3DA3A9\" KeyName:\"Full_0\"  # working genesis address\nAddress:\"FEBD7F4059107B2C6C22087C5D8A5E54F92A9CFA\" KeyName:\"Participant_0\"  # working genesis address\n\n.....\nERROR: burrow.js\n\n(node:30009) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead\n​error, data **********************************************************\n\n  Error: .payload.SendTx#Input is not a field: undefined\n    at MessagePrototype.set (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/node_modules/protobufjs/dist/protobuf.js:2490:35)\n    at MessagePrototype.set (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/node_modules/protobufjs/dist/protobuf.js:2483:38)\n    at new Message (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/node_modules/protobufjs/dist/protobuf.js:2411:34)\n    at serialize (/home/bd/Desktop/yarilabs/gitlab/PMINT-GROUP/deployBurrow/node_modules/grpc/src/protobuf_js_5_common.js:66:23","username":"bd","ts":"2018-11-27T15:40:03.492Z"}
{"msg":"@silasdavis i see one example like NameTxSync i think for sendTxSync is equal ","username":"bd","ts":"2018-11-27T15:40:57.713Z"}
{"msg":"o made one tx from Genesis account to New account ","username":"bd","ts":"2018-11-27T15:41:15.307Z"}
{"msg":"the setPayload is correct ? ","username":"bd","ts":"2018-11-27T15:41:46.779Z"}
{"msg":"Address:\"1768CA5F249B0CB079AEBC084EE4177A8762FE8E\" KeyName:\"hp2\"  <- this is the new account ","username":"bd","ts":"2018-11-27T15:42:26.551Z"}
{"msg":"@bd yes it is similar, but different schema:\n\n```\nlet chain = burrow.createInstance(chainURL, account.Address, {objectReturn: true})\n\nvar sendTx = {\n    Inputs: [{\n        Address: Buffer.from(account.Address,'hex'),\n        Amount: 50\n    }],\n    Outputs: [{\n        Address: Buffer.from(sendAddress,'hex'),\n        Amount: 50\n    }]\n}\n\nchain.transact.SendTxSync(sendTx).then(value => console.log(value)).catch(err => console.error(err))\n```","username":"silasdavis","ts":"2018-11-27T16:45:32.006Z"}
{"msg":"I'm going to work this into a our little example app","username":"silasdavis","ts":"2018-11-27T16:45:52.307Z"}
{"msg":":hugging:","username":"bd","ts":"2018-11-27T16:47:06.543Z"}
{"msg":"The tx schema are defined here: https://github.com/monax/bosmarmot/blob/develop/burrow.js/protobuf/payload.proto","username":"silasdavis","ts":"2018-11-27T16:47:14.096Z"}
{"msg":":+1_tone5: ","username":"bd","ts":"2018-11-27T16:47:53.207Z"}
{"msg":"`// A payment between two sets of parties\nmessage SendTx {\n    option (gogoproto.goproto_stringer) = false;\n    option (gogoproto.goproto_getters) = false;\n    // The payers\n    repeated TxInput Inputs = 1;\n    // The payees\n    repeated TxOutput Outputs = 2;\n}`","username":"bd","ts":"2018-11-27T16:48:25.323Z"}
{"msg":"this works :D thx","username":"bd","ts":"2018-11-27T16:52:54.949Z"}
{"msg":"i need to learn go Lang :D ","username":"bd","ts":"2018-11-27T16:53:28.935Z"}
{"msg":"@silasdavis sorry one more question for today :D, if i have an muli signature smart contract like gnosis have, it's possible on same instance of contract set the from account, like in web3.js","username":"bd","ts":"2018-11-27T16:59:24.905Z"}
{"msg":" burrow = monax.createInstance(burrowURL, newAccount, {\n\tobjectReturn: true\n});\n","username":"bd","ts":"2018-11-27T16:59:28.983Z"}
{"msg":"for this burrow instance i use `newAccount`","username":"bd","ts":"2018-11-27T16:59:48.903Z"}
{"msg":"but when i call some Smart Contract function ","username":"bd","ts":"2018-11-27T17:00:10.366Z"}
{"msg":"i wan't set the account who call this","username":"bd","ts":"2018-11-27T17:00:40.180Z"}
{"msg":"like this send options ","username":"bd","ts":"2018-11-27T17:01:50.168Z"}
{"msg":"https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n","username":"bd","ts":"2018-11-27T17:01:51.216Z"}
{"msg":"`from - String: The address the transaction should be sent from.\nvalue - ``Number|String|BN|BigNumber``(optional): The value transferred for the transaction in wei.\n`\n","username":"bd","ts":"2018-11-27T17:02:22.616Z"}
{"msg":"or i need to create other contract instance ","username":"bd","ts":"2018-11-27T17:02:46.726Z"}
{"msg":"or i need to create other burrow create  instance ","username":"bd","ts":"2018-11-27T17:02:46.726Z"}
{"msg":"?","username":"bd","ts":"2018-11-27T17:02:48.307Z"}
{"msg":"this use case is more for testing ","username":"bd","ts":"2018-11-27T17:07:37.416Z"}
{"msg":"I'm still need to add some documentation but see for context: https://github.com/monax/bosmarmot/pull/181/files#diff-ae2ee19565cedca227d9efa3dad88337R71","username":"silasdavis","ts":"2018-11-27T17:11:58.830Z"}
{"msg":"cool ","username":"bd","ts":"2018-11-27T17:15:59.617Z"}
{"msg":"yeah so the way burrow.js is designed you can't provide options like that to change the sender","username":"silasdavis","ts":"2018-11-27T17:18:01.487Z"}
{"msg":"though it would be pretty easy to implement","username":"silasdavis","ts":"2018-11-27T17:18:07.533Z"}
{"msg":"I guess it saves you an object instantiation","username":"silasdavis","ts":"2018-11-27T17:18:16.537Z"}
{"msg":"there is nothing I can see stopping you from calling `burrow.account = \"<address string you want to use>\"`","username":"silasdavis","ts":"2018-11-27T17:18:44.678Z"}
{"msg":"before you call the contact function","username":"silasdavis","ts":"2018-11-27T17:18:56.274Z"}
{"msg":"which would have the effect of changing the input account, i.e. sender","username":"silasdavis","ts":"2018-11-27T17:19:40.516Z"}
{"msg":"we also currently send a fixed amount of '1' which is hardcoded in the JS libs","username":"silasdavis","ts":"2018-11-27T17:20:31.040Z"}
{"msg":"see: https://github.com/monax/bosmarmot/blob/develop/burrow.js/lib/contracts/function.js#L23","username":"silasdavis","ts":"2018-11-27T17:20:59.965Z"}
{"msg":"now this could easily be changed, and should be really to support various use cases","username":"silasdavis","ts":"2018-11-27T17:21:20.548Z"}
{"msg":"I suppose in our case we do have the separate send functionality","username":"silasdavis","ts":"2018-11-27T17:21:33.854Z"}
{"msg":"yes, send or call methods in contracts","username":"bd","ts":"2018-11-27T17:24:11.597Z"}
{"msg":":+1_tone1: ","username":"bd","ts":"2018-11-27T17:24:18.629Z"}
{"msg":"does burrow currently have a mechanism for inspecting account state/history? sort of like a block exporer, but for smart contracts","username":"tranhl","ts":"2018-11-28T02:13:16.984Z"}
{"msg":"does burrow currently have a mechanism for inspecting account state/history? sort of like a block explorer, but for smart contracts","username":"tranhl","ts":"2018-11-28T02:13:16.984Z"}
{"msg":"Has joined the channel.","username":"igor-egorov","ts":"2018-11-28T15:34:07.392Z","type":"uj"}
{"msg":"Has left the channel.","username":"igor-egorov","ts":"2018-11-28T15:34:23.737Z","type":"ul"}
{"msg":"Question: from what I can see in the source code of burrow.js and the protobuf spec, accounts are always managed by the burrow keyserver. There's no way to just generate an account keypair locally and use it to send an already signed transaction (a \"raw transaction\" as it is called in web3) to a burrow node. It may have something to do with the fact that, in Burrow, accounts have these additional permissions. Would it however be possible to implement it anyhow? And would it be hard?","username":"JoeriExelmans","ts":"2018-11-29T09:54:00.005Z"}
{"msg":"@tranhl using the grpc interface you can walk the blocks and get the entire history of the chain. Vent uses this to get all the events for the chain, see https://github.com/monax/bosmarmot/blob/develop/vent/service/consumer.go#L144","username":"seanyoung","ts":"2018-11-29T09:59:11.638Z"}
{"msg":"@JoeriExelmans burrow needs to know at least the public key to verify the signatures; so the keyserver  does need that.","username":"seanyoung","ts":"2018-11-29T10:00:09.098Z"}
{"msg":"And another question :smiley:  How do you estimate the current performance of sending 'simulated calls', that is, just querying the state of the blockchain. For some business applications, it is necessary to query the blockchain state constantly. Can I send each such call to Burrow or is it better build a \"cache\" (using a DBMS) around it?","username":"JoeriExelmans","ts":"2018-11-29T10:00:51.245Z"}
{"msg":"You can sign a tx locally and send it signed","username":"seanyoung","ts":"2018-11-29T10:00:59.003Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=HugrR5Jt2g7Ahqjwp) @seanyoung Okay, can you point me to the right place in the GRPC spec?","username":"JoeriExelmans","ts":"2018-11-29T10:02:13.222Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=HugrR5Jt2g7Ahqjwp","url":"https://chat.hyperledger.org/channel/burrow?msg=HugrR5Jt2g7Ahqjwp","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@JoeriExelmans simulated calls should be bound mostly by CPU, and will scale well on multicore (I think). I think this should be pretty fast","username":"seanyoung","ts":"2018-11-29T10:02:29.200Z"}
{"msg":"In order to sign you need to that work locally and make sure signatories is filled in https://github.com/hyperledger/burrow/blob/develop/protobuf/txs.proto#L25","username":"seanyoung","ts":"2018-11-29T10:04:45.424Z"}
{"msg":"Also about performance, with plain Ethereum it can be slow to query logs, because transactions must be re-executed to find them. I guess the same situation in Burrow and that's why you developed Vent?","username":"JoeriExelmans","ts":"2018-11-29T10:05:44.543Z"}
{"msg":"In burrow the events are stored in the blocks so there is no need for re-execution","username":"seanyoung","ts":"2018-11-29T10:06:37.613Z"}
{"msg":"Vent was developed so that we can store the events in a database or trigger other integrations of them","username":"seanyoung","ts":"2018-11-29T10:07:20.397Z"}
{"msg":"Okay, thank you very very much !!","username":"JoeriExelmans","ts":"2018-11-29T10:07:43.295Z"}
{"msg":"np","username":"seanyoung","ts":"2018-11-29T10:08:00.122Z"}
{"msg":"Hi all, I'm revisiting the project after a few months and I can't seem to find the documentation for the JSON-RPC calls, has this been deprecated?","username":"mansoor","ts":"2018-11-29T10:40:59.430Z"}
{"msg":"I believe JSON-RPC support was dropped a few releases back, see v0.20.0: https://github.com/hyperledger/burrow/releases","username":"JoeriExelmans","ts":"2018-11-29T10:47:32.824Z"}
{"msg":"Oh, thanks @JoeriExelmans . Do you know where I can find documentation for the new RPC interface?","username":"mansoor","ts":"2018-11-29T10:50:29.860Z"}
{"msg":"Never mind, got it :)","username":"mansoor","ts":"2018-11-29T10:57:02.660Z"}
{"msg":"@JoeriExelmans thanks for you interesting questions. Vent is there to get you query-side scaling and fan-out for sure, it's worth looking at if you hit bottlenecks with simulated calls or if you want to use it for other reasons. It requires a little bit of smart contract support to emit the events it expects. Of course simulated calls can run smart contract logic - so if you need that they're probably the right solution.\n\nRegarding keys - burrow.js doesn't directly support local signing but it's should not be hard to add - burrow.js relies on delegated signing on a 'local' (for a suitable definition of local - chiefly you must secure the connection to burrow 'ambiently' - VPN, local firewall, etc - since it has your keys) burrow node. There are a couple of advantages of this 1. for cloud usage it can be easier for key management, and 2. it also uses 'mempool signing' whereby burrow tries to assign a series of sequence numbers to incoming transactions sharing the same input account. This isn't always the right thing to do but it significantly increases the throughput where you want to send a large number of transactions from the same sender (input account). Rather than getting one per block you can get hundreds. You could do something like this locally but burrow maintains a locking mechanism so that you can have multiple transaction senders. The main reason this is the default is its exactly what we need and use for our cloud based validator pools (see our work here in http://github.com/agreements-network/charts  and https://github.com/helm/charts/tree/master/incubator/burrow).\n\nThe RPC fully supports the possibility of local signing and you can see this in our integration tests in burrow. A final note is the way we decide whether to sign using mempool is simply when we receive a transaction with no signatories. I'm fairly sure we need to tighten this up.... We definitely need to fix this: https://github.com/hyperledger/burrow/issues/899 (cc @phymbert - interesting to thing about this perhaps)","username":"silasdavis","ts":"2018-11-29T11:23:20.609Z"}
{"msg":"@silasdavis thank you very much for this detailed explanation. Indeed for cloud usage keeping the keys on the burrow node is often what you want to do anyway, and I'm well aware of the difficulty of assigning the right sequence numbers to simultaneous transactions. I think a keyserver with proper locking is a good solution, although perhaps too restricting in some rare cases.","username":"JoeriExelmans","ts":"2018-11-29T12:55:12.835Z"}
{"msg":"The way you describe Vent sounds very much like a similar caching solution that I once developed for Ethereum. Just curious: when sending a transaction to Burrow, is there a way to 'sync', to wait/be notified when Vent's state has 'caught up' with the results of the transaction?","username":"JoeriExelmans","ts":"2018-11-29T13:00:27.066Z"}
{"msg":"Has joined the channel.","username":"knagware9","ts":"2018-11-30T07:23:48.439Z","type":"uj"}
{"msg":"One more question: when sending 1000 simultaneous deployment transactions with the 'contracts' abstraction in burrow.js (which uses SendTxSync), the returned promise resolves almost immediately. But the node process is kept alive for a while after (I guess something in the event loop is waiting for the block to be committed... some sort of buffering mechanism?).","username":"JoeriExelmans","ts":"2018-11-30T13:17:09.455Z"}
{"msg":"One more question: when sending 1000 simultaneous deployment transactions with the 'contracts' abstraction in burrow.js (which uses SendTxSync), the returned promise resolves almost immediately (well, 800ms). But the node process is kept alive for a while after (I guess something in the event loop is waiting for the block to be committed... some sort of buffering mechanism?).","username":"JoeriExelmans","ts":"2018-11-30T13:17:09.455Z"}
{"msg":"One more question: when sending 100 simultaneous deployment transactions with the 'contracts' abstraction in burrow.js (which uses SendTxSync), the returned promise resolves almost immediately (well, about 80ms). But the node process is kept alive for a while after (I guess something in the event loop is waiting for the block to be committed... some sort of buffering mechanism?).","username":"JoeriExelmans","ts":"2018-11-30T13:17:09.455Z"}
{"msg":"One more question: when sending 100 simultaneous deployment transactions with the 'contracts' abstraction in burrow.js (which uses SendTxSync), the returned promise resolves almost immediately (well, about 80ms). But the node process is kept alive for a while (about 1s) after (I guess something in the event loop is waiting for the block to be committed... some sort of buffering mechanism?).","username":"JoeriExelmans","ts":"2018-11-30T13:17:09.455Z"}
{"msg":"(edited, my previous question was because of a mistake i made) When sending 10 simultaneous deployment transactions with the 'contracts' abstraction in burrow.js (which uses SendTxSync), the returned promise resolves almost immediately (well, about 80ms). Should it not to wait for the block to be committed?","username":"JoeriExelmans","ts":"2018-11-30T13:17:09.455Z"}
{"msg":"Hello all, I had setuped  multi node (2 nodes) local system for HL Burrow and it was working fine .. Now I m planning to setup nodes in different machines in same network .. If any one has done it then please help me wth Config file .. ","username":"dev-d","ts":"2018-11-30T16:52:31.316Z"}
{"msg":"For Multinode  at same machine I had follow below config ","username":"dev-d","ts":"2018-11-30T16:52:56.429Z"}
{"msg":"Node 0 ---->","username":"dev-d","ts":"2018-11-30T16:53:20.355Z"}
{"msg":"[Tendermint]\n  Seeds = \"\"\n  SeedMode = false\n  PersistentPeers = \"\"\n  ListenAddress = \"tcp://0.0.0.0:20000\"\n  ExternalAddress = \"\"\n  Moniker = \"val_node_0\"\n  TendermintRoot = \".burrow_node0\"\n  AuthorizedPeers = \"\"\n  CreateEmptyBlocks = true\n  CreateEmptyBlocksInterval = 0\n\n[Execution]\n  CallStackMaxDepth = 0\n  DataStackInitialCapacity = 1024\n  DataStackMaxDepth = 0\n\n[Keys]\n  GRPCServiceEnabled = true\n  AllowBadFilePermissions = false\n  RemoteAddress = \"\"\n  KeysDirectory = \".keys\"\n\n[RPC]\n  [RPC.Info]\n    Enabled = true\n    ListenAddress = \"tcp://127.0.0.1:20001\"\n  [RPC.Profiler]\n    Enabled = false\n    ListenAddress = \"tcp://127.0.0.1:6060\"\n  [RPC.GRPC]\n    Enabled = true\n    ListenAddress = \"127.0.0.1:10997\"\n  [RPC.Metrics]\n    Enabled = false\n    ListenAddress = \"tcp://127.0.0.1:9102\"\n    MetricsPath = \"/metrics\"\n    BlockSampleSize = 100\n\n[Logging]\n  ExcludeTrace = false\n  NonBlocking = false\n  [Logging.RootSink]\n    [Logging.RootSink.Output]\n      OutputType = \"stderr\"\n      Format = \"json\"","username":"dev-d","ts":"2018-11-30T16:53:29.445Z"}
{"msg":"Node 1 ----> ","username":"dev-d","ts":"2018-11-30T16:53:35.714Z"}
{"msg":"================","username":"dev-d","ts":"2018-11-30T16:53:40.067Z"}
{"msg":"[Tendermint]\n  Seeds = \"\"\n  SeedMode = false\n  PersistentPeers = \"xxxxxxxxxxxxxxxxxxxxxxxx@10.0.0.13:20000\"\n  ListenAddress = \"tcp://0.0.0.0:30000\"\n  ExternalAddress = \"\"\n  Moniker = \"val_node_1\"\n  TendermintRoot = \".burrow_node1\"\n  AuthorizedPeers = \"\"\n  CreateEmptyBlocks = true\n  CreateEmptyBlocksInterval = 0\n\n[Execution]\n  CallStackMaxDepth = 0\n  DataStackInitialCapacity = 1024\n  DataStackMaxDepth = 0\n\n[Keys]\n  GRPCServiceEnabled = true\n  AllowBadFilePermissions = false\n  RemoteAddress = \"\"\n  KeysDirectory = \".keys\"\n\n[RPC]\n  [RPC.Info]\n    Enabled = true\n    ListenAddress = \"tcp://127.0.0.1:30001\"\n  [RPC.Profiler]\n    Enabled = false\n    ListenAddress = \"tcp://127.0.0.1:6060\"\n  [RPC.GRPC]\n    Enabled = true\n    ListenAddress = \"127.0.0.1:30002\"\n  [RPC.Metrics]\n    Enabled = false\n    ListenAddress = \"tcp://127.0.0.1:9102\"\n    MetricsPath = \"/metrics\"\n    BlockSampleSize = 100\n\n[Logging]\n  ExcludeTrace = false\n  NonBlocking = false\n  [Logging.RootSink]\n    [Logging.RootSink.Output]\n      OutputType = \"stderr\"\n      Format = \"json\"","username":"dev-d","ts":"2018-11-30T16:54:09.521Z"}
{"msg":"apprecaite any suggestion in change of config when running different machine or any Help link.. ","username":"dev-d","ts":"2018-11-30T16:54:43.360Z"}
{"msg":"Hi! I was trying to understand how gas is calculated during the contract execution (https://github.com/hyperledger/burrow/blob/master/execution/evm/vm.go#L220), and I saw it only account a limited number of opcodes: https://github.com/hyperledger/burrow/blob/master/execution/evm/gas.go \nShould not account for all opcodes (https://ethereum.github.io/yellowpaper/paper.pdf Appendix G )? ","username":"carlosfaria","ts":"2018-11-30T17:46:26.940Z"}
{"msg":"Has joined the channel.","username":"NursultanMakhanov","ts":"2018-12-01T15:26:32.149Z","type":"uj"}
{"msg":"Has joined the channel.","username":"stewartf","ts":"2018-12-02T16:38:19.206Z","type":"uj"}
{"msg":"Hi, I've ran a \"stability test\" with 2 local nodes, deploying 50 contracts every 10 minutes and another 100 regular transactions every 5 minutes. Ran this setup for 64 hours and everything kept running nicely, except that memory usage kept going up (up to 1 GB), in a seemingly linear fashion. After restarting one of the burrow processes, the memory usage of the restarted process is normal again (85 MB), but I'm getting Tendermint error \"Cannot add ourselves with address c2415d39937568f915668a78fd21dcc1f243b718@84.22.116.145:30000\"","username":"JoeriExelmans","ts":"2018-12-03T10:04:46.454Z"}
{"msg":"","username":"JoeriExelmans","ts":"2018-12-03T10:06:58.910Z","attachments":[{"type":"file","title":"Memory usage over time while periodically deploying contracts (at the end, about 20,000 have been deployed)","title_link":"/file-upload/hpqFKW5TCNFKCBW9y/Memory%20usage%20over%20time%20while%20periodically%20deploying%20contracts%20(at%20the%20end,%20about%2020,000%20have%20been%20deployed)","image_url":"/file-upload/hpqFKW5TCNFKCBW9y/Memory%20usage%20over%20time%20while%20periodically%20deploying%20contracts%20(at%20the%20end,%20about%2020,000%20have%20been%20deployed)","image_type":"image/png","image_size":78643,"url":"/file-upload/hpqFKW5TCNFKCBW9y/Memory%20usage%20over%20time%20while%20periodically%20deploying%20contracts%20(at%20the%20end,%20about%2020,000%20have%20been%20deployed)","remote":false,"fileId":"hpqFKW5TCNFKCBW9y","fileName":"Memory usage over time while periodically deploying contracts (at the end, about 20,000 have been deployed)"}]}
{"msg":"Has joined the channel.","username":"Cliff.Huang","ts":"2018-12-04T09:35:18.971Z","type":"uj"}
{"msg":"@JoeriExelmans that looks a bit leaky to me... Would you be able to post a bug report to https://github.com/hyperledger/burrow/issues ?","username":"silasdavis","ts":"2018-12-04T10:06:43.748Z"}
{"msg":"What version of Burrow are you using","username":"silasdavis","ts":"2018-12-04T10:06:48.393Z"}
{"msg":"that was done with the linux binary (github.com/hyperledger/burrow/releases/download/v0.23.1/burrow_0.23.1_Linux_x86_64.tar.gz), version 0.23.1+2018-11-14T18:42:35Z","username":"JoeriExelmans","ts":"2018-12-04T10:10:09.254Z"}
{"msg":"i'll post a bug report","username":"JoeriExelmans","ts":"2018-12-04T10:10:35.530Z"}
{"msg":"so it's not the case that burrow intentionally keeps a lot of data in RAM for performance?","username":"JoeriExelmans","ts":"2018-12-04T10:11:17.567Z"}
{"msg":"Bug report created: https://github.com/hyperledger/burrow/issues/973","username":"JoeriExelmans","ts":"2018-12-04T10:26:50.698Z"}
{"msg":"Btw, I'm running the same experiment again now, this time with empty blocks disabled and with PersistentPeers = \"xxxxxxx@127.0.0.1:port\" instead of external IP address, I'll post if there's anything interesting to report","username":"JoeriExelmans","ts":"2018-12-04T10:30:59.076Z"}
{"msg":"Hi! I was trying to understand how gas is calculated during the contract execution (https://github.com/hyperledger/burrow/blob/master/execution/evm/vm.go#L220), and I saw it only account a limited number of opcodes: https://github.com/hyperledger/burrow/blob/master/execution/evm/gas.go\nShould not account for all opcodes (https://ethereum.github.io/yellowpaper/paper.pdf Appendix G )?","username":"carlosfaria","ts":"2018-12-04T10:39:46.327Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=9RHi8EHAuahgJzksW) @JoeriExelmans The approach we use is a mixture of a high watermark block height on the client and pg_notify from postgres. The way it works is:\n\n- Every transaction a clients sends synchronously gets the block height the tx was included in as part of the TxExecution return - the client just stores (globally is fine but can be finer grain) the highest block height it has seen in a return from a transactions.\n- Vent consumes events a block at a time and each time it atomically inserts events for a block a NOTIFY is triggered for that block height (the latest block height as a payload)\n- If the client wants to ensure that that it is querying the database state after the effect of that transaction has come into effect it just has to LISTEN for the notify of the block height from its high watermark (or snapshot of its high watermark at the point it wants to serialise txs between chain and DB\n\nIf we want to be very specific we can also query for events at specific heights - the NOTIFY still allows us to subscribe. Effectively we use block height as a sequence number - it works quite well and doesn't really require further dependencies.\n\n(Vent is here BTW: https://github.com/monax/bosmarmot/tree/develop/vent)","username":"silasdavis","ts":"2018-12-04T10:44:03.519Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=9RHi8EHAuahgJzksW","url":"https://chat.hyperledger.org/channel/burrow?msg=9RHi8EHAuahgJzksW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@JoeriExelmans we do have various caches included an LRU for the merkle tree/storage but it should not be getting that high. There is an optional profiling service that you can start which makes look at these things quite nice. Not sure how experienced you are with Go, but if you could provide me with a dump of it that would be great","username":"silasdavis","ts":"2018-12-04T10:45:51.841Z"}
{"msg":"if you change `Enabled = true` in the burrow.toml in:\n```\n  [RPC.Profiler]\n    Enabled = false\n    ListenAddress = \"tcp://127.0.0.1:6060\"\n```\n","username":"silasdavis","ts":"2018-12-04T10:47:19.348Z"}
{"msg":"then if you have Go installed once the memory is ramped up a bit run","username":"silasdavis","ts":"2018-12-04T10:48:06.580Z"}
{"msg":"`go tool pprof -top http://localhost:6060/debug/pprof/heap`","username":"silasdavis","ts":"2018-12-04T10:48:11.504Z"}
{"msg":"it will generate a heap profile which I expect would give me a good clue what's going on","username":"silasdavis","ts":"2018-12-04T10:50:55.452Z"}
{"msg":"@JoeriExelmans thanks, also btw we have a PR open to add burrow support to Caliper: https://github.com/hyperledger/caliper/pull/246 the hyperledger benchmarking tool","username":"silasdavis","ts":"2018-12-04T10:52:22.322Z"}
{"msg":"it sounds like some of the testing you are doing might be useful for there","username":"silasdavis","ts":"2018-12-04T10:52:34.022Z"}
{"msg":"I could also consider how we could work it into test nets","username":"silasdavis","ts":"2018-12-04T10:52:46.832Z"}
{"msg":"I take it you didn't see any levelling off of memory usage?","username":"silasdavis","ts":"2018-12-04T10:56:25.480Z"}
{"msg":"It was too soon to tell if memory usage would level off. I'll try to get some useful info with the profiler and post results in the github issue.","username":"JoeriExelmans","ts":"2018-12-04T11:15:31.447Z"}
{"msg":"@dev-d at a glance what you have looks fine, see also our helm charts: https://github.com/agreements-network/charts https://github.com/helm/charts/tree/master/incubator/burrow","username":"silasdavis","ts":"2018-12-04T11:16:02.992Z"}
{"msg":"1 GB seems very large - not impossible but not with those contracts","username":"silasdavis","ts":"2018-12-04T11:16:25.223Z"}
{"msg":"once it is over a few hundred i'd be interested","username":"silasdavis","ts":"2018-12-04T11:16:38.233Z"}
{"msg":"@carlosfaria gas in Burrow is really a means to ensure that computation halts. We do have some plans to introduce a pluggable gas schedule - but currently note though we meter gas we do not charge for it (we do not deduct gas*gasPrice from the value transferred)! So there is not much point tweaking it.","username":"silasdavis","ts":"2018-12-04T11:20:16.711Z"}
{"msg":"@silasdavis thank you for the input! One more question: how you describe a NativeContract?\nMy interpretation form the src code: functions which can be called at the level of the contract?","username":"carlosfaria","ts":"2018-12-04T11:46:13.764Z"}
{"msg":"@silasdavis thank you for the input! One more question: how you describe a NativeContract?","username":"carlosfaria","ts":"2018-12-04T11:46:13.764Z"}
{"msg":"My interpretation form the src code: protocol functionality that can be called at the level of the contract?","username":"carlosfaria","ts":"2018-12-04T11:47:18.226Z"}
{"msg":"@silasdavis Perhaps too soon to tell but now with empty blocks disabled, memory usage seems stable at about 160 MB. My day ends now, the \"stability test\" will keep running and I will update tomorrow if memory usage is indeed stable now. I will still try to reproduce the original problem by re-enabling empty blocks and running the profiler.","username":"JoeriExelmans","ts":"2018-12-04T11:50:49.967Z"}
{"msg":"All findings will also be posted in the github issue of course","username":"JoeriExelmans","ts":"2018-12-04T11:51:20.507Z"}
{"msg":"the functionality can be anything you like really provided it is deterministic. You describe a NativeContract and its methods, implementing with a fixed signature in Go and then those contracts can be called as if they were deployed at an address determined by the hash of their name","username":"silasdavis","ts":"2018-12-04T11:52:12.274Z"}
{"msg":"if you type `make snatives` you can see the generated solidity interface to use","username":"silasdavis","ts":"2018-12-04T11:52:25.127Z"}
{"msg":"we have plans to develop the SNative functionality in a few ways - to provide all transaction types as snatives, and also to provide pluggability through allowing WASM contracts - this needs to be specced out though","username":"silasdavis","ts":"2018-12-04T11:53:19.504Z"}
{"msg":"@JoeriExelmans thanks for your help","username":"silasdavis","ts":"2018-12-04T11:53:32.963Z"}
{"msg":"if you have time","username":"silasdavis","ts":"2018-12-04T11:53:34.755Z"}
{"msg":"hitting the `go tool pprof` now will still be of interest","username":"silasdavis","ts":"2018-12-04T11:53:44.974Z"}
{"msg":"`go tool pprof -top http://localhost:6060/debug/pprof/heap` ","username":"silasdavis","ts":"2018-12-04T11:53:59.726Z"}
{"msg":"Has joined the channel.","username":"styleish","ts":"2018-12-05T05:01:35.103Z","type":"uj"}
{"msg":"how to deploy contract in hyperledger burrow","username":"styleish","ts":"2018-12-05T05:02:08.255Z"}
{"msg":"@styleish you can use this way https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/deploy-contracts.md or burrow.js to deploy https://github.com/monax/bosmarmot/tree/develop/burrow.js#burrowcontractsdeploy","username":"bd","ts":"2018-12-05T09:49:57.695Z"}
{"msg":"Has joined the channel.","username":"PramodDhumal","ts":"2018-12-05T12:22:15.222Z","type":"uj"}
{"msg":"@silasdavis I've updated the bug report. In a new experiment, again memory usage was very high but only on one of the processes. While the experiment was running, at some point new transactions no longer completed (from burrow.js perspective), probably because the experiment kept submitting (too many?) transactions in too small amount of time (also it was running on a shared machine where other people are also doing CPU intensive stuff sometimes). I did not notice this because I left the experiment running unattended. But the results could still interest you. I'm running the experiment again but this time with only half the \"load\" as last time.","username":"JoeriExelmans","ts":"2018-12-05T14:17:05.197Z"}
{"msg":"Has joined the channel.","username":"calvin.heo","ts":"2018-12-05T16:58:50.113Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nflaig","ts":"2018-12-05T18:44:04.862Z","type":"uj"}
{"msg":"Has joined the channel.","username":"DiegoLeal","ts":"2018-12-05T19:35:49.398Z","type":"uj"}
{"msg":"Definitely interesting to us! Thanks for running these! ","username":"compleatang","ts":"2018-12-05T20:04:08.990Z"}
{"msg":"Hello everyone, I'm trying to run through the burrow quick start tutorials and I can't seem to get the seed-nodes example to work. I've run through the example a couple of times now and my seeder node wont advance from block one. Looking into the consensus tab it seems that all the validator nodes are there but the prevotes and precommits show up as 'nil-Vote'. Since I'm pretty new to burrow I'm not even sure what logs would be useful for debugging this issue so please let me know if I can help by providing any other information.","username":"DiegoLeal","ts":"2018-12-05T21:49:10.570Z"}
{"msg":"@DiegoLeal can you illuminate a bit more about your setup in terms of number of nodes, etc.? Also please see the `/net-info` endpoint on each of your nodes to ensure they are able to connect to one another over the p2p layer.","username":"compleatang","ts":"2018-12-06T10:43:21.186Z"}
{"msg":"@silasdavis thanks, understood! The SNative only functionality is to manage account permissions, right? Or do you think its possible to use SNative's to do more than that? For instance, we have a use case, where we want the smart contract paying for the gas of a given \"pending\" transaction, not an account. ","username":"carlosfaria","ts":"2018-12-06T12:04:15.463Z"}
{"msg":"@compleatang  The setup is with one seed node and three validator nodes trying to connect to it. The network says the nodes are not connected to each other. Reading through the logs all three validator nodes trying to connect have similar log files saying, \"component\":\"Tendermint\", \"err\":\"EOF\",\"log_channel\":\"Info\",\"message\":\"Blockpool has no peers\"","username":"DiegoLeal","ts":"2018-12-06T15:31:57.752Z"}
{"msg":"Diego, that'll explain why it isn't making blocks. You need to point the burrow.toml on the connecting nodes to the IP and port of the first. ","username":"compleatang","ts":"2018-12-06T17:16:43.022Z"}
{"msg":"Yeah I did that and it didn't seem to work","username":"DiegoLeal","ts":"2018-12-06T17:53:56.538Z"}
{"msg":"Although I turned seedmode to false and ran through the tutorial again and now its working strangely","username":"DiegoLeal","ts":"2018-12-06T17:54:33.890Z"}
{"msg":"Has joined the channel.","username":"HaiTranThanh","ts":"2018-12-07T15:08:35.160Z","type":"uj"}
{"msg":"Hi everyone, I'm a beginner in Burrow. I'm trying to deploy first single full node, follow by https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/single-full-node.md \nI have successed in creating burrow.toml as below: \n[GenesisDoc]\n  GenesisTime = 2018-12-07T14:48:50Z\n  ChainName = \"BurrowChain_FAB3C1\"\n  [GenesisDoc.Params]\n    ProposalThreshold = 3\n  [GenesisDoc.GlobalPermissions]\n    [GenesisDoc.GlobalPermissions.Base]\n      Perms = \"send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | hasRole\"\n      SetBit = \"root | send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | setBase | unsetBase | setGlobal | hasRole | addRole | removeRole\"\n\n  [[GenesisDoc.Accounts]]\n    Address = \"F09DA6F2120E9992A379EDB7E5BBE8D00E491E14\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"6D056B52289E87ECD5A2DE12EE48A174BB8F54DADEFDAB7C3EEF5820977519C7\\\"}\"\n    Amount = 99999999999999\n    Name = \"Full_0\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = \"root | send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | setBase | unsetBase | setGlobal | hasRole | addRole | removeRole\"\n        SetBit = \"root | send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | setBase | unsetBase | setGlobal | hasRole | addRole | removeRole\"\n\n  [[GenesisDoc.Accounts]]\n    Address = \"1232559BF849E07DF7E3F21F1C17C9AF1C78FF32\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"CE125CB465697647773310EADE086990751D209FAE57F7EAC8EE28944887307D\\\"}\"\n    Amount = 9999999999\n    Name = \"Participant_0\"\n    [GenesisDoc.Accounts.Permissions]\n      [GenesisDoc.Accounts.Permissions.Base]\n        Perms = \"send | call | name | proposal | input | hasRole\"\n        SetBit = \"send | call | name | proposal | input | hasRole\"\n\n  [[GenesisDoc.Validators]]\n    Address = \"F09DA6F2120E9992A379EDB7E5BBE8D00E491E14\"\n    PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"6D056B52289E87ECD5A2DE12EE48A174BB8F54DADEFDAB7C3EEF5820977519C7\\\"}\"\n    Amount = 9999999999\n    Name = \"Full_0\"\n\n    [[GenesisDoc.Validators.UnbondTo]]\n      Address = \"F09DA6F2120E9992A379EDB7E5BBE8D00E491E14\"\n      PublicKey = \"{\\\"CurveType\\\":\\\"ed25519\\\",\\\"PublicKey\\\":\\\"6D056B52289E87ECD5A2DE12EE48A174BB8F54DADEFDAB7C3EEF5820977519C7\\\"}\"\n      Amount = 9999999999\n\n[Tendermint]\n  Seeds = \"\"\n  SeedMode = false\n  PersistentPeers = \"\"\n  ListenAddress = \"tcp://0.0.0.0:26656\"\n  ExternalAddress = \"\"\n  Moniker = \"\"\n  TendermintRoot = \".burrow\"\n  AuthorizedPeers = \"\"\n  CreateEmptyBlocks = true\n  CreateEmptyBlocksInterval = 0\n\n[Execution]\n  CallStackMaxDepth = 0\n  DataStackInitialCapacity = 1024\n  DataStackMaxDepth = 0\n\n[Keys]\n  GRPCServiceEnabled = true\n  AllowBadFilePermissions = false\n  RemoteAddress = \"\"\n  KeysDirectory = \".keys\"\n\n[RPC]\n  [RPC.Info]\n    Enabled = true\n    ListenAddress = \"tcp://127.0.0.1:26658\"\n  [RPC.Profiler]\n    Enabled = false\n    ListenAddress = \"tcp://127.0.0.1:6060\"\n  [RPC.GRPC]\n    Enabled = true\n    ListenAddress = \"127.0.0.1:10997\"\n  [RPC.Metrics]\n    Enabled = false\n    ListenAddress = \"tcp://127.0.0.1:9102\"\n    MetricsPath = \"/metrics\"\n    BlockSampleSize = 100\n\n[Logging]\n  ExcludeTrace = false\n  NonBlocking = false\n  [Logging.RootSink]\n    [Logging.RootSink.Output]\n      OutputType = \"stderr\"\n      Format = \"json\"\nAnd when I use next command: ./burrow start --validator-index=0 \nI have this error: ","username":"HaiTranThanh","ts":"2018-12-07T15:17:26.831Z"}
{"msg":"Sourcing config from first of: Config file at 'burrow.toml' then defaults\nSourcing config from Config file at 'burrow.toml'\nUsing validator address: F09DA6F2120E9992A379EDB7E5BBE8D00E491E14\npanic: Error initializing DB: resource temporarily unavailable [recovered]\n\tpanic: Error initializing DB: resource temporarily unavailable\n\nCan someone help me? Many thanks","username":"HaiTranThanh","ts":"2018-12-07T15:18:18.011Z"}
{"msg":"Has joined the channel.","username":"efn","ts":"2018-12-07T17:02:23.385Z","type":"uj"}
{"msg":"Hi, I'm trying to run some experiments in hyperledger burrow, I need to execute smart contracts calls, is there an API to do that or should I use def.Client API?","username":"efn","ts":"2018-12-07T17:02:27.727Z"}
{"msg":"Hi, I'm trying to run some experiments in hyperledger burrow, I need to execute smart contracts calls, is there a go API to do that or should I use def.Client API?","username":"efn","ts":"2018-12-07T17:02:27.727Z"}
{"msg":"Has joined the channel.","username":"mikd","ts":"2018-12-07T21:45:38.913Z","type":"uj"}
{"msg":"@efn you can use burrow deploy's library or def.client if you like. you're call.","username":"compleatang","ts":"2018-12-08T23:00:28.139Z"}
{"msg":"@HaiTranThanh that looks like either an old .burrow folder from a previous deployment or incorrect file permissions on your system. make sure to check that the user you're running `burrow start` from has permissions to create a `.burrow` folder in the `pwd`. ","username":"compleatang","ts":"2018-12-08T23:01:32.771Z"}
{"msg":"where is the library @compleatang ","username":"efn","ts":"2018-12-09T20:34:14.929Z"}
{"msg":"where is the library @compleatang ?","username":"efn","ts":"2018-12-09T20:34:14.929Z"}
{"msg":"https://github.com/hyperledger/burrow/tree/develop/deploy","username":"compleatang","ts":"2018-12-09T21:03:56.867Z"}
{"msg":"Hi all, are there any docs or examples on how to use the gRPC API? I'm trying to transition old code that used the JSON-RPC API and I can't seem to find any reference material for the new API","username":"mansoor","ts":"2018-12-09T23:27:28.213Z"}
{"msg":"@compleatang def is inside \"compile\", so is that the only way to use burrow? basically use the functions in `def.client`. Why is it calling `dial()` every time, that seems very inefficient","username":"efn","ts":"2018-12-10T08:09:09.292Z"}
{"msg":"@compleatang def is inside deploy library, so is that the only way to use burrow? basically use the functions in `def.client`. Why is it calling `dial()` every time, that seems very inefficient","username":"efn","ts":"2018-12-10T08:09:09.292Z"}
{"msg":"Has joined the channel.","username":"sly514","ts":"2018-12-10T15:17:11.203Z","type":"uj"}
{"msg":"Hi, could anyone please explain to me where the 256 comes from in the type *Word256* if this type consists of 32 bytes? thx","username":"sly514","ts":"2018-12-10T15:19:17.136Z"}
{"msg":"Hi, I had a stupid question sorry","username":"sly514","ts":"2018-12-10T15:19:17.136Z"}
{"msg":"@sly514: 32 bytes * 8 bits per byte = 256 bits","username":"knkski","ts":"2018-12-10T15:30:29.712Z"}
{"msg":"hi folks, it's possible estimateGas in burrow?","username":"bd","ts":"2018-12-10T15:42:10.480Z"}
{"msg":"@bd from looking at the code I think everything costs 0 or 1 gas","username":"efn","ts":"2018-12-10T16:03:55.781Z"}
{"msg":"yes but i want to change this \"table\" of costs and calculate the cost before any transaction that's payed.  ","username":"bd","ts":"2018-12-10T16:31:58.809Z"}
{"msg":"the question is, if not exist any method of estimate gas cost, and it's possible to implement, where i need to look on the code to make this?","username":"bd","ts":"2018-12-10T16:36:51.458Z"}
{"msg":"@bd look in execution/evm/gas.go","username":"efn","ts":"2018-12-10T16:53:24.026Z"}
{"msg":"Is the storage of a smart contract in Burrow put in a merkle tree of some sort?","username":"efn","ts":"2018-12-10T16:55:37.416Z"}
{"msg":"Is the storage of a smart contract in Burrow put in a merkle tree of some sort?\nIf not, is not possible then to prove the state of a variable in a contract?!","username":"efn","ts":"2018-12-10T16:55:37.416Z"}
{"msg":"Is the storage of a smart contract in Burrow put in a merkle tree of some sort?\nIf not, is not possible then to prove the state of a variable in a contract using only a block's header?!","username":"efn","ts":"2018-12-10T16:55:37.416Z"}
{"msg":"Is the storage of a smart contract in Burrow put in a merkle tree of some sort?\nIf not, is not possible then to prove the state of a variable in a contract using only a block's header and a merkle path?!","username":"efn","ts":"2018-12-10T16:55:37.416Z"}
{"msg":"@efn thx","username":"bd","ts":"2018-12-10T16:57:29.700Z"}
{"msg":"@efn there are more or less three ways to use burrow. 1. from another go program use the abstractions built into the deploy library. 2. use the GRPC and protobuf files to create a client library in any language. 3. use burrow.js from a node program. As to the `dial()` @seanyoung can help clear up the thinking there.","username":"compleatang","ts":"2018-12-10T23:24:34.118Z"}
{"msg":"@mansoor the docs for the RPC are here -> https://godoc.org/github.com/hyperledger/burrow/rpc","username":"compleatang","ts":"2018-12-10T23:25:30.604Z"}
{"msg":"Thank you @compleatang, I need proving the state by just looking at block headers, I think Burrow cannot do that, right?! :|","username":"efn","ts":"2018-12-11T08:21:46.365Z"}
{"msg":"Thank you @compleatang ","username":"efn","ts":"2018-12-11T08:21:46.365Z"}
{"msg":"hi, it's possible on the final of each transaction call one method of snative passing some values of transaction like gas used and this snative call the service name to get address of other contract to change his state ?  ","username":"bd","ts":"2018-12-11T10:49:59.993Z"}
{"msg":"in other words i want one way to send gas used and the address of tx.origin / caller to store this values in other \"normal Smart contract\"","username":"bd","ts":"2018-12-11T10:54:55.933Z"}
{"msg":"on each of payed transaction","username":"bd","ts":"2018-12-11T10:56:03.774Z"}
{"msg":"Has joined the channel.","username":"Nammalvar","ts":"2018-12-11T12:09:20.051Z","type":"uj"}
{"msg":"Hi @silasdavis, sorry for disturb it's possible one snative call name register to get one Address using Name register? if yes how i can import the right files and call respective method on `snatives.go` ?\n","username":"bd","ts":"2018-12-12T10:33:02.209Z"}
{"msg":"docker","username":"bd","ts":"2018-12-12T18:42:46.021Z"}
{"msg":"Hi, Is it possible to get the root hash of a specific account? I see the keys in the storage are composed of (account address, key) => value. So an application does not really have a state trie?!","username":"efn","ts":"2018-12-13T08:08:52.391Z"}
{"msg":"Hi, Is it possible to get the root hash of a specific account? I see the keys in the storage are composed of (account address, key) => value. So an account does not really have a state trie?!","username":"efn","ts":"2018-12-13T08:08:52.391Z"}
{"msg":"Has joined the channel.","username":"sairak","ts":"2018-12-13T09:22:17.062Z","type":"uj"}
{"msg":"hi","username":"sairak","ts":"2018-12-13T09:22:23.147Z"}
{"msg":"hi, in burrow.js when i put  this.burrow.query.GetAccount('FEBD7F4059107B2C6C22087C5D8A5E54F92A9CFA');  i get this error:  ","username":"bd","ts":"2018-12-13T16:54:11.971Z"}
{"msg":"`Error: 13 INTERNAL: grpc: error unmarshalling request: error unmarshallling address '144043EC5E34E7DD74EC1D82E82DB6D3CEC2E43F00E44E7817DD80F42140' from bytes: 30 bytes but should have 20 bytes\n      at Object.exports.createStatusError (node_modules/grpc/src/common.js:87:15)\n      at Object.onReceiveStatus (node_modules/grpc/src/client_interceptors.js:1188:28)\n      at InterceptingListener._callNext (node_modules/grpc/src/client_interceptors.js:564:42)\n      at InterceptingListener.onReceiveStatus (node_modules/grpc/src/client_interceptors.js:614:8)\n      at callback (node_modules/grpc/src/client_interceptors.js:841:24)`","username":"bd","ts":"2018-12-13T16:54:22.681Z"}
{"msg":"what is wrong where ? ","username":"bd","ts":"2018-12-13T16:54:45.155Z"}
{"msg":"what is wrong here ? ","username":"bd","ts":"2018-12-13T16:54:45.155Z"}
{"msg":"i already found the error thx","username":"bd","ts":"2018-12-13T17:12:41.150Z"}
{"msg":"Buffer.from('0xFEBD7F4059107B2C6C22087C5D8A5E54F92A9CFA', 'hex')","username":"bd","ts":"2018-12-13T17:12:48.180Z"}
{"msg":"Has joined the channel.","username":"Abhinavgrg074","ts":"2018-12-14T06:13:02.448Z","type":"uj"}
{"msg":"Hello again, another question: Is there a way to perform a simulated call against a past (= not the current) EVM state?","username":"JoeriExelmans","ts":"2018-12-14T12:51:08.086Z"}
{"msg":"so in python web3 its possible and ethereum, token_contract.functions.myBalance().call(block_identifier=-2) you need to pass the block but in burrow.js this is not implemented i think, i still exploring this burrow.js :D ","username":"bd","ts":"2018-12-14T13:04:57.694Z"}
{"msg":"and in web3.js is not implemented as well https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-call","username":"bd","ts":"2018-12-14T13:07:51.075Z"}
{"msg":"--- Burrow workshop ----","username":"silasdavis","ts":"2018-12-14T13:59:51.398Z"}
{"msg":"we need command!","username":"guoger","ts":"2018-12-14T13:59:53.637Z"}
{"msg":"Has joined the channel.","username":"emiliomarin","ts":"2018-12-14T13:59:54.455Z","type":"uj"}
{"msg":"For this you will need the lovely jq....","username":"silasdavis","ts":"2018-12-14T14:00:23.062Z"}
{"msg":"`curl localhost:26658/network | jq '.result.peers[] | .node_info'`","username":"silasdavis","ts":"2018-12-14T14:00:27.418Z"}
{"msg":"once we are up...","username":"silasdavis","ts":"2018-12-14T14:00:29.947Z"}
{"msg":"this will let us take a look at connected peers","username":"silasdavis","ts":"2018-12-14T14:00:36.033Z"}
{"msg":"@phymbert ","username":"silasdavis","ts":"2018-12-14T14:07:54.243Z"}
{"msg":"```\n  PersistentPeers = \"tcp://08ab85cd06742e9bc3004323f9b99072617b4ee5@000.peers.workshop.agreements.network:26656,tcp://642dacac7c93913625f262d6a168125c2fb26f4b@001.peers.workshop.agreements.network:26656,tcp://0475556b0330d0184c7263a7416113b1e33a2294@002.peers.workshop.agreements.network:26656,tcp://b969867ab7e39845c2e2f1d9e6ab2b3623dd234b@003.peers.workshop.agreements.network:26656,tcp://6276E8791D8D5BCF9014653DC243917AC8E99198@10.63.96.225:26656\"\n```","username":"silasdavis","ts":"2018-12-14T14:08:04.368Z"}
{"msg":"Has joined the channel.","username":"swetha","ts":"2018-12-14T14:09:15.330Z","type":"uj"}
{"msg":"@silasdavis \nYou can disable this check by modified default tendermint/config.go:46\n```go\nconf.P2P.AddrBookStrict = false\n```","username":"phymbert","ts":"2018-12-14T14:13:45.518Z"}
{"msg":"yeah we should add that","username":"silasdavis","ts":"2018-12-14T14:21:48.606Z"}
{"msg":"Grab solc! https://github.com/ethereum/solidity/releases/tag/v0.4.25","username":"silasdavis","ts":"2018-12-14T14:21:51.559Z"}
{"msg":"Has joined the channel.","username":"gskerry","ts":"2018-12-14T14:22:13.635Z","type":"uj"}
{"msg":"solc-static-linux easiest on linux","username":"silasdavis","ts":"2018-12-14T14:22:43.775Z"}
{"msg":"mac: \nbrew update\nbrew upgrade\nbrew tap ethereum/ethereum\nbrew install solidity\nbrew linkapps solidity","username":"silasdavis","ts":"2018-12-14T14:24:08.984Z"}
{"msg":"https://github.com/hyperledger/burrow/blob/develop/tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/deploy.yaml","username":"silasdavis","ts":"2018-12-14T14:28:27.974Z"}
{"msg":"hi\ni'm working on one solution like truffle for burrow.js\n\nand i get some issues like\n`\nconst accountToCheck = '0x0694A27F6B8B92902CBCEA272946E57FF8A2CF7D';\n\nconst initialBalance = await this.burrow.query.GetAccount(Buffer.from(accountToCheck, 'hex'));\nconsole.log('​\\n\\n\\n initialBalance', initialBalance);\n`\nso for get the account balance i put this\nand the result is\n` initialBalance { Address: <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00>,\nPublicKey: { CurveType: 0, PublicKey: <Buffer > },\nSequence: '0',\nBalance: '1337',\nCode: <Buffer >,\nPermissions: { Base: { Perms: '16862', SetBit: '131071' }, Roles: [] } }\n\n`\nthe account balance using burrow deploy getBalance.yaml is 10\nbeacause i send 10 to this 0x0694A27F6B8B92902CBCEA272946E57FF8A2CF7D account\nwhy Balance is 1337 ?\nhttps://github.com/hyperledger/burrow/blob/develop/execution/state.go#L155\nanyone can help on this please ?","username":"bd","ts":"2018-12-14T14:30:27.857Z"}
{"msg":"`burrow deploy --mempool-signing --address BE601DEE6E3AFD05BBB976CC98B9E7ACFD9C3DB8`","username":"silasdavis","ts":"2018-12-14T14:31:40.438Z"}
{"msg":"Workshop ^^^ deploy cmd","username":"silasdavis","ts":"2018-12-14T14:31:47.628Z"}
{"msg":"@bd you have actually pulled the global permission address, which rather unfortunately is also the zero address","username":"silasdavis","ts":"2018-12-14T14:32:55.616Z"}
{"msg":"The reason I believe is that","username":"silasdavis","ts":"2018-12-14T14:33:03.984Z"}
{"msg":"`const accountToCheck = '0x0694A27F6B8B92902CBCEA272946E57FF8A2CF7D';`","username":"silasdavis","ts":"2018-12-14T14:33:11.375Z"}
{"msg":"should be","username":"silasdavis","ts":"2018-12-14T14:33:13.107Z"}
{"msg":"`const accountToCheck = '0694A27F6B8B92902CBCEA272946E57FF8A2CF7D';`","username":"silasdavis","ts":"2018-12-14T14:33:17.621Z"}
{"msg":"no 0x","username":"silasdavis","ts":"2018-12-14T14:33:21.254Z"}
{"msg":"I guess buffer.from does not handle that","username":"silasdavis","ts":"2018-12-14T14:33:37.432Z"}
{"msg":"but how i can set this in burrow.js ?","username":"bd","ts":"2018-12-14T14:33:42.088Z"}
{"msg":"though I would expect this to err...","username":"silasdavis","ts":"2018-12-14T14:33:52.264Z"}
{"msg":"address :+ <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00>","username":"silasdavis","ts":"2018-12-14T14:34:05.370Z"}
{"msg":"your address := <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00>","username":"silasdavis","ts":"2018-12-14T14:34:05.370Z"}
{"msg":"hum...","username":"bd","ts":"2018-12-14T14:34:42.299Z"}
{"msg":"if i put `\n\t\tconst initialBalance = await this.burrow.query.GetAccount(accountToCheck);\n\t\tconsole.log('​\\n\\n\\n initialBalance', initialBalance);\n`","username":"bd","ts":"2018-12-14T14:35:48.403Z"}
{"msg":"and \t\tconst accountToCheck = '0694A27F6B8B92902CBCEA272946E57FF8A2CF7D';\n","username":"bd","ts":"2018-12-14T14:35:58.107Z"}
{"msg":"a get this","username":"bd","ts":"2018-12-14T14:36:09.254Z"}
{"msg":"`  0 passing (16ms)\n  1 failing\n\n  1) Contract: Snative \n       Testing get Snative gas value: :\n     Error: 13 INTERNAL: grpc: error unmarshalling request: error unmarshallling address 'D3AF78036EC5E81F01F76F74D82042100DBBDBDE3A139EC517C036085EC3' from bytes: 30 bytes but should have 20 bytes\n      at Object.exports.createStatusError (node_modules/grpc/src/common.js:87:15)\n      at Object.onReceiveStatus (node_modules/grpc/src/client_interceptors.js:1188:28)\n      at InterceptingListener._callNext (node_modules/grpc/src/client_interceptors.js:564:42)\n      at InterceptingListener.onReceiveStatus (node_modules/grpc/src/client_interceptors.js:614:8)\n      at callback (node_modules/grpc/src/client_interceptors.js:841:24)\n\n`","username":"bd","ts":"2018-12-14T14:36:11.595Z"}
{"msg":"the error there is your friend: `30 bytes but should have 20 bytes`","username":"silasdavis","ts":"2018-12-14T14:36:50.319Z"}
{"msg":"issue in your js somewhere","username":"silasdavis","ts":"2018-12-14T14:37:02.845Z"}
{"msg":"`burrow deploy --mempool-signing --address BE601DEE6E3AFD05BBB976CC98B9E7ACFD9C3DB8`","username":"silasdavis","ts":"2018-12-14T14:38:36.951Z"}
{"msg":"Workshop:: `burrow deploy --mempool-signing --address BE601DEE6E3AFD05BBB976CC98B9E7ACFD9C3DB8`","username":"silasdavis","ts":"2018-12-14T14:38:36.951Z"}
{"msg":"https://www.slideshare.net/RachDavidson/burrow-in-basel","username":"Dan","ts":"2018-12-14T14:45:17.670Z"}
{"msg":"```\n{\n  \"Height\": 5312,\n  \"Tx\": {\n    \"Signatories\": [\n      {\n        \"Address\": \"BE601DEE6E3AFD05BBB976CC98B9E7ACFD9C3DB8\",\n        \"PublicKey\": {\n          \"CurveType\": \"ed25519\",\n          \"PublicKey\": \"67A644D165140CA74F2791DDF7163A136F4D12FBCD46E8EFBF2CE21C91A15E5E\"\n        },\n        \"Signature\": {\n          \"CurveType\": 1,\n          \"Signature\": \"h1y2LwaQlc7WnMtqctJOunlYRujhsqlFNtitVKlYmxdUClhAlr0XW0Bdole7jMM/cT/eCZ99EoV/E3MvjOpIBQ==\"\n        }\n      }\n    ],\n    \"Tx\": {\n      \"ChainID\": \"workshop.agreements.network-086AEE\",\n      \"Type\": \"CallTx\",\n      \"Payload\": {\n        \"Input\": {\n          \"Address\": \"BE601DEE6E3AFD05BBB976CC98B9E7ACFD9C3DB8\",\n          \"Amount\": 9999,\n          \"Sequence\": 1\n        },\n        \"GasLimit\": 1111111111,\n        \"Fee\": 9999,\n        \"Datan      }\n    }\n  }\n}\n{\n  \"Height\": 5313,\n  \"Tx\": {\n    \"Signatories\": [\n      {\n        \"Address\": \"BE601DEE6E3AFD05BBB976CC98B9E7ACFD9C3DB8\",\n        \"PublicKey\": {\n          \"CurveType\": \"ed25519\",\n          \"PublicKey\": \"67A644D165140CA74F2791DDF7163A136F4D12FBCD46E8EFBF2CE21C91A15E5E\"\n        },\n        \"Signature\": {\n          \"CurveType\": 1,\n          \"Signature\": \"sJhLVvfC5jaSdpo8WjT17PseoFqb/ZE4/gelE6pWfepQUuxWSO0tGYb73Cn9zuY3Eac+O08PSJjsBRdSUDIiCA==\"\n        }\n      }\n    ],\n    \"Tx\": {\n      \"ChainID\": \"workshop.agreements.network-086AEE\",\n      \"Type\": \"CallTx\",\n      \"Payload\": {\n        \"Input\": {\n          \"Address\": \"BE601DEE6E3AFD05BBB976CC98B9E7ACFD9C3DB8\",\n          \"Amount\": 9999,\n          \"Sequence\": 3\n        },\n        \"Address\": \"2D1482398A3D83E2FFA7F3D42504EBA861E8D3B2\",\n        \"GasLimit\": 1111111111,\n        \"Fee\": 9999,\n        \"Data\": \"60FE47B10000000000000000000000000000000000000000000000000000000000000005\"\n      }\n    }\n  }\n}\n```","username":"silasdavis","ts":"2018-12-14T16:24:00.197Z"}
{"msg":"`burrow dump txs 5312:5313 | jq '.'`","username":"silasdavis","ts":"2018-12-14T16:24:13.248Z"}
{"msg":"with snatives its possible \"mint valid accounts \" ? ","username":"bd","ts":"2018-12-14T16:30:19.888Z"}
{"msg":"i made one snative and added this line ","username":"bd","ts":"2018-12-14T16:30:38.566Z"}
{"msg":"> state.AddToBalance(args.Account, args.Amount)","username":"bd","ts":"2018-12-14T16:30:41.874Z"}
{"msg":"when i get the balance on next line ","username":"bd","ts":"2018-12-14T16:30:59.750Z"}
{"msg":"> balanceAcc := state.GetBalance(args.Account)","username":"bd","ts":"2018-12-14T16:31:05.683Z"}
{"msg":"the return value is correct ","username":"bd","ts":"2018-12-14T16:31:16.775Z"}
{"msg":"but the real balance not changed! when i make the GetAccount with burrow","username":"bd","ts":"2018-12-14T16:32:05.401Z"}
{"msg":"what its possible to do with Snatives?","username":"bd","ts":"2018-12-14T16:33:12.989Z"}
{"msg":"`burrow dump blocks 5111:5113 | jq '.header.lastblock_id'`","username":"silasdavis","ts":"2018-12-14T16:39:25.653Z"}
{"msg":"`burrow dump blocks 5111:5113 | jq '.header.last_block_id'`","username":"silasdavis","ts":"2018-12-14T16:39:25.653Z"}
{"msg":"@dennismckinnon maybe you can help with this in burrow.js how i can call burrow.query.GetAccount ? ","username":"bd","ts":"2018-12-14T16:44:28.165Z"}
{"msg":"any examples ? ","username":"bd","ts":"2018-12-14T16:46:07.443Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=pdXQJcoscvu6pn6bW) @JoeriExelmans It is possible but we don't have any tooling that makes it easy. If you could dump an issue with what you'd like then we can take a look at making it straight forward for users. ","username":"compleatang","ts":"2018-12-14T17:26:14.759Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=pdXQJcoscvu6pn6bW","url":"https://chat.hyperledger.org/channel/burrow?msg=pdXQJcoscvu6pn6bW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=JujBTjJC5ikPDLgnn) @efn That's corect. The whole state exists within the larger state trie. You can get the information for a specific account from the info rpc (see godocs link via repo readme) or from the grpc port as well.. ","username":"compleatang","ts":"2018-12-14T17:28:03.049Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=JujBTjJC5ikPDLgnn","url":"https://chat.hyperledger.org/channel/burrow?msg=JujBTjJC5ikPDLgnn","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@bd just for context we're a bit overloaded right now cause its Hyperledger Global Summit in Basel. I'll ask @dennismckinnon to help as soon as he can. ","username":"compleatang","ts":"2018-12-14T17:29:36.620Z"}
{"msg":"@bd hi","username":"dennismckinnon","ts":"2018-12-14T17:37:22.686Z"}
{"msg":"I don't have any examples","username":"dennismckinnon","ts":"2018-12-14T17:37:31.363Z"}
{"msg":"but it shouldn't be hard","username":"dennismckinnon","ts":"2018-12-14T17:37:42.492Z"}
{"msg":"that function calls the grpc endpoint with this object https://github.com/monax/bosmarmot/blob/develop/burrow.js/protobuf/rpcquery.proto#L25-L27","username":"dennismckinnon","ts":"2018-12-14T17:38:08.300Z"}
{"msg":"what is the param for the address? `this.burrow.query.GetAccount('0694A27F6B8B92902CBCEA272946E57FF8A2CF7D', (e, a) => {\n\t\t\tconsole.log(\"​e,a\", e, a)\n\n\t\t});\n`","username":"bd","ts":"2018-12-14T17:39:00.140Z"}
{"msg":"can't be string right?","username":"bd","ts":"2018-12-14T17:39:09.198Z"}
{"msg":"so it should be sufficient to pass burrow.query.GetAccount an object of the form {Address: Buffer of address} and a callback","username":"dennismckinnon","ts":"2018-12-14T17:39:12.596Z"}
{"msg":"though the callback is optional, it will return a promise if you don't pass it","username":"dennismckinnon","ts":"2018-12-14T17:39:28.315Z"}
{"msg":"{Address: [BufferOfAddress]}","username":"dennismckinnon","ts":"2018-12-14T17:40:50.494Z"}
{"msg":"thats the formula for talking to the grpc methods, always pass an object with the named fields according to the spec and a callback","username":"dennismckinnon","ts":"2018-12-14T17:41:21.256Z"}
{"msg":"hum ok ","username":"bd","ts":"2018-12-14T17:42:01.200Z"}
{"msg":"`{\n\t\t\tAddress: Buffer.from('0694A27F6B8B92902CBCEA272946E57FF8A2CF7D')\n\t\t}`","username":"bd","ts":"2018-12-14T17:42:10.091Z"}
{"msg":"exactly","username":"dennismckinnon","ts":"2018-12-14T17:42:17.819Z"}
{"msg":"i have this error ","username":"bd","ts":"2018-12-14T17:42:40.708Z"}
{"msg":"`e,a { Error: 13 INTERNAL: grpc: error unmarshalling request: error unmarshallling address '307830363934413237463642384239323930324342434541323732393436453537464638413243463744' from bytes: 42 bytes but should have 20 bytes\n    at Object.exports.createStatusError`","username":"bd","ts":"2018-12-14T17:42:43.739Z"}
{"msg":"oops","username":"dennismckinnon","ts":"2018-12-14T17:43:03.429Z"}
{"msg":"a don't know why my address is translated to 307830363934413237463642384239323930324342434541323732393436453537464638413243463744","username":"bd","ts":"2018-12-14T17:43:08.720Z"}
{"msg":"you need Buffer.from('address', 'hex')","username":"dennismckinnon","ts":"2018-12-14T17:43:22.232Z"}
{"msg":"buffer.from needs to know its hex encoded or it tries to do ascii encoding","username":"dennismckinnon","ts":"2018-12-14T17:43:39.610Z"}
{"msg":"finally :D ","username":"bd","ts":"2018-12-14T17:44:07.868Z"}
{"msg":"thx","username":"bd","ts":"2018-12-14T17:44:09.325Z"}
{"msg":"no problem","username":"dennismckinnon","ts":"2018-12-14T17:44:12.814Z"}
{"msg":"you know about snatives ? ","username":"bd","ts":"2018-12-14T17:44:23.542Z"}
{"msg":"in what sense?","username":"dennismckinnon","ts":"2018-12-14T17:44:38.796Z"}
{"msg":"i try to make one snative for mint native accounts ","username":"bd","ts":"2018-12-14T17:44:49.851Z"}
{"msg":"like this ","username":"bd","ts":"2018-12-14T17:44:52.534Z"}
{"msg":"Ahh yes i see you mentioning it above","username":"dennismckinnon","ts":"2018-12-14T17:45:31.902Z"}
{"msg":"yes","username":"bd","ts":"2018-12-14T17:45:37.477Z"}
{"msg":"`\tstate.AddToBalance(args.Account, args.Amount)\n\tbalanceAcc := state.GetBalance(args.Account)`","username":"bd","ts":"2018-12-14T17:45:50.046Z"}
{"msg":"i get the correct added balance ","username":"bd","ts":"2018-12-14T17:46:02.565Z"}
{"msg":"but not saved in the blockchain ","username":"bd","ts":"2018-12-14T17:46:12.357Z"}
{"msg":"hmmm sounds like a burrow-side issue","username":"dennismckinnon","ts":"2018-12-14T17:46:23.745Z"}
{"msg":"silas would be most knowledgable about that","username":"dennismckinnon","ts":"2018-12-14T17:46:38.774Z"}
{"msg":"hum ok ","username":"bd","ts":"2018-12-14T17:46:47.146Z"}
{"msg":"its possible one snative call other contract ? ","username":"bd","ts":"2018-12-14T17:47:26.031Z"}
{"msg":"i'm scrolling higher to see if i can be any more help","username":"dennismckinnon","ts":"2018-12-14T17:47:42.077Z"}
{"msg":"you are talking about in the smart contracts correct?","username":"dennismckinnon","ts":"2018-12-14T17:51:21.952Z"}
{"msg":"yes","username":"bd","ts":"2018-12-14T17:51:31.521Z"}
{"msg":"It might be a permissioning thing of the contract itself","username":"dennismckinnon","ts":"2018-12-14T17:51:40.480Z"}
{"msg":"bacuase you are trying to modify the balances of accounts","username":"dennismckinnon","ts":"2018-12-14T17:52:00.301Z"}
{"msg":"yes like my idea is One contract using one Snative contract mint real accounts of burrow","username":"bd","ts":"2018-12-14T17:53:06.003Z"}
{"msg":"oh so you have a contract calling an snative?","username":"dennismckinnon","ts":"2018-12-14T17:53:44.128Z"}
{"msg":"and other question is i can now comunicate with this direction \"normal Smart contract \" to - > Snative,   and it's possible one Snative call other normal Smart contract via go ? to get like two directions of comunication ","username":"bd","ts":"2018-12-14T17:54:44.767Z"}
{"msg":"yes","username":"bd","ts":"2018-12-14T17:54:51.307Z"}
{"msg":"i have one Smart contract ","username":"bd","ts":"2018-12-14T17:55:01.886Z"}
{"msg":"calling one Snative method","username":"bd","ts":"2018-12-14T17:55:11.418Z"}
{"msg":"like this ","username":"bd","ts":"2018-12-14T17:55:15.140Z"}
{"msg":"`func mint(state Interface, caller crypto.Address, gas *uint64, logger *logging.Logger,\n    a interface{}) (interface{}, error) {\n\targs := a.(*payGasArgs)\n\n\taccountX := args.Account\n\tfmt.Printf(\"||||||||||||||||||||||||||||||||||||||||||||| %s \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", accountX)\n\n\tstate.AddToBalance(args.Account, args.Amount)\n\tbalanceAcc := state.GetBalance(args.Account)\n\t// state.writeState.commit()\n\t\n\treturn payGasRets{Result: balanceAcc}, nil\n}\n`","username":"bd","ts":"2018-12-14T17:55:30.516Z"}
{"msg":"this is Snative","username":"bd","ts":"2018-12-14T17:55:40.411Z"}
{"msg":"and one deploy by burrow.js ","username":"bd","ts":"2018-12-14T17:56:02.657Z"}
{"msg":"my intention is get one way to have like a ERC20 mintable, to native coin burrow","username":"bd","ts":"2018-12-14T17:56:48.026Z"}
{"msg":"Oh","username":"dennismckinnon","ts":"2018-12-14T17:57:16.245Z"}
{"msg":"you are making a new snative from go","username":"dennismckinnon","ts":"2018-12-14T17:57:26.514Z"}
{"msg":"not deploying a contract that calls an snative","username":"dennismckinnon","ts":"2018-12-14T17:57:36.508Z"}
{"msg":"i see","username":"dennismckinnon","ts":"2018-12-14T17:57:42.941Z"}
{"msg":"Ok this is definitely out of my wheelhouse","username":"dennismckinnon","ts":"2018-12-14T17:57:56.703Z"}
{"msg":":D","username":"bd","ts":"2018-12-14T17:58:35.295Z"}
{"msg":"ok ","username":"bd","ts":"2018-12-14T17:58:38.196Z"}
{"msg":" @silasdavis will be the person to weigh in on making new snatives. I do wonder however if you might be better served by simply sending the money to an account","username":"dennismckinnon","ts":"2018-12-14T17:58:50.758Z"}
{"msg":"He is busy right now though so","username":"dennismckinnon","ts":"2018-12-14T17:59:04.233Z"}
{"msg":"ok ","username":"bd","ts":"2018-12-14T17:59:10.171Z"}
{"msg":"you might have to wait a bit for a response","username":"dennismckinnon","ts":"2018-12-14T17:59:14.761Z"}
{"msg":"ok, i have some questions for Snatives :D what is really the features ","username":"bd","ts":"2018-12-14T18:01:27.815Z"}
{"msg":"SNatives are supposed to be administrative access-like tasks","username":"dennismckinnon","ts":"2018-12-14T18:03:19.460Z"}
{"msg":"so most if not all have special permission requirements for accessing them","username":"dennismckinnon","ts":"2018-12-14T18:04:09.368Z"}
{"msg":"hum ok ","username":"bd","ts":"2018-12-14T18:04:28.976Z"}
{"msg":"we generally don't write a new one unless there is deficiency of functionality","username":"dennismckinnon","ts":"2018-12-14T18:05:14.444Z"}
{"msg":"thanks for the help @dennismckinnon ","username":"bd","ts":"2018-12-14T18:05:38.880Z"}
{"msg":"np","username":"dennismckinnon","ts":"2018-12-14T18:05:42.838Z"}
{"msg":"@bd probably better to use burrows native token and govTx for that. ","username":"compleatang","ts":"2018-12-14T22:43:49.690Z"}
{"msg":"---Workshop Begins---","username":"silasdavis","ts":"2018-12-15T13:22:58.588Z"}
{"msg":"https://solidity.readthedocs.io/en/v0.4.25/installing-solidity.html","username":"silasdavis","ts":"2018-12-15T13:25:22.114Z"}
{"msg":"grab this release: https://github.com/ethereum/solidity/releases/tag/v0.4.25","username":"silasdavis","ts":"2018-12-15T13:26:00.811Z"}
{"msg":"Make sure you have:\n```\nburrow --version\n0.23.1+commit.v0.23.1+2018-12-15\n```","username":"silasdavis","ts":"2018-12-15T13:32:29.625Z"}
{"msg":"Has joined the channel.","username":"neewy","ts":"2018-12-15T13:34:28.681Z","type":"uj"}
{"msg":"I've got `0.23.1+2018-11-14T18:42:35Z` from the latest release","username":"neewy","ts":"2018-12-15T13:34:57.886Z"}
{"msg":"This solidity version does not compile on Mojave:\n```\nUnsupported macOS version.\nWe only support Mavericks, Yosemite, El Capitan, Sierra and High Sierra.\n```","username":"neewy","ts":"2018-12-15T13:38:00.638Z"}
{"msg":"Can I use any newer release?","username":"neewy","ts":"2018-12-15T13:38:21.248Z"}
{"msg":"For the next steps perform them in a clean directory (not in chains/)","username":"silasdavis","ts":"2018-12-15T13:40:12.179Z"}
{"msg":"Apologies we've tweaked things since yesterday - we won't need solc (unless we hit extra credit part)","username":"silasdavis","ts":"2018-12-15T13:41:45.268Z"}
{"msg":":ok_woman_tone2: ","username":"neewy","ts":"2018-12-15T13:41:54.798Z"}
{"msg":"Can you copy the link for the slides here? ","username":"neewy","ts":"2018-12-15T13:45:39.403Z"}
{"msg":"@silad","username":"neewy","ts":"2018-12-15T13:51:28.062Z"}
{"msg":"@silasdavis ","username":"neewy","ts":"2018-12-15T13:51:28.062Z"}
{"msg":"Has joined the channel.","username":"r0g1er","ts":"2018-12-15T13:53:35.050Z","type":"uj"}
{"msg":"https://bit.ly/2QPkhuL ","username":"r0g1er","ts":"2018-12-15T13:53:37.639Z"}
{"msg":"thanks","username":"neewy","ts":"2018-12-15T13:53:42.341Z"}
{"msg":"https://www.slideshare.net/RachDavidson/burrow-in-basel","username":"gregdhill","ts":"2018-12-15T13:53:45.555Z"}
{"msg":"https://agreements.network/","username":"silasdavis","ts":"2018-12-15T16:06:24.241Z"}
{"msg":"demo of Monax Platform: https://geeks.app.monax.io/","username":"silasdavis","ts":"2018-12-15T16:06:37.315Z"}
{"msg":"https://monax.io/","username":"silasdavis","ts":"2018-12-15T16:06:54.396Z"}
{"msg":"+++++ end burrow workshop ++++","username":"compleatang","ts":"2018-12-15T17:19:26.437Z"}
{"msg":"our thanks to everyone that attended one of the two burrow workshops. hope it was a helpful tour of the framework!","username":"compleatang","ts":"2018-12-15T17:19:42.414Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=23DstkFNEjdMS6XdC) @compleatang I need a bit of time to get back to issues in this room. But when we started using a versioned state tree I always had in mind running simulated call against a previous block height. It should be very easy to implement against RWTree and we will at some point, the groundwork is done. ","username":"silasdavis","ts":"2018-12-16T22:01:44.439Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=23DstkFNEjdMS6XdC","url":"https://chat.hyperledger.org/channel/burrow?msg=23DstkFNEjdMS6XdC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@JoeriExelmans ","username":"silasdavis","ts":"2018-12-16T22:02:00.136Z"}
{"msg":"Height would be an optional parameter for callsim and state query endpoints ","username":"silasdavis","ts":"2018-12-16T22:04:03.181Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=BYeLCByfbEH8wXxZK) @compleatang Thanks for the help, we, i and my team are investigation the Burrow project for more than 1 month and other project's Evm compatible and we decide make some tools like Truffle development framework and make some tweak on the Burrow,  all help of the burrow community its appreciated, so back to the  Snatives question, for remove all doubts of Snatives: \n1) I can't change the blockchain state like balances with Go Snatives?\n2) It's possible on the final of each transaction call one Snative with computation cost's (Gas) ?\n3) It's possible one Snative call other one Smart Contract ?","username":"bd","ts":"2018-12-17T10:54:20.850Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=BYeLCByfbEH8wXxZK","url":"https://chat.hyperledger.org/channel/burrow?msg=BYeLCByfbEH8wXxZK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=BYeLCByfbEH8wXxZK) @compleatang Thanks for the help, we, i and my team are investigation the Burrow project for more than 1 month and other project's Evm compatible and we decide make some tools like Truffle development framework and make some tweak on the Burrow,  all help of the burrow community its appreciated, so back to the  Snatives question, for remove all doubts of Snatives: \n1) Can I change the blockchain state (e.g a balance of a burrow native token or a balance of a smart contract with Snative written in GO)?\n2) Is it possible to call an snative method  at the end of each transaction and pass as a param the computation cost (Gas) of that transaction ?\n3) Is it possible to invoke a method on a smart contract from an Snative ","username":"bd","ts":"2018-12-17T10:54:20.850Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=BYeLCByfbEH8wXxZK","url":"https://chat.hyperledger.org/channel/burrow?msg=BYeLCByfbEH8wXxZK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi would there be a way to use burrow with sawtooth transaction processors to get tendermint consensus (bypassing the EVM)?","username":"sly514","ts":"2018-12-17T12:47:54.310Z"}
{"msg":"@compleatang: Would there be any interest in having a branch in the burrow repo with these changes? https://github.com/knkski/burrow","username":"knkski","ts":"2018-12-17T20:27:57.303Z"}
{"msg":"Until https://github.com/hyperledger/burrow/issues/908 and https://github.com/hyperledger/burrow/issues/909 are fixed","username":"knkski","ts":"2018-12-17T20:28:22.000Z"}
{"msg":"So that we can stop doing this over in Seth: https://github.com/hyperledger/sawtooth-seth/commit/667a6da40fec2a6ef02ad3ecf2fa47f69ba8d016#diff-34a050f7b683d5a01f7e6592f03fe6fcR81","username":"knkski","ts":"2018-12-17T20:28:39.050Z"}
{"msg":"Has joined the channel.","username":"mogamboizer","ts":"2018-12-17T20:50:37.345Z","type":"uj"}
{"msg":"Has left the channel.","username":"greg2git","ts":"2018-12-17T21:17:15.983Z","type":"ul"}
{"msg":"BLOCKHASH is fixed already ","username":"phymbert","ts":"2018-12-18T06:45:23.391Z"}
{"msg":"@knkski We're happy to. I just push `seth-fixes` if you PR into that branch we can then get it in there. As @phymbert said, BLOCKHASH is done and is in code review. It's been a bit tied up because it sits at the chain/app intersection and in our work on dump|restore we have had some other niggles and changes along that interface that we want to make sure work with Pierrick's work on BLOCKHASH. Once we're thru that tranche then we should be able to look at 908 as well. In general with the holidays this probably puts us at mid-Jan to get these finalized for you -- so entirely reasonable we keep a branch with your fixes in burrow.","username":"compleatang","ts":"2018-12-18T10:36:59.294Z"}
{"msg":"@bd those are all edge cases we haven't yet explored. we have govTx which is coming along nicely and can affect native token balance. It can be routed through a proposal mechanism for multi-sig level voting. These questions would be better in GH issues because I fear that some of the nuance of what you're looking for is getting lost in a fast moving chat room. What would help us is exactly what you're looking to achieve and what you've done to date that has been blocked. We'd be excited to see a Truffle like tool and will do our best to answer your questions. ","username":"compleatang","ts":"2018-12-18T10:39:32.748Z"}
{"msg":"@compleatang thx, @carlosfaria already made an git issue here :point_right:(_ https://github.com/hyperledger/burrow/issues/981 _)","username":"bd","ts":"2018-12-18T10:50:19.654Z"}
{"msg":"Has joined the channel.","username":"wangrangli","ts":"2018-12-19T09:41:27.407Z","type":"uj"}
{"msg":"Hi, concerning multiple validators setup, could you please explain to me where to get the value for Validator 2 's PersistentPeers? ( \"PUT_HERE_NODE_0_ID@LISTEN_EXTERNAL_ADDRESS\")","username":"sly514","ts":"2018-12-19T13:14:19.453Z"}
{"msg":"Hi, concerning multiple validators setup, could you please explain to me where to get the value for Validator 2 's PersistentPeers? ( what is the NODE_0_ID and LISTEN_EXTERNAL_ADDRESS\")","username":"sly514","ts":"2018-12-19T13:14:19.453Z"}
{"msg":"Hi, concerning multiple validators setup, could you please explain to me where to get the value for Validator 2 's PersistentPeers? ( what is the NODE_0_ID (moniker?)and LISTEN_EXTERNAL_ADDRESS\")","username":"sly514","ts":"2018-12-19T13:14:19.453Z"}
{"msg":"Hi, concerning multiple validators setup, could you please explain to me where to get the value for Validator 2 's PersistentPeers? ( what is the NODE_0_ID (moniker?)and LISTEN_EXTERNAL_ADDRESS\")update: I figured it out","username":"sly514","ts":"2018-12-19T13:14:19.453Z"}
{"msg":"If a contract self-destructs, how do you delete all the keys for that contract? As I see keys are stored as (contract addr + key) in the tree. If you don't know the key, how can you clean the state of the contrat?","username":"efn","ts":"2018-12-19T16:41:55.054Z"}
{"msg":"If a contract self-destructs, how do you delete all the keys for that contract? As I see keys are stored as (contract addr + key) in the tree. If you don't know the key, how can you clean the state of the contract?","username":"efn","ts":"2018-12-19T16:41:55.054Z"}
{"msg":"@compleatang I think what we really want are stable branches of burrow were fixes can be applied for point releases (as opposed to a fork of burrow for seth)","username":"amundson","ts":"2018-12-19T19:53:31.327Z"}
{"msg":"@amundson moving to #burrow-downstream just to confirm a few details. ","username":"compleatang","ts":"2018-12-19T20:45:55.780Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=XHcszbYWqvFxaYbsX) @compleatang burrow deploy only creates a connection using Dial() if necessary. This is to speed up build-only deploy files. Once established, it reuses the same connection. See https://github.com/hyperledger/burrow/blob/develop/deploy/def/client.go#L50 ","username":"seanyoung","ts":"2018-12-20T12:51:50.308Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=XHcszbYWqvFxaYbsX","url":"https://chat.hyperledger.org/channel/burrow?msg=XHcszbYWqvFxaYbsX","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Rtp8xsxi3k2CuPc2R) @efn \"burrow deploy\" now only makes a connection when it is needed, which makes it possible to run a burrow deploy file with only build jobs without a chain. When a connection is made it reused, so it not reconnect every time. See https://github.com/hyperledger/burrow/blob/develop/deploy/def/client.go#L50","username":"seanyoung","ts":"2018-12-20T12:59:54.560Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Rtp8xsxi3k2CuPc2R","url":"https://chat.hyperledger.org/channel/burrow?msg=Rtp8xsxi3k2CuPc2R","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Cool, thanks for the change :)\nI modified the state, so contracts have also a tree of their own. So we can prove storage properties of accounts","username":"efn","ts":"2018-12-20T13:03:14.439Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=daTMo3j4crM8eYnvp) @bd It would be great to have snatives to access name register, this currently does not exist yet. Patches welcome ;)","username":"seanyoung","ts":"2018-12-20T13:03:21.735Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=daTMo3j4crM8eYnvp","url":"https://chat.hyperledger.org/channel/burrow?msg=daTMo3j4crM8eYnvp","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I don't know if the project is interested in it","username":"efn","ts":"2018-12-20T13:03:40.306Z"}
{"msg":"@efn putting contracts in their own tree would be a useful feature, so duplicate contracts can be stored just once. So contracts can be accessed by contract hash. This is needed to store contract abi in burrow.","username":"seanyoung","ts":"2018-12-20T13:05:57.753Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=rqQXYCyYh5zw9kTBu) @seanyoung I think contracts having their own state doesn't help with duplicate contracts, cause they will still need their own storage","username":"efn","ts":"2018-12-20T13:09:58.961Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=rqQXYCyYh5zw9kTBu","url":"https://chat.hyperledger.org/channel/burrow?msg=rqQXYCyYh5zw9kTBu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=BkPEsRZMiMJndqfs9) @efn This is something we had lost when going under a single IAVL tree (a prefix tree would give you this 'for free') - I'd be interested to see your code","username":"silasdavis","ts":"2018-12-20T13:11:55.722Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=BkPEsRZMiMJndqfs9","url":"https://chat.hyperledger.org/channel/burrow?msg=BkPEsRZMiMJndqfs9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Sure, I'd be happy to make it public, probably there are some bugs that I didn't think about :|","username":"efn","ts":"2018-12-20T13:16:25.431Z"}
{"msg":"that's fine - it would be good to talk about the implementation","username":"silasdavis","ts":"2018-12-20T13:27:04.976Z"}
{"msg":"my plan for doing it was to create a forest of IAVL trees organised in a prefix tree","username":"silasdavis","ts":"2018-12-20T13:27:25.006Z"}
{"msg":"and do this for all state","username":"silasdavis","ts":"2018-12-20T13:27:27.588Z"}
{"msg":"Hi folks, what is the difference between useGasNegative, st.useGas. both use *gas as same time ?","username":"bd","ts":"2018-12-20T16:24:20.338Z"}
{"msg":"Hi folks, what is the difference between `useGasNegative`, `st.useGas`. both use *gas as same time ?","username":"bd","ts":"2018-12-20T16:24:20.338Z"}
{"msg":"Hi folks, what is the difference between `useGasNegative`, `st.useGas`. both use *gas as same time, i mean it's the continuous gas to spend ?","username":"bd","ts":"2018-12-20T16:24:20.338Z"}
{"msg":"if i have to make some pre-transaction or post-transaction hooks to work with somethings like call one smart contract at the end of all tx actions, what methods/ files i need to change/apply ? ","username":"bd","ts":"2018-12-20T16:26:43.350Z"}
{"msg":"for example if one post-hook on transaction call one Smart Contract with some values to change, here i need to change call_context.go ? ","username":"bd","ts":"2018-12-20T16:27:50.544Z"}
{"msg":"for example if one post-hook on transaction call one Smart Contract with some values to change, here i need to change `call_context.go` ? ","username":"bd","ts":"2018-12-20T16:27:50.544Z"}
{"msg":"@efn if you are able to push that code just so I can see the approach you have used - I am likely to start working on something related","username":"silasdavis","ts":"2018-12-20T16:29:52.702Z"}
{"msg":"@silasdavis The way I did it was very simple, just created a `map[crypto.Address]*storage.RWTree` for each account. I added a `storageHash` in the `Account` structure as well. So I can prove state variables from there","username":"efn","ts":"2018-12-20T17:04:52.872Z"}
{"msg":"Do you know where are the signatures for the blocks stored?\nThanks","username":"efn","ts":"2018-12-20T17:05:25.752Z"}
{"msg":"Looks like it is the same thing @bd ","username":"efn","ts":"2018-12-20T17:30:03.053Z"}
{"msg":"I think you can take a look in the `Deliver` function, in `call_context.go`, from there you go to `vmach.Call` which executes the vm code in the contract, or just calls","username":"efn","ts":"2018-12-20T17:31:54.886Z"}
{"msg":"I think you can take a look in the `Deliver` function, in `call_context.go`, from there you go to `vmach.Call` which executes the vm code in the contract","username":"efn","ts":"2018-12-20T17:31:54.886Z"}
{"msg":"I think you can take a look in the `Deliver` function, in `call_context.go`, the function calls `vmach.Call` which executes the vm code in the contract","username":"efn","ts":"2018-12-20T17:31:54.886Z"}
{"msg":"ok thanks, how i can calculate OpCodes to call one VM, like if i had to call vm to change some State in one Smart Contract, like pay(address, amount)??? exist some function to do this ?","username":"bd","ts":"2018-12-20T17:40:28.521Z"}
{"msg":"for example: \tret, exception := vmach.Call(txCache, ctx.txe, caller, callee, code, ctx.tx.Data, value, &gas) ","username":"bd","ts":"2018-12-20T17:42:30.828Z"}
{"msg":"i need to calculate code opcodes for pay(address, amount ), right? and the callee is the S. Contract Address","username":"bd","ts":"2018-12-20T17:43:24.017Z"}
{"msg":"and the evm execute all operations and Save the state on blockchain i think???","username":"bd","ts":"2018-12-20T17:44:20.949Z"}
{"msg":"what do you mean calculate code opcodes?","username":"efn","ts":"2018-12-20T17:45:48.435Z"}
{"msg":"code param to VM","username":"bd","ts":"2018-12-20T17:46:51.499Z"}
{"msg":"i want to do one post hook in each transaction, like if someone call one Contract, i want this transaction call the pay in other Contract","username":"bd","ts":"2018-12-20T17:48:01.585Z"}
{"msg":"i mean encode signature of pay() + paramters to VM execute","username":"bd","ts":"2018-12-20T17:49:51.824Z"}
{"msg":"add code after the `Call(` function","username":"efn","ts":"2018-12-20T17:50:33.587Z"}
{"msg":" vmach.Call(txCache, ctx.txe, caller, callee, *code*, ctx.tx.Data, value, &gas)","username":"bd","ts":"2018-12-20T17:50:35.610Z"}
{"msg":"if i call two VM's in one tx all state on both contracts is saved ? ","username":"bd","ts":"2018-12-20T17:51:52.185Z"}
{"msg":"beacause if AccountA \"call contract X\"-> create vm \"Contract X\" on the final this, i create/call vm (to pay() method for Contract Z) ","username":"bd","ts":"2018-12-20T17:53:57.709Z"}
{"msg":"all state is changed ? ","username":"bd","ts":"2018-12-20T17:54:22.808Z"}
{"msg":"I think all state is changed","username":"efn","ts":"2018-12-20T17:59:41.267Z"}
{"msg":"Do you know where are the validators' signatures kept?!","username":"efn","ts":"2018-12-20T18:00:00.451Z"}
{"msg":"Do you know where are the validators' signatures for a block kept?!","username":"efn","ts":"2018-12-20T18:00:00.451Z"}
{"msg":":sweat_smile: it's quite confuse !","username":"bd","ts":"2018-12-20T18:00:29.996Z"}
{"msg":"I don't think it goes in the header, which is weird, how can we get a light client, for instance, without the votes not in the header","username":"efn","ts":"2018-12-20T18:11:40.950Z"}
{"msg":"I don't think it goes in the header, how can we get a light client, for instance, without the votes not in the header","username":"efn","ts":"2018-12-20T18:11:40.950Z"}
{"msg":"I don't think it goes in the header, how can we get a light client, for instance, without the votes in the header","username":"efn","ts":"2018-12-20T18:11:40.950Z"}
{"msg":":shrug: ","username":"bd","ts":"2018-12-20T18:18:54.886Z"}
{"msg":"why you want a light client ? for test's","username":"bd","ts":"2018-12-20T18:20:12.327Z"}
{"msg":"why you want a light client ? for tests","username":"bd","ts":"2018-12-20T18:20:12.327Z"}
{"msg":"trying to implement some other protocol on top of burrow, I need some light-client features","username":"efn","ts":"2018-12-20T18:32:08.251Z"}
{"msg":"the block saves the hash of the precommits, but not the voted themselves, so those have to be gossiped somehow?!","username":"efn","ts":"2018-12-20T18:33:10.569Z"}
{"msg":"Maybe @silasdavis can help you with this, i don't know","username":"bd","ts":"2018-12-20T18:40:22.101Z"}
{"msg":"Has joined the channel.","username":"gut","ts":"2018-12-21T11:43:58.483Z","type":"uj"}
{"msg":"Hi. I'm trying to launch the single-full-nude sample. It is launching \"validator-index of 0 given but only 0 validators specified in GenesisDoc\" error, but the validator account is already there, and I'm providing its index. It specifies version 1.10 or above. I've got \"go1.11.1 linux/amd64\". Any addressed Go version issue?","username":"gut","ts":"2018-12-21T12:06:58.365Z"}
{"msg":"Hi, go 1.11 works fine","username":"phymbert","ts":"2018-12-21T12:24:15.143Z"}
{"msg":"it looks you missed somehow genesis file step","username":"phymbert","ts":"2018-12-21T12:24:49.444Z"}
{"msg":"there is no validators inside ","username":"phymbert","ts":"2018-12-21T12:25:00.123Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=mpahFrWCBpzGuS7BJ) @phymbert Dumb error, I named the file \"genesis.toml\" instead \"burrow.toml\". Just annoyed with the error output.","username":"gut","ts":"2018-12-21T13:05:53.961Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=mpahFrWCBpzGuS7BJ","url":"https://chat.hyperledger.org/channel/burrow?msg=mpahFrWCBpzGuS7BJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@gut what was the error output? If you're able to I would really like to improve any errors that are unhelpful. They can be a bad first impression...","username":"silasdavis","ts":"2018-12-21T17:21:36.358Z"}
{"msg":"@gut what was the error output? I would really like to improve any errors that are unhelpful. They can be a bad first impression...","username":"silasdavis","ts":"2018-12-21T17:21:36.358Z"}
{"msg":"(even better if you can fix it :) )","username":"silasdavis","ts":"2018-12-21T17:22:03.199Z"}
{"msg":"Hi, i'm try to understand how burrow submit new state to blockchain, every time i call one smart contract via burrow.js is a CallSim, why ?","username":"bd","ts":"2018-12-24T14:40:44.034Z"}
{"msg":"anyone ?","username":"bd","ts":"2018-12-24T14:41:21.406Z"}
{"msg":"Has joined the channel.","username":"Yeou","ts":"2018-12-25T02:28:38.314Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Druckzentrum-3D","ts":"2018-12-25T05:20:56.824Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Aschi","ts":"2018-12-27T08:20:18.634Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rsingh","ts":"2018-12-28T18:09:14.650Z","type":"uj"}
{"msg":"Hi, can anyone tell me the difference between Hyperledger Sawtooth and Hyperledger Burrow ? ","username":"rsingh","ts":"2018-12-28T18:09:48.995Z"}
{"msg":"Has joined the channel.","username":"MartinYakimov","ts":"2018-12-30T07:40:20.540Z","type":"uj"}
{"msg":"Hello, do I need to pay gas for Hyperledger burrow?","username":"MartinYakimov","ts":"2018-12-30T07:40:23.895Z"}
{"msg":"Hello, do I need to pay gas for Hyperledger Burrow?","username":"MartinYakimov","ts":"2018-12-30T07:40:23.895Z"}
{"msg":"@rsingh https://www.sdxcentral.com/articles/news/whats-the-difference-between-the-5-hyperledger-blockchain-projects/2017/09/","username":"MartinYakimov","ts":"2018-12-30T07:42:01.753Z"}
{"msg":"Has joined the channel.","username":"saranshj07","ts":"2018-12-30T23:27:16.101Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JonGeater","ts":"2018-12-31T12:31:44.971Z","type":"uj"}
{"msg":"Hi, all  can anyone help me to understand how the .yaml file is being formed from .sol file. Is there any way to form the .yaml file or we need to write it with ourself. ","username":"rsingh","ts":"2018-12-31T18:27:00.230Z"}
{"msg":"Has joined the channel.","username":"hteng","ts":"2019-01-01T08:08:47.250Z","type":"uj"}
{"msg":"Is it necessary to have go version above  1.10 ? ","username":"Ishee","ts":"2019-01-02T12:19:56.956Z"}
{"msg":"@rsingh you'll have to write the yaml file yourself. There are various examples in tests/jobs_fixtures/","username":"seanyoung","ts":"2019-01-02T17:17:37.947Z"}
{"msg":"@Ishee go version 1.10 will work fine","username":"seanyoung","ts":"2019-01-02T17:18:23.971Z"}
{"msg":"Has joined the channel.","username":"NedSnark","ts":"2019-01-02T19:43:53.380Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=j2LhfirRwZiydQXaq) @MartinYakimov tl.dr we utilize a gas schedule but it's a 0 cost communist system. see also, https://chat.hyperledger.org/channel/burrow?msg=dZk4Gnj9rrHpa6g4B and https://chat.hyperledger.org/channel/burrow?msg=NjykeWid7Zf2AuEPZ","username":"compleatang","ts":"2019-01-03T12:32:11.533Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=j2LhfirRwZiydQXaq","url":"https://chat.hyperledger.org/channel/burrow?msg=j2LhfirRwZiydQXaq","remote":true,"fileId":null,"fileName":null},{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=dZk4Gnj9rrHpa6g4B","url":"https://chat.hyperledger.org/channel/burrow?msg=dZk4Gnj9rrHpa6g4B","remote":true,"fileId":null,"fileName":null},{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=NjykeWid7Zf2AuEPZ","url":"https://chat.hyperledger.org/channel/burrow?msg=NjykeWid7Zf2AuEPZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=j2LhfirRwZiydQXaq) @MartinYakimov tl.dr burrow utilizes a gas schedule but it's a 0 cost communist system. see also, https://chat.hyperledger.org/channel/burrow?msg=dZk4Gnj9rrHpa6g4B and https://chat.hyperledger.org/channel/burrow?msg=NjykeWid7Zf2AuEPZ","username":"compleatang","ts":"2019-01-03T12:32:11.533Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=j2LhfirRwZiydQXaq","url":"https://chat.hyperledger.org/channel/burrow?msg=j2LhfirRwZiydQXaq","remote":true,"fileId":null,"fileName":null},{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=dZk4Gnj9rrHpa6g4B","url":"https://chat.hyperledger.org/channel/burrow?msg=dZk4Gnj9rrHpa6g4B","remote":true,"fileId":null,"fileName":null},{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=NjykeWid7Zf2AuEPZ","url":"https://chat.hyperledger.org/channel/burrow?msg=NjykeWid7Zf2AuEPZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"\nHi all, could any one tell me what the rpc error:  code = Unavailable desc means when deploying to a multi node setup? Thx","username":"sly514","ts":"2019-01-04T15:24:54.686Z"}
{"msg":"@sly514 usually that is followed by more information, like: \nrpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = \"transport: Error while dialing dial tcp 127.0.0.1:10997: connect: connection refused\"\n","username":"seanyoung","ts":"2019-01-04T15:47:15.688Z"}
{"msg":"however from memory usually this means that there was a tcp connection error","username":"seanyoung","ts":"2019-01-04T15:47:43.729Z"}
{"msg":"Ok thanks, I get simply, Unavailable Desc = transport is closing.  I am trying to deploy a simple transaction and I think my multi node config is messed up. I have set the ports in my docker .yaml but I have to properly copy the configs for each one of the nodes.  This is done by mounting the partitions right?  ","username":"sly514","ts":"2019-01-04T16:13:10.947Z"}
{"msg":"Ok thanks, I get simply, Unavailable Desc = transport is closing.  I am trying to deploy a simple transaction and I think my multi node config is messed up. I have set the ports in my docker .yaml but I have to properly copy the configs for each one of the nodes. ","username":"sly514","ts":"2019-01-04T16:13:10.947Z"}
{"msg":"Has joined the channel.","username":"MHBauer","ts":"2019-01-04T18:59:03.852Z","type":"uj"}
{"msg":"Has joined the channel.","username":"gokulalex","ts":"2019-01-06T13:49:15.124Z","type":"uj"}
{"msg":"@silasdavis Dear Silas. I've gone to JIRA to open a new BUR issue, but I've realized that there are no boards there. I think that it's better that someone that manages well the Burrow code solves the issue. So I describe it here for someone to take it: If I configure my _genesis-spec.toml_ and assign `burrow configure -s genesis-spec.toml -m \"burrowChain\" > *genesis*.toml` instead of `burrow configure -s genesis-spec.toml -m \"burrowChain\" > *burrow*.toml`. When I execute `burrow start --validator-index=0` the response is _could not update burrow config: unable to set ValidatorAddress from provided validator-index since no GenesisDoc/GenesisSpec provided_ instead of some point to the genesis.toml file.","username":"gut","ts":"2019-01-07T14:48:51.322Z"}
{"msg":"[continue] ...`burrow start --help` states that the genesis can be forced through -g option. But `burrow start --validator-index=0 -g genesis.toml` prints the `could not update burrow config: validator-index of 0 given but only 0 validators specified in GenesisDoc` error. The simple solution can be to add a note at the docs where it says that genesis file name must be forced to _burrow.toml_. But maybe I am missing something. Thanks.","username":"gut","ts":"2019-01-07T14:52:40.944Z"}
{"msg":"@gut Burrow team tracks issues on github -> https://github.com/hyperledger/burrow/issues . In any event, to get your node started however use the `--config` flag (short flag `-c` with your `genesis.toml` that you've generated). The `-g` or `--genesis` flag only works on a genesis.json which has been produced by `burrow configure` with the `--separate-genesis-doc` or `-w` flag. Since your `burrow configure` command is not leveraging a separate genesis.json then burrow will consider only the config file so that's why you should use that flag.","username":"compleatang","ts":"2019-01-07T21:36:53.988Z"}
{"msg":"@compleatang Thank you for your support. Using -c flag instead of -g it works as expected. My mistake was a documentation and help command misunderstanding. But as Silas said, a little help box at github or a change on explanation (you explained it so clear in your response...) from some expert at --help options could avoid a bad first impression for new developers interested on Burrow.","username":"gut","ts":"2019-01-08T10:22:08.068Z"}
{"msg":"Hi, working from the docker container for a multiple validator setup I cannot run the command\"NODE_0_URL=`curl -s 127.0.0.1:20001/network | jq -r '.result.ThisNode | [.ID, .ListenAddress] | join(\"@\") | ascii_downcase'`\" because curl is not installed. I'm about to use the ubuntu 16.04 docker and build things in there, is this the right way or would you suggest something else?","username":"sly514","ts":"2019-01-08T10:49:48.166Z"}
{"msg":"Hi,","username":"phymbert","ts":"2019-01-08T11:27:07.444Z"}
{"msg":" apt-get install curl in your docker file","username":"phymbert","ts":"2019-01-08T11:27:26.795Z"}
{"msg":"probably you will also need to install jq","username":"phymbert","ts":"2019-01-08T11:29:00.867Z"}
{"msg":"you can replace curl by wget installed by default on ubuntu afaik","username":"phymbert","ts":"2019-01-08T11:29:26.907Z"}
{"msg":"Has joined the channel.","username":"saeedi","ts":"2019-01-08T12:05:43.981Z","type":"uj"}
{"msg":"Has left the channel.","username":"sstone1","ts":"2019-01-08T16:02:36.673Z","type":"ul"}
{"msg":"@sly514 you can easily build a dockerfile via ubuntu, the burrow dockerfiles are based on alpine so you'd run `apk add --update curl jq` in the dockerfile.","username":"compleatang","ts":"2019-01-08T18:59:32.328Z"}
{"msg":"@completeang  Thanks++ ","username":"sly514","ts":"2019-01-08T19:44:01.725Z"}
{"msg":"Has joined the channel.","username":"DmitriPlakhov","ts":"2019-01-10T12:01:04.808Z","type":"uj"}
{"msg":"hi there could you help me resolve this error? Kernel shutting down due to panic: panic occurred in abci.App/InitChain: validator 5C5B28B19233FA5F53B92569DDF0B688F08B317D has power 9999999999 from Tendermint but power 0 from Burrow","username":"sly514","ts":"2019-01-10T20:06:12.381Z"}
{"msg":"Has joined the channel.","username":"vinken","ts":"2019-01-10T20:08:41.165Z","type":"uj"}
{"msg":"Hi it's me again, I would appreciate a hint on this error I got from a 2 validator setup: \n","username":"sly514","ts":"2019-01-10T21:30:18.835Z"}
{"msg":"burrow0       | Burrow_BurrowChain_B8849F-28214B_ValidatorID:06F23C9274EC1BE9BA46351D1DAD141E8E7A1E98: Kernel shutting down due to panic: panic occurred in abci.App/InitChain: validator 5C5B28B19233FA5F53B92569DDF0B688F08B317D has power 9999999999 from Tendermint but power 0 from Burrow\nburrow0       | goroutine 1 [running]:\nburrow0       | runtime/debug.Stack(0xc0008bb688, 0x7f3a4b8b7560, 0xc0001a87b0)\nburrow0       | \t/usr/lib/go/src/runtime/debug/stack.go:24 +0xa9\nburrow0       | github.com/hyperledger/burrow/consensus/tendermint/abci.(*App).InitChain.func1(0xc0001b6280)\nburrow0       | \t/root/go/src/github.com/hyperledger/burrow/consensus/tendermint/abci/app.go:103 +0x70\nburrow0       | panic(0x7f3a4b8b7560, 0xc0001a87b0)\nburrow0       | \t/usr/lib/go/src/runtime/panic.go:513 +0x1bd\nburrow0       | github.com/hyperledger/burrow/consensus/tendermint/abci.(*App).InitChain(0xc0001b6280, 0x0, 0xed3c9596f, 0x0, 0xc000232600, 0x19, 0xc000188cc0, 0xc0001207e0, 0x2, 0x2, ...)\n","username":"sly514","ts":"2019-01-10T21:30:20.044Z"}
{"msg":"etc..","username":"sly514","ts":"2019-01-10T21:30:36.140Z"}
{"msg":"Has joined the channel.","username":"chanwitkepha","ts":"2019-01-11T02:18:44.633Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dappaule","ts":"2019-01-11T07:56:03.983Z","type":"uj"}
{"msg":"Hello, I am looking for an Ethereum based permissioned platform solution and am unsure whether to start with Burrow or Quorum. My understanding is that a key difference is that Quorum has private transactions (i.e. makes transactions visible only to participants) while Burrow does not. Is this accurate and does anyone know if private transactions are planned in Burrow? Is this an limitation imposed through the tendermint consensus? thanks!","username":"dappaule","ts":"2019-01-11T08:02:23.587Z"}
{"msg":"Hello, I'm try to deploy contract accord to tutorial document.\nhttps://github.com/hyperledger/burrow/blob/develop/docs/quickstart/deploy-contracts.md\n\nBut it show error like this.\n\n*****Executing Job*****\n\nJob Name                                    => defaultAddr\n\n\n*****Executing Job*****\n\nJob Name                                    => deployStorageK\n\n\nError compiling contracts: Language error:\nstorage.sol:16:22: ParserError: The state mutability modifier \"constant\" was removed in version 0.5.0. Use \"view\" or \"pure\" instead.\n  function getBool() constant public returns (bool retBool) {\n                     ^------^\nstorage.sol:24:23: ParserError: The state mutability modifier \"constant\" was removed in version 0.5.0. Use \"view\" or \"pure\" instead.\n  function getBool2() constant public returns (bool retBool) {\n                      ^------^\nstorage.sol:32:21: ParserError: The state mutability modifier \"constant\" was removed in version 0.5.0. Use \"view\" or \"pure\" instead.\n  function getInt() constant public returns (int retInt) {\n                    ^------^\nstorage.sol:40:22: ParserError: The state mutability modifier \"constant\" was removed in version 0.5.0. Use \"view\" or \"pure\" instead.\n  function getUint() constant public returns (uint retUint) {\n                     ^------^\nstorage.sol:48:25: ParserError: The state mutability modifier \"constant\" was removed in version 0.5.0. Use \"view\" or \"pure\" instead.\n  function getAddress() constant public returns (address retAddress) {\n                        ^------^\nstorage.sol:56:23: ParserError: The state mutability modifier \"constant\" was removed in version 0.5.0. Use \"view\" or \"pure\" instead.\n  function getBytes() constant public returns (bytes32 retBytes) {\n                      ^------^\nstorage.sol:64:24: ParserError: The state mutability modifier \"constant\" was removed in version 0.5.0. Use \"view\" or \"pure\" instead.\n  function getString() constant public returns (string retString) {\n                       ^------^\nPlease help\n\nMy solc compiler version is \nVersion: 0.5.2+commit.1df8f40c.Linux.g++\n\nThank you","username":"chanwitkepha","ts":"2019-01-11T09:50:06.617Z"}
{"msg":"@chanwitkepha in your Solidity source code, replace constant with view or pure (dependant on whether the functions reads contract storage or not). You could try both and see if the solidity complains.","username":"seanyoung","ts":"2019-01-11T13:18:01.548Z"}
{"msg":"Hi, I have been struggling with the multiple validator setup for quite some time and have a few questions regarding my setup.\nIs it possible to have the two validators in a docker .yaml file?\nfor instance, the command:\n\nNODE_0_URL=`curl -s 127.0.0.1:20001/network | jq -r '.result.ThisNode | [.ID, .ListenAddress] | join(\"@\") | ascii_downcase'`\nsed -i s%PUT_HERE_NODE_0_ID@LISTEN_EXTERNAL_ADDRESS%${NODE_0_URL}% .burrow_val1.toml\n\nruns in the command line fine but not in the  entrypoint:  because of the \"@\"\n\nAlso wouldn't curl -s 127.0.0.1:20001/network call the container's address and retreive the container's own info?\n\nI have tried creating a static network, this is my first node's config: https://pastebin.com/ANxUs4ad\n\n","username":"sly514","ts":"2019-01-11T14:21:41.080Z"}
{"msg":"Hi, I have been struggling with the multiple validator setup for quite some time and have a few questions regarding my setup.\nIs it possible to have the two validators in a docker .yaml file?\nfor instance, the command:\n\nNODE_0_URL=`curl -s 127.0.0.1:20001/network | jq -r '.result.ThisNode | [.ID, .ListenAddress] | join(\"@\") | ascii_downcase'`\nsed -i s%PUT_HERE_NODE_0_ID@LISTEN_EXTERNAL_ADDRESS%${NODE_0_URL}% .burrow_val1.toml\n\nruns in the command line fine but not in the  entrypoint:  because of the \"@\"\n\nAlso wouldn't curl -s 127.0.0.1:20001/network call the container's address and retreive the container's own info?\n\nI have tried creating a static network, this is my first node's config: https://pastebin.com/ANxUs4ad\n\n","username":"sly514","ts":"2019-01-11T14:21:41.080Z"}
{"msg":"Hi, I have been struggling with the multiple validator setup for quite some time and have a few questions regarding my setup.\nIs it possible to have the two validators in a docker .yaml file?\nfor instance, the command:\n\nNODE_0_URL=`curl -s 127.0.0.1:20001/network | jq -r '.result.ThisNode | [.ID, .ListenAddress] | join(\"@\") | ascii_downcase'`\nsed -i s%PUT_HERE_NODE_0_ID@LISTEN_EXTERNAL_ADDRESS%${NODE_0_URL}% .burrow_val1.toml\n\nruns in the command line fine but not in the  .yaml entrypoint:  because of the \"@\"\n\nAlso wouldn't curl -s 127.0.0.1:20001/network call the container's address and retreive the container's own info?\n\nI have tried creating a static network, this is my first node's config: https://pastebin.com/ANxUs4ad\n\n","username":"sly514","ts":"2019-01-11T14:21:41.080Z"}
{"msg":"thank you","username":"sly514","ts":"2019-01-11T14:21:51.687Z"}
{"msg":"Hi, I have been struggling with the multiple validator setup for quite some time and have a few questions regarding my setup.\nIs it possible to have the two validators in a docker .yaml file?\nfor instance, the command:\n\nNODE_0_URL=`curl -s 127.0.0.1:20001/network | jq -r '.result.ThisNode | [.ID, .ListenAddress] | join(\"@\") | ascii_downcase'`\nsed -i s%PUT_HERE_NODE_0_ID@LISTEN_EXTERNAL_ADDRESS%${NODE_0_URL}% .burrow_val1.toml\n\nruns in the command line fine but not in the  .yaml entrypoint:  because of the \"@\"\n\nAlso wouldn't curl -s 127.0.0.1:20001/network call the container's address and retreive the container's own info?\n\nI have tried creating a static network, this is my first node's config: https://pastebin.com/ANxUs4ad\n\n","username":"sly514","ts":"2019-01-11T14:36:20.511Z"}
{"msg":"Hi, I have been struggling with the multiple validator setup for quite some time and have a few questions regarding my setup.\nIs it possible to have the two validators in a docker .yaml file?\nfor instance, the command:\n\nNODE_0_URL=`curl -s 127.0.0.1:20001/network | jq -r '.result.ThisNode | [.ID, .ListenAddress] | join(\"@\") | ascii_downcase'`\nsed -i s%PUT_HERE_NODE_0_ID@LISTEN_EXTERNAL_ADDRESS%${NODE_0_URL}% .burrow_val1.toml\n\nruns in the command line fine but not in the  .yaml entrypoint:  because of the \"@\"\n\nAlso wouldn't curl -s 127.0.0.1:20001/network call the container's address and retreive the container's own info?\n\nI have tried creating a static network, this is my first node's config: https://pastebin.com/ANxUs4ad\n\n","username":"sly514","ts":"2019-01-11T14:36:20.511Z"}
{"msg":"Hi, I have been struggling with the multiple validator setup for quite some time and have a few questions regarding my setup.\nIs it possible to have the two validators in a docker .yaml file?\nfor instance, the command:\n\nNODE_0_URL=`curl -s 127.0.0.1:20001/network | jq -r '.result.ThisNode | [.ID, .ListenAddress] | join(\"@\") | ascii_downcase'`\nsed -i s%PUT_HERE_NODE_0_ID@LISTEN_EXTERNAL_ADDRESS%${NODE_0_URL}% .burrow_val1.toml\n\nruns in the command line fine but not in the  .yaml entrypoint:  because of the \"@\"\n\nAlso wouldn't curl -s 127.0.0.1:20001/network call the container's address and retreive the container's own info?\n\nI have tried creating a static network, this is my first node's config: https://pastebin.com/ANxUs4ad\n\nfor this thsi is the output I get: burrow0       | {\"appHeight\":0,\"caller\":\"replay.go:275\",\"component\":\"Tendermint\",\"log_channel\":\"Info\",\"message\":\"ABCI Replay Blocks\",\"module\":\"consensus\",\"run_id\":\"294f97aa-15ae-11e9-8aab-aa9b70dc0f37\",\"scope\":\"tendermint.NewNode\",\"stateHeight\":0,\"storeHeight\":0,\"time\":\"2019-01-11T14:35:37.360137753Z\"}\nburrow0       | Burrow_BurrowChain_B8849F-B5F979_ValidatorID:A0AAA0F4D30F4766242B923ECF102D81265B8E02: Kernel shutting down due to panic: panic occurred in abci.App/InitChain: validator 5C5B28B19233FA5F53B92569DDF0B688F08B317D has power 9999999999 from Tendermint but power 0 from Burrow\n thanks","username":"sly514","ts":"2019-01-11T14:36:20.511Z"}
{"msg":"@seanyoung Thank you very much.","username":"chanwitkepha","ts":"2019-01-11T23:24:09.331Z"}
{"msg":"Question: I understand that an event's Index is relative to the event's transaction Index, which is relative to the block height (right?). Unlike standard ethereum where the log index is relative to the block. Then why does a GRPC response to GetEvents not include the transaction index? When receiving an event this way, it's not possible to know if it happened before or after some point in blockchain (where a \"point in blockchain\" is a tuple (event index, tx index, block height). My current workaround is to use GetTxs instead of GetEvents.","username":"JoeriExelmans","ts":"2019-01-14T09:18:22.426Z"}
{"msg":"Has joined the channel.","username":"shubhendu-abhishek","ts":"2019-01-17T10:05:06.765Z","type":"uj"}
{"msg":"Another question: I understand accounts in Burrow have permissions (such as: send, call, createContract) that are supposedly checked on the EVM level, but I haven't noticed these permissions actually being enforced. For instance, I was able to deploy a contract with an account that does not have the 'createContract' permission. What is the status here?","username":"JoeriExelmans","ts":"2019-01-17T11:16:22.472Z"}
{"msg":"Hi could you please instruct me (if possible) on how to communicate with the keys server other than through the command line?","username":"sly514","ts":"2019-01-18T14:16:35.026Z"}
{"msg":"Hi could you tell me if my setup is ok?","username":"sly514","ts":"2019-01-18T14:16:35.026Z"}
{"msg":"Has joined the channel.","username":"dimchansky","ts":"2019-01-18T15:02:56.709Z","type":"uj"}
{"msg":"Hi all,\nDoes the burrow have Ethereum JSON RPC compatible endpoint?","username":"dimchansky","ts":"2019-01-18T15:03:21.384Z"}
{"msg":"@sly514 communication with the keys server over tcp port 10997. The protocol is grpc, the protobuf file for this here: https://github.com/hyperledger/burrow/blob/develop/protobuf/keys.proto you will need to generate a client for your language of choice.","username":"seanyoung","ts":"2019-01-18T15:37:38.734Z"}
{"msg":"@JoeriExelmans check the global permissions on the chain; these set the defaults for new accounts. By default createContract is turned on IIRC. ","username":"compleatang","ts":"2019-01-18T15:41:52.144Z"}
{"msg":"@dimchansky no, we use GRPC predominantly. There's an http->JSON endpoint as well for more information. ","username":"compleatang","ts":"2019-01-18T15:42:21.246Z"}
{"msg":"Joeri, on your other question probably better to drop an issue on GH with what you'd like from the query endpoint to help your use case. We can take a look at it. Of course PRs welcome :)","username":"compleatang","ts":"2019-01-18T15:43:19.767Z"}
{"msg":"Has joined the channel.","username":"mabhi","ts":"2019-01-20T17:22:12.733Z","type":"uj"}
{"msg":"Hi, could you tell me if my setup is correct? /home/burrow # curl -s 192.168.144.5:20001/consensus\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"\",\n  \"result\": {\n    \"round_state\": {\n      \"height\": \"1\",\n      \"round\": \"0\",\n      \"step\": 1,\n      \"start_time\": \"2019-01-21T16:08:15.7393207Z\",\n      \"commit_time\": \"0001-01-01T00:00:00Z\",\n      \"validators\": {\n        \"validators\": [\n          {\n            \"address\": \"0AFD6FA0F51612658E4708425C493B0F3ADCF80E\",\n            \"pub_key\": {\n              \"type\": \"tendermint/PubKeyEd25519\",\n              \"value\": \"1OdXg6aqXCsAuAUnnvI7DAy+0r0qlGj1bKAiNlfddxY=\"\n            },\n            \"voting_power\": \"9999999999\",\n            \"proposer_priority\": \"-19999999998\"\n          },\n          {\n            \"address\": \"51D8DC34B7FF2400A6379D7DDCB632882767132A\",\n            \"pub_key\": {\n              \"type\": \"tendermint/PubKeyEd25519\",\n              \"value\": \"kveDHicsiY2RpL8h4Bc2D7jkw0nQ3JT8jxV++4sL6PA=\"\n            },\n            \"voting_power\": \"9999999999\",\n            \"proposer_priority\": \"0\"\n          }\n        ],\n        \"proposer\": {\n          \"address\": \"0AFD6FA0F51612658E4708425C493B0F3ADCF80E\",\n          \"pub_key\": {\n            \"type\": \"tendermint/PubKeyEd25519\",\n            \"value\": \"1OdXg6aqXCsAuAUnnvI7DAy+0r0qlGj1bKAiNlfddxY=\"\n          },\n          \"voting_power\": \"9999999999\",\n          \"proposer_priority\": \"-19999999998\"\n        }\n      },\n      \"proposal\": null,\n      \"proposal_block\": null,\n      \"proposal_block_parts\": null,\n      \"locked_round\": \"-1\",\n      \"locked_block\": null,\n      \"locked_block_parts\": null,\n      \"valid_round\": \"-1\",\n      \"valid_block\": null,\n      \"valid_block_parts\": null,\n      \"votes\": [\n        {\n          \"round\": \"0\",\n          \"prevotes\": [\n            \"nil-Vote\",\n            \"nil-Vote\"\n          ],\n          \"prevotes_bit_array\": \"BA{2:__} 0/19999999998 = 0.00\",\n          \"precommits\": [\n            \"nil-Vote\",\n            \"nil-Vote\"\n          ],\n          \"precommits_bit_array\": \"BA{2:__} 0/19999999998 = 0.00\"\n        }\n      ],\n      \"commit_round\": \"-1\",\n      \"last_commit\": null,\n      \"last_validators\": {\n        \"validators\": [],\n        \"proposer\": null\n      }\n    },\n    \"peers\": []\n  }\n","username":"sly514","ts":"2019-01-21T16:11:54.520Z"}
{"msg":"curl -s 192.168.144.5:20001/consensus\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"\",\n  \"result\": {\n    \"round_state\": {\n      \"height\": \"1\",\n      \"round\": \"0\",\n      \"step\": 1,\n      \"start_time\": \"2019-01-21T16:08:15.7393207Z\",\n      \"commit_time\": \"0001-01-01T00:00:00Z\",\n      \"validators\": {\n        \"validators\": [\n          {\n            \"address\": \"0AFD6FA0F51612658E4708425C493B0F3ADCF80E\",\n            \"pub_key\": {\n              \"type\": \"tendermint/PubKeyEd25519\",\n              \"value\": \"1OdXg6aqXCsAuAUnnvI7DAy+0r0qlGj1bKAiNlfddxY=\"\n            },\n            \"voting_power\": \"9999999999\",\n            \"proposer_priority\": \"-19999999998\"\n          },\n          {\n            \"address\": \"51D8DC34B7FF2400A6379D7DDCB632882767132A\",\n            \"pub_key\": {\n              \"type\": \"tendermint/PubKeyEd25519\",\n              \"value\": \"kveDHicsiY2RpL8h4Bc2D7jkw0nQ3JT8jxV++4sL6PA=\"\n            },\n            \"voting_power\": \"9999999999\",\n            \"proposer_priority\": \"0\"\n          }\n        ],\n        \"proposer\": {\n          \"address\": \"0AFD6FA0F51612658E4708425C493B0F3ADCF80E\",\n          \"pub_key\": {\n            \"type\": \"tendermint/PubKeyEd25519\",\n            \"value\": \"1OdXg6aqXCsAuAUnnvI7DAy+0r0qlGj1bKAiNlfddxY=\"\n          },\n          \"voting_power\": \"9999999999\",\n          \"proposer_priority\": \"-19999999998\"\n        }\n      },\n      \"proposal\": null,\n      \"proposal_block\": null,\n      \"proposal_block_parts\": null,\n      \"locked_round\": \"-1\",\n      \"locked_block\": null,\n      \"locked_block_parts\": null,\n      \"valid_round\": \"-1\",\n      \"valid_block\": null,\n      \"valid_block_parts\": null,\n      \"votes\": [\n        {\n          \"round\": \"0\",\n          \"prevotes\": [\n            \"nil-Vote\",\n            \"nil-Vote\"\n          ],\n          \"prevotes_bit_array\": \"BA{2:__} 0/19999999998 = 0.00\",\n          \"precommits\": [\n            \"nil-Vote\",\n            \"nil-Vote\"\n          ],\n          \"precommits_bit_array\": \"BA{2:__} 0/19999999998 = 0.00\"\n        }\n      ],\n      \"commit_round\": \"-1\",\n      \"last_commit\": null,\n      \"last_validators\": {\n        \"validators\": [],\n        \"proposer\": null\n      }\n    },\n    \"peers\": []\n  }\n","username":"sly514","ts":"2019-01-21T16:13:17.568Z"}
{"msg":"Hi can anyone validate my setup? thx                                                                                                                                                                                                                      curl -s 192.168.144.5:20001/consensus\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"\",\n  \"result\": {\n    \"round_state\": {\n      \"height\": \"1\",\n      \"round\": \"0\",\n      \"step\": 1,\n      \"start_time\": \"2019-01-21T16:08:15.7393207Z\",\n      \"commit_time\": \"0001-01-01T00:00:00Z\",\n      \"validators\": {\n        \"validators\": [\n          {\n            \"address\": \"0AFD6FA0F51612658E4708425C493B0F3ADCF80E\",\n            \"pub_key\": {\n              \"type\": \"tendermint/PubKeyEd25519\",\n              \"value\": \"1OdXg6aqXCsAuAUnnvI7DAy+0r0qlGj1bKAiNlfddxY=\"\n            },\n            \"voting_power\": \"9999999999\",\n            \"proposer_priority\": \"-19999999998\"\n          },\n          {\n            \"address\": \"51D8DC34B7FF2400A6379D7DDCB632882767132A\",\n            \"pub_key\": {\n              \"type\": \"tendermint/PubKeyEd25519\",\n              \"value\": \"kveDHicsiY2RpL8h4Bc2D7jkw0nQ3JT8jxV++4sL6PA=\"\n            },\n            \"voting_power\": \"9999999999\",\n            \"proposer_priority\": \"0\"\n          }\n        ],\n        \"proposer\": {\n          \"address\": \"0AFD6FA0F51612658E4708425C493B0F3ADCF80E\",\n          \"pub_key\": {\n            \"type\": \"tendermint/PubKeyEd25519\",\n            \"value\": \"1OdXg6aqXCsAuAUnnvI7DAy+0r0qlGj1bKAiNlfddxY=\"\n          },\n          \"voting_power\": \"9999999999\",\n          \"proposer_priority\": \"-19999999998\"\n        }\n      },\n      \"proposal\": null,\n      \"proposal_block\": null,\n      \"proposal_block_parts\": null,\n      \"locked_round\": \"-1\",\n      \"locked_block\": null,\n      \"locked_block_parts\": null,\n      \"valid_round\": \"-1\",\n      \"valid_block\": null,\n      \"valid_block_parts\": null,\n      \"votes\": [\n        {\n          \"round\": \"0\",\n          \"prevotes\": [\n            \"nil-Vote\",\n            \"nil-Vote\"\n          ],\n          \"prevotes_bit_array\": \"BA{2:__} 0/19999999998 = 0.00\",\n          \"precommits\": [\n            \"nil-Vote\",\n            \"nil-Vote\"\n          ],\n          \"precommits_bit_array\": \"BA{2:__} 0/19999999998 = 0.00\"\n        }\n      ],\n      \"commit_round\": \"-1\",\n      \"last_commit\": null,\n      \"last_validators\": {\n        \"validators\": [],\n        \"proposer\": null\n      }\n    },\n    \"peers\": []\n  }\n","username":"sly514","ts":"2019-01-21T16:13:17.568Z"}
{"msg":"failed to list key: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = \"transport: Error while dialing dial tcp 172.26.0.2:10997: connect: connection refused\"","username":"sly514","ts":"2019-01-21T19:37:16.561Z"}
{"msg":"thank you @seanyoung ","username":"sly514","ts":"2019-01-21T19:54:29.768Z"}
{"msg":"Has joined the channel.","username":"AnhDinh","ts":"2019-01-22T07:13:14.594Z","type":"uj"}
{"msg":"Question: it says \"Burrow exposes REST and JSON-RPC endpoints to interact with the blockchain network\". But where are the endpoints? Are there REST APIs or NodeJS APIs that one can use to write a client to interact with Burrow?","username":"AnhDinh","ts":"2019-01-22T07:14:38.355Z"}
{"msg":"@AnhDinh see https://www.npmjs.com/package/@monax/burrow","username":"seanyoung","ts":"2019-01-22T09:25:56.791Z"}
{"msg":"Has joined the channel.","username":"harishbm34","ts":"2019-01-22T10:14:59.150Z","type":"uj"}
{"msg":"Hi All, I am preparing the test-net for Hyperledger - burrow. To do this, how can we generate private key, public key and validators for the nodes?","username":"harishbm34","ts":"2019-01-22T10:16:34.134Z"}
{"msg":"Hi, I have setup my keys server in a separate container and after having exposed and published 10997 I get : failed to list key: rpc error: code = Unavailable desc = transport is closing This is from a command line from another container within the docker network or from my host. Will the command line work remote also or grpc client is mandatory?","username":"sly514","ts":"2019-01-22T10:34:57.085Z"}
{"msg":"getting messages like this: \"caller\":\"switch.go:493\",\"component\":\"Tendermint\",\"err\":\"incompatible: Peer is on a different network. Got BurrowChain_B8849F-D84959, expected BurrowChain_B8849F-07E27F\",\"log_channel\":\"Info\",\"message\":\"Inbound Peer rejected\",\"module\":\"p2p\",\"numPeers\":0,\"run_id\":\"a31f6078-1e3e-11e9-868a-e14dbc98940e\",\"scope\":\"tendermint.NewNode\",\"time\":\"2019-01-22T12:10:02.8677948Z\"}\n","username":"sly514","ts":"2019-01-22T12:24:09.437Z"}
{"msg":"keys --host 192.168.192.3  list\nfailed to list key: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = \"transport: Error while dialing dial tcp 192.168.192.3:10997: connect: connection refused\"","username":"sly514","ts":"2019-01-22T14:29:25.047Z"}
{"msg":"sly514: that looks like a networking problem. How are you setting up your burrow network?","username":"seanyoung","ts":"2019-01-22T15:03:26.023Z"}
{"msg":"@sly514 ^^","username":"seanyoung","ts":"2019-01-22T15:03:36.025Z"}
{"msg":"Hi this is my docker .yaml https://pastebin.com/1vAqtaHq","username":"sly514","ts":"2019-01-22T15:17:18.706Z"}
{"msg":"So a container for esch node and one for the keys server","username":"sly514","ts":"2019-01-22T15:17:41.142Z"}
{"msg":"So a container for each node and one for the keys server","username":"sly514","ts":"2019-01-22T15:17:41.142Z"}
{"msg":"I can't see what test3.py is or what it does","username":"seanyoung","ts":"2019-01-22T15:48:13.045Z"}
{"msg":"you need to make sure that the keys server is running in the container, and that it is listening. You can check that with ss -tl","username":"seanyoung","ts":"2019-01-22T15:49:35.317Z"}
{"msg":"# netstat -l\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       \ntcp        0      0 127.0.0.11:46493        0.0.0.0:*               LISTEN      \ntcp        0      0 localhost:10997         0.0.0.0:*               LISTEN      \nudp        0      0 127.0.0.11:45196        0.0.0.0:*                           \n","username":"sly514","ts":"2019-01-22T16:56:34.124Z"}
{"msg":"@harishbm34 `burrow keys` is the starting point you can use.","username":"compleatang","ts":"2019-01-22T17:55:07.369Z"}
{"msg":"Hi! still cant' get my keys server to work outside of the container.... Can you tell me anything about the [Keys] section of the config file?","username":"sly514","ts":"2019-01-22T20:44:12.226Z"}
{"msg":"Hi! still cant' get my keys server to work outside of the container.... Can you tell me anything about the [Keys] section of the .burrow_val0.toml file?","username":"sly514","ts":"2019-01-22T20:44:12.226Z"}
{"msg":"[Keys]\n  GRPCServiceEnabled = true\n  AllowBadFilePermissions = true\n  RemoteAddress = \"\"\n  KeysDirectory = \"/root/.keys\"","username":"sly514","ts":"2019-01-22T20:44:14.206Z"}
{"msg":"@seanyoung this is the content of the test3.python","username":"sly514","ts":"2019-01-22T21:08:58.416Z"}
{"msg":"import toml\nimport json\nimport socket\nfrom dotenv import load_dotenv, find_dotenv\nimport os\nimport subprocess\nimport time\n\ndef main():\n   \n        \n        try:\n            with open('/root/.sawtooth/keys/my_key.priv') as key_fd:\n                private_key_str = key_fd.read().strip()\n        except OSError as err:\n            raise Exception(\n                'Failed to read private key {}: {}'.format(key_file, str(err)))\n                \n        subprocess.Popen(['burrow', 'keys', 'server', '--dir', '/root/.keys' ])\n        time.sleep(3)       \n        out = subprocess.check_output([\"burrow\", \"keys\", \"import\", \"-n\", \"-t\", \"secp256k1\",  private_key_str])\n        while(1):\n            time.sleep(3)  \n            print('burrow_key_server')\n\n       \n\nif __name__ == \"__main__\":\n    main()","username":"sly514","ts":"2019-01-22T21:09:00.378Z"}
{"msg":"Just starting the server and importing some keys","username":"sly514","ts":"2019-01-22T21:09:15.156Z"}
{"msg":"Hi again, I think I am getting closer to where my problem lies. would the EnvVar: \"MONAX_KEYS_HOST\" and EnvVar: \"MONAX_KEYS_PORT\" have anything to do with me not being able to connect by any chance?","username":"sly514","ts":"2019-01-23T14:20:24.385Z"}
{"msg":"I do not have these variables set","username":"sly514","ts":"2019-01-23T14:20:40.499Z"}
{"msg":"@sly514 you do not need to have those environment variables set. Most likely your python script is not starting burrow keys correctly. You are starting burrow keys with subprocess.Popen() but you are not reading the output of the popen, so any errors will be lost","username":"seanyoung","ts":"2019-01-23T15:12:25.723Z"}
{"msg":"(if I'm reading it correctly)","username":"seanyoung","ts":"2019-01-23T15:12:41.735Z"}
{"msg":"ok super thx","username":"sly514","ts":"2019-01-23T15:21:46.625Z"}
{"msg":"@seanyoung if I log in toi my keys server container the output of ps aux is:","username":"sly514","ts":"2019-01-23T16:59:28.396Z"}
{"msg":"ps aux\nPID   USER     TIME  COMMAND\n    1 root      0:00 python /root/test3.py\n    9 root      0:00 burrow keys server --dir /root/.keys\n   31 root      0:00 sh\n   58 root      0:00 ps aux","username":"sly514","ts":"2019-01-23T16:59:29.427Z"}
{"msg":"So my server is running","username":"sly514","ts":"2019-01-23T16:59:35.196Z"}
{"msg":"does \"burrow keys list\" do anything in the container?","username":"seanyoung","ts":"2019-01-23T17:28:33.234Z"}
{"msg":"yes","username":"sly514","ts":"2019-01-23T17:57:51.129Z"}
{"msg":"it lists the keys","username":"sly514","ts":"2019-01-23T17:57:57.236Z"}
{"msg":"Thanks for your help Sean this looks more and more like a docker issue","username":"sly514","ts":"2019-01-23T19:35:05.351Z"}
{"msg":"Hi, Could you please someone help me to setup the testnet of Hyperledger-burrow?","username":"harishbm34","ts":"2019-01-24T04:35:14.593Z"}
{"msg":"Hi, Why do we get the below error?","username":"harishbm34","ts":"2019-01-24T09:00:04.662Z"}
{"msg":"Sourcing config from first of: Config file at 'burrow.toml' then defaults\nSourcing config from Config file at 'burrow.toml'\ncould not obtain config: unknown permission 16383","username":"harishbm34","ts":"2019-01-24T09:00:07.841Z"}
{"msg":"when trying to setup the testnet","username":"harishbm34","ts":"2019-01-24T09:00:29.951Z"}
{"msg":"can you pastebin your burrow.toml?","username":"compleatang","ts":"2019-01-24T10:12:09.098Z"}
{"msg":"which step in the example tutorials are you on which is causing this?","username":"compleatang","ts":"2019-01-24T10:12:25.794Z"}
{"msg":"@harishbm34 in burrow 0.23 we changed the permissions field in the genesis doc. It used to be number which was interpreted as bit fields, now it is strings  which is much more readable:\n        \"GlobalPermissions\": {\n                \"Base\": {\n                        \"Perms\": \"send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | hasRole\",\n                        \"SetBit\": \"root | send | call | createContract | createAccount | bond | name | proposal | input | batch | hasBase | setBase | unsetBase | setGlobal | hasRole | addRole | removeRole\"\n                }\n        },\n","username":"seanyoung","ts":"2019-01-24T10:16:41.013Z"}
{"msg":"you might need to re-generate your genesis doc","username":"seanyoung","ts":"2019-01-24T10:16:53.673Z"}
{"msg":"@compleatang : I am trying to set up the test - net with two nodes. As a first step, I have run the burrow with the following option \"burrow spec -p2 -f2 | burrow configure -s- > burrow.toml \" . After this step, \"burrow.toml\" will have 2 accounts , 2 validators and 2 participants. After this, I have added the address@ip_address of one node to the PersistancePeers=\"\". Similarly, added the address of another node to the \"persistancePeer=\"\" of another node. Then, I am trying to run the burrow with the following option \"burrow start --validator-index=0\". But this is not working. Could you please share the steps to set-up the test-node if you have please.","username":"harishbm34","ts":"2019-01-24T10:50:03.282Z"}
{"msg":"@compleatang : I am trying to set up the test - net with two nodes. As a first step, I have run the burrow with the following option \"burrow spec -p2 -f2 | burrow configure -s- > burrow.toml \" . After this step, \"burrow.toml\" will have 2 accounts , 2 validators and 2 participants. After this, I have added the address@ip_address:port to \"burrow.toml\" of one node at the PersistancePeers=\"\" section. Similarly, added the address of another node to the \"persistancePeer=\"\" section of \"burrow.toml\" of another node. Then, I am trying to run the burrow with the following option \"burrow start --validator-index=0\". But this is not working. Could you please share the steps to set-up the test-node if you have please.","username":"harishbm34","ts":"2019-01-24T10:50:03.282Z"}
{"msg":"@seanyoung : yes, you are right.. If I follow the same step on \"linux\" i am getting the permission as you said. But on Mac, it is completely different. Please guide me on this..!!","username":"harishbm34","ts":"2019-01-24T10:53:11.852Z"}
{"msg":"Has joined the channel.","username":"NitheshS","ts":"2019-01-24T11:37:44.747Z","type":"uj"}
{"msg":"https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/multiple-validators.md","username":"compleatang","ts":"2019-01-24T12:02:08.121Z"}
{"msg":"@harishbm34 you may have an old burrow on your osx machine. make sure you have the same version as that changed between (i think) 0.21. and now.","username":"compleatang","ts":"2019-01-24T12:02:45.372Z"}
{"msg":"@compleatang : Thanks a lot.!! I am able to set-up :)","username":"harishbm34","ts":"2019-01-24T14:50:36.320Z"}
{"msg":"Hi, was wondering how to setup the config file if I am to run \"burrow keys server --config  keyserver_conf_file.toml\". Do I fill in the [Keys] section only or how does this work? ","username":"sly514","ts":"2019-01-24T17:46:33.931Z"}
{"msg":"Hi, was wondering how to setup the config file if I am to run \"burrow keys server --config  keyserver_conf_file.toml\". Do I fill in the [Keys] section only or how does this work? What about the --keys-url flag for burrow configure?","username":"sly514","ts":"2019-01-24T17:46:33.931Z"}
{"msg":"ah ok unc DefaultKeysConfig() *KeysConfig {\n\treturn &KeysConfig{\n\t\t// Default Monax keys port\n\t\tGRPCServiceEnabled:      true,\n\t\tAllowBadFilePermissions: false,\n\t\tRemoteAddress:           \"\",\n\t\tKeysDirectory:           DefaultKeysDir,\n\t}\n}","username":"sly514","ts":"2019-01-24T17:46:33.931Z"}
{"msg":"unc DefaultKeysConfig() *KeysConfig {\n\treturn &KeysConfig{\n\t\t// Default Monax keys port\n\t\tGRPCServiceEnabled:      true,\n\t\tAllowBadFilePermissions: false,\n\t\tRemoteAddress:           \"\",\n\t\tKeysDirectory:           DefaultKeysDir,\n\t}\n}","username":"sly514","ts":"2019-01-24T17:46:33.931Z"}
{"msg":"I assume =the remote address field is going to be the address of the keys server","username":"sly514","ts":"2019-01-24T22:59:40.863Z"}
{"msg":"I assume the remote address field is going to be the address of the keys server, in that case what format? tcp://address:port?","username":"sly514","ts":"2019-01-24T22:59:40.863Z"}
{"msg":"Has joined the channel.","username":"Spar","ts":"2019-01-25T01:50:26.156Z","type":"uj"}
{"msg":"@sly514 just hostL:post ","username":"seanyoung","ts":"2019-01-25T09:38:46.928Z"}
{"msg":"I have followed the installation instructions on github and I've created the burrow binary. However when I follow the create single node instructions I get bash: burrow: command not found. This is from inside the burrow directory. I'm on macOS Mojave.","username":"Spar","ts":"2019-01-25T14:45:46.090Z"}
{"msg":"I have also run the burrow binary and I get the start up dialog that shows usage syntax and commands but any burrow command I type gets that error.","username":"Spar","ts":"2019-01-25T14:55:04.986Z"}
{"msg":"go version go1.11.4 darwin/amd64\n","username":"Spar","ts":"2019-01-25T17:31:15.961Z"}
{"msg":"@Spar that's a basic path issue. Make sure your gopath/bin is in your path. There's lots of help on google for this. It's a matter of how go deals with things. Or if you ran make build then just call the binary directly. Or move the binary somewhere into your path. ","username":"compleatang","ts":"2019-01-25T17:42:52.853Z"}
{"msg":"Thats kind of what I thought. Ill keep screwing around with it, Thanks.","username":"Spar","ts":"2019-01-25T17:49:08.314Z"}
{"msg":"I got it running, thanks!","username":"Spar","ts":"2019-01-25T19:06:14.801Z"}
{"msg":":-)","username":"compleatang","ts":"2019-01-27T22:33:31.982Z"}
{"msg":"Has joined the channel.","username":"mwklein","ts":"2019-01-28T02:03:29.802Z","type":"uj"}
{"msg":"Has joined the channel.","username":"peter.danko","ts":"2019-01-28T11:33:53.882Z","type":"uj"}
{"msg":"Has left the channel.","username":"peter.danko","ts":"2019-01-28T11:41:08.179Z","type":"ul"}
{"msg":"Has joined the channel.","username":"XristosPatsonakis","ts":"2019-01-29T09:48:51.776Z","type":"uj"}
{"msg":"Hello everyone, I would like to ask if HyperLedger burrow has a working lightweight node implementation?","username":"XristosPatsonakis","ts":"2019-01-29T09:49:48.884Z"}
{"msg":"not at this time.","username":"compleatang","ts":"2019-01-30T10:15:01.656Z"}
{"msg":"Hi, where can I see the rpc methods supported? for instance, I want to make a call to get a block, how can I do so?! I'm using deploy/def/client.go for the client implementation","username":"efn","ts":"2019-01-30T13:16:27.781Z"}
{"msg":"Hi, where can I see the rpc methods supported? for instance, I want to make a call to get a block, how can I do so?! I'm using deploy/def/client.go for the client implementation","username":"efn","ts":"2019-01-30T13:16:27.781Z"}
{"msg":"@efn Look at the files that match rpc*.proto in https://github.com/hyperledger/burrow/tree/develop/protobuf","username":"seanyoung","ts":"2019-01-30T13:19:03.443Z"}
{"msg":"They define the grpc interface burrow provides","username":"seanyoung","ts":"2019-01-30T13:19:17.828Z"}
{"msg":"Do you recommend a different language implementation for implementing a client?","username":"efn","ts":"2019-01-30T13:19:27.112Z"}
{"msg":"The server implementation is https://github.com/hyperledger/burrow/tree/develop/rpc","username":"seanyoung","ts":"2019-01-30T13:19:37.767Z"}
{"msg":"grpc is pretty well supported in any language, so I'm not sure there is a language we can recommend. That being said, there is an example of a golang client in the source, so presumably it's easier to use that as an example","username":"seanyoung","ts":"2019-01-30T13:22:18.911Z"}
{"msg":"Thanks, do you know where's the example of the client?","username":"efn","ts":"2019-01-30T13:29:25.860Z"}
{"msg":"https://github.com/hyperledger/burrow/blob/develop/deploy/def/client.go#L51","username":"seanyoung","ts":"2019-01-30T13:30:22.987Z"}
{"msg":"https://github.com/hyperledger/burrow/blob/develop/cmd/burrow/commands/dump.go","username":"seanyoung","ts":"2019-01-30T13:30:50.799Z"}
{"msg":"and another example:\nhttps://github.com/hyperledger/burrow/blob/develop/cmd/burrow/commands/keys.go#L25","username":"seanyoung","ts":"2019-01-30T13:31:31.667Z"}
{"msg":"Thanks, I'll try something","username":"efn","ts":"2019-01-30T13:33:56.629Z"}
{"msg":"btw here is an example of blocks being retrieved: https://github.com/hyperledger/burrow/blob/develop/vent/service/consumer.go#L143","username":"seanyoung","ts":"2019-01-30T13:40:13.019Z"}
{"msg":"Has left the channel.","username":"bdjidi","ts":"2019-01-30T20:11:30.200Z","type":"ul"}
{"msg":"Has joined the channel.","username":"duckthatquantum","ts":"2019-01-31T01:37:18.106Z","type":"uj"}
{"msg":"Cool, manage to use the library at `rpc/rpcinfo/infoclient``","username":"efn","ts":"2019-01-31T08:26:23.728Z"}
{"msg":"Cool, manage to use the library at `rpc/rpcinfo/infoclient`","username":"efn","ts":"2019-01-31T08:26:23.728Z"}
{"msg":"Do you know if there is a way to subscribe to events in burrow? Like whenever a block is created","username":"efn","ts":"2019-01-31T08:27:18.698Z"}
{"msg":"Do you know if there is a way to subscribe to events in burrow? Like whenever a block is created","username":"efn","ts":"2019-01-31T08:27:18.698Z"}
{"msg":"@efn the GetBlocks() can be called in a streaming fashion. That's exactly what happens here https://github.com/hyperledger/burrow/blob/develop/vent/service/consumer.go#L143","username":"seanyoung","ts":"2019-01-31T09:32:41.352Z"}
{"msg":"That means the connection will remain open and any new blocks will be published as soon as they are committed","username":"seanyoung","ts":"2019-01-31T09:33:17.608Z"}
{"msg":"I need in fact is the signed headers, but I already did the methods to get them, will try to modify them accordingly,\nThanks a lot :)","username":"efn","ts":"2019-01-31T09:59:49.305Z"}
{"msg":"@efn rhe infoRPC is really for simple http based requests that return json whereas the grpc uses protobufs and is much more feature rich in terms of the information it can retrieve, filter for, stream etc. If it doesn't have info you need in either please do let us know via GH issues and we'll see about getting the information added. That said we already expose pretty much all the info. ","username":"compleatang","ts":"2019-01-31T17:15:02.902Z"}
{"msg":"Has joined the channel.","username":"mossmanpete","ts":"2019-01-31T22:47:53.887Z","type":"uj"}
{"msg":"I need to get a structure with a header and the commits for the header, much like `SignedHeader` in tendermint. I'm implementing in the same fashion as the grpc to get stream of blocks. Any hints where can I get the Commit and Header inside `executionEventsServer`?","username":"efn","ts":"2019-02-01T16:57:30.314Z"}
{"msg":"found a way to put it inside the Query grpc, `rpcquery.proto`. I can access the `tendermint.nodeView` from there, and get it there","username":"efn","ts":"2019-02-01T17:13:52.980Z"}
{"msg":"found a way to put it inside the Query grpc, `rpcquery.proto`. I can access the `tendermint.nodeView` from there, and get it there, thanks a lot for the input :)","username":"efn","ts":"2019-02-01T17:13:52.980Z"}
{"msg":"hello all! i am evaluating sawtooth vs burrow for a project i'm starting at Pueblo.Global","username":"mossmanpete","ts":"2019-02-01T23:12:34.849Z"}
{"msg":"wanted to know if anyone can tell me why i'd want to use Burrow rather than Sawtooth for any reason other than PBFT security?","username":"mossmanpete","ts":"2019-02-01T23:13:40.507Z"}
{"msg":"i am not excited about the SGX enclave support for BFT in sawtooth, but everything else about it looks to have more opportunity than Burrow ... though i don't think i'll be able to wait for the PBFT engine in sawtooth to be ready.","username":"mossmanpete","ts":"2019-02-01T23:15:39.837Z"}
{"msg":"@efn did you find you needed to modify Burrow code? I can see that this is useful data and I'd be very open to adding it to the rpcquery interface. Perhaps you would be able to make a contribution via a pull request?","username":"silasdavis","ts":"2019-02-05T09:12:28.067Z"}
{"msg":"@mossmanpete Sawtooth actually have an early version of PBFT support - https://github.com/hyperledger/sawtooth-pbft/. It lacks some of the optimisations and maturity of Tendermint - but it is looking good.","username":"silasdavis","ts":"2019-02-05T09:13:51.502Z"}
{"msg":"As for comparison, it is difficult to answer in such broad strokes, but I'll try not to cop out:\n\nFor Sawtooth:\n- Flexible modular framework\n- Nice architecture\n- Multiple transactions processors\n- More developers\n- Web3 support with EVM integration\n\nFor Burrow:\n- Fast/light single binary with everything included (bootstrapping Burrow can be done entirely with the single binary - deployment, SQL cache generation (via Vent), key serving daemon. The 'Redis of blockchain' (as I dubiously coined some time ago)\n- First class EVM support / EVM only (Sawtooth uses our implementation)\n- Extensible as a Go library (always trying to improve this","username":"silasdavis","ts":"2019-02-05T09:18:52.832Z"}
{"msg":"As for comparison, it is difficult to answer in such broad strokes, but I'll try not to cop out:\n\nFor Sawtooth:\n- Flexible modular framework\n- Nice architecture\n- Multiple transactions processors\n- More developers\n- Web3 support with EVM integration\n\nFor Burrow:\n- Fast/light single Go binary with everything included (bootstrapping Burrow can be done entirely with the single binary - deployment, SQL cache generation (via Vent), key serving daemon. The 'Redis of blockchain' (as I dubiously coined some time ago)\n- First class EVM support / EVM only (Sawtooth uses our implementation)\n- Extensible as a Go library (always trying to improve this\n- Tendermint BFT (much closer to maturity than any other PoS/PoA supporting system I know)\n- Focus on running public permissioned processes (contrast the consortia focus of other Hyperledger projects - though that is historical more than fundamental)","username":"silasdavis","ts":"2019-02-05T09:18:52.832Z"}
{"msg":"The scope of the Sawtooth project is in some ways more ambitious than Burrow, but because of that they do have more moving parts","username":"silasdavis","ts":"2019-02-05T09:22:08.614Z"}
{"msg":"Also for what it's worth Burrow is an older codebase (though several refactors deep) than any other project in Hyperledger ","username":"silasdavis","ts":"2019-02-05T09:22:41.823Z"}
{"msg":"@silasdavis Is really not well done right now, when I have more time I'd try to understand better how the `Query` works for matching things. Thanks","username":"efn","ts":"2019-02-05T10:27:15.562Z"}
{"msg":"Has joined the channel.","username":"DJEMOA","ts":"2019-02-05T13:14:40.598Z","type":"uj"}
{"msg":"Hi, \nHi\n","username":"DJEMOA","ts":"2019-02-05T13:15:10.033Z"}
{"msg":"Hello everyone,```\n\n```  please, I would like to know if it is possible to generate abi ans bytecode from a chaincode ? ```\nIn fact as we can use burrow to run solidity smart contract in Hyperledger fabric, I wanted to know if we could run chaincode written in go in Ethereum by generating ABI and ByteCode.```\nThanks a lot in advance and best regards\n``` \n``` ","username":"DJEMOA","ts":"2019-02-05T13:20:28.708Z"}
{"msg":"@DJEMOA there is no golang compiler which can target evm bytecode/abi.","username":"seanyoung","ts":"2019-02-05T13:24:14.278Z"}
{"msg":"golang can target wasm and wasm would be a great to have supported in burrow. This is why I've started the solang project: https://github.com/hyperledger-labs/solang","username":"seanyoung","ts":"2019-02-05T13:25:25.702Z"}
{"msg":"With all of that in place we can have chaincode written in rust, golang and solidity. But it is not finished yet","username":"seanyoung","ts":"2019-02-05T13:26:50.834Z"}
{"msg":"Ethereum also have plans to move to wasm but there is not much code written to make that possible","username":"seanyoung","ts":"2019-02-05T13:27:25.699Z"}
{"msg":"(again solang would help here too)","username":"seanyoung","ts":"2019-02-05T13:27:40.277Z"}
{"msg":"evm bytecode is awful and could never be a target of a golang/rust compiler","username":"seanyoung","ts":"2019-02-05T13:28:41.873Z"}
{"msg":"to add to what @seanyoung said @DJEMOA in terms of directly connecting existing fabric chaincode to EVM contracts within a fabric-EVM system you'd need to ask over in the #fabric-evm room as that is really on their end rather than the burrow end.","username":"compleatang","ts":"2019-02-05T17:49:05.930Z"}
{"msg":"@efn btw if you are after commits then you will want the rpcinfo endpoint, in particular `http ':26658/block?height=7' | jq '.result.Block.last_commit'` will get you the commit for height 6 (note the query is for height 7). SignedCommit doesn't really buy you anything over block since it needs to have block n+1 to get you the commit for block n (it comes from last_commit), so it is really just a helper around that. We provide block headers from the GRPC because they have a protobuf definition. Commits don't and so it is easier to provide them as JSON over HTTP. Casey is right to say there is much richer information on GRPC regarding the execution - i.e. 'our side' rather than Tendermint's","username":"silasdavis","ts":"2019-02-05T21:21:30.984Z"}
{"msg":"I'd be interested to know what you are trying to achieve - perhaps there is something we might include in the execution events","username":"silasdavis","ts":"2019-02-05T21:22:33.897Z"}
{"msg":"@silasdavis thank you for that info! looks to me like burrow would be easier to get setup and running... whereas sawtooth will have more flexibility and complexity","username":"mossmanpete","ts":"2019-02-05T22:19:35.948Z"}
{"msg":"@silasdavis all i can tell from the sawtooth-pbft github is that \"there is still a long way to go\" ... guess we'll launch with CFT and hope for the best while contributing to the PBFT algo.","username":"mossmanpete","ts":"2019-02-05T22:27:49.794Z"}
{"msg":"it is looking like we may have use for multiple blockchains, and the ability to boot up a blockchain on demand, so some uses for burrow on non-central systems may be best for our situation. tahnks!","username":"mossmanpete","ts":"2019-02-05T22:52:37.042Z"}
{"msg":"was wondering... is anyone working on a WASM VM for Burrow?","username":"mossmanpete","ts":"2019-02-06T01:50:18.574Z"}
{"msg":"doing more research, i think i may launch with Burrow, and use OTX [ http://opentransactions.org ] for a cross-chain/off-chain application layer i was planning to work with.","username":"mossmanpete","ts":"2019-02-06T01:51:13.122Z"}
{"msg":"Sawtooth also have no squirrel support...","username":"silasdavis","ts":"2019-02-06T09:48:50.021Z"}
{"msg":"I do a lot of work in the form of talking about how great it would be (to have WASM)","username":"silasdavis","ts":"2019-02-06T09:49:44.956Z"}
{"msg":"It is my intention to try and add a WASM VM alongside the EVM","username":"silasdavis","ts":"2019-02-06T11:18:25.007Z"}
{"msg":"but work has not started on that and is not scheduled this quarter - I think we have spoken about Q2/Q3 ","username":"silasdavis","ts":"2019-02-06T11:19:03.017Z"}
{"msg":"I'm interested in contributing to the burrow project. Where is a good place to get started? I\"m learning golang and solidity.","username":"Spar","ts":"2019-02-06T16:54:56.684Z"}
{"msg":"hi @Spar that would be super! we have a number of issues marked as good starter issues and/or help wanted. those are always a good place to start! :-) https://github.com/hyperledger/burrow/issues?q=is%3Aopen+is%3Aissue+label%3A%22status%2Fhelp+wanted%22","username":"compleatang","ts":"2019-02-06T17:19:46.409Z"}
{"msg":"@silasdavis i just noticed the WASM  execution feature on the Q1 2019 roadmap","username":"mossmanpete","ts":"2019-02-06T20:45:45.826Z"}
{"msg":"i'm really excited to be working with Burrow now, at first i thought \"more features, good!\" but Burrow does everything i want it to, and is a better fit. Seems that with all the open source Solidity contracts, DApps,  and off-chain channels that have been designed, this is at least a superior blockchain without the downfalls of the Ethereum network.","username":"mossmanpete","ts":"2019-02-06T20:48:31.152Z"}
{"msg":"i'm trying to find anything about hardware requirements for Burrow though... i remember when i could no longer mine ETH on my GPUs due to mempool exceeding my physical memory. this is obviously lightweight in comparison, but can i run it on a RasPi?","username":"mossmanpete","ts":"2019-02-06T20:49:53.432Z"}
{"msg":"we routinely run nodes in containers which have less compute and memory than a RaspPi would so resources wise it *should* be ok. AFAIK there are no current issues compiling to arm (but if there are we'd like to know). to be clear, we're unlikely to ship full WASM in Q1. We do intend to begin our experimentation in that area. If WASM is of interest, there is also a Hyperledger Labs project headed by @seanyoung to work on compiling solidity into WASM which may be of interest to you as well. ","username":"compleatang","ts":"2019-02-06T23:48:27.042Z"}
{"msg":"finally, Welcome to the community! Glad you find Burrow appealing @mossmanpete !","username":"compleatang","ts":"2019-02-06T23:48:46.427Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=5BcRKuN9F2d6HBZC4) @compleatang I'm looking at the starter issues but I'm still not sure how to approach them.  This is my first open source project and I'm just learning go. I'm tired of doing programming exercises (exercism.io.) and would like to start building something. I have burrow in my gopath. I have some knowledge of git. I understand blockchain. I'm not a programmer. I'm an attorney that is excited about the potential of smart contracts. I guess I'm having problems understanding the code base. Would you mind explaining how I should approach understanding it? Thanks!","username":"Spar","ts":"2019-02-07T15:15:17.076Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=5BcRKuN9F2d6HBZC4","url":"https://chat.hyperledger.org/channel/burrow?msg=5BcRKuN9F2d6HBZC4","remote":true,"fileId":null,"fileName":null}]}
{"msg":"moving to dm.","username":"compleatang","ts":"2019-02-07T15:46:50.536Z"}
{"msg":"Has joined the channel.","username":"circlespainter","ts":"2019-02-09T10:25:30.725Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SandaruSahan","ts":"2019-02-10T07:24:23.151Z","type":"uj"}
{"msg":"Hi i'm sahan. I'm an undergraduate who are working on a blockchain project as my final year project. It's about creating a remote e-voting application. I'm currently struggling with finding a good approach for my application. I've tried ethereum but having pay gas price for each vote(each transaction with blockchain) seems not a good option for me. Since i already worked on solidity. I'm planing on going with hyperledger burrow. But i'm still worried that i will be able to overcome my problem with hyperledger. Thank you","username":"SandaruSahan","ts":"2019-02-10T07:24:31.992Z"}
{"msg":"hi sahan, what is hte problem you're trying to overcome?","username":"compleatang","ts":"2019-02-10T21:40:07.117Z"}
{"msg":"if it's gas, burrow uses gas but it's a non-economic cost and only their to prevent network seizure","username":"compleatang","ts":"2019-02-10T21:40:30.311Z"}
{"msg":"Has joined the channel.","username":"pravn1729","ts":"2019-02-11T10:09:42.751Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tiennv","ts":"2019-02-12T04:43:06.881Z","type":"uj"}
{"msg":"Has joined the channel.","username":"loneimmortal","ts":"2019-02-12T15:47:25.688Z","type":"uj"}
{"msg":"Hey all! Burrow has an update due to the TSC this week. Remember we are now using Confluence: https://wiki.hyperledger.org/display/HYP/TSC+Project+Updates @compleatang @silasdavis ","username":"kelly_","ts":"2019-02-12T22:02:22.151Z"}
{"msg":"Hi,\nFrom the `MutableForest` I need to get a merkle proof from a tree inside it, let's say an account. Any idea how can I do this now with this new design?","username":"efn","ts":"2019-02-13T15:22:11.148Z"}
{"msg":"Was thinking about getting a proof from the `commitsTree`, but before the keys were more simple, \"a\" + address, now, \"a\" itself is a tree, if I understood correctly, and I need a path that goes from the top of the `commitsTree` down to the key inside \"a\"","username":"efn","ts":"2019-02-13T15:42:58.324Z"}
{"msg":"I think I understand now, I need two merkle trees, one that says the hash for the prefix \"a\" from commitsTree is X, and one that does the address -> account, with root X","username":"efn","ts":"2019-02-13T16:17:58.665Z"}
{"msg":"Why is the accounts handled in this way but the storage still keeps its keys at \"s\"+key?","username":"efn","ts":"2019-02-13T16:24:21.258Z"}
{"msg":"Why are accounts handled in this way but the storage still keeps its keys at \"s\"+key?","username":"efn","ts":"2019-02-13T16:24:21.258Z"}
{"msg":"Has joined the channel.","username":"jayapalreddy","ts":"2019-02-14T10:32:39.477Z","type":"uj"}
{"msg":" is there a rodmap in burrow to support Wallets  and crytptoken development","username":"jayapalreddy","ts":"2019-02-14T10:32:53.097Z"}
{"msg":"Has joined the channel.","username":"suchitrotti","ts":"2019-02-14T10:41:07.898Z","type":"uj"}
{"msg":"Hi All.. I am trying to use @monax/burrow npm module. When I use burrow.executionEvents.GetTx method I get this error \"Error: 2 UNKNOWN: transaction with hash 20744BBA297C0768C14D4B3BA46AF562F3216BCB not found in state\" .. Can someone advice how can I solve this ","username":"toniyasundaram","ts":"2019-02-21T04:03:03.451Z"}
{"msg":"?","username":"toniyasundaram","ts":"2019-02-21T04:03:04.514Z"}
{"msg":"Has joined the channel.","username":"haggs","ts":"2019-02-21T06:02:50.329Z","type":"uj"}
{"msg":"Hi Everyone, Can i connect burrow network through RPC or web3js .If so could you please provide methods of rpc. Will burrow support private data concept ?","username":"pravn1729","ts":"2019-02-21T12:52:30.261Z"}
{"msg":"Hi Everyone, Can i connect burrow network through RPC or web3js .If so could you please provide reference link to methods of rpc. Will burrow support private data concept ?","username":"pravn1729","ts":"2019-02-21T12:52:30.261Z"}
{"msg":"Has joined the channel.","username":"zorrothefox","ts":"2019-02-21T13:15:27.893Z","type":"uj"}
{"msg":"@pravn1729 library to connect to burrow GRPC https://www.npmjs.com/package/@monax/burrow","username":"toniyasundaram","ts":"2019-02-22T02:34:22.500Z"}
{"msg":"@toniyasundaram never seen that error before when the tx was actually in the chain. you can query the info port for the block to make sure it's there with curl or postman or whatever....","username":"compleatang","ts":"2019-02-22T10:07:21.452Z"}
{"msg":"Has joined the channel.","username":"koq 1","ts":"2019-02-22T10:24:57.672Z","type":"uj"}
{"msg":"Hi, is there a reason the CREATE opcode behaves differently in burrow than in Ethereum?","username":"efn","ts":"2019-02-22T12:43:56.823Z"}
{"msg":"Hi, is there a reason the CREATE opcode behaves differently in burrow than in Ethereum?\nFor instance, the transaction hash is appended in the nonce when calculating","username":"efn","ts":"2019-02-22T12:43:56.823Z"}
{"msg":"sure thanks @compleatang ","username":"toniyasundaram","ts":"2019-02-22T13:28:44.296Z"}
{"msg":"Hello again, I'm trying to implement signing transactions without the burrow key server. So far not much success, my own generated signatures give `Error: 13 INTERNAL: grpc: error unmarshalling request: proto: illegal wireType 7`. So now I'm investigating the behavior of the 'SignTx' function of the keys service, but I've noticed that the signature returned by SignTx is 68 bytes long instead of 64 bytes. If I strip the first 4 bytes (leaving 64 bytes) it is a valid signature according to the ed25519 NPM package. What are the first 4 bytes for?","username":"JoeriExelmans","ts":"2019-02-22T16:31:26.909Z"}
{"msg":"Hello again, I'm trying to implement signing transactions without the burrow key server. So far not much success, my own generated signatures give `Error: 13 INTERNAL: grpc: error unmarshalling request: proto: illegal wireType 7`. So now I'm investigating the behavior of the 'SignTx' function of the keys service, and I've noticed that the signature returned by SignTx is 68 bytes long instead of 64 bytes. If I strip the first 4 bytes (leaving 64 bytes) it is a valid signature according to the ed25519 NPM package. What are the first 4 bytes for?","username":"JoeriExelmans","ts":"2019-02-22T16:31:26.909Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT) @toniyasundaram Thank you. Is Burrow production ready ?","username":"pravn1729","ts":"2019-02-23T13:24:16.881Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT","url":"https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT) @toniyasundaram Thank you.","username":"pravn1729","ts":"2019-02-23T13:24:16.881Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT","url":"https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT) @toniyasundaram Thank you. Is it production ready ?","username":"pravn1729","ts":"2019-02-23T13:24:16.881Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT","url":"https://chat.hyperledger.org/channel/burrow?msg=4YNxGR4TnaY8hAYYT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"nikolay","ts":"2019-02-25T03:00:41.211Z","type":"uj"}
{"msg":"@efn for the ProposalTx we need addresses which we can predict, so when proposal is ratified, we know what the addresses for the deployed contracts is going to be. So, the way the nonce is calculated is different than ethereum. In general the EVM should match ethereum though, and it seems unlikely that code depends on how the address is calculated. What problems are you encountering?","username":"seanyoung","ts":"2019-02-25T12:33:45.433Z"}
{"msg":"@seanyoung I need a more deterministic way to create new contracts from other contracts, but I can do that with create2 now. Was just curious about this modification.","username":"efn","ts":"2019-02-25T12:43:24.278Z"}
{"msg":"@JoeriExelmans the error you have is from grpc. It is trying to protobuf-decode the message and failing. \n\nThe return value from Sign() method in the keys server is https://github.com/hyperledger/burrow/blob/develop/protobuf/keys.proto#L108","username":"seanyoung","ts":"2019-02-25T12:52:31.007Z"}
{"msg":"Has joined the channel.","username":"sungwook.won","ts":"2019-02-26T01:22:42.148Z","type":"uj"}
{"msg":"Hello! I'm trying to use Burrow json-rpc via RESTful. It looks not compatible with ethereum json-rpc methods. Is there any future plan to expose ethereum compatible methods?","username":"sungwook.won","ts":"2019-02-26T01:26:51.400Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=TDEyQ2QA6JP7uhnpQ) @jayapalreddy @jayapalreddy this could mean a few things, accounts on a Burrow network can act as hot wallets for our internal token, and our key signing service is effectively a wallet, and anything behind the burrow keys interface could act as this.\n\n Support for public wallets such as metamask are something I have thought about, would like in the abstract, but have not had the impetus to build - this relates to the subsequent question on web3 support which I am about to get to answering...","username":"silasdavis","ts":"2019-02-26T13:49:58.229Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=TDEyQ2QA6JP7uhnpQ","url":"https://chat.hyperledger.org/channel/burrow?msg=TDEyQ2QA6JP7uhnpQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"Keegan-Lee","ts":"2019-02-26T19:59:48.730Z","type":"uj"}
{"msg":"@sungwook.won we're always looking for help! https://github.com/hyperledger/burrow/issues/331","username":"compleatang","ts":"2019-02-26T20:56:11.867Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=7zEZfuJFWfowe4thW) @seanyoung That's not my question. Meanwhile I managed to get local signing with ed25519 keys (in JavaScript) to work, it seems the Signature (https://github.com/hyperledger/burrow/blob/develop/protobuf/crypto.proto#L30) really is a Buffer of 68 bytes. The last 64 bytes are the actual signature and the first 4 bytes are always (in hex:) '08011240', probably the uint32 field \"CurveType\", but a strange 4 bytes those are!","username":"JoeriExelmans","ts":"2019-02-27T08:31:07.577Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=7zEZfuJFWfowe4thW","url":"https://chat.hyperledger.org/channel/burrow?msg=7zEZfuJFWfowe4thW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"If you're interested I'll upload the 76-line TypeScript module that I use for local signing so you can have a look at it. The reason I developed it is because transactions need to be signed on an end-user device (smartphone) that cannot be expected to run a burrow keys server.","username":"JoeriExelmans","ts":"2019-02-27T08:34:15.326Z"}
{"msg":"Hi @JoeriExelmans our signature type is described by protobuf, you can use https://www.npmjs.com/package/protobufjs in javascript. I would be very interested to see what you are working on and if you are interesting in contributing to Burrow it is something we would be pleased to add to burrow.js","username":"silasdavis","ts":"2019-02-27T09:01:06.133Z"}
{"msg":"The byte you see are `0x08 0x01` == field number 1 (curvetype) is a varint and equals 1, `0x12 0x40` == field number 2 (signature) is length prefixed (bytes) and has length 64. The first byte for each fields encodes the wire type (last three bytes) and the field number with the rest of the bytes.","username":"silasdavis","ts":"2019-02-27T09:10:13.737Z"}
{"msg":"You could parse this yourself but I don't recommend it, since it will break if we every change the signature type - whereas by design protobuf will not","username":"silasdavis","ts":"2019-02-27T09:10:51.009Z"}
{"msg":"https://developers.google.com/protocol-buffers/docs/encoding","username":"silasdavis","ts":"2019-02-27T09:11:23.625Z"}
{"msg":"@seanyoung I note that the KeyClient has a lot of methods for generating keys and whatnot - there used to be a more minimal one - the minimum you need for signing - I think just Sign - do we need PublicKey?","username":"silasdavis","ts":"2019-02-27T09:12:54.084Z"}
{"msg":"@JoeriExelmans like I say we should talk about this - signing transactions locally with burrow.js is very much in scope (though not currently supported0 - are you able to use that library?","username":"silasdavis","ts":"2019-02-27T09:14:18.094Z"}
{"msg":"We are not using burrow.js because I don't like the design decision to keep one account in the 'burrow' object that is used for all transactions. On each node, possibly multiple accounts are kept in the keystore and for each transaction, a different account could be used. Also I've built my own abstraction library already that encodes calls according to the Ethereum ABI and can use both Burrow and Ethermint as a backend. From that library, it's simpler to just use GRPC directly. I like the GRPC interface and I think effort should be mainly be directed at improving it and its documentation.","username":"JoeriExelmans","ts":"2019-02-27T09:21:37.688Z"}
{"msg":"Right now the bytes '08011240' are hardcoded in my solution, I'll look into protobufjs for properly encoding the CurveType and signature length","username":"JoeriExelmans","ts":"2019-02-27T09:23:44.026Z"}
{"msg":"Here's my current solution, very much ad-hoc as you can see.:\n```\nimport * as crypto from \"crypto\";\nconst ed25519 = require('ed25519');\n\n// Result of GRPC call to rpctransact's FormulateTx.\nexport interface BurrowUnsignedTransaction {\n  ChainID: string;\n  Type: string;\n  Payload: {\n    Input: {\n      Address: string;\n      Sequence?: number;\n    }\n    Address: string;\n    GasLimit: number;\n    Data: string;\n  }\n}\n\n// Param for GRPC call to rpctransact's BroadcastTxSync.\nexport interface BurrowSignedTransaction {\n  Envelope: {\n    Signatories: Array<{\n      Address: Buffer;\n      PublicKey: {\n        CurveType: number;\n        PublicKey: Buffer;\n      }\n      // The data in 'Tx', signed with the private key of the sender\n      Signature: Buffer;\n    }>;\n    // This will be the JSON.stringified data of BurrowUnsignedTransaction,\n    // with Payload.Input.Sequence filled in.\n    Tx: Buffer;\n  }\n}\n\nexport class BurrowKeyPair {\n  readonly address: Buffer;\n  readonly publicKey: Buffer;\n  readonly privateKey: Buffer;\n\n  constructor(address: Buffer, publicKey: Buffer, privateKey: Buffer) {\n    this.address = address;\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n  }\n\n  sign(tx: BurrowUnsignedTransaction, nonce: number) : BurrowSignedTransaction {\n    tx.Payload.Input.Sequence = nonce+1; // Burrow nonces start counting at 1, as opposed to 0 with Ethereum\n\n    const message = Buffer.from(JSON.stringify(tx));\n    const signature = ed25519.Sign(message, this);\n    const signatureWithPrefix = Buffer.concat(\n      [Buffer.from(\"08011240\", 'hex'), // Burrow expects these 4 bytes to precede the signature. They probably indicate the CurveType, although it's a strange thing.\n      signature]);\n\n    const signedTx = {\n      Envelope: {\n        Signatories: [\n          {\n            Address: this.address,\n            PublicKey: {\n              CurveType: 1,\n              PublicKey: this.publicKey,\n            },\n            Signature: signatureWithPrefix,\n          },\n        ],\n        Tx: message,\n      },\n    };\n\n    return signedTx;\n  }\n\n  static generate() : BurrowKeyPair {\n    const randomSeed = crypto.randomBytes(32);\n    const {publicKey, privateKey} = ed25519.MakeKeypair(randomSeed);\n    const address = crypto.createHash('sha256').update(publicKey).digest().slice(0,20);\n    return new BurrowKeyPair(address, publicKey, privateKey);\n  }\n}\n\n``` ","username":"JoeriExelmans","ts":"2019-02-27T09:25:37.287Z"}
{"msg":"Here's my current solution, very much ad-hoc as you can see.:\n```\nimport * as crypto from \"crypto\";\nconst ed25519 = require('ed25519');\n\n// Result of GRPC call to rpctransact's FormulateTx.\nexport interface BurrowUnsignedTransaction {\n  ChainID: string;\n  Type: string;\n  Payload: {\n    Input: {\n      Address: string;\n      Sequence?: number;\n    }\n    Address: string;\n    GasLimit: number;\n    Data: string;\n  }\n}\n\n// Param for GRPC call to rpctransact's BroadcastTxSync.\nexport interface BurrowSignedTransaction {\n  Envelope: {\n    Signatories: Array<{\n      Address: Buffer;\n      PublicKey: {\n        CurveType: number;\n        PublicKey: Buffer;\n      }\n      // The data in 'Tx', signed with the private key of the sender\n      Signature: Buffer;\n    }>;\n    // This will be the JSON.stringified data of BurrowUnsignedTransaction,\n    // with Payload.Input.Sequence filled in.\n    Tx: Buffer;\n  }\n}\n\nexport class BurrowKeyPair {\n  readonly address: Buffer;\n  readonly publicKey: Buffer;\n  readonly privateKey: Buffer;\n\n  constructor(address: Buffer, publicKey: Buffer, privateKey: Buffer) {\n    this.address = address;\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n  }\n\n  sign(tx: BurrowUnsignedTransaction, nonce: number) : BurrowSignedTransaction {\n    tx.Payload.Input.Sequence = nonce+1; // Burrow nonces start counting at 1, as opposed to 0 with Ethereum\n\n    const message = Buffer.from(JSON.stringify(tx));\n    const signature = ed25519.Sign(message, this);\n    const signatureWithPrefix = Buffer.concat(\n      [Buffer.from(\"08011240\", 'hex'), // Burrow expects these 4 bytes to precede the signature. They probably indicate the CurveType, although it's a strange thing.\n      signature]);\n\n    const signedTx = {\n      Envelope: {\n        Signatories: [\n          {\n            Address: this.address,\n            PublicKey: {\n              CurveType: 1,\n              PublicKey: this.publicKey,\n            },\n            Signature: signatureWithPrefix,\n          },\n        ],\n        Tx: message,\n      },\n    };\n\n    return signedTx;\n  }\n\n  static generate() : BurrowKeyPair {\n    const randomSeed = crypto.randomBytes(32);\n    const {publicKey, privateKey} = ed25519.MakeKeypair(randomSeed);\n    const address = crypto.createHash('sha256').update(publicKey).digest().slice(0,20);\n    return new BurrowKeyPair(address, publicKey, privateKey);\n  }\n}\n\n``` ","username":"JoeriExelmans","ts":"2019-02-27T09:25:37.287Z"}
{"msg":"Is the library you have written open source? Do you use web3 for ethermint? ","username":"silasdavis","ts":"2019-02-27T09:36:07.862Z"}
{"msg":"Reading on a bus, but your signing code looks on the right tracks ","username":"silasdavis","ts":"2019-02-27T09:36:51.938Z"}
{"msg":"Are you using grpc lib? Because that will handle encoding of signature etc ","username":"silasdavis","ts":"2019-02-27T09:37:56.708Z"}
{"msg":"No web3. For Ethermint plain JSON-RPC is used, the NPM package `ethjs-provider-http` handles connection with the backend there (the most lightweight solution I could find). For both Burrow and Ethermint, `ethereumjs-abi` does the ABI encoding.","username":"JoeriExelmans","ts":"2019-02-27T09:40:47.310Z"}
{"msg":"The `grpc` and `@grpc/proto-loader` NPM packages are used for GRPC","username":"JoeriExelmans","ts":"2019-02-27T09:41:48.591Z"}
{"msg":"I specifically like GRPC for its use of Node native streams when subscribing to events. In Ethereum's JSON-RPC, subscribing to logs is a disaster. Web3 does some really awful things under the hood (and so do I).","username":"JoeriExelmans","ts":"2019-02-27T09:45:18.075Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=abef413b-e7a3-49c9-942e-e3c3210fe4f0) @silasdavis I think the problem is that the signature is type 'bytes' in the spec (https://github.com/hyperledger/burrow/blob/develop/protobuf/txs.proto#L34) where it should be crypto.Signature","username":"JoeriExelmans","ts":"2019-02-27T09:47:07.163Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=abef413b-e7a3-49c9-942e-e3c3210fe4f0","url":"https://chat.hyperledger.org/channel/burrow?msg=abef413b-e7a3-49c9-942e-e3c3210fe4f0","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Your issue with signature is that you are using a buffer rather than the signature type","username":"silasdavis","ts":"2019-02-27T09:48:00.176Z"}
{"msg":"Sorry let me respond properly when at desk","username":"silasdavis","ts":"2019-02-27T09:49:23.748Z"}
{"msg":"The library is not open source. I've written it but the copyright does not belong to me :(","username":"JoeriExelmans","ts":"2019-02-27T09:53:52.312Z"}
{"msg":"The state of the signature type is effectively a bug - an incomplete refactoring","username":"silasdavis","ts":"2019-02-27T10:21:59.554Z"}
{"msg":"well I guess in a sense it is not a bug since it works, but it is not what ought to be","username":"silasdavis","ts":"2019-02-27T10:22:32.102Z"}
{"msg":"When I first introduced gogoproto/protobuf for Burrow's internal types, Tx and signature was around the first place I started, after that I introduced a proper Signature message type","username":"silasdavis","ts":"2019-02-27T10:23:58.227Z"}
{"msg":"but gogoproto has a custom serialisation feature I was using to make Signature a named type although it was just bytes. Because of this Burrow is protobuf encoding into a  protobuf message, which makes you do the dance you are doing","username":"silasdavis","ts":"2019-02-27T10:24:55.237Z"}
{"msg":"I am just putting together a fix for this","username":"silasdavis","ts":"2019-02-27T10:25:43.247Z"}
{"msg":"and I will try and get it in the imminent 0.24.0 release","username":"silasdavis","ts":"2019-02-27T10:25:53.835Z"}
{"msg":"Nice!","username":"JoeriExelmans","ts":"2019-02-27T10:27:33.311Z"}
{"msg":"Fix is here: https://github.com/hyperledger/burrow/pull/1039/files#diff-88d58be0c34618c84f3403a398496c44R34","username":"silasdavis","ts":"2019-02-27T11:08:05.422Z"}
{"msg":"That should remove any need for you to worry about encoding","username":"silasdavis","ts":"2019-02-27T11:08:52.600Z"}
{"msg":"glad that you spotted it","username":"silasdavis","ts":"2019-02-27T11:09:04.386Z"}
{"msg":"Has joined the channel.","username":"bmann","ts":"2019-02-27T16:44:08.196Z","type":"uj"}
{"msg":"@silasdavis thanks for your responses on Twitter about EVM compatibility","username":"bmann","ts":"2019-02-27T16:44:44.501Z"}
{"msg":"I'm looking to find out how different groups \"track\" their compatibility, especially at the opcode level","username":"bmann","ts":"2019-02-27T16:45:01.820Z"}
{"msg":"Do you reference the yellow paper and/or the Jello Paper and do you have a list somewhere of what opcodes you support","username":"bmann","ts":"2019-02-27T16:45:34.808Z"}
{"msg":"The context is -- I believe that there are many more groups working on EVM and could do from helping each other out, especially on the specification and correctness layer","username":"bmann","ts":"2019-02-27T16:46:09.503Z"}
{"msg":"Thanks Silas, extremely helpful, as always","username":"JoeriExelmans","ts":"2019-02-28T08:41:37.982Z"}
{"msg":"There's a Jello paper? ","username":"compleatang","ts":"2019-02-28T10:48:31.489Z"}
{"msg":"Has joined the channel.","username":"aashishshrestha977","ts":"2019-02-28T16:19:01.346Z","type":"uj"}
{"msg":"hello","username":"aashishshrestha977","ts":"2019-02-28T16:19:09.330Z"}
{"msg":"i am getting this error when I do go get github.com/hyperledger/burrow\ncan't load package: package github.com/hyperledger/burrow: no buildable Go source files in /home/aashish/go/src/github.com/hyperledger/burrow\n","username":"aashishshrestha977","ts":"2019-02-28T16:19:44.119Z"}
{"msg":"Has joined the channel.","username":"zerppen","ts":"2019-03-01T09:21:15.995Z","type":"uj"}
{"msg":"@aashishshrestha977 you can ignore that message","username":"seanyoung","ts":"2019-03-01T10:04:37.841Z"}
{"msg":"Has left the channel.","username":"vahuja4","ts":"2019-03-01T10:47:14.886Z","type":"ul"}
{"msg":"@compleatang yep! See https://jellopaper.org/","username":"bmann","ts":"2019-03-01T18:05:34.616Z"}
{"msg":"We're working on making it the \"canonical\" specification, and think that anyone using the EVM could join forces to work on it together","username":"bmann","ts":"2019-03-01T18:06:17.312Z"}
{"msg":"Or at least, come up with a good way to share which opcodes / features are implemented in any particular public or private network","username":"bmann","ts":"2019-03-01T18:06:42.846Z"}
{"msg":"Also: Kyle Mitchell told me to ping you ages ago @compleatang ","username":"bmann","ts":"2019-03-01T18:09:13.500Z"}
{"msg":"So: hi!","username":"bmann","ts":"2019-03-01T18:09:15.355Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=YitXDT82LLuGTH2XA) @aashishshrestha977 If you see this error on `go get` that can safely be ignored. Just `cd $GOPATH/src/github.com/hyperledger/burrow && make install` and you'll be good to go.","username":"compleatang","ts":"2019-03-04T10:19:18.238Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=YitXDT82LLuGTH2XA","url":"https://chat.hyperledger.org/channel/burrow?msg=YitXDT82LLuGTH2XA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@bmann :wave_tone2: back! (Kyle and I go back a wee ways for sure).","username":"compleatang","ts":"2019-03-04T10:20:11.443Z"}
{"msg":"Has joined the channel.","username":"bjwswang","ts":"2019-03-05T06:44:11.368Z","type":"uj"}
{"msg":"Has joined the channel.","username":"thameursaadi","ts":"2019-03-05T14:51:41.699Z","type":"uj"}
{"msg":"hello guys i'mtrying to build an app that makes people able to exchange tokens i have to use hyperledger burrow how could i start?????","username":"thameursaadi","ts":"2019-03-05T14:53:29.369Z"}
{"msg":"I am wondering how I can broadcast a transaction from the front of my app. I am looking into this JS burrow lib, can anyone point me in the right direction? Or comment on whether or not this library is the right one for the job?","username":"Keegan-Lee","ts":"2019-03-05T17:52:38.578Z"}
{"msg":"https://github.com/monax/bosmarmot/tree/master/burrow.js/lib","username":"Keegan-Lee","ts":"2019-03-05T17:52:38.893Z"}
{"msg":"@Keegan-Lee at Monax we use that library heavily. It's well maintained and AFAIK the primary method for interaction in your use case. ","username":"compleatang","ts":"2019-03-06T09:45:03.434Z"}
{"msg":"@thameursaadi start here -> https://github.com/hyperledger/burrow/tree/develop/docs ","username":"compleatang","ts":"2019-03-06T09:45:25.134Z"}
{"msg":"feel free to ask any questions you may have along your journey in this room.","username":"compleatang","ts":"2019-03-06T09:45:37.155Z"}
{"msg":"Has joined the channel.","username":"klenik","ts":"2019-03-06T11:29:45.535Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=dyXYuxNPcELLWqFbN) @compleatang Thank you, I've tinkered with it for the last couple of days. Right now, my company is evaluating several of the hyperledger frameworks. I have to say that burrow has been the easiest to get running so far. Furthermore, it was easy to interact with. Double bonus. Looking into sawtooth now.","username":"Keegan-Lee","ts":"2019-03-06T19:54:11.771Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=dyXYuxNPcELLWqFbN","url":"https://chat.hyperledger.org/channel/burrow?msg=dyXYuxNPcELLWqFbN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has left the channel.","username":"PMoura","ts":"2019-03-06T23:42:38.467Z","type":"ul"}
{"msg":"installing burrow ","username":"thameursaadi","ts":"2019-03-07T10:23:03.910Z"}
{"msg":"after finishing instruction \ni tried `burrow --version`  and i got `burrow: command not found`","username":"thameursaadi","ts":"2019-03-07T10:24:22.701Z"}
{"msg":"any suggestion??","username":"thameursaadi","ts":"2019-03-07T10:32:56.454Z"}
{"msg":"@thameursaadi presumbly burrow has been installed but it's not in your path. If you did `go install ./cmd/burrow/` then burrow should be in `$GOPATH/bin`. See if you can find burrow here and you can execute burrow from  there using `./burrow --version` or add it to your path using `export PATH=$PATH:$GOPATH/bin`","username":"seanyoung","ts":"2019-03-07T11:11:33.535Z"}
{"msg":"Has joined the channel.","username":"lidengjia","ts":"2019-03-08T07:39:23.220Z","type":"uj"}
{"msg":"@seanyoung  it's workin thank you so much ","username":"thameursaadi","ts":"2019-03-08T22:53:38.934Z"}
{"msg":"hi everyone\ni was trying to check the https://github.com/monax/bosmarmot/example \nafter executing `burrow deploy` i got this error \nDeploying Contract                          name => simplestorage \n                                            defAddr => 0000000000000000000000000000000000000000 rawErr => rpc error: code = Unknown desc = error signing transaction: stat /home/thamer/Desktop/bosmarmot/example/basic-app-website/.keys/data/0000000000000000000000000000000000000000.json: no such file or directory \nError finalizing contract deploy simplestorage.sol: \nThere has been an error talking to your Burrow chain using account 0000000000000000000000000000000000000000.\n\nrpc error: code = Unknown desc = error signing transaction: stat /home/thamer/Desktop/bosmarmot/example/basic-app-website/.keys/data/0000000000000000000000000000000000000000.json: no such file or directory","username":"thameursaadi","ts":"2019-03-11T11:14:12.735Z"}
{"msg":"@thameursaadi you need to specify an address that does the deploy","username":"seanyoung","ts":"2019-03-11T11:24:36.007Z"}
{"msg":"`burrow deploy -a Validator_0` for example","username":"seanyoung","ts":"2019-03-11T11:24:54.740Z"}
{"msg":"Has joined the channel.","username":"SimonSchuler","ts":"2019-03-11T13:48:45.733Z","type":"uj"}
{"msg":"Hello fellow Bugseekers, \nI would like to connect to a Burrow-node from and Android device. Unfortunately I cannot find Documentation for the REST/JSONRPC API of burrow, can anyone maybe help me? Thank you for your time in advance.","username":"SimonSchuler","ts":"2019-03-11T13:50:32.504Z"}
{"msg":"It would be a big help to just have an Example with curl or sth, i can probably work out the rest by myself.","username":"SimonSchuler","ts":"2019-03-11T13:51:34.228Z"}
{"msg":"@SimonSchuler Unfortunately for your use case the REST/JSONRPC isn't highly interactive. Indeed it is mostly meant for pulling high level information out of burrow. For interactivity from other devices you'll need to leverage the GRPC port. All the RPC is self-documenting via goDocs -> https://godoc.org/github.com/hyperledger/burrow/rpc","username":"compleatang","ts":"2019-03-12T17:44:06.366Z"}
{"msg":"@compleatang Thank you for your answer, maybe I understood something wrong? But when I was working with Ethereum it was real easy to setup a JSONRPC and connect to. Maybe it would be better if I ran a node (not validator) on my smartphone and used this to communicate to the other nodes? I am not really familiar with how Burrow is supposed to work concerning Nodes and the permissioned part of it. Dose documentation on this exist (apart from the readme from github)? Thank you for your time.","username":"SimonSchuler","ts":"2019-03-13T09:04:26.715Z"}
{"msg":"@SimonSchuler Burrow doesn't have a web3 JSONRPC currently. The way most people handle this is to implement burrow.js on edge devices and use that to connect to blockchain nodes in other locations. ","username":"compleatang","ts":"2019-03-13T14:14:32.420Z"}
{"msg":"Has joined the channel.","username":"Dvi 19","ts":"2019-03-13T18:26:02.639Z","type":"uj"}
{"msg":"what is the difference between sawtooth seth and sawtooth burrow?","username":"Dvi 19","ts":"2019-03-13T18:26:31.568Z"}
{"msg":"can we use JSON RPC?","username":"Dvi 19","ts":"2019-03-13T18:27:56.841Z"}
{"msg":"@Dvi 19 As I just learned, its not that simple with JSONRPC, just read the answers above to my questions.","username":"SimonSchuler","ts":"2019-03-14T10:19:09.298Z"}
{"msg":"hi , i just learnead how to make crud and get the api,  so i now i need to move to the next step which is the exchange of `Token` between users using their generated adress  , is there any exemple or documentation for this ?","username":"thameursaadi","ts":"2019-03-14T15:25:39.254Z"}
{"msg":"Has joined the channel.","username":"hssanbenrhouma","ts":"2019-03-15T09:48:41.607Z","type":"uj"}
{"msg":"@compleatang  what'is the difference between fabric-evm and the burow project ? is fabric-evm a part of burrow project\n\n``` rrow\n```","username":"hssanbenrhouma","ts":"2019-03-15T09:51:13.834Z"}
{"msg":"@compleatang  what'is the difference between fabric-evm and the burow project ? is fabric-evm a part of burrow project ?","username":"hssanbenrhouma","ts":"2019-03-15T09:51:13.834Z"}
{"msg":"@hssanbenrhouma fabric uses the evm from burrow to support solidity","username":"seanyoung","ts":"2019-03-15T10:50:21.286Z"}
{"msg":"Has joined the channel.","username":"juliemiller1","ts":"2019-03-15T15:44:29.977Z","type":"uj"}
{"msg":"Has joined the channel.","username":"fastchain","ts":"2019-03-18T07:47:26.686Z","type":"uj"}
{"msg":"Hello everyone! I've just set up an burrow chain with one validator, created an account, deployed a contract. How do application can interact with a deployed contract? Is there any API description or client libraries or consoles?","username":"fastchain","ts":"2019-03-18T07:47:42.703Z"}
{"msg":"@fastchain You can interact with it using burrow deploy on the command line, or you can use https://www.npmjs.com/package/@monax/burrow see https://github.com/monax/bosmarmot/tree/develop/burrow.js and https://github.com/monax/bosmarmot/tree/develop/example/basic-app","username":"seanyoung","ts":"2019-03-18T10:40:07.409Z"}
{"msg":"Has joined the channel.","username":"leowu","ts":"2019-03-18T17:23:45.163Z","type":"uj"}
{"msg":"Hi everyone. I am new into Hyperledger burrow. I have a question about it. So I know that for burrow we are using Smart Contract instead of Chaincode in the Burrow EVM. So is that possible that we can run the Chaincode and the Solidity Smart Contract Simultaneously?","username":"leowu","ts":"2019-03-18T17:28:55.320Z"}
{"msg":"I have successfully installed and run the fabric-chainode-evm and the vote-hyperledger-ethereum and the web3-fabric-voting-dapp. But I just wondering that is it possible I can deploy the Chaincode instead and run Chaincode and Smart Contract simultaneously.","username":"leowu","ts":"2019-03-18T17:39:32.738Z"}
{"msg":"Hi @leowu  and welcome. What you imply isn't possible. Burrow is a dlt framework as is fabric. The fabric evm system uses burrows evm as a library. But to accomplish what you want you would use fabric rather than burrow as a standalone dlt. ","username":"compleatang","ts":"2019-03-18T19:59:47.932Z"}
{"msg":"As far as I know, you can run chaincode and evm contracts on the same fabric network but I am pretty sure that they cannot interact with one another m however you would need to confirm that in the #fabric-evm  room just to be sure. ","username":"compleatang","ts":"2019-03-18T20:01:39.018Z"}
{"msg":"As far as I know, you can run chaincode and evm contracts on the same fabric network but I am pretty sure that they cannot interact with one another. However you would need to confirm that in the #fabric-evm  room just to be sure. ","username":"compleatang","ts":"2019-03-18T20:01:39.018Z"}
{"msg":"thanks @compleatang .  It is helpful info.","username":"leowu","ts":"2019-03-18T20:08:31.219Z"}
{"msg":"Has joined the channel.","username":"roqs","ts":"2019-03-19T09:44:43.353Z","type":"uj"}
{"msg":"Hi, There's something weird happening when I try to call a contract from another one, for call and static call. The transaction does not happen, but it does not emit any exception. Did someone ever encountered this problem?","username":"efn","ts":"2019-03-20T14:43:03.889Z"}
{"msg":"Hi, There's something weird happening when I try to call a contract from another one, for `call` and `static call`. The transaction does fail, but it does not emit any exception. Did someone ever encountered this problem?","username":"efn","ts":"2019-03-20T14:43:03.889Z"}
{"msg":"Is this line right?\nhttps://github.com/hyperledger/burrow/blob/develop/execution/evm/vm.go#L942","username":"efn","ts":"2019-03-20T14:47:54.437Z"}
{"msg":"That is odd. If you have some example solidity/deploy.yaml that would be great!","username":"seanyoung","ts":"2019-03-21T15:33:25.934Z"}
{"msg":"@efn That is odd. If you have some example solidity/deploy.yaml that would be great!","username":"seanyoung","ts":"2019-03-21T15:33:25.934Z"}
{"msg":"Do I need to give more value to a contract that makes a call? I cannot reproduce it using the `burrow deploy` thing","username":"efn","ts":"2019-03-21T17:53:20.491Z"}
{"msg":"Has joined the channel.","username":"gWOLF3","ts":"2019-03-21T18:14:29.677Z","type":"uj"}
{"msg":"Hello everyone. I have a question regarding keys/keypairs: When I run 'burrow deploy --address ABCD... -f deploy.yaml -u myip' how is the transaction signed? I know there is the .key directory, but as far as I can tell there are only public keys stored there? \nNext question: Is there a way to generate a raw transaction (unsigned or signed) that I could send over the network and then deploy on a different machine?","username":"SimonSchuler","ts":"2019-03-22T10:00:35.298Z"}
{"msg":"The .keys directory of burrow contains the public and private keys for all the keypair in your keystore. The keystore is a service that by default is part of your burrow node, but can also be run separately.","username":"JoeriExelmans","ts":"2019-03-22T10:13:37.764Z"}
{"msg":"Yes you can \"get\" raw transactions that you can broadcast later on (signed or unsigned). If they are unsigned, you can only broadcast them on a node that has the keypair in its keystore because the transaction will have to be signed at some point. One way that I'm aware of is the 'rpctransact' endpoint of burrow's GRPC interface has a function 'FormulateTx' for getting an unsigned transaction, and there's 'SignTx' which will give you a signed transaction (both you can broadcast with ' BroadcastTxSync')","username":"JoeriExelmans","ts":"2019-03-22T10:19:53.669Z"}
{"msg":"If you want to sign a transaction not on the node itself (e.g. you want to use a keypair that was generated and kept on a mobile device), you can try to run a standalone burrow key server and request it to sign the transaction for you, or you can manually sign in e.g. JavaScript code or whatever you are using. I've posted a TypeScript example a while back in this thread.","username":"JoeriExelmans","ts":"2019-03-22T10:22:37.104Z"}
{"msg":"@JoeriExelmans Thank You. I will try to find your example.","username":"SimonSchuler","ts":"2019-03-22T10:23:36.547Z"}
{"msg":"Has joined the channel.","username":"BernardLin","ts":"2019-03-22T14:29:58.164Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Silona","ts":"2019-03-26T18:00:19.961Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Emma_Zheng","ts":"2019-03-26T23:54:13.093Z","type":"uj"}
{"msg":"Has joined the channel.","username":"lukasA","ts":"2019-03-29T09:40:10.896Z","type":"uj"}
{"msg":"Has left the channel.","username":"lukasA","ts":"2019-03-29T09:41:25.830Z","type":"ul"}
{"msg":"Has joined the channel.","username":"sunit.versatile","ts":"2019-04-01T08:11:38.141Z","type":"uj"}
{"msg":"Has left the channel.","username":"sunit.versatile","ts":"2019-04-01T08:30:10.281Z","type":"ul"}
{"msg":"Does Burrow's permissioned EVM have restrictions compared to a public EMV implementation? Trying to test some contracts that include ether transfers. Will it work as expected? Or I shouldn't even dream about this?","username":"klenik","ts":"2019-04-01T13:08:17.369Z"}
{"msg":"(I know ether is meaningless in a permissioned settings, but since the `gas` concept was kept, I hope the `value` was kept as well. So it's kind of a technical question, not a production use case of course)","username":"klenik","ts":"2019-04-01T13:10:06.287Z"}
{"msg":"yes, we have native tokens and `value`. if they do not work as expected we would be very surprised and hope for a test case. ","username":"compleatang","ts":"2019-04-01T17:40:35.192Z"}
{"msg":"Hi there, is there opensource web wallet/admin panel for burrow?","username":"denis4net","ts":"2019-04-01T20:53:41.341Z"}
{"msg":"Hi,\nWhen I create 2 contracts, at different time, their storage-tree hash are different, despite all the keys being equal. Why is it not deterministic?","username":"efn","ts":"2019-04-03T12:16:40.830Z"}
{"msg":"Hi,\nWhen I create one contracts, at different time, their storage-tree hash are different, despite all the keys being equal. Why is it not deterministic?","username":"efn","ts":"2019-04-03T12:16:40.830Z"}
{"msg":"Hi,\nWhen I create one contract, at different time, their storage-tree hash are different, despite all the keys being equal. Why is it not deterministic?","username":"efn","ts":"2019-04-03T12:16:40.830Z"}
{"msg":"Hi,\nWhen I create one contract, at different times, their storage-tree root hash is different, despite all the keys being equal. Why is it not deterministic?","username":"efn","ts":"2019-04-03T12:16:40.830Z"}
{"msg":"Hi,\nWhen I create one contract, at different times, their storage-tree root hash is different, despite all the keys and values being the same. Why is it not deterministic?","username":"efn","ts":"2019-04-03T12:16:40.830Z"}
{"msg":"Hello,","username":"efn","ts":"2019-04-03T14:27:09.840Z"}
{"msg":"Hi,\nWhen I create a contract, the hash stored in the commit tree with key `s+addr`, is not deterministic, is this by design? What are the source for this non-deterministic behaviour? Thanks","username":"efn","ts":"2019-04-03T14:30:10.119Z"}
{"msg":"Hi,\nWhen I create a contract, the hash stored in the commit tree with key `\"s\"+addr`, is not deterministic, is this by design? What are the source for this non-deterministic behaviour? Thanks","username":"efn","ts":"2019-04-03T14:30:10.119Z"}
{"msg":"Hi,\nWhen I create a contract, the hash stored in the commit tree with key `\"s\"+addr`, is not deterministic, is this by design? What are the source for this non-deterministic behaviour? I cannot see where does it come from.","username":"efn","ts":"2019-04-03T14:30:10.119Z"}
{"msg":"Hi,\nWhen I create a contract, the hash stored in the commit tree with key `\"s\"+addr`, is not deterministic, is this by design? What are the source for this non-deterministic behaviour? I cannot see where does it come from.\nThanks ","username":"efn","ts":"2019-04-03T14:30:10.119Z"}
{"msg":"Hello,\nI'm trying to prove some things in the commit storage of `rwt` forest.\nI recreate the same storage in another machine, with the same key-value pairs, but the root hash is different.\nAny hints why?\nThis is a snippet that I was trying to debug: https://pastebin.com/zNnrwk04 put in `rwtree_test.go`\nWhy if I save twice (line 15 of the snippet) the hash changes?\nThanks a lot\n\n","username":"efn","ts":"2019-04-03T17:31:16.914Z"}
{"msg":"That looks like the path in the 'forest' to the storage tree for `addr`. Hopefully we are talking about the same thing (think we are). When you say non-determinism do you mean running establishing the same  I suspect what you are interpreting as non-determinism is the effect of the version being part of the tree","username":"silasdavis","ts":"2019-04-03T17:40:30.193Z"}
{"msg":"ah yes.. that was typed earlier","username":"silasdavis","ts":"2019-04-03T17:40:42.918Z"}
{"msg":"yes so I believe I have a test that helps describe this: https://github.com/hyperledger/burrow/blob/develop/storage/rwtree_test.go#L79-L99","username":"silasdavis","ts":"2019-04-03T17:43:27.527Z"}
{"msg":"I agree that this is surprising behaviour - it is is essentially down to the fact that our merkle tree library includes the version in every node: https://github.com/tendermint/iavl/blob/master/node.go#L20 ","username":"silasdavis","ts":"2019-04-03T18:27:55.865Z"}
{"msg":"However if you make the same writes at the same version (do the same operations between each commit) then you will get the same hash","username":"silasdavis","ts":"2019-04-03T18:33:38.964Z"}
{"msg":"so for the purposes of Burrow's transaction integrity this is not an issue","username":"silasdavis","ts":"2019-04-03T18:33:54.032Z"}
{"msg":"however it does seem to me that IAVL doesn't really need to store version in every node - it helps them to track orphaned nodes from deleted tree versions (not a feature we currently use). It could have been done differently. It depends whether you want the state hash to be path dependent or not - I can see uses for both. In a sense IAVL encodes the blockchain history into the hash, but if you just want comparison over the final data you might prefer to not have the version mixed into the hash","username":"silasdavis","ts":"2019-04-03T18:36:51.738Z"}
{"msg":"incidentally the mapping between block height and version is 1-to-1 but for _reasons_ there is an offset of one between version and height. Tree version is an implementation detail for us though.","username":"silasdavis","ts":"2019-04-03T18:37:38.740Z"}
{"msg":"efn","username":"silasdavis","ts":"2019-04-03T18:37:56.318Z"}
{"msg":"Its nice to see someone poking around these deep in the code - may I ask what you are working on?","username":"silasdavis","ts":"2019-04-03T18:37:56.318Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=7LsjhKtFwTZ9DSKRQ) I'm trying to reconstruct the storage in another instance of burrow, and prove it!\n\nI believe that was the main problem, I overlooked the version inside the node.\nSo far I removed the version in the hash construction, but that somehow messed with the proof system\nThanks for the answer.","username":"efn","ts":"2019-04-04T08:23:16.798Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=7LsjhKtFwTZ9DSKRQ","url":"https://chat.hyperledger.org/channel/burrow?msg=7LsjhKtFwTZ9DSKRQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=7LsjhKtFwTZ9DSKRQ) I'm trying to reconstruct the storage in another instance of burrow, and prove it!\n\nI believe that was the main problem, I overlooked the version inside the node.\nSo far I removed the version in the node's hash construction, but that somehow messed with the proof system\nThanks for the answer.","username":"efn","ts":"2019-04-04T08:23:16.798Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=7LsjhKtFwTZ9DSKRQ","url":"https://chat.hyperledger.org/channel/burrow?msg=7LsjhKtFwTZ9DSKRQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I'd recommend you look at our dump/restore functionality that does exactly this","username":"silasdavis","ts":"2019-04-04T08:56:28.291Z"}
{"msg":"See: https://github.com/hyperledger/burrow/blob/develop/execution/state/dump.go","username":"silasdavis","ts":"2019-04-04T08:57:21.203Z"}
{"msg":"there is also command line tooling for this, but if you want to see the entry point to the code responsible","username":"silasdavis","ts":"2019-04-04T08:57:54.760Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=w4KMQRoB3EY4FBqCB) @silasdavis It worked, I removed the version from the hash both for proving nodes and constructing the graph :)\nI don't know all the consequences of tbh","username":"efn","ts":"2019-04-04T09:32:13.286Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=w4KMQRoB3EY4FBqCB","url":"https://chat.hyperledger.org/channel/burrow?msg=w4KMQRoB3EY4FBqCB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"what are the benefits of doing the forest and not doing a huge tree for everything? Is it to allow writes that don't touch the same state happening concurrently?","username":"efn","ts":"2019-04-04T09:35:19.421Z"}
{"msg":"We previously had a big tree for everything","username":"silasdavis","ts":"2019-04-04T09:37:34.327Z"}
{"msg":"The reason for having multiple is that with AVL it is the only way to have a hash for sub-states","username":"silasdavis","ts":"2019-04-04T09:37:56.093Z"}
{"msg":"for example the storage hash of a single account","username":"silasdavis","ts":"2019-04-04T09:38:07.521Z"}
{"msg":"this actually isn't exposed right now but there are number of uses for this, for example a simple check to see if contract state has not change between blocks","username":"silasdavis","ts":"2019-04-04T09:38:47.154Z"}
{"msg":"also being able to provide independent proofs on our separate state sub-spaces - like name reg, and possibly in the future WASM or other executor state","username":"silasdavis","ts":"2019-04-04T09:40:14.488Z"}
{"msg":"I also have some ideas about burrow multi-state-tenancy - for a kind of authenticated side-channel or cross-chain communication use case","username":"silasdavis","ts":"2019-04-04T09:41:08.704Z"}
{"msg":"for that I wanted to be able to have hierarchical state roots","username":"silasdavis","ts":"2019-04-04T09:41:20.727Z"}
{"msg":"With prefix trees you get this for free","username":"silasdavis","ts":"2019-04-04T09:41:29.436Z"}
{"msg":"AVL has some nice properties but I do have a side project that was a musing on replacing it:  https://github.com/monax/trieste","username":"silasdavis","ts":"2019-04-04T09:42:11.903Z"}
{"msg":"which is a prefix tree - where you get sub-tree hashes more naturally","username":"silasdavis","ts":"2019-04-04T09:42:28.732Z"}
{"msg":"@efn when you say you removed the version - you did this in IAVL?","username":"silasdavis","ts":"2019-04-04T09:43:12.527Z"}
{"msg":"> Is it to allow writes that don't touch the same state happening concurrently? \nThat is also a rather interesting idea... Currently we don't assume independence between any of the state trees - because EVM code can generally hit other state. Though this would kind of work for namereg (unless we expose it through snatives).\n\nThe main concurrency feature is provided by RWTree. We route all reads to the previous (last committed) immutable version - where we can have concurrent reads and long-running iterations without blocking commits which happen on the working 'write' tree.","username":"silasdavis","ts":"2019-04-04T09:45:56.581Z"}
{"msg":"BTW @seanyoung just added some docs on dump/restore: https://github.com/hyperledger/burrow/blob/develop/docs/dump-restore.md","username":"silasdavis","ts":"2019-04-04T09:51:31.585Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=yCQaXDqu7Lo93mhXa) @silasdavis Yes, did it in the IAVL","username":"efn","ts":"2019-04-04T09:52:29.607Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=yCQaXDqu7Lo93mhXa","url":"https://chat.hyperledger.org/channel/burrow?msg=yCQaXDqu7Lo93mhXa","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I see. Could it be like each account has its own AVL for the storage?","username":"efn","ts":"2019-04-04T09:55:14.186Z"}
{"msg":"Has joined the channel.","username":"Behzad 2","ts":"2019-04-04T10:19:37.797Z","type":"uj"}
{"msg":"Currently all account fields are in a single tree, but I did consider whether they should each have their own. We need to keep an eye on any performance issues, but it seems to work fine for storage - so less the could - I haven't done that yet though","username":"silasdavis","ts":"2019-04-04T10:23:26.395Z"}
{"msg":"If we did that it would probably make sense to merge the storage and account tree though","username":"silasdavis","ts":"2019-04-04T10:23:48.680Z"}
{"msg":"otherwise the individual account trees would barely contain anything","username":"silasdavis","ts":"2019-04-04T10:24:01.708Z"}
{"msg":"it would also mean you would not be able to differentiate a change to an account's balance from a change to it's storage","username":"silasdavis","ts":"2019-04-04T10:24:35.228Z"}
{"msg":"Btw, @silasdavis I'm trying for ages to get the message signed by validators that gets included in the commit. Do you happen to know what is it?\nIs not the header.Hash() nor the serialized header","username":"efn","ts":"2019-04-04T16:07:43.437Z"}
{"msg":"Btw, @silasdavis I'm trying for ages to get the message signed by validators that get included in the commit. Do you happen to know what is it?\nIs not the header.Hash() nor the serialized header","username":"efn","ts":"2019-04-04T16:07:43.437Z"}
{"msg":"Has joined the channel.","username":"PaulBrown","ts":"2019-04-04T19:47:34.172Z","type":"uj"}
{"msg":"Hi guys, we want to deploy burrow network as a service which can run at background without the streaming log. Is there a way to do that? Besides, how can I deploy contract to a remote burrow network which not reside in my local laptop? Thank you for any instructions!","username":"Emma_Zheng","ts":"2019-04-05T00:19:42.322Z"}
{"msg":"Nice,\nI want to confirm something:\nLet's say I am at block N, and the commit hash at the moment is C(X), this would be the commit for block N-1 right?\nNow, I move to block N+1, the Commit votes are for block N. So if I want the commit votes for commit tree N, I need to check the commit votes for block N + 2, right?\n\n","username":"efn","ts":"2019-04-05T11:38:56.372Z"}
{"msg":"@Emma_Zheng as to the latter question, use `--chain-url` flag when you run burrow deploy. if you want to run that with transactions signed on the machine that's sending the deploy transactions then you will need a key signer running somewhere and use the appropriate flag on burrow deploy. if you want to sign the transactions with keys that the nodes already have then you just need the `--chain-url` flag. we have a relatively sophisticated logging configuration which enables a range of options. see the godocs int he logging package linked from the repo's readme. ","username":"compleatang","ts":"2019-04-05T12:00:54.474Z"}
{"msg":"@Emma_Zheng  `burrow configure --logging minimal` will give you a config for a much less chatty log. If you want (almost) complete silence you can delete the `[Logging]` section altogether","username":"silasdavis","ts":"2019-04-05T12:24:06.506Z"}
{"msg":"@efn we have to be a little careful because 'commit hash' is a little overloaded, we have at least: the tendermint `LastCommitHash` (the hash of the commits from the last block - set of signed votes), a collection of other state hashes (consensus, validators, results) all after the previous block was applied, and the `AppHash` we control. This is how tendermint sees things: https://github.com/tendermint/tendermint/blob/master/types/block.go#L369-L377","username":"silasdavis","ts":"2019-04-05T12:29:47.194Z"}
{"msg":"Now given the context of your previous questions I will assume you mean the hash that comes from `execution/state/stage.go` `commit()`","username":"silasdavis","ts":"2019-04-05T12:30:47.795Z"}
{"msg":"which in turn comes from the `MutableForest` and is what we pass as the `AppHash` to tendermint when we get asked to ABCI Commit","username":"silasdavis","ts":"2019-04-05T12:31:17.206Z"}
{"msg":"exactly, I was referring to that","username":"efn","ts":"2019-04-05T12:34:30.313Z"}
{"msg":"exactly, I was referring to the `AppHash`","username":"efn","ts":"2019-04-05T12:34:30.313Z"}
{"msg":"If block N has not been committed, but block N-1 has been (I assume this is what you mean by 'at block N' - i.e. accumulating transactions to go in block N) then when you call `State.Hash()` you will get the state hash after applying all transactions in block N-1","username":"silasdavis","ts":"2019-04-05T12:35:10.981Z"}
{"msg":"In generally any reader methods will be routed to already committed/saved state across RWTree, and Forest implementations, and so also state","username":"silasdavis","ts":"2019-04-05T12:35:40.670Z"}
{"msg":"Now that `State.Hash()` is actually the `AppHash` that will appear in block N","username":"silasdavis","ts":"2019-04-05T12:36:09.624Z"}
{"msg":"which I thin can sometimes be slightly confusing - though logical if you think it through","username":"silasdavis","ts":"2019-04-05T12:36:25.937Z"}
{"msg":"which I think can sometimes be slightly confusing - though logical if you think it through","username":"silasdavis","ts":"2019-04-05T12:36:25.937Z"}
{"msg":"But the commits for that are going to apper in block N + 1? ","username":"efn","ts":"2019-04-05T12:38:02.175Z"}
{"msg":"Though if that is not confusing for you, please ignore me. I think I have found it confusing because at the point at which burrow is commiting block header N to state - you already know what the `AppHash` will be for the _next_ block","username":"silasdavis","ts":"2019-04-05T12:38:05.183Z"}
{"msg":"again... when you say commits are you talking about votes, or basically what I just said above?","username":"silasdavis","ts":"2019-04-05T12:38:32.635Z"}
{"msg":"but I think either way... the answer is yes","username":"silasdavis","ts":"2019-04-05T12:38:50.128Z"}
{"msg":"Thanks, it is a bit confusing :)","username":"efn","ts":"2019-04-05T12:39:34.055Z"}
{"msg":"Has joined the channel.","username":"g3d","ts":"2019-04-09T20:28:17.499Z","type":"uj"}
{"msg":"Hi folks,\n\nCan someone point me what was changed with height generation for smart contact in previous 2 releases? \nIt worked on 0.23.x, but seems not working on 0.24.x/0.25.x\n\nWhen I'm using burrow.js to interact with simple smartcontract, seems I'm receiving height as 0: https://gist.github.com/g3d/e646c5573a91fb3843be2b6f3d13fcb9#file-burrow-js-publish\nBut when I try to perform manual test transaction (according to https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/send-transactions.md), I'm receiving BlockHeight: https://gist.github.com/g3d/e646c5573a91fb3843be2b6f3d13fcb9#file-test-yml-publish\n\nI've checked the library sources, seems there were changes https://github.com/molfaras/bosmarmot/commit/f848ce89fa992d4d36544869b372f671a786a0ec, part of them were related to v0.24 release.","username":"g3d","ts":"2019-04-09T20:32:49.123Z"}
{"msg":"Has left the channel.","username":"haniavis","ts":"2019-04-10T18:22:48.225Z","type":"ul"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-04-13T00:08:04.831Z","type":"uj"}
{"msg":"Could I ask Burrow maintainers to please join https://lists.hyperledger.org/g/maintainers ? I'd appreciate it.","username":"rjones","ts":"2019-04-13T00:08:15.879Z"}
{"msg":"Has joined the channel.","username":"jimbarritt","ts":"2019-04-13T13:20:46.397Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MarLu96","ts":"2019-04-15T08:32:38.030Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dahmad","ts":"2019-04-15T11:40:30.669Z","type":"uj"}
{"msg":"Hello ","username":"dahmad","ts":"2019-04-15T11:40:36.529Z"}
{"msg":"Are there any example deployments with hyperledger burrow ?","username":"dahmad","ts":"2019-04-15T11:40:58.760Z"}
{"msg":"I am starting to work a little with hyperledger Burrow. ","username":"dahmad","ts":"2019-04-15T11:41:27.681Z"}
{"msg":"Can you guide me from where can i start ?","username":"dahmad","ts":"2019-04-15T11:41:45.783Z"}
{"msg":"@rjones done, I'll ask others ","username":"silasdavis","ts":"2019-04-15T12:04:27.093Z"}
{"msg":"Hi, I'm running burrow to run some benchmarks, with 1s delay from each block, I can get around 40 tx/s, is that normal? I have a lot of accounts in the tree (around 90k)","username":"efn","ts":"2019-04-15T12:47:24.798Z"}
{"msg":"Hi, I'm running burrow to run some benchmarks, with 1s delay from each block, I can get around 40 tx/s, is that normal? I have a lot of accounts in the tree (around 90k), but also happens with 10k","username":"efn","ts":"2019-04-15T12:47:24.798Z"}
{"msg":"I keep getting blocks very late, with around 1.7s, others with 1s","username":"efn","ts":"2019-04-15T12:54:13.265Z"}
{"msg":"Hi,\nis it possible to manually modifying the peering when the network is started? Like if I have 4 nodes (1,2,3,4), can manually say 1 is connected to 2, and then after some time, say that 1 is connected to 3 and not 2 anymore? And that without stopping the network or stopping the validator? (Like the admin.addPeer fct of Ethereum)?","username":"MarLu96","ts":"2019-04-16T06:44:35.305Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=mSmapbbqinjLM37G2) @efn Hey, I just came here to ask on how much tx/s burrow would be able to do. Have you found an answer?","username":"SimonSchuler","ts":"2019-04-16T12:07:48.726Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=mSmapbbqinjLM37G2","url":"https://chat.hyperledger.org/channel/burrow?msg=mSmapbbqinjLM37G2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I guess it depends on the type of contracts you do, I'm still testing it","username":"efn","ts":"2019-04-16T12:45:24.768Z"}
{"msg":"Could you update me? I would really appreciate it :)","username":"SimonSchuler","ts":"2019-04-16T13:14:32.433Z"}
{"msg":"Has joined the channel.","username":"MattWilson8","ts":"2019-04-17T18:57:21.974Z","type":"uj"}
{"msg":"I guess it can do 1000s @SimonSchuler depends a lot on your workload","username":"efn","ts":"2019-04-18T16:16:18.392Z"}
{"msg":"Hi, I'm trying to start a network with a seed node, the example (https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/seed-nodes.md) does not work, is this a known issue?","username":"efn","ts":"2019-04-20T09:37:08.257Z"}
{"msg":"peers are not exchanged","username":"efn","ts":"2019-04-21T11:10:33.946Z"}
{"msg":"@efn AFAIK that is NOT a known issue. ","username":"compleatang","ts":"2019-04-22T09:41:44.179Z"}
{"msg":"I set the peers as persistent peers and nonetheless doesn't work, what am I doing wrong?!","username":"efn","ts":"2019-04-22T19:41:41.254Z"}
{"msg":"Has joined the channel.","username":"AkilaVasanthakumar","ts":"2019-04-23T05:47:57.756Z","type":"uj"}
{"msg":"Hey devs, anything exciting going on?  please consider submitting a blog post! http://bit.ly/HLEDSubmission","username":"Silona","ts":"2019-04-24T02:09:43.013Z"}
{"msg":"Hi, I'm trying to run burrow with 100 validators in a cluster, I find blocks arriving very late, takes +-7s to do. (configured latency is 1s) is that normal?","username":"efn","ts":"2019-04-24T12:08:26.839Z"}
{"msg":"@efn that sounds about on par with what we've heard from other tendermint based networks. see, e.g., https://forum.cosmos.network/t/governance-adjustment-of-blocks-per-year-to-come-aligned-with-actual-block-time/1682 .... cosmos is currently limited to 100 validators so the numbers seem to be roughly on par with expectations. ","username":"compleatang","ts":"2019-04-24T13:17:46.206Z"}
{"msg":"the latency is due to the amount of p2p messages which increase dramatically with larger validator pools the configured latency will have little to do with your actual blocktime with larger validator pools. ","username":"compleatang","ts":"2019-04-24T13:18:48.427Z"}
{"msg":"the latency experienced is due to the amount of p2p messages which increase dramatically with larger validator pools. the configured latency will have little to do with your actual blocktime with larger validator pools. ","username":"compleatang","ts":"2019-04-24T13:18:48.427Z"}
{"msg":"@compleatang I think is underperforming, especially comparing to BFT-Smart, that has more or less 3s latency","username":"efn","ts":"2019-04-24T13:31:13.647Z"}
{"msg":"and this is in a LAN, I wonder what happens in a WAN.. :/","username":"efn","ts":"2019-04-24T13:33:05.346Z"}
{"msg":"without any txs the latency is 1.5s more or less, as soon as I try to put txs there (200/s) the latency goes to 4-5s.\nIs this normal?!","username":"efn","ts":"2019-04-24T13:50:45.959Z"}
{"msg":"Is there a method similar to `BroadcastTxAsync`, to broadcast the tx that doesn't wait for the response?\nI just want to put the tx in the pool and does not call `Execute`?","username":"efn","ts":"2019-04-24T16:21:49.640Z"}
{"msg":"Is there a method similar to `BroadcastTxAsync`, to broadcast the tx that doesn't wait for the execution?\nI just want to put the tx in the pool and does not call `Execute`?","username":"efn","ts":"2019-04-24T16:21:49.640Z"}
{"msg":"Another issue I have is that `BroadcastTxAsync` is taking a long time to put the tx in the pool.\nI'm still trying to figure out why, in some cases it takes 1s to send 100 tx. I already implemented a method to send in batch and parallelize sending from different clients, with no success. If you have a hint on how can I tackle this I'll appreciate\n","username":"efn","ts":"2019-04-24T16:28:50.285Z"}
{"msg":"Cc @silasdavis and @seanyoung ","username":"compleatang","ts":"2019-04-24T17:59:12.053Z"}
{"msg":"We've had some optimization to look into in our stress tests around the iavl tree which has been slowing some things down but I'm not sure that would impact too much if you were doing simple send transactions. Are you talking to contracts or raising events with those transactions or just sending tokens around. ","username":"compleatang","ts":"2019-04-24T18:00:39.521Z"}
{"msg":"Hi @compleatang. I'm doing contracts, but does the `BroadcastTxAsync` waits the tx to execute? I don't think so right? Is just checking inputs. I wonder why it takes so long","username":"efn","ts":"2019-04-24T18:06:40.406Z"}
{"msg":"i'm not 100% clear if it's related without some profiling information. if the node that receives the transaction is backed up modifying the IAVL tree it could be slower. is it consistently showing you 100TPS or inconsistently? what are you seeing as \"normal\" throughput if hte latter? ","username":"compleatang","ts":"2019-04-25T11:42:39.140Z"}
{"msg":"with 1 validator and 1 client, I try to send 100 txs, it takes a long time, sometimes 1s to call `BroadcastTxAsync` on the 100 txs, I did a method to call them all at once in the server, still takes a long time.\nThe txs are already signed","username":"efn","ts":"2019-04-25T12:32:23.066Z"}
{"msg":"I see what the problem is, the problem happens when I have a lot of accounts, namely 90k, there is one tx that takes a lot to respond, I think because is trying to use the disk, or something like that, I'll check it further. Is there a way to maintain a larger cache or something similar?","username":"efn","ts":"2019-04-25T14:26:32.776Z"}
{"msg":"I see what the problem is: It happens when I have a lot of accounts, namely 90k, there is one tx that takes a lot to respond, I think because is trying to use the disk, or something like that, I'll check it further. Is there a way to maintain a larger cache or something similar?","username":"efn","ts":"2019-04-25T14:26:32.776Z"}
{"msg":"I see what the problem is: It happens when I have a lot of accounts, namely 90k, there is one tx that takes a lot to respond (around 0.6s), I think because is trying to use the disk, or something like that, I'll check it further. Is there a way to maintain a larger cache or something similar?","username":"efn","ts":"2019-04-25T14:26:32.776Z"}
{"msg":"I see what the problem is: It happens when I have a lot of accounts, namely 90k, there is one tx that takes a lot to respond (around 600ms), I think because is trying to use the disk, or something like that, I'll check it further. Is there a way to maintain a larger cache or something similar?","username":"efn","ts":"2019-04-25T14:26:32.776Z"}
{"msg":"Can I run a burrow node that is not a validator?","username":"efn","ts":"2019-04-25T15:44:20.193Z"}
{"msg":"The problem is in Tendermint's mempool, `CheckTx` blocks trying to acquire the mempool lock\nCan I run a burrow node that is not a validator?","username":"efn","ts":"2019-04-25T15:44:20.193Z"}
{"msg":"The problem is in Tendermint's mempool, `CheckTx` blocks trying to acquire the mempool lock\nCan I run a burrow node that is not a validator?","username":"efn","ts":"2019-04-25T15:44:20.193Z"}
{"msg":"Has joined the channel.","username":"Fias","ts":"2019-04-26T06:48:50.194Z","type":"uj"}
{"msg":"Found it:\nImagine my genesis account has a lot of accounts, and you encode this all the time in here: https://github.com/hyperledger/burrow/blob/7c363eec08ba477e9a8fa287767cf038bcc3563c/bcm/blockchain.go#L179\nThat is called in the `Commit()` for each block.\nKinda sucks :)\n","username":"efn","ts":"2019-04-26T11:29:16.904Z"}
{"msg":"Found it:\nImagine a genesis has a lot of accounts, and you encode this all the time in here: https://github.com/hyperledger/burrow/blob/7c363eec08ba477e9a8fa287767cf038bcc3563c/bcm/blockchain.go#L179\nThat is called in the `Commit()` for each block.\nKinda sucks :)\n","username":"efn","ts":"2019-04-26T11:29:16.904Z"}
{"msg":"@efn that's interesting! We shouldn't need to encode that for every block. @silasdavis  ^^^","username":"seanyoung","ts":"2019-04-26T14:40:02.402Z"}
{"msg":"Hello everyone. I was wondering if it is possible to pass data(like in yaml format for deploying things) instead of a file to the burrow executable. I am running a server task with python and I use subprocess to call burrow executable from python. It would be nicer to just dump data instead of creating a file and then passing this file to the executable. Is there a way?","username":"SimonSchuler","ts":"2019-04-28T12:11:20.973Z"}
{"msg":"I have another question: Unfortunately I seem to be unable to query data from a SmartContract deployed on burrow: ```\n\n``` ","username":"SimonSchuler","ts":"2019-04-28T14:23:09.269Z"}
{"msg":"I have another question: Unfortunately I seem to be unable to query data from a SmartContract deployed on burrow: \nsmartcontract method:\n```\n//get all stored times\n    function get_times() public view allowed_users_only returns (uint[] memory){\n        return times;\n    }\n``` \nyaml file for deploy:\n```\njobs:\n- name: _get_score\n  query-contract:\n    destination: 9207B3D4E0A78D387D2C3507B06FCA0B6930BA88\n    function: get_score\n    data:\n    - 1000\n``` \n\nAll i get as a response is \"not enough data\" \n\nCan someone help me?","username":"SimonSchuler","ts":"2019-04-28T14:23:09.269Z"}
{"msg":"I have another question: Unfortunately I seem to be unable to query data from a SmartContract deployed on burrow: \nsmartcontract method:\n```\n//get all stored times\n    //access a score\n    function get_score(uint _time) public view allowed_users_only returns (uint){\n        return data[_time];\n    }\n``` \nyaml file for deploy:\n```\njobs:\n- name: _get_score\n  query-contract:\n    destination: 9207B3D4E0A78D387D2C3507B06FCA0B6930BA88\n    function: get_score\n    data:\n    - 1000\n``` \n\nAll i get as a response is \"not enough data\" \n\nCan someone help me?","username":"SimonSchuler","ts":"2019-04-28T14:23:09.269Z"}
{"msg":"I have another question: Unfortunately I seem to be unable to query data from a SmartContract deployed on burrow: \nsmartcontract method:\n```\n    //access a score\n    function get_score(uint _time) public view allowed_users_only returns (uint){\n        return data[_time];\n    }\n``` \nyaml file for deploy:\n```\njobs:\n- name: _get_score\n  query-contract:\n    destination: 9207B3D4E0A78D387D2C3507B06FCA0B6930BA88\n    function: get_score\n    data:\n    - 1000\n``` \n\nAll i get as a response is \"not enough data\" \n\nCan someone help me?","username":"SimonSchuler","ts":"2019-04-28T14:23:09.269Z"}
{"msg":"I have another question: Unfortunately I seem to be unable to query data from a SmartContract deployed on burrow: \nsmartcontract method:\n```\n    //access a score\n    function get_score(uint _time) public view allowed_users_only returns (uint){\n        return data[_time];\n    }\n``` \nyaml file for deploy:\n```\njobs:\n- name: _get_score\n  query-contract:\n    destination: 9207B3D4E0A78D387D2C3507B06FCA0B6930BA88\n    function: get_score\n    data:\n    - 1000\n``` \n\nAll i get as a response is\n```\n*****Executing Job*****\n                    \nJob Name                                    => _get_times \n\n                                           \nnot enough data\n\n``` \n\nCan someone help me?","username":"SimonSchuler","ts":"2019-04-28T14:23:09.269Z"}
{"msg":"I have another question: Unfortunately I seem to be unable to query data from a SmartContract deployed on burrow: \nsmartcontract method:\n```\n    //access a score\n    function get_score(uint _time) public view allowed_users_only returns (uint){\n        return data[_time];\n    }\n``` \nyaml file for deploy:\n```\njobs:\n- name: _get_score\n  query-contract:\n    destination: 9207B3D4E0A78D387D2C3507B06FCA0B6930BA88\n    function: get_score\n    data:\n    - 1000\n``` \n\nAll i get as a response is\n```\n*****Executing Job*****\n                    \nJob Name                                    => _get_times \n\n                                           \nnot enough data\n\n``` \nI am sure that there is data in data[_time]\nCan someone help me?\n","username":"SimonSchuler","ts":"2019-04-28T14:23:09.269Z"}
{"msg":"Has joined the channel.","username":"mikeburrow","ts":"2019-04-28T21:52:23.639Z","type":"uj"}
{"msg":"hi everyone","username":"mikeburrow","ts":"2019-04-28T21:55:08.998Z"}
{"msg":"how do i create tokens for staking?","username":"mikeburrow","ts":"2019-04-28T21:56:27.111Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=QKjvzv9LRQZ6S3qbB) @SimonSchuler burrow deploy only accepts files as a deploy job at the moment, however that's a great idea. Please open an issue on burrow for this. Patches welcome :)","username":"seanyoung","ts":"2019-04-29T09:06:26.116Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=QKjvzv9LRQZ6S3qbB","url":"https://chat.hyperledger.org/channel/burrow?msg=QKjvzv9LRQZ6S3qbB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@SimonSchuler in the error message it is executing job _get_times but n your example yaml you have _get_score. I suspect you're looking at the wrong yaml, since the yaml looks fine","username":"seanyoung","ts":"2019-04-29T09:08:33.465Z"}
{"msg":"@SimonSchuler in the error message it is executing job `_get_times` but n your example yaml you have `_get_score`. I suspect you're looking at the wrong yaml, since the yaml looks fine","username":"seanyoung","ts":"2019-04-29T09:08:33.465Z"}
{"msg":"@mikeburrow usually those are created in the genesis block. are you looking to create tokens post genesis? if so can you let us know a bit more about what you're trying to achieve so we can guide you.","username":"compleatang","ts":"2019-04-29T09:18:51.534Z"}
{"msg":"Hi, with 100 validators, I manage to get around 40 tx/s is that normal?","username":"efn","ts":"2019-04-29T13:37:33.781Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=oRRBhuCynbiv7Dbjd) @seanyoung I am not a go programmer myself unfortunately. I will open an issue.","username":"SimonSchuler","ts":"2019-04-29T13:43:08.337Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=oRRBhuCynbiv7Dbjd","url":"https://chat.hyperledger.org/channel/burrow?msg=oRRBhuCynbiv7Dbjd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"thanks @compleatang. i want to launch a DPoS network that pays out rewards on a pro-rata basis for securing the network. ","username":"mikeburrow","ts":"2019-04-29T13:53:37.816Z"}
{"msg":"thanks @compleatang . i want to launch a DPoS network that pays out rewards on a pro-rata basis for securing the network. ","username":"mikeburrow","ts":"2019-04-29T13:53:37.816Z"}
{"msg":"it's an incentive to stake, and stay staked, as not staking would dilute the size of your ownership","username":"mikeburrow","ts":"2019-04-29T13:54:26.830Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=w4HGun8S7iWgh3K7M) @seanyoung Unfortunately that is just a minor copy-paste error and not the cause. I just retried everything:\n\nStore.sol\n\n```\n//add a score\n    function add_score(int _time, uint _score) public user_only{\n        //make sure no score is bigger than 10.000000\n        require(_score < 10000000);\n        //make sure there is only one score per time\n        for(uint i = 0; i < times.length; i++) {\n            require(times[i] != _time);\n        }\n        data[_time] = _score;\n        times.push(_time);\n    }\n``` ","username":"SimonSchuler","ts":"2019-04-29T14:05:32.725Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=w4HGun8S7iWgh3K7M","url":"https://chat.hyperledger.org/channel/burrow?msg=w4HGun8S7iWgh3K7M","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=w4HGun8S7iWgh3K7M) @seanyoung Unfortunately that is just a minor copy-paste error and not the cause. I just retried everything:\n\nStore.sol\n\n```\n//add a score\n    function add_score(int _time, uint _score) public user_only{\n        //make sure no score is bigger than 10.000000\n        require(_score < 10000000);\n        //make sure there is only one score per time\n        for(uint i = 0; i < times.length; i++) {\n            require(times[i] != _time);\n        }\n        data[_time] = _score;\n        times.push(_time);\n    }\n    //access a score\n    function get_score(int _time) public view allowed_users_only returns (uint){\n        return data[_time];\n    }\n``` \ndeploy add_score:\n```\njobs:\n- name: _add_score\n  call:\n    destination: 9207B3D4E0A78D387D2C3507B06FCA0B6930BA88\n    function: add_score\n    data:\n    - 144\n    - 9000000\n``` \nthis works.\n\ndeploy get_score:\n```\njobs:\n- name: _get_score\n  query-contract:\n    destination: 9207B3D4E0A78D387D2C3507B06FCA0B6930BA88\n    function: get_score\n    data:\n    - 144\n``` \nSame error :(","username":"SimonSchuler","ts":"2019-04-29T14:05:32.725Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=w4HGun8S7iWgh3K7M","url":"https://chat.hyperledger.org/channel/burrow?msg=w4HGun8S7iWgh3K7M","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@SimonSchuler can you paste the abi file and Solidity source if possible please","username":"seanyoung","ts":"2019-04-29T18:14:50.220Z"}
{"msg":"","username":"SimonSchuler","ts":"2019-04-29T18:20:08.504Z","attachments":[{"type":"file","title":"score_storage.sol.txt","title_link":"/file-upload/hQvZ6fN2fuNSMAZEQ/score_storage.sol.txt","url":"/file-upload/hQvZ6fN2fuNSMAZEQ/score_storage.sol.txt","remote":false,"fileId":"hQvZ6fN2fuNSMAZEQ","fileName":"score_storage.sol.txt"}]}
{"msg":"ABI:\n\n```\n[{\"constant\":false,\"inputs\":[{\"name\":\"_allowed_user\",\"type\":\"address\"}],\"name\":\"give_access_right\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_times\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_time\",\"type\":\"int256\"}],\"name\":\"get_score\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"who_has_access_right\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_time\",\"type\":\"int256\"},{\"name\":\"_score\",\"type\":\"uint256\"}],\"name\":\"add_score\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"delete_everyting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_non_allowed_user\",\"type\":\"address\"}],\"name\":\"remove_access_right\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]\n``` ","username":"SimonSchuler","ts":"2019-04-29T18:20:11.659Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=LWPGNHQ2aPKXWE3Yz) @seanyoung absolutely :)","username":"SimonSchuler","ts":"2019-04-29T18:20:45.545Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=LWPGNHQ2aPKXWE3Yz","url":"https://chat.hyperledger.org/channel/burrow?msg=LWPGNHQ2aPKXWE3Yz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"IvanTyulyandin","ts":"2019-04-29T21:04:40.803Z","type":"uj"}
{"msg":"Hello everyone! I try to integrate Burrow virtual machine to Hyperledger Iroha. Can someone give some tips about Burrow VM? \n\n1) Where can I find the code that is responsible for VM calls inside Burrow?\n2) Which ways can I interact with VM?\n\nThanks in advance","username":"IvanTyulyandin","ts":"2019-04-29T21:07:33.769Z"}
{"msg":"Has joined the channel.","username":"djraj","ts":"2019-04-30T01:18:55.513Z","type":"uj"}
{"msg":"@SimonSchuler with this yaml:\n```jobs:\n - name: foo\n   deploy:\n     contract: score_storage.sol\n \n - name: _add_score\n   call:\n     destination: $foo\n     function: add_score\n     data:\n     - 144\n     - 9000000\n \n - name: _get_score\n   query-contract:\n     destination: $foo\n     function: get_score\n     data:\n     - 144\n```","username":"seanyoung","ts":"2019-04-30T08:48:54.738Z"}
{"msg":"@SimonSchuler with this yaml:\n```jobs:\n - name: foo\n   deploy:\n     contract: score_storage.sol\n \n - name: _add_score\n   call:\n     destination: $foo\n     function: add_score\n     data:\n     - 144\n     - 9000000\n \n - name: _get_score\n   query-contract:\n     destination: $foo\n     function: get_score\n     data:\n     - 144\n```","username":"seanyoung","ts":"2019-04-30T08:48:54.738Z"}
{"msg":"@SimonSchuler with this yaml:\n```jobs:\n - name: foo\n   deploy:\n     contract: score_storage.sol\n \n - name: _add_score\n   call:\n     destination: $foo\n     function: add_score\n     data:\n     - 144\n     - 9000000\n \n - name: _get_score\n   query-contract:\n     destination: $foo\n     function: get_score\n     data:\n     - 144\n```\nit works fine for me. Are you sure the address is right?","username":"seanyoung","ts":"2019-04-30T08:48:54.738Z"}
{"msg":"@IvanTyulyandin the vm code is in execution/evm/vm/go ","username":"seanyoung","ts":"2019-04-30T08:49:43.853Z"}
{"msg":"@IvanTyulyandin the vm code is in execution/evm/vm.go \n\nFabric have also used our EVM.\nhttps://github.com/hyperledger/fabric-chaincode-evm/\nAnd sawtooth-seth too:\nhttps://github.com/hyperledger/sawtooth-seth/\n You take inspiration from there:","username":"seanyoung","ts":"2019-04-30T08:49:43.853Z"}
{"msg":"@IvanTyulyandin the vm code is in execution/evm/vm.go \n\nFabric have also used our EVM.\nhttps://github.com/hyperledger/fabric-chaincode-evm/\nAnd sawtooth-seth too:\nhttps://github.com/hyperledger/sawtooth-seth/\n You can take inspiration from there :)","username":"seanyoung","ts":"2019-04-30T08:49:43.853Z"}
{"msg":"@seanyoung Thank you for trying. \nThis is odd. \nBecause your script also only executes the first two jobs, should I try to just reinstall burrow?\n```\n./burrow deploy -a14A7F078573A62F4698C4019C6FD2BC0F4A7DAE9 -f yaml/test_error.yaml \n*****Executing Job*****\n                    \nJob Name                                    => defaultAddr \n\n                                           \n*****Executing Job*****\n                    \nJob Name                                    => foo \n\n                                           \nDeploying Contract                          name => score_storage \n                                            addr => AAA3D7A9AC8A6BB9156DD8BC83AF54854463458E \nSaving Binary                               => /home/debbi/de.simonschuler.ba/server_linux/burrow/bin/score_storage.bin \n*****Executing Job*****\n                    \nJob Name                                    => _add_score \n\n                                           \n*****Executing Job*****\n                    \nJob Name                                    => _get_score \n\n                                           \nnot enough data\n\n``` ","username":"SimonSchuler","ts":"2019-04-30T09:05:24.304Z"}
{"msg":"@SimonSchuler what burrow version are you using?","username":"seanyoung","ts":"2019-04-30T09:10:39.467Z"}
{"msg":"and would you mind sharing the test_error.yaml please","username":"seanyoung","ts":"2019-04-30T09:11:06.582Z"}
{"msg":"0.23.3+commit.v0.23.3-115-g4bf2d79b+2019-01-25","username":"SimonSchuler","ts":"2019-04-30T09:11:07.413Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=6SjSyC2vSycgN7nD6) @seanyoung its just copy paste from your code","username":"SimonSchuler","ts":"2019-04-30T09:11:30.104Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=6SjSyC2vSycgN7nD6","url":"https://chat.hyperledger.org/channel/burrow?msg=6SjSyC2vSycgN7nD6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"```\njobs:\n - name: foo\n   deploy:\n     contract: score_storage.sol\n \n - name: _add_score\n   call:\n     destination: $foo\n     function: add_score\n     data:\n     - 144\n     - 9000000\n \n - name: _get_score\n   query-contract:\n     destination: $foo\n     function: get_score\n     data:\n     - 144\n``` ","username":"SimonSchuler","ts":"2019-04-30T09:12:19.423Z"}
{"msg":"great, I got that message two now with that version","username":"seanyoung","ts":"2019-04-30T09:13:19.759Z"}
{"msg":"so updating would solve my problem I guess? Thank you :)","username":"SimonSchuler","ts":"2019-04-30T09:14:20.238Z"}
{"msg":"I suspect so. However I can't remember a bug fix for anything like this","username":"seanyoung","ts":"2019-04-30T09:15:01.692Z"}
{"msg":"Thank you so much :)","username":"SimonSchuler","ts":"2019-04-30T09:15:49.355Z"}
{"msg":"Hello!\nI've just accidentally found that ecrecover precompiled smart contract is disabled.\nhttps://github.com/hyperledger/fabric-chaincode-evm/blob/master/vendor/github.com/hyperledger/burrow/execution/evm/native.go#L75\n\nIs it a permanent decision?","username":"fastchain","ts":"2019-04-30T11:24:01.185Z"}
{"msg":"@fastchain not permanent and always looking for help/contributions. -> https://github.com/hyperledger/burrow/issues/436","username":"compleatang","ts":"2019-04-30T12:52:57.402Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=GQHdXTaRbtMPzJ2er) @mikeburrow Hi @mikeburrow first off welcome! Currently, we have strongly discussed implementation of the Cosmos SDK, but up to now have not had time to develop sophisticated token economics primitives in particular with relationship to validator bonding. We'd always welcome contributors in this area at a minimum in terms of outlining your design requirements in a GH issue, or perhaps code level assistance in bringing in the Cosmos SDK. _Some_ of what you're trying to achieve is doable within EVM smart contracts, but it would likely be relatively hacky. ","username":"compleatang","ts":"2019-04-30T12:59:00.692Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=GQHdXTaRbtMPzJ2er","url":"https://chat.hyperledger.org/channel/burrow?msg=GQHdXTaRbtMPzJ2er","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=GQHdXTaRbtMPzJ2er) Hi @mikeburrow first off welcome! Currently, we have strongly discussed implementation of the Cosmos SDK, but up to now have not had time to develop sophisticated token economics primitives in particular with relationship to validator bonding. We'd always welcome contributors in this area at a minimum in terms of outlining your design requirements in a GH issue, or perhaps code level assistance in bringing in the Cosmos SDK. _Some_ of what you're trying to achieve is doable within EVM smart contracts, but it would likely be relatively hacky. ","username":"compleatang","ts":"2019-04-30T12:59:00.692Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=GQHdXTaRbtMPzJ2er","url":"https://chat.hyperledger.org/channel/burrow?msg=GQHdXTaRbtMPzJ2er","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@compleatang  aha.. so the root of the problem that there is no \"compressed signature\" for  ed25519, which would work tha same ways as for secp256k1 , right?","username":"fastchain","ts":"2019-04-30T12:59:35.824Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ZB97rjrrzZZQNdhjg) @efn cc @silasdavis ","username":"compleatang","ts":"2019-04-30T12:59:48.788Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ZB97rjrrzZZQNdhjg","url":"https://chat.hyperledger.org/channel/burrow?msg=ZB97rjrrzZZQNdhjg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Fastchain, I'm not deep in the cryptography primitives but I do remember that it was something around the difference between ed22519 and secp. ","username":"compleatang","ts":"2019-04-30T13:00:37.460Z"}
{"msg":"Since we use ed22519 keys in burrow (as does tendermint) I remember we turned it off for something to do with that. Although there's no reason it should be off for all curve types we just haven't gotten around to it in terms of our (monax) contributions.","username":"compleatang","ts":"2019-04-30T13:01:57.780Z"}
{"msg":"@compleatang  got it.","username":"fastchain","ts":"2019-04-30T13:02:35.356Z"}
{"msg":"Fast, I'm just seeing your bug noted in #fabric-evm ","username":"compleatang","ts":"2019-04-30T13:03:43.637Z"}
{"msg":"can you describe a bit here the problem? and if so can you dump an issue in burrow so we can take a look?","username":"compleatang","ts":"2019-04-30T13:04:26.935Z"}
{"msg":"That doesn't feel like we should throw on a simple factory with constructor pattern.","username":"compleatang","ts":"2019-04-30T13:04:42.006Z"}
{"msg":"So the problem is following, I have a contract  1 which creates another contract 2 on function call and contract 2 creates  contract 3 in constructor. In ethereum EVM it works.  In burrow I get this (RPC dump from FAB3 proxy):\n\n```\nPOST / HTTP/1.1\nHost: 127.0.0.1:5000\nUser-Agent: python-requests/2.21.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 216\n\n{\"jsonrpc\": \"2.0\", \"method\": \"eth_sendTransaction\", \"params\": [{\"from\": \"0x52485A6876A8D7E70DD5CB2A706B7d909842A57e\", \"to\": \"0x7C52556AcA4Bcd62c3538f2739ad0dD7EaAc438b\", \"data\": \"0xaa908e61\", \"gas\": \"0x0\"}], \"id\": 9}\n\n\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\nX-Content-Type-Options: nosniff\nDate: Tue, 30 Apr 2019 13:08:27 GMT\nContent-Length: 300\n\n{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"Failed to execute transaction: Transaction processing for endorser [peer0.org1.example.com:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted\",\"data\":null},\"id\":9}\n```\n\nYou can reproduce it with \nhttps://pastebin.com/anuNT9nX\n ","username":"fastchain","ts":"2019-04-30T13:09:43.196Z"}
{"msg":"So the problem is following: I have a contract  1 which creates another contract 2 on function call and contract 2 creates  contract 3 in constructor. In ethereum EVM it works.  In burrow I get this (RPC dump from FAB3 proxy):\n\n```\nPOST / HTTP/1.1\nHost: 127.0.0.1:5000\nUser-Agent: python-requests/2.21.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 216\n\n{\"jsonrpc\": \"2.0\", \"method\": \"eth_sendTransaction\", \"params\": [{\"from\": \"0x52485A6876A8D7E70DD5CB2A706B7d909842A57e\", \"to\": \"0x7C52556AcA4Bcd62c3538f2739ad0dD7EaAc438b\", \"data\": \"0xaa908e61\", \"gas\": \"0x0\"}], \"id\": 9}\n\n\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\nX-Content-Type-Options: nosniff\nDate: Tue, 30 Apr 2019 13:08:27 GMT\nContent-Length: 300\n\n{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"Failed to execute transaction: Transaction processing for endorser [peer0.org1.example.com:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted\",\"data\":null},\"id\":9}\n```\n\nYou can reproduce it with \nhttps://pastebin.com/anuNT9nX\n ","username":"fastchain","ts":"2019-04-30T13:09:43.196Z"}
{"msg":">can you dump an issue in burrow so we can take a look?\nyou mean create an issue in jira in burrow project?","username":"fastchain","ts":"2019-04-30T13:10:46.658Z"}
{"msg":"Hmm. We test a very similar pattern..  https://github.com/hyperledger/burrow/tree/develop/tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing","username":"compleatang","ts":"2019-04-30T13:10:47.419Z"}
{"msg":"Are you sure it's not a permissioning problem? ","username":"compleatang","ts":"2019-04-30T13:11:06.234Z"}
{"msg":"FWIW we use GitHub issues not Jira.","username":"compleatang","ts":"2019-04-30T13:11:32.802Z"}
{"msg":">Are you sure it's not a permissioning problem?\nI'm sure. I've spent last week fixing the permission issue :)","username":"fastchain","ts":"2019-04-30T13:12:17.836Z"}
{"msg":"Oh cool. ","username":"compleatang","ts":"2019-04-30T13:12:35.786Z"}
{"msg":"@compleatang  there is a difference with your pattern: in your teste you create just one contract on, in my case I create two (the first created  creates second one in constructor).  ","username":"fastchain","ts":"2019-04-30T13:14:03.218Z"}
{"msg":"If you can give us a test case on a GH issue we'll definitely take a look. Our tests follow the pattern linked above.","username":"compleatang","ts":"2019-04-30T13:14:26.966Z"}
{"msg":"And yes, misread your case they are different... ","username":"compleatang","ts":"2019-04-30T13:14:46.140Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=3n4M4N4c35ds2fCAq) But, to be honest, I can't say for sure, since I don't no what is the root of the problem","username":"fastchain","ts":"2019-04-30T13:14:54.262Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=3n4M4N4c35ds2fCAq","url":"https://chat.hyperledger.org/channel/burrow?msg=3n4M4N4c35ds2fCAq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=3n4M4N4c35ds2fCAq) But, to be honest, I can't say for sure, since I don't know what is the root of the problem","username":"fastchain","ts":"2019-04-30T13:14:54.262Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=3n4M4N4c35ds2fCAq","url":"https://chat.hyperledger.org/channel/burrow?msg=3n4M4N4c35ds2fCAq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"K. ","username":"compleatang","ts":"2019-04-30T13:16:35.035Z"}
{"msg":"@compleatang  ok, I'll open an issue on github.   Buy the way, how can I get a version of burrow if I use it as a part of the evm-chaincode  ? ","username":"fastchain","ts":"2019-04-30T13:17:54.034Z"}
{"msg":"Just download the binaries from our releases. Although I'm not sure exactly the version fabric currently uses.","username":"compleatang","ts":"2019-04-30T13:18:58.507Z"}
{"msg":"They keep in vendor folder \nhttps://github.com/hyperledger/fabric-chaincode-evm/tree/master/vendor/github.com/hyperledger/burrow so it looks like 0.24.4","username":"fastchain","ts":"2019-04-30T13:22:41.563Z"}
{"msg":"@compleatang \nhttps://github.com/hyperledger/burrow/issues/1101","username":"fastchain","ts":"2019-04-30T13:29:06.134Z"}
{"msg":"@fastchain I don't get a revert on 0.25.0","username":"compleatang","ts":"2019-04-30T14:05:24.884Z"}
{"msg":"if you install burrow by downloading our binary then save this yaml:\n\n```yaml\n```","username":"compleatang","ts":"2019-04-30T14:18:45.266Z"}
{"msg":"if you install burrow by downloading our binary then save this yaml:\n\n```yaml\njobs:\n\n- name: deployD\n  deploy:\n    contract: contract.sol\n    instance: D\n\n- name: deployX\n  deploy:\n    contract: contract.sol\n    instance: X\n\n- name: deployC\n  deploy:\n    contract: contract.sol\n    instance: C \n\n- name: create1\n  call:\n    destination: $deployC\n    function: createD \n    data: []\n    bin: $deployC\n```","username":"compleatang","ts":"2019-04-30T14:18:45.266Z"}
{"msg":"with your base contract as `contract.sol`","username":"compleatang","ts":"2019-04-30T14:19:35.292Z"}
{"msg":"then run this script:\n\n```bash\n#!/usr/bin/env bash\n\nrm -rf .burrow\nburrow spec -f1 | burrow configure -s- > config.toml\naddr=$(cat config.toml | grep \"ValidatorAddress\"| sed -e \"s/^ValidatorAddress = //\" -e 's/\"//g')\necho $addr\nburrow start -v0 -c config.toml &> burrow.log &\nsleep 1\nburrow deploy -a $addr deploy.yaml\npkill burrow\n```","username":"compleatang","ts":"2019-04-30T14:19:52.974Z"}
{"msg":"you will see that it all operates without a problem on burrow.","username":"compleatang","ts":"2019-04-30T14:20:21.547Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=Y59GvwDAfDf3fYmr7) @efn Yes that does kinda suck...\n\n@seanyoung there is really no good reason for us to store the genesisdoc - we can just store the hash in PersistedState - we'll need to rework a couple of things, but we are not relying on the genesis being stored in state - we expect it to be on disk anyway","username":"silasdavis","ts":"2019-04-30T14:25:50.710Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=Y59GvwDAfDf3fYmr7","url":"https://chat.hyperledger.org/channel/burrow?msg=Y59GvwDAfDf3fYmr7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@compleatang  wow.. thank you! which  version of  borrow you used for this test? ","username":"fastchain","ts":"2019-04-30T14:38:05.058Z"}
{"msg":"it's passing on CI; see #1102 which would be current develop branch. i run v0.25.0","username":"compleatang","ts":"2019-04-30T14:39:00.653Z"}
{"msg":"didn't test against 0.24.4 but we haven't really touched the evm in there so it's hard for me to see that it's a problem. if you want to verify static binaries are downloadable here -> https://github.com/hyperledger/burrow/releases (it should take you less than 5 minutes to confirm with the above information)","username":"compleatang","ts":"2019-04-30T14:39:49.686Z"}
{"msg":"(plus you'll have burrow installed :D )","username":"compleatang","ts":"2019-04-30T14:39:57.082Z"}
{"msg":"@seanyoung I am really sorry to bother You again, unfortunately it is still not working with the same error. \n\nEverything is the same (I renamed the yaml directory to deploy, thats it)\n\nI just updated burrow and go.\ngo version \"go1.12.2 linux/amd64\"\nburrow version: 0.25.0+commit.v0.24.3-71-g6c5e9ab5+2019-04-30\n```\n./burrow deploy --address 048AB196B49B328E8D629B44859030513DD7F5FC deploy/test_error.yaml \nlog_channel=Info message=\"Using chain\" Chain=127.0.0.1:10997 Signer=\nlog_channel=Info message=\"Loading Playbook File.\"\nlog_channel=Info message=\"Loading playbook file\" path=/home/debbi/de.simonschuler.ba/server_linux/burrow/deploy filename=/home/debbi/de.simonschuler.ba/server_linux/burrow/deploy/test_error.yaml\nlog_channel=Info message=\"*****Executing Job*****\" JobName=defaultAddr Type=Account\nlog_channel=Info message=\"Setting Account\" account=048AB196B49B328E8D629B44859030513DD7F5FC\nlog_channel=Info message=\"*****Executing Job*****\" JobName=foo Type=Deploy\nlog_channel=Info message=\"Contract path\" path=score_storage.sol\nlog_channel=Info message=\"Deploying the single contract from solidity file\" path=score_storage.sol abi=\"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"_allowed_user\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"give_access_right\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get_times\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"int256[]\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[{\\\"name\\\":\\\"_time\\\",\\\"type\\\":\\\"int256\\\"}],\\\"name\\\":\\\"get_score\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"who_has_access_right\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"_time\\\",\\\"type\\\":\\\"int256\\\"},{\\\"name\\\":\\\"_score\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"add_score\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":false,\\\"inputs\\\":[],\\\"name\\\":\\\"delete_everyting\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"_non_allowed_user\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"remove_access_right\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"}]\" bin=***I REMOVED THE BIN, TOO MUCH DATA***\nlog_channel=Info message=\"Saving Binary\" contract=score_storage\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nlog_channel=Info message=\"Using mempool signing since no keyClient set, pass --keys to sign locally or elsewhere\"\nlog_channel=Info message=\"Using mempool signing\"\nlog_channel=Info message=\"Tx Return\" addr=30C63C4ECB1465D7602001779FB5B82718D6B7BD TransactionHash=85ee47d986868dd2f519e576628299b1cdf81ca293f2765f4f218bd430677738\nlog_channel=Info message=\"*****Executing Job*****\" JobName=_add_score Type=Call\nlog_channel=Info message=Calling destination=30C63C4ECB1465D7602001779FB5B82718D6B7BD function=add_score data=958b980400000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000895440\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nlog_channel=Info message=\"Using mempool signing\"\nlog_channel=Info message=\"No return result value\"\nlog_channel=Info message=\"*****Executing Job*****\" JobName=_get_score Type=QueryContract\nlog_channel=Info message=\"Query contract\" query=\"unsupported value type\"\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nERROR: not enough datalog_channel=Info message=\"JOBS THAT FAILED\" count=1\nlog_channel=Info message=\"Playbook result\" jobNo=0 file=deploy/test_error.yaml error=\"not enough data\" time=2.221459821s\n``` \nAny idea?","username":"SimonSchuler","ts":"2019-04-30T15:08:20.381Z"}
{"msg":"Thanks @silasdavis Indeed, I just removed it from the state and it worked :)","username":"efn","ts":"2019-04-30T15:48:53.975Z"}
{"msg":"@SimonSchuler  you are right, on v0.25.0 it does not work but it does work on the develop branch. This is strange..","username":"seanyoung","ts":"2019-04-30T18:18:50.770Z"}
{"msg":"@SimonSchuler I'm sorry, I think it's a different problem. get_score() returns uint; however, there in data returned by this function. Note the message:\nlog_channel=Info message=\"No return result value\"\nThen it tries to decode the value and cannot since there is nothing to decode","username":"seanyoung","ts":"2019-04-30T18:34:40.657Z"}
{"msg":"If I replace the query-contact with call, it works fine. However, solidity says the function is constant in the abi so I don't know why it's not working","username":"seanyoung","ts":"2019-04-30T18:40:23.026Z"}
{"msg":"@compleatang hi, I've executed the test and something went wrong. results are here https://github.com/hyperledger/burrow/pull/1102 ","username":"fastchain","ts":"2019-05-01T06:22:36.866Z"}
{"msg":"@SimonSchuler so try the following yaml:\n```\njobs:\n - name: foo\n   deploy:\n     contract: score_storage.sol\n \n - name: _add_score\n   call:\n     destination: $foo\n     function: add_score\n     data:\n     - 144\n     - 9000000\n \n - name: _get_score\n   call:\n     destination: $foo\n     function: get_score\n     data:\n     - 144\n```","username":"seanyoung","ts":"2019-05-01T08:13:28.203Z"}
{"msg":"@seanyoung the call works.\n```\nlog_channel=Info message=\"Saving Binary\" contract=score_storage\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nlog_channel=Info message=\"Using mempool signing since no keyClient set, pass --keys to sign locally or elsewhere\"\nlog_channel=Info message=\"Using mempool signing\"\nlog_channel=Info message=\"Tx Return\" addr=C895930342918AAB868461403316CC030A94519E TransactionHash=912e42c284072b4c590f120dd90a587c3f81ae191c847e76fc74f7b97f8c3f99\nlog_channel=Info message=\"*****Executing Job*****\" JobName=_add_score Type=Call\nlog_channel=Info message=Calling destination=C895930342918AAB868461403316CC030A94519E function=add_score data=958b980400000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000895440\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nlog_channel=Info message=\"Using mempool signing\"\nlog_channel=Info message=\"No return result value\"\nlog_channel=Info message=\"*****Executing Job*****\" JobName=_get_score Type=Call\nlog_channel=Info message=\"Function call to constant function, query-contract type job will be faster than call\"\nlog_channel=Info message=Calling destination=C895930342918AAB868461403316CC030A94519E function=get_score data=731c9a090000000000000000000000000000000000000000000000000000000000000090\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nlog_channel=Info message=\"Using mempool signing\"\nlog_channel=Info message=\"Return value\" value=9000000\nlog_channel=Info message=\"Job Vars\" name=0 value=9000000\nlog_channel=Info message=\"Writing to current directory\" output=/home/debbi/de.simonschuler.ba/server_linux/burrow/deploy/test_error_call.output.json\nlog_channel=Info message=\"JOBS THAT SUCCEEEDED\" count=1\nlog_channel=Info message=\"Playbook result\" jobNo=0 file=deploy/test_error_call.yaml time=921.436115ms\n\n``` \n\noutput.json:\n```\n{\n  \"_add_score\": \"\",\n  \"_get_score\": \"9000000\",\n  \"defaultAddr\": \"048AB196B49B328E8D629B44859030513DD7F5FC\",\n  \"foo\": \"C895930342918AAB868461403316CC030A94519E\"\n}\n``` ","username":"SimonSchuler","ts":"2019-05-01T08:21:03.922Z"}
{"msg":"@seanyoung the call works.\n```\n[...]\nlog_channel=Info message=\"Saving Binary\" contract=score_storage\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nlog_channel=Info message=\"Using mempool signing since no keyClient set, pass --keys to sign locally or elsewhere\"\nlog_channel=Info message=\"Using mempool signing\"\nlog_channel=Info message=\"Tx Return\" addr=C895930342918AAB868461403316CC030A94519E TransactionHash=912e42c284072b4c590f120dd90a587c3f81ae191c847e76fc74f7b97f8c3f99\nlog_channel=Info message=\"*****Executing Job*****\" JobName=_add_score Type=Call\nlog_channel=Info message=Calling destination=C895930342918AAB868461403316CC030A94519E function=add_score data=958b980400000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000895440\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nlog_channel=Info message=\"Using mempool signing\"\nlog_channel=Info message=\"No return result value\"\nlog_channel=Info message=\"*****Executing Job*****\" JobName=_get_score Type=Call\nlog_channel=Info message=\"Function call to constant function, query-contract type job will be faster than call\"\nlog_channel=Info message=Calling destination=C895930342918AAB868461403316CC030A94519E function=get_score data=731c9a090000000000000000000000000000000000000000000000000000000000000090\nlog_channel=Info message=CallTx call=\"unsupported value type\"\nlog_channel=Info message=\"Using mempool signing\"\nlog_channel=Info message=\"Return value\" value=9000000\nlog_channel=Info message=\"Job Vars\" name=0 value=9000000\nlog_channel=Info message=\"Writing to current directory\" output=/home/debbi/de.simonschuler.ba/server_linux/burrow/deploy/test_error_call.output.json\nlog_channel=Info message=\"JOBS THAT SUCCEEEDED\" count=1\nlog_channel=Info message=\"Playbook result\" jobNo=0 file=deploy/test_error_call.yaml time=921.436115ms\n\n``` \n\noutput.json:\n```\n{\n  \"_add_score\": \"\",\n  \"_get_score\": \"9000000\",\n  \"defaultAddr\": \"048AB196B49B328E8D629B44859030513DD7F5FC\",\n  \"foo\": \"C895930342918AAB868461403316CC030A94519E\"\n}\n``` ","username":"SimonSchuler","ts":"2019-05-01T08:21:03.922Z"}
{"msg":"I think we need an issue for this, to debug why query contract does not work","username":"seanyoung","ts":"2019-05-01T08:26:15.803Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=viLXEXk3H69v5u7mp) @seanyoung i dont quite understand what you are trying to tell me here. Did I make the mistake?","username":"SimonSchuler","ts":"2019-05-01T08:28:35.270Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=viLXEXk3H69v5u7mp","url":"https://chat.hyperledger.org/channel/burrow?msg=viLXEXk3H69v5u7mp","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=YT5DffEKD65HiG3cs) @seanyoung will do.","username":"SimonSchuler","ts":"2019-05-01T08:28:48.383Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=YT5DffEKD65HiG3cs","url":"https://chat.hyperledger.org/channel/burrow?msg=YT5DffEKD65HiG3cs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"That was not very clear, I'm sorry. I'm just saying I should open an issue on burrow for this, so we can investigate this at some point.","username":"seanyoung","ts":"2019-05-01T08:38:55.166Z"}
{"msg":"ok :) I will just stick with the workaround for now :)","username":"SimonSchuler","ts":"2019-05-01T08:39:45.260Z"}
{"msg":"","username":"efn","ts":"2019-05-01T08:58:23.248Z","attachments":[{"type":"file","title":"Clipboard - May 1, 2019 10:58 AM","title_link":"/file-upload/ghxo86S56pse26N3K/Clipboard%20-%20May%201,%202019%2010:58%20AM","image_url":"/file-upload/ghxo86S56pse26N3K/Clipboard%20-%20May%201,%202019%2010:58%20AM","image_type":"image/png","image_size":253684,"url":"/file-upload/ghxo86S56pse26N3K/Clipboard%20-%20May%201,%202019%2010:58%20AM","remote":false,"fileId":"ghxo86S56pse26N3K","fileName":"Clipboard - May 1, 2019 10:58 AM"}]}
{"msg":"Hi, I have a couple more bottlenecks in my experiment, I'm running 80 validators.\nThe problem is that the client takes a long time to send the txs, I try to send 200tx over 5s blocks.\nBlocks are produced with around 7-9s latency.\nIn the beginning, the performance is good, but as the system progresses it gets very erratic, like the file above\nX axis is blocks (0, N) and Y is Tx/s in that block\n\n","username":"efn","ts":"2019-05-01T08:58:59.988Z"}
{"msg":"this experiment can take around 18tx/s on average","username":"efn","ts":"2019-05-01T08:59:33.115Z"}
{"msg":"@fastchain to answer your last queston on the PR before moving here, yes you can give the deploy.yaml a binary. just save the binary as a .bin and change the name of the contract in the deploy.yaml `deploy` job.","username":"compleatang","ts":"2019-05-01T14:16:52.731Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=dqPZT3gSY2Xpe2e6J) @efn If you are able to work that into a PR it would be much appreciated - it needs to be removed from some of the call chain and `GenesisHash` _should_ be included in `PersistedState` in order to ensure what we have on disc matches what we start up against","username":"silasdavis","ts":"2019-05-02T10:28:15.538Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=dqPZT3gSY2Xpe2e6J","url":"https://chat.hyperledger.org/channel/burrow?msg=dqPZT3gSY2Xpe2e6J","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=3fSjQr2nSz6n7SJiB) @efn Are we looking atstats for a single validator here?","username":"silasdavis","ts":"2019-05-02T10:29:05.964Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=3fSjQr2nSz6n7SJiB","url":"https://chat.hyperledger.org/channel/burrow?msg=3fSjQr2nSz6n7SJiB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"if you could run burrow with config:\n```\n[RPC]\n  [RPC.Profiler]\n    Enabled = true\n    ListenAddress = \"tcp://127.0.0.1:6060\"\n```\nand try to capture some traces from a validator while it is performing poorly with:\n```\n# CPU Profile\ngo tool pprof http://localhost:6060/debug/pprof/profile\\?seconds\\=30\n# Memory\n```","username":"silasdavis","ts":"2019-05-02T11:31:18.445Z"}
{"msg":"if you could run burrow with config:\n```\n[RPC]\n  [RPC.Profiler]\n    Enabled = true\n    ListenAddress = \"tcp://127.0.0.1:6060\"\n```\nand try to capture some traces from a validator while it is performing poorly with:\n```\n# CPU Profile\ngo tool pprof http://localhost:6060/debug/pprof/profile\\?seconds\\=30\n# Memory\ngo tool pprof http://localhost:6060/debug/pprof/heap\n```","username":"silasdavis","ts":"2019-05-02T11:31:18.445Z"}
{"msg":"maybe also `http://localhost:6060/debug/pprof/trace\\?seconds\\=30`","username":"silasdavis","ts":"2019-05-02T11:31:56.686Z"}
{"msg":"the trace files will be saved to `~/pprof` by default","username":"silasdavis","ts":"2019-05-02T11:32:14.974Z"}
{"msg":"if you could open an issue and attach those traces plus your graph and any other information on github","username":"silasdavis","ts":"2019-05-02T11:33:29.054Z"}
{"msg":"there is a definitely some performance and tuning work to be done and the more complete a picture we can build there the better job we can do when we have a proper run at it - quite often the traces will yield low-hanging fruit ","username":"silasdavis","ts":"2019-05-02T11:34:24.265Z"}
{"msg":"@compleatang  hello!\nI've setup the appropriate  solc (using make bin/solc)\nand now  I have following output:\n\n```\nlog_channel=Info message=\"Using chain\" Chain=127.0.0.1:10997 Signer=\nlog_channel=Info message=\"Loading Playbook File.\"\nlog_channel=Info message=\"Loading playbook file\" path=/home/afx/go/src/github.com/hyperledger/burrow/bin filename=/home/afx/go/src/github.com/hyperledger/burrow/bin/deploy.yaml\nlog_channel=Info message=\"*****Executing Job*****\" JobName=defaultAddr Type=Account\nlog_channel=Info message=\"Setting Account\" account=10FD1324C696E68935C4252D1F636323CE7221BA\nlog_channel=Info message=\"*****Executing Job*****\" JobName=deployD Type=Deploy\nlog_channel=Info message=\"Contract path\" path=contract.sol\nlog_channel=Info message=\"Warning during contract compilation\" warning=\"contract.sol:12:9: Warning: Unused local variable.\\n        D d = new D(y);\\n        ^-^\\ncontract.sol:20:9: Warning: Unused local variable.\\n        X newX = new X(q);\\n        ^----^\\n\"\nlog_channel=Info message=\"Deploying a single contract that matches\" contract=D\nlog_channel=Info message=\"Saving Binary\" contract=D\nlog_channel=Info message=\"Constructor wants %d arguments but 0 provided\" 1=(MISSING)\nERROR: Constructor wants 1 arguments but 0 providedlog_channel=Info message=\"JOBS THAT FAILED\" count=1\nlog_channel=Info message=\"Playbook result\" jobNo=0 file=deploy.yaml error=\"Constructor wants 1 arguments but 0 provided\" time=14.238781ms\n```\n\nMy contract is \n```\npragma solidity ^0.5.1;\n\ncontract D {\n    address x;\n    constructor(address z) public payable {\n        x =z;\n    }\n}\ncontract X {\n    address z;\n    constructor(address y) public payable {\n        D d = new D(y);\n    }\n}\ncontract C {\n \n    address q;\n    function createD() public {\n        q=msg.sender;\n        X newX = new X(q);\n    }\n}\n\n```\n\ndeploy.yaml:\n\n```\njobs:\n\n- name: deployD\n  deploy:\n    contract: contract.sol\n    instance: D\n\n- name: deployX\n  deploy:\n    contract: contract.sol\n    instance: X\n\n- name: deployC\n  deploy:\n    contract: contract.sol\n    instance: C \n\n- name: create1\n  call:\n    destination: $deployC\n    function: createD \n    data: []\n    bin: $deployC\n```\n\nIt looks like there is some issues with processing msg.sender, or something wrong in yaml file. Could you please help me to figure out. \n\n","username":"fastchain","ts":"2019-05-06T04:50:39.789Z"}
{"msg":"btw, when I removed msg.sender variable (and depended  address varibales) from contracts. Deployment has executed successfully.","username":"fastchain","ts":"2019-05-06T04:53:37.012Z"}
{"msg":"Hello everyone, I was running out of space (on my server) the other day. So I looked into block generation rates for burrow and found that around every half a second a new block is generated. For my purpose it would be sufficient to have like one a minute :) Is there an easy way to achieve this?","username":"SimonSchuler","ts":"2019-05-07T06:05:38.606Z"}
{"msg":"@fastchain replace the deploy.yaml with:\n```\njobs:\n- name: deployC\n  deploy:\n    contract: contract.sol\n    instance: C \n\n- name: create1\n  call:\n    destination: $deployC\n    function: createD \n    data: []\n    bin: $deployC\n```\n","username":"seanyoung","ts":"2019-05-07T08:12:42.579Z"}
{"msg":"The first two jobs were unnecessary and in fact incorrect, but this was not checked before. See https://github.com/hyperledger/burrow/commit/27913e7c74b99bbd8e62a3ab76b85ba3803bb078","username":"seanyoung","ts":"2019-05-07T08:14:02.316Z"}
{"msg":"@seanyoung  Thanks!\nBuy the way,  do you know what does \"error 16 - execution reverted: execution reverted\" mean  ? When and why error  \"execution reverted\" could take place? ","username":"fastchain","ts":"2019-05-07T09:09:54.157Z"}
{"msg":"here are filtered logs from container *docker logs  peer0.org1.example.com  -f 2>&1  | grep -via gossip | grep -via discovery*\nhttps://pastebin.com/vuG6KaAi","username":"fastchain","ts":"2019-05-07T10:54:25.485Z"}
{"msg":"@fastchain execution reverted can have multiple causes. \n1. If you call assert(), require() or revert\n2. Problem ABI decoding the constructor/function arguments \n3. Calling another contract which does not exist","username":"seanyoung","ts":"2019-05-07T11:51:37.357Z"}
{"msg":"@fastchain execution reverted can have multiple causes. \n1. If you call assert(), require() or revert\n2. Problem ABI decoding the constructor/function arguments \n3. Calling another contract which does not exist","username":"seanyoung","ts":"2019-05-07T11:51:37.357Z"}
{"msg":"@fastchain execution reverted can have multiple causes. \n1. If you call assert(), require() or revert()\n2. Problem ABI decoding the constructor/function arguments \n3. Calling another contract which does not exist","username":"seanyoung","ts":"2019-05-07T11:51:37.357Z"}
{"msg":"Basically anything that causes runtime errors in solidity (evm) then this is how it bails out","username":"seanyoung","ts":"2019-05-07T11:52:30.741Z"}
{"msg":"@seanyoung  so, if I have  following contract\n```\n\npragma solidity ^0.5.1;\n\ncontract D {\n    address x;\n    constructor(address z) public  {\n        x =z;\n    }\n}\ncontract X {\n    address z;\n    constructor(address y) public  {\n        D d = new D(y);\n    }\n}\ncontract C {\n \n    address q;\n    constructor() public {\n        q=msg.sender;\n        X newX = new X(q);\n    }\n}\n```\nthe only possible reason is ABI decoding issue?","username":"fastchain","ts":"2019-05-08T01:34:57.231Z"}
{"msg":"@seanyoung  so, if I have  following contract\n```\n\npragma solidity ^0.5.1;\n\ncontract D {\n    //address x;\n    constructor() public payable {\n        //x =z;\n    }\n}\ncontract X {\n    //address z;\n    constructor() public payable {\n        D d = new D();\n    }\n}\ncontract C {\n \n\n    function createD() public {\n        X newX = new X();\n    }\n}\n\n```\nthe only possible reason is ABI decoding issue?","username":"fastchain","ts":"2019-05-08T01:34:57.231Z"}
{"msg":"@seanyoung  so, if I have  following contract\n```\n\npragma solidity ^0.5.1;\n\ncontract C {\n    uint8 x;\n    constructor() public  {\n        x =1;\n    }\n}\n\ncontract B {\n    constructor() public  {\n        C c = new C();\n    }\n}\n\ncontract A {\n    constructor()public {\n        B b= new B();\n    }\n}\n\n```\nthe only possible reason is ABI decoding issue?","username":"fastchain","ts":"2019-05-08T01:34:57.231Z"}
{"msg":"@fastchain it could that fabric doesn't like creating contracts in constructors too. I don't know about debugging fabric but I would turn on debugging in the evm vm https://github.com/hyperledger/burrow/blob/develop/execution/evm/vm.go#L84 and see what it is executing. I'm happy to look at a trace if you can get one","username":"seanyoung","ts":"2019-05-08T08:52:14.794Z"}
{"msg":"@fastchain it could that fabric doesn't like creating contracts in constructors too. I don't know about debugging fabric but I would turn on debugging in the evm see https://github.com/hyperledger/burrow/blob/develop/execution/evm/vm.go#L84 and see what it is executing. I'm happy to look at a trace if you can get one","username":"seanyoung","ts":"2019-05-08T08:52:14.794Z"}
{"msg":"@fastchain it could that fabric doesn't like creating contracts in constructors too. I don't know about debugging fabric but I would turn on debugging in the evm (see https://github.com/hyperledger/burrow/blob/develop/execution/evm/vm.go#L84) and see what it is executing before the revert opcode. I'm happy to look at a trace if you can get one","username":"seanyoung","ts":"2019-05-08T08:52:14.794Z"}
{"msg":"Hello, I was trying to find some information on how the Permissioned part of hl Burrow works. Dose anyone have an Idea on where I can read about that part? The documentation on github dose not cover this topic (to my knowledge)","username":"SimonSchuler","ts":"2019-05-08T09:05:46.224Z"}
{"msg":"Hi All! Can someone confirm that the Burrow EVM (or something in an upper layer) performs an Account update after every TX even if nothing changed (or maybe changes are not checked)? \nContext: Burrow EVM and Fabric integration through the EVMCC project.","username":"klenik","ts":"2019-05-08T14:10:05.363Z"}
{"msg":"For every tx the sequence number for the account has to be increased","username":"seanyoung","ts":"2019-05-08T14:27:08.853Z"}
{"msg":"@SimonSchuler I'm not sure there is much documentation.  First you run \"burrow snatives\" to get the solidity interface. The actual implementation is in go, so none of the functions have any bodies. You should write the output to a file and import it into your own solidity files using import.  Permissions can also be managed from deploy yaml, see https://github.com/hyperledger/burrow/blob/develop/tests/jobs_fixtures/app03-basic_and_advanced_permission_txs_and_queries/deploy.yaml","username":"seanyoung","ts":"2019-05-08T14:57:50.006Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=QzSTLnStr5JvGneJe) @seanyoung Ah, I didn't know that, thanks for the info! So this greatly increases the probability of mvcc conflicts during a fabric integration, if there are only a few contracts ","username":"klenik","ts":"2019-05-08T16:42:21.092Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=QzSTLnStr5JvGneJe","url":"https://chat.hyperledger.org/channel/burrow?msg=QzSTLnStr5JvGneJe","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@klenik note that only the input sequence number is increased by Burrow. Also IIRC I think we changed our EVM interface specifically to help you guys out with this: https://github.com/hyperledger/burrow/commit/81e6682c9586dbcb3d4123492deadf17967320b3","username":"silasdavis","ts":"2019-05-09T09:46:53.343Z"}
{"msg":"@klenik note that only the sequence number of the 'input account' (i.e. the 'from address') is increased by Burrow. Also IIRC I think we changed our EVM interface specifically to help you guys out with this: https://github.com/hyperledger/burrow/commit/81e6682c9586dbcb3d4123492deadf17967320b3","username":"silasdavis","ts":"2019-05-09T09:46:53.343Z"}
{"msg":"Hmm, then I need to investigate further to see why the contract account is being updated. Thanks for the heads up!\n(I'm not actually working on the evmcc project, just using it, but I'm always interested in what's under the hood)","username":"klenik","ts":"2019-05-09T16:58:04.608Z"}
{"msg":"Has joined the channel.","username":"asaningmaxchain123","ts":"2019-05-10T03:40:43.601Z","type":"uj"}
{"msg":"@fastchain it could that fabric doesn't like creating contracts in constructors too. I don't know about debugging fabric but I would turn on","username":"fastchain","ts":"2019-05-10T04:03:13.667Z","attachments":[{"message_link":"/channel/burrow?msg=efZmo2mRxKaitgSsA","url":"/channel/burrow?msg=efZmo2mRxKaitgSsA","remote":true,"fileId":null,"fileName":null}],"type":"discussion-created"}
{"msg":"Has joined the channel.","username":"casualuser","ts":"2019-05-10T09:14:35.040Z","type":"uj"}
{"msg":"Hi, I have a question where I can not find documentation about... Can I start a Burrow node without being a validator and if yes - how?","username":"nikolay","ts":"2019-05-10T10:23:38.665Z"}
{"msg":"@nikolay what exactly are you trying to achieve? Just to run a single burrow node to develop against?","username":"seanyoung","ts":"2019-05-10T12:01:36.194Z"}
{"msg":"no, a production system","username":"nikolay","ts":"2019-05-10T12:01:53.588Z"}
{"msg":"but based on the tendermint requirements, the validators have to be protected by centric nodes","username":"nikolay","ts":"2019-05-10T12:02:20.768Z"}
{"msg":"so they are not directly exposed to the network for security concerns","username":"nikolay","ts":"2019-05-10T12:02:33.341Z"}
{"msg":"I want to have centric nodes and full nodes who serve user requests without bothering the validators","username":"nikolay","ts":"2019-05-10T12:02:54.332Z"}
{"msg":"* Sentry nodes","username":"nikolay","ts":"2019-05-10T12:03:59.379Z"}
{"msg":"any thoughts @seanyoung ?","username":"nikolay","ts":"2019-05-10T12:09:40.557Z"}
{"msg":"yes you can run a node in non-validating mode. It can send transactions to the validator nodes.","username":"seanyoung","ts":"2019-05-10T17:01:14.942Z"}
{"msg":"how do I do enable the non-validating mode?","username":"nikolay","ts":"2019-05-10T17:13:07.542Z"}
{"msg":"every time I need to pass a validator address to node start","username":"nikolay","ts":"2019-05-10T17:14:47.936Z"}
{"msg":"every time I need to pass a validator address to burrow start","username":"nikolay","ts":"2019-05-10T17:14:47.936Z"}
{"msg":"and as a second question - I just checked out the latest code from scratch and seems like I can not disable the empty blocks - !bytes.Equal(cs.state.AppHash, lastBlockMeta.Header.AppHash) is never true and it keeps creating new blocks, haven't found an open issue so I expect I am doing something wrong, but wondering why","username":"nikolay","ts":"2019-05-10T17:36:50.820Z"}
{"msg":"and as a second question - I just checked out the latest code from scratch and seems like I can not disable the empty blocks - !bytes.Equal(cs.state.AppHash, lastBlockMeta.Header.AppHash) is never false and it keeps creating new blocks, haven't found an open issue so I expect I am doing something wrong, but wondering why","username":"nikolay","ts":"2019-05-10T17:36:50.820Z"}
{"msg":"You are in non validating mode when you are connected to the network and your are not a Validator. All Burrow nodes have a Validator Address whether or not they are a Validator that serves as their primary signing identity, and is used if ever they have Validator power bonded. We are working on some network introductions that will rely on this primary identity being available. It means we can always associate an account with a node which has some applications. ","username":"silasdavis","ts":"2019-05-10T18:25:46.495Z"}
{"msg":"We do expose all of Tendermint's configuration by default but have expose groups of config that make sense for Burrow sometimes providing meta parameters that control several tendermint parameters at once. The idea is to provide nice defaults and make things tuneable where there is demand. I'm not against providing it as an option though we use block production as a heartbeat mechanism so have not really wanted it off. It might be convenient for testing, but we no have no consensus mode which helps that. Feel free to open an issue. ","username":"silasdavis","ts":"2019-05-10T18:29:01.184Z"}
{"msg":"We do not expose all of Tendermint's configuration by default but have expose groups of config that make sense for Burrow sometimes providing meta parameters that control several tendermint parameters at once. The idea is to provide nice defaults and make things tuneable where there is demand. I'm not against providing it as an option though we use block production as a heartbeat mechanism so have not really wanted it off. It might be convenient for testing, but we no have no consensus mode which helps that. Feel free to open an issue.","username":"silasdavis","ts":"2019-05-10T18:29:01.184Z"}
{"msg":"We do not expose all of Tendermint's configuration by default, preferring to expose groups of config that make sense for Burrow. Sometimes providing different or meta parameters that control several tendermint parameters at once. The idea is to provide nice defaults and less noise, but to make things tuneable where there is demand. I'm not against providing it as an option though we use block production as a heartbeat mechanism so have not really wanted it off. It might be convenient for testing, but we no have no consensus mode which helps that. Feel free to open an issue.","username":"silasdavis","ts":"2019-05-10T18:29:01.184Z"}
{"msg":"Thank you @silasdavis that makes sense and it is fine for now and actually makes sense","username":"nikolay","ts":"2019-05-10T18:34:55.051Z"}
{"msg":"Thank you @silasdavis it is fine for now and actually makes sense","username":"nikolay","ts":"2019-05-10T18:34:55.051Z"}
{"msg":"@silasdavis I would be very thankful if you can give me a hint about the empty blocks as I am trying to debug it for several hours now","username":"nikolay","ts":"2019-05-10T18:48:22.835Z"}
{"msg":"I have an old revision of Burrow that works for weeks now without any issues, but since I upgraded today I can't get over it, it creates empty blocks like crazy and everything is on a clean installation with new network creation","username":"nikolay","ts":"2019-05-10T18:50:05.757Z"}
{"msg":"Hi, I have spent some time on this issue and traced back the empty blocks problem to this commit \"Merge pull request #1000 from silasdavis/state\"  from 1.Feb ","username":"nikolay","ts":"2019-05-11T13:21:53.542Z"}
{"msg":"The issue comes from the fact that after this change the commits are stored in a forest and each save on the forest creates a new hash even if there is no change on the tree, the hash changes. Is this expected behaviour or I should file an issue? ","username":"nikolay","ts":"2019-05-11T13:22:55.964Z"}
{"msg":"Block chain state did not use to be in the merkle tree state so that is a change. But we have always stored empty blocks some I'm not sure hwl this relates to that. When you say like crazy it may be related to the change in default block timings. If empty blocks are an issue please open an issue and we'll make this configurable. I suspect the block storage in state may mean that a simple approach of passing the no empty blocks to tendermint will not be enough. In your case we may want to disable block storage on our side. Either way we can look to a solution if you open an issue. ","username":"silasdavis","ts":"2019-05-12T18:12:05.961Z"}
{"msg":"Block chain state did not use to be in the merkle tree state so that is a change. But we have always stored empty blocks so I'm not sure how this relates to that. When you say like crazy it may be related to the change in default block timings. If empty blocks are an issue please open an issue and we'll make this configurable. I suspect the block storage in state may mean that a simple approach of passing the no empty blocks to tendermint will not be enough. In your case we may want to disable block storage on our side. Either way we can look to a solution if you open an issue.","username":"silasdavis","ts":"2019-05-12T18:12:05.961Z"}
{"msg":"Hi, it is related to this issue - https://github.com/tendermint/tendermint/issues/1995 , please check the last answer, I will file an issue, explaining what exactly is observed","username":"nikolay","ts":"2019-05-13T08:01:06.183Z"}
{"msg":"@silasdavis Can you please provide some examples when the contract execution is not reverted, but aborted (different error codes as I see)? What can trigger the more serious abort error? ","username":"klenik","ts":"2019-05-13T11:11:29.744Z"}
{"msg":"Has joined the channel.","username":"mohor32","ts":"2019-05-13T15:59:06.791Z","type":"uj"}
{"msg":"Can anybody please help in getting started with Hyperledger Burrow?I am following the instructions listed here https://github.com/hyperledger/burrow/blob/develop/docs/README.md","username":"mohor32","ts":"2019-05-13T15:59:07.961Z"}
{"msg":"But while starting the node i am getting the error ```` burrow command not found ````","username":"mohor32","ts":"2019-05-13T15:59:39.346Z"}
{"msg":"am i missing something here?what i feel is that i need to have fabric installed for this..i dont have though.","username":"mohor32","ts":"2019-05-13T16:00:47.691Z"}
{"msg":"is this the thing that is missing?","username":"mohor32","ts":"2019-05-13T16:00:59.275Z"}
{"msg":"any help , leads on this would be highly appreciated","username":"mohor32","ts":"2019-05-13T16:01:19.714Z"}
{"msg":"thanks ","username":"mohor32","ts":"2019-05-13T16:01:22.112Z"}
{"msg":"after following the installation procedure https://github.com/hyperledger/burrow/blob/develop/docs/INSTALL.md ","username":"nikolay","ts":"2019-05-13T16:11:34.627Z"}
{"msg":"burrow is placed in $GOPATH/src/github.com/hyperledger/burrow/bin","username":"nikolay","ts":"2019-05-13T16:11:52.444Z"}
{"msg":"so you need to execute $GOPATH/src/github.com/hyperledger/burrow/bin/burrow start","username":"nikolay","ts":"2019-05-13T16:12:12.423Z"}
{"msg":"or export it into your path export PATH=$PATH:$GOPATH/src/github.com/hyperledger/burrow/bin","username":"nikolay","ts":"2019-05-13T16:12:38.598Z"}
{"msg":"thanks @nikolay ","username":"mohor32","ts":"2019-05-13T16:16:07.478Z"}
{"msg":"Has joined the channel.","username":"AbhishekAadi","ts":"2019-05-13T20:38:24.839Z","type":"uj"}
{"msg":"stream","username":"efn","ts":"2019-05-13T21:04:26.782Z"}
{"msg":"Dear all, is there any permission flag, which allows everything or disabled permissions subsystem?","username":"fastchain","ts":"2019-05-14T00:28:32.849Z"}
{"msg":"Has joined the channel.","username":"KarlKneis","ts":"2019-05-14T04:16:43.968Z","type":"uj"}
{"msg":" i got a question/doubt.I am following this tutorial https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/deploy-contracts.md to deploy a smart contract in Burrow","username":"mohor32","ts":"2019-05-15T16:23:44.738Z"}
{"msg":"I have a question regarding deployment of smart contracts in hyperledger burrow..if i have more than one contract do i need to create separate deploy yaml file for all of them?like if i have three contracts three separate deploy yaml files???","username":"mohor32","ts":"2019-05-15T18:11:23.310Z"}
{"msg":"or is there any way to pack them in a single deploy yaml file?","username":"mohor32","ts":"2019-05-15T18:11:41.758Z"}
{"msg":"@mohor32 you can have many contracts in one deploy yaml. In fact that's why the deploy yaml exist. See https://github.com/hyperledger/burrow/blob/develop/tests/jobs_fixtures/app54-static-call/deploy.yaml and also https://github.com/agreements-network/blackstone/tree/develop/contracts/src","username":"seanyoung","ts":"2019-05-16T08:35:34.090Z"}
{"msg":"thanks @seanyoung ","username":"mohor32","ts":"2019-05-16T09:44:23.697Z"}
{"msg":"@SimonSchuler Burrow runs on Tendermint, so you'd probably find their docs to be of some help: https://tendermint.com/docs/tendermint-core/validators.html","username":"gregdhill","ts":"2019-05-17T09:16:27.991Z"}
{"msg":"What exactly are you hoping to accomplish @fastchain? Please read the discussion above on validators and let me know if that answers your question.","username":"gregdhill","ts":"2019-05-17T09:24:47.002Z"}
{"msg":"@fastchain we need some better docs on this. See: https://github.com/hyperledger/burrow/blob/develop/permission/perm_flag.go#L9-L40","username":"silasdavis","ts":"2019-05-17T10:00:58.356Z"}
{"msg":"See: https://godoc.org/github.com/hyperledger/burrow/permission#pkg-constants","username":"silasdavis","ts":"2019-05-17T10:03:26.420Z"}
{"msg":"So I have taken the opportunity to make a start on documenting this stuff a bit better, please see: https://github.com/hyperledger/burrow/blob/docs/docs/permissions.md","username":"silasdavis","ts":"2019-05-17T11:00:57.775Z"}
{"msg":"Also for genesis: https://github.com/hyperledger/burrow/blob/docs/docs/genesis.md","username":"silasdavis","ts":"2019-05-17T11:01:15.567Z"}
{"msg":"docs are hard, but I'm hoping we can chip away at these we can help people actually use some of the nice features we have","username":"silasdavis","ts":"2019-05-17T11:01:48.496Z"}
{"msg":"If anyone from the Burrow community has the time and inclination to add to this documents PRs into the docs feature branch I have just pushed to Burrow are very welcome :)","username":"silasdavis","ts":"2019-05-17T11:02:25.140Z"}
{"msg":"@silasdavis Is it correct, that every EVM operation cost 1 unit of gas? I read this statement in the #fabric-evm channel","username":"klenik","ts":"2019-05-17T12:28:27.758Z"}
{"msg":"@silasdavis Is it correct, that every EVM operation costs 1 unit of gas? I read this statement in the #fabric-evm channel","username":"klenik","ts":"2019-05-17T12:28:27.758Z"}
{"msg":"`root`","username":"compleatang","ts":"2019-05-20T15:57:49.824Z"}
{"msg":"Can someone explain vm.Call parameters (https://github.com/hyperledger/burrow/blob/develop/execution/evm/vm.go#L143)? I cannot understand why there are 2 fields of type []byte (_code_ and _input_). I thought, _code_ is something to be executed, and _input_ is a hash of function and parameters to that function. But I was confused with this line: \n`contractCode, err := ourVm.Call(cache, NewNoopEventSink(), account1, account2, code, code, 0, &gas)`\n(https://github.com/hyperledger/burrow/blob/develop/execution/evm/vm_test.go#L996)\nThere is the comment about code initialization at account2.  Why parameter _input_ is not empty (since there is no code at account2 before the call)? It seems I did not understand the semantics of the parameters for vm.Call.","username":"IvanTyulyandin","ts":"2019-05-20T20:45:10.696Z"}
{"msg":"Can someone explain vm.Call parameters (https://github.com/hyperledger/burrow/blob/develop/execution/evm/vm.go#L143)? I cannot understand why there are 2 fields of type []byte ( _code_ and _input_). I thought, _code_ is something to be executed, and _input_ is a hash of function and parameters to that function. But I was confused with this line: \n`contractCode, err := ourVm.Call(cache, NewNoopEventSink(), account1, account2, code, code, 0, &gas)`\n(https://github.com/hyperledger/burrow/blob/develop/execution/evm/vm_test.go#L996)\nThere is the comment about code initialization at account2.  Why parameter _input_ is not empty (since there is no code at account2 before the call)? It seems I did not understand the semantics of the parameters for vm.Call.","username":"IvanTyulyandin","ts":"2019-05-20T20:45:10.696Z"}
{"msg":"A. why do you care?\nB. that's what the code says https://github.com/hyperledger/burrow/blob/develop/execution/evm/gas.go ","username":"MHBauer","ts":"2019-05-22T00:25:12.152Z"}
{"msg":"Needed to adjust it according to Fabric timeouts for an experiment. Thanks for the code reference!","username":"klenik","ts":"2019-05-22T10:48:38.348Z"}
{"msg":"hi, i'm looking at your quarterly update .. is there a pointer in your documentation or elsewhere to what is meant by state in a mutable forest?","username":"Dan","ts":"2019-05-22T19:32:06.178Z"}
{"msg":"but what has gas to do with time?","username":"MHBauer","ts":"2019-05-22T23:17:30.242Z"}
{"msg":"In the context of EVMCC. On one hand, Fabric's clock is ticking, on the other hand, Burrow's gas is evaporating. We needed to increase the gas to allow Fabric timeouts, and it was strange that we needed so many gas, but the cost explains it","username":"klenik","ts":"2019-05-22T23:20:22.002Z"}
{"msg":"interesting. the gas could be tunable, and the values in there are definitely not what is defined in the white paper.","username":"MHBauer","ts":"2019-05-22T23:21:21.831Z"}
{"msg":"It opens up some possibilities, yes, I'll dive into it once our current experiment is done","username":"klenik","ts":"2019-05-22T23:22:17.829Z"}
{"msg":"Has joined the channel.","username":"nkl199","ts":"2019-05-24T09:54:22.232Z","type":"uj"}
{"msg":"hi, i am trying to start burrow but getting an error ","username":"mohor32","ts":"2019-05-25T06:07:53.152Z"}
{"msg":"````Sourcing config from first of: defaults\nSourcing config from defaults\ncould not update burrow config: unable to set ValidatorAddress from provided validator-index since no GenesisDoc/GenesisSpec provided ````","username":"mohor32","ts":"2019-05-25T06:08:00.634Z"}
{"msg":"comman used:burrow start --validator-index=0","username":"mohor32","ts":"2019-05-25T06:08:23.204Z"}
{"msg":"i am following this tutorial","username":"mohor32","ts":"2019-05-25T06:08:33.642Z"}
{"msg":"https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/single-full-node.md","username":"mohor32","ts":"2019-05-25T06:08:44.840Z"}
{"msg":"can anybody please give some heads up on this?","username":"mohor32","ts":"2019-05-25T06:09:14.872Z"}
{"msg":"Has joined the channel.","username":"dillchen","ts":"2019-05-27T19:19:52.712Z","type":"uj"}
{"msg":"256","username":"dillchen","ts":"2019-05-27T19:19:54.307Z"}
{"msg":"Hi @silasdavis , @compleatang (picking on you because I know you, but obviously everyone is welcome to answer)...\n\nI'm elbow-deep in implementing support for `eth_call` in Seth-RPC.  It's almost entirely working but there's one thing left to satisfy the Ethereum spec that I'm struggling with.  eth_call() allows you to specify a TAG|QUANTITY that specifies the block level at which you wish to execute the call, which may be \"latest\", \"earliest\", \"pending\", or \"0x{explicit_block}\".  \n\n\"latest\" is obviously fine, and that's lucky because it's what's usually wanted, but I can't see how the call machinery in Seth in general (which is essentially just a call to NewVM() ) can support operating on other, arbitrary blocks/block heights.  Do you think this can be possible?  Is there an existing call or config or state param I'm missing","username":"JonGeater","ts":"2019-05-27T22:40:21.633Z"}
{"msg":"?","username":"JonGeater","ts":"2019-05-27T22:40:23.635Z"}
{"msg":"@mohor32 it doesn't look like you're executing burrow in the same directory you created the genesis / config. ","username":"gregdhill","ts":"2019-05-28T08:46:48.969Z"}
{"msg":"If you used the one-liner, you can also specify the config as part of the start command: `burrow start --validator-index=0 --config=burrow.toml`","username":"gregdhill","ts":"2019-05-28T08:48:41.011Z"}
{"msg":"You can also specify the config as part of the start command: `burrow start --validator-index=0 --config=burrow.toml`","username":"gregdhill","ts":"2019-05-28T08:48:41.011Z"}
{"msg":"Jon, moved to #burrow-downstream ","username":"compleatang","ts":"2019-05-29T13:50:03.748Z"}
{"msg":"Has joined the channel.","username":"Bobbijn","ts":"2019-06-02T18:24:29.342Z","type":"uj"}
{"msg":"Please join the Learning Materials Working Group tomorrow at 1pm (  https://zoom.us/my/hyperledger.community)  to discuss how we can assist in your documentation needs .\n https://wiki.hyperledger.org/display/LMDWG/AGENDA+6-3-2019","username":"Bobbijn","ts":"2019-06-02T18:24:33.766Z"}
{"msg":"thanks @Bobbijn my co-maintainer @seanyoung jump on the call ... I will try and make it too but have some toddler related duties around that time","username":"silasdavis","ts":"2019-06-03T15:19:54.795Z"}
{"msg":"I have this stub PR: https://github.com/hyperledger/burrow/pull/1112/files that I opened in an effort to provide a useful seed around which some better docs could crystallise","username":"silasdavis","ts":"2019-06-03T15:20:33.390Z"}
{"msg":"The idea was to include technical topics that are much more efficient for us to write than someone new to the project which includes:\n- Genesis and chain-making\n- Permissions\n- Governance\n- Consensus and state (concepts)\n\nOn these topics I was going to try and give a broad and selectively deep coverage, but I think what I or other maintainers produce could be improved a lot by someone trying to understand what is written (and have a clearer idea than us on what is confusing) as well as expanding for style and coverage.\n\nOther areas that need documentation but I think lend themselves more easily to being written from scratch by someone interested in technical writing would be:\n- Our SQL mapping/projection layer 'Vent'\n- Our Go-based 'precompiled contracts' called 'SNatives'\n- Our various RPC services (info, query, transact, names)\n- Our NameReg\n- Dump/restore\n\nFor these items someone who is able/willing to play bit on command line, maybe read small amount of definitions from source, I think could produce better documentation for newcomers with relatively less orientation from us (though of course we can help), since they are more self-contained or already partially documented (sometimes in command-line help).","username":"silasdavis","ts":"2019-06-03T15:29:19.532Z"}
{"msg":"I also think there are some areas where we could be lead on the best solutions for:\n- Overall structure of docs (explainers vs tutorials vs reference material)\n- Maintenance of docs \n\nAnother thing I think we could/should do is use to bind any example code into our integration tests so that it will always compile and work correctly (i.e. fail our tests if examples embedded in docs don't work. This would be achievable with a small amount of templating in doc source and some scripting in CI but we could discuss this","username":"silasdavis","ts":"2019-06-03T15:31:59.842Z"}
{"msg":"Oh we also have some example apps that are a little out of date (and along with the js library itself need to be move to Burrow repo): https://github.com/monax/bosmarmot/tree/develop/example","username":"silasdavis","ts":"2019-06-03T15:32:33.234Z"}
{"msg":"@silasdavis if you have some PoC docs, I'd be happy to read it through as a Burrow newbie (plus hopefully it'd help us to improve the Burrow adapter in Caliper) ","username":"klenik","ts":"2019-06-04T08:26:04.365Z"}
{"msg":"Has joined the channel.","username":"scott_boone","ts":"2019-06-04T14:46:52.455Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SunayZelawat","ts":"2019-06-06T18:11:35.196Z","type":"uj"}
{"msg":"Hello Everyone, I chair the Telecom SIG Inter-Carrier Subgroup, we are writing a whitepaper and would like to understand multi DLT interoperability ","username":"SunayZelawat","ts":"2019-06-06T18:11:36.679Z"}
{"msg":"Can someone help us with the concept and it will be great if it is possible to get contribution to the Whitepaper on interoperability ","username":"SunayZelawat","ts":"2019-06-06T18:12:42.196Z"}
{"msg":"Has joined the channel.","username":"phoniks","ts":"2019-06-07T20:04:13.067Z","type":"uj"}
{"msg":"Has joined the channel.","username":"itsencrypted","ts":"2019-06-08T21:59:25.538Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rjortman","ts":"2019-06-13T18:56:59.476Z","type":"uj"}
{"msg":"Hello, just a quick question. I'm just looking to confirm that Burrow's implementation of the Ethereum EVM and smart contracts means that the smart contracts are actually on chain as in Ethereum ? So that any new node that joins the network and synchronizes to the chain will have all available contracts present on chain to be executed? It's been hard to find verbiage anywhere that clarifies this point that the contracts are on chain and therefore protected in the distributed ledger. Thank you.","username":"rjortman","ts":"2019-06-13T19:00:00.509Z"}
{"msg":"@rjortman they are stored on chain, absolutely. When the code is deployed, it is part of the transaction so it is part of the burrow block.","username":"seanyoung","ts":"2019-06-14T10:12:15.773Z"}
{"msg":"@seanyoung thank you for the reply! Much appreciated. I had surmised this was the case from what I was able to read, but definitely wanted a consult on my supposition! Thank you! ","username":"rjortman","ts":"2019-06-14T14:14:04.788Z"}
{"msg":"If one program, written in Go, is the only program that wants to talk to a burrow node, is it advisable to run a burrow node directly from that program (importing packages from the burrow project) or would it be better to just run burrow as a separate process and talk to it over GRPC?","username":"JoeriExelmans","ts":"2019-06-18T07:10:39.401Z"}
{"msg":"If one program, written in Go, is the only program that wants to talk to a burrow validator, is it advisable to run a burrow node directly from that program (importing packages from the burrow project) or would it be better to just run burrow as a separate process and talk to it over GRPC?","username":"JoeriExelmans","ts":"2019-06-18T07:10:39.401Z"}
{"msg":"If a program, written in Go, is the only program that wants to talk to a burrow validator, is it advisable to run a burrow node directly from that program (importing packages from the burrow project) or would it be better to just run burrow as a separate process and talk to it over GRPC?","username":"JoeriExelmans","ts":"2019-06-18T07:10:39.401Z"}
{"msg":"Has joined the channel.","username":"bamboo","ts":"2019-06-18T09:16:45.367Z","type":"uj"}
{"msg":"hi, i'm newbie in hyperledger burrow, i had stuck when get balance account, anyone can help me? thanks","username":"bamboo","ts":"2019-06-18T10:44:39.353Z"}
{"msg":"@JoeriExelmans in general I'd personally suggest running it out of process and talking to it over GRPC because there are a lot of configuration variables that go into starting the kernel and a lot of assumptions the runtime makes about where it is and how it's storing files that may or may not be suited to it's use as an overall library. pieces of burrow are built to be a library but the core runtime isn't.","username":"compleatang","ts":"2019-06-19T00:07:00.318Z"}
{"msg":"@bamboo can you explain a bit more about what you need help with,what you've done, etc...?","username":"compleatang","ts":"2019-06-19T00:07:22.027Z"}
{"msg":"@compleatang thank for reply.  I followed instruction https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/send-transactions.md , \nstart one node and send a transaction, after that, I want to check the balance of an account after transaction succeed.","username":"bamboo","ts":"2019-06-19T01:43:00.362Z"}
{"msg":"@compleatang  Thanks for the info","username":"JoeriExelmans","ts":"2019-06-19T07:13:46.735Z"}
{"msg":"I'd agree with @compleatang suggest, but also far be it for us to say not to embed - that's exactly the decision we take with Tendermint. The fairly recent kernel refactor does make it quite usable as a library - and we have deliberately kept it open code-wise for extension. I would recommend only using us this way if you have a good reason to - e.g. you need low level access to execution, P2P, want to implement your own transaction types. But I'd much rather support this usage modality than have you fork us!\n\nThe downsides to be aware of would be:\n- Initialisation and supervision of the Kernel and node are not totally straight forward\n\n\n```\n\n``` ","username":"silasdavis","ts":"2019-06-19T08:14:32.335Z"}
{"msg":"I'd agree with @compleatang suggest, but also far be it for us to say not to embed - that's exactly the decision we take with Tendermint. The fairly recent kernel refactor does make it quite usable as a library - and we have deliberately kept it open code-wise for extension. I would recommend only using us this way if you have a good reason to - e.g. you need low level access to execution, P2P, want to implement your own transaction types. But I'd much rather support this usage modality than have you fork us!\n\nThe downsides to be aware of would be:\n- Initialisation and supervision of the Kernel and node are not totally straight forward\n\n\n``` ","username":"silasdavis","ts":"2019-06-19T08:14:32.335Z"}
{"msg":"I'd agree with @compleatang suggest, but also far be it for us to say not to embed - that's exactly the decision we take with Tendermint. The fairly recent kernel refactor does make it quite usable as a library - and we have deliberately kept it open code-wise for extension. I would recommend only using us this way if you have a good reason to - e.g. you need low level access to execution, P2P, want to implement your own transaction types. But I'd much rather support this usage modality than have you fork us!\n\nThe downsides to be aware of would be:\n- Initialisation and supervision of the Kernel and node are not totally straight forward\n\n- We make no guarantees about the exported API, it is exposed to support extension, but pre 1.0.0 (at least) it is subject to change - we will prioritise improving the code over compatibility, this is not the case with the GRPC interfaces where we value stability more\n\n ","username":"silasdavis","ts":"2019-06-19T08:14:32.335Z"}
{"msg":"I'd agree with what @compleatang suggest, but also far be it for us to say not to embed - that's exactly the decision we take with Tendermint. The fairly recent kernel refactor does make it quite usable as a library - and we have deliberately kept it open code-wise for extension. I would recommend only using us this way if you have a good reason to - e.g. you need low level access to execution, P2P, want to implement your own transaction types. But I'd much rather support this usage modality than have you fork us!\n\nThe downsides to be aware of would be:\n- Initialisation and supervision of the Kernel and node are not totally straight forward\n\n- We make no guarantees about the exported API, it is exposed to support extension, but pre 1.0.0 (at least) it is subject to change - we will prioritise improving the code over compatibility, this is not the case with the GRPC interfaces where we value stability more\n\n ","username":"silasdavis","ts":"2019-06-19T08:14:32.335Z"}
{"msg":"I'd agree with what @compleatang suggests, but also far be it for us to say not to embed - that's exactly the decision we take with Tendermint. The fairly recent kernel refactor does make it quite usable as a library - and we have deliberately kept it open code-wise for extension. I would recommend only using us this way if you have a good reason to - e.g. you need low level access to execution, P2P, want to implement your own transaction types. But I'd much rather support this usage modality than have you fork us!\n\nThe downsides to be aware of would be:\n- Initialisation and supervision of the Kernel and node are not totally straight forward\n\n- We make no guarantees about the exported API, it is exposed to support extension, but pre 1.0.0 (at least) it is subject to change - we will prioritise improving the code over compatibility, this is not the case with the GRPC interfaces where we value stability more\n\n ","username":"silasdavis","ts":"2019-06-19T08:14:32.335Z"}
{"msg":"- You lose some safety afforded by code and process isolation","username":"silasdavis","ts":"2019-06-19T08:16:51.245Z"}
{"msg":"@bamboo the simplest way to check on the command line is over the info RPC:\n\n```\ncurl 'localhost:26658/human?address=9EC0DAE6168A7DEDAC2A069A9599DEDB1723796B'\n```","username":"silasdavis","ts":"2019-06-19T08:18:42.013Z"}
{"msg":"@bamboo the simplest way to check on the command line is over the info RPC:\n\n```\ncurl 'localhost:26658/account?address=9EC0DAE6168A7DEDAC2A069A9599DEDB1723796B'\n```","username":"silasdavis","ts":"2019-06-19T08:18:42.013Z"}
{"msg":"replace address with the address of the account you are interested in","username":"silasdavis","ts":"2019-06-19T08:19:06.693Z"}
{"msg":"you can also list all accounts with `curl 'localhost:26658/accounts` and get a more human-readable account structure with `curl 'localhost:26658/account_human?address=9EC0DAE6168A7DEDAC2A069A9599DEDB1723796B'`","username":"silasdavis","ts":"2019-06-19T08:19:42.920Z"}
{"msg":"These REST endpoints can be used programatically but you may prefer to use our GRPC `rpcquery` endpoints which provide strong typing and better performance","username":"silasdavis","ts":"2019-06-19T08:23:28.563Z"}
{"msg":"If you find any of this useful and lacking from documentation it is _very_ much appreciated if you could add it to documentation and make a pull requests","username":"silasdavis","ts":"2019-06-19T08:23:28.584Z"}
{"msg":"I am happy to provide office hours on chat (and video if needed) on a Friday (not this one - I'm on holiday) to anyone who is willing to capture documentation from their experience of using Burrow","username":"silasdavis","ts":"2019-06-19T08:23:28.612Z"}
{"msg":"We have many useful but poorly documented features","username":"silasdavis","ts":"2019-06-19T08:23:46.360Z"}
{"msg":"Another thing @JoeriExelmans - you probably are already - but I would definitely import us for GRPC client code rather than, for example, rebuilding the protobuf yourself. There is useful clientside functionality in various Burrow packages, and you only pay for what you import.","username":"silasdavis","ts":"2019-06-19T08:28:24.329Z"}
{"msg":"worth a lok in particular is `execution/exec` if you are interested in execution events - we have some primitives there for processing txs, and blocks, from our StreamEvents, which vent uses heavily for instancew","username":"silasdavis","ts":"2019-06-19T08:29:46.069Z"}
{"msg":"@silasdavis  Thanks, for now I'm just communicating over GRPC. I'm not doing complicated things with Burrow. I'm indeed importing a bunch of packages from the burrow repo because I need many types that are declared in packages like txs, payload and crypto, seemed easier than building the protobuf myself. At this time 99% of what I use burrow for, are rpctransact's  `BroadcastTxSync` and `CallTxSim`, although I should learn more about the permissions stuff. Documentation is indeed very limited but perhaps even a short abstract description (1 page, without demo code) of new features like governance and permissions would be really helpful.","username":"JoeriExelmans","ts":"2019-06-19T08:48:38.854Z"}
{"msg":"@silasdavis  Thanks, for now I'm just communicating over GRPC. I'm not doing complicated things with Burrow. I'm indeed importing a bunch of packages from the burrow repo because I need many types that are declared in packages like txs, payload and crypto, seemed easier than building the protobuf myself. At this time 99% of what I use burrow for, are rpctransact's  `BroadcastTxSync` and `CallTxSim`, although I should learn more about the permissions stuff. Documentation is indeed very limited but perhaps even a short abstract description (1 page, without demo code) of new features like governance and permissions and voting would be really helpful.","username":"JoeriExelmans","ts":"2019-06-19T08:48:38.854Z"}
{"msg":"i create new spec for my network,  i see many account's types, but i don't know what mean is it? where do i can read the docs for account's type? thanks so much ","username":"bamboo","ts":"2019-06-20T03:03:24.154Z"}
{"msg":"Hi @bamboo. best place to start is here -> https://github.com/hyperledger/burrow/blob/develop/docs/permissions.md with the burrow permission model. Then you can review the genesis docs -> https://github.com/hyperledger/burrow/blob/develop/docs/genesis.md and finally if you need to have more questions answered the \"actual\" docs are here -> https://godoc.org/github.com/hyperledger/burrow/permission#AccountPermissions On the markdown files we're always looking for help documenting things so if anything is unclear please feel free to send over a merge request! :)","username":"compleatang","ts":"2019-06-20T11:43:10.949Z"}
{"msg":"Hi @bamboo . best place to start is here -> https://github.com/hyperledger/burrow/blob/develop/docs/permissions.md with the burrow permission model. Then you can review the genesis docs -> https://github.com/hyperledger/burrow/blob/develop/docs/genesis.md and finally if you need to have more questions answered the \"actual\" docs are here -> https://godoc.org/github.com/hyperledger/burrow/permission#AccountPermissions On the markdown files we're always looking for help documenting things so if anything is unclear please feel free to send over a merge request! :)","username":"compleatang","ts":"2019-06-20T11:43:10.949Z"}
{"msg":"Has left the channel.","username":"mossmanpete","ts":"2019-06-29T00:04:28.087Z","type":"ul"}
{"msg":"how much is block size in burrow?  \nI did not find any documents mentioning this issue. thanks","username":"bamboo","ts":"2019-07-01T09:49:14.761Z"}
{"msg":"Hi all, when I run \"_make build_\" on the install instructions the build fails with \"_Makefile:42: recipe for target 'check' failed\nmake: *** [check] Error 2_\" after several lines of \"diff\" results (the last one being from \"_postgrest_adapter.go_\" ... when i downloaded using \"go get ...\" it did result in the following print statement at the end of the download: \"package github.com/hyperledger/burrow: no buildable Go source files in /home/rortman1/go/src/github.com/hyperledger/burrow\" not sure if that's a problem ? Thank you to any who are able to help! (as an aside, i do believe my GOPATH is set correctly using source ./~bashrc and some exports, but maybe that's not correct at the end of the day?)","username":"rjortman","ts":"2019-07-01T19:58:46.242Z"}
{"msg":"@rjortman that is probably due to a mismatched go version. go 1.12 should do the trick","username":"seanyoung","ts":"2019-07-02T11:46:55.080Z"}
{"msg":"@seanyoung ok, thank you for the idea. I will try that. I did confirm that i am on Go 1.11 like the instructions said, but I can try 1.12.","username":"rjortman","ts":"2019-07-02T15:51:44.105Z"}
{"msg":"what version are you trying to build?","username":"seanyoung","ts":"2019-07-02T15:52:33.187Z"}
{"msg":"whatever version gets downloaded when I run \"go get github.com/hyperledger/burrow\"","username":"rjortman","ts":"2019-07-02T15:53:05.191Z"}
{"msg":"literally just stepping through the \"install\" instructions from here: https://github.com/hyperledger/burrow/blob/develop/docs/INSTALL.md","username":"rjortman","ts":"2019-07-02T15:53:29.687Z"}
{"msg":"ok, that should default to the develop branch","username":"seanyoung","ts":"2019-07-02T15:55:52.995Z"}
{"msg":"I'm not sure if that still works with go 1.11. The docs should probably say go 1.12. Let me check this","username":"seanyoung","ts":"2019-07-02T15:59:26.957Z"}
{"msg":"go 1.12 is what we use anyway","username":"seanyoung","ts":"2019-07-02T15:59:26.976Z"}
{"msg":"ok, thank you very much. i will try this. Seems unlikely that i'd be the only person running in to this if it doesn't work on 1.11 doesn't it? since the instructions have said 1.11 up to this point and no one else has said anything ?","username":"rjortman","ts":"2019-07-02T16:01:44.785Z"}
{"msg":"I agree. I just tried go1.11.11 and it works fine. Which exact version are you using?","username":"seanyoung","ts":"2019-07-02T16:13:25.962Z"}
{"msg":"uhhh, apparently i must have multiple versions installed, because when I run \"go version\" I get \"go version go1.6.2 linux/amd64\"","username":"rjortman","ts":"2019-07-02T16:18:10.419Z"}
{"msg":"is 1.6.2 gonna be a problem ?","username":"rjortman","ts":"2019-07-02T16:18:27.471Z"}
{"msg":"when i tried to install 1.11 yest the package installer said i already had that","username":"rjortman","ts":"2019-07-02T16:18:49.790Z"}
{"msg":"burrow uses go modules which is a go 1.11 feature. Also the the output gofmt has changed a few times which is the problem you're running into.","username":"seanyoung","ts":"2019-07-02T16:23:52.179Z"}
{"msg":"I'm guessing go 1.6 is still somewhere in your path","username":"seanyoung","ts":"2019-07-02T16:24:09.942Z"}
{"msg":"ok, that's good to know. i will check into that then. sounds like that's the issue","username":"rjortman","ts":"2019-07-02T16:24:41.043Z"}
{"msg":"sounds like the instructions still maybe need an update then though","username":"rjortman","ts":"2019-07-02T16:24:57.203Z"}
{"msg":"\"version 1.11 or above and have\"","username":"rjortman","ts":"2019-07-02T16:25:00.302Z"}
{"msg":"the \"or above\" is not really correct then, right ?","username":"rjortman","ts":"2019-07-02T16:25:11.742Z"}
{"msg":"go 1.6 is before go 1.11","username":"seanyoung","ts":"2019-07-02T16:35:17.920Z"}
{"msg":":astonished: ","username":"rjortman","ts":"2019-07-02T16:36:11.311Z"}
{"msg":"i'm an idiot","username":"rjortman","ts":"2019-07-02T16:36:15.415Z"}
{"msg":"all makes sense now, thanks","username":"rjortman","ts":"2019-07-02T16:36:46.765Z"}
{"msg":"mystery solved :)","username":"seanyoung","ts":"2019-07-02T16:37:19.587Z"}
{"msg":":clap: ","username":"rjortman","ts":"2019-07-02T16:38:36.176Z"}
{"msg":"Has joined the channel.","username":"LHK7","ts":"2019-07-05T20:40:37.908Z","type":"uj"}
{"msg":"Hi team,\nI am working on deploy multiple smart contracts by using burrow. How can I achieve that by using my self-defined command line. I try to use a for loop to run each file, but it does not work. Could anyone help me about this. Thank you so much","username":"LHK7","ts":"2019-07-05T20:40:38.774Z"}
{"msg":"Has joined the channel.","username":"epryb","ts":"2019-07-08T03:36:44.316Z","type":"uj"}
{"msg":"Has joined the channel.","username":"lebdron","ts":"2019-07-08T06:41:10.449Z","type":"uj"}
{"msg":"Hi! Is it possible to extend the role-permission model for an existing network? It seems that because the sets of permissions are set in genesis block, it will not be possible to add new permissions to existing users.","username":"lebdron","ts":"2019-07-08T06:41:11.985Z"}
{"msg":"@LHK7 this is what the burrow deploy command is for. You can specify what contracts you want deployed in a yaml file and deploy all of them in one command line `burrow deploy -a $account deploy.yaml`","username":"seanyoung","ts":"2019-07-08T09:15:53.944Z"}
{"msg":"@lebdron permissions can be changed via `burrow deploy`. You'll need write a burrow deploy script with some jobs to do this. Here is an example https://github.com/hyperledger/burrow/blob/develop/tests/jobs_fixtures/app03-basic_and_advanced_permission_txs_and_queries/deploy.yaml","username":"seanyoung","ts":"2019-07-08T09:17:50.888Z"}
{"msg":"I am not sure if that example covers that case. What if a new permission flag is added, for example there is `Call` flag now, and `CallCustom` is added sometime in the future?","username":"lebdron","ts":"2019-07-08T09:26:47.531Z"}
{"msg":"that would be a more complex migration needed. in general you'd need to add the permission, scope it out, recompile all the clients, dump the old state, restore the old state as the genesis block of a new blockchain, then modify the permissions in the same way. (this is, if you needed to add a custom permission and keep an old blockchain state). ","username":"compleatang","ts":"2019-07-08T10:05:36.142Z"}
{"msg":"but in general can you explain a bit more about the use case you are needing to solve?","username":"compleatang","ts":"2019-07-08T10:06:02.434Z"}
{"msg":"@lebdron as Casey alludes to there is no configuration-based way to introduced a permissions. These are hard-coded constants. We do however have space in the bitfield of the current implementation for another 47. We do occasionally add a permission flag such as `Proposal` when it is needed. This requires a code change, most of which is likely to be concerned with for what purpose and where we look at the new permission.\n\nAdding a new permission does not necessarily break the state of an old chain, so you could potentially run a new version of Burrow with a new permission without doing a dump/restore - though then you would need to manually grant this permission to accounts or change the global default permissions.\n\nWhat did you have in mind for `CallCustom` or the like?","username":"silasdavis","ts":"2019-07-08T10:22:32.864Z"}
{"msg":">though then you would need to manually grant this permission to accounts or change the global default permissions.\n@compleatang @silasdavis \n\nI would like to get more details on this, because it seems to mean that some account has \"superuser\" ability in some way to grant the permission which was not mention in the genesis block.\n\nTo be honest, I am asking the question because we faced the issue I have described in Hyperledger Iroha while adding new commands which require their own permission, which were not present before. I have checked your documentation, seen the similar role based access control model and thought that you might have already solved the \"extending permission types\" problem.","username":"lebdron","ts":"2019-07-08T10:58:57.110Z"}
{"msg":">though then you would need to manually grant this permission to accounts or change the global default permissions.\n@compleatang \n@silasdavis \n\nI would like to get more details on this, because it seems to mean that some account has \"superuser\" ability in some way to grant the permission which was not mention in the genesis block.\n\nTo be honest, I am asking the question because we faced the issue I have described in Hyperledger Iroha while adding new commands which require their own permission, which were not present before. I have checked your documentation, seen the similar role based access control model and thought that you might have already solved the \"extending permission types\" problem.","username":"lebdron","ts":"2019-07-08T10:58:57.110Z"}
{"msg":">though then you would need to manually grant this permission to accounts or change the global default permissions.\nI would like to get more details on this, because it seems to mean that some account has \"superuser\" ability in some way to grant the permission which was not mention in the genesis block.\n\n@compleatang \n@silasdavis \n\nTo be honest, I am asking the question because we faced the issue I have described in Hyperledger Iroha while adding new commands which require their own permission, which were not present before. I have checked your documentation, seen the similar role based access control model and thought that you might have already solved the \"extending permission types\" problem.","username":"lebdron","ts":"2019-07-08T10:58:57.110Z"}
{"msg":"Now our \"CreateRole\" and \"AppendRole\" commands check that the role you are trying to create and you are trying to give someone has a subset of users' permissions who is trying to issue such command. The idea was to introduce a new permission, which will allow to \"override\" this restriction, therefore allowing to create roles with new permissions in runtime without recreating the block store with a new genesis block.","username":"lebdron","ts":"2019-07-08T11:03:09.715Z"}
{"msg":"Replied in the main chat, looking forward to your reply as well :smiley: ","username":"lebdron","ts":"2019-07-08T12:38:21.777Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-07-08T17:58:33.322Z","type":"ul"}
{"msg":"Users with `root` permissions on the chain can change the global default permissions or the permissions of any account on the chain. They effectively have sudo on the chain. There are lower levels of permissions for more discrete permissions adjustments -- albeit currently we do not have an idea of account based \"namespacing\" where you could set up an admin for \"our users\".... That would be interesting for consortium chains but we don't currently have that AFAIK.","username":"compleatang","ts":"2019-07-08T21:10:03.093Z"}
{"msg":"we also have, via our proposal mechanism, an ability to change default permissions and/or individual account permissions via more collaborative means (e.g., agreement by multiple parties to do X). ","username":"compleatang","ts":"2019-07-08T21:11:12.599Z"}
{"msg":"we also have, via our proposal mechanism, an ability to change default permissions and/or individual account permissions via more collaborative means (e.g., agreement by multiple parties to do X ). ","username":"compleatang","ts":"2019-07-08T21:11:12.599Z"}
{"msg":"burrow also has, via the proposal mechanism Silas mentions, an ability to change default permissions and/or individual account permissions via more collaborative means (e.g., agreement by multiple parties to do X ). this allows, effectively, for say a 5 of 5 vote to change something fundamental about the chain (like it's default permissions)","username":"compleatang","ts":"2019-07-08T21:11:12.599Z"}
{"msg":"Hi! Which Solidity version is supported by Burrow EVM? I mean, which compiler version should I use to get EVM bytecode from Solidity sources? Thanks in advance.","username":"IvanTyulyandin","ts":"2019-07-09T10:49:28.447Z"}
{"msg":"@IvanTyulyandin any version should be supported. I do recommend you use the latest version though (0.5) ","username":"seanyoung","ts":"2019-07-09T11:18:20.477Z"}
{"msg":"Has joined the channel.","username":"cgorenflo","ts":"2019-07-09T19:16:07.534Z","type":"uj"}
{"msg":"Hi folks, can anyone suggest which version is suitable for upgrade from 0.25.1? ","username":"g3d","ts":"2019-07-16T11:44:59.726Z"}
{"msg":"In Ethereum there are two types of contracts — for users and for contracts. I try to run smart contracts on Burrow VM. I use an analog of the FakeAppState struct (https://github.com/IvanTyulyandin/HL_Burrow_EVM_caller/blob/master/iroha_app_state.go). After smart contract execution I see only users accounts details, but without contract account (https://github.com/IvanTyulyandin/HL_Burrow_EVM_caller/blob/master/main.go#L141). Is it possible to get an address of the contract account?","username":"IvanTyulyandin","ts":"2019-07-19T09:35:35.072Z"}
{"msg":"@IvanTyulyandin in burrow there are just accounts, and contracts are just accounts with code attached to them. Please correct me if I didn't understand the code correctly","username":"seanyoung","ts":"2019-07-19T10:47:15.891Z"}
{"msg":"@IvanTyulyandin in burrow there are just accounts, and contracts are just accounts with code attached to them. Please correct me if I didn't understand the question correctly","username":"seanyoung","ts":"2019-07-19T10:47:15.891Z"}
{"msg":"Its the same in Ehtereum. The difference between \"users\" and \"contracts\" is simply whether the account has code attached to it. ","username":"compleatang","ts":"2019-07-19T13:03:11.126Z"}
{"msg":"Has joined the channel.","username":"Consultant1bcg","ts":"2019-07-20T04:44:19.410Z","type":"uj"}
{"msg":"Thank for replies @compleatang and @seanyoung . I tried to print EVM code for each account but seems that there is no attached code.\n`\tevmState.CreateAccount(toEVMaddress(C.GoString(caller)))\n\tevmState.Sync()\n\tfmt.Println(appState.accounts)\n\tfmt.Println(appState.storage)\n\t//VmCall(code, code, caller, callee)\n\toutput, _ := VmCall(code, code, caller, callee)\n\toutput, _ = VmCall(output, set, caller, callee)\n\tfor _, acc := range appState.accounts {\n\t\tfmt.Println(acc.EVMCode)\n\t}\n\tfmt.Println(appState.accounts)\n\tfmt.Println(appState.storage)`\n\nMy output is:\n`GetAccount: 1B1330A48B5CD260D6A46B578C3F1698708BCB36\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[]\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nSetStorage: 1B1330A48B5CD260D6A46B578C3F1698708BCB36 0000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000001\n\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36                                :[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]\n`\nIt looks like there is only one account, but I expected two (created in code and created during EVM execution)","username":"IvanTyulyandin","ts":"2019-07-20T15:49:38.994Z"}
{"msg":"Thank for replies @compleatang and @seanyoung . I tried to print EVM code for each account but seems that there is no attached code.\n`\t\nevmState.CreateAccount(toEVMaddress(C.GoString(caller)))\nevmState.Sync()\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\noutput, _ := VmCall(code, code, caller, callee)\noutput, _ = VmCall(output, set, caller, callee)\nfor _, acc := range appState.accounts {\n\tfmt.Println(acc.EVMCode)\n}\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\n`\nMy output is:\n`GetAccount: 1B1330A48B5CD260D6A46B578C3F1698708BCB36\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[]\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nSetStorage: 1B1330A48B5CD260D6A46B578C3F1698708BCB36 0000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000001\n\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36                                :[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]\n\nIt looks like there is only one account, but I expected two (created in code and created during EVM execution)","username":"IvanTyulyandin","ts":"2019-07-20T15:49:38.994Z"}
{"msg":"Thank for replies @compleatang and @seanyoung . I tried to print EVM code for each account but seems that there is no attached code.\n```\nevmState.CreateAccount(toEVMaddress(C.GoString(caller)))\nevmState.Sync()\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\noutput, _ := VmCall(code, code, caller, callee)\noutput, _ = VmCall(output, set, caller, callee)\nfor _, acc := range appState.accounts {\n\tfmt.Println(acc.EVMCode)\n}\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\n```\nMy output is:\n`GetAccount: 1B1330A48B5CD260D6A46B578C3F1698708BCB36\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[]\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nSetStorage: 1B1330A48B5CD260D6A46B578C3F1698708BCB36 0000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000001\n\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36                                :[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]\n\nIt looks like there is only one account, but I expected two (created in code and created during EVM execution)","username":"IvanTyulyandin","ts":"2019-07-20T15:49:38.994Z"}
{"msg":"Thank for replies @compleatang and @seanyoung . I tried to print EVM code for each account but seems that there is no attached code.\n```\nevmState.CreateAccount(toEVMaddress(C.GoString(caller)))\nevmState.Sync()\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\noutput, _ := VmCall(code, code, caller, callee)\noutput, _ = VmCall(output, set, caller, callee)\nfor _, acc := range appState.accounts {\n\tfmt.Println(acc.EVMCode)\n}\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\n```\nMy output is:\n```GetAccount: 1B1330A48B5CD260D6A46B578C3F1698708BCB36\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[]\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nSetStorage: 1B1330A48B5CD260D6A46B578C3F1698708BCB36 0000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000001\n\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36                                :[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]\n```\nIt looks like there is only one account, but I expected two (created in code and created during EVM execution)","username":"IvanTyulyandin","ts":"2019-07-20T15:49:38.994Z"}
{"msg":"Thank for replies @compleatang and @seanyoung . I tried to print EVM code for each account but seems that there is no attached code.\n```\nevmState.CreateAccount(toEVMaddress(C.GoString(caller)))\nevmState.Sync()\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\noutput, _ := VmCall(code, code, caller, callee)\noutput, _ = VmCall(output, set, caller, callee)\nfor _, acc := range appState.accounts {\n\tfmt.Println(acc.EVMCode)\n}\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\n```\nMy output is:\n```GetAccount: 1B1330A48B5CD260D6A46B578C3F1698708BCB36\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[]\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nSetStorage: 1B1330A48B5CD260D6A46B578C3F1698708BCB36 0000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000001\n\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36                                :[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]\n```\nIt looks like there is only one account, but I expected two (first is created in code and the second is created during EVM execution)","username":"IvanTyulyandin","ts":"2019-07-20T15:49:38.994Z"}
{"msg":"Thank for replies @compleatang and @seanyoung . I tried to print EVM code for each account but seems that there is no attached code.\n```\nevmState.CreateAccount(toEVMaddress(C.GoString(caller)))\nevmState.Sync()\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\noutput, _ := VmCall(code, code, caller, callee)\noutput, _ = VmCall(output, set, caller, callee)\nfor _, acc := range appState.accounts {\n\tfmt.Println(acc.EVMCode)\n}\nfmt.Println(appState.accounts)\nfmt.Println(appState.storage)\n```\nMy output is:\n```GetAccount: 1B1330A48B5CD260D6A46B578C3F1698708BCB36\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[]\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nUpdateAccount: Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}\nSetStorage: 1B1330A48B5CD260D6A46B578C3F1698708BCB36 0000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000001\n\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36:Account{Address: 1B1330A48B5CD260D6A46B578C3F1698708BCB36; Sequence: 0; PublicKey:  Balance: 0; CodeLength: 0; Permissions: {Base: 0; Set: 0 [] []}}]\nmap[1B1330A48B5CD260D6A46B578C3F1698708BCB36                                :[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]\n```\nIt looks like there is only one account, but I expected two (the first is created in code and the second is created during EVM execution)","username":"IvanTyulyandin","ts":"2019-07-20T15:49:38.994Z"}
{"msg":"@IvanTyulyandin I just had a look in your repo.  Your implementation of Call is incorrect. During deployment, the return value of the call is the code which should be assigned to the acc.EVMCode (or acc.Code in earlier versions).","username":"seanyoung","ts":"2019-07-22T08:41:57.445Z"}
{"msg":"See https://github.com/hyperledger/burrow/blob/develop/execution/contexts/call_context.go#L228 how this is done in burrow","username":"seanyoung","ts":"2019-07-22T08:42:47.016Z"}
{"msg":"So output defined on https://github.com/IvanTyulyandin/HL_Burrow_EVM_caller/blob/master/main.go#L70 should be assigned to the account if you're in a create call","username":"seanyoung","ts":"2019-07-22T08:44:10.759Z"}
{"msg":"@seanyoung thanks a lot! :grinning: ","username":"IvanTyulyandin","ts":"2019-07-22T10:03:44.449Z"}
{"msg":"Has joined the channel.","username":"luxus","ts":"2019-07-23T04:24:44.759Z","type":"uj"}
{"msg":"Has joined the channel.","username":"RealDeanZhao","ts":"2019-07-23T06:26:13.419Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Macondo","ts":"2019-07-31T03:52:36.979Z","type":"uj"}
{"msg":"Hi, I follow instuctions about Multiple validators, but no blocks are generated.","username":"Macondo","ts":"2019-07-31T06:44:18.716Z"}
{"msg":"@Macondo what do the logs show you?","username":"compleatang","ts":"2019-07-31T14:16:42.008Z"}
{"msg":"@compleatang there are only three lines of logs\n`Sourcing config from first of: Config file at 'burrow001.toml' then defaults\nSourcing config from Config file at 'burrow001.toml'\nUsing validator address: 20FE4058F0D087A0CDDD27B2A50E21EC3D9DA73C`","username":"Macondo","ts":"2019-08-01T01:09:23.156Z"}
{"msg":"@compleatang there are only three lines of logs\n```Sourcing config from first of: Config file at 'burrow001.toml' then defaults\nSourcing config from Config file at 'burrow001.toml'\nUsing validator address: 20FE4058F0D087A0CDDD27B2A50E21EC3D9DA73C\n```","username":"Macondo","ts":"2019-08-01T01:09:23.156Z"}
{"msg":"I use the latest version.","username":"Macondo","ts":"2019-08-01T01:15:05.620Z"}
{"msg":"burrow000.log\n```\n{\"caller\":\"blockchain.go:73\",\"database_key\":\"426C6F636B636861696E5374617465\",\"height\":0,\"log_channel\":\"Info\",\"message\":\"Trying to load blockchain state from database\",\"run_id\":\"b34c224a-b40d-11e9-8b31-48657441217f\",\"scope\":\"LoadOrNewBlockchain\",\"time\":\"2019-08-01T03:37:34.792612Z\"}\n{\"caller\":\"blockchain.go:94\",\"height\":0,\"log_channel\":\"Info\",\"message\":\"No existing blockchain state found in database, making new blockchain\",\"run_id\":\"b34c224a-b40d-11e9-8b31-48657441217f\",\"scope\":\"LoadOrNewBlockchain\",\"time\":\"2019-08-01T03:37:34.792784Z\"}\n{\"caller\":\"kernel.go:135\",\"height\":0,\"log_channel\":\"Info\",\"message\":\"Creating new application state from genesis\",\"run_id\":\"b34c224a-b40d-11e9-8b31-48657441217f\",\"scope\":\"NewKernel()\",\"time\":\"2019-08-01T03:37:34.793016Z\"}\n{\"caller\":\"kernel.go:146\",\"height\":0,\"log_channel\":\"Info\",\"message\":\"State loading successful\",\"run_id\":\"b34c224a-b40d-11e9-8b31-48657441217f\",\"scope\":\"NewKernel()\",\"time\":\"2019-08-01T03:37:34.793508Z\"}\n{\"caller\":\"app.go:134\",\"component\":\"ABCI_App\",\"height\":0,\"log_channel\":\"Info\",\"message\":\"Initial validator set matches\",\"node_info\":\"Burrow_0.27.0_BurrowChain_B8849F-50CFEC_ValidatorID:6A442585DF320DB7D91BDB9A92F336D3274B8447\",\"run_id\":\"b34c224a-b40d-11e9-8b31-48657441217f\",\"scope\":\"abci.NewApp\",\"time\":\"2019-08-01T03:37:34.902235Z\"}\n{\"announce\":\"startup\",\"burrow_version\":\"0.27.0+commit.v0.27.0+dirty.c986f14c+2019-08-01\",\"caller\":\"processes.go:195\",\"genesis_app_hash\":\"\",\"genesis_hash\":\"50CFEC82C0B6921788A2BDD8189C390449E707FF99E5DD830CB5F1DCA0F4EE4D\",\"height\":0,\"launch_time\":\"2019-08-01T11:37:34.95037+08:00\",\"log_channel\":\"Info\",\"message\":\"Burrow is launching. We have marmot-off.\",\"net_address\":\"a273ac8ac3df00c7e69bbb54cf90e9ee30830c58@127.0.0.1:26656\",\"node_id\":\"a273ac8ac3df00c7e69bbb54cf90e9ee30830c58\",\"run_id\":\"b34c224a-b40d-11e9-8b31-48657441217f\",\"scope\":\"NewKernel()\",\"tendermint_version\":\"0.31.5\",\"time\":\"2019-08-01T03:37:34.950516Z\",\"validator_address\":\"6A442585DF320DB7D91BDB9A92F336D3274B8447\"}\n{\"caller\":\"http_server.go:19\",\"component\":\"RPC_Info\",\"height\":0,\"listen_address\":\"127.0.0.1:26758\",\"log_channel\":\"Info\",\"message\":\"Starting RPC HTTP server\",\"run_id\":\"b34c224a-b40d-11e9-8b31-48657441217f\",\"scope\":\"NewKernel()\",\"time\":\"2019-08-01T03:37:34.950691Z\"}\n``` ","username":"Macondo","ts":"2019-08-01T03:41:32.473Z"}
{"msg":"you'll need to increase the log level in your config file. check that you've properly filled in the seeds. ","username":"compleatang","ts":"2019-08-01T13:41:11.152Z"}
{"msg":"Has joined the channel.","username":"d3cline","ts":"2019-08-01T16:50:34.712Z","type":"uj"}
{"msg":"Howdy. I am John Spounias, recently sent a message to the mailing list. Thanks for everything again","username":"d3cline","ts":"2019-08-01T16:50:36.354Z"}
{"msg":"I will have a ton of questions and other things not software related to do to get the blocktwine project to actual foundation status, I will pop in and out of chat likely a lot in the coming weeks. ","username":"d3cline","ts":"2019-08-01T16:55:32.594Z"}
{"msg":"@compleatang the detailed log\nhttps://www.dropbox.com/s/kocfmpq3cxm67x0/burrow000.log?dl=0","username":"Macondo","ts":"2019-08-02T03:25:11.862Z"}
{"msg":"Another question: https://github.com/hyperledger/burrow/issues/1183","username":"Macondo","ts":"2019-08-02T07:07:45.546Z"}
{"msg":"Has joined the channel.","username":"AlexanderZhovnuvaty","ts":"2019-08-02T11:00:50.701Z","type":"uj"}
{"msg":"Hello. need advise: as i heard hyperledger burrow has token adapter module to plug into sawtooth. Does anybody know anything about? Any links to read? Thanks in advance","username":"AlexanderZhovnuvaty","ts":"2019-08-02T11:02:16.333Z"}
{"msg":"@AlexanderZhovnuvaty try #sawtooth-seth ","username":"silasdavis","ts":"2019-08-02T11:22:01.483Z"}
{"msg":"@Macondo as we've been discussing on issues, I guess the connectivity was probably down to the incorrect casing of node ids","username":"silasdavis","ts":"2019-08-02T11:22:44.312Z"}
{"msg":"I see it. Thanks!","username":"Macondo","ts":"2019-08-03T04:30:24.878Z"}
{"msg":"Hi all,\nWhen I get block in burrow, it returns: ```\"txs\": [\n                        \"CoIBChQCxUUpBvsCNDUQtaNcvs9QzmZcaxIkCAESIKGkfhDULzIHTGh53Ja/ofiQACukVr7ZxgqTxj00YsmgGkQIARJAYY2B32dE5xzGdpd0h60oCPCIfMnaHUpOV5TN7+P4XBVCMk7DeENRWpl9HmIA5pwurfbh0GcnKIMIrqRL/6zaAxJRChJ4ZWstbmV0d29yay0yQUFERjISO9SkoM0KGwoUAsVFKQb7AjQ1ELWjXL7PUM5mXGsQARi3ARIYChTWNx5jXBFUPNHLI74ANQFIEcHuGRAB\"\n                    ]```\nHow i can decode that to json or structure?","username":"luxus","ts":"2019-08-05T03:29:17.771Z"}
{"msg":"Hi team,\nPlease have a look at this issue https://github.com/hyperledger/burrow/issues/1181","username":"Macondo","ts":"2019-08-05T03:51:26.475Z"}
{"msg":"When I excute ```curl -s 127.0.0.1:26758/accounts```, why is there an all zero address in the results?","username":"Macondo","ts":"2019-08-05T06:46:54.156Z"}
{"msg":"Has left the channel.","username":"amundson","ts":"2019-08-06T15:51:14.778Z","type":"ul"}
{"msg":"@Macondo that is the global permissions address","username":"silasdavis","ts":"2019-08-07T10:14:54.102Z"}
{"msg":"which by historical convention is the Zero address...","username":"silasdavis","ts":"2019-08-07T10:15:03.943Z"}
{"msg":"which by historical convention is the zero address...","username":"silasdavis","ts":"2019-08-07T10:15:03.943Z"}
{"msg":"It's permissions define the global fallback permissions for all accounts","username":"silasdavis","ts":"2019-08-07T10:15:50.447Z"}
{"msg":"which is to say for a particular permission either it is set for an account or it is unset. If it is 'set' it may be true or false and that value takes precedent. If it is 'unset' then whatever the value for the global permissions account is is used.","username":"silasdavis","ts":"2019-08-07T10:16:48.376Z"}
{"msg":"the global permission can itself be updated by transactions, provided the input account (transaction sender) has the `SetGlobal` permission","username":"silasdavis","ts":"2019-08-07T10:18:25.407Z"}
{"msg":"Been watching the 'burrow workshop' video on youtube and it is very helpful, not sure how i missed it until now ","username":"d3cline","ts":"2019-08-07T21:10:04.941Z"}
{"msg":"There isn't reward and punishment mechnisim in burrow, am I right?","username":"Macondo","ts":"2019-08-09T09:59:18.641Z"}
{"msg":"@Macondo yes that is correct as of this moment. ","username":"compleatang","ts":"2019-08-14T12:15:05.443Z"}
{"msg":"Has joined the channel.","username":"Hyungsuk Kang","ts":"2019-08-15T17:26:55.653Z","type":"uj"}
{"msg":"hello, I want to know if there is an architecture overview for hyperledger burrow","username":"Hyungsuk Kang","ts":"2019-08-15T17:26:56.709Z"}
{"msg":"There is not, this is bad, we are writing one. See this for reference: https://wiki.hyperledger.org/display/HYP/2019+Q3+Hyperledger+Burrow","username":"silasdavis","ts":"2019-08-17T22:24:09.231Z"}
{"msg":"We've put this up in the last few days and are iterating on it: http://hyperledger.github.io/burrow/#/","username":"silasdavis","ts":"2019-08-17T22:24:44.096Z"}
{"msg":"I'm also working on a blog post to try and do a better job of explaining ourselves","username":"silasdavis","ts":"2019-08-17T22:25:12.244Z"}
{"msg":"@Hyungsuk Kang since you are asking, what would you like to see in an architecture overview?","username":"silasdavis","ts":"2019-08-17T22:26:31.040Z"}
{"msg":"@silasdavis Do you still need some editing and copyediting? I'm finishing up the Identity WP and am available for a few hours a week. ","username":"KellyCooper","ts":"2019-08-18T17:12:31.057Z"}
{"msg":"Has joined the channel.","username":"VijayMichalik","ts":"2019-08-19T14:20:14.534Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kwv 1","ts":"2019-08-20T18:05:49.454Z","type":"uj"}
{"msg":"@KellyCooper I do - I am working on docs and trying to finish blog post this week, do you have time next week?","username":"silasdavis","ts":"2019-08-21T14:04:06.248Z"}
{"msg":"Yep. ","username":"KellyCooper","ts":"2019-08-21T15:21:46.454Z"}
{"msg":"Thanks for the update to the docs, totally rad","username":"d3cline","ts":"2019-08-27T01:39:09.440Z"}
{"msg":"@d3cline thanks means a lot","username":"silasdavis","ts":"2019-08-27T10:54:11.447Z"}
{"msg":"@KellyCooper we are finalising our doc-dump tomorrow, are you free for a call perhaps with the team on Thursday?","username":"silasdavis","ts":"2019-08-27T10:54:34.584Z"}
{"msg":"A fresh eye towards minimalism and coherency across our docs would be very helpful, and that that point we'll have a version for you to look at on our develop branch","username":"silasdavis","ts":"2019-08-27T10:55:07.631Z"}
{"msg":"@silasdavis available Thurs any time between 7:00-9:00 or 11:30-1:30 PST","username":"KellyCooper","ts":"2019-08-27T12:58:13.888Z"}
{"msg":"so I am making a hands-on-tutorial session to build an ethereum smart contract and interact with hyperledger burrow","username":"Hyungsuk Kang","ts":"2019-08-27T22:37:26.183Z"}
{"msg":"I want to know what network framework was used such as libp2p","username":"Hyungsuk Kang","ts":"2019-08-27T22:37:46.370Z"}
{"msg":"or more info about permissioned EVM to describe the difference between EVM and the other","username":"Hyungsuk Kang","ts":"2019-08-27T22:38:07.655Z"}
{"msg":"I mean PEVM(Permissioned EVM)","username":"Hyungsuk Kang","ts":"2019-08-27T22:38:19.305Z"}
{"msg":"does PEVM implemented the modifier without checking sender's address in smart contract?","username":"Hyungsuk Kang","ts":"2019-08-27T22:38:54.542Z"}
{"msg":"What is the difference between tendermint?","username":"Hyungsuk Kang","ts":"2019-08-27T22:42:35.698Z"}
{"msg":"What is the difference between ethermint?","username":"Hyungsuk Kang","ts":"2019-08-27T22:42:35.698Z"}
{"msg":"Network framework: burrow uses tendermint for p2p connectivity. \nThere is no difference within the EVM itself between burrow or any other EVM blockchain we know of (well, if there is that's a bug). The permissioning happens in a layer of the stack below the EVM. The permission layer checks things before the transaction is exposed into the EVM. The EVM smart contract themselves can, of course, add additional permissioning as folks do routinely with ERC721, ERC20, etc. \nAs to ethermint? You'd have to ask them. Previously it was a geth fork over tendermint base, lacked permissioning, and wasn't very well maintained. ","username":"compleatang","ts":"2019-08-28T11:48:30.872Z"}
{"msg":"Network framework: burrow uses tendermint for p2p connectivity. \nThere is no difference within the EVM itself between burrow or any other EVM blockchain we know of (well, if there is that's a bug). The permissioning happens in a layer of the stack below the EVM. The permission layer checks things before the transaction is exposed into the EVM. The EVM smart contract themselves can, of course, add additional permissioning as folks do routinely with ERC721, ERC20, etc. \nAs to ethermint? You'd have to ask them. Previously it was a geth fork over tendermint base, lacked permissioning, and wasn't very well maintained. Sorry but I haven't looked at it in over a year. Similar idea in the sense of tendermint + EVM, but burrow is much more full featured and heavily used (as far as we know). ","username":"compleatang","ts":"2019-08-28T11:48:30.872Z"}
{"msg":"Has joined the channel.","username":"nhbrown","ts":"2019-08-28T14:07:30.927Z","type":"uj"}
{"msg":"Hello, I have a small problem: When I deploy a contract, only the actual deployment is done with the address specified by me when calling 'burrow deploy' and every subsequent job uses the general permission account '0000.....'. Is that normal behaviour? And if not, how can I tell my playbook file to use the address I specified during the deployment?","username":"nhbrown","ts":"2019-08-28T14:07:33.042Z"}
{"msg":"if you set the address via command line that is what the jobs should use UNTIL you change that address via an address job. ","username":"compleatang","ts":"2019-08-29T09:30:05.964Z"}
{"msg":"@compleatang sadly doesn't happen that way on my end, the address I set via command line is only used for deployment, every other job in the same playbook file uses the general permission account, checked it again today with another contract. Heres a quick example of what I'm doing, complete with playbook file and output: https://github.com/nhbrown/burrow_msg.sender_example","username":"nhbrown","ts":"2019-08-29T12:38:54.515Z"}
{"msg":"hmm. that is indeed rather curious. ","username":"compleatang","ts":"2019-08-29T14:45:58.077Z"}
{"msg":"@nhbrown I took a look into this - it is a bug","username":"silasdavis","ts":"2019-08-29T17:45:12.355Z"}
{"msg":"No longer: https://github.com/hyperledger/burrow/pull/1234","username":"silasdavis","ts":"2019-08-29T17:45:18.765Z"}
{"msg":"Note the first query against the stored state works: https://github.com/nhbrown/burrow_msg.sender_example/blob/master/output.txt#L14-L17","username":"silasdavis","ts":"2019-08-29T17:46:46.961Z"}
{"msg":"The query contract functionality works by performing a 'simulated call' and not persisting the state thereafter ","username":"silasdavis","ts":"2019-08-29T17:47:13.186Z"}
{"msg":"does fabric-web3 support go1.11.2 as well?","username":"Hyungsuk Kang","ts":"2019-08-30T10:56:17.145Z"}
{"msg":"does it have to be only go 1.9.3 to run proxy for solidity?","username":"Hyungsuk Kang","ts":"2019-08-30T10:56:39.718Z"}
{"msg":"the install script does not work on kubectl v1.15.2 because it does not have -a shorthand flag","username":"Hyungsuk Kang","ts":"2019-08-30T11:19:42.243Z"}
{"msg":"@nhbrown  Oops didn't finish that thought... It doesn't actually need an input in order to work (on a real transaction it would in order to verify sequence numbers and signatures) which is why it still goes through. However it ought to be using the address provided (the zero address is what we set in the absence of address - awkwardly this is also global permissions address, something I have thought about changing for this reason, but never quite wanted the disruption). \n\nAnyway the bug fixes this","username":"silasdavis","ts":"2019-08-30T11:46:48.456Z"}
{"msg":"@nhbrown  Oops didn't finish that thought... It doesn't actually need an input in order to work (on a real transaction it would in order to verify sequence numbers and signatures) which is why it still goes through. However it ought to be using the address provided (the zero address is what we set in the absence of address - awkwardly this is also global permissions address, something I have thought about changing for this reason, but never quite wanted the disruption). \n\nAnyway the PR above fixes this bug","username":"silasdavis","ts":"2019-08-30T11:46:48.456Z"}
{"msg":"@Hyungsuk Kang #fabric-evm is the place to ask that question","username":"silasdavis","ts":"2019-08-30T11:47:29.727Z"}
{"msg":"@silasdavis thank you for the fix and the explanation, I'll check it out!","username":"nhbrown","ts":"2019-09-02T15:08:49.799Z"}
{"msg":"Has joined the channel.","username":"madiazp","ts":"2019-09-04T03:02:40.309Z","type":"uj"}
{"msg":"Hi, In the function IsRegisteredNativeContract https://github.com/hyperledger/burrow/blob/develop/execution/evm/vm.go#L859, the registered contract are the precompiled contract of ethereum? I saw that the 2,3,4 are supported, but I didn't see the 7 https://github.com/ethereum/EIPs/blob/master/EIPS/eip-196.md and 8 https://github.com/ethereum/EIPs/blob/master/EIPS/eip-197.md, So... they're not supported?","username":"madiazp","ts":"2019-09-04T03:14:15.258Z"}
{"msg":"I answered myself, they're not :grimacing: ","username":"madiazp","ts":"2019-09-04T03:48:57.929Z"}
{"msg":"I have tested burrow on ERC20, but the deployed EVM chaincode does not get msg.sender","username":"Hyungsuk Kang","ts":"2019-09-04T04:02:11.213Z"}
{"msg":"Is there a certain solidity version that works on burrow EVM?","username":"Hyungsuk Kang","ts":"2019-09-04T04:04:22.488Z"}
{"msg":"interface does not work btw","username":"Hyungsuk Kang","ts":"2019-09-04T04:09:08.530Z"}
{"msg":"Has joined the channel.","username":"JiangZheMin","ts":"2019-09-04T09:55:34.411Z","type":"uj"}
{"msg":"Hello! Could someone tell me the difference between Ethermint and Hyperledger Burrow?","username":"JiangZheMin","ts":"2019-09-04T09:55:34.748Z"}
{"msg":"@Hyungsuk Kang we recently discovered a bug with msg.sender which was recently fixed here -> https://github.com/hyperledger/burrow/pull/1234 we test against 5.X and use solidity interfaces routinely so we'd need more information on what you're experiencing.","username":"compleatang","ts":"2019-09-04T11:06:52.527Z"}
{"msg":"@JiangZheMin welcome! If you scroll up I recently answered that question. Similar ideas, different methods of execution. ","username":"compleatang","ts":"2019-09-04T11:07:33.989Z"}
{"msg":"how is tendermint achieved when hyperledger is a private network?","username":"Hyungsuk Kang","ts":"2019-09-06T06:16:22.876Z"}
{"msg":"The bug fixed above was quite specific to querying a contract, msg.sender does and always has worked properly on contracts\n\n@Hyungsuk Kang you say 'EVM chaincode' - are you using fabric-evm-chaincode?\n\nIf you are using Burrow directly could you raise an issue on https://github.com/hyperledger/burrow/issues ?","username":"silasdavis","ts":"2019-09-06T07:56:17.214Z"}
{"msg":"The bug fixed above was quite specific to querying a contract, msg.sender does and always has worked properly on contracts\n\n@Hyungsuk Kang you say 'EVM chaincode' - are you using fabric-evm-chaincode?\n\nIf you are using Burrow directly could you raise an issue on https://github.com/hyperledger/burrow/issues  describing what you have done and observed exactly?","username":"silasdavis","ts":"2019-09-06T07:56:17.214Z"}
{"msg":"> how is tendermint achieved when hyperledger is a private network? \n\nIt sounds like a number of assumptions are tied up here, but Hyperledger is not a network it is an organisation. Not sure if you are saying Hyperledger deals exclusively with private networks.\n\nTendermint is a consensus engine it can be used in a private or public context. Burrow is a permissioned ledger and can be used in a private or public context.","username":"silasdavis","ts":"2019-09-06T07:59:24.486Z"}
{"msg":"> how is tendermint achieved when hyperledger is a private network? \n\n@Hyungsuk Kang  It sounds like a number of assumptions are tied up here, but Hyperledger is not a network it is an organisation. Not sure if you are saying Hyperledger deals exclusively with private networks.\n\nTendermint is a consensus engine it can be used in a private or public context. Burrow is a permissioned ledger and can be used in a private or public context.","username":"silasdavis","ts":"2019-09-06T07:59:24.486Z"}
{"msg":"> how is tendermint achieved when hyperledger is a private network? \n\n\n@Hyungsuk Kang  It sounds like a number of assumptions are tied up here, but Hyperledger is not a network it is an organisation. Not sure if you are saying Hyperledger deals exclusively with private networks.\n\nTendermint is a consensus engine it can be used in a private or public context. Burrow is a permissioned ledger and can be used in a private or public context.","username":"silasdavis","ts":"2019-09-06T07:59:24.486Z"}
{"msg":"> how is tendermint achieved when hyperledger is a private network? \n\n\nIt sounds like a number of assumptions are tied up here, but Hyperledger is not a network it is an organisation. Not sure if you are saying Hyperledger deals exclusively with private networks.\n\nTendermint is a consensus engine it can be used in a private or public context. Burrow is a permissioned ledger and can be used in a private or public context.","username":"silasdavis","ts":"2019-09-06T07:59:24.486Z"}
{"msg":"@madiazp I'll reply a to your comments on the issue. I'd like to get us parity with the precompiled contracts available on eth, there has been some prior work on this which I'll link. Very happy to work with you on this.","username":"silasdavis","ts":"2019-09-06T08:03:48.943Z"}
{"msg":"Nice! looking for it. In the past two days I read a little bit of the evm of the go-ethereum project to see how they handle these contracts. I'm still digging on them.","username":"madiazp","ts":"2019-09-06T08:18:25.636Z"}
{"msg":"looking forward*","username":"madiazp","ts":"2019-09-06T08:19:15.951Z"}
{"msg":"@madiazp see: https://github.com/hyperledger/burrow/issues/1240","username":"silasdavis","ts":"2019-09-06T12:19:00.071Z"}
{"msg":"Ok","username":"madiazp","ts":"2019-09-06T19:52:56.961Z"}
{"msg":"You have implemented the 2,3 and 4 precompiled, you will override them?","username":"madiazp","ts":"2019-09-06T20:02:34.005Z"}
{"msg":"and, burrow has implemented the byzantium/constantinople hard fork? what will happen with the istambul one?","username":"madiazp","ts":"2019-09-06T20:05:19.020Z"}
{"msg":"I'm going to respond to the above on the ticket if you don't mind to give it visibility","username":"silasdavis","ts":"2019-09-09T13:49:43.503Z"}
{"msg":"Not sure what you mean by override them, but it was an oversight on my part not recalling that we do indeed have 2,3,4","username":"silasdavis","ts":"2019-09-09T13:50:30.828Z"}
{"msg":"@madiazp I've replied here: https://github.com/hyperledger/burrow/issues/1240","username":"silasdavis","ts":"2019-09-09T14:10:51.225Z"}
{"msg":"Also @seanyoung is looking into some changes on which you should base your work on 5","username":"silasdavis","ts":"2019-09-09T14:52:06.967Z"}
{"msg":"available once this merged: https://github.com/hyperledger/burrow/pull/1242","username":"silasdavis","ts":"2019-09-09T14:52:28.446Z"}
{"msg":"I saw in the white paper that burrow will use consensys engine with tendermint, and I wanted to know how that will be used in private context when there is an access level on block proposal in hyperledger","username":"Hyungsuk Kang","ts":"2019-09-09T14:54:12.226Z"}
{"msg":"Ok! So,  It is ok to just use some code from the go-ethereum project? https://github.com/hyperledger/burrow/pull/777/files seems to use  go-ethereum/crypto, and math snippets. And what are the import restrictions? like the C dependency issue.","username":"madiazp","ts":"2019-09-09T19:14:40.073Z"}
{"msg":"Hm yes that may have been another issue with it. We cannot use code from go-ethereum it is GPL.\n\n5 should be straight-foward use of `big.Int` ","username":"silasdavis","ts":"2019-09-09T21:08:12.533Z"}
{"msg":"It looks like the pairing group stuff is from https://github.com/cloudflare/bn256","username":"silasdavis","ts":"2019-09-09T21:27:34.974Z"}
{"msg":"but modified with a different constant","username":"silasdavis","ts":"2019-09-09T21:27:47.074Z"}
{"msg":"This is BSD licensed, and the modifications appear to be licensed similarly, this repo contains the geth version of the library: https://github.com/clearmatics/bn256","username":"silasdavis","ts":"2019-09-09T21:29:46.447Z"}
{"msg":"Looks like the original version of this code was: https://go.googlesource.com/crypto/+/master/bn256","username":"silasdavis","ts":"2019-09-09T21:42:35.401Z"}
{"msg":"mmm, 5 it is really straight forward, https://github.com/ethereum/go-ethereum/blob/master/core/vm/contracts.go#L242 ","username":"madiazp","ts":"2019-09-10T00:38:30.213Z"}
{"msg":"the LeftPadBytes function is exactly the same as yours https://github.com/hyperledger/burrow/blob/develop/binary/byteslice.go#L41 ","username":"madiazp","ts":"2019-09-10T00:39:27.931Z"}
{"msg":"and the rest is only big.Int things, maybe the only tricky part is the gas requirement calculation ","username":"madiazp","ts":"2019-09-10T00:41:12.307Z"}
{"msg":"Gas should just be the same as current natives","username":"silasdavis","ts":"2019-09-10T09:17:07.996Z"}
{"msg":"we just charge one unit base, one unit word","username":"silasdavis","ts":"2019-09-10T09:17:23.028Z"}
{"msg":"https://github.com/hyperledger/burrow/blob/develop/execution/evm/native.go#L102","username":"silasdavis","ts":"2019-09-10T09:17:35.598Z"}
{"msg":"at some point we will probably overhaul gas to make it configurable, right now all it does is bound computation, we don't even charge for it","username":"silasdavis","ts":"2019-09-10T09:18:00.085Z"}
{"msg":"Has joined the channel.","username":"igor-egorov","ts":"2019-09-10T14:26:41.615Z","type":"uj"}
{"msg":"Hi! I am new to Burrow. I would like to test \"hello world\"-like evm contracts. Is it possible to start standalone burrow node locally (maybe inside docker)? Can I have some burrow playground without installing and setting up fabric node?","username":"igor-egorov","ts":"2019-09-10T14:30:38.602Z"}
{"msg":"I've checked Burrow wiki but was not able to figure out. If there are any guides how to start standalone burrow instance, please let me know.","username":"igor-egorov","ts":"2019-09-10T14:31:54.729Z"}
{"msg":"@igor-egorov hello and welcome :)","username":"silasdavis","ts":"2019-09-10T15:48:10.081Z"}
{"msg":"Yes and yes! https://hyperledger.github.io/burrow/#/tutorials/1-run-full-node","username":"silasdavis","ts":"2019-09-10T15:48:19.761Z"}
{"msg":"no docker required","username":"silasdavis","ts":"2019-09-10T15:48:34.767Z"}
{"msg":"This serves as a slightly elaborate hello world: https://hyperledger.github.io/burrow/#/tutorials/3-deploy-contracts","username":"silasdavis","ts":"2019-09-10T15:49:52.268Z"}
{"msg":"You might find this useful for putting it all together: https://github.com/hyperledger/burrow/tree/develop/example/basic-app","username":"silasdavis","ts":"2019-09-10T15:50:30.246Z"}
{"msg":"I'm just about to update the docs quite a bit, which will be reflected on that site once this is merged: https://github.com/hyperledger/burrow/pull/1243","username":"silasdavis","ts":"2019-09-10T15:51:15.200Z"}
{"msg":"> I've checked Burrow wiki but was not able to figure out. \n\nOkay, we need to fix that cc @KellyCooper ","username":"silasdavis","ts":"2019-09-10T15:52:03.448Z"}
{"msg":"@silasdavis Will work on it next.","username":"KellyCooper","ts":"2019-09-10T22:25:37.033Z"}
{"msg":"@silasdavis Many thanks for such a detailed response! When I told about wiki I meant this page set https://wiki.hyperledger.org/display/burrow/Hyperledger+Burrow\n","username":"igor-egorov","ts":"2019-09-11T08:36:29.066Z"}
{"msg":"@igor-egorov I am working on the wiki, open to suggestions.","username":"KellyCooper","ts":"2019-09-11T15:35:12.009Z"}
{"msg":"Has left the channel.","username":"klenik","ts":"2019-10-09T13:37:54.032Z","type":"ul"}
{"msg":"Has joined the channel.","username":"arsulegai","ts":"2019-10-10T06:18:32.344Z","type":"uj"}
{"msg":"Has joined the channel.","username":"samurai","ts":"2019-10-11T03:03:53.679Z","type":"uj"}
{"msg":"Hyperledger Burrow, tried to build it on Ubuntu 18.04, but ket giving me the same error. Is there another way to install Burrow on Ubuntu 18.04?","username":"samurai","ts":"2019-10-11T03:03:54.753Z"}
{"msg":"what was the error?","username":"compleatang","ts":"2019-10-11T08:59:45.375Z"}
{"msg":"Has left the channel.","username":"knagware9","ts":"2019-10-11T11:56:12.284Z","type":"ul"}
{"msg":"","username":"samurai","ts":"2019-10-11T14:42:53.431Z","attachments":[{"type":"file","title":"Screenshot at 2019-10-11 00-38-23.png","title_link":"/file-upload/jPqC92TrgoBtTQmaN/Screenshot%20at%202019-10-11%2000-38-23.png","image_url":"/file-upload/jPqC92TrgoBtTQmaN/Screenshot%20at%202019-10-11%2000-38-23.png","image_type":"image/png","image_size":103518,"url":"/file-upload/jPqC92TrgoBtTQmaN/Screenshot%20at%202019-10-11%2000-38-23.png","remote":false,"fileId":"jPqC92TrgoBtTQmaN","fileName":"Screenshot at 2019-10-11 00-38-23.png"}]}
{"msg":"That is a screenshot of the error. ","username":"samurai","ts":"2019-10-11T14:43:41.576Z"}
{"msg":"@samurai please try a newer version of go. I use go 1.12, go 1.13 will work too.  Alternatively you can try and remove the check dependency in the top level Makefile however I think it better  to upgrade your go version","username":"seanyoung","ts":"2019-10-14T09:09:42.935Z"}
{"msg":"Has joined the channel.","username":"haydarmajeed","ts":"2019-10-14T18:45:33.368Z","type":"uj"}
{"msg":"If you just want a Burrow binary please grab one from our releases: https://github.com/hyperledger/burrow/releases","username":"silasdavis","ts":"2019-10-15T11:14:22.835Z"}
{"msg":"@samurai  If you just want a Burrow binary please grab one from our releases: https://github.com/hyperledger/burrow/releases","username":"silasdavis","ts":"2019-10-15T11:14:22.835Z"}
{"msg":"@ANKITPODDAR with Burrow you create a blockchain network of many nodes. In a way that is similar to Fabric yes.\n\nplease see here for a overview and detailed review of features: https://wiki.hyperledger.org/display/burrow/Burrow+-+The+Boring+Blockchain\n\nReference docs here: https://hyperledger.github.io/burrow/#/\n\nIf once you have worked through some of that material and have specific questions please feel free to drop them here.","username":"silasdavis","ts":"2019-10-15T11:14:22.835Z"}
{"msg":"https://www.bbc.com/news/science-environment-50036823","username":"Silona","ts":"2019-10-16T09:32:09.442Z"}
{"msg":"Marmots can be fierce!","username":"Silona","ts":"2019-10-16T09:32:19.761Z"}
{"msg":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","username":"KellyCooper","ts":"2019-10-18T13:28:44.676Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","url":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://chat.hyperledger.org/channel/general?msg=XyMygQiufDNXxNKcM","username":"KellyCooper","ts":"2019-10-18T13:29:10.430Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/general?msg=XyMygQiufDNXxNKcM","url":"https://chat.hyperledger.org/channel/general?msg=XyMygQiufDNXxNKcM","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@AnkitKumar021 I linked your question from #general to #burrow. ","username":"KellyCooper","ts":"2019-10-18T13:29:44.553Z"}
{"msg":"Has joined the channel.","username":"AnkitKumar021","ts":"2019-10-18T13:29:44.591Z","type":"uj"}
{"msg":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","username":"KellyCooper","ts":"2019-10-18T13:30:43.199Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","url":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://chat.hyperledger.org/channel/general?msg=8KTJ8d3cyNEjGDaY8","username":"KellyCooper","ts":"2019-10-18T13:32:28.263Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/general?msg=8KTJ8d3cyNEjGDaY8","url":"https://chat.hyperledger.org/channel/general?msg=8KTJ8d3cyNEjGDaY8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I have installed burrow on azure vm, how to deploy smart contract on burrow","username":"AnkitKumar021","ts":"2019-10-18T14:07:56.479Z"}
{"msg":"pls provide any tutorial","username":"AnkitKumar021","ts":"2019-10-18T14:08:08.374Z"}
{"msg":"@AnkitKumar021 Please see the information and tutorials available here: https://hyperledger.github.io/burrow/#/","username":"KellyCooper","ts":"2019-10-18T15:25:57.576Z"}
{"msg":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","username":"KellyCooper","ts":"2019-10-18T20:13:31.479Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","url":"https://chat.hyperledger.org/channel/general?msg=yYkxb6jTbTxbBeBLS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@karthikcyadav I linked here from #general. Here is some information that may help guide until a Burrow maintainer can better answer your question: https://hyperledger.github.io/burrow/#/","username":"KellyCooper","ts":"2019-10-18T20:15:08.075Z"}
{"msg":"Has joined the channel.","username":"karthikcyadav","ts":"2019-10-18T20:15:08.138Z","type":"uj"}
{"msg":"that's fabric, not burrow, and it seems to be a missconfiguration in the yaml","username":"madiazp","ts":"2019-10-18T20:31:57.445Z"}
{"msg":"like a bad name org or a wrong cert path","username":"madiazp","ts":"2019-10-18T20:32:39.786Z"}
{"msg":"Has joined the channel.","username":"ANKITPODDAR","ts":"2019-10-20T17:51:20.067Z","type":"uj"}
{"msg":"Hi I have done multiple projects on fabric now am learning hyperledger burrow, m getting proper understanding on burrow like fabric we create network for burrow also? burrow is any blockchain platform? ","username":"ANKITPODDAR","ts":"2019-10-20T17:51:21.929Z"}
{"msg":"please help me out","username":"ANKITPODDAR","ts":"2019-10-20T17:51:30.059Z"}
{"msg":"like fabric can we create our own network in burrow, can we create multiple nodes, peer and organization type of thing, please help me out in this m not getting any tutorial regarding creation of hyperledger burrow network","username":"AnkitKumar021","ts":"2019-10-21T15:51:25.294Z"}
{"msg":"Has joined the channel.","username":"shemnon","ts":"2019-10-21T16:41:04.523Z","type":"uj"}
{"msg":"Error: Failed to create Fabric SDK Channel Client: event service creation failed: could not get chConfig cache reference: QueryBlockConfig failed: queryChaincode failed: Transaction processing for endorser [localhost:7051]: Endorser Client Status Code: (2) CONNECTION_FAILED. Description: dialing connection timed out [localhost:7051","username":"AnkitKumar021","ts":"2019-10-22T13:50:36.694Z"}
{"msg":"after running the fab3 proxy m getting this error\nError: Failed to create Fabric SDK Channel Client: event service creation failed: could not get chConfig cache reference: QueryBlockConfig failed: queryChaincode failed: Transaction processing for endorser [localhost:7051]: Endorser Client Status Code: (2) CONNECTION_FAILED. Description: dialing connection timed out [localhost:7051]","username":"AnkitKumar021","ts":"2019-10-22T14:53:43.493Z"}
{"msg":"@ANKITPODDAR with Burrow you create a blockchain network of many nodes. In a way that is similar to Fabric yes.\n\nplease see here for a overview and detailed review of features: https://wiki.hyperledger.org/display/burrow/Burrow+-+The+Boring+Blockchain\n\nReference docs here: https://hyperledger.github.io/burrow/#/\n\nIf once you have worked through some of that material and have specific questions please feel free to drop them here.","username":"silasdavis","ts":"2019-10-23T11:16:19.172Z"}
{"msg":"@AnkitKumar021 please direct #fabric-evm related questions to #fabric-evm ","username":"silasdavis","ts":"2019-10-23T11:16:51.759Z"}
{"msg":"Has joined the channel.","username":"conanoc","ts":"2019-10-25T02:25:15.541Z","type":"uj"}
{"msg":"Hi @silasdavis  I could not find how to use GovTx such as how to change permissions of an account. I also piled a github issue for this.","username":"conanoc","ts":"2019-10-29T05:30:54.570Z"}
{"msg":"@conanoc thanks for issues, I have left some notes ","username":"silasdavis","ts":"2019-10-30T11:22:21.780Z"}
{"msg":"Has joined the channel.","username":"pantsme","ts":"2019-11-01T02:06:13.011Z","type":"uj"}
{"msg":"hey all, wanted to heck here before I made an issue, but it seems that there's an issue running burrow on Windows due to directory structures.  for example when trying to run the simple command from the basics tutorial I get this.  everything looks OK up until the / instead of \\ for the path\n\n=>  code burrow spec -v1 | burrow configure -s- | burrow start -c-\nSourcing config from first of: Config from STDIN then defaults\nSourcing config from Config from STDIN\ncould not generate GenesisDoc from GenesisSpec using MockKeyClient: could not create Account from template: file C:\\code\\.keys\\data/15DC3ED72C510B3AAB53F8CDDC32C486167E9245.json should be accessible by user onlycannot continue with config: could not finalise address - please provide one in config or via --account-address","username":"pantsme","ts":"2019-11-01T02:08:41.283Z"}
{"msg":"it created the files just fine though in the C:\\code\\.keys dir","username":"pantsme","ts":"2019-11-01T02:10:19.171Z"}
{"msg":"i know i know, look at the noob on windows is what you're all thinking","username":"pantsme","ts":"2019-11-01T02:11:08.953Z"}
{"msg":"Has joined the channel.","username":"dileban","ts":"2019-11-06T00:41:45.916Z","type":"uj"}
{"msg":"Hi all, I have been looking to get a better understanding of the Burrow project and its goals. From my reading it's unclear whether Burrow is striving for compliance with the EEA spec in the same way Hyperledger Besu is (and to a lesser extent, I suppose, Quorum). Is Burrow positioning itself as a competing permissioned Ethereum blockchain to other permissioned implementations such as Fabric, Sawtooth, Corda, Besu and Quorum? What differentiating features if any does Burrow offer compared to the other platforms? On the other hand, is Burrow mostly an experimental project with the goals of porting the EVM as a smart contract engine to the DLT implementations?","username":"dileban","ts":"2019-11-06T00:41:47.066Z"}
{"msg":"Hi all, I have been looking to get a better understanding of the Burrow project, particularly in relation to compliance with the EEA spec, in the same way Hyperledger Besu is striving for (and to a lesser extent, I suppose, Quorum). Is it reasonable to say that Burrow is positioning itself as a competing permissioned Ethereum blockchain to other permissioned implementations such as Fabric, Sawtooth, Corda, Besu and Quorum? What differentiating features if any does Burrow offer compared to the other platforms? On the other hand, is Burrow mostly an experimental project with the goals such as porting the EVM as a smart contract engine to the DLT implementations?","username":"dileban","ts":"2019-11-06T00:46:05.182Z"}
{"msg":"@dileban Please start here: https://wiki.hyperledger.org/display/burrow/Burrow+-+The+Boring+Blockchain","username":"KellyCooper","ts":"2019-11-06T15:48:14.776Z"}
{"msg":"Has left the channel.","username":"SimonSchuler","ts":"2019-11-07T10:40:48.739Z","type":"ul"}
{"msg":"Finally getting a chance to read the wiki and its looking really good. Thanks again for all the effort. I really love the direction of this project and have for a while. Impressed with the progress in the last few months yall. Hopefully now that its cold here in CO I will have more time to put into it. ","username":"d3cline","ts":"2019-11-09T14:08:37.259Z"}
{"msg":"have actually had a few good conversations with some big investors in cannabis about storing IoT data on a burrow chain, I think its going to gain traction. ","username":"d3cline","ts":"2019-11-09T14:10:30.951Z"}
{"msg":"binary releases are also very neat addition ","username":"d3cline","ts":"2019-11-09T15:23:05.800Z"}
{"msg":"@dileban hopefully the link Kelly posted gives a broader context and helps on the question of differentiation, on some of your other points:\n\nEEA spec compliance is currently a non-goal of Burrow. However we did recently add support for the web3 JSON RPC which opens us up to Ethereum tooling. There are groups of users of Ethereum-using projects (some of whom I met here: https://runevm.com/) who see more value in implementing unbundled components from Ethereum and do not wish to sit directly on mainnet. Burrow is more aligned with this - we want to offer core EVM language compatibility but also be open to extension without dragging along the worst bits of Ethereum architecture. We also do our consensus and p2p through Tendermint - so supporting DEVP2P is unlikely to be something we'd ever want to do. ","username":"silasdavis","ts":"2019-11-11T10:32:12.584Z"}
{"msg":"> a competing permissioned Ethereum blockchain to other permissioned implementations such as Fabric, Sawtooth, Corda, Besu and Quorum\n\nYes, if you like, we are a fully-featured permissioned blockchain. Also, while appeal to seniority has no technical merit, I would point out that Burrow's original code predates all of them, and Hyperledger itself. I am not aware of permissioned blockchain project started before eris-db...","username":"silasdavis","ts":"2019-11-11T10:36:15.300Z"}
{"msg":"@d3cline great to hear that there may be some budding projects (arf) on Burrow. Interested to hear more if you are able to share. We did have a build on ARM set up a few years ago by an intern which would be possible to resurrect if that is useful for IoT devices for example. I don't know much about the state of the Go runtime on embedded hardware other than people are doing it. The other thing that we want to get out there is as light-client RPC layer - like what we have now but that transmits a proof with results. That will require a bit of a work to set up but means your clients at the edge can get the verified state without running a full node - it's always been in the backlog pretty much forever, just needs the impetus from someone wanting to use/build it.\n\nThere might be an angle with the Avalon here - as a distribution means for the state hash for example - though no collaboration has started yet.","username":"silasdavis","ts":"2019-11-11T10:43:14.689Z"}
{"msg":"burrow compiles fine on arm. It needs at least 2GB of ram to build, armv6l (with hardfloat). I'm building it on debian buster for armhf, on this http://www.banana-pi.org/r2.html using the go tools for armv6l.","username":"seanyoung","ts":"2019-11-11T11:33:48.535Z"}
{"msg":"actually there isn't much in the way of float processing in burrow, apart from some stats. It might work fine without hardware float support. Presumably the crypto side is where most of the cpu is spent, which does not use floats (again, I guess).","username":"seanyoung","ts":"2019-11-11T11:47:32.942Z"}
{"msg":"thanks guys. I actually built it a few months ago on a pi I had laying around, but I don't think the nodes will be using it, they will be publishing their data via RPC to a distributed setup on the web. I plan on doing this via the blocktwine project I announced a few weeks ago. In the past I spent a ton of time writing a project before talking to people about it and wasted a bunch of energy on software no one really cared about until much later. This time I am talking about it a lot more before I get my hands dirty with the code. I have a single node deployed now I play with and am about to re-design some of my hardware which will start talking to it. Should be an interesting winter. Once more of a body of work is done I plan on publishing all that on github and I think it will be more interesting then. Keep up the good work tho, I really think its great. ","username":"d3cline","ts":"2019-11-11T14:34:10.209Z"}
{"msg":"Has joined the channel.","username":"nathalie-ckc","ts":"2019-11-15T06:33:09.713Z","type":"uj"}
{"msg":"Has joined the channel.","username":"KGiou","ts":"2019-11-18T12:26:24.363Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AmimKnabben","ts":"2019-11-28T20:49:20.693Z","type":"uj"}
{"msg":"Has joined the channel.","username":"radoslawgrochowski","ts":"2019-12-03T12:38:45.852Z","type":"uj"}
{"msg":"hi guys - it is possible to send an callTx using just burrow cli (without making app api)? ","username":"radoslawgrochowski","ts":"2019-12-03T12:38:46.675Z"}
{"msg":"all i have in `burrow tx formulate` is `send`","username":"radoslawgrochowski","ts":"2019-12-03T12:43:24.679Z"}
{"msg":"even tho there is `bond` and `unbond` at tutorial pages","username":"radoslawgrochowski","ts":"2019-12-03T12:44:12.321Z"}
{"msg":"i know its possible just by using deploy.yaml with burrow deploy, but i want to do it faster, command style way for test-like purpouse","username":"radoslawgrochowski","ts":"2019-12-03T13:13:27.618Z"}
{"msg":"Has joined the channel.","username":"lcfsjr1980","ts":"2019-12-06T20:26:48.841Z","type":"uj"}
{"msg":"Hi guys. I'm using Hyperledger Burrow to send transactions in Node.js using the @monax/burrow package. I'm trying to find examples of how to use burrow.transact.SignTx but didn't find. The same applies to the web3 js support in burrow. Can you guys help me with some examples?","username":"lcfsjr1980","ts":"2019-12-06T20:43:15.070Z"}
{"msg":"Hi guys. I'm using Hyperledger Burrow to send transactions in Node.js using the @monax/burrow package. I'm trying to find examples of how to use burrow.transact.SignTx but didn't find. The same applies to the web3 js support in burrow. Can you guys help me with some examples? ","username":"lcfsjr1980","ts":"2019-12-09T13:38:08.336Z"}
{"msg":"@radoslawgrochowski there is an open ticket to add callTx support to `burrow tx`, I don't think this particular feature is of top priority to the team at the moment, but if you had some capacity to contribute we would be more than happy to help guide your efforts! > https://github.com/hyperledger/burrow/issues/1155","username":"gregdhill","ts":"2019-12-10T10:06:58.383Z"}
{"msg":"@lcfsjr1980 if you look at the protobuf definitions, you'll see the objects that `SignTx` expects (namely `TxEnvelopeParam`) > https://github.com/hyperledger/burrow/blob/703eabfc5c973f3c4344805e3c908520fe5395e8/protobuf/rpctransact.proto#L69","username":"gregdhill","ts":"2019-12-10T10:10:03.979Z"}
{"msg":"you'll find the definition of the envelope here > https://github.com/hyperledger/burrow/blob/703eabfc5c973f3c4344805e3c908520fe5395e8/protobuf/txs.proto#L23","username":"gregdhill","ts":"2019-12-10T10:12:27.774Z"}
{"msg":"and the payload is defined here > https://github.com/hyperledger/burrow/blob/master/protobuf/payload.proto#L25","username":"gregdhill","ts":"2019-12-10T10:13:36.703Z"}
{"msg":"important to note for @radoslawgrochowski is CallTx > https://github.com/hyperledger/burrow/blob/master/protobuf/payload.proto#L62","username":"gregdhill","ts":"2019-12-10T10:14:42.634Z"}
{"msg":"let us know if you run into any more issues @lcfsjr1980, if you have any time to help us improve our docs as you progress we would very much appreciate it!","username":"gregdhill","ts":"2019-12-10T10:16:04.528Z"}
{"msg":"with regard to the web3 support, burrow runs a compliant RPC server, so please follow the [official truffle docs](https://www.trufflesuite.com/docs/truffle/overview) and point it to a running burrow node as explained here > https://hyperledger.github.io/burrow/#/reference/web3?id=truffle","username":"gregdhill","ts":"2019-12-10T10:18:14.807Z"}
{"msg":"My solidity code contains an event called Updated. I'm trying to listen to this event but the pegjs syntax is not working. I'm using:\nlet query = \"tm.events.type='\" + eventName + \"'\";\nDo you guys know how can I use in the left side instead of tm.events.type?","username":"lcfsjr1980","ts":"2019-12-10T14:15:29.839Z"}
{"msg":"Hello everyone - \nDo you know of a developer event that we would like to get some Hyperledger representation at?\n\nPlease submit it here.  The marketing committee will review them all as we go thru our budget for 2020\nThank you! - Silona","username":"Silona","ts":"2019-12-11T21:44:37.988Z"}
{"msg":"https://wiki.hyperledger.org/display/Marketing/Developer+Events","username":"Silona","ts":"2019-12-11T22:01:08.151Z"}
{"msg":"Hi guys. When listening an event, how can I retrieve the data emitted by the solidity code? For instance, in my solidity code I have the \"event SomethingUpdated(string One, int two);\",  but listening the event the values emitted never returned in the event object. Should I decode some byte arrays? Please help.","username":"lcfsjr1980","ts":"2019-12-13T12:14:34.801Z"}
{"msg":"@lcfsjr1980 how are you listening for the event? You can use `burrow vent` for example to insert the event into a database.","username":"seanyoung","ts":"2019-12-13T12:34:49.136Z"}
{"msg":"@seanyoung I'm using the @monax/burrow nodejs package:\n    burrow.events.listen(query, {}, (error, event) => {\n        if (error) {\n            socket.emit(\"error\", error);\n            console.log('Event %j error', error);\n        } else {\n            console.log('Event %s emitted: %s', \"SomethingUpdated\", JSON.stringify(event));\n            socket.emit(eventName, JSON.stringify(event));\n        }\n    });","username":"lcfsjr1980","ts":"2019-12-13T12:48:26.225Z"}
{"msg":"the event does not return the event emitted values","username":"lcfsjr1980","ts":"2019-12-13T12:49:22.139Z"}
{"msg":"@seanyoung the burrow vent is interesting but in my case would be overengineering because I just need to emit the event values to the clients listening the websocket.","username":"lcfsjr1980","ts":"2019-12-13T13:38:34.617Z"}
{"msg":"Has joined the channel.","username":"toddinpal","ts":"2019-12-13T17:17:26.648Z","type":"uj"}
{"msg":"What is the relationship between Burrow and an Ethereum network?  I was under the impression Burrow was basically a smart contract execution environment for EVM based languages.  But how does that smart contract play in a blockchain network such as Ethereum?","username":"toddinpal","ts":"2019-12-13T17:19:02.126Z"}
{"msg":"Has left the channel.","username":"easeev","ts":"2019-12-16T12:15:08.004Z","type":"ul"}
{"msg":"Hi folks, question to you: we had to modify burrow.js library and change the structure of the returnObj (https://github.com/molfaras/burrow.js/commit/f76d09ce9fe041e6d31f6ab5d3fed035de07f1c8#diff-e71d3a046f10d64d825ecdba1c7fd833R144)\n\nIs it possible to have something like decorator/or formatter for returnObj now or in the future? Should I open issue for this?","username":"g3d","ts":"2019-12-17T11:44:08.115Z"}
{"msg":"Hi @g3d, I think the answer is yes to both questions but it's a bit difficult for me to see the wood from the trees from that commit because it is not clear what the ancestry of that change is because of the rebasing.\n\nCould you open an issue specifying what you are trying to do, why you can't get what you need currently.\n\nIncidentally it is on my list to convert burrow.js to typescript, kill the cruft, and provided more integrated SQL database synchronisation ala https://github.com/agreements-network/blackstone/blob/feature/deletion/MP-1163/api/common/VentHelper.js.\n\nThe typescript conversion is something I'd ideally do on the next significant touch of the library so maybe this is it. If you raise an issue I'll try and cover your use case with the refactor.\n\nAnother feature I'd like to see is batching of multiple external calls into a single (atomic) transaction using a lexical (function) scope on the JS side, if that happens to be of interest to you too let me know.\n\nAlso always interested to here what brought you to Burrow and what we can do to keep you here.","username":"silasdavis","ts":"2019-12-19T13:49:08.999Z"}
{"msg":"@toddinpal I've tried to answer this and other related questions here: https://www.hyperledger.org/blog/2019/10/08/burrow-the-boring-blockchain. Let me know if I can elaborate on anything after you have skimmed that.","username":"silasdavis","ts":"2019-12-19T13:51:28.636Z"}
{"msg":"@lcfsjr1980 this is not very well documented. What `query` are you using?\n\nFor a smoke test use `burrow.events.listen('', {}, (error, event) => { ... ` that will give you everything\n\nWhat you probably want to do is just call the event function from the contract object directly which hides all of the details of doing this. See this test: https://github.com/hyperledger/burrow/blob/master/js/test/event/index.js#L33","username":"silasdavis","ts":"2019-12-19T14:02:08.038Z"}
{"msg":"@lcfsjr1980 this is not very well documented. What `query` are you using?\n\nFor a smoke test use `burrow.events.listen('', {}, (error, event) => { ... ` that will give you everything (i.e. all events from everything - you probably don't want this but...)\n\nWhat you probably want to do is just call the event function from the contract object directly which hides all of the details of doing this. See this test: https://github.com/hyperledger/burrow/blob/master/js/test/event/index.js#L33","username":"silasdavis","ts":"2019-12-19T14:02:08.038Z"}
{"msg":"@lcfsjr1980 this is not very well documented. What `query` are you using?\n\nFor a smoke test use `burrow.events.listen('', {}, (error, event) => { ... ` that will give you everything (i.e. all events from everything not just the EVM - you probably don't want this but...)\n\nWhat you probably want to do is just call the event function from the contract object directly which hides all of the details of doing this. See this test: https://github.com/hyperledger/burrow/blob/master/js/test/event/index.js#L33","username":"silasdavis","ts":"2019-12-19T14:02:08.038Z"}
{"msg":"If you have the burrow contract object then just use:\n\n```\nmyContract.SomethingUpdated((error, event) => { ... })\n```","username":"silasdavis","ts":"2019-12-19T14:03:50.623Z"}
{"msg":"sorry re-reading it sounds like you are getting _raw_ events. The call above will decode them for you, so yes using the low-level listen you would have to decode yourself, using the helper above you should see the values.\n\nHere is where the bodies are buried: https://github.com/hyperledger/burrow/blob/master/js/lib/contracts/event.js#L47-L74","username":"silasdavis","ts":"2019-12-19T14:07:04.851Z"}
{"msg":"Has joined the channel.","username":"taichi93","ts":"2019-12-25T07:14:38.041Z","type":"uj"}
{"msg":"Could you list to me some famous companies is using or supporting our hyperledger burrow? @silasdavis ","username":"taichi93","ts":"2019-12-25T07:14:38.946Z"}
{"msg":"I want to know the famous level of our hyperledger burrow now?","username":"taichi93","ts":"2019-12-25T07:16:41.794Z"}
{"msg":"Has joined the channel.","username":"selvaraman","ts":"2019-12-27T10:18:30.201Z","type":"uj"}
{"msg":"Is there any explorer for burrow? Or any suggestions?","username":"selvaraman","ts":"2019-12-27T10:18:31.639Z"}
{"msg":"Can I use burrow for ICO development?\n","username":"selvaraman","ts":"2019-12-27T10:43:51.160Z"}
{"msg":"Has joined the channel.","username":"b1001","ts":"2020-01-01T21:44:43.643Z","type":"uj"}
{"msg":"Where can I check the status of some of the key WIP features?  For example, IBC protocol","username":"b1001","ts":"2020-01-01T21:44:44.024Z"}
{"msg":"Has joined the channel.","username":"mikiasda","ts":"2020-01-01T22:38:16.386Z","type":"uj"}
{"msg":"Thank you @silasdavis, I will test again with you suggestion.","username":"lcfsjr1980","ts":"2020-01-06T20:47:30.945Z"}
{"msg":"Hi guys, I'm trying to configure 3 nodes and connect them using a seed node, according to this documentation: https://github.com/hyperledger/burrow/blob/master/docs/tutorials/6-seeding.md\nI've configured the ChainName with the same value for both seed and validator nodes:\n[GenesisDoc]\n  GenesisTime = 2020-01-06T13:35:45Z\n  ChainName = \"LedgerChain\"\n\nBut after starting the seed and validator 1 the following errors has been displayed:\n\nseed:\nincompatible: Peer is on a different network. Got LedgerChain-992E3C, expected LedgerChain-69C17C\n\nnode 1:\nincompatible: Peer is on a different network. Got LedgerChain-69C17C, expected LedgerChain-992E3C\n\n``","username":"lcfsjr1980","ts":"2020-01-06T20:52:22.626Z"}
{"msg":"Seems to be a Tendermint error","username":"lcfsjr1980","ts":"2020-01-06T20:52:32.104Z"}
{"msg":"Do you guys know how can I solve this issue?","username":"lcfsjr1980","ts":"2020-01-06T20:52:53.701Z"}
{"msg":"Has joined the channel.","username":"drr00t","ts":"2020-01-07T12:44:18.635Z","type":"uj"}
{"msg":"It is working, thanks :relaxed: ","username":"lcfsjr1980","ts":"2020-01-07T13:52:38.053Z"}
{"msg":"Has joined the channel.","username":"Whatzhub","ts":"2020-01-10T05:58:03.821Z","type":"uj"}
{"msg":"Hello everyone :)","username":"Whatzhub","ts":"2020-01-10T05:58:04.429Z"}
{"msg":"Hello @Whatzhub! What brings you here?","username":"gregdhill","ts":"2020-01-14T11:48:00.247Z"}
{"msg":"@selvaraman I might recommend BlockScout if you are looking for a graphical interface to explore Burrow, see: https://hyperledger.github.io/burrow/#/reference/web3?id=blockscout","username":"gregdhill","ts":"2020-01-14T11:49:00.209Z"}
{"msg":"although I should note that support for web3 is still experimental","username":"gregdhill","ts":"2020-01-14T11:49:53.993Z"}
{"msg":"@b1001 the best place to track progress is the official Hyperledger roadmap where we post quarterly reports","username":"gregdhill","ts":"2020-01-14T11:56:59.537Z"}
{"msg":"in terms of IBC support as you mentioned, there is some detail in this thread: https://github.com/hyperledger/burrow/issues/1130","username":"gregdhill","ts":"2020-01-14T11:58:15.946Z"}
{"msg":"so it's not currently planned, but something we are keen to implement as soon as we are able","username":"gregdhill","ts":"2020-01-14T11:59:17.651Z"}
{"msg":"@taichi93 we're not currently tracking particular use-cases, but we would be more than happy to learn of some! Perhaps you could start looking into this? The wiki might be a good place to start: https://wiki.hyperledger.org/","username":"gregdhill","ts":"2020-01-14T12:03:25.741Z"}
{"msg":"Help Us Help you!  Attend the Developer Relationship Meeting with Myself and our Marketing Dept. tomorrow at 9:00am Pacific Time. \n\nFor the agenda and Dial in info\nhttps://wiki.hyperledger.org/display/Marketing/2020-01-15+Meeting+notes ","username":"Silona","ts":"2020-01-14T16:49:09.264Z"}
{"msg":"Calling all Projects!  We will have a special Kiosk setup at Hyperledger Global Forum for Projects.  We are asking that all projects sign up to do 10 minute presentations.  https://wiki.hyperledger.org/display/HGF/Projects+Kiosk  We will close this page on Feb 28 for printing reasons. ","username":"Silona","ts":"2020-01-14T17:01:04.674Z"}
{"msg":"https://wiki.hyperledger.org/display/HGF/Video+Recording+Schedule","username":"Silona","ts":"2020-01-14T17:03:46.487Z"}
{"msg":"Has joined the channel.","username":"strongwares","ts":"2020-01-14T21:45:44.826Z","type":"uj"}
{"msg":"Hello all, just joining here, as suggested I'd like to help on the documentation front perhaps, as I start the burrow learning process...","username":"strongwares","ts":"2020-01-14T22:00:52.381Z"}
{"msg":"Has joined the channel.","username":"podgostar","ts":"2020-01-27T10:32:20.445Z","type":"uj"}
{"msg":"Hello, any admin here for one technical question?","username":"podgostar","ts":"2020-01-27T10:32:21.320Z"}
{"msg":"Hi Everyone, We are hoping to hear from everyone as we assess the health of our open source community. Please take 2 minutes to respond here: https://www.surveymonkey.com/r/DCIWGsurvey","username":"Dan","ts":"2020-01-27T17:14:12.397Z"}
{"msg":"The Linux Foundation’s CommunityBridge engineers are working on a tool to measure the health of critical open source projects and one of the key areas identified is QA Testing.  They request that our communities provide  honest and detailed information on testing tools and methodologies you use in your projects for us to come up with a detailed analysis, which they will share with all respondents and projects. https://www.surveymonkey.com/r/9H5G2GV. It’s only 5 questions long.  ","username":"Silona","ts":"2020-01-27T22:25:43.240Z"}
{"msg":"maybe active dev? ","username":"podgostar","ts":"2020-01-28T09:02:28.258Z"}
{"msg":"@silasdavis  I am performing research, which databases are used within various blockchain project... and because of the documentation of the project is not so well documented in that area, I was forced to dig into the codebase to get some findings of a database. For the Burrow project, my findings are followings: Databases: PostgreSQL (event&log data), SQLite (event&log data), LevelDB (state). Can you please verify if my findings are correct or not.","username":"podgostar","ts":"2020-01-28T09:02:28.258Z"}
{"msg":"Hi folks, as far as I see from tendermint consensus documentation, there is no maximum amount of validators, but the bigger amount of validator we have -the bigger amount of rounds it may take to vote. Is that correct?\n\nWhat is optimal balance in that case?\n\nAccording to interview here (https://docs.tendermint.com/master/interviews/tendermint-bft.html) there are some researches, that indicates 7 nodes. Is that valid assumption? ","username":"g3d","ts":"2020-01-28T11:13:46.560Z"}
{"msg":"@podgostar maintainer here, don't ask to ask :) Go ahead and I'll get back to you when I can, fairly regularly.","username":"silasdavis","ts":"2020-01-28T17:26:21.590Z"}
{"msg":"@g3d it depends what you are trying to optimise. Optimal throughput is 1 node :)","username":"silasdavis","ts":"2020-01-28T17:27:22.600Z"}
{"msg":"There are some magic numbers in terms of fault tolerance","username":"silasdavis","ts":"2020-01-28T17:36:14.656Z"}
{"msg":"these are the the minimum number of nodes that can tolerate f faults","username":"silasdavis","ts":"2020-01-28T17:36:39.497Z"}
{"msg":"partially synchronous byzantine fault tolerant consensus algorithms can survive at most 1/3 byzantine faults (see https://www.scs.stanford.edu/17au-cs244b/notes/pbft.txt) \n\nFor `n` nodes we can survive `Math.floor((n-1)/3.0)`","username":"silasdavis","ts":"2020-01-28T17:42:34.163Z"}
{"msg":"the smallest n allowing 2 faults is 7","username":"silasdavis","ts":"2020-01-28T17:42:47.435Z"}
{"msg":"the smallest n allowing 2 faults is 7, so that is probably why you may have heard 7 described as being a 'good' number. FWIW we (Monax) run our production validator pool on 7 nodes - it is convenient to be able to take two nodes offline. If you are running with <20 nodes you should also reduce your `TimeoutFactor` from defaults in burrow.toml:\n\n```\n...\n[Execution]\n  TimeoutFactor = 0.33 # or 0.25, 0.1 - depending on network\n...","username":"silasdavis","ts":"2020-01-28T17:42:47.435Z"}
{"msg":"6 nodes can survive only 1 fault","username":"silasdavis","ts":"2020-01-28T17:43:01.344Z"}
{"msg":"so in terms of resilience 6 nodes gives no benefit of 4 nodes","username":"silasdavis","ts":"2020-01-28T17:44:01.470Z"}
{"msg":"however you do get improved gossip throughput and resilience from having more nodes","username":"silasdavis","ts":"2020-01-28T17:44:33.179Z"}
{"msg":"The next 'sensible' number of nodes after 7 is 10","username":"silasdavis","ts":"2020-01-28T17:45:12.965Z"}
{"msg":"Tendermint can handle a few hundred notes, in the large n limit things get a bit smoother","username":"silasdavis","ts":"2020-01-28T17:45:35.614Z"}
{"msg":"Tendermint can handle a few hundred nodes, in the large n limit things get a bit smoother","username":"silasdavis","ts":"2020-01-28T17:45:35.614Z"}
{"msg":"If you are using Burrow as a 'zookeeper replacement' you could run with 4 nodes","username":"silasdavis","ts":"2020-01-28T17:46:45.597Z"}
{"msg":"If you want to run a public permissioned proof-of-stake network you probably want to have 100 or so validators and hope/engineer for a cartel resistant distribution of voting power","username":"silasdavis","ts":"2020-01-28T17:50:42.510Z"}
{"msg":"if you want to scale to thousands or millions of node then you need to set up connected networks using Cosmos - which is on Burrow's roadmap in the sky","username":"silasdavis","ts":"2020-01-28T17:51:24.664Z"}
{"msg":"Hello, is there a reference for deploy.yaml?   Is there a way to use environment variables from the running shell?","username":"mslavitch","ts":"2020-01-28T19:41:45.293Z"}
{"msg":"Also, how does one pass multiple parameters in a function call in deploy.yaml?","username":"mslavitch","ts":"2020-01-28T20:07:47.300Z"}
{"msg":"@silasdavis I am performing research, which databases are used within various blockchain project... and because of the documentation of the project is not so well documented in that area, I was forced to dig into the codebase to get some findings of a database. For the Burrow project, my findings are followings: Databases: PostgreSQL (event&log data), SQLite (event&log data), LevelDB (state). Can you please verify if my findings are correct or not.","username":"podgostar","ts":"2020-01-29T06:53:26.201Z"}
{"msg":"\nYes, but note SQLite and Postgres are options for our SQL event stream - they are optional and are only used when running `burrow vent` as a separate process.\n\nThe core persistence library we use is GoLevelDB - note this is embedded there is not distinct database you need to run.\n\nIf you have useful summary information not found elsewhere I would welcome a PR into https://github.com/hyperledger/burrow/tree/master/docs or adding it to the wiki if more appropriate.","username":"silasdavis","ts":"2020-01-29T10:50:17.110Z"}
{"msg":"Captain Mark Sparrow","username":"silasdavis","ts":"2020-01-30T15:34:53.577Z"}
{"msg":"Hi! It would be great if someone could take a look on https://github.com/hyperledger/burrow/issues/1328 . Thanks!","username":"lebdron","ts":"2020-02-01T08:18:47.140Z"}
{"msg":"Hi! It would be great if someone could take a look at https://github.com/hyperledger/burrow/issues/1328 . Thanks!","username":"lebdron","ts":"2020-02-01T08:18:47.140Z"}
{"msg":"Has joined the channel.","username":"MarcoRustico","ts":"2020-02-06T17:06:53.313Z","type":"uj"}
{"msg":"hi is there someone who can help me? i'm just doing some samples for university with burrow, but it doesnt work... can someone help?","username":"MarcoRustico","ts":"2020-02-06T17:06:54.070Z"}
{"msg":"my email is: rustik96@gmail.com please help","username":"MarcoRustico","ts":"2020-02-06T17:07:08.903Z"}
{"msg":"or telegram mark<-9966","username":"MarcoRustico","ts":"2020-02-06T17:13:46.454Z"}
{"msg":"Has joined the channel.","username":"Starflow","ts":"2020-02-07T10:45:55.186Z","type":"uj"}
{"msg":"Has left the channel.","username":"pschwarz","ts":"2020-02-13T15:50:49.911Z","type":"ul"}
{"msg":"Howdy Contributors and Maintainers!  Are you wondering about tapping into Developer marketing for your group or project?  Do you have a blog post idea?  An awesome announcement? Please attend our Contributor/marketing meeting!  https://wiki.hyperledger.org/display/Marketing/2020-02-19+Meeting+notes","username":"Silona","ts":"2020-02-13T18:23:19.726Z"}
{"msg":"Hello, I am migrating to 0.29.8, but I have found some issues... I am upgrading from 0.28 and I just found out that since 0.29.0 the fixture app33-evm_connection_edb_permissions_and_roles_layer/ is failing with Error 17: execution reverted: execution reverted. Then I upgraded to 0.29.8 to find out that it fails with  rawErr=\"cannot map from string to EVM address\" which should be the only fix in the release notes in exactly 0.29.8","username":"nikolay","ts":"2020-02-14T15:15:11.136Z"}
{"msg":"So the question is - is this test passing on our side, but don't trust the script's exit code - it always says Tests complete! Tests are Green. :)\nYou have to go up to check the error, I guess I have to log an issue about it","username":"nikolay","ts":"2020-02-14T15:16:18.359Z"}
{"msg":"Has joined the channel.","username":"mpiekarska","ts":"2020-02-17T11:41:52.564Z","type":"uj"}
{"msg":"does anyone have a multinode docker compose for burrow?","username":"mpiekarska","ts":"2020-02-17T11:42:07.630Z"}
{"msg":"Can anyone tell me how to subscribe to a specific contract's burrow events via Javascript? There seems to be no documentation.","username":"mslavitch","ts":"2020-02-17T20:47:04.847Z"}
{"msg":"Are you wondering about tapping into Developer marketing for your group or project?  Do you have a blog post idea?  An awesome announcement? Please attend TOMORROW!  https://wiki.hyperledger.org/display/Marketing/2020-02-19+Meeting+notes","username":"Silona","ts":"2020-02-17T22:17:28.249Z"}
{"msg":"@mslavitch there is an example here: https://github.com/hyperledger/burrow/blob/master/js/test/event/index.js#L33","username":"gregdhill","ts":"2020-02-18T10:03:07.982Z"}
{"msg":"@mpiekarska take a look at this: https://gist.github.com/gregdhill/e7614d74a285642019eb04c2e523cf9e","username":"gregdhill","ts":"2020-02-18T10:39:51.911Z"}
{"msg":"I'm having gomod issues testing burrow...\n```\ngo test ...\ngo: extracting github.com/nats-io/gnatsd v1.4.1\ngo: extracting github.com/nats-io/jwt v0.3.0\ngo: extracting github.com/nats-io/nats-server v1.4.1\ngo: extracting github.com/nats-io/nats.go v1.9.1\ngo: extracting github.com/nats-io/nkeys v0.1.0\ngo: extracting github.com/nats-io/nuid v1.0.1\ngo: finding golang.org/x/image latest\ngo: finding sourcegraph.com/sourcegraph/appdash latest\ngo: finding golang.org/x/mobile latest\ngo: finding github.com/samuel/go-zookeeper latest\ngo: finding github.com/martini-contrib/render latest\ngo: finding github.com/streadway/handy latest\ngo: finding github.com/go-martini/martini latest\ngo: finding golang.org/x/build latest\ngo: finding github.com/pborman/getopt latest\ngo: finding github.com/aryann/difflib latest\ngo: finding github.com/BurntSushi/xgb latest\ngo: finding github.com/afex/hystrix-go latest\ngo: finding go.pedge.io/lion latest\ngo: finding github.com/influxdata/influxdb1-client latest\ngo: extracting github.com/nats-io/nats-server/v2 v2.1.4\ngo: finding gopkg.in/inconshreveable/log15.v2 latest\ngo: extracting github.com/nats-io/go-nats v1.8.1\ngo: finding github.com/streadway/amqp latest\ngo: finding github.com/google/pprof latest\ngo: finding gopkg.in/yaml.v1 latest\ngo: github.com/nats-io/gnatsd/server tested by\n\tgithub.com/nats-io/gnatsd/server.test imports\n\tgithub.com/nats-io/go-nats: github.com/nats-io/go-nats@v1.8.1: parsing go.mod:\n\tmodule declares its path as: github.com/nats-io/nats.go\n\t        but was required as: github.com/nats-io/go-nats\n```\n`go version go1.13.4 darwin/amd64`","username":"shemnon","ts":"2020-02-20T20:51:08.294Z"}
{"msg":"Looks like it's trying to pull in a bunch of things I can't see in the dependency graph, for instance:\n```\n$ go mod why github.com/nats-io/gnatsd\n# github.com/nats-io/gnatsd\n(main module does not need package github.com/nats-io/gnatsd)\n```","username":"gregdhill","ts":"2020-02-21T14:46:25.689Z"}
{"msg":"Try running `go test ./...` @shemnon ","username":"gregdhill","ts":"2020-02-21T14:46:54.622Z"}
{"msg":"Has joined the channel.","username":"japidei","ts":"2020-02-22T11:52:27.306Z","type":"uj"}
{"msg":"Has left the channel.","username":"jayapalreddy","ts":"2020-03-03T01:56:17.505Z","type":"ul"}
{"msg":"Has joined the channel.","username":"Jemal","ts":"2020-03-06T08:32:17.207Z","type":"uj"}
{"msg":"Hi guys, Does Burrow allow doing things such as deploying smart contract, invoking smart contract functions, listening to events using web3 JSON RPC ?","username":"Jemal","ts":"2020-03-06T08:59:44.279Z"}
{"msg":"Hi @Jemal, yes Burrow is able to do most of the above. To listen for events I would recommend that you use our client library however.","username":"gregdhill","ts":"2020-03-06T16:33:39.341Z"}
{"msg":"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol","username":"gregdhill","ts":"2020-03-06T22:13:00.668Z"}
{"msg":"`5708187A47346AADCF643EE8759F3469244DB77F`","username":"silasdavis","ts":"2020-03-06T23:47:40.349Z"}
{"msg":"3FC3BBE48247DE468002AB8779D25B29019ADE13","username":"theomarshanti","ts":"2020-03-06T23:48:04.531Z"}
{"msg":"```3FC3BBE48247DE468002AB8779D25B29019ADE13```","username":"theomarshanti","ts":"2020-03-06T23:48:04.531Z"}
{"msg":"Has joined the channel.","username":"Mikhail_Boldyrev","ts":"2020-03-06T23:48:07.444Z","type":"uj"}
{"msg":"674A8C0AEE68B4EB3E6B62EE5F166A647B4644DB","username":"Mikhail_Boldyrev","ts":"2020-03-06T23:48:07.676Z"}
{"msg":"@gregdhill thank you for replying. I am not aware of the client library you suggested me. Can you share the link here?","username":"Jemal","ts":"2020-03-08T01:47:03.134Z"}
{"msg":"@Jemal https://www.npmjs.com/package/@hyperledger/burrow","username":"seanyoung","ts":"2020-03-08T01:56:35.310Z"}
{"msg":"Has joined the channel.","username":"jancumps","ts":"2020-03-08T09:29:51.291Z","type":"uj"}
{"msg":"@seanyoung  Thank you brother.  I think your client library is written in Typescript. I have a Dapp written in Java based on Web3j. I  want to use the same API (web3j) to  connect to Burrow. Do you think that would work?","username":"Jemal","ts":"2020-03-08T09:57:47.218Z"}
{"msg":"@gregdhill wrote the web3 interface; I'm not sure what its limitations are.","username":"seanyoung","ts":"2020-03-08T16:17:34.809Z"}
{"msg":"we should be fully compliant, if you happen across something that does not work it is likely a bug","username":"gregdhill","ts":"2020-03-08T16:24:18.278Z"}
{"msg":"@seanyoung and @gregdhill thank you. i will give it a try","username":"Jemal","ts":"2020-03-08T23:21:18.850Z"}
{"msg":"HI guys, i want to start multiple instances of Burrow node on a single high capacity Computer for the sake of research. I want to start up to 50 nodes and variable number of validators. I was thinking to insert my own code to the main class in the project source code so that i can do that automatically. Is it possible do that ? if so, can you tell me the entry point to the code and where i can insert my own code? If that is not possible, is there any other way to do that? Thanks","username":"Jemal","ts":"2020-03-08T23:21:18.850Z"}
{"msg":"Has joined the channel.","username":"Kvykv","ts":"2020-03-09T13:31:48.132Z","type":"uj"}
{"msg":"Hi ! \nI'm currently trying to evaluate the usage of Burrow regarding IBC. I saw there was a PR opened 20 days ago that ( https://github.com/hyperledger/burrow/pull/1343 ) with a few commit aiming to implement this communication using the transaction `InterchainTx`. Is there any update or ETA on this functionality if that's ok to ask ? \n\nAnd if I understand this correctly, it would mean that communicating with other blockchains part of the Cosmos Network would simply be done by emitting and receiving those transactions ?\n\nThanks !","username":"Kvykv","ts":"2020-03-09T13:36:46.106Z"}
{"msg":"@Jemal `burrow spec -v50 | burrow configure -s- --pool`","username":"gregdhill","ts":"2020-03-09T20:46:38.923Z"}
{"msg":"that will create all the configurations and keys for 50 validators","username":"gregdhill","ts":"2020-03-09T20:47:00.104Z"}
{"msg":"note the `--pool` flag","username":"gregdhill","ts":"2020-03-09T20:47:07.912Z"}
{"msg":"`burrow spec -v10 -d40 | burrow configure -s- --pool`","username":"gregdhill","ts":"2020-03-09T20:47:34.721Z"}
{"msg":"will create 10 validators and add 40 'developer' accounts","username":"gregdhill","ts":"2020-03-09T20:47:49.633Z"}
{"msg":"run `burrow spec --help` for more info","username":"gregdhill","ts":"2020-03-09T20:48:04.767Z"}
{"msg":"@gregdhill thanks. I will check it","username":"Jemal","ts":"2020-03-09T22:23:11.985Z"}
{"msg":"@Kvykv it is very early days so please keep an eye on our roadmap. We aim to complete IBC support before Game of Zones, but this of course depends on when that is. ","username":"gregdhill","ts":"2020-03-09T23:15:34.598Z"}
{"msg":"Hi @gregdhill and @Kvykv , I run the following commands to start burrow node but receiving different errors: I think i didn't get the right step to configure and start burrow nodes. Can you tell me the steps i have to go through from configuring to running Burrow node? I read the documentation. But it is confusing.","username":"Jemal","ts":"2020-03-11T10:06:56.823Z"}
{"msg":"","username":"Jemal","ts":"2020-03-11T10:07:02.729Z","attachments":[{"type":"file","title":"Clipboard - March 11, 2020 9:06 PM","title_link":"/file-upload/4FpBsmE3hX8fRGPQ2/Clipboard%20-%20March%2011,%202020%209:06%20PM","image_url":"/file-upload/4FpBsmE3hX8fRGPQ2/Clipboard%20-%20March%2011,%202020%209:06%20PM","image_type":"image/png","image_size":32483,"url":"/file-upload/4FpBsmE3hX8fRGPQ2/Clipboard%20-%20March%2011,%202020%209:06%20PM","remote":false,"fileId":"4FpBsmE3hX8fRGPQ2","fileName":"Clipboard - March 11, 2020 9:06 PM"}]}
{"msg":"","username":"Jemal","ts":"2020-03-11T10:07:29.786Z","attachments":[{"type":"file","title":"Clipboard - March 11, 2020 9:07 PM","title_link":"/file-upload/55AGHi3LMr3W4yP5F/Clipboard%20-%20March%2011,%202020%209:07%20PM","image_url":"/file-upload/55AGHi3LMr3W4yP5F/Clipboard%20-%20March%2011,%202020%209:07%20PM","image_type":"image/png","image_size":11621,"url":"/file-upload/55AGHi3LMr3W4yP5F/Clipboard%20-%20March%2011,%202020%209:07%20PM","remote":false,"fileId":"55AGHi3LMr3W4yP5F","fileName":"Clipboard - March 11, 2020 9:07 PM"}]}
{"msg":"This might be a windows specific issue, Burrow is complaining that your keys do not have the correct permissions.","username":"gregdhill","ts":"2020-03-13T10:41:16.162Z"}
{"msg":"See: https://github.com/hyperledger/burrow/blob/master/keys/key_store.go#L336","username":"gregdhill","ts":"2020-03-13T10:41:18.133Z"}
{"msg":"The easiest fix would be to add the following to each config generated by `burrow configure`:","username":"gregdhill","ts":"2020-03-13T10:42:46.432Z"}
{"msg":"```\n[Keys]\n  GRPCServiceEnabled = false\n  AllowBadFilePermissions = true\n```","username":"gregdhill","ts":"2020-03-13T10:42:51.244Z"}
{"msg":"```\n[Keys]\n  AllowBadFilePermissions = true\n```","username":"gregdhill","ts":"2020-03-13T10:42:51.244Z"}
{"msg":"@gregdhill thank you. I have another question related to web3j. I am using web3j to listen for new Blocks as they are created. The network creates blocks every 2 seconds. I can see that the listener receives and prints new block every 2 seconds most of the time. However, sometimes it arrives late like after 15 seconds. Am i missing something? Here is the code i am using:                                                                                                                                                                          public void listenForNewBlocks(){\n         subscription = (Subscription) web3j.blockFlowable(false).subscribe(block -> {\n             size++;\n            CustomBlock customBlock = new CustomBlock(block.getBlock(), System.currentTimeMillis());\n            blockList.put(customBlock.block.getNumber(), customBlock);\n            System.out.println(\"Block Number: \"+customBlock.block.getNumber()+\" Time Received: \"+customBlock.timeReceived);\n        });\n    }","username":"Jemal","ts":"2020-03-15T05:35:46.958Z"}
{"msg":"@gregdhill thank you. I have another question related to web3j. I am using web3j to listen for new Blocks as they are created. The network creates blocks every 2 seconds. I can see that the listener receives and prints new block every 2 seconds most of the time. However, sometimes it arrives late like after 15 seconds. Am i missing something? Here is the code i am using:                                                                                                                                                                          ","username":"Jemal","ts":"2020-03-15T05:35:46.958Z"}
{"msg":"public void listenForNewBlocks(){\n         subscription = (Subscription) web3j.blockFlowable(false).subscribe(block -> {\n             size++;\n            CustomBlock customBlock = new CustomBlock(block.getBlock(), System.currentTimeMillis());\n            blockList.put(customBlock.block.getNumber(), customBlock);\n            System.out.println(\"Block Number: \"+customBlock.block.getNumber()+\" Time Received: \"+customBlock.timeReceived);\n        });\n    }","username":"Jemal","ts":"2020-03-15T05:36:08.200Z"}
{"msg":"Has joined the channel.","username":"evg.bondareva","ts":"2020-04-07T15:40:30.699Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ChristopheLeske","ts":"2020-04-12T11:34:22.111Z","type":"uj"}
{"msg":"Hello. I am a develper new to HL Burrow. Having worked with Fabric before, I was wondering if there is any comparable tool like HL Explorer to view the blockchain working in realtime and explore the data in the blocks?","username":"ChristopheLeske","ts":"2020-04-12T11:34:22.393Z"}
{"msg":"Any help is much appreciated, thank you.","username":"ChristopheLeske","ts":"2020-04-12T11:35:01.135Z"}
{"msg":"Could you take a look at the output from our RPC and compare the timestamps in the block headers?\n\ni.e. `curl -s \"http://localhost:26658/blocks?id=1\"`","username":"gregdhill","ts":"2020-04-13T09:09:26.485Z"}
{"msg":"There is nothing tailor-made, but we are compatible with most Ethereum tooling, see: https://hyperledger.github.io/burrow/#/reference/web3?id=blockscout","username":"gregdhill","ts":"2020-04-13T09:10:29.490Z"}
{"msg":"Turns out that burrow isn't following the ewasm spec correctly. I had to make a similar change in solang: https://github.com/hyperledger-labs/solang/commit/00aa928882ac673f6d7ffd53ca855887e702598b","username":"seanyoung","ts":"2020-04-13T11:50:36.015Z"}
{"msg":"I'll fix up burrow once I finish create contract and call external contract, so I can test all of them in one go.","username":"seanyoung","ts":"2020-04-13T11:51:14.234Z"}
{"msg":"Has joined the channel.","username":"techbubble","ts":"2020-04-14T01:40:30.205Z","type":"uj"}
{"msg":"Hi! My startup TryCrypto has a SaaS product DappStarter which makes blockchain app development easy, especially for web developers. \n\nOur platform is blockchain agnostic and I am here because we are exploring adding Burrow as a supported blockchain on DappStarter. We are partnered with Truffle for framework and Sia for decentralized storage. Excited to join the Burrow community. \n\nhttps://dappstarter.trycrypto.com","username":"techbubble","ts":"2020-04-14T01:48:05.745Z"}
{"msg":"Welcome!","username":"compleatang","ts":"2020-04-21T21:00:19.915Z"}
{"msg":"Has joined the channel.","username":"ombalakumar","ts":"2020-05-19T06:47:01.426Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nizarhmain","ts":"2020-05-26T15:29:39.076Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nbasker","ts":"2020-06-06T02:58:18.131Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AshishBanerjee","ts":"2020-06-06T14:05:42.932Z","type":"uj"}
{"msg":"Hi! groking the code, it appears to me that SSL/TLS is not being used in GRPC service.  Is there any document I need to readup for TLS setup? Neither did I find any message level enryption. Am I missing something?","username":"AshishBanerjee","ts":"2020-06-06T14:10:44.947Z"}
{"msg":"Burrow uses tendermint for consensus, which in turn, uses  STS https://github.com/tendermint/tendermint/blob/0.1/docs/sts-final.pdf  (tendermint/p2p/conn/secret_connection.go) , thus the nodes would not be needing TLS. As for Burrow RPC not using TLS, it would be the case if the assumption is that these RPC will be node local and not exposed to the external world.\nIS The above assumption correct??","username":"AshishBanerjee","ts":"2020-06-06T14:46:32.812Z"}
{"msg":"Has joined the channel.","username":"Robki96","ts":"2020-06-08T08:51:53.076Z","type":"uj"}
{"msg":"Hello, I'm trying to enable Web3 on a fresh install of version 0.30.4. I can't get it to work. I added this to the burrow.toml config `[RPC.Web3]\n    Enabled = true\n    ListenHost = \"0.0.0.O\"\n    ListenPort = \"26660\"` \nBut it doesn't seem to start enable web3. \nWhats the correct method for enabling web3?","username":"Robki96","ts":"2020-06-08T08:51:53.366Z"}
{"msg":"Hello, I'm trying to enable Web3 on a fresh install of version 0.30.4. I can't get it to work. I added this to the burrow.toml config `[RPC.Web3]\n    Enabled = true\n    ListenHost = \"0.0.0.0\"\n    ListenPort = \"26660\"` \nBut it doesn't seem to start enable web3. \nWhats the correct method for enabling web3?","username":"Robki96","ts":"2020-06-08T08:51:53.366Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=ToSng3r3vYEswGWvT) @AshishBanerjee Unfortunately there TLS is not configurable on our RPC, however we do intend for this to be implemented. If you have time to look into this we would appreciate a PR to include this! Feel free to ping me if I can help you to get started. 🙂","username":"gregdhill","ts":"2020-06-12T12:41:20.069Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ToSng3r3vYEswGWvT","url":"https://chat.hyperledger.org/channel/burrow?msg=ToSng3r3vYEswGWvT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@AshishBanerjee Unfortunately TLS is not configurable on our RPC, however we do intend for this to be implemented. If you have time to look into this we would appreciate a PR to include this! Feel free to ping me if I can help you to get started. 🙂","username":"gregdhill","ts":"2020-06-12T12:41:20.069Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=ToSng3r3vYEswGWvT","url":"https://chat.hyperledger.org/channel/burrow?msg=ToSng3r3vYEswGWvT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Thanks @gregdhill , have sent you a DM, asking for advice.","username":"AshishBanerjee","ts":"2020-06-13T12:32:05.906Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=SKiwc4K4NLwAPMK2a) @Robki96 Sorry to hear you're having problems! Have you been able to `curl` the endpoint?","username":"gregdhill","ts":"2020-06-13T15:47:48.411Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=SKiwc4K4NLwAPMK2a","url":"https://chat.hyperledger.org/channel/burrow?msg=SKiwc4K4NLwAPMK2a","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"Skalibur001","ts":"2020-06-23T02:50:48.164Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Pham_Van_Chung","ts":"2020-06-24T04:53:54.867Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vikiival","ts":"2020-06-29T11:48:57.708Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Rabax55","ts":"2020-07-07T00:11:48.927Z","type":"uj"}
{"msg":"Has joined the channel.","username":"githubckgoh1439","ts":"2020-07-20T03:18:19.706Z","type":"uj"}
{"msg":"Has joined the channel.","username":"shehand","ts":"2020-07-21T16:50:32.450Z","type":"uj"}
{"msg":"Hi, I'm new to hyperledger projects and burrow. So I started reading the docs but seems like the examples for basic JS API (https://hyperledger.github.io/burrow/#/example/basic-app/README) is missing some file. When I tried to read the files like \"makefile\", \"burrow.js\", it redirect me to a broken URL. Is there any other way to continue on this JS API other than the provided document?","username":"shehand","ts":"2020-07-22T14:59:26.335Z"}
{"msg":"Has joined the channel.","username":"nitinrawat_2","ts":"2020-07-25T12:11:15.393Z","type":"uj"}
{"msg":"Hi Everyone facing issue while downloading hyperledger fabric binaries always some binaries stuck in downloading status in windows.","username":"nitinrawat_2","ts":"2020-07-25T12:11:15.754Z"}
{"msg":"Has joined the channel.","username":"vkvaibhav669","ts":"2020-07-26T14:54:26.247Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kennystone","ts":"2020-07-31T19:25:56.628Z","type":"uj"}
{"msg":"a very basic question: where is the code referenced in the basic app?https://hyperledger.github.io/burrow/#/example/basic-app/README","username":"kennystone","ts":"2020-07-31T19:25:56.733Z"}
{"msg":"ok, I found it.  Since the docs live on the web, maybe we could reference where the code lives?  Or make the first step to checkout the entire burrow source tree, then CD into docs/example/basic-app","username":"kennystone","ts":"2020-07-31T19:36:48.741Z"}
{"msg":"I had some issues too.  The online docs don't work very well, but I was able to get it to work just from that project directory.","username":"kennystone","ts":"2020-08-01T20:42:05.041Z"}
{"msg":"I made a small PR to update the readme, since two of us got stuck reading the online docs in the same way.  https://github.com/hyperledger/burrow/pull/1400","username":"kennystone","ts":"2020-08-02T16:40:47.868Z"}
{"msg":"Not sure how the online docs work, but perhaps the whole thing should be updated so it functions better both online and inside the repository.","username":"kennystone","ts":"2020-08-02T16:41:29.068Z"}
{"msg":"Happy to make those changes in this branch with some guidance","username":"kennystone","ts":"2020-08-02T16:43:18.776Z"}
{"msg":"I deleted the request because I saw you ask people to make changes off of `develop` branch, but I don't see that branch.","username":"kennystone","ts":"2020-08-02T17:47:22.298Z"}
{"msg":"@kennystone we used to have a develop branch, that got deleted. New work goes into master.","username":"seanyoung","ts":"2020-08-02T21:01:40.203Z"}
{"msg":"So I think your PR was correct","username":"seanyoung","ts":"2020-08-02T21:01:59.531Z"}
{"msg":"Hello, I get the following error on a blockchain pull request:\n\nError 1: generic error: cannot grow memory because it would exceed the current maximum limit of 16777216 bytes\n\nIs there a way around this, to set  the maximumMemoryCapacity  larger than defaultMaximumMemoryCapacity which is 16MB?","username":"mslavitch","ts":"2020-08-04T13:05:11.205Z"}
{"msg":"Has joined the channel.","username":"SuperSeiyan","ts":"2020-08-09T15:20:42.262Z","type":"uj"}
{"msg":"Has joined the channel.","username":"weeaix","ts":"2020-08-14T08:45:07.689Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AndrewPark 1","ts":"2020-08-21T04:55:45.067Z","type":"uj"}
{"msg":"Is burrow stopped? There is no communication in this channel, and code is not updated in github for a long time. Is there any problem?","username":"AndrewPark 1","ts":"2020-08-21T04:59:04.458Z"}
{"msg":"Has joined the channel.","username":"jcldnatv","ts":"2020-08-22T17:28:50.151Z","type":"uj"}
{"msg":"Has left the channel.","username":"igor-egorov","ts":"2020-08-25T14:07:49.160Z","type":"ul"}
{"msg":"Has joined the channel.","username":"xachen","ts":"2020-08-27T01:49:35.658Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MurugesanRathinam","ts":"2020-09-09T11:14:33.112Z","type":"uj"}
{"msg":"Hi all","username":"MurugesanRathinam","ts":"2020-09-09T11:14:33.642Z"}
{"msg":"i am exploring hyperledger burrow vent","username":"MurugesanRathinam","ts":"2020-09-09T11:14:56.194Z"}
{"msg":"i can able to bring up vent services","username":"MurugesanRathinam","ts":"2020-09-09T11:15:28.384Z"}
{"msg":"kindly help me to write projections for smartcontract events","username":"MurugesanRathinam","ts":"2020-09-09T11:16:04.359Z"}
{"msg":"i am using simplestorage.sol contract","username":"MurugesanRathinam","ts":"2020-09-09T11:16:22.329Z"}
{"msg":"Hi Seanyoung","username":"MurugesanRathinam","ts":"2020-09-09T11:24:00.990Z"}
{"msg":"Hello","username":"seanyoung","ts":"2020-09-09T11:24:16.803Z"}
{"msg":"i just exploring vent functionality with simplestorage contract. in which when am storing some values via smartcontract same should be stored in postgres aswell","username":"MurugesanRathinam","ts":"2020-09-09T11:26:21.259Z"}
{"msg":"Kindly help me to achieve this.","username":"MurugesanRathinam","ts":"2020-09-09T11:26:45.214Z"}
{"msg":"i just exploring vent functionality with simplestorage contract. in which when am storing some values via smartcontract same should be stored in postgres aswell\nKindly help me to achieve this.","username":"MurugesanRathinam","ts":"2020-09-09T11:27:21.363Z"}
{"msg":"Hello","username":"MurugesanRathinam","ts":"2020-09-09T11:29:05.364Z"}
{"msg":"That's exactly what vent is for. In Solidity, you have to emit events to get vent to pick them up and send them to postgres. vent will needs some definitions of tables and filters to make this work.","username":"seanyoung","ts":"2020-09-09T12:21:09.859Z"}
{"msg":"This page explains how to set this up https://hyperledger.github.io/burrow/#/reference/vent","username":"seanyoung","ts":"2020-09-09T12:21:46.167Z"}
{"msg":"Thank you","username":"MurugesanRathinam","ts":"2020-09-09T12:31:07.848Z"}
{"msg":"Hello Burrow community from the Hyperledger India Chapter, we are calling for speakers to engage with the community in Asia Pacific, Europe and Africa. Please see our event details here https://www.linkedin.com/feed/update/urn:li:activity:6715897303481372672\n\nCalling the tech enthusiasts, maintainers to be part of it.","username":"arsulegai","ts":"2020-09-27T12:07:05.797Z"}
{"msg":"Has joined the channel.","username":"dgt1nsty","ts":"2020-10-02T13:43:42.148Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Sandeepk40","ts":"2020-10-07T04:28:05.119Z","type":"uj"}
{"msg":"Has joined the channel.","username":"baziorek","ts":"2020-11-04T17:48:37.946Z","type":"uj"}
{"msg":"Hello,\nI'm new in Burrow and I want to know if there are any more triggers than listed here: https://hyperledger.github.io/burrow/#/reference/transactions I'm looking for time triggers - it is possible to trigger something e.g. every day at 8 p.m.?","username":"baziorek","ts":"2020-11-04T17:50:56.452Z"}
{"msg":"Has joined the channel.","username":"evanevan","ts":"2020-11-11T08:17:09.036Z","type":"uj"}
{"msg":"Hellom","username":"evanevan","ts":"2020-11-11T08:17:09.578Z"}
{"msg":"Hello, \nI am new in Burrow and I want to know how to install burrow on windows without VM?","username":"evanevan","ts":"2020-11-11T08:17:09.578Z"}
{"msg":"Hi, I am new to burrow, and I want to install burrow on windows without VM. Could you please give me some tutorials? I can not even find a detailed documentation for installation online.","username":"evanevan","ts":"2020-11-11T08:33:23.340Z"}
{"msg":"Hi, I am new to burrow and I want to install burrow on windows without VM. Could you please give me some tutorials? I can not even find any installation tutorials online:(","username":"evanevan","ts":"2020-11-11T08:38:11.104Z"}
{"msg":"Hello,\nIs anybody here, is it official Hyperledger Burrow chat?","username":"baziorek","ts":"2020-11-13T17:36:10.537Z"}
{"msg":"Has joined the channel.","username":"reviz0r","ts":"2020-11-16T20:24:25.444Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tegie","ts":"2020-11-20T10:16:06.339Z","type":"uj"}
{"msg":"Hello, quick question where I can find password for generated keyfiles for accounts/validators?","username":"tegie","ts":"2020-11-20T10:16:06.686Z"}
{"msg":"@tegie keyfiles don't have passwords, they're in the plain","username":"seanyoung","ts":"2020-11-24T08:27:56.779Z"}
{"msg":"@evanevan burrow is written in pure go, so it should compile fine on windows. However, it hasn't been tested. Patches and bug reports are welcome of course","username":"seanyoung","ts":"2020-11-24T08:30:29.641Z"}
{"msg":"@baziorek unfortunately all the burrow maintainer are busy on other work, but some will be returning soon.","username":"seanyoung","ts":"2020-11-24T08:31:03.089Z"}
{"msg":"@baziorek time triggers is something we have wanted for a long time, but they don't exist yet. Patches are welcome :)","username":"seanyoung","ts":"2020-11-24T08:32:45.900Z"}
{"msg":"Has joined the channel.","username":"bassirpechaz","ts":"2020-11-24T08:55:09.638Z","type":"uj"}
{"msg":"Has joined the channel.","username":"piyushmaheshwari65","ts":"2020-11-25T04:19:27.421Z","type":"uj"}
{"msg":"@seanyoung Thanks for Your reply. I need to check code before declaring help. But it is good to know that You want this functionality:)","username":"baziorek","ts":"2020-12-04T12:05:59.013Z"}
{"msg":"Has joined the channel.","username":"pedrorpmoleiro","ts":"2020-12-09T11:29:27.671Z","type":"uj"}
{"msg":"Has joined the channel.","username":"thomasdesouza","ts":"2020-12-11T15:15:42.139Z","type":"uj"}
{"msg":"Hi everyone, would anyone be able to tell me if there is a burrow is switched on in the latest docker image on docker hub and if not what would be the easiest way to get access to a pre-build docker image or build one myself - thanks","username":"thomasdesouza","ts":"2020-12-11T15:17:58.323Z"}
{"msg":"Has joined the channel.","username":"YoongbokLee","ts":"2020-12-11T19:19:00.980Z","type":"uj"}
{"msg":"Hi, I'm one of the developers at CertiK chain and am wondering if I can get any assistance regarding any of the following:\n1. eWASM support (PR #1406)\n2. modularizing VM portion of the code (for us to fork/participate in the development)","username":"YoongbokLee","ts":"2020-12-11T19:25:04.689Z"}
{"msg":"Has joined the channel.","username":"ivarec","ts":"2021-01-14T01:56:04.800Z","type":"uj"}
{"msg":"is burrow still maintained?","username":"ivarec","ts":"2021-01-14T01:56:05.178Z"}
{"msg":"Has joined the channel.","username":"garyclark","ts":"2021-01-14T22:22:15.033Z","type":"uj"}
{"msg":"Not sure it seems very uncooked.","username":"garyclark","ts":"2021-01-14T22:22:48.709Z"}
{"msg":"Hello I have been working with Hyperledger Fabric. Does anyone have experience of Hyperledger Burrow? I have to go down this rabbit hole,,,.excuse the pun.","username":"garyclark","ts":"2021-01-14T22:27:48.251Z"}
{"msg":"Hello I have been working with Hyperledger Fabric. Does anyone have experience of Hyperledger Burrow? I have to go down this rabbit hole,,,.excuse the pun.","username":"garyclark","ts":"2021-01-14T22:28:20.489Z"}
{"msg":"Is it still maintained or this uncooked?","username":"garyclark","ts":"2021-01-14T22:28:42.824Z"}
{"msg":"Hello, burrow is still maintained","username":"silasdavis","ts":"2021-01-18T10:56:15.990Z"}
{"msg":"I have had something of a hiatus working on our product built on top of burrow ","username":"silasdavis","ts":"2021-01-18T10:56:38.172Z"}
{"msg":"I have just started a tranche of work on burrow a week or so ago to upgrade Tendermint ","username":"silasdavis","ts":"2021-01-18T10:57:24.392Z"}
{"msg":"However I have ended up in a bit of a rabbit hole working on protobuf code generation which we rely on from gogo proto but which is now incompatible: https://github.com/monax/peptide","username":"silasdavis","ts":"2021-01-18T11:01:07.397Z"}
{"msg":"I plan to merge, rework, or close the current PRs, upgrade Tendermint, fix some CI issues, fix a couple of concurrency issues, and finally hook up cross EVM Wasm calls ","username":"silasdavis","ts":"2021-01-18T11:02:21.910Z"}
{"msg":"Hi Silas, Thank you for the update, really appreciated!","username":"nikolay","ts":"2021-01-18T11:13:46.575Z"}
{"msg":"congrats! the scope and vision of burrow seems really attractive to my company - will look forward into it further","username":"ivarec","ts":"2021-01-18T16:36:22.047Z"}
{"msg":"Thanks both, @ivarec is this you: https://github.com/hyperledger/burrow/pull/1415 ?","username":"silasdavis","ts":"2021-01-18T19:58:38.921Z"}
{"msg":"Thanks both, @ivarec is this you @ivarec: https://github.com/hyperledger/burrow/pull/1415 ? If so thank you!","username":"silasdavis","ts":"2021-01-18T19:58:38.921Z"}
{"msg":"I apologise for the state of the CI I think it's via an eternal python dependency","username":"silasdavis","ts":"2021-01-18T19:59:05.288Z"}
{"msg":"I apologise for the state of the CI I think it's via an external python dependency","username":"silasdavis","ts":"2021-01-18T19:59:05.288Z"}
{"msg":"it's on my list to fix that but I find myself mired in this: https://github.com/xen0n/protobuf-gogogo/issues/1","username":"silasdavis","ts":"2021-01-18T19:59:40.451Z"}
{"msg":"please bear with me","username":"silasdavis","ts":"2021-01-18T19:59:45.129Z"}
{"msg":"Has joined the channel.","username":"barankilic","ts":"2021-01-30T10:49:12.241Z","type":"uj"}
{"msg":"Thanks Silas.","username":"garyclark","ts":"2021-02-03T16:24:42.421Z"}
{"msg":"@YoongbokLee we've just merged some more ewasm support. There still a few function missing, but it's mostly there.","username":"seanyoung","ts":"2021-02-04T15:48:28.742Z"}
{"msg":"Has joined the channel.","username":"annant","ts":"2021-02-10T11:22:34.305Z","type":"uj"}
{"msg":"Hi team, I am working with DAML smart contract that is using Immudb (cryptographically verfiable database) as ledger. I want to replace DAML with Burrow so that it can support solidity and in-contract sign verification. I am qurious to kow if it is possible to integrate Burrow with immudb (verifiable database) i.e can we use different ledger as a plugin? Can we run burrow as an independent network?","username":"annant","ts":"2021-02-10T11:22:34.997Z"}
{"msg":"@annant what would you like to use immudb for? Storing solidity contract storage variables?\n\nAlso what do you mean by in-contract sign verification? Are you thinking of `ecrcover()`? Note that ewasm support is nearing completion, and then with solang we can add any function you need to Solidity.","username":"seanyoung","ts":"2021-02-10T12:54:35.878Z"}
{"msg":"#seanyoung immudb will basically store all the data for a contract...contract will automate the process and data will be stored in the immudb. So that it can be verified by anyone as it is cryptographically verfiable. Is it possible to integrate immudb with burrow?\n\nIn my project all the users are not given authoriy to write on contract. It is written by their onwer on contract, We are thinking the end owner will encrypt and sign the data and send it to its owner and the owner will write the data in contract. Contract(will be written in solidity) will verfiy the signature of the enduser using its public key and then modify accordingly. We are doing in-contract sign verification to make sure that data has not been tempered.\n\nIs integration with immudb possible or we can go for inbuild burrow ledger.\n\nThanx in advance","username":"annant","ts":"2021-02-10T14:07:58.663Z"}
{"msg":"@annat what's the advantage of using immudb? burrow already uses a merkel tree for state, and the hash of this is present in each block. So, it is already cryptographically verifiable.\n\nHaving said that, you can replace the state database in burrow. This will require some surgery in the code though.","username":"seanyoung","ts":"2021-02-12T16:58:17.930Z"}
{"msg":"The hash is the application state in each block.","username":"seanyoung","ts":"2021-02-12T16:58:39.333Z"}
{"msg":"Has joined the channel.","username":"anandls","ts":"2021-02-22T11:47:46.936Z","type":"uj"}
{"msg":"New to Burrow. Exploring slowly, learning and trying to get old of it. Will approach the fraternity for any help needed. Thanks and cheers.","username":"anandls","ts":"2021-02-22T11:47:47.585Z"}
{"msg":"New to Burrow. Exploring slowly, learning and trying to get hold of it. Will approach the fraternity for any help needed. Thanks and cheers.","username":"anandls","ts":"2021-02-22T11:47:47.585Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=efT4gRWhbBw32cfkq) What about adding this as internship project? Deadline is 8th March for proposals?","username":"baziorek","ts":"2021-03-04T18:59:14.356Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=efT4gRWhbBw32cfkq","url":"https://chat.hyperledger.org/channel/burrow?msg=efT4gRWhbBw32cfkq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"That's a good idea, I have already submitted an internship for Solang, so I won't have time for this. Maybe something for @silasdavis or @gregdhill","username":"seanyoung","ts":"2021-03-05T09:23:52.753Z"}
{"msg":"Deadline is 10th March if You or somebody wants to send:\nhttps://wiki.hyperledger.org/display/INTERN/Hyperledger+Mentorship+Program","username":"baziorek","ts":"2021-03-09T13:18:18.357Z"}
{"msg":"Has joined the channel.","username":"JonatanBuild","ts":"2021-03-09T13:50:42.491Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pritam_01","ts":"2021-03-14T19:15:31.698Z","type":"uj"}
{"msg":"Has joined the channel.","username":"KLYE","ts":"2021-03-17T12:10:21.549Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mrtender","ts":"2021-03-22T01:28:32.522Z","type":"uj"}
{"msg":"Hey everyone. We have built an application on Hyperledger Sawtooth (checkout www.forestcoin.earth - a cryptocurrency where the coins are created by users planting trees). We want to enable EVMs ontop of the Forestcoin cryptocurrency. It looks like Burrow / SETH is the framework for doing this? Is SETH working ok? Is anyone aware of active projects with EVM's on Sawtooth? Any tips before I get my development team onto it? Thanks!","username":"mrtender","ts":"2021-03-22T01:28:33.299Z"}
{"msg":"Has joined the channel.","username":"arpitsoman","ts":"2021-03-24T07:48:29.054Z","type":"uj"}
{"msg":"@mrtender #sawtooth-seth might be a better place to ask","username":"seanyoung","ts":"2021-03-24T08:54:13.517Z"}
{"msg":"Hello, I am trying to upgrade to latest release, I was using quite old version and have some tests with providing permissions from within a contract. Now these tests are failing and I am having hard time catching up with all the changes, so maybe someone can give me a hint. The error is \"UpdateAccount called in a read-only context on account  ....\". I can see there is a ReadOnly option which checks for this error, but I had no issues using the Native Permissions Contract SetBase before and the stack trace leads to: execution/native/permissions.go: 129","username":"nikolay","ts":"2021-03-26T16:42:27.944Z"}
{"msg":"Hello, I am trying to upgrade to latest release. I was using quite old version and have some tests with providing permissions from within a contract. Now these tests are failing and I am having hard time catching up with all the changes, so maybe someone can give me a hint. The error is \"UpdateAccount called in a read-only context on account  ....\". I can see there is a ReadOnly option which checks for this error, but I had no issues using the Native Permissions Contract SetBase before and the stacktrace leads to: execution/native/permissions.go: 129","username":"nikolay","ts":"2021-03-26T16:42:27.944Z"}
{"msg":"does that mean that I can't update permissions from a contract anymore, I need to pass a new parameter which I can't find or I need to file a bug or fix it myself and propose a purr request... any ideas are welcome here","username":"nikolay","ts":"2021-03-26T16:43:29.691Z"}
{"msg":"does this mean that I can't update permissions from a contract anymore, I need to pass a new parameter which I can't find or I need to file a bug or fix it myself and propose a purr request... any ideas are welcome here","username":"nikolay","ts":"2021-03-26T16:43:29.691Z"}
{"msg":"does this mean that I can't update permissions from a contract anymore, I need to pass a new parameter which I can't find or I need to file a bug or fix it myself and propose a pull request...? any ideas are welcome here","username":"nikolay","ts":"2021-03-26T16:43:29.691Z"}
{"msg":"You likely can.. just need to run the contract from the root account","username":"KLYE","ts":"2021-03-31T00:59:50.122Z"}
{"msg":"Has joined the channel.","username":"betbeb.com","ts":"2021-04-01T07:41:45.686Z","type":"uj"}
{"msg":"hello everyone! I have a question for you\nhttps://github.com/hyperledger/burrow/issues/1476","username":"betbeb.com","ts":"2021-04-01T07:41:46.284Z"}
{"msg":"FYI in the error that I have reported above I had a wrong permissions interface which was producing a STATICCALL, leading to the proper error that I have reported. I have recompiled with the right interface and everything works like a charm.","username":"nikolay","ts":"2021-04-01T22:29:42.732Z"}
{"msg":"ah great @nikolay","username":"silasdavis","ts":"2021-04-06T16:09:28.567Z"}
{"msg":"@betbeb.com I'd like to be nice about this, but that issue is more of a stream-of-conciousness than a bug report. There is neither enough information to understand exactly what you have done or any reproduction. For interactive debugging sessions chat is a much better option but bear in mind we all have full-time jobs and limited times so you really need to isolate things better if we are going to be able to help.\n\nIdeally provide a test case as part of working project that can be run with a single command, say what you expected, say what you got, explain why this is likely to be a problem with Burrow.\n\nI can see it would be useful if we had a test case/example running against metamask, if this is something you would like to contribute then that would be great. Perhaps you could distil what you are trying to do into a minimal node js app against metamask that I could run. The easier that is for me to convert to example code to help others the more likely I am to allocate time to it.\n\nAlso please do not email me directly personally when making issues - I am aware of issues and look at them when I have time.","username":"silasdavis","ts":"2021-04-06T16:18:43.528Z"}
{"msg":"Has left the channel.","username":"VijayMichalik","ts":"2021-04-06T17:39:47.527Z","type":"ul"}
{"msg":"Thank you for your reply. I mainly want to know how burrow can use Web3 to interact with contracts or transfer money\nAt present, my instance test query is OK, but the signature transaction can't be carried out, so I'm worried. Is there any interactive application","username":"betbeb.com","ts":"2021-04-07T02:14:49.376Z"}
{"msg":"Has left the channel.","username":"nkl199","ts":"2021-04-08T16:18:29.348Z","type":"ul"}
{"msg":"hey there! I'm playing with burrow for the first time and I have some doubts. I'm unable to run \"burrow explore blocks\". I get the following error:\n\n`could not create BlockExplorer: %!w(*fmt.wrapError=&{could not create BlockExplorer: failed to initialize database: resource temporarily unavailable 0xc0012389a0})`\n\nFrom what I could understand from the docs and code, burrow will get block data from tmdb. It seems that the default tmdb backend in my system is not available for some reason, but I can't find where and how to control my default backend db or how to debug this further. Could someone guide me? Tks a lot!!","username":"ivarec","ts":"2021-04-10T17:53:38.414Z"}
{"msg":"ah, it must be some kind of lock from burrow start: if I shutdown burrow's server and run `burrow explore blocks`, it works - could someone provide some details about burrow <-> tmdb relationship?","username":"ivarec","ts":"2021-04-10T19:05:23.819Z"}
{"msg":"Has joined the channel.","username":"jscode017","ts":"2021-04-27T14:23:47.149Z","type":"uj"}
{"msg":"Has joined the channel.","username":"charith1994","ts":"2021-05-15T17:03:41.719Z","type":"uj"}
{"msg":"Hi does anyone has experience of using typescript and library dockerode to set a up running burrow container?","username":"jscode017","ts":"2021-05-19T09:31:31.285Z"}
{"msg":"Has joined the channel.","username":"PixieKing","ts":"2021-05-19T22:57:43.517Z","type":"uj"}
{"msg":"Hi all. Apologies for using this channel to find prospective talent. I am the founder of Damascus Mile, and am looking out for folk who might have an interest in joining our team, later on in July, to help us build out a logistics platform using Burrow. It includes building a module for integrating Galileo satellite constellation GNSS signals into the blockchain records for a proof-of-location. We're funded by UK Cabinet Office. I've discussed the project with Silas, who has provided further validation of our choice of HL Project. See video that explains what we're up to: https://youtu.be/siBFd0cORwo  Please PM me if you can help.","username":"PixieKing","ts":"2021-05-19T22:57:43.908Z"}
{"msg":"@PixieKing you are welcome to ask here, but you might also want to post a job listing here: https://www.hyperledger.org/about/jobs/submit-job","username":"silasdavis","ts":"2021-05-21T11:40:26.852Z"}
{"msg":"Has left the channel.","username":"pritam_01","ts":"2021-05-24T03:31:29.870Z","type":"ul"}
{"msg":"Has left the channel.","username":"gut","ts":"2021-05-24T06:31:51.805Z","type":"ul"}
{"msg":"Has joined the channel.","username":"rafik_naccache","ts":"2021-06-06T11:11:00.924Z","type":"uj"}
{"msg":"Hello guys, I am a noob but I am willing to implement burrow as a wallets platform for a huge marketplace here in Tunisia","username":"rafik_naccache","ts":"2021-06-06T11:11:01.496Z"}
{"msg":"Though My question is simple:","username":"rafik_naccache","ts":"2021-06-06T11:11:06.712Z"}
{"msg":"To access to a burrow env through web3 from a metamask client, I can't manage to find the chain ID","username":"rafik_naccache","ts":"2021-06-06T11:11:34.788Z"}
{"msg":"although I queried the info interface...","username":"rafik_naccache","ts":"2021-06-06T11:11:47.196Z"}
{"msg":"How can I set it or check for it ?","username":"rafik_naccache","ts":"2021-06-06T11:11:54.196Z"}
{"msg":"thanks :)","username":"rafik_naccache","ts":"2021-06-06T11:11:55.652Z"}
{"msg":"Has joined the channel.","username":"iamsdas","ts":"2021-06-09T20:01:15.858Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rakagunarto","ts":"2021-06-11T14:52:15.903Z","type":"uj"}
{"msg":"Anyone here on?","username":"rakagunarto","ts":"2021-06-11T14:52:16.282Z"}
{"msg":"I've got a few questions about accounts on burrow","username":"rakagunarto","ts":"2021-06-11T14:52:25.676Z"}
{"msg":"Sure, go ahead","username":"seanyoung","ts":"2021-06-11T16:50:13.050Z"}
{"msg":"Has joined the channel.","username":"hackerunet","ts":"2021-07-17T01:57:44.635Z","type":"uj"}
{"msg":"I have a huge amount of questions regarding burrow solutions and its capabilities to provide smart contracts for a public voting system with smart contracts gobernability","username":"hackerunet","ts":"2021-07-17T01:57:45.179Z"}
{"msg":"1) Is possible to integrate burrow with indy decentralized identification blockchain?\n2) Is burrow the right tool to create a voting system that uses no gas cost at all?\n3) Can a smart contract be designed to allow a user that has an identification record in indi blockchain to execute certain smart contract?\n4) Can I assign execution permissions to an identities hosted in indi, to execute certain smart contract?","username":"hackerunet","ts":"2021-07-17T02:01:27.408Z"}
{"msg":"Am i making non sense questions at all and need to study a lot more?","username":"hackerunet","ts":"2021-07-17T02:02:20.341Z"}
{"msg":"is this chat alive?","username":"hackerunet","ts":"2021-07-17T13:46:08.727Z"}
{"msg":"@hackerunet @silasdavis is the one the answer that","username":"seanyoung","ts":"2021-07-18T09:36:16.115Z"}
{"msg":"@hackerunet @silasdavis is the one that can answer that","username":"seanyoung","ts":"2021-07-18T09:36:16.115Z"}
{"msg":"@silasdavis I would appreciate your help :)","username":"hackerunet","ts":"2021-07-18T18:26:13.817Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/burrow?msg=J7ox6YZqFWqs6MELB) 1) It depends what you mean by integrate. You can use Decentralised Identifiers (DIDs) in smart contracts the same way you could use them in any other software. Take a look at: https://github.com/uport-project/ethr-did-registry/blob/develop/contracts/EthereumDIDRegistry.sol which is not Indy but implements a registry in solidity, resolver: https://github.com/decentralized-identity/ethr-did-resolver\n\n2) We currently do not charge gas (though we do set a limit to bound computation) so yes, but typically people are worried about gas on Ethereum because it costs real money. You can distributed tokens/charges as you see fit on a Burrow network, so there needn't be any practical scarcity if you prefer\n\n3) A smart contract cannot itself make an 'external call' to another services, whether that is an API or another blockchain. You can certainly integrate them either with some middleware running as a service or via a client/user-agent that talks to both Burrow and an Indy chain. This would be the case with most (all?) other chains though.\n\n4) Again I think the answer is 'yes' but I wonder from your questions if you are asking for some specific support of Indy in Burrow - there is no specific support, but our ed25519 keys that sign transactions are naturally DIDs so there should be a good level of inherent compatibility with Indy's identity model and Burrow accounts - which are the same concept as Ethereum accounts.","username":"silasdavis","ts":"2021-07-19T07:42:48.247Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=J7ox6YZqFWqs6MELB","url":"https://chat.hyperledger.org/channel/burrow?msg=J7ox6YZqFWqs6MELB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"wow @silasdavis amazing... is really everything i was looking for. may thanks... I'll study a bit more from this point so I first design the general architecture and then, maybe I'll make some other questions. thanks a lot @seanyoung for pointing to  the right direction.","username":"hackerunet","ts":"2021-07-19T13:25:48.624Z"}
{"msg":"wow @silasdavis amazing... is really everything i was looking for. many thanks... I'll study a bit more from this point so I first design the general architecture and then, maybe I'll make some other questions. thanks a lot @seanyoung for pointing to  the right direction.","username":"hackerunet","ts":"2021-07-19T13:25:48.624Z"}
{"msg":"@silasdavis about the 3th question, I'm worried about the legitymation of the operations, the blockchain is public, the smart contracts also are,. but not sure if you can safely store data without being compromized, let's say, I create another operation in the blockchain that indicates an external service that needs to validate this operation in order to run itself, like an observable of blockchain transactions, so, if a different kind of transaction is created it means it was validated by all nodes so, the other program is sure it has to run and no one else forced the operation to run... maybe that way we can make sure a 3rth party service is running due to a legitimate blockchain transaction.","username":"hackerunet","ts":"2021-07-19T13:39:38.277Z"}
{"msg":"middlewares, I think is not the right approach because I will still need to validate the authenticity of the requester which has to be the blockchain itself.","username":"hackerunet","ts":"2021-07-19T13:40:30.103Z"}
{"msg":"Has joined the channel.","username":"ApoorvSingal","ts":"2021-08-15T17:35:01.678Z","type":"uj"}
{"msg":"Hii! I'm new to burrow. I was working with burrow.js but the examples in the documentation don't seem to work. The methods in `IQueryClient` and `IQueryClient` take a class parameter as `request` but the constructors aren't exported at all and apparently there's no way to initialize request objects to pass to those methods as far as I have understood so far. Is there anything I am missing here? Really appreciate some help, thanks!","username":"ApoorvSingal","ts":"2021-08-15T17:35:03.396Z"}
{"msg":"Hii! I'm new to burrow. I was working with burrow.js but the examples in the documentation don't seem to work. The methods in `IQueryClient` and `IQueryClient` take a class instance parameter as `request` but the constructors aren't exported at all and apparently there's no way to initialize request objects to pass to those methods as far as I have understood so far. Is there anything I am missing here? Really appreciate some help, thanks!","username":"ApoorvSingal","ts":"2021-08-15T17:35:03.396Z"}
{"msg":"@ApoorvSingal if you take a look here: https://github.com/hyperledger/burrow/blob/6920af567489843bef4f515b126271915af2810c/js/src/client.ts#L116","username":"silasdavis","ts":"2021-08-26T15:42:23.726Z"}
{"msg":"you can see a canonical use of the QueryClient","username":"silasdavis","ts":"2021-08-26T15:42:38.348Z"}
{"msg":"the parameters are little GRPC generated objects, like `StatusParam()`","username":"silasdavis","ts":"2021-08-26T15:43:03.300Z"}
{"msg":"The way to get hold of them is to import them from the proto package in the standard distribution (of burrow.js)  instantiate an instance with `new`","username":"silasdavis","ts":"2021-08-26T15:43:45.355Z"}
{"msg":"does that help?","username":"silasdavis","ts":"2021-08-26T15:43:49.099Z"}
{"msg":"Has joined the channel.","username":"sashankh","ts":"2021-08-27T19:01:37.390Z","type":"uj"}
{"msg":"Has joined the channel.","username":"igorkrupczynski","ts":"2021-09-16T10:05:20.817Z","type":"uj"}
{"msg":"@silasdavis  Can secp256k1 reside alongside ed25519 on the same network? if yes, then can they participate in one smart contract, say ERC20 token transfer? Thanks in advance.","username":"AshishBanerjee","ts":"2021-09-21T13:31:03.050Z"}
{"msg":"Has joined the channel.","username":"SamKrew","ts":"2021-09-22T18:13:45.870Z","type":"uj"}
{"msg":"Hello! Is there any way to automatic create accounts with some default permissions on web3 call?\nRight now i have errors like `Error 23: invalid address: CallTx to an address (44691B39D1A75DC4E0A0346CBB15E310E6ED1E86) that does not exist`","username":"SamKrew","ts":"2021-09-22T18:13:46.505Z"}
{"msg":"Has left the channel.","username":"conanoc","ts":"2021-10-20T10:41:18.554Z","type":"ul"}
{"msg":"Hello Marmots.  Do any of you have strong opinions on the chat platform Hyperledger uses?  The TSC is re-examining the chat platform policy and is looking at issues reflected by this questionnaire - https://wiki.hyperledger.org/display/TF/Community+Chat+Interview+Questions.","username":"shemnon","ts":"2021-12-08T17:29:39.222Z"}
{"msg":"It would be great to have your opinion represented!","username":"shemnon","ts":"2021-12-08T17:30:10.401Z"}
{"msg":"One more thing: the TSC quarterly report is many weeks late. Are any maintainers working on it?","username":"shemnon","ts":"2021-12-08T17:31:30.654Z"}
{"msg":"Has joined the channel.","username":"SeanBohan","ts":"2021-12-17T19:58:13.174Z","type":"uj"}
{"msg":"Has joined the channel.","username":"FabienFF","ts":"2021-12-20T18:38:39.774Z","type":"uj"}
{"msg":"Hello, did someone used the docker image of burrow and managed to connect Metamask to it ? I'm trying to use the docker image and deploy some contracts on it but RPC endpoint 127.0.0.1:26660 isn't recognize by metamask...","username":"FabienFF","ts":"2021-12-20T18:38:40.106Z"}
{"msg":"Hello,\nI saw status of Burrow that it is dormant (https://wiki.hyperledger.org/display/burrow/Hyperledger+Burrow), so what would be future of the project? Will the development stop, or it is temporally?","username":"baziorek","ts":"2022-01-10T12:53:06.355Z"}
{"msg":"Has joined the channel.","username":"bjwswangmail","ts":"2022-02-08T03:32:45.960Z","type":"uj"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:04.060Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:04.087Z","type":"room_changed_description"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:04.095Z","type":"room_changed_announcement"}
