{"msg":"Discuss implementation details of Hyperledger Caliper","username":"tkuhrt","ts":"2018-04-18T16:45:02.569Z","type":"room_changed_topic"}
{"msg":"Used for contributors of Hyperledger Caliper to discuss implementation details","username":"tkuhrt","ts":"2018-04-18T16:45:02.655Z","type":"room_changed_description"}
{"msg":"Has joined the channel.","username":"klenik","ts":"2018-04-18T18:56:21.650Z","type":"uj"}
{"msg":"So as the first topic of the channel (hopefully others will also join soon), I would suggest to use the Common Connection Profile feature of the Fabric Node SDK (1.1.0).\nThis would replace a LOT of code that currently assembles the object graphs needed to submit transactions, join channel, etc.\nOpinions? ","username":"klenik","ts":"2018-04-18T19:22:20.944Z"}
{"msg":"Has joined the channel.","username":"wangdong","ts":"2018-04-19T03:57:24.300Z","type":"uj"}
{"msg":"yes","username":"wangdong","ts":"2018-04-19T03:58:07.142Z"}
{"msg":"agree","username":"wangdong","ts":"2018-04-19T03:58:12.540Z"}
{"msg":"And I wonder if we can add some debug info?","username":"wangdong","ts":"2018-04-19T03:58:39.964Z"}
{"msg":"As the framework grows, it will be harder and harder to debug the issue","username":"wangdong","ts":"2018-04-19T03:59:05.251Z"}
{"msg":"Has joined the channel.","username":"nkl199","ts":"2018-04-19T08:21:35.579Z","type":"uj"}
{"msg":"+1 for common connection profile. The Composer plugin, which is targeting Fabric, relies on the existence of that. The plugin also uses docker exec commands to create the Fabric configuration (create/join channels etc) which was done to remove any \"housekeeping\" within the target platform creation side, rather than using e2e code to perform the same. Might be worth considering if the pure Fabric tests could do similar, as it would remove a large amount of code. This would be important moving forward, where there are likely to multiple Fabric versions with breaking API changes to contend with.","username":"nkl199","ts":"2018-04-19T08:29:31.483Z"}
{"msg":"wow, I've never thought of delegating the \"init\" phase to the actual deployed Fabric binaries, nice","username":"klenik","ts":"2018-04-19T13:08:59.649Z"}
{"msg":"One remark: if I parsed your code correctly, it can execute the commands only in locally running docker containers (with ID of `hostname`)","username":"klenik","ts":"2018-04-19T13:11:11.099Z"}
{"msg":"to execute the commands on remote containers, you also have to specify `-H <host_address>` (and of course properly set up the remote docker daemon, but that's not the clients problem)","username":"klenik","ts":"2018-04-19T13:12:39.406Z"}
{"msg":"and also use the public address of the orderer in the command","username":"klenik","ts":"2018-04-19T13:21:20.417Z"}
{"msg":":thinking:  ... yup! Not tried executing the commands on remote containers ... i feel an experiment coming up :D","username":"nkl199","ts":"2018-04-19T14:21:51.131Z"}
{"msg":"yeah, there are some scenarios to consider :)\n- Fabric components are running in remote docker containers: setting up remote docker daemon, configuring secure communication\n- Fabric components are running in remote VMs directly: using remote SSH commands, enabling SSH on remote VM, using SSH key(s) on client side\n\nmaybe the SDK is the more secure way to go right now, but we definitely need to consider the above scenarios, especially for testing purposes during CI :)","username":"klenik","ts":"2018-04-19T14:41:01.200Z"}
{"msg":"Has joined the channel.","username":"JayJong","ts":"2018-04-23T09:01:58.670Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Haojun","ts":"2018-04-24T08:12:37.266Z","type":"uj"}
{"msg":"+1 for common connection profile. I've recreate an issue on github to record this idea. ","username":"Haojun","ts":"2018-04-24T08:30:46.606Z"}
{"msg":"@klenik  I think cello is woking on the blockchain management/operation, although I haven't studied it yet","username":"Haojun","ts":"2018-04-24T08:34:35.900Z"}
{"msg":"Great to have this new channel to discuss Caliper here.  Unfortunately, due to some personal issues, I can't put much time in this project recently. So sorry for the possible late reply","username":"Haojun","ts":"2018-04-24T08:48:41.126Z"}
{"msg":"@Haojun I've looked into cello a bit, it's a promising provisioning tool. But it's still not clear to me what kind of tests we will need:\n1) There are some components that can be unit tested: rate controllers, Tx result processing (report generation), steps taken by the workflow based on the config file\n2) The interesting/challenging area is the integration testing. The easy option for basic e2e benchmark scenarios is a local docker network. But the zookeeper client scenarios don't really fit into this \"local approach\"\n3) Finally, the boogeyman of testing, performance testing. There was some chatter in the PSWG about a Linux Foundation cluster for the large scale testing of Hyperledger projects. Do you know anything about this?","username":"klenik","ts":"2018-04-24T10:00:41.344Z"}
{"msg":"@Haojun @nkl199 have you ever run into the issue #43? I noticed the problem a while ago, but I could only now formulate a hypothesis :thinking:","username":"klenik","ts":"2018-04-25T22:44:18.546Z"}
{"msg":"@klenik - not to my knowledge, but I will try to investigate your scenario to see if I can replicate it","username":"nkl199","ts":"2018-04-26T10:08:27.677Z"}
{"msg":"@klenik It is caused by a bug in runDuration, and I've submitted a [PR](https://github.com/hyperledger/caliper/pull/50) to fix it ","username":"Haojun","ts":"2018-04-28T03:33:11.393Z"}
{"msg":"@klenik It was caused by a bug of runDuration(), and I've submitted a [PR#50](https://github.com/hyperledger/caliper/pull/50) to fix it ","username":"Haojun","ts":"2018-04-28T03:33:11.393Z"}
{"msg":"Has joined the channel.","username":"mwagner","ts":"2018-05-01T13:28:33.041Z","type":"uj"}
{"msg":"Should we now be considering publishing the src to npm? This would be pretty cool for anyone wanting to pull it as a dependancy and run tests instead of cloning the entire repository ... ","username":"nkl199","ts":"2018-05-01T15:37:40.331Z"}
{"msg":"Has joined the channel.","username":"Ryan2","ts":"2018-05-02T12:29:50.718Z","type":"uj"}
{"msg":"@nkl199 There are some important PRs for iroha as well as eslint compatibility. So I'd like to finish them before publishing the code. Reasonable?","username":"Haojun","ts":"2018-05-03T02:42:43.077Z"}
{"msg":"@Haojun yh - for sure. As you mention, I think there are several items that need to be sequenced. It would be great to get all the lint checking in as well as any key updates before the travis build is pulled and enabled. The publishing to npm, whilst nice, can be added to the Travis build at a later stage once the basic regression checks are enabled. I've noticed that there are benchmarks for sawtooth and iroha, so I will add those in as Travis build items too ... then it 'should' be a case of adding a licence checker and extending unit tests.","username":"nkl199","ts":"2018-05-03T08:33:16.900Z"}
{"msg":"I'm looking at the current benchmark tests, with a mind to run each available benchmark in the Travis build, I would like to split each benchmark 'type' (fabric/composer/iroha/sawtooth) into separate folders. This will:\n1) Make it very clear to a user where each benchmark example resides\n2) Let us use the existing test.js file to run each benchmark in an automated framework\nSo the question is ... are there any objections to this?\nI am aware that the linting edits will also need to be applied to the newly located files... I've seen that there is a PR with linting fixes for drm/simple .. so I will wait for that PR to be merged before moving on with this","username":"nkl199","ts":"2018-05-03T09:05:30.711Z"}
{"msg":"I'll extend my PR with Fabric linting fixes in an hour. @nkl199 if you restructure the benchmark folders, could you make a separate go and node subfolder for Fabric? :)","username":"klenik","ts":"2018-05-03T10:08:25.615Z"}
{"msg":"@klenik sure :thumbsup: ","username":"nkl199","ts":"2018-05-03T10:08:51.375Z"}
{"msg":"Has joined the channel.","username":"tungdt_socoboy","ts":"2018-05-05T11:40:30.433Z","type":"uj"}
{"msg":"@nkl199 What's the meaning of 'split each benchmark type into separate folders'? Since a benchmark such as simple can run either under fabric or sawtooth or iroha......","username":"Haojun","ts":"2018-05-07T09:02:16.842Z"}
{"msg":"@nkl199 +1 for the separating type. It will be more clearer.","username":"wangdong","ts":"2018-05-07T09:09:01.295Z"}
{"msg":"And I got one issue. I wonder when you update, would you please also give your patch here so that more people can invole and maybe some more discuss?","username":"wangdong","ts":"2018-05-07T09:17:19.683Z"}
{"msg":"Good point that the benchmarks have some platform independent parts. Something like the following hierarchy could handle this (very PoC):\n`\nsimple/\n├── platform independent files (e.g. callback module)\n├── platform1 (e.g. fabric)/\n│   ├── platform specific, but version independent files (e.g. network config file)\n│   ├── v1.0 (or any sub ID)\n│   │   └── version specific files (e.g. chaincode without CID and ABAC)\n│   └── v1.1\n│       └── version specific files (e.g. chaincode with CID and ABAC or Nodejs chaincode)\n├── platform2/\n│   └── ...\n`","username":"klenik","ts":"2018-05-07T13:25:41.007Z"}
{"msg":"Good point that the benchmarks have some platform independent parts. Something like the following hierarchy could handle this (very PoC):\n```\nsimple/\n├── platform independent files (e.g. callback module)\n├── platform1 (e.g. fabric)/\n│   ├── platform specific, but version independent files (e.g. network config file)\n│   ├── v1.0 (or any sub ID)\n│   │   └── version specific files (e.g. chaincode without CID and ABAC)\n│   └── v1.1\n│       └── version specific files (e.g. chaincode with CID and ABAC or Nodejs chaincode)\n├── platform2/\n│   └── ...\n```","username":"klenik","ts":"2018-05-07T13:25:41.007Z"}
{"msg":"Good point that the benchmarks have some platform independent parts. Something like the following hierarchy could handle this (very PoC):\n```simple/\n├── platform independent files (e.g. callback module)\n├── platform1 (e.g. fabric)/\n│   ├── platform specific, but version independent files (e.g. network config file)\n│   ├── v1.0 (or any sub ID)\n│   │   └── version specific files (e.g. chaincode without CID and ABAC)\n│   └── v1.1\n│       └── version specific files (e.g. chaincode with CID and ABAC or Nodejs chaincode)\n├── platform2/\n│   └── ...\n```","username":"klenik","ts":"2018-05-07T13:25:41.007Z"}
{"msg":"Good point that the benchmarks have some platform independent parts. Something like the following hierarchy could handle this (very PoC):\n```simple/\n├── platform independent files (e.g. callback module)\n├── platform1 (e.g. fabric)/\n│   ├── platform specific, but version independent files (e.g. network config file)\n│   ├── v1.0 (or any sub ID)\n│   │   └── version specific files (e.g. chaincode without CID and ABAC)\n│   └── v1.1\n│       └── version specific files (e.g. chaincode with CID and ABAC or Nodejs chaincode)\n├── platform2/\n│   └── ...\n```","username":"klenik","ts":"2018-05-07T13:25:41.007Z"}
{"msg":"OK I see, that looks clearer. BTW, we can also remove test reports to a report folder.","username":"Haojun","ts":"2018-05-08T00:57:53.789Z"}
{"msg":"Hi, can anyone help to check [running composer test with multiple clients](https://github.com/hyperledger/caliper/pull/59)? I was always stuck at 'starting network', may be due to network issue behind the proxy.","username":"Haojun","ts":"2018-05-08T01:03:46.132Z"}
{"msg":"Hi, can anyone help check [running composer test with multiple clients](https://github.com/hyperledger/caliper/pull/59)? I was always stuck at 'starting network', may be due to network issue behind the proxy.","username":"Haojun","ts":"2018-05-08T01:03:46.132Z"}
{"msg":"Hi, can anyone help check [running composer test with multiple clients](https://github.com/hyperledger/caliper/pull/59)? I was always stuck at 'starting network' step, may be due to network issue behind the proxy.","username":"Haojun","ts":"2018-05-08T01:03:46.132Z"}
{"msg":"I'd help but i submitted it :joy: ","username":"nkl199","ts":"2018-05-08T07:50:53.079Z"}
{"msg":"with regards to reviews - I'm more than happy to assist with any pending PR reviews :thumbsup: ","username":"nkl199","ts":"2018-05-08T09:16:24.264Z"}
{"msg":"Based on Issue 39, it is not trivial to run Caliper in debug mode (even when the inspector conflict will be fixed), since usually the IDEs will only attach to the main process, and not to the forked children. It would be useful to provide an entry point directly to the local client implementation that can be used during development to run and debug a single client only, since most of the complex code run inside the children processes anyway. Opinions?","username":"klenik","ts":"2018-05-10T13:38:31.275Z"}
{"msg":"Has joined the channel.","username":"gut","ts":"2018-05-16T13:26:33.821Z","type":"uj"}
{"msg":"Has joined the channel.","username":"arthurmsouza","ts":"2018-05-17T13:20:55.019Z","type":"uj"}
{"msg":"Has left the channel.","username":"gut","ts":"2018-05-18T10:38:25.407Z","type":"ul"}
{"msg":"Has joined the channel.","username":"robwahl","ts":"2018-05-19T16:08:09.733Z","type":"uj"}
{"msg":"Hi @nkl199 @klenik and others, please take a look at this [PR#71](https://github.com/hyperledger/caliper/pull/71#). The PR is for a smallbank benchmark with uses the concept of *batch* from Sawtooth. I'd like to discuss how to handle it with Fabric, since as I known Fabric does not support batch now.","username":"Haojun","ts":"2018-05-22T08:12:46.811Z"}
{"msg":"The ","username":"nkl199","ts":"2018-05-22T09:43:12.641Z"}
{"msg":"Composer cheats a little on this - we have API methods for addAll() and updateAll(), which loop on a single add operation within fabric ","username":"nkl199","ts":"2018-05-22T09:43:12.641Z"}
{"msg":"I'm not familiar with the Sawtooth batch concept, so correct me if I'm wrong. Since Fabric doesn't support batches, I think there are 3 options:\n1) Push batching to chaincode level: this could ensure atomic batches, but complicates the chaincode (but doesn't affect Caliper).\n2) Implement batching on client level: atomic batches are problematic ( @nkl199  is this handled by Composer?), the client simulates the batch with multiple transaction invokes (but doesn't affect Caliper).\n3) Caliper provides a syntactic sugar for Fabric batches, which is essentially the same as 2), but inside Caliper.\n\nSince 3) also requires that the client submits multiple transaction parameters, you can't really make batches transparent to the client. So why not implement it all on client callback side? I think a benchmark artifact (client module or chaincode) should clearly reflect, that batch simulation is needed for the use case, unless supported by the platform. So I support options 1) and 2). Opinions?","username":"klenik","ts":"2018-05-22T10:46:21.241Z"}
{"msg":"I would also be in favour of above options 1 or 2, with a strong preference to option 1. I don't think that Caliper should be responsible for adding missing API methods of a target blockchain platform. Not least because I would hope that someone using Caliper will be using their own chaincode that operates 'out of the box' on a target blockchain platform. @klenik to answer your question, Composer will use the Fabric API to perform multiple `shim.putState()` calls on a passed collection","username":"nkl199","ts":"2018-05-22T12:25:02.069Z"}
{"msg":"Option 2/3 is easier to implement. The only question is should we force the invoking chain, which means the later transaction should not be submitted until it's previous txn has been committed on the ledger? Regarding option 1, the chaincode would be complicated in order to handle a series of operations on the same account . And with option 2, would a batch of txns be counted as multiple txns or only one transaction? The counting method should be the same for different blockchain systems.","username":"Haojun","ts":"2018-05-23T01:10:40.558Z"}
{"msg":"Option 2/3 is easier to implement (I'm not sure what's the difference of 2 and 3?). The only question is should we force the invoking chain, which means the later transaction should not be submitted until it's previous txn has been committed on the ledger? Regarding option 1, the chaincode would be complicated in order to handle a series of operations on the same account . And with option 2, would a batch of txns be counted as multiple txns or only one transaction? The counting method should be the same for different blockchain systems.","username":"Haojun","ts":"2018-05-23T01:10:40.558Z"}
{"msg":"Option 2/3 is easier to implement (I'm not sure what's the difference of 2 and 3?). The only question is should we force the invoking chain for txns in a batch, which means the later transaction should not be submitted until it's previous txn has been committed on the ledger? Regarding option 1, the chaincode would be complicated in order to handle a series of operations on the same account . And with option 2, would a batch of txns be counted as multiple txns or only one transaction? The counting method should be the same for different blockchain systems.","username":"Haojun","ts":"2018-05-23T01:10:40.558Z"}
{"msg":"Option 2/3 is easier to implement (I'm not sure what's the difference of 2 and 3?). The only question is should we force the invoking chain for txns in a batch, which means the later transaction should not be submitted until it's previous txn has been committed on the ledger? Regarding option 1, the chaincode would be complicated in order to handle a series of operations on the same state . And with option 2, would a batch of txns be counted as multiple txns or only one transaction? The counting method should be the same for different blockchain systems.","username":"Haojun","ts":"2018-05-23T01:10:40.558Z"}
{"msg":"@nkl199 If I understand correctly, since endorsor does not actually change the ledger but only simulate running the cc, you can not get a state which has just been putted within a single execution of chaincode, right? For example, in a single execution, the operation as putState(account)->getState(account)->change the account->putState(account) is illegal?","username":"Haojun","ts":"2018-05-23T01:20:18.599Z"}
{"msg":"@nkl199 If I understand correctly, since endorsor does not actually change the ledger but only simulate running the cc, you can not get a state which has just been putted within a single execution of chaincode, right? For example, in a single execution, the operation as putState(account)->getState(account)->change the balance of the account->putState(account) is illegal?","username":"Haojun","ts":"2018-05-23T01:20:18.599Z"}
{"msg":"@nkl199 If I understand correctly, since endorsor does not actually change the ledger but only simulate running the cc, you can not get a state which has just been putted within a single execution of chaincode, right? For example, during a single execution, the operation as putState(account)->getState(account)->change the balance of the account->putState(account) is illegal?","username":"Haojun","ts":"2018-05-23T01:20:18.599Z"}
{"msg":"@nkl199 If I understand correctly, since endorsor does not actually change the ledger but only simulate running the cc, you can not get a state which has just been putted within a single execution of chaincode, right? For example, during a single execution, the operation as 'putState(account)->getState(account)->change the balance of the account->putState(account)' is illegal?","username":"Haojun","ts":"2018-05-23T01:20:18.599Z"}
{"msg":"Has joined the channel.","username":"rkrish82","ts":"2018-05-23T04:12:36.947Z","type":"uj"}
{"msg":"@Haojun  In Fabric there is a significant amount of delay between endorsement and committing transaction, that is causing failures in transactions. Higher the tps, higher the error count.","username":"rkrish82","ts":"2018-05-23T04:28:42.698Z"}
{"msg":"Sawtooth handles batch as atomic operations means all transactions committed if all are valid and none of them committed if one o them is wrong.","username":"rkrish82","ts":"2018-05-23T04:31:00.678Z"}
{"msg":"@Haojun Regarding you second question: read your own write is not advised (I read this somewhere in the docs about read-write semantics). Although I don't see the point of reading a value you already have.\nBatch topic: option 2) means that the batch invoke is implemented in the callback module (invokes in a loop), and not in the Caliper code-base. The callback module returns the tx info gathered by the invoke. It could return an array of results, and the Tx counter could be updated accordingly. The logic of multiple invokes depends on the callback module: wait for tx1 result before invoking tx2, or invoke them immediately. However, these choices could interfere with the rate controller. It would be nice to specify the exact workload profile for this benchmark, and see whether it can be integrated without changing the caliper code-base. (implementing a custom rate controller would be acceptable, as the load profile is strongly connected to the benchmark definition)","username":"klenik","ts":"2018-05-23T08:55:19.196Z"}
{"msg":"@klenik I prefer to implement the batch invoking in Caliper. If you do this on callback module, you need to write different implementation for different blockchain system. For example, it's unnecessary for Sawtooth to invoke multiple times for a batch. Now the invokesmartcontract() has a parameter which is a list of transaction parameters for multiple transactions.","username":"Haojun","ts":"2018-05-24T02:23:30.517Z"}
{"msg":"@klenik I prefer to simulate the batch invoking in Caliper. If you do this on callback module, you need to write different implementation for different blockchain systems. For example, it's unnecessary for Sawtooth to invoke multiple times for a batch. The latest version of invokesmartcontract() has a parameter which is a list of transaction parameters for multiple transactions, and Fabric adaptor use this to submit multiple txns.","username":"Haojun","ts":"2018-05-24T02:23:30.517Z"}
{"msg":"@klenik I prefer to simulate the batch invoking in Caliper. If you do this on callback module, you need to write different implementation for different blockchain systems. For example, it's unnecessary for Sawtooth to invoke multiple times for a batch. The latest version of invokesmartcontract() has a parameter which is a list of transaction parameters for multiple transactions, and Fabric adaptor use this to submit multiple txns.","username":"Haojun","ts":"2018-05-24T02:23:30.517Z"}
{"msg":"@rkrish82 Correct, the question is should we simulate the atomicity as much as possible without changing Fabric SDK.","username":"Haojun","ts":"2018-05-24T02:37:01.908Z"}
{"msg":"@Haojun In Fabric SDK how do we get the block commit status of the transaction?","username":"rkrish82","ts":"2018-05-24T02:43:55.036Z"}
{"msg":"SDK can register the block event with a peer, so if a new block is committed, the peer will send a notification to SDK. The application can also register txns to watch with SDK.","username":"Haojun","ts":"2018-05-24T02:48:30.284Z"}
{"msg":"Then Application can wait for all create account transactions are committed, later submit other operation transactions","username":"rkrish82","ts":"2018-05-24T02:58:13.410Z"}
{"msg":"@rkrish82 I agree with it, it needs to modify the benchmark. But I'm not sure if intel's guy is happy on that.","username":"Haojun","ts":"2018-05-24T03:06:11.108Z"}
{"msg":"@hau","username":"rkrish82","ts":"2018-05-25T08:05:56.637Z"}
{"msg":"@Haojun Even if we fix create account issue some way, but still there seems to be a problem with Farbic in terms of accuracy/consistency of transaction execution.\nSuppose assume account a1 is created with initial balance 100$ and 2 operations on that account say deposit which adds 50$ to account balance and \nsubmitted at 0sec and it get commuted at 0.5sec. In between another withdraw operation of 50$ comes at 0.2 sec and reads current balance as 100$ because first operations is not committed yet.\nDeposit updates balance as 150 at 0.5sec and withdraw updates balance to 50$ at 0.6sec. Expected balance after execution of 2 operations should be 100$ but we would get 50$ in fabric. Correct me if I am wrong.","username":"rkrish82","ts":"2018-05-25T08:06:26.284Z"}
{"msg":"@rkrish82 In such case, the second txn will fail because of the readset/writeset version control of fabric, a MVCC_READ_CONFLICT will be returned.","username":"Haojun","ts":"2018-05-25T08:14:04.507Z"}
{"msg":"Has joined the channel.","username":"sidkasat","ts":"2018-06-07T03:41:54.688Z","type":"uj"}
{"msg":"@Haojun @tkuhrt There was some chatter about a Linux Foundation backed cluster dedicated to the performance evaluation of Hyperledger projects. Do you know anything about it? Where could I get more information?","username":"klenik","ts":"2018-06-08T09:51:26.904Z"}
{"msg":"Has joined the channel.","username":"richzhao","ts":"2018-06-08T14:39:58.718Z","type":"uj"}
{"msg":"@klenik sorry, i know nothing about it. Is it discussed at PSWG?","username":"Haojun","ts":"2018-06-12T09:19:28.655Z"}
{"msg":"Has joined the channel.","username":"absingh0","ts":"2018-06-14T04:44:07.883Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Katie_Wei","ts":"2018-06-20T18:40:45.786Z","type":"uj"}
{"msg":"@dhuseby @rjones : Any chance you might know something about the cluster for performance evaluation?","username":"tkuhrt","ts":"2018-06-20T20:07:07.070Z"}
{"msg":"Has joined the channel.","username":"dhuseby","ts":"2018-06-20T20:07:07.267Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2018-06-20T20:07:07.352Z","type":"uj"}
{"msg":"The Caliper project update is due for the TSC tomorrow (https://wiki.hyperledger.org/groups/tsc/project-updates/caliper-2018-jun?do=edit). Will someone be able to represent that?","username":"tkuhrt","ts":"2018-06-20T20:07:36.950Z"}
{"msg":"@tkuhrt no update on cluster AFAIK","username":"rjones","ts":"2018-06-21T03:22:04.767Z"}
{"msg":"Has joined the channel.","username":"vagnerasilva","ts":"2018-07-01T13:04:29.789Z","type":"uj"}
{"msg":"Has joined the channel.","username":"n1zyz","ts":"2018-07-02T12:23:27.487Z","type":"uj"}
{"msg":"Has joined the channel.","username":"DivyaAgrawal","ts":"2018-07-02T14:44:59.935Z","type":"uj"}
{"msg":"Has joined the channel.","username":"panyu2","ts":"2018-07-03T07:47:27.383Z","type":"uj"}
{"msg":"User <em>User_1</em> added by <em>Haojun</em>.","username":"Haojun","ts":"2018-07-03T07:53:59.971Z","type":"au"}
{"msg":"Hi guys, I am sorry to tell that due to internal work transferring, I'll no longer in charge of this project in the future.  My colleagures @panyu 2 and @jiangyaoguo will take over my job. I'll continue to watch this project and hope to still have chance to contribute to it.","username":"Haojun","ts":"2018-07-03T08:00:33.095Z"}
{"msg":"Hi guys, I am sorry to tell that due to internal work transferring, I'll no longer be in charge of this project in the future.  My colleagures @panyu 2 and @jiangyaoguo will take over my job. I'll continue to watch this project and hope to still have chance to contribute to it.","username":"Haojun","ts":"2018-07-03T08:00:33.095Z"}
{"msg":"@Haojun we are sorry to hear that :( and let's hope that your Caliper days are not over :)","username":"klenik","ts":"2018-07-03T08:25:57.869Z"}
{"msg":"@jiangyaoguo @panyu 2 could you share your Github name in case we need to mention you in PRs? ","username":"klenik","ts":"2018-07-03T08:26:51.785Z"}
{"msg":"panyu4 and jiangyaoguo","username":"Haojun","ts":"2018-07-03T08:46:01.093Z"}
{"msg":"Now that Fabric 1.2 is released (and a new release will come every quarter year I think), it's high time to resolve issue #37 (common connection profile) and leave most of the work to the SDK. PR #116 affects the deploy part a little, so it would overlap with this refactor. @jiangyaoguo @panyu 2 when could you review PR116, so I can start working on Issue#37? :)","username":"klenik","ts":"2018-07-06T09:07:38.522Z"}
{"msg":"@klenik We will review PR116 as soon as possible.\n","username":"panyu2","ts":"2018-07-10T05:48:36.444Z"}
{"msg":"Has joined the channel.","username":"hurf","ts":"2018-07-11T07:40:14.764Z","type":"uj"}
{"msg":"Has joined the channel.","username":"niteshsolanki","ts":"2018-07-11T08:49:24.761Z","type":"uj"}
{"msg":"Hi @hurf ","username":"niteshsolanki","ts":"2018-07-11T09:02:12.526Z"}
{"msg":"Hi @Haojun please review PR#124","username":"niteshsolanki","ts":"2018-07-12T06:54:03.651Z"}
{"msg":"Hi @niteshsolanki , thanks for the contribution, it's an interesting idea :grinning:  I've some quick questions and comments, please see github.","username":"Haojun","ts":"2018-07-12T09:25:06.803Z"}
{"msg":"@Haojun thanks for following up. updated the comments","username":"niteshsolanki","ts":"2018-07-12T10:06:26.332Z"}
{"msg":"@Haojun I submitted two (really) small PRs for fixing some small inconveniences. Could you review it please? :)","username":"klenik","ts":"2018-07-12T15:21:17.527Z"}
{"msg":"@klenik done","username":"Haojun","ts":"2018-07-13T01:24:09.488Z"}
{"msg":"@all : 2FA will soon be required across all GitHub orgs. If you do not have 2FA enabled for your account, you will be automatically removed from the Hyperledger org and will need to be re-added. Please check to ensure you have 2FA enabled. https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/","username":"rjones","ts":"2018-07-13T21:55:02.060Z"}
{"msg":"Has joined the channel.","username":"kodonnel","ts":"2018-07-16T15:15:25.606Z","type":"uj"}
{"msg":"Hi, I've just made a minor PR, would be great if I could get a review.  If there is a more appropriate place for me to ask for that please let me know.  PR132","username":"kodonnel","ts":"2018-07-16T15:16:42.405Z"}
{"msg":"looks good, but I'm unable to merge. ","username":"nkl199","ts":"2018-07-17T10:53:37.963Z"}
{"msg":"side note: we *really* should enable/enforce the travis build as part of the PRs now as it is set to run all the required checks on inbound changes, from linting through to e2e perf runs on all frameworks ... this would stop regressions slipping in and more importantly would remove any need for manual checking from us ... this is very important in moving forward ","username":"nkl199","ts":"2018-07-17T10:55:21.934Z"}
{"msg":"Has joined the channel.","username":"arati_baliga","ts":"2018-07-18T12:12:27.761Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=GozzFeXG3hjFNfxDk) @nkl199 nor I obviously.","username":"kodonnel","ts":"2018-07-18T15:05:51.315Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=GozzFeXG3hjFNfxDk","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=GozzFeXG3hjFNfxDk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@Haojun - can you publish a list of contributors who have the ability to merge PRs? Then we chase people on that list rather than going direct to you :thumbsup: ","username":"nkl199","ts":"2018-07-18T15:11:23.619Z"}
{"msg":"Send an email to helpdesk@hyperledger.org and ask who can merge","username":"rjones","ts":"2018-07-18T15:14:45.062Z"}
{"msg":"thanks!","username":"nkl199","ts":"2018-07-18T15:21:28.010Z"}
{"msg":"Has joined the channel.","username":"Hz","ts":"2018-07-19T03:09:23.449Z","type":"uj"}
{"msg":"@nkl199 You can ask panyu4 or jiangyaoguo @github for merging.","username":"Haojun","ts":"2018-07-23T02:55:15.637Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=WrEcjJdHanzQLAxrQ) @nkl199 @jiangyaoguo will work on that recently","username":"Haojun","ts":"2018-07-23T02:55:33.216Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=WrEcjJdHanzQLAxrQ","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=WrEcjJdHanzQLAxrQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Does anybody know how to enable travis for an organisation repo like caliper? Who has the permission to do that?","username":"Haojun","ts":"2018-07-23T07:56:10.736Z"}
{"msg":"@Haojun @jiangyaoguo The travis scripts are already present, the only remaining task is to link the build to the github \"required status\" items for the repository","username":"nkl199","ts":"2018-07-23T08:23:29.909Z"}
{"msg":"OK, but I don't have the permission to set this repo either......","username":"Haojun","ts":"2018-07-23T08:34:54.049Z"}
{"msg":"@Haojun @nkl199 which repo","username":"rjones","ts":"2018-07-23T23:54:04.878Z"}
{"msg":"@Haojun @nkl199 when I look at Caliper repo on github, Travis or Jenkins has never tried to vote on a job","username":"rjones","ts":"2018-07-23T23:55:18.478Z"}
{"msg":"@jwagantall ^^^","username":"rjones","ts":"2018-07-23T23:55:35.050Z"}
{"msg":"Has joined the channel.","username":"jwagantall","ts":"2018-07-23T23:55:35.164Z","type":"uj"}
{"msg":"@rjones, now we check the compatibility of new PR with integrated blockchains as well as the linting compliance manually, and we hope to use travis to automate it.","username":"Haojun","ts":"2018-07-24T10:01:14.781Z"}
{"msg":"Hi all, just a heads up for the inbound fabric-sdk-node (1.3) release. There have been some big (breaking) changes through the event hub mechanism in base fabric, and this has fed up through to the sdk. Consequently, use of the EventHub is essentially deprecated, and 'we' should look to move to the Channel Event Hub implementation instead (also known as the Event delivery service) at points where the previous event hub was used. I would hope that any of the required changes will be made visible in the e2e tests for the fabric sdk, and we can make similar changes in the caliper code base ","username":"nkl199","ts":"2018-07-26T10:05:12.564Z"}
{"msg":"@nkl199 I think the Common Connection Profile will handle this under the hood somehow, or it will be an easy transition. Do you know something about the backward compatibility for Fabric v1.0? Or do we need to use the deprecated eventhub for v1.0?","username":"klenik","ts":"2018-07-26T17:39:08.243Z"}
{"msg":"@stinger112 Can you take a look at the Iroha-related modifications of PR #133? Thank you :)","username":"klenik","ts":"2018-07-26T17:40:38.442Z"}
{"msg":"@stinger112 Can you take a look at the Iroha-related modifications of PR#133? Thank you :)","username":"klenik","ts":"2018-07-26T17:40:38.442Z"}
{"msg":"Has joined the channel.","username":"stinger112","ts":"2018-07-26T17:40:38.696Z","type":"uj"}
{"msg":"@rjones to support travis check as PR requirement, do we need to ask for help from the helpdesk? @jiangyaoguo ","username":"Haojun","ts":"2018-07-27T01:55:50.797Z"}
{"msg":"@Haojun yes, you need to email helpdesk@hyperledger.org","username":"rjones","ts":"2018-07-27T03:51:59.688Z"}
{"msg":"Has joined the channel.","username":"zjubfd","ts":"2018-07-28T10:13:09.310Z","type":"uj"}
{"msg":"Has joined the channel.","username":"abhishek.s","ts":"2018-08-08T16:40:59.627Z","type":"uj"}
{"msg":"so in essence, someone with the correct access needs to flip the switch on the caliper project here: https://travis-ci.org/profile/hyperledger","username":"nkl199","ts":"2018-08-09T17:52:50.022Z"}
{"msg":"since the travis builds are already enabled, it would be prudent to ensure that the builds are passing before the switch is flipped!","username":"nkl199","ts":"2018-08-09T17:53:23.279Z"}
{"msg":"https://travis-ci.org/hyperledger/caliper/builds/414178858","username":"rjones","ts":"2018-08-09T17:56:11.001Z"}
{"msg":"yup, failing as the code coverage is too low in the unit tests .... yikes, yup ... many files have gone into the rate controllers folder that are untested. ","username":"nkl199","ts":"2018-08-09T19:03:26.977Z"}
{"msg":"So the choices here revolve around editing package.json nyc section to either:\n- exclude the rate control section\n- reduce the coverage requirements to the bare minimum of:\n    Statements   : 5.33% ( 13/244 )\n    Branches     : 8.7% ( 8/92 )\n    Functions    : 7.69% ( 3/39 )\n    Lines        : 5.49% ( 13/237 )\n\nThe latter is the best option IMO as it will stop more code going in untested","username":"nkl199","ts":"2018-08-09T19:08:39.767Z"}
{"msg":"@nkl199 next week I'll write explicit tests (not just benchmark configs) for the rate controllers I added. Until then I also support the 2nd option","username":"klenik","ts":"2018-08-09T19:12:05.228Z"}
{"msg":":thumbsup: ","username":"nkl199","ts":"2018-08-09T19:12:24.460Z"}
{"msg":"there's a hideous amount of test effort in there :cry: ","username":"nkl199","ts":"2018-08-09T19:12:55.157Z"}
{"msg":"- i'll submit a PR to drop the coverage","username":"nkl199","ts":"2018-08-09T19:13:49.772Z"}
{"msg":"(travis build currently running in my personal travis builds)","username":"nkl199","ts":"2018-08-09T19:19:30.347Z"}
{"msg":"green and raised PR :thumbsup: ","username":"nkl199","ts":"2018-08-09T19:24:35.134Z"}
{"msg":"","username":"nkl199","ts":"2018-08-09T19:25:13.027Z","attachments":[{"type":"file","title":"Screen Shot 2018-08-09 at 15.24.52.png","title_link":"/file-upload/LEkLMq3sj6beyNse6/Screen%20Shot%202018-08-09%20at%2015.24.52.png","image_url":"/file-upload/LEkLMq3sj6beyNse6/Screen%20Shot%202018-08-09%20at%2015.24.52.png","image_type":"image/png","image_size":204809,"url":"/file-upload/LEkLMq3sj6beyNse6/Screen%20Shot%202018-08-09%20at%2015.24.52.png","remote":false,"fileId":"LEkLMq3sj6beyNse6","fileName":"Screen Shot 2018-08-09 at 15.24.52.png"}]}
{"msg":"@nk1","username":"jiangyaoguo","ts":"2018-08-16T03:05:38.142Z"}
{"msg":"@nk199 what about we close coverage check for now? https://github.com/hyperledger/caliper/pull/158","username":"jiangyaoguo","ts":"2018-08-16T03:06:50.993Z"}
{"msg":"hi, that is entirely the point - all new PRs should come complete with tests","username":"nkl199","ts":"2018-08-20T12:43:32.063Z"}
{"msg":"as an FYI for inbound fabric-sdk-node changes (which caliper relies upon) the EventHub is removed, which is used in the channel join process. I am currenlty making changes on a local branch to make caliper compatible with the unstable fabric sdk (1.3 snapshots)","username":"nkl199","ts":"2018-08-21T15:30:07.127Z"}
{"msg":"Has joined the channel.","username":"karthikmohan91","ts":"2018-08-22T12:15:02.301Z","type":"uj"}
{"msg":"As an update to the above, i have got Caliper working with non-tls fabric 1.3. Due to the difference in the APIs used to work with different levels, i've split the fabric portion into subfolders, with the Fabric interface at the root level folder:\nSRC/Fabric\n-/1.1\n-/1.3\n-fabric.js\nAnd I'm using a 'level' flag when invoking 'main.js' that sets a process variable to decide which code base to use by dynamically changing the imports within fabric.js:\n\n```\nif (process.env.LEVEL){\n    level = '/' + process.env.LEVEL + '/';\n} else {\n    level = '/1.1/';\n}\n\nconst util = require('./' + level + 'util.js');\n``` \n\nI'm going to investigate/expand this a little more, as it would be nice to be able to work with TLS enabled networks too. \n\nInterested on opinions for the code base split method used above","username":"nkl199","ts":"2018-08-30T10:46:42.570Z"}
{"msg":"Also, I am investigating the use of the new `network` api commands in fabric-sdk-node for transaction submission","username":"nkl199","ts":"2018-08-30T10:51:06.139Z"}
{"msg":"@nkl199 can't you access the version of the installed Fabric SDK through its `package.json` file? That way the user doesn't need to explicitly set the `LEVEL` env variable. It would be good to compose a list of changes between the SDK/Fabric versions, both for added features and API changes","username":"klenik","ts":"2018-08-30T11:25:50.453Z"}
{"msg":"good point, it could also form part of the config.json file","username":"nkl199","ts":"2018-08-30T12:02:12.511Z"}
{"msg":"(whilst i'm at it, i'm async/awaiting all the fabric driver code)","username":"nkl199","ts":"2018-08-30T12:30:16.605Z"}
{"msg":"That'a a good idea! (The other parts should be transformed too, the current error messages are horrible :P )","username":"klenik","ts":"2018-08-30T12:31:16.344Z"}
{"msg":":joy: agree! In all of the configuration I am also ripping out the tape.test aspects, as that is not a perf test aspect, but a remnant of the code origins from the node-sdk-e2e tests","username":"nkl199","ts":"2018-08-30T12:49:13.643Z"}
{"msg":"... for the version setting, i'm picking up on the `config.info.version` field, and if not present defaulting to 1.1","username":"nkl199","ts":"2018-08-30T16:13:47.434Z"}
{"msg":"User <em>User_2</em> added by <em>nkl199</em>.","username":"nkl199","ts":"2018-08-31T08:18:58.138Z","type":"au"}
{"msg":"Has joined the channel.","username":"sureshtedla","ts":"2018-08-31T17:34:58.560Z","type":"uj"}
{"msg":"latest update - caliper is now working on fabric 1.3, with the 1.3 client apis, and i have even added the ability to use the new \"invoke\" commands to issue a transaction as a one liner ... which is nice!","username":"nkl199","ts":"2018-09-04T13:09:55.854Z"}
{"msg":"... i'm planning to look into the tls aspects now, then submit a PR","username":"nkl199","ts":"2018-09-04T13:10:38.122Z"}
{"msg":"btw, how is the compatibility with 1.2? :D many questions/errors originate from it (although mainly because they use 1.2 SDK with 1.1 Fabric)","username":"klenik","ts":"2018-09-04T20:21:52.199Z"}
{"msg":"not tried yet to be honest, i can do a sniff test on it tho","username":"nkl199","ts":"2018-09-05T07:30:09.955Z"}
{"msg":"Before the official release we did some tests with 1.2 using caliper, and it worked fine. Although the new features (e.g., private collections) are missing on the caliper side. ","username":"klenik","ts":"2018-09-05T08:49:55.448Z"}
{"msg":"now have tls enabled for fabric ... so getting closer to let people have a look/play ... ","username":"nkl199","ts":"2018-09-06T14:31:26.048Z"}
{"msg":"Has joined the channel.","username":"sgaddam","ts":"2018-09-11T10:32:45.630Z","type":"uj"}
{"msg":"Has joined the channel.","username":"longac","ts":"2018-09-18T02:48:19.776Z","type":"uj"}
{"msg":"Has left the channel.","username":"compleatang","ts":"2018-09-21T17:45:53.096Z","type":"ul"}
{"msg":"There are a fair few PRs pending and it would appear that momentum with Caliper is slowing down. Both @klenik and I would be keen to keep up the development of Caliper, but would need increased authority to do so - at the very least the ability to merge PRs. We should also be looking into having some regular telephone interlocks to chat about what we are working on, thinking about, and general considerations on what could/should be included within Caliper to help usage. Is there anyone here we can talk to with regards to that? ","username":"nkl199","ts":"2018-09-26T08:42:02.103Z"}
{"msg":"@rjones There are a fair few PRs pending and it would appear that momentum with Caliper is slowing down. Both @klenik and I would be keen to keep up the development of Caliper, but would need increased authority to do so - at the very least the ability to merge PRs. We should also be looking into having some regular telephone interlocks to chat about what we are working on, thinking about, and general considerations on what could/should be included within Caliper to help usage. Is there anyone here we can talk to with regards to that? ","username":"nkl199","ts":"2018-09-26T08:42:02.103Z"}
{"msg":"@Haojun @FlyingTiger : It appears that you are the current committers on Caliper. Thoughts on adding @klenik and @nkl199 as additional committers?","username":"tkuhrt","ts":"2018-09-26T15:45:57.875Z"}
{"msg":"Has joined the channel.","username":"FlyingTiger","ts":"2018-09-26T15:45:57.996Z","type":"uj"}
{"msg":"Also, a reminder that the project update for Caliper will be on the schedule for tomorrow's TSC: https://wiki.hyperledger.org/groups/tsc/project-updates/caliper-2018-sep?do=edit","username":"tkuhrt","ts":"2018-09-26T17:20:17.406Z"}
{"msg":"Hi, I was on the call, but appear to have been alone in that regard :( ","username":"nkl199","ts":"2018-09-28T07:59:19.943Z"}
{"msg":"Hi All, Please someone review the PR - https://github.com/hyperledger/caliper/pull/159 and https://github.com/hyperledger/caliper/pull/167","username":"rkrish82","ts":"2018-10-04T04:30:02.818Z"}
{"msg":"the above requires @Haojun or @FlyingTiger ","username":"nkl199","ts":"2018-10-04T07:49:50.033Z"}
{"msg":"We are now working on these PRs. @rkrish82 \n","username":"panyu2","ts":"2018-10-10T00:21:02.591Z"}
{"msg":"Thanks @panyu 2 - noticed that there has been a flurry of activity in the repository - good to see :smile: ","username":"nkl199","ts":"2018-10-10T08:36:47.909Z"}
{"msg":":relaxed:, give us more time, we will make Caliper become  healthier.  \n","username":"panyu2","ts":"2018-10-10T09:48:51.046Z"}
{"msg":"Hi everyone! Since there was some chatter about starting regular Caliper community calls, @nkl199 and I have put together a google docs about the various todos/plans regarding Caliper. The following link is in commenting mode for obvious reasons, but if you like the idea, it can be migrated into Hyperledger hands, like the PSWG docs\nhttps://docs.google.com/document/d/1QQFmuRW4QXk0HCUIw1NoqweNQBnQ4P3eOhAE10m1vng/edit?usp=sharing","username":"klenik","ts":"2018-10-10T09:50:05.024Z"}
{"msg":"Hi everyone! Since there was some chatter about starting regular Caliper community calls, @nkl199 and I have put together a google docs about the various todos/plans regarding Caliper. The following link is in commenting mode for obvious reasons, but if you like the idea, it can be migrated into Hyperledger hands, like the PSWG docs\nhttps://docs.google.com/document/d/1QQFmuRW4QXk0HCUIw1NoqweNQBnQ4P3eOhAE10m1vng/edit?usp=sharing","username":"klenik","ts":"2018-10-10T09:50:05.024Z"}
{"msg":"@hurf @panyu 2 @tkuhrt I don't know the exact procedure for starting such scheduled calls, but I'd happy to help out with anything you need","username":"klenik","ts":"2018-10-10T09:52:16.714Z"}
{"msg":"Thanks for your suggestions. Create a template for the issue and PR descriptions, and provide good practices on how to ask questions properly on the proper channels","username":"panyu2","ts":"2018-10-11T00:54:16.888Z"}
{"msg":"Thanks for your suggestions.  For this one --Create a template for the issue and PR descriptions, and provide good practices on how to ask questions properly on the proper channels, I think we can generate a document about FAQ to provide good practices on how to avoid the misconfigured issues. \n","username":"panyu2","ts":"2018-10-11T00:57:49.190Z"}
{"msg":"@klenik great work","username":"hurf","ts":"2018-10-11T10:11:15.217Z"}
{"msg":"There's several issues from my side can be added to the plan ","username":"hurf","ts":"2018-10-11T10:12:28.594Z"}
{"msg":"\tAlign with PSWG definitions. Caliper was done before PSWG publishes its whitepaper, it time to check the consistency.\n\tSomebody has added new monitoring module, it’s included in TrustedBench work. Need to find out are there more unmerged features from TrustedBench work, and upstream to Caliper\n\tOther DLT support. But which?\n\tConsider extend Caliper’s scope? Add system/e2e test targeting some most concerned blockchain features, like consensus effectiveness.","username":"hurf","ts":"2018-10-11T10:13:00.509Z"}
{"msg":"Some could be short term, some long term","username":"hurf","ts":"2018-10-11T10:13:23.541Z"}
{"msg":"I think we can start community calls next week","username":"hurf","ts":"2018-10-11T10:13:54.584Z"}
{"msg":"That would be great! ","username":"klenik","ts":"2018-10-11T10:14:11.058Z"}
{"msg":"I'm testing my zoom settings, hope it could work fine for everybody","username":"hurf","ts":"2018-10-11T10:14:39.313Z"}
{"msg":"I send you the editing link in private, so you guys can also manage the doc","username":"klenik","ts":"2018-10-11T10:15:06.633Z"}
{"msg":"yes thank, either by chat or huruifeng@huawei.com","username":"hurf","ts":"2018-10-11T10:15:54.839Z"}
{"msg":"granted editing access through email","username":"klenik","ts":"2018-10-11T10:16:38.050Z"}
{"msg":"got it , thx","username":"hurf","ts":"2018-10-11T10:25:05.536Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=XZuAxcKntoXJDsLxn) @klenik @hurf @panyu 2 : If you are all interested in using the Hyperledger Community Zoom channel for hosting meetings, please find a time on the [Hyperledger Community Calendar](https://calendar.google.com/calendar/embed?src=linuxfoundation.org_nf9u64g9k9rvd9f8vp4vur23b0%40group.calendar.google.com&ctz=foo) that preferably does not conflict with another community meeting and work with @rjones to set it up. ","username":"tkuhrt","ts":"2018-10-11T17:02:41.423Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=XZuAxcKntoXJDsLxn","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=XZuAxcKntoXJDsLxn","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=djzJssSaekeG45Sjt) @klenik : Can you make sure that this link exists on the [Hyperledger Caliper wiki page](https://wiki.hyperledger.org/projects/caliper) if you haven't already placed it there?","username":"tkuhrt","ts":"2018-10-11T17:04:26.666Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=djzJssSaekeG45Sjt","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=djzJssSaekeG45Sjt","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@tkuhrt added the link to the wiki page. Can you add the link to the channel topic for ease of access? ","username":"klenik","ts":"2018-10-11T18:23:09.729Z"}
{"msg":"@hurf @panyu 2 I'm flexible regarding the call times, so choose a time that works for you. I think most of the contributors here are scattered in the UTC+[1-8] time zone range, but we'll see who else is interested in the calls.","username":"klenik","ts":"2018-10-11T18:27:45.887Z"}
{"msg":"Also, the GitHub invitation for the Caliper Committer team arrived and accepted, thank you all for managing this process :)","username":"klenik","ts":"2018-10-11T18:49:49.206Z"}
{"msg":"","username":"tkuhrt","ts":"2018-10-11T19:10:36.689Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"Used for contributors of Hyperledger Caliper to discuss implementation details. See [planning document](https://docs.google.com/document/d/1QQFmuRW4QXk0HCUIw1NoqweNQBnQ4P3eOhAE10m1vng/edit?usp=sharing)","username":"tkuhrt","ts":"2018-10-11T19:11:32.110Z","type":"room_changed_description"}
{"msg":"Discuss implementation details of Hyperledger Caliper. See [planning document](https://docs.google.com/document/d/1QQFmuRW4QXk0HCUIw1NoqweNQBnQ4P3eOhAE10m1vng/edit?usp=sharing)","username":"tkuhrt","ts":"2018-10-11T19:11:57.076Z","type":"room_changed_topic"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=HzTvjTafBd2pQxzSN) Congratulations on becoming a maintainer, @klenik ","username":"tkuhrt","ts":"2018-10-11T19:13:02.444Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=HzTvjTafBd2pQxzSN","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=HzTvjTafBd2pQxzSN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@klenik @nkl199 @hurf @FlyingTiger  and someone concerns about attending the meeting:  Does the time 10.17 14:00 is ok for you ? ","username":"panyu2","ts":"2018-10-15T03:03:26.979Z"}
{"msg":"10.17 14:00-15:00 is the UTC+8 Time","username":"panyu2","ts":"2018-10-15T03:07:45.553Z"}
{"msg":"@panyu 2, 14:00 UTC+8 sounds good to me ","username":"klenik","ts":"2018-10-15T03:35:24.213Z"}
{"msg":"We can also discuss at our first meeting to see whether the timing is good for people from other places(if we have any).","username":"hurf","ts":"2018-10-15T06:42:08.076Z"}
{"msg":"Our first meeting will be at Oct 17, @tkuhrt can you help to schedule the meeting using community zoom?","username":"hurf","ts":"2018-10-15T06:43:11.508Z"}
{"msg":"@hurf : I sent you an invite. Can you confirm that I got the time zone correct? Also, what sort of schedule would you like to have these meetings? Weekly, bi-weekly?","username":"tkuhrt","ts":"2018-10-15T07:07:27.277Z"}
{"msg":"Correct, thanks Tracy","username":"hurf","ts":"2018-10-15T07:10:03.635Z"}
{"msg":"I think for now weekly could be better.","username":"hurf","ts":"2018-10-15T07:10:37.025Z"}
{"msg":"We need a little pressure:-)","username":"hurf","ts":"2018-10-15T07:10:49.991Z"}
{"msg":"@hurf What will be the agenda? ","username":"klenik","ts":"2018-10-15T07:17:43.357Z"}
{"msg":"Great. I will make it weekly","username":"tkuhrt","ts":"2018-10-15T08:04:08.438Z"}
{"msg":"1.round call\n2.discuss meeting time\n3.review current states\n4.agree on merge rules and health metrics\n5.discuss development plan\n6.technical review of specific PR(optional, if any)","username":"hurf","ts":"2018-10-15T08:17:08.890Z"}
{"msg":"Also I suggest to make health metrics review a fixed agenda item for following meetings.","username":"hurf","ts":"2018-10-15T08:18:11.952Z"}
{"msg":"@FlyingTiger Please review the PR - https://github.com/hyperledger/caliper/pull/190","username":"rkrish82","ts":"2018-10-15T10:16:37.313Z"}
{"msg":"Meeting Minutes(2018-10-17)\n1. Review current state;\n2. Discuss regular meeting time: UTC 7am(8am winter) and UTC 1pm(2pm winter), shifting every  week.\n3. Discuss requirements for PRs to be accepted: 1) Number of reviewer ACKs (with 2 maintainers confirmation); 2) Meet CI requirements but reviewers should also inspect the correctness/meaningfulness of tests.\n4. Please Nick complete the template for issue and PR descriptions  and provide good practices on how to ask questions properly on the proper channels.(Priority: High)\n\n5. Please Nick lead the work that create a Caliper homepage instead of separate Readme.md files. feihu and panyu help on implementation. (Priority: Medium)\n\n6. Please Victor make a list of known experts for HLP project. (Priority: Medium)\n7. Please Attila refactor Promise chains to async/await wherever possible.(Priority: High)\n8. Please Panyu change current logging to a unified logging framework. (Priority: High)\n9. Please Feihu Jiang change current configuration framework to a unified configuration framework. (Priority: High)","username":"panyu2","ts":"2018-10-17T07:43:53.795Z"}
{"msg":"templates up in a PR now :thumbsup: ","username":"nkl199","ts":"2018-10-17T09:36:52.090Z"}
{"msg":"7. => Created the Issues [192](https://github.com/hyperledger/caliper/issues/192) and [193](https://github.com/hyperledger/caliper/issues/193) for the async/await and `tape` refactoring, and tagged them with the new `good first issue` label for extra motivation. If no one will resolve them by the time I'm finished with the Fabric common connection profile upgrade, then I'll work on them myself. \n\n8. =>[This utility function](https://github.com/hyperledger/fabric-sdk-node/blob/95b02d9b2ce508d8a3684792b6b040ae04a4067c/fabric-client/lib/utils.js#L119:16) from the Node SDK could be reused for logging (without introducing a mandatory dependency to the SDK).\n\n9. => [This class](https://github.com/hyperledger/fabric-sdk-node/blob/release-1.3/fabric-client/lib/Config.js) from the Node SDK could be reused for the configuration framework, it's pretty flexible and Fabric-like, keeping the similar \"look-and-feel\" between the different projects (again, without introducing a mandatory dependency to the SDK)","username":"klenik","ts":"2018-10-17T09:37:00.932Z"}
{"msg":"I just publish our meeting minutes on Caliper's wiki. Every week after the meeting , we can update it.\n","username":"panyu2","ts":"2018-10-18T02:25:02.108Z"}
{"msg":"In order to get the caliper homepage going, we will need a new branch alongside `master` to host the files. Traditionally the brach is named `gh-pages` though it can be anything now, such as `docs`. The project settings can then toggled to publish the site from that branch, and it will be accessible via the url  `https://hyperledger.github.io/caliper`. Creation of the branch and editing the project settings requires admin rights, and I think Ry is required for this?","username":"nkl199","ts":"2018-10-18T07:43:17.848Z"}
{"msg":"You mean the maintainer's rights is not enough for the branch creation and editing the project settings? If so, we can ask Ry.","username":"panyu2","ts":"2018-10-18T08:10:21.239Z"}
{"msg":"Ry was required to enable the Travis CI process, whilst a maintainer can (should) be able to create a new branch, I am uncertain about the ability to modify project settings","username":"nkl199","ts":"2018-10-18T10:36:52.304Z"}
{"msg":"@nkl199 send a request to helpdesk@hyperledger.org. I think maintainers can create branches","username":"rjones","ts":"2018-10-18T16:29:48.141Z"}
{"msg":"gh pages is enabled for master branch right now. once you create the new branch,  send a helpdesk ticket to change the branch they’re publsihed from @nkl199 ","username":"rjones","ts":"2018-10-18T16:32:43.182Z"}
{"msg":"Has joined the channel.","username":"hotbydefault","ts":"2018-10-19T03:59:11.690Z","type":"uj"}
{"msg":"thanks!","username":"nkl199","ts":"2018-10-19T08:33:29.866Z"}
{"msg":"@nkl199 @panyu 2 I created the `gh-pages` branch, so the rest is up to the helpdesk and your email :)","username":"klenik","ts":"2018-10-19T11:00:18.798Z"}
{"msg":":thumbsup: ","username":"nkl199","ts":"2018-10-19T11:00:32.141Z"}
{"msg":"Hi, I'm sorry I've made a mistake in the minutes. The regular meeting time: UTC 7am(8am winter) and UTC 1pm(2pm winter), will shift every two weeks not every week. So tomorrow(10.24 Wednesday), we will hold the meeting at UTC 7am. ","username":"panyu2","ts":"2018-10-23T01:21:45.770Z"}
{"msg":"So the same time as last week then? @hurf What's the agenda for tomorrow? ","username":"klenik","ts":"2018-10-23T13:25:10.767Z"}
{"msg":"Yes, same time as last week. ","username":"panyu2","ts":"2018-10-24T01:00:36.533Z"}
{"msg":"Agenda:","username":"panyu2","ts":"2018-10-24T01:01:28.001Z"}
{"msg":"1. progress of last week's work;","username":"panyu2","ts":"2018-10-24T01:03:37.794Z"}
{"msg":"1. the progress of last week's work; 2. continue to discuss the doc attila shared and discuss develop plan; 3. agree on health metrics.    I just suggest. Do you have any proposal?","username":"panyu2","ts":"2018-10-24T01:09:47.425Z"}
{"msg":"As","username":"FlyingTiger","ts":"2018-10-24T07:19:53.504Z"}
{"msg":" As the develop document, like Fabric: code > env > console args > config file > defaults, and the Fabric Node SDK put this together through nconf. But I didn't find where nconf is used in Fabric Node SDK, Could you give me some points please? @klenik @nkl199 ","username":"FlyingTiger","ts":"2018-10-24T07:26:59.019Z"}
{"msg":"Thanks very much!","username":"FlyingTiger","ts":"2018-10-24T07:27:03.970Z"}
{"msg":"@FlyingTiger This is the `Config` class that wraps `nconf` and sets the priorities among the setting sources: https://github.com/hyperledger/fabric-sdk-node/blob/release-1.3/fabric-client/lib/Config.js\nThe default configuration file for the SDK is here: https://github.com/hyperledger/fabric-sdk-node/blob/release-1.3/fabric-client/config/default.json\nCaliper could provide a similar one with the available/configurable settings you identified, then users can also set for example the `request-timeout` setting as an environment variable, like `REQUEST_TIMEOUT=10000`","username":"klenik","ts":"2018-10-24T07:35:41.118Z"}
{"msg":"@nkl199 Any pointers on where the SDK uses these settings and how can you handle prefixes like `CALIPER_REQUEST_TIMEOUT=10000` ?","username":"klenik","ts":"2018-10-24T07:36:29.518Z"}
{"msg":"Thanks, I'll look into this. @klenik ","username":"FlyingTiger","ts":"2018-10-24T07:41:25.690Z"}
{"msg":"NB: passing the user provided settings (environment variables, command line arguments, config file) to remote clients will be interesting :)","username":"klenik","ts":"2018-10-24T07:59:02.578Z"}
{"msg":"@klenik - client side or server side timeout?","username":"nkl199","ts":"2018-10-24T08:15:27.762Z"}
{"msg":"Doesn't matter, just an example of how we can retrieve the value of a setting","username":"klenik","ts":"2018-10-24T08:16:09.161Z"}
{"msg":"ah, like `Client.setConfigSetting('request-timeout', 60000);` within the Client ... which goes dow to `BaseClient`","username":"nkl199","ts":"2018-10-24T08:18:53.773Z"}
{"msg":"ah, like `Client.setConfigSetting('request-timeout', 60000);` within the Client ... which goes dow to `BaseClient`?","username":"nkl199","ts":"2018-10-24T08:18:53.773Z"}
{"msg":"(there is a simlar getConfigSetting)","username":"nkl199","ts":"2018-10-24T08:19:06.475Z"}
{"msg":"Yep, plus I think there is a global Config instance in the utils, and get/setConfig. @FlyingTiger So it has quite a simple API if you reuse the mentioned `Config` class","username":"klenik","ts":"2018-10-24T08:21:53.595Z"}
{"msg":"Put together a spreadsheets to (manually) monitor the metrics. Link with commenting rights: https://docs.google.com/spreadsheets/d/1jdE8ZJNfLG4NIzEoMFNq6lywLxXWCzNbSEDqP-UJD6Q/edit?usp=sharing\n@hurf I sent you the link with editing rights via email","username":"klenik","ts":"2018-10-24T08:52:44.632Z"}
{"msg":"@klenik , I just create the same spreadsheets. Well, I'll put your link on the wiki.","username":"panyu2","ts":"2018-10-24T08:57:20.953Z"}
{"msg":"Should have assigned someone on the task to avoid this :D Oh well, still better than 0 sheets :)","username":"klenik","ts":"2018-10-24T09:01:02.272Z"}
{"msg":"yes.:slight_smile:","username":"panyu2","ts":"2018-10-24T09:04:30.960Z"}
{"msg":"I find the meeting time Wednesday UTC 1pm has already assigned other meetings. So maybe we should change the Wednesday UTC 1pm to Tuesday UTC 2pm.","username":"panyu2","ts":"2018-10-24T09:17:19.268Z"}
{"msg":"@tkuhrt ,  in order to cover more contributors' time, we would like to shift the time between UTC 6am on Wednesday and UTC 2pm on Tuesday every two weeks. would you please set it for us? Thank you\n","username":"panyu2","ts":"2018-10-24T09:22:40.665Z"}
{"msg":"@panyu 2 Just to confirm, UTC 2PM is right after the PSWG call, right? ","username":"klenik","ts":"2018-10-24T09:27:47.284Z"}
{"msg":"yes","username":"panyu2","ts":"2018-10-24T09:28:01.601Z"}
{"msg":"@panyu 2 please send me an email with exactly what you want changed: rjones@linuxfoundation.org","username":"rjones","ts":"2018-10-24T10:25:45.775Z"}
{"msg":"@rjones I just sent you the email with the exact changed time.","username":"panyu2","ts":"2018-10-24T11:50:06.024Z"}
{"msg":"@panyu2 I think I moved the meeting to the correct time - please let me know","username":"rjones","ts":"2018-10-24T15:47:56.406Z"}
{"msg":"@rjones  Thank you  so much. The time on 2018.10.30 is correct. I'm sorry I've forgotten to adjust the time in winter. So I've replied the mail and drawn a from to explain the time clearly.  \n","username":"panyu2","ts":"2018-10-25T01:18:50.950Z"}
{"msg":"Has joined the channel.","username":"houqinghui","ts":"2018-10-26T00:32:07.177Z","type":"uj"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 2pm on 10.30, just the time after PSWG.  ","username":"panyu2","ts":"2018-10-30T00:30:41.583Z"}
{"msg":"@nkl199 @panyu2 I merged the docs PR, but it looks like that the website is still deployed from the master branch. Did the helpdesk confirmed that they changed the publish-branch to gh-pages?","username":"klenik","ts":"2018-11-05T17:12:45.073Z"}
{"msg":"@FlyingTiger @panyu2 left some minor comments on the logging and config framework integration PRs","username":"klenik","ts":"2018-11-05T17:13:59.845Z"}
{"msg":"@klenik  - an email now needs to be sent to have the change made - I'll do that one :thumbsup: ","username":"nkl199","ts":"2018-11-05T17:41:57.215Z"}
{"msg":"Ah, I thought it was already sent when the branch was created. Then everything is (will be) okay 🙂","username":"klenik","ts":"2018-11-05T17:44:10.346Z"}
{"msg":"@klenik Thanks for you comments. I'm working on them. ","username":"panyu2","ts":"2018-11-06T11:18:42.977Z"}
{"msg":"@nkl199 , if there is anything needs my help, please let me know","username":"panyu2","ts":"2018-11-06T11:23:29.866Z"}
{"msg":"@klenik , I've merged it.\n","username":"panyu2","ts":"2018-11-06T11:23:29.866Z"}
{"msg":"@panyu2 the config pr is merged, so you can rebase and use it for the logging level/target config. Let me know when the pr is updated and I'll take a look at it ","username":"klenik","ts":"2018-11-06T11:25:57.547Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 3pm on 11.6, just the time after PSWG.  The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2018-11-06T11:27:34.073Z"}
{"msg":"@klenik got it. It may facilitate the logging config. I'll do some modifications according to the config pr.","username":"panyu2","ts":"2018-11-06T11:31:38.366Z"}
{"msg":"the helpdesk ticket for enabling the gh-pages has been raisde","username":"nkl199","ts":"2018-11-06T11:33:17.685Z"}
{"msg":"the helpdesk ticket for enabling the gh-pages has been raised","username":"nkl199","ts":"2018-11-06T11:33:17.685Z"}
{"msg":"ed","username":"nkl199","ts":"2018-11-06T11:33:19.090Z"}
{"msg":"apologies - I am unable to make the maintainers call today, though my update is:\n- pending activation of website following email to helpdesk\n- need to rebase 1.3 changes to enable merge","username":"nkl199","ts":"2018-11-06T14:02:08.742Z"}
{"msg":"@nkl199 any update on the how-to about adding new pages to the website?","username":"klenik","ts":"2018-11-06T14:09:45.119Z"}
{"msg":"-> will make a CR on that ASAP to the gh-pages branch","username":"nkl199","ts":"2018-11-06T14:10:22.255Z"}
{"msg":"https://hyperledger.github.io/caliper/","username":"nkl199","ts":"2018-11-06T17:45:17.719Z"}
{"msg":":heart_eyes: ","username":"nkl199","ts":"2018-11-06T17:45:20.367Z"}
{"msg":"now raising a request to have the website featured in the \"description\" of the caliper project, so people can link to it directly","username":"nkl199","ts":"2018-11-06T17:48:08.149Z"}
{"msg":"Awesome 😁 and I'll put it on the wiki page if I don't forget it ","username":"klenik","ts":"2018-11-06T17:49:58.903Z"}
{"msg":"@nkl199 : I can edit the description here: https://github.com/hyperledger/caliper","username":"tkuhrt","ts":"2018-11-06T17:50:08.043Z"}
{"msg":"Do you just want it to reference https://hyperledger.github.io/caliper/","username":"tkuhrt","ts":"2018-11-06T17:50:20.914Z"}
{"msg":"wohoo! Please!","username":"nkl199","ts":"2018-11-06T17:50:24.256Z"}
{"msg":"there should be an option to link the website","username":"nkl199","ts":"2018-11-06T17:50:38.720Z"}
{"msg":"Check it out!","username":"tkuhrt","ts":"2018-11-06T17:50:43.824Z"}
{"msg":"That was simple","username":"tkuhrt","ts":"2018-11-06T17:50:52.968Z"}
{"msg":"yay! perfect!!","username":"nkl199","ts":"2018-11-06T17:51:21.950Z"}
{"msg":"Thanks :D","username":"nkl199","ts":"2018-11-06T17:51:27.364Z"}
{"msg":"@nkl199 @hurf I merged the additional documentation guidelines/how-to from Nick, added the site URL to the wiki page, and also sent news about it to the mailing list and rocketchat channel. If you know any more forums, spread the news :) \nBtw, do we have a visitor counter for the site? I couldn't find it under the project insights (but there are some interesting metrics). Maybe once the visiting starts, it will appear.","username":"klenik","ts":"2018-11-07T18:00:13.763Z"}
{"msg":"@nkl199 @hurf I merged the additional documentation guidelines/how-to from Nick, added the site URL to the wiki page, and also sent news about it to the mailing list and rocketchat channel. If you know any more forums, spread the news :) \nBtw, do we have a visitor counter for the site? I could find it under the project insights (but there are some interesting metrics). Maybe once the visiting starts, it will appear.","username":"klenik","ts":"2018-11-07T18:00:13.763Z"}
{"msg":"We might be able to provide a Google Analytics ID. @rjones do you know what process might be?","username":"tkuhrt","ts":"2018-11-07T18:09:34.420Z"}
{"msg":"@klenik @tkuhrt please send me an email rjones@linuxfoundation.org and ask me for what you need","username":"rjones","ts":"2018-11-07T18:45:59.286Z"}
{"msg":"I will get you an ID","username":"rjones","ts":"2018-11-07T18:46:13.415Z"}
{"msg":"@klenik : I have the Google Analytics ID that I can share with the right person. I will DM you this","username":"tkuhrt","ts":"2018-11-07T19:24:56.474Z"}
{"msg":"unless I should share it with someone else","username":"tkuhrt","ts":"2018-11-07T19:25:06.716Z"}
{"msg":"@tkuhrt @rjones I integrated the GA tags with the site (in my fork), but according to [this page](https://support.google.com/analytics/answer/7318509) we have to disclose that the site tracks some things. What is the policy for that (text of the disclosure, location)?","username":"klenik","ts":"2018-11-08T11:47:24.337Z"}
{"msg":"@tkuhrt @rjones I integrated the GA tags with site (in my fork), but according to [this page](https://support.google.com/analytics/answer/7318509) we have to disclose that the site tracks some things. What is the policy for that (text of the disclosure, location)?","username":"klenik","ts":"2018-11-08T11:47:24.337Z"}
{"msg":"https://termsfeed.com/blog/privacy-policy-google-analytics/","username":"nkl199","ts":"2018-11-08T12:50:23.479Z"}
{"msg":"that's a helpful link","username":"nkl199","ts":"2018-11-08T12:50:28.212Z"}
{"msg":"looks like we could have a seperate \"Privacy Policy\" page in the left menu, along with the \"open source\" items","username":"nkl199","ts":"2018-11-08T12:51:07.415Z"}
{"msg":"looks like we could have a separate \"Privacy Policy\" page in the left menu, along with the \"open source\" items","username":"nkl199","ts":"2018-11-08T12:51:07.415Z"}
{"msg":"Yep, I'll do that (as practice), but I'd still like some help with the official content of the page (the cookie pop-ups, however, are beyond my skills) :) ","username":"klenik","ts":"2018-11-08T14:25:04.581Z"}
{"msg":"From [this site](https://policies.google.com/technologies/partner-sites), I see:\n> Many websites and apps use Google Analytics to understand how visitors engage with their sites or apps. If you don’t want Analytics to be used in your browser, you can [install the Google Analytics browser add-on](https://tools.google.com/dlpage/gaoptout). Learn more about [Google Analytics and privacy](https://support.google.com/analytics/answer/6004245).\n\nThe [hyperledger.org privacy policy](https://www.linuxfoundation.org/privacy/) has:\n> Purposes and Legitimate Interests\n> \n> TLF uses the personal information we collect for our legitimate business interests, which include the following purposes:\n> \n > _Analytics_.  To gather metrics to better understand how users access and use our Sites and Services and participate in our Projects; to evaluate and improve the Sites, including personalization, to develop new services; and to understand metrics regarding the community health of our Projects.\n\nSo maybe a combination of the two would be useful. But I am not a lawyer.","username":"tkuhrt","ts":"2018-11-08T16:38:59.909Z"}
{"msg":"From [this site](https://policies.google.com/technologies/partner-sites), I see:\n> Many websites and apps use Google Analytics to understand how visitors engage with their sites or apps. If you don’t want Analytics to be used in your browser, you can [install the Google Analytics browser add-on](https://tools.google.com/dlpage/gaoptout). Learn more about [Google Analytics and privacy](https://support.google.com/analytics/answer/6004245).\n\nThe [hyperledger.org privacy policy](https://www.linuxfoundation.org/privacy/) has:\n> Purposes and Legitimate Interests\n> \n> TLF uses the personal information we collect for our legitimate business interests, which include the following purposes:\n> \n> _Analytics_.  To gather metrics to better understand how users access and use our Sites and Services and participate in our Projects; to evaluate and improve the Sites, including personalization, to develop new services; and to understand metrics regarding the community health of our Projects.\n\nSo maybe a combination of the two would be useful. But I am not a lawyer.","username":"tkuhrt","ts":"2018-11-08T16:38:59.909Z"}
{"msg":"Okay, then I'll concatenate these things somehow :thumbsup: ","username":"klenik","ts":"2018-11-08T18:14:09.098Z"}
{"msg":"Sample: https://aklenik.github.io/caliper/docs/Privacy_Policy.html\nNot much, but better than nothing. If you also think so, I'll raise the PR","username":"klenik","ts":"2018-11-09T07:08:25.413Z"}
{"msg":"@tkuhrt Sample: https://aklenik.github.io/caliper/docs/Privacy_Policy.html\nNot much, but better than nothing. If you also think so, I'll raise the PR","username":"klenik","ts":"2018-11-09T07:08:25.413Z"}
{"msg":"@klenik : Let me run this past the folks at The Linux Foundation and see what they think. It definitely covers the use of Google Analytics.","username":"tkuhrt","ts":"2018-11-09T15:56:04.138Z"}
{"msg":"@klenik : Here is what I got back. I would suggest they just link to the LF's privacy policy at https://www.linuxfoundation.org/privacy/ (probably easiest via a \"Privacy Policy\" link in the footer of https://hyperledger.github.io/caliper/). The LF's main privacy policy already includes appropriate provisions regarding analytics (including specific reference to Google Analytics) so I don't think the projects will need anything custom as long as they point there.","username":"tkuhrt","ts":"2018-11-09T16:06:54.196Z"}
{"msg":"@tkuhrt Did exactly that. Well, almost, I put it in the header so I surely don't mess up the layout anywhere else. @panyu2 Could you please merge the PR?","username":"klenik","ts":"2018-11-09T22:04:52.494Z"}
{"msg":"@klenik I've merged it.","username":"panyu2","ts":"2018-11-11T02:42:56.762Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 6am on 11.14. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2018-11-13T08:53:10.913Z"}
{"msg":"@panyu2 @nkl199 So based on list of issues I got from @panyu2, I compiled the following list suggested actions/reasons:\n\n64: Composer-related. Asked for details ==> wait 1-2 weeks\n78: Core-related. Looks stale. There were some fixes to client exits since then. ==> close as inactive/can't reproduce error\n92: Offering to contribute ==> close since not an issue :)\n93: Fabric-related. Orderer service not available yet, possible because longer network start-up time ==> no reaction for 8 days, wait a few more days\n96: Composer-related. Possible timeout while deploying chaincode. OP suggested closing the issue. ==> close the issue as can't reproduce, suggest increasing timeout in peer settings\n101: Composer-related. Unidentified user/activation required. Been stale for a while. ==> Ask for details (error logs, etc), wait\n105: Fabric-related. Same as 93, linked suggested fix ==> wait a few days\n107: Fabric-related. Slow TPS for multiple orderer. Possible because Caliper doesn't support multiple orderer yet. ==> suggest to wait for multiple orderer support, and close the issue\n114: The solution is ready, either as a contribution, or taking the proposed fix from the issue ==> ping RobertDiebels\n119: Too general, should be split into multiple refactoring issues. Parts of it are already fixed ==> close this one\n130-131: High timeout value in callback module ==> the callback module is just an example, not core-Caliper, so close these, with appropriate comment\n140: Nick has a solution ready for this\n141: not Caliper-related based on the logs and code (blockchain-explorer), so closed it\n143: Timeout issue, exhibiting the expected behavior, so closed it\n150: really stale, without any error details, hasn't provided additional information ==> should close it\n152: OP has been stale for a long time ==> wait a week for response\n153: Fabric-related. Requested details ==> wait for a response\n154: General questions, closed it.\n163: stale and answered\n165: proposed solution through a closed issue ==> wait for reply\n168: Fabric-related. Requested details details\n171: General question and answered. Closed it.\n173: Fabric-related. Asked for progress\n183: Platform support request. Definitely a won't fix for now.\n195: Fabric-related. Asked for progress\n199: Fabric-related. Requested details\n201: Kafka related. Pointed to an other Kafka issue.\n204-205: Fabric-related. My guess is resource issues, since it works for smaller network. Possibly duplicates\n214: Not Caliper-related, so should close it\n\nFeel free to (dis)agree. I already closed some issues that were trivially not issues","username":"klenik","ts":"2018-11-14T23:19:24.308Z"}
{"msg":"Reply with the list of issues that should be closed in your opinion","username":"klenik","ts":"2018-11-14T23:20:22.644Z"}
{"msg":"Hi guys, I found a problem","username":"FlyingTiger","ts":"2018-11-20T08:03:41.704Z"}
{"msg":"|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|\n| Docker  | couchdb.peer0.org1.example.com    | 73.2MB      | 67.6MB      | 27.07%   | 14.31%   | 899.0KB    | 2.1MB       |\n|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|\n| Docker  | ca.org2.example.com               | 5.1MB       | 5.1MB       | 0.08%    | 0.01%    | 0B         | 0B          |\n|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|\n| Docker  | couchdb.peer1.org2.example.com    | 73.0MB      | 67.7MB      | 28.28%   | 16.10%   | 1.4MB      | 3.0MB       |\n|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|\n| Docker  | ca.org1.example.com               | 4.9MB       | 4.9MB       | 0.06%    | 0.00%    | 0B         | 0B          |\n|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|\n| Docker  | couchdb.peer1.org1.example.com    | 113.4MB     | 85.8MB      | 62.54%   | 18.25%   | 2.4MB      | 4.3MB       |\n|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|\n| Docker  | orderer.example.com               | 45.2MB      | 27.6MB      | 24.64%   | 5.66%    | 4.5MB      | 16.1MB      |\n|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|\n| Docker  | couchdb.peer0.org2.example.com    | 86.3MB      | 77.2MB      | 38.89%   | 17.20%   | 1.8MB      | 3.5MB ","username":"FlyingTiger","ts":"2018-11-20T08:03:57.730Z"}
{"msg":"When I posted PR, the travis-ci ran, and I found the usage of CPU of couchdb.peer*.org*.example.com dockers is too high","username":"FlyingTiger","ts":"2018-11-20T08:06:59.819Z"}
{"msg":"Does anybody know what's wrong with it?","username":"FlyingTiger","ts":"2018-11-20T08:07:20.582Z"}
{"msg":"It maybe cause the timeout problem. The result is Submitted: 1000 Succ: 93 Fail:0 Unfinished:907, etc.","username":"FlyingTiger","ts":"2018-11-20T08:10:09.690Z"}
{"msg":"@nkl199 @klenik Could you please give me some information about this?","username":"FlyingTiger","ts":"2018-11-20T08:18:19.432Z"}
{"msg":"I know that couch is an absolute CPU/memory hog, especially if using non-indexed queries","username":"nkl199","ts":"2018-11-20T09:29:43.573Z"}
{"msg":"Especially if you're running multiple instance on the same physical host","username":"klenik","ts":"2018-11-20T09:40:46.995Z"}
{"msg":"Especially if you're running multiple instances on the same physical host","username":"klenik","ts":"2018-11-20T09:40:46.995Z"}
{"msg":"OK, I got it. Thank you","username":"FlyingTiger","ts":"2018-11-20T11:41:38.174Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 6am on 11.21. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2018-11-21T01:13:40.038Z"}
{"msg":"Has joined the channel.","username":"gregdhill","ts":"2018-11-26T12:36:12.004Z","type":"uj"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 3pm on 11.27. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2018-11-27T04:32:46.594Z"}
{"msg":"@panyu2 @nkl199 @hurf Sorry folks, looks like I can't make it to today's call (conflict with the Budapest Hyperledger Meetup). \nUpdate: \n1) Still need the YAML config support to integrate the new Fabric adapter. @houqinghui is working on it.\n2) The adapter also supports Fabric v1.0 with minimal additional code (~30 LOC) while using the connection profile, so it'll be an all-in-one adapter for Fabric hopefully.\n3) The documentation is still WIP.\n4) If everything goes according to plan, I'll use the new adapter to demonstrate a high-throughput Fabric CC at the meetup :)","username":"klenik","ts":"2018-11-27T14:03:19.823Z"}
{"msg":"Google Analytics for the health metrics table: 115 users since the start of the website :thumbsup: (now that the old docs have been removed, maybe this number will increase even more)","username":"klenik","ts":"2018-11-27T14:32:24.812Z"}
{"msg":"Hey, I'm one of the developers from Monax (Hyperledger Burrow) and I'm currently exploring Caliper integrations. I'm quite new to NodeJS, so it would be great to have a brief chat with someone about the system this week! :)","username":"gregdhill","ts":"2018-11-27T17:13:56.331Z"}
{"msg":"@gregdhill Hi Greg. Feel free to drop me a message and we can schedule something :) ","username":"klenik","ts":"2018-11-27T20:57:53.721Z"}
{"msg":"@panyu2 @nkl199 @houqinghui @FlyingTiger I left some comments on the FAQ section in the dev docs, every opinion/suggestion is welcome :)","username":"klenik","ts":"2018-11-29T11:19:35.150Z"}
{"msg":":thumbsup: ","username":"nkl199","ts":"2018-11-29T11:19:46.208Z"}
{"msg":":thumbsup:   How to use caplier to test the self-deployed network is also a frequent question","username":"panyu2","ts":"2018-11-30T01:09:25.341Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 3pm on 12.4. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2018-12-03T07:43:18.261Z"}
{"msg":"Hi，to whom concerns the regular meeting, the Caliper meeting is postponed this week due to the Global Forum. ","username":"panyu2","ts":"2018-12-11T00:04:18.477Z"}
{"msg":"Has joined the channel.","username":"Abhinavgrg074","ts":"2018-12-14T06:13:58.358Z","type":"uj"}
{"msg":"Hey all, I've made a couple of PRs for Burrow related things... ","username":"gregdhill","ts":"2018-12-15T13:43:31.778Z"}
{"msg":"https://github.com/hyperledger/caliper/pull/258","username":"gregdhill","ts":"2018-12-15T13:43:38.342Z"}
{"msg":"https://github.com/hyperledger/caliper/pull/257","username":"gregdhill","ts":"2018-12-15T13:43:48.550Z"}
{"msg":"@gregdhill Awesome! I'll take a look at it in the evenings if the hotel wifi will allow it :sweat_smile:","username":"klenik","ts":"2018-12-16T11:19:21.691Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 6am on 12.9. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2018-12-19T00:55:34.540Z"}
{"msg":"Sorry, can't make it this morning, I'm at a blockchain winter school. Will send a report during the day. ","username":"klenik","ts":"2018-12-19T05:43:36.781Z"}
{"msg":"Got it.","username":"panyu2","ts":"2018-12-19T05:58:29.469Z"}
{"msg":"Hi，to whom concerns the regular meeting, since there are conflicts between the next two week's meeting time and vocations (Christmas holiday and New year‘s holiday)， these two meetings will be postponed.  The latest meeting will be scheduled for UTC 6 am on January 9. ","username":"panyu2","ts":"2018-12-21T03:25:04.941Z"}
{"msg":"hi, just some thoughts whilst I have them ... keen to explore the options here.\n\nWe have been considering streamlining the Caliper repository, by moving out the benchmarks into a separate repository and publishing those in isolation, and I believe that is still a good direction. We would be decoupling the benchmarks with the source code .... and this is a good thing. A further consideration is the contract and networks folders, which are tightly coupled to the samples themselves as they also contain aspects related to the samples. My thoughts are that we should:\n - dynamically update the network config file with `chaincodes` and `context` present in the driving sample config file so that we can decouple the dependancies. This appears to be mainly present in the fabric and iroha networks\n- remove `contracts` from the `src` folder and nest them inside the `benchmarks` folder\n","username":"nkl199","ts":"2018-12-21T09:18:03.018Z"}
{"msg":"hi, just some thoughts whilst I have them ... keen to explore the options here.\n\nWe have been considering streamlining the Caliper repository, by moving out the benchmarks into a separate repository and publishing those in isolation, and I believe that is still a good direction. We would be decoupling the benchmarks with the source code .... and this is a good thing. A further consideration is the contract and networks folders, which are tightly coupled to the samples themselves as they also contain aspects related to the samples. My thoughts are that we should:\n - move the networks folder into the benchmarks\n - dynamically update the network config file with `chaincodes` and `context` present in the driving sample config file so that we can decouple the dependancies. This appears to be mainly present in the fabric and iroha networks\n- remove `contracts` from the `src` folder and nest them inside the `benchmarks` folder\n","username":"nkl199","ts":"2018-12-21T09:18:03.018Z"}
{"msg":"hi, just some thoughts whilst I have them ... keen to explore the options here.\n\nWe have been considering streamlining the Caliper repository, by moving out the benchmarks into a separate repository and publishing those in isolation, and I believe that is still a good direction. We would be decoupling the benchmarks with the source code .... and this is a good thing. A further consideration is the contract and networks folders, which are tightly coupled to the samples themselves as they also contain aspects related to the samples. My thoughts are that we should:\n - move the networks folder into the benchmarks (I think this works well as we can encapsulate the entire \"benchmark\" as a chaincode deployed on a specific DLT structure)\n - dynamically update the network config file with `chaincodes` and `context` present in the driving sample config file so that we can decouple the dependancies. This appears to be mainly present in the fabric and iroha networks\n- remove `contracts` from the `src` folder and nest them inside the `benchmarks` folder\n","username":"nkl199","ts":"2018-12-21T09:18:03.018Z"}
{"msg":"hi, just some thoughts whilst I have them ... keen to explore the options here.\n\nWe have been considering streamlining the Caliper repository, by moving out the benchmarks into a separate repository and publishing those in isolation, and I believe that is still a good direction. We would be decoupling the benchmarks with the source code .... and this is a good thing. A further consideration is the contract and networks folders, which are tightly coupled to the samples themselves as they also contain aspects related to the samples. My thoughts are that we should:\n - move the networks folder into the benchmarks (I think this works well as we can encapsulate the entire \"benchmark\" as a chaincode deployed and tested on a specific DLT structure)\n - dynamically update the network config file with `chaincodes` and `context` present in the driving sample config file so that we can decouple the dependancies. This appears to be mainly present in the fabric and iroha networks\n- remove `contracts` from the `src` folder and nest them inside the `benchmarks` folder\n","username":"nkl199","ts":"2018-12-21T09:18:03.018Z"}
{"msg":"hi, just some thoughts whilst I have them ... keen to explore the options here.\n\nWe have been considering streamlining the Caliper repository, by moving out the benchmarks into a separate repository and publishing those in isolation, and I believe that is still a good direction. We would be decoupling the benchmarks with the source code .... and this is a good thing. A further consideration is the contract and networks folders, which are tightly coupled to the samples themselves as they also contain aspects related to the samples. My thoughts are that we should:\n - move the networks folder into the benchmarks (I think this works well as we can encapsulate the entire \"benchmark\" as a chaincode deployed and tested on a specific DLT structure)\n - dynamically update the network config file with `chaincodes` and `context` present in the driving sample config file so that we can decouple the dependancies. This appears to be mainly present in the fabric and iroha networks, but we shouldn't have to maintain information in 2 locations for a single tests\n- remove `contracts` from the `src` folder and nest them inside the `benchmarks` folder\n","username":"nkl199","ts":"2018-12-21T09:18:03.018Z"}
{"msg":"hi, just some thoughts whilst I have them ... keen to explore the options here.\n\nWe have been considering streamlining the Caliper repository, by moving out the benchmarks into a separate repository and publishing those in isolation, and I believe that is still a good direction. We would be decoupling the benchmarks with the source code .... and this is a good thing. A further consideration is the contract and networks folders, which are tightly coupled to the samples themselves as they also contain aspects related to the samples. My thoughts are that we should:\n - move the networks folder into the benchmarks (I think this works well as we can encapsulate the entire \"benchmark\" as a chaincode deployed and tested on a specific DLT structure)\n - dynamically update the network config file with `chaincodes` and `context` present in the driving sample config file so that we can decouple the dependancies. This appears to be mainly present in the fabric and iroha networks, but we shouldn't have to maintain information in 2 locations for a single tests\n- remove `contracts` from the `src` folder and nest them inside the `benchmarks` folder\n- modify Caliper to run with the new structure\n\nOnce the 'benchmark specific' items are consolidated, we could them move them into a separate repository, leaving only the caliper src, which we can maintain and publish in isolation","username":"nkl199","ts":"2018-12-21T09:18:03.018Z"}
{"msg":":point_up_tone1: let me know if you have any thoughts on the above :thumbsup: ","username":"nkl199","ts":"2018-12-21T09:23:39.605Z"}
{"msg":"Hi @nkl199, I'm still quite new to Caliper but keen to contribute in any way I can! These seem like great ideas and I certainly agree with greater modularity and more code reuse where possible. I'm not sure about isolating the benchmarks in another repository though which I feel would bring too much overhead to users who simply want to get up and running, but I guess there is an argument for DLT providers who have their own benchmarks and just want to run the toolkit.","username":"gregdhill","ts":"2018-12-21T11:48:19.744Z"}
{"msg":"yeah, it's a tough choice really, if the benchmarks were separated there would be a need to make their use as seamless as possible ... it is achievable, since it is what was done within Composer (the playground pulls sample networks from npm upon demand)","username":"nkl199","ts":"2018-12-21T11:50:25.126Z"}
{"msg":"Well, once caliper is published as an npm package, it can be easily installed into a cloned sample repo. So +1 from me to the separation idea. As for the networks. I tried to find some common structure, but in the end, I opted for the duplication. We could parameterize the compose files and the rest, but then it'll be hard to follow what's happening for a non-power user. So since the networks are examples and not critical core-code, I voted for duplication for the sake of simplicity. ","username":"klenik","ts":"2018-12-21T15:55:14.525Z"}
{"msg":"\n``` 1. I think we need to retain some simple examples even if Caliper is published as an npm package. If they are separated, it would make user difficulty to use it.\n```\n2.  About the networks, agree with @klenik .\n``` ```\nSince Caliper is a tool, all the changes we make must first consider whether it is convenient for users.\n``` \n```","username":"panyu2","ts":"2018-12-22T01:28:34.244Z"}
{"msg":"\n1. I think we need to retain some simple examples even if Caliper is published as an npm package. If they are separated, it would make user difficulty to use it.\n2.  About the networks, agree with @klenik .\nSince Caliper is a tool, all the changes we make must first consider whether it is convenient for users.","username":"panyu2","ts":"2018-12-22T01:28:34.244Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 6am on 1.9. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2018-12-22T01:28:34.244Z"}
{"msg":"sure, though we could add an npm script into the package to pull down the samples into a known directory relative to caliper itself ","username":"nkl199","ts":"2018-12-22T08:08:32.366Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 8am on 1.9. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2019-01-08T08:47:21.448Z"}
{"msg":".... anyone else joining the meeting?","username":"nkl199","ts":"2019-01-09T08:09:48.261Z"}
{"msg":"@nkl199 ，I'm sorry. I was on the business trip yesterday, so I missed the meeting.","username":"panyu2","ts":"2019-01-10T08:56:23.136Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 8am on 1.16. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2019-01-15T06:12:45.667Z"}
{"msg":"Has joined the channel.","username":"wangqq","ts":"2019-01-15T06:15:06.116Z","type":"uj"}
{"msg":"Can't make the call today (again), sorry. But good news is, that I've almost finished the documentation for the new adapter, so I'm raising the PRs today (finally)","username":"klenik","ts":"2019-01-16T07:23:19.932Z"}
{"msg":":thumbsup:","username":"panyu2","ts":"2019-01-16T07:34:16.488Z"}
{"msg":"@klenik @nkl199 about the FAQ, do you have some suggestions?","username":"panyu2","ts":"2019-01-16T07:39:44.788Z"}
{"msg":"@klenik @nkl199 about the FAQ, do you have any suggestions?","username":"panyu2","ts":"2019-01-16T07:39:44.788Z"}
{"msg":"it looks good in general, found some typos, so maybe a look-through is still needed (I suggest Grammarly, it's awesome)","username":"klenik","ts":"2019-01-16T07:47:02.471Z"}
{"msg":"Hello again everyone :) and happy new year","username":"gregdhill","ts":"2019-01-16T11:07:30.023Z"}
{"msg":"Got a new Burrow related PR https://github.com/hyperledger/caliper/pull/282","username":"gregdhill","ts":"2019-01-16T11:07:44.438Z"}
{"msg":"also fixes some of the typos in the adapter documentation","username":"gregdhill","ts":"2019-01-16T11:08:14.590Z"}
{"msg":"Has joined the channel.","username":"Bayeed","ts":"2019-01-18T20:53:35.322Z","type":"uj"}
{"msg":"Hi! I have a simple node.js app which uses fabcar network. My intention is to test it with Caliper but having problems with lack of resources/documentations/tutorials on this. Can anyone help me out with some directions or suggestions? Thank you in advance. ","username":"Bayeed","ts":"2019-01-18T20:54:12.261Z"}
{"msg":"Has joined the channel.","username":"amiec","ts":"2019-01-19T15:32:42.514Z","type":"uj"}
{"msg":"Hi all, I have a question about Caliper and the metric \"stale block rate\".  \"Stale blocks\" refer to blocks that are valid and published despite the fact that an earlier block has already been published to the network.  This obviously only occurs in Proof-of-Work-style consensus (such as PoET - which is why I'm bringing it up), and it occurs when two or more blocks are published very close in time to each other, such that a node publishes a block before seeing the earlier valid block.  Stale block rate is an important metric for both performance and security of a PoW-style system.  The higher the number of stale blocks, the more vulnerable the network is to forking attacks and the more performance degradation is experience by the validators (throughput goes down).  The folks who wrote BLOCKBENCH have a way to measure stale block rate (at least, these metrics are published in this paper https://arxiv.org/pdf/1804.00399.pdf).  I want to use Caliper with Sawtooth and get a handle on stale block rate in the network.  My questions are:  1) has any work been done to this effect?  2) if not, would it be a good thing to contribute to this project?  3) if so, does anybody have any ideas for me in terms of how to start approaching that project?  I've started to dissect Caliper code but it's certainly a lot to swallow!  Please and thank you very much.","username":"amiec","ts":"2019-01-19T15:40:04.117Z"}
{"msg":"Has joined the channel.","username":"DmitriPlakhov","ts":"2019-01-21T12:39:34.392Z","type":"uj"}
{"msg":"@Bayeed Hope this website can help you. https://hyperledger.github.io/caliper/docs/1_Getting_Started.html","username":"panyu2","ts":"2019-01-22T07:12:54.392Z"}
{"msg":"@jiangfeihu","username":"panyu2","ts":"2019-01-22T07:17:56.701Z"}
{"msg":"@FlyingTiger what do you think about @amiec 's question?","username":"panyu2","ts":"2019-01-22T07:17:56.701Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 3pm on 1.22. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2019-01-22T07:21:03.045Z"}
{"msg":"I have raise the pr to support fabric 1.4 release changes. - https://github.com/hyperledger/caliper/pull/290","username":"rkrish82","ts":"2019-01-22T10:52:31.776Z"}
{"msg":"Please some one review it","username":"rkrish82","ts":"2019-01-22T10:52:39.538Z"}
{"msg":"@panyu2 @nkl199 ","username":"rkrish82","ts":"2019-01-22T10:52:55.948Z"}
{"msg":"@amiec To your questions, first one, Caliper has no work been done to this effect. Second and third one, welcome to contribute, you could open an issue firstly, and describe why,  what you want to do, and the goal etc, then we could talk on that issue and give some advice. ","username":"FlyingTiger","ts":"2019-01-22T12:03:20.017Z"}
{"msg":"anyone else join the meeting?","username":"panyu2","ts":"2019-01-22T15:03:50.710Z"}
{"msg":"@amiec Could you please describe how to calculate the metric \"stale block rate\" for sawtooth? So that we could judge could Caliper add this metric, and how?","username":"FlyingTiger","ts":"2019-01-23T03:44:58.478Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=F9qWGeQdBkdMLr9vN) @FlyingTiger Good idea, I will get back to you when I know more of these details (I think studying the BLOCKBENCH code may help me understand how that metric is technically acquired), and then will open an issue.  Thanks for your response!","username":"amiec","ts":"2019-01-25T17:49:44.462Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=F9qWGeQdBkdMLr9vN","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=F9qWGeQdBkdMLr9vN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@amiec OK, my pleasure","username":"FlyingTiger","ts":"2019-01-26T08:34:29.486Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 3pm on 1.29. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/projects/caliper","username":"panyu2","ts":"2019-01-28T00:58:25.581Z"}
{"msg":"@pany2","username":"rkrish82","ts":"2019-01-29T15:04:28.504Z"}
{"msg":"@panyu2 @FlyingTiger Did you guys get a chance to review the changes?","username":"rkrish82","ts":"2019-01-29T15:05:37.713Z"}
{"msg":"PR #290","username":"rkrish82","ts":"2019-01-29T15:05:47.372Z"}
{"msg":"https://github.com/hyperledger/caliper/pull/290","username":"rkrish82","ts":"2019-01-29T15:06:02.305Z"}
{"msg":"@rkrish82 Sorry for late review.  We are looking into these new support prs.  ","username":"panyu2","ts":"2019-01-29T15:22:47.539Z"}
{"msg":"Thanks","username":"rkrish82","ts":"2019-01-29T15:23:54.736Z"}
{"msg":"Hi，to whom concerns the regular meeting, since the Chinese Spring Festival is coming, the next meeting on 2.6 will be postponed. ","username":"panyu2","ts":"2019-02-03T07:31:09.110Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-02-04T18:06:08.352Z","type":"ul"}
{"msg":"@panyu2 @FlyingTiger @nkl199 If someone has some free time, the new Fabric adapter and documentation is ready:\nhttps://github.com/hyperledger/caliper/pull/296\nhttps://github.com/hyperledger/caliper/pull/297\n\nIt's \"just\" two JS files, and a bunch of examples, so never mind the number of added file :) If you have any questions to make the review easier, just ask. In the meatime, I'll take a look at the other pending PRs.","username":"klenik","ts":"2019-02-04T21:00:49.343Z"}
{"msg":"@klenik we are just back from Spring Festival Holiday. We'll review them as soon as possible. ","username":"panyu2","ts":"2019-02-11T00:52:16.127Z"}
{"msg":"@rkrish82 I had left some comments under your pr one week ago. Since new prs were merged, there are some conflicts. Would you please resolve them?","username":"panyu2","ts":"2019-02-11T00:54:49.329Z"}
{"msg":"@panyu2 sure, i will address them","username":"rkrish82","ts":"2019-02-11T03:12:49.253Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 8 am on 2.13. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"panyu2","ts":"2019-02-12T00:47:24.725Z"}
{"msg":"@rkrish82 , I saw your updates. I'll do some tests.","username":"panyu2","ts":"2019-02-12T00:47:54.226Z"}
{"msg":"@rkrish82 I've left one reply under your pr. There might have something to change.","username":"panyu2","ts":"2019-02-14T07:47:00.497Z"}
{"msg":"Hi, the bootcamp will hold at Mar 7~8,2019. Welcome everyone interested with Caliper to join  Caliper's session and tutorial. ","username":"panyu2","ts":"2019-02-14T07:51:09.413Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 3 pm on 2.19. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"panyu2","ts":"2019-02-19T03:45:09.623Z"}
{"msg":"Hi all, as suggested by Attila, we found the current rotating Caliper call schedule is kind confusing and not easy for people to keep track with.\nSo we're going to simplify the schedule to a fixed one, as every Wednesday, 9am UTC time.","username":"hurf","ts":"2019-02-20T10:53:19.584Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 9 am on 2.27. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"panyu2","ts":"2019-02-26T09:53:05.976Z"}
{"msg":"@panyu2 @hurf @FlyingTiger Started adding some potential bootcamp tasks to the end of the dev docs. Intended topics: improve logging support, improve config support, improve module life-cycle management/protocol, modularize rate controller implementations, modularize user callback implementations  (the loggig task is almost finished in the doc)","username":"klenik","ts":"2019-02-26T13:20:30.160Z"}
{"msg":"@rjones Could you update the meeting calendar for Caliper please? Now we have a fix schedule for every Wednesday at 9AM UTC. Thanks!","username":"klenik","ts":"2019-02-26T14:03:23.919Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-02-26T14:03:25.361Z","type":"uj"}
{"msg":"@klenik please send a request to community-architects@hyperledger.org and lay out directly what you need, thanks","username":"rjones","ts":"2019-02-26T19:27:08.183Z"}
{"msg":"@rjones will do! ","username":"klenik","ts":"2019-02-26T19:28:02.320Z"}
{"msg":"Thanks! There are four of us on that alias, and sending it in email ensures someone will see it :)","username":"rjones","ts":"2019-02-26T19:28:32.684Z"}
{"msg":"Thanks! There are four of us on that alias, and sending it in email ensures someone will see it :O)","username":"rjones","ts":"2019-02-26T19:28:32.684Z"}
{"msg":"I know we did a bunch of adjustments in the last week, as well, when @panyu2 asked for it","username":"rjones","ts":"2019-02-26T19:29:40.264Z"}
{"msg":"when I say _we_ I mean _I_","username":"rjones","ts":"2019-02-26T19:32:09.260Z"}
{"msg":"Yes, but since then we came to the conclusion that the flexible (and complicated) schedule didn't bring new people to the calls, however, it complicated the life of the core developers 😁","username":"klenik","ts":"2019-02-26T19:32:41.906Z"}
{"msg":"right now, it's 0900-1000 UTC","username":"rjones","ts":"2019-02-26T19:32:42.225Z"}
{"msg":"there's only one meeting on the calendar that I see","username":"rjones","ts":"2019-02-26T19:33:29.656Z"}
{"msg":"Ah, you're right! Today my calendar notified me about the old schedule B meeting, that's why I started this thread. Should've checked first, sorry 😅","username":"klenik","ts":"2019-02-26T19:36:05.875Z"}
{"msg":"I did send cancellation notices to the list, I thought. Perhaps I missed one though","username":"rjones","ts":"2019-02-26T19:36:52.542Z"}
{"msg":"Hi，to whom concerns the regular meeting, since the team will on the way to attend the bootcamp event on 3.7~3.8 at HongKong, tomorrow's meeting will be canceled. Welcome everyone who will attend the bootcamp event to join Caliper's activities at Table 3.","username":"panyu2","ts":"2019-03-05T01:23:13.240Z"}
{"msg":"Hi，to whom concerns the regular meeting, since there is a conflict on the conference today, today's meeting will be canceled.","username":"panyu2","ts":"2019-03-13T05:51:34.152Z"}
{"msg":"Has joined the channel.","username":"MHBauer","ts":"2019-03-19T01:24:06.185Z","type":"uj"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 9 am on 3.20. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"panyu2","ts":"2019-03-19T08:41:56.194Z"}
{"msg":"I'll be a few minutes late, sorry","username":"klenik","ts":"2019-03-20T08:56:56.949Z"}
{"msg":"some more information on the potential use of worker threads for local clients: https://blog.logrocket.com/node-js-multithreading-what-are-worker-threads-and-why-do-they-matter-48ab102f8b10","username":"nkl199","ts":"2019-03-21T13:11:44.796Z"}
{"msg":"they are an experimental feature of node 10.5","username":"nkl199","ts":"2019-03-21T13:12:00.859Z"}
{"msg":"they are an experimental feature of node 10.5","username":"nkl199","ts":"2019-03-21T13:12:00.859Z"}
{"msg":"they are an experimental feature of node 10.5 - some more information here, relating to Node11 https://codeforgeek.com/2019/01/getting-started-node-worker-thread/","username":"nkl199","ts":"2019-03-21T13:12:00.859Z"}
{"msg":"Hi all, just to let you know that I have started on the refactor to enable npm publishing ... I would recommend holding off any big PRs until it is complete/approved/delivered :joy: ","username":"nkl199","ts":"2019-03-25T17:00:34.240Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-03-25T17:11:45.471Z","type":"ul"}
{"msg":"Copy that","username":"hurf","ts":"2019-03-26T11:50:25.037Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 9 am on 3.27. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"panyu2","ts":"2019-03-27T05:53:36.490Z"}
{"msg":"Might be a few minutes late ","username":"klenik","ts":"2019-03-27T08:51:08.233Z"}
{"msg":"Has joined the channel.","username":"rohanjulka19","ts":"2019-04-01T18:14:09.740Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ZichengWang","ts":"2019-04-01T20:44:30.693Z","type":"uj"}
{"msg":"Hi all - I've been using Caliper with Sawtooth and have generated some initial experimental runs.  A given experiment involves a series of rounds in which the txn delivery rate increases from ~5 tps to 45 tps stepping by 10 tps.  Each round is duration-based and lasts about a minute.  I'm seeing some strange measurements where the throughput is reported as 0 for a given round with some frequency.  I'm in the process of trying to figure out what's going on here, and I have a few theories that are likely to do with my backend system, but in order to think clearly I need to know EXACTLY how Caliper measures and reports \"throughput\".  I would greatly appreciate any thoughts on the following questions:\n\nHow is throughput calculated using the Sawtooth adaptor?  For example, are transactions considered \"put through\" once they have been committed to the blockchain in a block?\n\nAdditionally, how does this notion of throughput span across various rounds in the same experiment?  For example, the backend system doesn't know anything about the rounds... so it seems possible that block commits that occur very close to the border of rounds (duration-based in particular) could have the power to distort the reported throughput, causing some rounds to report high throughput while neighboring rounds report little or no throughput?  How does Caliper delimit throughput measurements with regard to rounds?\n\nMy difficulties arise from the fact that PoET consensus has a probabilistic aspect to it, and while blocks may be published *on average* at a rate of target_wait_time, there may be anomalous wait times that cause blocks to be published in a more sporadic way.  I would greatly appreciate any wisdom or advice that this community can share with me that will help me better design my experiments and trust the output.  I hope to contribute significantly to the Caliper project, but I definitely need some help!  Thank you!!\n\n","username":"amiec","ts":"2019-04-02T23:54:41.243Z"}
{"msg":"Can't make it to today's call, I have a conflicting meeting :/","username":"klenik","ts":"2019-04-03T07:11:50.732Z"}
{"msg":"sorry - was 10 mins late today ... tho suspect there might be a hiccup this week due to daylight savings kicking in and making me 50mins early instead :joy: ","username":"nkl199","ts":"2019-04-03T08:10:49.202Z"}
{"msg":"@amiec - thanks for reaching out. I will confess to have mainly been involved in Fabric/Composer benchmarks and not Sawtooth .. though I am cutting my teeth with that one now. From an initial dive into the code, the Sawtooth adaptor is similar to FabricComposer in that it waits for block commit events until marking a transaction as successful. My knowledge on Sawtooth itself is a little weak, but I know in Fabric the blocks are written based on both size and timeout limits. \n\nEach round is sequenced with a time interval (5 second gap between rounds iirc), and rounds only proceed upon completion (pass/fail) of all transactions in the current round. Time interval benchmarks submit transactions for a given time, but will still wait for all of the submitted transactions to pass/fail before moving on. Each round has it's own throughput measurement, tho the console displayed statistics do confuse this because as the benchmark runs it shows details of the complete benchmark and not individual benchmark rounds (ie the current status of success/fail/unfinnished txns)","username":"nkl199","ts":"2019-04-03T08:25:32.666Z"}
{"msg":"Hi all ( @panyu2 @klenik @hurf ). As promised, I have been working on the refactor to split the Caliper code base into modules that can be published to NPM. This is now available for inspection/comment on my personal branch https://github.com/nklincoln/caliper-1/tree/refactor-for-publishing\n\nWorking adaptors are:\n-fabric\n-fabric-ccp\n-composer\n\nOne of the new dependancies in the \"main\" Caliper repository is Lerna, which helps with dependancy management between all the packages. If you clone my branch, to build it you will need to run:\n- `npm run repoclean`\n- `npm run bootstrap`\nIn the root caliper folder.\n\nTo run a benchmark, there is a ReadMe file in /caliper/pacakges/caliper-application that essentially runs the `run.js` script with some args. Remember that only 3 of the adaptors are currently working ... Iroha seems to ignore the expected Caliper operation, I on the maintainers calls this morning I heard thaa the Sawtooth adapter has been modified ","username":"nkl199","ts":"2019-04-03T11:09:31.024Z"}
{"msg":"My suspicion is that there will soon be another pacakge called caliper-cli, which is essentially just the run.js script ... once users have that, then they can run a benchmark by passing a few workspace folder items only.... rather neat! We would still need the caliper-application package to include in our regression tests","username":"nkl199","ts":"2019-04-03T11:11:50.339Z"}
{"msg":"I will continue working on remaining adapters and update the branch as I do so","username":"nkl199","ts":"2019-04-03T11:33:51.803Z"}
{"msg":"... anyone here have experience using caliper with either:\n-burrow\n-sawtooth\n?","username":"nkl199","ts":"2019-04-03T15:16:08.588Z"}
{"msg":"@nkl199  thanks so much for the prompt response! A followup question if you don't mind: my workloads are sometimes going to exceed the processing capacity of my validator and/or consensus algorithm.  For a while, this means transactions queuing up, until eventually they begin to be dropped entirely (when the queue is full).  Based on what you know about how Caliper calculates its metrics and how it handles rounds, what effect might this have on my results?  Because you mention that it will submit transactions for the given duration, but then still wait for all the submitted transactions to pass/fail before moving on...  If a transaction is completely dropped (never makes it into a queue), does Caliper handle this correctly and call it a \"failure\" ?   I'm trying to figure out how this might lead to round measurements that are 0...","username":"amiec","ts":"2019-04-03T15:53:53.965Z"}
{"msg":"Hmmm, good question! I would recommend using the `FixedFeedbackRate` controller that allows you to target a fixed TPS, but will throttle back if a txn threshold is exceeded. \n\nCaliper will consider a dropped txn as a failure (so long as the SUT rejects the transaction via timeout ... fabric does this for sure). Any failures will skew results, and sometimes make the possible tps ","username":"nkl199","ts":"2019-04-03T16:03:04.765Z"}
{"msg":"FixedFeedbackRate! That's a great idea and will try some experiments with that.  I'm not sure what Sawtooth does regarding dropped transactions... I'm not sure if a Sawtooth SUT formally rejects it in a way that Caliper would be notified about... It may be the case that it is simply ignored completely in the case of a full queue (in which case it sounds like that would screw up Caliper).  I'll try to ask the Sawtooth folks.","username":"amiec","ts":"2019-04-03T18:46:51.390Z"}
{"msg":"Ok so the Sawtooth developers said that \"you will get a \"queue full\" error, as an HTTP 429 error status\" when a transaction is submitted to a validator that already has a full queue.  Does anybody know if/how Caliper reacts to a message of this type?","username":"amiec","ts":"2019-04-03T19:31:51.907Z"}
{"msg":"@nkl199 , Burrow is written by @gregdhill ; @houqinghui is currently working on irhoa's adapter; as for the sawtooth, you can ask @FlyingTiger  the adapter issues. ","username":"panyu2","ts":"2019-04-04T01:27:13.526Z"}
{"msg":"@nkl199 , this PR (https://github.com/hyperledger/caliper/commit/382c58c0fe15cf4c23a580747a788c881f4cbbce#diff-e991dbbc99a0c765d2e19e0a88cbd007) specified current supporting 1.0.5 version Transaction Processor of sawtooth. just a small change.","username":"panyu2","ts":"2019-04-04T01:34:23.684Z"}
{"msg":"Thanks - I've rolled in the above change and the PR400.... I have also got the sawtooth adaptor working now ... ","username":"nkl199","ts":"2019-04-04T11:31:14.977Z"}
{"msg":"OK, so my current investigations on `main` are that neither iroha or burrow have working benchmarks ... can anyone else confirm?","username":"nkl199","ts":"2019-04-04T11:47:28.719Z"}
{"msg":"Hi, Travis build has now been fixed - it fails on failing benchmarks and passes when it should only. It has been swapped across to run benchmarks using the new packages :thumbsup: . Pending confirmation on the state of burrow/iroha benchmarks before raising the official PR ... then comes the small issue of updating the docs :joy: ","username":"nkl199","ts":"2019-04-04T13:27:46.441Z"}
{"msg":"@nkl199 I'll look into your fork tonight/tomorrow. About the adapter interfaces: we really need to unify them on the init/invoke/query level, otherwise writing quasi-crossplatform benchmarks will be a nightmare.","username":"klenik","ts":"2019-04-04T14:50:30.566Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=YCZxFTQjN9hTed98x) @nkl199 Hi @nkl199 , two quick followup questions if you can: 1) I started performing some experiments with FixedFeedbackRate as my ratecontroller, and I used values for unfinished_per_client of first 100, and then of 10.  My delivery rate was 40 TPS, which I expect to be a little bit high for my system but not crazy.  In both cases, I saw plenty of throughput measurements of 0.0... Despite running the simulation for between 1000 and 2000 seconds (should have been PLENTY of time to get many blocks published, throughput should definitely not be 0, unless there is some sort of thrashing going on, or perhaps errors in the measurement system)  My question is then: do you have any recommended value for unfinished_per_client??  I was additionally confused by the fact that I saw many queue_full errors popping up during these fixed-feedback simulations (many more than 10!), and I would have thought that the fixed_feedback controller would have throttled back in that case... it makes me wonder if it is working correctly for Sawtooth??  2) Your last sentence \"Any failures will skew results, and sometimes make the possible tps\" seems incomplete, and I'm wondering if you can elaborate on how transaction failures might skew results?  In what way might they be skewed?  \n","username":"amiec","ts":"2019-04-05T15:30:32.979Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=YCZxFTQjN9hTed98x","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=YCZxFTQjN9hTed98x","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi @amiec  - yeah, that sentence was cut off (not sure where the rest of it went!) - failing transactions complete faster than passing transactions (in general), so the resulting TPS will be higher than it should be","username":"nkl199","ts":"2019-04-08T08:31:19.881Z"}
{"msg":"I'd recommend @FlyingTiger for sawtooth adapter advice","username":"nkl199","ts":"2019-04-08T08:31:56.754Z"}
{"msg":"@amiec Could you please provide the whole log file for your test? The log file default locate on caliper/log directory.\n Caliper Sawtooth adapter now do not use specifically an HTTP 429 response.","username":"FlyingTiger","ts":"2019-04-08T12:26:05.041Z"}
{"msg":"Thank you @nkl199 and @FlyingTiger ! FlyingTiger I've sent the logs via a DM.  I have some more questions and I'll just start with one here to keep from overwhelming:  If the adapter doesn't use the 429 response, what is the \"lifecycle\" of a transaction that is submitted to a full queue and therefore dropped?  For example: Caliper generates and submits the transaction... it has some internal record of having done so.  The transaction is dropped and a 429 response comes back to Caliper but is ignored.  Caliper then.... considers this transaction \"unfinished\"? for how long? are there timeouts?  How long until the transaction is considered a \"failure\"? Is it ever?  With regard to the fixed-feedback-rate controller... it needs to have a notion of how many \"unfinished\" there are at any given time, so what is that notion?  Thank you!","username":"amiec","ts":"2019-04-08T23:34:29.230Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 9 am on 4.10. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper\n","username":"panyu2","ts":"2019-04-10T02:41:42.539Z"}
{"msg":"Apologies, can't make today's call :/","username":"klenik","ts":"2019-04-10T07:25:57.675Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-04-13T00:08:41.365Z","type":"uj"}
{"msg":"Could I ask Caliper maintainers to please join https://lists.hyperledger.org/g/maintainers ? I'd appreciate it.","username":"rjones","ts":"2019-04-13T00:08:51.217Z"}
{"msg":"Could I persuade the owner of the planning document in the channel header to migrate it to the wiki? https://docs.google.com/document/d/1QQFmuRW4QXk0HCUIw1NoqweNQBnQ4P3eOhAE10m1vng/edit#","username":"rjones","ts":"2019-04-15T19:40:49.989Z"}
{"msg":"the tutorial and planning document are already linked from https://wiki.hyperledger.org/display/caliper","username":"rjones","ts":"2019-04-15T19:41:30.123Z"}
{"msg":"@rjones , the planning document which is same as the 'Development Working Document' has already been linked to the wiki.","username":"panyu2","ts":"2019-04-16T01:42:30.792Z"}
{"msg":"@panyu2 what I mean, is the content on the wiki","username":"rjones","ts":"2019-04-16T01:42:58.944Z"}
{"msg":"Got it. We are making a new plan, and after it is done we will release it to the wiki and current document will be replaced.  @rjones ","username":"panyu2","ts":"2019-04-16T01:47:31.873Z"}
{"msg":"OK thank you very much","username":"rjones","ts":"2019-04-16T01:47:55.740Z"}
{"msg":"@rjones joined the group.","username":"panyu2","ts":"2019-04-16T02:15:55.035Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 9 am on 4.17. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"panyu2","ts":"2019-04-16T02:15:57.659Z"}
{"msg":"@panyu2 @nkl199 @hurf @FlyingTiger The call starts now, right? Or did I mess up the time again?","username":"klenik","ts":"2019-04-17T08:02:33.854Z"}
{"msg":"@klenik the meeting will take place at UTC 9 am on 4.17. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"houqinghui","ts":"2019-04-17T08:04:51.918Z"}
{"msg":"Ah, summer time, love these fluctuating time zones... \"see\" you in an hour :)","username":"klenik","ts":"2019-04-17T08:07:28.574Z"}
{"msg":"something to look at using: https://sonarcloud.io","username":"nkl199","ts":"2019-04-17T11:13:02.111Z"}
{"msg":"gives a very good GA gate for the code base","username":"nkl199","ts":"2019-04-17T11:13:14.276Z"}
{"msg":"-> highlights bugs, \"code-smells\" etc ","username":"nkl199","ts":"2019-04-17T11:14:42.484Z"}
{"msg":"we should of course be aiming to carry zero bugs ;-)","username":"nkl199","ts":"2019-04-17T11:14:58.321Z"}
{"msg":"and it is free for open source projects :tada: :money_with_wings: ","username":"nkl199","ts":"2019-04-17T11:17:18.856Z"}
{"msg":"Has joined the channel.","username":"julient","ts":"2019-04-23T16:29:16.501Z","type":"uj"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 9 am on 4.24. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"panyu2","ts":"2019-04-24T06:01:16.263Z"}
{"msg":"@panyu2 et al. Hi, won't be able to attend the call today, project work stuff conflict... Update: I improved the runtime config (nconf) support, writing the docs for it currently, plus planning the \"test your own fabric network\" tutorial. ","username":"klenik","ts":"2019-04-24T06:15:27.798Z"}
{"msg":"@klenik got it.","username":"panyu2","ts":"2019-04-24T06:16:14.610Z"}
{"msg":"@klenik Do you have any suggestions on Nick's PR 405？","username":"panyu2","ts":"2019-04-24T06:18:32.194Z"}
{"msg":"Didn't have a chance to look at it yet in detail, I'll try to commit some time to it tonight ","username":"klenik","ts":"2019-04-24T06:20:40.539Z"}
{"msg":"@nkl199  Hi Nick, what were you doing when we were having the meeting today? ","username":"houqinghui","ts":"2019-04-24T09:49:50.935Z"}
{"msg":"@nkl199  Hi Nick, are you busy today, we were looking forward hearing from you in today's meeting.","username":"houqinghui","ts":"2019-04-24T09:49:50.935Z"}
{"msg":"apologies, i've been travelling (currently in the states) and lost track of what day it is :face_palm_tone2: ","username":"nkl199","ts":"2019-04-24T13:46:44.684Z"}
{"msg":"Got it. Have a nice trip.","username":"houqinghui","ts":"2019-04-25T01:02:28.423Z"}
{"msg":"thanks :D I saw that the new packaging structure has been merged (As has the docs) - I'm going to raise some issues relating to what was spotted during the review process so that they do not get lost ","username":"nkl199","ts":"2019-04-25T13:36:50.904Z"}
{"msg":"Does Caliper work with MacOS?","username":"amiec","ts":"2019-04-25T13:50:37.987Z"}
{"msg":"yes","username":"nkl199","ts":"2019-04-25T13:57:01.746Z"}
{"msg":"yes - I use a mac :thumbsup: ","username":"nkl199","ts":"2019-04-25T13:57:01.746Z"}
{"msg":"Hello everyone! Are you planning / already working on benchmarking Corda? Is there I way I could contribute to this work? thanks for your reply, Julien","username":"julient","ts":"2019-04-29T07:15:13.928Z"}
{"msg":"Hello everyone! Are you planning / already working on benchmarking Corda? Is there a way I could contribute to this work? thanks for your reply, Julien","username":"julient","ts":"2019-04-29T07:15:13.928Z"}
{"msg":"@julient , we are planning to work on Corda, but this work has not started yet. Any contribution to this work is appreciated. As for supporting Corda, an adapter should be written.  Here is the documentation about how to write an  adapter https://hyperledger.github.io/caliper/docs/Writing_Adapters.html, you can read this and other existed adapters and learn to write an  corda adapter. Feel free to ask any questions about it. :slight_smile:","username":"panyu2","ts":"2019-04-30T00:57:56.791Z"}
{"msg":"Hi，to whom concerns the regular meeting, since there is a conflict between the regular meeting  and International Labor Day vocation, the meeting on 5.1 will be canceled . ","username":"panyu2","ts":"2019-04-30T01:11:39.616Z"}
{"msg":"@russanto - Hi, figured that I should answer your question in the general channel here. The packaging refactor is the biggest change that is going to be present going forward, it was necessary in order to enable publishing modules to npm. There is a roadmap being worked on and that will be released ASAP, but there should not be any significant changes any time soon - the biggest future change is moving the caliper clients into Docker containers, though this is not planned just yet","username":"nkl199","ts":"2019-05-02T09:17:55.207Z"}
{"msg":"Has joined the channel.","username":"russanto","ts":"2019-05-02T09:17:56.994Z","type":"uj"}
{"msg":"I submitted a PR with the ethereum adapter I wrote","username":"russanto","ts":"2019-05-06T22:32:28.318Z"}
{"msg":"I submitted a PR with the ethereum adapter I wrote. I hope it can be useful.","username":"russanto","ts":"2019-05-06T22:32:28.318Z"}
{"msg":"@russanto :thumbsup:, we will review it soon.","username":"panyu2","ts":"2019-05-07T03:02:04.557Z"}
{"msg":"Hi，to whom concerns the regular meeting, some of the team members will attend a blockchain meeting in China during the regular meeting time, so this week's meeting will be canceled.","username":"panyu2","ts":"2019-05-07T03:05:01.067Z"}
{"msg":"With regards to the above - I'll hop on the call at the regular time anyhow, just in case anyone else turns up ... if nobody is there after 10mins, I'll hang up :thumbsup: ","username":"nkl199","ts":"2019-05-07T16:27:07.126Z"}
{"msg":"@russanto thanks a lot for your contribution. It is exact what Caliper needed. ","username":"hurf","ts":"2019-05-08T05:39:53.376Z"}
{"msg":"Recently we've been changing folder structures to support easier packaging and installation. Sorry for the inconvenience brought to you. ","username":"hurf","ts":"2019-05-08T05:41:39.508Z"}
{"msg":"It is planned to have some change to the API and try to fix it to make the development stable. ","username":"hurf","ts":"2019-05-08T05:42:54.696Z"}
{"msg":"The roadmap is under discussion, we had a draft of it. I'm happy you can also join the discussion. @houqinghui can share with you the draft roadmap including milestones and planned features.","username":"hurf","ts":"2019-05-08T05:44:27.349Z"}
{"msg":"","username":"nkl199","ts":"2019-05-10T13:01:20.338Z","attachments":[{"type":"file","title":"Clipboard - May 10, 2019 2:01 PM","title_link":"/file-upload/h3pkH5KZKeGPThTJu/Clipboard%20-%20May%2010,%202019%202:01%20PM","image_url":"/file-upload/h3pkH5KZKeGPThTJu/Clipboard%20-%20May%2010,%202019%202:01%20PM","image_type":"image/png","image_size":8898,"url":"/file-upload/h3pkH5KZKeGPThTJu/Clipboard%20-%20May%2010,%202019%202:01%20PM","remote":false,"fileId":"h3pkH5KZKeGPThTJu","fileName":"Clipboard - May 10, 2019 2:01 PM"}]}
{"msg":"Hi, I've been experimenting with a few things and I have the following to report:\n- the use of worker threads is currently blocked by gRPC. The underlying C implementation would need to be changed in order for the javascript wrapper to operate correctly. Even if we were to make that change, getting the PR in and then picked up and/or backported is unrealistic. The best option left for us here is to press on with dockerising the clientFactory, and have it spawn client containers of a specific flavour (node/java/go etc)\n- I've created a caliper-cli package that enables running of a benchmark using the command `caliper benchmark run -w <workspace location> -c <bench config file, relative to workspace> -n <blockchain config file, relative to workspace>`, if we go ahead with this then we should look at pulling all the utility scripts into it (`caliper benchmark list` | `caliper zooclient start` etc)","username":"nkl199","ts":"2019-05-10T13:04:11.125Z"}
{"msg":"> have it spawn client containers of a specific flavour \n@nkl199 What do you mean by this? Since we don't have a common glossary, I'm a little lost in the client terminology :sweat_smile: ","username":"klenik","ts":"2019-05-10T13:06:55.221Z"}
{"msg":"haha sorry - a ClientFactory Docker container could spawn and communicate with new CaliperClient Docker containers ... since we would likely be pulling those from `dockerhub/caliper` we could have different sdk clients as opposed to the current nodeJS limitation","username":"nkl199","ts":"2019-05-10T13:08:56.424Z"}
{"msg":"haha sorry - a ClientFactory Docker container could spawn and communicate with new CaliperClient Docker containers ... since we would likely be pulling those from `dockerhub/caliper` we could have different language sdk clients as opposed to the current nodeJS limitation","username":"nkl199","ts":"2019-05-10T13:08:56.424Z"}
{"msg":"so basically we open up the possibility to implement the adapters in other languages with other SDKs while keeping the perf and metric monitoring/reporting intact? :thinking: ","username":"klenik","ts":"2019-05-10T13:12:45.400Z"}
{"msg":"yup","username":"nkl199","ts":"2019-05-10T13:20:39.429Z"}
{"msg":"Although the rate controller and user callback logic are in the same process for efficiency reasons, so those must be ported to different languages as well if we want multi language support. But first let's stabilize the Node.JS implementation :D","username":"klenik","ts":"2019-05-10T14:15:56.716Z"}
{"msg":"... settled at the Consensus/Construct conference, it's nice here (aside from the weather) :thumbsup: ","username":"nkl199","ts":"2019-05-13T12:34:29.101Z"}
{"msg":"... settled at the Consensus/Construct conference, it's nice here (aside from the weather) :thumbsup: This does mean that I will be unable to attend the maintainers call this week tho ... my main updates are above though.","username":"nkl199","ts":"2019-05-13T12:34:29.101Z"}
{"msg":"... settled at the Consensus/Construct conference, it's nice here (aside from the weather) :thumbsup: This does mean that I will be unable to attend the maintainers call this week ... my main updates are above though.","username":"nkl199","ts":"2019-05-13T12:34:29.101Z"}
{"msg":"@nkl199 stop by the booth - we have trucker hats!","username":"rjones","ts":"2019-05-13T12:50:31.484Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 9 am on 5.15. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"houqinghui","ts":"2019-05-14T03:59:47.320Z"}
{"msg":"I completely forgot about the meeting, I would participate.","username":"russanto","ts":"2019-05-15T10:10:53.045Z"}
{"msg":"Why smallbank benchmark is the only one to use \"transaction_type\" key for the workload generation instead of \"verb\" ?","username":"russanto","ts":"2019-05-15T10:11:52.368Z"}
{"msg":"@russanto I guess Sawtooth expects the transaction spec in a different format. We'll need to come up with a high level builder pattern for creating tx invoke options, so this part of the user modules can also be platform independent (more or less) ","username":"klenik","ts":"2019-05-15T10:31:25.163Z"}
{"msg":"@russanto Ok, see you next week.","username":"houqinghui","ts":"2019-05-16T01:16:29.381Z"}
{"msg":"@klenik Hi attila, were you busy yesterday? we were looking forward to hearing from you in the meeting.","username":"houqinghui","ts":"2019-05-16T01:29:35.215Z"}
{"msg":"@houqinghui Yes, sorry, I have a paper deadline tomorrow, so life is quite chaotic right now (so much that I even completely forgot about the call) :/ Anything in particular you'd like to discuss? We could utilize this channel more, it's faster than discussing things only on the weekly calls :)","username":"klenik","ts":"2019-05-16T11:05:08.358Z"}
{"msg":"+1 to the above","username":"nkl199","ts":"2019-05-16T11:39:45.767Z"}
{"msg":"(more discussion on this channel on work in progress etc)","username":"nkl199","ts":"2019-05-16T11:40:01.999Z"}
{"msg":"Has joined the channel.","username":"raj_shekhar","ts":"2019-05-16T11:53:14.117Z","type":"uj"}
{"msg":"Has joined the channel.","username":"circlespainter","ts":"2019-05-18T07:37:24.946Z","type":"uj"}
{"msg":"Hi Team,\nIs Caliper is compatible with fabric 1.4.x??","username":"raj_shekhar","ts":"2019-05-20T05:29:08.804Z"}
{"msg":"@raj_shekhar Yes,  you can use Caliper to test your own  blockchain network if it has been  supported. This is the doc site https://hyperledger.github.io/caliper/docs/1_Getting_Started.html, which can guide you how to use Caliper.","username":"houqinghui","ts":"2019-05-20T07:05:42.770Z"}
{"msg":"In the documents it is mentioned that \"the lastest version that has been verified is v1.1.0\"","username":"raj_shekhar","ts":"2019-05-20T07:10:04.324Z"}
{"msg":"In the documents it is mentioned that \"the lastest version that has been verified is v1.1.0\" @houqinghui ","username":"raj_shekhar","ts":"2019-05-20T07:10:04.324Z"}
{"msg":"I want to know if anybody tried for fabric 1.4.x","username":"raj_shekhar","ts":"2019-05-20T07:10:23.345Z"}
{"msg":"@raj_shekhar The doc is probably outdated on that account. Check out the Fabric-ccp adapter doc, it's definitely uo2date","username":"klenik","ts":"2019-05-20T08:39:43.136Z"}
{"msg":"@raj_shekhar The doc is probably outdated on that account. Check out the Fabric-ccp adapter doc, it's definitely up2date","username":"klenik","ts":"2019-05-20T08:39:43.136Z"}
{"msg":"yeah","username":"raj_shekhar","ts":"2019-05-20T08:40:48.898Z"}
{"msg":"just one more thing - what is the difference between , Fabric and Fabric CCP ?","username":"raj_shekhar","ts":"2019-05-20T08:41:22.933Z"}
{"msg":"The latter was implemented from scratch to utilize the common connection profile (ccp) feature of the sdk. It has some extra features from a usability point of view.","username":"klenik","ts":"2019-05-20T08:43:45.474Z"}
{"msg":"thanks @klenik ","username":"raj_shekhar","ts":"2019-05-20T08:44:27.214Z"}
{"msg":"Hi，to whom concerns the regular meeting, the meeting will take place at UTC 9 am on 5.15. The link of the meeting can be found on the Caliper's wiki https://wiki.hyperledger.org/display/caliper","username":"houqinghui","ts":"2019-05-21T02:07:28.717Z"}
{"msg":"@klenik I'm working on the ethereum adapter to bring some modification and improvements. When finished I'll dedidcate some time to the doc you requested on the PR","username":"russanto","ts":"2019-05-21T09:29:36.700Z"}
{"msg":"Just some agenda item ideas for tomorrow's call (not in priority order):\n1) Deprecating the old Fabric adapter (hard to maintain, lot of related issues/fires to put out, only provides the extra tx-mode feature compared to the CCP adapter, and haven't seen active usage of it in the community)\n2) Modularizing the core package (make the flow, monitor, client, reporting parts more object-oriented with clean APIs), a must-have for starting versioning\n3) Brainstorming about how a useful Caliper UI would look like (more importantly, what it should be able to do), this would facilitate the integration of the internship project that starts soon\n4) Being more strict about github issues (misconfig should be forwarded here or to the mailing list, only real bugs and enhancements should be tracked through github issues)\n5) Cathcing up about what's everyone working on :)\n6) Other things you can think of","username":"klenik","ts":"2019-05-21T21:01:43.972Z"}
{"msg":"@houqinghui @panyu2 Just to be sure, the call starts in 1 hour and 20 minutes, right? :D","username":"klenik","ts":"2019-05-22T07:39:13.653Z"}
{"msg":"@klenik Yes:grinning: ","username":"houqinghui","ts":"2019-05-22T07:39:56.529Z"}
{"msg":"Hi all, so one of the things I was working on within the Fabric adaptor is the ability to create a channel configuration transaction directly, through using the protobufs. I've achieved this (finally) and now we can create channels without the need for a channel.tx file ... which raises the question ... how about we just don't use them? We have some options:\n1) insert the `createChannelTxEnvelope` code into the fabric-ccp adapter in-place of the `_getChannelConfigFromConfiguration` and enable the provision of a tx file, *or* the creation of a channelConfigTxn so that people can use either option. This will retain a code path fork at the point of channel creation, but introduce the need to support two different channel descriptors in the fabric.json blockchain config file.\n2) Only use the channelConfigTxn route and replace the other routes\n\nEither way, the manner in which the channel is created should be invisible to a user. My opinion is that enabling a channel description in the blockchain config file is ideal, since it means they have no additional steps to perform and can control it within a single (blockchain) config file instead of messing with separate config.tx files ... should they wish to create/interact with more channels. That's just my opinion though\n\nHappy to kick off a discussion about the above here :thumbsup: ","username":"nkl199","ts":"2019-05-22T14:48:52.950Z"}
{"msg":"@nkl199 Can you show us these codes since you have achieved this?  Creating/interacting with more channels should be supported by Caliper, i don't know wether creating a channelConfigTxn will cost much time.","username":"houqinghui","ts":"2019-05-23T08:47:13.431Z"}
{"msg":"sure - creating the channelConfigTx is super-quick, as it is \"simply\" knowing the right information to put in the protos ... it's just a shame that none of that is documented","username":"nkl199","ts":"2019-05-23T08:48:08.643Z"}
{"msg":"we would still need to generate and use the certificates, but that's not so much of an issue (IMO)","username":"nkl199","ts":"2019-05-23T08:49:06.026Z"}
{"msg":"Yep, plus channel creation is only in the init phase, so speed doesn't really matter ","username":"klenik","ts":"2019-05-23T08:50:07.655Z"}
{"msg":"ok - i'll make the change in `fabric` and `fabric-ccp` to create channels based on specification in the blockchain config file and raise a PR","username":"nkl199","ts":"2019-05-23T09:14:39.844Z"}
{"msg":":thumbsup ","username":"klenik","ts":"2019-05-23T09:15:13.511Z"}
{"msg":":thumbsup:","username":"klenik","ts":"2019-05-23T09:15:13.511Z"}
{"msg":":thinking: so ... hit the \"interesting\" aspect relating to all the different network configurations. Adding this change requires modification of 162 configuration files ... we might want to reduce this number. I agree that we want to show users (and easily test) large networks, but we may also want to limit the number we maintain ... ","username":"nkl199","ts":"2019-05-23T10:40:09.976Z"}
{"msg":"Note: I think we should keep the file-based approach also, because many users use the Fabric tooling to generate config txs.","username":"klenik","ts":"2019-05-23T10:40:41.519Z"}
{"msg":":thumbsup: ","username":"nkl199","ts":"2019-05-23T10:41:33.637Z"}
{"msg":"easy done","username":"nkl199","ts":"2019-05-23T10:41:36.670Z"}
{"msg":"@nkl199 I'm fine with removing the larger network samples: 2 org 1 peer versions for goleveldb (and maybe couchdb) should be enough","username":"klenik","ts":"2019-05-23T10:41:38.234Z"}
{"msg":"bigger networks won't run smoothly on a local machine anyway","username":"klenik","ts":"2019-05-23T10:42:14.895Z"}
{"msg":"ok, sounds good to me - an alternative would be both ends of the spectrum (2org1peer and 3org2peer)","username":"nkl199","ts":"2019-05-23T10:43:11.657Z"}
{"msg":"(plus when deprecating the fabric adapter half of the configs will disappear anyway)","username":"klenik","ts":"2019-05-23T10:43:13.487Z"}
{"msg":"OK, so the plan is:\n- swap out the `fabric` adaptor to use a generated channel configTx\n- replace the use of cryptogen tooling with channelTx creation in the `fabric-ccp` adaptor, but retain the option of a *.tx file\n- reduce the number of sample networks provided\n- add some docs","username":"nkl199","ts":"2019-05-23T10:46:08.681Z"}
{"msg":"OK, so the plan is:\n- swap out the `fabric` adaptor to use a generated channel configTx\n- replace the use of cryptogen tooling with channelTx creation in the `fabric-ccp` adaptor, but retain the option of a *.tx file\n- reduce the number of sample networks provided\n- modify the build to test using both channel creation methods\n- add some docs","username":"nkl199","ts":"2019-05-23T10:46:08.681Z"}
{"msg":"OK, so the plan is:\n- swap out the `fabric` adaptor to use a generated channel configTx\n- replace the use of cryptogen tooling with channelTx creation in the `fabric-ccp` adaptor, but retain the option of a *.tx file\n- reduce the number of sample networks provided\n- modify the build to test using the fabric-ccp adaptor and both channel creation methods\n- add some docs","username":"nkl199","ts":"2019-05-23T10:46:08.681Z"}
{"msg":"sounds like an easy plan :thumbsup: :D","username":"klenik","ts":"2019-05-23T11:35:20.546Z"}
{"msg":"@nkl199 @panyu2 @houqinghui I added the meeting minutes about yesterday's call, tell me if I missed something:\nhttps://wiki.hyperledger.org/display/caliper/2019-05-22+Minutes","username":"klenik","ts":"2019-05-23T12:22:30.982Z"}
{"msg":"... raised a PR covering the above discussion on channel creation and reduction in test networks","username":"nkl199","ts":"2019-05-23T15:32:46.660Z"}
{"msg":"@klenik Hi attila, i am confused about `Remove the tx-mode related codes from the main Caliper flow` in the meeting minutes, why do we remove the tx-mode? ","username":"houqinghui","ts":"2019-05-24T07:19:34.313Z"}
{"msg":"Can you tell me what Fabric-Solidity means? :grinning:  ","username":"houqinghui","ts":"2019-05-24T07:20:50.168Z"}
{"msg":"@houqinghui The tx-mode is part of the older Fabric adapter, which will be deprecated. Plus [this part](https://github.com/hyperledger/caliper/blob/343321a2378e96f00dad05a2a27dd24a0f99424e/packages/caliper-core/lib/caliper-flow.js#L242) is kind of inlines a custom test during the init phase. I have some ideas on how to make this nicer (perform two round, the first does the file write, and ignore the first round from the report, the second performs the actual test from the files), but Caliper needs some additional features first. So the tx-mode will be added to the Fabric-CCP adapter eventually, I'm interested in the performance improvements, but it should be done in a less intrusive way. ","username":"klenik","ts":"2019-05-24T08:09:01.871Z"}
{"msg":"@houqinghui as for Fabric-Solidity: [this project](https://github.com/hyperledger/fabric-chaincode-evm) contains a chaincode, that basically embeds Burrow's EVM implementation, and makes it possible to run Solidity contracts in Fabric-style. I've integrated this CC with Caliper in my fork, so basically you can easily deploy and interact with Solidity contracts through the Fabric-CCP adapter. Once I tidy up the adapter a bit, I'll raise a PR about this support. (So Caliper will support 3 EVM compatible platforms soon :P )","username":"klenik","ts":"2019-05-24T08:11:37.951Z"}
{"msg":"Although it's mainly just formality at this point, let's welcome @nkl199 as a new Caliper maintainer :champagne:","username":"klenik","ts":"2019-05-24T14:43:30.152Z"}
{"msg":"Thanks!! Good to be on board :D","username":"nkl199","ts":"2019-05-24T14:44:07.029Z"}
{"msg":"@rjones - is it possible to ensure that Travis builds are enabled on the Caliper repository please? I've noticed that not all PRs are resulting in a build being run ... my repository is configured to run them by default and they are passing ... thanks!","username":"nkl199","ts":"2019-05-28T09:55:21.396Z"}
{"msg":"@nkl199 it looks like it is building? https://travis-ci.org/hyperledger/caliper","username":"rjones","ts":"2019-05-28T19:18:52.565Z"}
{"msg":"The weekly Caliper call will start on 05.29. at 9AM UTC. The contact information is on the [Caliper Wiki page](https://wiki.hyperledger.org/display/caliper/Hyperledger+Caliper).\n\nProposed agenda (feel free to extend):\n1) Gathering the requirements for publishing the npm packages\n2) Gathering the requirements for publishing Docker images\n3) Brainstorming about how a privacy-preserving Caliper architecture would look like (components, and high-level runtime steps). Caliper has been removed from [this doc](https://docs.google.com/document/d/14paUx8CC_lWV01TMHNmeu3NGxtxb5rgtipyMr3vrR8w/edit), but the concerns are still valid.\n4) Hopefully coming up with a short and focused roadmap (building on the previous roadmap) with the absolutely necessary tasks for the above points.\n\nPlease leave some reaction/emoji on this message if you can attend the call.","username":"klenik","ts":"2019-05-28T19:28:18.127Z"}
{"msg":":thinking: strange - but yes, yes it does! Thanks for looking into it","username":"nkl199","ts":"2019-05-29T08:22:19.531Z"}
{"msg":"Added the meeting minutes of yesterday's call. Hope I didn't leave out anything important \nhttps://wiki.hyperledger.org/display/caliper/2019-05-29+Minutes","username":"klenik","ts":"2019-05-30T09:39:16.709Z"}
{"msg":"For anyone keen to start experimenting with the CLI package, you can get an advanced preview within this PR: https://github.com/hyperledger/caliper/pull/468, which you can pull down locally. Once you have bootstrapped the project (new dependancies and packages... sorry, it couldn't be avoided) if you run the newly introduced integration test within `caliper-tests-integration` (/scripts/run-integration-tests.js), you will end up with all the caliper npm modules installed on your machine locally :tada: \n\nYou will then have access to:\n- `caliper benchmark run -c <config> -n <network> -w <workspace>`\n- `caliper zooservice start` with an optional config file passed via -c\n- `caliper zooservice stop` with an optional config file passed via -c\n- `caliper zooclient start`\n\nWe are edging ever closer to publishing these modules to npm ... so watch this space for the first release!!","username":"nkl199","ts":"2019-05-31T12:55:30.656Z"}
{"msg":"@nkl199 :champagne: I'll try to start the review on Sunday. NPM, here we come :ok_hand: ","username":"klenik","ts":"2019-05-31T13:10:48.157Z"}
{"msg":"https://gist.github.com/ryjones/5500064ce49d137e3c6be9bb90a81111","username":"rjones","ts":"2019-06-01T00:10:52.961Z"}
{"msg":"Has joined the channel.","username":"Jasonyou","ts":"2019-06-02T22:48:51.495Z","type":"uj"}
{"msg":"The weekly Caliper call will start on 06.05. at 9AM UTC. The contact information is on the [Caliper Wiki](https://wiki.hyperledger.org/display/caliper) page.\n\nProposed agenda (feel free to extend):\n1) Discussion about the UI integration (how, where, what, etc. ). \n@Jasonyou will also join the call. He's the intern who's working on the Caliper Visualization project during the next 3 months (and hopefully after too :) ) so it'll be a close collaboration with the Caliper contributor team :thumbsup: \n2) Status updates","username":"klenik","ts":"2019-06-04T10:20:37.439Z"}
{"msg":"Hello everyone, this is Jason You ;) Really excited to join the Caliper community. I will focus on the Caliper Visualization project and is willing to learn more about the expectation for this project from all of you!","username":"Jasonyou","ts":"2019-06-04T15:29:52.022Z"}
{"msg":"Hi nick, I pulled down your repo, and i run the newly introduced integration test within `caliper-tests-integration`, but i donot know the command that can run Caliper. ","username":"houqinghui","ts":"2019-06-05T14:03:30.424Z"}
{"msg":"@houqinghui \n```\ncaliper benchmark run -c benchmark/composer/config.yaml -n network/fabric-v1.3/2org1peercouchdb/composer.json -w ../caliper-samples/\n```\n\nI got this from the test script, couldn't find it in a doc/readme though. I guess @nkl199 is waiting for my review to submit a doc PR","username":"klenik","ts":"2019-06-05T14:05:12.840Z"}
{"msg":"@houqinghui Don't forget to run `npm run setup_verdaccio` first in the integration folder, so the packages are published locally","username":"klenik","ts":"2019-06-05T14:06:21.540Z"}
{"msg":"@klenik  I run the command `caliper benchmark run -c benchmark/composer/config.yaml -n network/fabric-v1.3/2org1peercouchdb/composer.json -w ../caliper-samples/` in the caliper-samples folder, but couldn't run Caliper, the error is `caliper command not found`. Are you sure the command is right? ","username":"houqinghui","ts":"2019-06-06T01:44:12.930Z"}
{"msg":"@houqinghui The old run-benchmark approach still works, but if you want to test the CLI, the following steps are needed (most of it is local npm publishing)\n```\n# starting from the root folder\nnpm i && npm run repoclean -- --yes && npm run bootstrap\n\n# then to the test \"package\"\ncd packages/caliper-tests-integration/\n\n# Verdaccio server requires a dummy user if publishing via npm\necho '//localhost:4873/:_authToken=\"foo\"' > ${HOME}/.npmrc\necho fetch-retries=10 >> ${HOME}/.npmrc\nexport npm_config_registry=http://localhost:4873\n\n# Start npm server and publish latest packages to it\nnpm run setup_verdaccio\n# and now the caliper command is available\ncaliper benchmark run -c benchmark/simple/config.yaml -n network/fabric-v1.4/2org1peergoleveldb/fabric-ccp-go.yaml -w ../caliper-samples/\n```","username":"klenik","ts":"2019-06-06T06:24:47.478Z"}
{"msg":"running the integration test(s) will also result in the above being run - i've updated readme's in the main repo, but not modified the docs website .... i can start work on that now","username":"nkl199","ts":"2019-06-06T06:50:58.537Z"}
{"msg":"True, but the integration tests also tear down verdaccio, these extracted steps leave the caliper command available to you if you want some more tests.\n\nIt woks nice btw, I'm already collecting my review offline, since the github review page is broken by the sheer number of changes :joy: :champagne: ","username":"klenik","ts":"2019-06-06T06:54:51.345Z"}
{"msg":"haha, cheers - note that the tests will install caliper globally into your system, so that even once verdaccio has been torn down, it will still be there","username":"nkl199","ts":"2019-06-06T07:07:50.003Z"}
{"msg":"... might need something to clean that off?","username":"nkl199","ts":"2019-06-06T07:08:33.362Z"}
{"msg":"ahh, didn't know that, then the test script is the way to go :)","username":"klenik","ts":"2019-06-06T07:08:41.843Z"}
{"msg":"once you have caliper, why would you delete it? :thinking: :joy: ","username":"klenik","ts":"2019-06-06T07:09:09.106Z"}
{"msg":"good point!!","username":"nkl199","ts":"2019-06-06T07:09:23.547Z"}
{"msg":"If you use GitHub please do this: https://help.github.com/en/articles/configuring-two-factor-authentication","username":"rjones","ts":"2019-06-07T15:44:27.744Z"}
{"msg":"In the Implement Ethereum adapter https://github.com/hyperledger/caliper/pull/432 pull request I updated the code to run with the caliper cli.\nI also provided some doc in a second PR https://github.com/hyperledger/caliper/pull/476","username":"russanto","ts":"2019-06-09T15:14:45.003Z"}
{"msg":"The weekly Caliper call will start on 06.12. at 9AM UTC. The contact information is on the [Caliper Wiki](https://wiki.hyperledger.org/display/caliper) page.\n\nProposed agenda (feel free to extend):\n1) Discussion about the extent of SUT monitoring that Caliper should be responsible for (motto: don't duplicate existing tools, maybe provide integration with them)\n2) Monitor(s) => Caliper-core => Reporter(s) design discussion (we'll have a new reporter, the remote(?) UI)\n3) Updates and additional ideas","username":"klenik","ts":"2019-06-11T22:28:38.837Z"}
{"msg":"4) final additions prior to npm release","username":"nkl199","ts":"2019-06-12T08:11:57.442Z"}
{"msg":"I won't be able to participate, in the case in which there are doubts on my PRs just text","username":"russanto","ts":"2019-06-12T08:28:12.289Z"}
{"msg":"@russanto Sure, no problem. We'll leave comments on the PR directly, so it's more tracable","username":"klenik","ts":"2019-06-12T08:30:24.502Z"}
{"msg":"@nkl199 @houqinghui Added today's meeting minutes: https://wiki.hyperledger.org/display/caliper/2019-06-12+Minutes\nFeel free to extend it. ","username":"klenik","ts":"2019-06-12T11:09:31.678Z"}
{"msg":"@nkl199 Could you open the Github issues for the pending tasks we discussed? ","username":"klenik","ts":"2019-06-12T11:09:50.995Z"}
{"msg":"sure","username":"nkl199","ts":"2019-06-12T11:17:33.933Z"}
{"msg":"@nkl199 I'm wondering about the following Caliper NPM usage/use case:\n1) Right now, the Caliper CLI package includes the highest versions of the other packages (with Fabric SDK 1.4.0 for example).\n2) Once the packages are published, I imagined the following workflow for Caliper projects:\n```\ncd ~/myCaliperProject/\nnpm install --save caliper-fabric@1.3.0\n# suppose the artifacts are already in this folder\ncaliper benchmark run -w ... -c ... -n ...\n```","username":"klenik","ts":"2019-06-13T09:50:14.881Z"}
{"msg":"So the users install the specific adapter package, and that will \"include\" the CLI. Is this feasible with the current dependency structure? Or how did you envision using a published package?","username":"klenik","ts":"2019-06-13T09:51:28.381Z"}
{"msg":"we would need a new CLI published when there are new \"bumps\" in the adaptors that cause breaking changes","username":"nkl199","ts":"2019-06-13T09:52:24.029Z"}
{"msg":"for instance, because we have 2 different dependancies in the fabric adaptor, we will need two fabric adaptors (fabric 1.1, and fabric 1.2+) ... we would need 2 CLI modules published to point to these","username":"nkl199","ts":"2019-06-13T09:53:39.392Z"}
{"msg":"this will simplify somewhat when we dockerize the clients, as we can keep the same caliper-core and CLI unless there is an interface change","username":"nkl199","ts":"2019-06-13T09:54:42.113Z"}
{"msg":"yeah, but if you use the CLI now, it will come with fixed adapter versions and their dependencies (fixed SDK versions). How can I use the 1.3.0 Fabric SDK with the Fabric adapter through the CLI (which is published)? How would a Caliper project init/bootstrap look like?","username":"klenik","ts":"2019-06-13T09:56:37.508Z"}
{"msg":"https://github.com/hyperledger/caliper/blob/master/packages/caliper-cli/lib/benchmark/lib/runBenchmark.js#L60\nBased on this line, we don't even need to specify the deps statically, it's resolved during runtime","username":"klenik","ts":"2019-06-13T09:58:27.979Z"}
{"msg":"Does that mean we can completely decouple the CLI from the adapter packages (except caliper-core)?","username":"klenik","ts":"2019-06-13T09:59:00.876Z"}
{"msg":"pretty messy to be honest:\n- fabric adaptor published for each SDK version\n- CLI adaptor published multiple times with a dependancy on each of the published fabric-adaptors\n- the CLI tracks with the most recent code base\n\nThe bootstrap would not change\nThe line mentioned above will pull in the current adaptoir dependancy linked in the released item","username":"nkl199","ts":"2019-06-13T09:59:19.161Z"}
{"msg":"The problem with the above, is that backporting fixes to previous versions of the adaptor is *painful* - the normal process would be to have a separate branch for each supported level ... which is normally done in multiple repositories to prevent branch explosion","username":"nkl199","ts":"2019-06-13T10:01:27.898Z"}
{"msg":"Fortunately, for now we cover each supported level with one code-base, only the installed SDK versions differ. And if the platforms take semantic versioning seriously (so far they do), then maybe we'll be able to keep one adapter code-base per platform (if we managed it with Fabric, the most complex platform so far, then we can probably do that with the other platforms also, but only for major versions of course, >=1.0.0)","username":"klenik","ts":"2019-06-13T10:14:45.519Z"}
{"msg":"Since the CLI code is platform-independent, could the following install scenario work (by completely decoupling the CLI from the adapter packages)?\n```\ncd ~/myCaliperProject/\nnpm install --save caliper-cli@1.0.0 caliper-fabric@1.3.0\n# suppose the artifacts are already in this folder\ncaliper benchmark run -w ... -c ... -n ...\n```\nAnd when the above linked line requires caliper-fabric, it can [load it](https://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders) from the `myCaliperProject/node_modules` folder. Or am I missing something? ","username":"klenik","ts":"2019-06-13T10:19:18.616Z"}
{"msg":"the problem is inside the adaptor package itself https://github.com/hyperledger/caliper/blob/master/packages/caliper-fabric-ccp/package.json#L25","username":"nkl199","ts":"2019-06-13T10:22:49.566Z"}
{"msg":"we need to target the SDK there, and then the CLI references the adaptor that uses a specific dependancy","username":"nkl199","ts":"2019-06-13T10:23:18.354Z"}
{"msg":"I'm wondering if the above will work tho","username":"nkl199","ts":"2019-06-13T10:24:05.467Z"}
{"msg":".. we could certainly test it with multiple pblishes to verdaccio","username":"nkl199","ts":"2019-06-13T10:24:22.395Z"}
{"msg":".. we could certainly test it with multiple publishes to verdaccio","username":"nkl199","ts":"2019-06-13T10:24:22.395Z"}
{"msg":"I think it should be possible to publish the same package with different deps, right? Something like this (very high-level pseudo code):\n\nfor every adapter:\n    for deps in [dep_set1, dep_set2, ..., dep_setN] : publish caliper-<adapter>@<deps_version> with deps\npublish caliper-cli@sem_ver\n\nSo the adapter package could be installed either with or without the CLI, whatever the use case is. Since the CLI is \"just\" a smart wrapper around `caliper-flow/run`","username":"klenik","ts":"2019-06-13T10:32:04.100Z"}
{"msg":"At least I hope it's possible...","username":"klenik","ts":"2019-06-13T10:40:09.065Z"}
{"msg":"The weekly Caliper call will start on 06.19. at 9AM UTC. The contact information is on the [Caliper Wiki](https://wiki.hyperledger.org/display/caliper) page.\n\nProposed agenda (feel free to extend):\n1) Continue NPM-related discussion\n2) Steps towards formalizing the dataflow inside Caliper (i.e., between metric sources and exporter targets). See [this issue](https://github.com/hyperledger/caliper/issues/483)","username":"klenik","ts":"2019-06-18T13:43:56.713Z"}
{"msg":"3) Inbound changes with proposed HFRD additions\n4) Increased alignment with Perf/Scale workgroup","username":"nkl199","ts":"2019-06-25T18:52:57.031Z"}
{"msg":"Hi, just to let everyone know that I'm going on vacation from this weekend (first in over 2 years!!) so won't be attending the next two Caliper calls :wave: ","username":"nkl199","ts":"2019-06-28T16:45:58.402Z"}
{"msg":"I'll also be away tomorrow, so unless someone has something to discuss and can orchestrate the call, _tomorrow's call is canceled_","username":"klenik","ts":"2019-07-02T05:56:00.479Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-07-08T18:08:41.683Z","type":"ul"}
{"msg":"Due to lack of important agenda items, I think we can cancel today's call. Any Q&A and updates can be done in this channel ","username":"klenik","ts":"2019-07-10T07:42:07.127Z"}
{"msg":"I think I have a nice (recurring) agenda item for next week's call:\nhttps://github.com/hyperledger/caliper/issues/488\nAfter some trial and error, the npm publishing workflow of Caliper is getting clearer. Feel free to leave comments on the issue, I'll also drop the link in the #caliper channel ","username":"klenik","ts":"2019-07-11T15:11:45.350Z"}
{"msg":"-> proposal to modify the time of the current meeting to fall at 9am EST (I make that 2pm UTC) ","username":"nkl199","ts":"2019-07-15T16:51:05.052Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=PiumHk5NTg4neWE57) Fine for me :thumbsup: I guess it's to include potential east coast contributors? :P","username":"klenik","ts":"2019-07-15T17:08:20.281Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=PiumHk5NTg4neWE57","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=PiumHk5NTg4neWE57","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@nkl199 As I see, that timeslot is taken in the HL Community Zoom channel","username":"klenik","ts":"2019-07-16T07:09:00.867Z"}
{"msg":"3pm UTC looks to be available ... That would be OK for me, any objections on this channel? (shame we can't do an at-here :( )","username":"nkl199","ts":"2019-07-16T09:10:15.602Z"}
{"msg":"I think discussion on the move to dockerized clients would be handy - we will want to create some more repositories for each client on a per-language basis ... and we should consider a separate samples repository too perhaps.","username":"nkl199","ts":"2019-07-16T09:12:38.757Z"}
{"msg":"Yes, now the npm packages are around the corner, separating the samples package might be a good idea, so it can be cloned without additional bootstrap, then a simple npm install will add the CLI and needed adapter","username":"klenik","ts":"2019-07-16T09:15:33.427Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=GtXvG9G9DcTkMD2Mc) Yep, that slot is free and also fine for me :thumbsup: ","username":"klenik","ts":"2019-07-16T09:18:49.974Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=GtXvG9G9DcTkMD2Mc","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=GtXvG9G9DcTkMD2Mc","remote":true,"fileId":null,"fileName":null}]}
{"msg":"The weekly Caliper call will start on 07.17. at **3PM UTC**. Zoom channel: https://zoom.us/my/hyperledger.community\n\nProposed agenda (feel free to extend):\n1. Publishing Caliper to npm. See this discussion: https://github.com/hyperledger/caliper/issues/488\n2. Probably a quick demo from me about a new package-based usage of Caliper (see my message in the issue above)\n3. Deprecating the old fabric adapter (rename or delete?) and closing the related issues\n4. Improving the docs before publishing. See https://github.com/hyperledger/caliper/issues/507\n5. Dismissing the \"file generation mode\" feature (https://github.com/hyperledger/caliper/pull/410) since the following PR significantly boosted the sending rate of Caliper: https://github.com/hyperledger/caliper/pull/509","username":"klenik","ts":"2019-07-16T11:17:14.139Z"}
{"msg":"Has joined the channel.","username":"kalyan.aruru","ts":"2019-07-22T10:39:48.694Z","type":"uj"}
{"msg":"Hi Does anyone have documentation/tutorial for using caliper with fabric\n","username":"kalyan.aruru","ts":"2019-07-22T10:44:36.468Z"}
{"msg":"beyond this: https://hyperledger.github.io/caliper/docs/1_Getting_Started.html ?","username":"nkl199","ts":"2019-07-22T11:18:30.242Z"}
{"msg":"hi all, worth noting the deprecations within Fabric 1.4.2 https://github.com/hyperledger/fabric/releases/tag/v1.4.2","username":"nkl199","ts":"2019-07-23T08:26:00.296Z"}
{"msg":"Hi, I've enabled the wiki on the caliper git repo- it will hopefully enable us to make some quick notifications etc and help us store \"related\" material for consumption","username":"nkl199","ts":"2019-07-24T07:31:31.079Z"}
{"msg":"Please note that the recurring weekly Caliper Contributor call has been moved to 3pm UTC on a Wednesday, in order to help US contributors attend","username":"nkl199","ts":"2019-07-24T07:33:40.411Z"}
{"msg":"https://zoom.us/my/hyperledger.community","username":"nkl199","ts":"2019-07-24T07:34:50.004Z"}
{"msg":"Just in case somebody is still looking for solution of ERR from gyc when running `npm run install_cli`: Klenik and I tested the local installation of caliper-cli on Ubuntu 18.04, and here is the solution.","username":"Jasonyou","ts":"2019-07-30T21:28:54.484Z"}
{"msg":"","username":"Jasonyou","ts":"2019-07-30T21:29:35.757Z","attachments":[{"type":"file","title":"Permission-Issue-Install-CLI.docx","title_link":"/file-upload/ucqvMvdw7HtGPTeXf/Permission-Issue-Install-CLI.docx","url":"/file-upload/ucqvMvdw7HtGPTeXf/Permission-Issue-Install-CLI.docx","remote":false,"fileId":"ucqvMvdw7HtGPTeXf","fileName":"Permission-Issue-Install-CLI.docx"}]}
{"msg":"@nkl199 Something came up, I can't join the call. Could you please coordinate it? ","username":"klenik","ts":"2019-07-31T14:33:51.809Z"}
{"msg":"sure :thumbsup: ","username":"nkl199","ts":"2019-07-31T14:34:40.115Z"}
{"msg":"... a rather lonely call :(","username":"nkl199","ts":"2019-07-31T15:24:19.711Z"}
{"msg":"Topics for next maintainers call, please feel free to extend via comments! :\n- Status of npm publish\n- Argo \n- Current status of Prometheus integration","username":"nkl199","ts":"2019-08-02T09:17:13.949Z"}
{"msg":"Topics for next maintainers call, please feel free to extend via comments! :\n- Status of npm publish\n- Argo \n- Current status of Prometheus integration\n- Potential move to CircleCI for builds","username":"nkl199","ts":"2019-08-02T09:17:13.949Z"}
{"msg":"Hi guys, how can I set to jump license check, for example, on binary files ?","username":"russanto","ts":"2019-08-03T08:55:32.811Z"}
{"msg":"I'm merging latest changes on master in the ethereum pull request","username":"russanto","ts":"2019-08-03T08:55:57.814Z"}
{"msg":"@russanto you can add exclusion rules to the package json, like this:\nhttps://github.com/hyperledger/caliper/blob/1cb88d52193e4eaa8dad5e566dd899a69d4495cb/packages/caliper-fabric/package.json#L54","username":"klenik","ts":"2019-08-03T08:58:19.731Z"}
{"msg":"any ideas on why travis is failing to run tests ? It seems it doesn't find some dependencies.\nhttps://travis-ci.org/hyperledger/caliper/jobs/567253002","username":"russanto","ts":"2019-08-04T08:49:17.793Z"}
{"msg":"@russanto hmm, this seems like a transient error, always complaining about a different package. Can you do a force push later to trigger the CI again? ","username":"klenik","ts":"2019-08-04T08:55:34.452Z"}
{"msg":"different error again","username":"russanto","ts":"2019-08-04T16:24:00.257Z"}
{"msg":"@russanto I'm looking into that, it fails for a different reason each time during the npm install stage from verdaccio. I've been unable to recreate locally, which is leading me to believe that it is a transient error due to a resource limitation in the Travis build","username":"nkl199","ts":"2019-08-06T07:59:53.448Z"}
{"msg":"Nice call everyone :ok_hand: I think it's the first time we ran out of time, and the topics were awesome :thumbsup: ","username":"klenik","ts":"2019-08-07T16:01:32.964Z"}
{"msg":"Yeah really great presentation and explain!","username":"Jasonyou","ts":"2019-08-07T16:02:05.094Z"}
{"msg":"good progress being made I think :D","username":"nkl199","ts":"2019-08-07T16:02:25.430Z"}
{"msg":"Yeah, the puzzle pieces are starting to form a nice picture :D","username":"klenik","ts":"2019-08-07T16:06:47.262Z"}
{"msg":"","username":"Jasonyou","ts":"2019-08-08T23:01:09.579Z","attachments":[{"type":"file","title":"test-error.png","title_link":"/file-upload/yjxGrqLDC7w9hWSGY/test-error.png","image_url":"/file-upload/yjxGrqLDC7w9hWSGY/test-error.png","image_type":"image/png","image_size":308890,"url":"/file-upload/yjxGrqLDC7w9hWSGY/test-error.png","remote":false,"fileId":"yjxGrqLDC7w9hWSGY","fileName":"test-error.png"}]}
{"msg":"Hello I was trying to run a test in the `./caliper/packages/caliper-samples` with the command `npx caliper benchmark run -w . -c benchmark/simple/config-linear-rate.yaml -n network/fabric-v1.4.1/raft/fabric-ccp-node-tls.yaml`. But it throw some error said `Error: Couldn't create Channel 'mychannel': Failed to connect before the deadline URL:grpcs://localhost:7050`","username":"Jasonyou","ts":"2019-08-08T23:01:10.490Z"}
{"msg":"\nSome questions on GUI & CLI integration:\n\nI'm currently trying to integrate the Caliper GUI with the Caliper-cli, and I read through the source code these two days. Here are some thoughts and insights, please let me know if you know a better way to do this or can give me any advices. Thank!\n\nHere is my current strategy to build the Caliper real-time visualization GUI:\n>> [GUI front-end: query the API in every X-seconds] -> [API that query data from DB] -> [DB] <- [Caliper-CLI: helper scripts/functions update real-time test results to DB]\n\n[Data Collecting Strategies]\n1. I will write a data cleaning and collecting script with JS in the `./caliper/packages/caliper-core/lib/caliper-gui` directory. This script will include functions that receives data from one or more scripts in the `caliper-core`, and then push the cleaned JSON data to the DB (MongoDB).\n2. Then I can either build an API to query the data from the DB, or directly query the visualization data from the DB to the GUI front-end visualization. The real-time functionality will be accomplished with Socket.io.\n3. I will build the GUI, DB, and API in the `caliper-core/caliper-gui` directory, so they are more manageable when we publish separate npm packages, i.e. `caliper-cli` and `caliper-gui`.\n\n[Current issue]\nI read through the `./caliper-core/lib/` source code, and realized that there are multiple scripts can provide useful test report data. But I still didn’t find a good place to get clear real-time time series data, so I might need some advice about that part.\n\nI found some scripts I can modify to collect data and then send to the DB, where the updated data will then be queried by the front-end GUI:\n- `./caliper/packages/caliper-core/li\u0010b/caliper-flow.js`: \n    - The `const report = new Report(monitor)` can provide some system test result. Maybe we can have one more helper function in the `report.js` script to return JSON results, instead of just print it out or save it in a local file.\n- ‘./caliper/packages/caliper-core/lib/client/caliper-local-client.js` can provide detailed `TxStats` object or `resultStats` in the `async doTest(msg)` function. I can simple add a helper function from my data collection script to update these data to the DB.\n    - But the question here is that I still don’t know the exact JSON data structure of the `resultStats` object, since I encountered some issue in installation. So now I will need to developer of that part to help me decide how to format the JSON output.\n    -  Another question is that I’m not sure how long is the resultStats, and whether this is a ordered test statistics array. Cause in the line #275-#277, the code only return the first index result. I will need someone to help me to answer this question too.\n- `./caliper/packages/caliper-core/lib/report/report.js` has some very helpful functions for data collection, but they are all just static data, which means they are not real-time time series data. But I can add some function directly in this script to collect time-series JSON data object, which can be sent to the DB.\n\nHere are just some of I thoughts on the integration of GUI and Caliper-cli/Caliper-core.\n\nI need to get some help and advices from people who know the data flow under Caliper-core/Caliper-cli.\n\nThanks very much for the help!","username":"Jasonyou","ts":"2019-08-08T23:41:43.464Z"}
{"msg":"PS: I just want to make sure that all types of data-flow (JSON object) we have in the `caliper-core` scripts, so I don't need to re-implement tools by myself ;)","username":"Jasonyou","ts":"2019-08-08T23:56:41.176Z"}
{"msg":"PS: I just want to make sure that I found all types of data-flow (JSON object) we have in the `caliper-core` scripts, so I don't need to re-implement tools by myself ;)","username":"Jasonyou","ts":"2019-08-08T23:56:41.176Z"}
{"msg":"@Jasonyou Failed to connect, could you please try to use no tls network file instead, for example, using https://github.com/hyperledger/caliper/blob/master/packages/caliper-samples/network/fabric-v1.4.1/2org1peergoleveldb/fabric-go.yaml? ","username":"FlyingTiger","ts":"2019-08-09T01:50:32.831Z"}
{"msg":"@Jasonyou If has the problem again, please check the docker containers are runnning by using docker ps.","username":"FlyingTiger","ts":"2019-08-09T01:52:01.031Z"}
{"msg":"@Jasonyou About the datasource, you could reference the https://github.com/hyperledger/caliper/tree/master/packages/caliper-core/lib/gui document, and https://github.com/hyperledger/caliper/blob/master/packages/caliper-core/lib/gui/src/demo.js#L178 , https://github.com/hyperledger/caliper/blob/master/packages/caliper-core/lib/test/defaultTest.js#L99 , https://github.com/hyperledger/caliper/blob/master/packages/caliper-core/lib/client/client-orchestrator.js#L189 ,  the updates are array to save txUpdate results ","username":"FlyingTiger","ts":"2019-08-09T02:01:53.507Z"}
{"msg":"Perfect I will try all of these and see if they works!","username":"Jasonyou","ts":"2019-08-09T02:04:35.773Z"}
{"msg":"Thanks a lot @FlyingTiger !","username":"Jasonyou","ts":"2019-08-09T02:04:42.284Z"}
{"msg":"Hi Jason, you want to place your code in `/caliper/pacakges/caliper-gui` then import any other required components (caliper-core for instance) as a dependancy","username":"nkl199","ts":"2019-08-09T08:13:23.808Z"}
{"msg":"Hi @Jasonyou , you want to place your code in `/caliper/pacakges/caliper-gui` then import any other required components (caliper-core for instance) as a dependancy","username":"nkl199","ts":"2019-08-09T08:13:23.808Z"}
{"msg":"your GUI will end up replicating/replacing the caliper-flow.js file, but in it's own repository, where you can have more control over things - and inject your own test observer etc","username":"nkl199","ts":"2019-08-09T08:14:36.753Z"}
{"msg":"I'd recommend that you have a look in my current prometheus-monitor branch under the `core/lib/test-observers` that are set to replace the `gui/src/demo.js` implementation that @FlyingTiger mentioned above - we are making it possible to use multiple test observers so that we can momintor local/remote running tasks","username":"nkl199","ts":"2019-08-09T08:26:03.919Z"}
{"msg":"I'd recommend that you have a look in my current prometheus-monitor branch under the `core/lib/test-observers` that are set to replace the `gui/src/demo.js` implementation that @FlyingTiger mentioned above - we are making it possible to use multiple test observers so that we can monitor local/remote running tasks","username":"nkl199","ts":"2019-08-09T08:26:03.919Z"}
{"msg":"I'd recommend that you have a look in my current prometheus-monitor branch under the `core/lib/test-observers` that are set to replace the `gui/src/demo.js` implementation that @FlyingTiger mentioned above - we are making it possible to use multiple test observers so that we can monitor local/remote running tasks - a gui one would be able to sit along side these and relay information back fro rendering","username":"nkl199","ts":"2019-08-09T08:26:03.919Z"}
{"msg":"I'd recommend that you have a look in my current prometheus-monitor branch under the `core/lib/test-observers` that are set to replace the `gui/src/demo.js` implementation that @FlyingTiger mentioned above - we are making it possible to use multiple test observers so that we can monitor local/remote running tasks - a gui one would be able to sit along side these and relay information back for rendering","username":"nkl199","ts":"2019-08-09T08:26:03.919Z"}
{"msg":"Thanks a lot @nkl199! I forked your caliper branch repo and is building the GUI in the `caliper/packages/caliper-gui` directory. I tried again to install the caliper-cli in the `caliper-test-integration` and succeed with the node v8.16.0 and npm permission issue fixed: \"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally\". \n\nBut I still cannot run the sample benchmark test even after I tried all the .yaml configuration files in the `caliper-sample` directory @FlyingTiger ...\n\nI mainly got two types of errors:\n```\ninfo: [adapters/fabric]: Sleeping 5s...\n2019-08-10T18:25:55.608Z - error: [Remote.js]: Error: Failed to connect before the deadline URL:grpc://localhost:7051\n```\nAND\n```\nerror: [caliper-flow]: Error: Error: Invalid endorsement for marbles@v0 in mychannel from peer0.org1.example.com: 2 UNKNOWN: Stream removed\n    at proposalResponses.forEach (/home/jasonyou/.npm-global/lib/node_modules/caliper-cli/node_modules/caliper-fabric/lib/fabric.js:1316:31)\n    at Array.forEach (<anonymous>)\n    at Fabric._instantiateChaincodes (/home/jasonyou/.npm-global/lib/node_modules/caliper-cli/node_modules/caliper-fabric/lib/fabric.js:1312:35)\n    at <anonymous>\n```","username":"Jasonyou","ts":"2019-08-10T19:29:06.417Z"}
{"msg":"Thanks a lot @nkl199! I forked your caliper branch repo and is building the GUI in the `caliper/packages/caliper-gui` directory. I tried again with  your `caliper-1` branch to install the caliper-cli in the `caliper-test-integration` and succeed with the node v8.16.0 and npm permission issue fixed: \"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally\". \n\nBut I still cannot run the sample benchmark test even after I tried all the .yaml configuration files in the `caliper-sample` directory @FlyingTiger ...\n\nI mainly got two types of errors:\n```\ninfo: [adapters/fabric]: Sleeping 5s...\n2019-08-10T18:25:55.608Z - error: [Remote.js]: Error: Failed to connect before the deadline URL:grpc://localhost:7051\n```\nAND\n```\nerror: [caliper-flow]: Error: Error: Invalid endorsement for marbles@v0 in mychannel from peer0.org1.example.com: 2 UNKNOWN: Stream removed\n    at proposalResponses.forEach (/home/jasonyou/.npm-global/lib/node_modules/caliper-cli/node_modules/caliper-fabric/lib/fabric.js:1316:31)\n    at Array.forEach (<anonymous>)\n    at Fabric._instantiateChaincodes (/home/jasonyou/.npm-global/lib/node_modules/caliper-cli/node_modules/caliper-fabric/lib/fabric.js:1312:35)\n    at <anonymous>\n```","username":"Jasonyou","ts":"2019-08-10T19:29:06.417Z"}
{"msg":"Thanks a lot @nkl199! I forked your caliper branch repo and is building the GUI in the `caliper/packages/caliper-gui` directory. I tried again with  your `caliper-1` branch to install the caliper-cli in the `caliper-test-integration` and succeed with the node v8.16.0 and npm permission issue fixed: \"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally\". \n\nBut I still cannot run the sample benchmark test even after I tried all the .yaml configuration files in the `caliper-sample` directory as suggested by @FlyingTiger ...\n\nI mainly got two types of errors:\n```\ninfo: [adapters/fabric]: Sleeping 5s...\n2019-08-10T18:25:55.608Z - error: [Remote.js]: Error: Failed to connect before the deadline URL:grpc://localhost:7051\n```\nAND\n```\nerror: [caliper-flow]: Error: Error: Invalid endorsement for marbles@v0 in mychannel from peer0.org1.example.com: 2 UNKNOWN: Stream removed\n    at proposalResponses.forEach (/home/jasonyou/.npm-global/lib/node_modules/caliper-cli/node_modules/caliper-fabric/lib/fabric.js:1316:31)\n    at Array.forEach (<anonymous>)\n    at Fabric._instantiateChaincodes (/home/jasonyou/.npm-global/lib/node_modules/caliper-cli/node_modules/caliper-fabric/lib/fabric.js:1312:35)\n    at <anonymous>\n```","username":"Jasonyou","ts":"2019-08-10T19:29:06.417Z"}
{"msg":"The first error looks like the Fabric docker server cannot be connected from Caliper sample benchmark test. So I want to see how to DEBUG this part (which script to check)","username":"Jasonyou","ts":"2019-08-10T19:30:00.592Z"}
{"msg":"The second error is more like a adaptor error somewhere in the `fabric.js` script","username":"Jasonyou","ts":"2019-08-10T19:30:32.215Z"}
{"msg":"The second error is more like an adaptor error somewhere in the `fabric.js` script","username":"Jasonyou","ts":"2019-08-10T19:30:32.215Z"}
{"msg":"The second error is more like an adaptor error somewhere in the `fabric.js` or the `caliper-flow` script","username":"Jasonyou","ts":"2019-08-10T19:30:32.215Z"}
{"msg":"The second error is more like an adaptor error somewhere in the `fabric.js` or the `caliper-flow.js` script","username":"Jasonyou","ts":"2019-08-10T19:30:32.215Z"}
{"msg":"Also @nkl199, for importing dependencies in caliper-core, do you mean import those needed scripts one by one, or the whole caliper-core package? (I only found you imported 'Logger' from `caliper-utils` in the scripts in the `prometheus` directory. I'm not very clear about in what order should this GUI be integrated, i.e. is the GUI turned on by the user manually, or it will automatically triggered by some code in the caliper-core/caliper-cli and pop out?","username":"Jasonyou","ts":"2019-08-10T19:34:16.577Z"}
{"msg":"Also @nkl199, for importing dependencies in caliper-core, do you mean importing those needed scripts one by one, or the whole caliper-core package? (I only found you imported 'Logger' from `caliper-utils` in the scripts in the `prometheus` directory. I'm not very clear about in what order should this GUI be integrated, i.e. is the GUI turned on by the user manually, or it will automatically triggered by some code in the caliper-core/caliper-cli and pop out?","username":"Jasonyou","ts":"2019-08-10T19:34:16.577Z"}
{"msg":"For the 'failed to connect' error, I also googled online and tried so methods, such as reinstall globally the latest versions of \"fabric-ca-client, fabric-client, and grpc packages\" with npm","username":"Jasonyou","ts":"2019-08-10T19:39:01.002Z"}
{"msg":"For the 'failed to connect' error, I also googled online and tried some methods, such as reinstall globally the latest versions of \"fabric-ca-client, fabric-client, and grpc packages\" with npm","username":"Jasonyou","ts":"2019-08-10T19:39:01.002Z"}
{"msg":"For the 'failed to connect' error, I also googled online and tried some methods, such as reinstall globally the latest versions of `fabric-ca-client`, `fabric-client`, and `grpc packages` with npm","username":"Jasonyou","ts":"2019-08-10T19:39:01.002Z"}
{"msg":"For the 'failed to connect' error, I also googled online and tried some methods, such as reinstall globally the latest versions of `fabric-ca-client`, `fabric-client`, and `grpc` packages with npm","username":"Jasonyou","ts":"2019-08-10T19:39:01.002Z"}
{"msg":"@Jasonyou The GUI should be a single \"parent\" item that the user starts up and is then able to run Caliper benchmarks. So the minimal user flow would be:\n- start up GUI\n- import benchmark file (tests, benchmark description, network topology)\n- run the benchmark\nI'd recommend that you look at Composer Playground to see what I mean there https://github.com/hyperledger/composer/tree/master/packages is the code repo and https://composer-playground.mybluemix.net/ is a docker image of the Playground hosted in IBM cloud\n\nYou can import what you need from caliper core using `{X, Y, Z} = require('caliper-core');` and you will end up creating your own code that replaces `caliper-flow' in the core package, as you need to feed it items provided via the UI and not command line argument","username":"nkl199","ts":"2019-08-12T08:33:49.004Z"}
{"msg":"@Jasonyou The GUI should be a single \"parent\" item that the user starts up and is then able to run Caliper benchmarks. So the minimal user flow would be:\n- start up GUI\n- import benchmark file (tests, benchmark description, network topology)\n- run the benchmark\nI'd recommend that you look at Composer Playground to see what I mean there https://github.com/hyperledger/composer/tree/master/packages is the code repo and https://composer-playground.mybluemix.net/ is a docker image of the Playground hosted in IBM cloud\n\nYou can import what you need from caliper core using `{X, Y, Z} = require('caliper-core');` and you will end up creating your own code that replaces `caliper-flow' in the core package, as you need to feed it items provided via the UI and not command line arguments","username":"nkl199","ts":"2019-08-12T08:33:49.004Z"}
{"msg":"Perfect! That's exactly my concern and confuse! Thanks a lot!","username":"Jasonyou","ts":"2019-08-12T14:44:29.858Z"}
{"msg":"I'll be on vacation till next Tuesday, so I won't make it to the call this week.","username":"klenik","ts":"2019-08-12T22:16:25.490Z"}
{"msg":"Has joined the channel.","username":"soumyanayak","ts":"2019-08-13T06:56:36.560Z","type":"uj"}
{"msg":"","username":"Jasonyou","ts":"2019-08-13T22:07:19.278Z","attachments":[{"type":"file","title":"peer0-connection-issue.png","title_link":"/file-upload/X8utryco9HTnGkJYQ/peer0-connection-issue.png","image_url":"/file-upload/X8utryco9HTnGkJYQ/peer0-connection-issue.png","image_type":"image/png","image_size":499710,"url":"/file-upload/X8utryco9HTnGkJYQ/peer0-connection-issue.png","remote":false,"fileId":"X8utryco9HTnGkJYQ","fileName":"peer0-connection-issue.png"}]}
{"msg":"Hi guys I read through the source code today, and found something wired happens to the docker server for `peer0.org1.example.com`. I'm not sure if this is just my misunderstood of how docker works or is an issue.\n\nWhen I run the benchmark test with caliper, the `Error: Failed to connect before the deadline URL:grpc://localhost:7051` always occur when the Fabric adaptor tries to query the Blockchain channel in the line #1434 of code `./caliper/packages/caliper-fabric/lib/fabric.js` Fabric class, _joinChannels function. \n\nSo I keep checking the running docker process/container in another Terminal console, and realized that the `peer0.org1.example.com` only ran for 1 second, and then disappeared...\n\nCan someone help me to check if this is the reason of test error? Thanks a lot!","username":"Jasonyou","ts":"2019-08-13T22:07:20.521Z"}
{"msg":"Hi guys I read through the source code today, and found something wired \"bug\" happens to the docker server for `peer0.org1.example.com`. I'm not sure if this is just my misunderstood of how docker works or is an issue.\n\nWhen I run the benchmark test with caliper, the `Error: Failed to connect before the deadline URL:grpc://localhost:7051` always occur when the Fabric adaptor tries to query the Blockchain channel in the line #1434 of code `./caliper/packages/caliper-fabric/lib/fabric.js` Fabric class, _joinChannels function. \n\nSo I keep checking the running docker process/container in another Terminal console, and realized that the `peer0.org1.example.com` only ran for 1 second, and then disappeared...\n\nCan someone help me to check if this is the reason of test error? Thanks a lot!","username":"Jasonyou","ts":"2019-08-13T22:07:20.521Z"}
{"msg":"@Jasonyou Using docker ps --all to list the stopped containers, and using docker logs to fetch the logs of the stopped container, then analyse the logs and try to find the reason why it stopped.","username":"FlyingTiger","ts":"2019-08-14T01:15:12.000Z"}
{"msg":"Okay! I will try this analysis method. Thanks!","username":"Jasonyou","ts":"2019-08-14T01:17:40.864Z"}
{"msg":"You","username":"FlyingTiger","ts":"2019-08-14T01:32:34.181Z"}
{"msg":"Of course, You could post the logs on this channel,  so someone  could help you to check the reason why the container stopped.","username":"FlyingTiger","ts":"2019-08-14T01:35:45.040Z"}
{"msg":"And yes, the peer0.org1.example.com only ran for 1 second, and then disappeared is the reason of the test error.","username":"FlyingTiger","ts":"2019-08-14T01:37:26.390Z"}
{"msg":"I have a question for the config file generation: do you expect the GUI to generate/update/export/import both blockchain network configuration files and test benchmark configuration files, or we just need the test benchmark files for Caliper core?","username":"Jasonyou","ts":"2019-08-14T02:14:39.053Z"}
{"msg":"","username":"Jasonyou","ts":"2019-08-14T02:39:14.155Z","attachments":[{"type":"file","title":"Jasonyou - Tue Aug 13 2019 22:39:00 GMT-0400 (Eastern Daylight Time).txt","title_link":"/file-upload/dmaBYswF2pYcetJ6T/Jasonyou%20-%20Tue%20Aug%2013%202019%2022:39:00%20GMT-0400%20(Eastern%20Daylight%20Time).txt","url":"/file-upload/dmaBYswF2pYcetJ6T/Jasonyou%20-%20Tue%20Aug%2013%202019%2022:39:00%20GMT-0400%20(Eastern%20Daylight%20Time).txt","remote":false,"fileId":"dmaBYswF2pYcetJ6T","fileName":"Jasonyou - Tue Aug 13 2019 22:39:00 GMT-0400 (Eastern Daylight Time).txt"}]}
{"msg":"I actually got a different error when I ran the ``caliper benchmark run --caliper-workspace . --caliper-benchconfig benchmark/simple/config-linear-rate.yaml --caliper-networkconfig network/fabric-v1.4.1/2org1peergoleveldb/fabric-node.yaml ` with config files in the  *2org1peergoleveldb* directory","username":"Jasonyou","ts":"2019-08-14T02:40:33.430Z"}
{"msg":"","username":"Jasonyou","ts":"2019-08-14T02:41:25.561Z","attachments":[{"type":"file","title":"Invalid-endorsor.png","title_link":"/file-upload/Ywi9hZyyw9eQWmwGu/Invalid-endorsor.png","image_url":"/file-upload/Ywi9hZyyw9eQWmwGu/Invalid-endorsor.png","image_type":"image/png","image_size":1434356,"url":"/file-upload/Ywi9hZyyw9eQWmwGu/Invalid-endorsor.png","remote":false,"fileId":"Ywi9hZyyw9eQWmwGu","fileName":"Invalid-endorsor.png"}]}
{"msg":"The complete log of error by running the docker-compose in normal mode without `-d` flag (non detach mode):","username":"Jasonyou","ts":"2019-08-14T02:53:00.237Z"}
{"msg":"","username":"Jasonyou","ts":"2019-08-14T02:53:35.847Z","attachments":[{"type":"file","title":"Jasonyou - Tue Aug 13 2019 22:53:12 GMT-0400 (Eastern Daylight Time).txt","title_link":"/file-upload/SZ7zhaMapWLjPKPxd/Jasonyou%20-%20Tue%20Aug%2013%202019%2022:53:12%20GMT-0400%20(Eastern%20Daylight%20Time).txt","url":"/file-upload/SZ7zhaMapWLjPKPxd/Jasonyou%20-%20Tue%20Aug%2013%202019%2022:53:12%20GMT-0400%20(Eastern%20Daylight%20Time).txt","remote":false,"fileId":"SZ7zhaMapWLjPKPxd","fileName":"Jasonyou - Tue Aug 13 2019 22:53:12 GMT-0400 (Eastern Daylight Time).txt"}]}
{"msg":"Agenda For Call:\n- Prometheus status\n- New repository for caliper-benchmarks\n- Hopefully will be joined by Julien to present the Corda adapter :ok_hand: \n- UI progress\n- AOB","username":"nkl199","ts":"2019-08-14T09:41:51.149Z"}
{"msg":"It probably had some startup issues, check the container logs (if the container still exists), or maybe it's a resource issue for your machine when running a lot of containers ","username":"klenik","ts":"2019-08-14T10:44:28.926Z"}
{"msg":"Iroha is now at V1.1 ...I guess that means an \"official\" package for the adapter?","username":"nkl199","ts":"2019-08-15T11:09:27.743Z"}
{"msg":"and it seems that Azure pipelines is the favoured CI engine  to replace Travis ... at the moment ... which is nice as you have a build job limitation and not a build minutes limit","username":"nkl199","ts":"2019-08-15T12:08:04.571Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=LXWdHcMC2PdSeZyqG) Eh, here we go again :D","username":"klenik","ts":"2019-08-15T22:01:01.322Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=LXWdHcMC2PdSeZyqG","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=LXWdHcMC2PdSeZyqG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi @nkl199  I got some questions when I read the `/caliper/packages/caliper-core/lib/client/caliper-local-client.js`: I found that in the `beforeTest(msg)` function we have a line to configure the Prometheus observer: `this.prometheusClient.configureTarget(msg.label, msg.testRound, msg.clientIdx);`. My question is: does the prometheus observer record the test result for each individual client test, or does it record the whole lifecycle in one place?","username":"Jasonyou","ts":"2019-08-16T19:13:05.039Z"}
{"msg":"I found that in the `txUpdate()` function the Prometheus Client constantly receives data by push to `pushUrl`. So I guess the result of Prometheus is also discrete, right?","username":"Jasonyou","ts":"2019-08-16T19:20:56.834Z"}
{"msg":"@Jasonyou - yes, each client sends results to the Prometheus server, we can then run a query that is the aggregation of all clients for a specific test round","username":"nkl199","ts":"2019-08-19T08:27:04.156Z"}
{"msg":"Cool! I get it, thanks!","username":"Jasonyou","ts":"2019-08-19T10:12:40.056Z"}
{"msg":"Now I can understand the source codes in caliper-core, and is able to import dependencies from it. I'm trying for following the run = async function(absConfigFile, absNetworkFile, admin, clientFactory, workspace) in the caliper-flow.js to produce the test results now. I have a few questions:\n1. I can see that the absConfigFile, absNetworkFile, and workspace are just same configure files path as we passed to the caliper client in the terminal. But I don't know how to give the admin and clientFactory arguments to the async run function.\n2. After I integrate the run function, do I need to add something more to make it works as expected? (I was wondering if there are other dependency files that I need to add to my server to make the whole testing works)","username":"Jasonyou","ts":"2019-08-19T10:20:06.072Z"}
{"msg":"Now I can understand the source codes in caliper-core, and is able to import dependencies from it. I'm trying for following the `run = async function(absConfigFile, absNetworkFile, admin, clientFactory, workspace)` in the `caliper-flow.js` to produce the test results now. I have a few questions:\n1. I can see that the `absConfigFile`, `absNetworkFile`, and `workspace` are just same configure files path as we passed to the `caliper` client in the terminal. But I don't know how to give the `admin` and `clientFactory` arguments to the `async run` function.\n2. After I integrate the `run` function, do I need to add something more to make it works as expected? (I was wondering if there are other dependency files that I need to add to my server to make the whole testing works)","username":"Jasonyou","ts":"2019-08-19T10:20:06.072Z"}
{"msg":"if u look in caliper-cli/lib/benchmak/lib/runBenchmark.js you will see how these items are created based on the adaptor imports","username":"nkl199","ts":"2019-08-19T10:37:24.092Z"}
{"msg":"Awesome! Just read through the source code and imported the `caliper-core` and `caliper-fabric` dependencies through the GUI library! Thanks a lot for the help!\nNow just a small question on the scope of these two packages: I found that in the `runBenchmark.js` we can access them globally, but I need to use the relative path to import, e.g. `../../caliper-core`. Did we use `npm install -g caliper-core/` when installing the `caliper` command-line client, so they are globally accessible? Can I just assume that they are globally accessible from the `caliper-gui` directory too?","username":"Jasonyou","ts":"2019-08-19T11:12:54.334Z"}
{"msg":"Awesome! Just read through the source code and imported the `caliper-core` and `caliper-fabric` dependencies through the GUI library! Thanks a lot for the help!\nNow just a small question on the scope of these two packages: I found that in the `runBenchmark.js` we can access them globally, but I need to use the relative path to import when I use them right not, e.g. `../../caliper-core`. Did we use `npm install -g caliper-core/` when installing the `caliper` command-line client, so they are globally accessible? Can I just assume that they are globally accessible from the `caliper-gui` directory too?","username":"Jasonyou","ts":"2019-08-19T11:12:54.334Z"}
{"msg":"Awesome! Just read through the source code and imported the `caliper-core` and `caliper-fabric` dependencies through the GUI library! Thanks a lot for the help!\nNow just a small question on the scope of these two packages: I found that in the `runBenchmark.js` we can access them globally, but I need to use the relative path to import when I use them right now, e.g. `../../caliper-core`. Did we use `npm install -g caliper-core/` when installing the `caliper` command-line client, so they are globally accessible? Can I just assume that they are globally accessible from the `caliper-gui` directory too?","username":"Jasonyou","ts":"2019-08-19T11:12:54.334Z"}
{"msg":"you should only use the import in your GUI package (ie `const {CaliperFlow, CaliperUtils, ConfigUtil} = require('caliper-core');` kinda stuff). Never a relative path to another package. You mark caliper-core (and any other caliper-x package required) as dependancies in *your* package.json file - the `npm run bootstrap` will sort everything for you and means that if someone wanted you-and-only-your gui package, the npm install will fetch everything that is required","username":"nkl199","ts":"2019-08-19T11:46:27.845Z"}
{"msg":"I get it, and I found how this works in the Lerna github [README](lerna bootstrap) too! Basically `lerna bootstrap` will link all the local dependencies in the lerna repo together and make them accessible globally. \n\nI just want to make sure that the repo structure of my current `caliper-gui` structure is \"recognizable\" by `lerna` as a valid package format. (I saw that almost all major `caliper-*` packages implemented has a `lib` directory in each of them, does that means I will need to add a lib in the `gui-client` and `gui-server` directories?\n\nAnother question is about the MongoDB database (can be changed to other substitutions in the future). Do I need to write a script to check and run the installation of MongoDB before the installation of Caliper-GUI?","username":"Jasonyou","ts":"2019-08-19T12:04:06.360Z"}
{"msg":"I get it, and I found how this works in the Lerna github [README](https://github.com/lerna/lerna/tree/master/commands/bootstrap#how-it-works) too! Basically `lerna bootstrap` will link all the local dependencies in the lerna repo together and make them accessible globally. \n\nI just want to make sure that the repo structure of my current `caliper-gui` structure is \"recognizable\" by `lerna` as a valid package format. (I saw that almost all major `caliper-*` packages implemented has a `lib` directory in each of them, does that means I will need to add a lib in the `gui-client` and `gui-server` directories?\n\nAnother question is about the MongoDB database (can be changed to other substitutions in the future). Do I need to write a script to check and run the installation of MongoDB before the installation of Caliper-GUI?","username":"Jasonyou","ts":"2019-08-19T12:04:06.360Z"}
{"msg":"```\ncaliper-gui/\n├── gui-client\n│   └── package.json\n├── gui-server\n│   ├── api\n│   ├── node_modules\n│   ├── package.json\n│   └── package-lock.json\n├── package.json\n├── package-lock.json\n├── scripts\n```\nThis is the basic idea of how the `caliper-gui` repo looks like now","username":"Jasonyou","ts":"2019-08-19T12:06:48.731Z"}
{"msg":"Well I will move the `gui-client` in after the server is done.","username":"Jasonyou","ts":"2019-08-19T12:07:20.633Z"}
{"msg":"hi, i would have expected the format:\n```\ncaliper-gui/\n|--lib\n| .   |-gui-client\n| .      |_client_folder\n| .   |_gui-server\n| .      |_api\n| .      |_other_folder\n|--pacakge.json\n```","username":"nkl199","ts":"2019-08-19T16:00:44.757Z"}
{"msg":"hi, i would have expected the format:\n```\ncaliper-gui/\n|--lib\n| .   |-gui-client\n| .      |_client_folder\n| .   |_gui-server\n| .      |_api\n| .      |_other_folder\n|--package.json\n```","username":"nkl199","ts":"2019-08-19T16:00:44.757Z"}
{"msg":"one package for all the components that relate to the gui parts","username":"nkl199","ts":"2019-08-19T16:01:12.942Z"}
{"msg":"That looks neat! Thanks very much for the help Nick!","username":"Jasonyou","ts":"2019-08-19T19:38:47.974Z"}
{"msg":"HI all, it would appear that someone has published the caliper pacakges without our knowledge. This is bad because:\n- well, we want to be in control of this\n- they are not ready\n- The integration tests will fail (package conflicts)\n- They are at the wrong level\nI'm going to try and see what is possible with regards to getting this fixed, but frankly we could do without it","username":"nkl199","ts":"2019-08-21T08:07:44.370Z"}
{"msg":"further to the above, i have started the npm dispute process","username":"nkl199","ts":"2019-08-21T08:57:48.287Z"}
{"msg":"The official packages/images will be published under the HL org/namespace, so at least we can avoid the naming conflict. But true, the official code base should be released by us to provide a solid UX for the community ","username":"klenik","ts":"2019-08-21T13:33:53.030Z"}
{"msg":"@nkl199 I can only stay for the first 20 minutes of the call. What's the agenda beside the publishing discussion? ","username":"klenik","ts":"2019-08-21T13:35:14.874Z"}
{"msg":"Possibly some PR triage","username":"nkl199","ts":"2019-08-21T13:35:39.807Z"}
{"msg":"Just curious: is it possible that the recently published `caliper-core` will affect the installation of local test `caliper`?","username":"Jasonyou","ts":"2019-08-23T01:14:27.094Z"}
{"msg":"Some people in the Caliper community said they got error in `npm run start_verdaccio`","username":"Jasonyou","ts":"2019-08-23T01:15:49.380Z"}
{"msg":"yes, our entire code base is set at v0.1.0 ... but that is now published, so you can't publish again under that version","username":"nkl199","ts":"2019-08-23T08:19:39.959Z"}
{"msg":"Too bad... haha. Hopefully the community and NPM can fix this issue","username":"Jasonyou","ts":"2019-08-23T15:28:54.008Z"}
{"msg":"@Jasonyou We'll publish organization-scoped packages, so there won't be any naming conflict. The official packages will be named `@hyperledger/caliper-...`","username":"klenik","ts":"2019-08-23T20:53:34.923Z"}
{"msg":"Sounds great!","username":"Jasonyou","ts":"2019-08-24T03:55:35.056Z"}
{"msg":"I realized that some required dependencies in `caliper-core` for `caliper-flow` testing are not exported in the `caliper-core/index.js`, so do I just copy these scripts manually or do I add exports in index.js?","username":"Jasonyou","ts":"2019-08-24T17:00:58.540Z"}
{"msg":"```\n{ BlockchainInterface: [Function: BlockchainInterface],\n  CaliperLocalClient: [Function: CaliperLocalClient],\n  TxStatus: [Function: TxStatus],\n  CaliperUtils: [Function: CaliperUtils],\n  Version: [Function: Version],\n  ConfigUtil: \n   { get: [Function: get],\n     set: [Function: set],\n     keys: \n      { CoreTxUpdateTime: 'caliper-core-txupdatetime',\n        CoreSkipStartScript: 'caliper-core-skipstartscript',\n        CoreSkipEndScript: 'caliper-core-skipendscript',\n        CoreLogging: 'caliper-core-logging',\n        FabricSleepAfterCreateChannel: 'caliper-fabricccp-sleepafter-createchannel',\n        FabricSleepAfterJoinChannel: 'caliper-fabricccp-sleepafter-joinchannel',\n        FabricSleepAfterInstantiateChaincode: 'caliper-fabricccp-sleepafter-instantiatechaincode',\n        FabricVerifyProposalResponse: 'caliper-fabricccp-verify-proposalresponse',\n        FabricVerifyReadWriteSets: 'caliper-fabricccp-verify-readwritesets',\n        FabricTimeoutChaincodeInstantiate: 'caliper-fabricccp-timeout-chaincodeinstantiate',\n        FabricTimeoutChaincodeInstantiateEvent: 'caliper-fabricccp-timeout-chaincodeinstantiateevent',\n        FabricTimeoutInvokeOrQuery: 'caliper-fabricccp-timeout-invokeorquery',\n        FabricLoadBalancing: 'caliper-fabricccp-loadbalancing',\n        FabricOverwriteGopath: 'caliper-fabricccp-overwritegopath',\n        FabricLatencyThreshold: 'caliper-fabricccp-latencythreshold',\n        FabricCountQueryAsLoad: 'caliper-fabricccp-countqueryasload',\n        FabricSkipCreateChannelPrefix: 'caliper-fabricccp-skipcreatechannel-',\n        FabricGateway: 'caliper-fabricccp-usegateway',\n        FabricGatewayLocalHost: 'caliper-fabricccp-gatewaylocalhost',\n        FabricDiscovery: 'caliper-fabricccp-discovery' } },\n  CaliperFlow: { run: [AsyncFunction] } }\n```","username":"Jasonyou","ts":"2019-08-24T17:01:04.939Z"}
{"msg":"For example `Blockchain.js` is not exported, but in `caliper-flow` it was used from local import: `const Blockchain = require('./blockchain');`","username":"Jasonyou","ts":"2019-08-24T17:01:51.264Z"}
{"msg":"```\nconst {\n    CaliperUtils,\n    ConfigUtil,\n} = require('caliper-core');\n// Something dependencies need to be added in local\n/*\n    const Blockchain = require('...'); // required for test\n    const ClientOrchestrator = require('...');  // ?copy?\n    const MonitorOrchestrator = require('...'); // ?copy?\n    const Report = require('...');              // optional\n    const DefaultTest = require('...');         // local copy is fine\n*/\n```\nBasically all the commented ones are not exported from `caliper-core` now.","username":"Jasonyou","ts":"2019-08-24T17:09:32.837Z"}
{"msg":"```\nconst {\n    CaliperUtils,\n    ConfigUtil,\n} = require('caliper-core');\n// Some dependencies need to be added in local\n/*\n    const Blockchain = require('...'); // required for test\n    const ClientOrchestrator = require('...');  // ?copy?\n    const MonitorOrchestrator = require('...'); // ?copy?\n    const Report = require('...');              // optional\n    const DefaultTest = require('...');         // local copy is fine\n*/\n```\nBasically all the commented ones are not exported from `caliper-core` now.","username":"Jasonyou","ts":"2019-08-24T17:09:32.837Z"}
{"msg":"The importing error for `gui-caliper-flow.js` is fixed perfectly with the following dependencies and added module exports in the `caliper-core/index.js`:","username":"Jasonyou","ts":"2019-08-24T23:51:47.658Z"}
{"msg":"```\nconst {\n    Blockchain,\n    CaliperUtils,\n    ConfigUtil,\n    ClientOrchestrator,\n    MonitorOrchestrator,\n    Report,\n    DefaultTest,\n    LocalObserver,\n    PrometheusObserver,\n} = require('caliper-core');\n```","username":"Jasonyou","ts":"2019-08-24T23:51:51.797Z"}
{"msg":"```\n// More dependencies for caliper-flow test\nmodule.exports.ClientOrchestrator = require('./lib/client/client-orchestrator');\nmodule.exports.Blockchain = require('./lib/blockchain');\nmodule.exports.MonitorOrchestrator = require('./lib/monitor/monitor-orchestrator');\nmodule.exports.Report = require('./lib/report/report');\nmodule.exports.DefaultTest = require('./lib/test-runners/default-test');\nmodule.exports.LocalObserver = require('./lib/test-observers/local-observer');\nmodule.exports.PrometheusObserver = require('./lib/test-observers/prometheus-observer');\n```","username":"Jasonyou","ts":"2019-08-24T23:52:03.033Z"}
{"msg":"Now the problem is in the network config start command: `export FABRIC_VERSION=1.4.0;docker-compose -f networks/fabric/docker-compose/2org1peercouchdb/docker-compose.yaml up -d;sleep 3s` the path it use are relative path, thus cannot directly be applied to the GUI unless: 1) I change the path manually in the config file, or 2) I structure the sample test workspace as the command.","username":"Jasonyou","ts":"2019-08-25T00:04:58.137Z"}
{"msg":"In the future I might spend more time to customize these, but now I will just follow option (2) and see how things works first","username":"Jasonyou","ts":"2019-08-25T00:06:53.745Z"}
{"msg":"Hi guy! The GUI for the caliper is basically finished, and everything is integrated, except that right now In the `fabric.js` adaptor #1434 `let resp = await admin.queryChannels(peer, true);` the adaptor still have issue to connect to the `URL:grpc://localhost:7051`, which is the `Org1`'s peer nodes. Currently users can upload, save, and edit the test and network config files directly through the GUI, and the visualizations are finished. However, since the local deployment issue still cannot be solved, I cannot guarantee a working GUI with caliper and blockchain network connected right now. But that's the only part that I might skip in this stage, because that doesn't affect too much of the development of GUI. Right now the front-end and back-end of the GUI is basically finished, and all the functionalities are exactly matching the current Caliper-cli.\n\nI will finish up my project in the next feel days, and will make this application usable by the Hyperledger community once the local deployment issue was resolved! \n\nThanks very much for every one that helped me in this summer internship, especially @FlyingTiger, @nkl199, and @FlyingTiger! I cannot accomplish this much without your helps!\n\nI will keep contribute to the community, and start to explore more in the Blockchain field! ","username":"Jasonyou","ts":"2019-08-25T02:30:50.384Z"}
{"msg":"Hi guy! The GUI for the caliper is basically finished, and everything is integrated, except that right now In the `fabric.js` adaptor #1434 `let resp = await admin.queryChannels(peer, true);` the adaptor still have issue to connect to the `URL:grpc://localhost:7051`, which is the `Org1`'s peer nodes. Currently users can upload, save, and edit the test and network config files directly through the GUI, and the visualizations are finished. However, since the local deployment issue still cannot be solved, I cannot guarantee a working GUI with caliper and blockchain network connected right now. But that's the only part that I might skip in this stage, because that doesn't affect too much of the development of GUI. Right now the front-end and back-end of the GUI is basically finished, and all the functionalities are exactly matching the current Caliper-cli.\n\nI will finish up my project in the next feel days, and will make this application usable by the Hyperledger community once the local deployment issue was resolved! (the caliper-gui source code will soon be posted, and I will make a pull request once I cleaned up the code and made proper documentations)!\n\nThanks very much for every one that helped me in this summer internship, especially @FlyingTiger, @nkl199, and @FlyingTiger! I cannot accomplish this much without your helps!\n\nI will keep contribute to the community, and start to explore more in the Blockchain field! ","username":"Jasonyou","ts":"2019-08-25T02:30:50.384Z"}
{"msg":"@Jasonyou  :thumbsup: The GUI for the caliper is basically finished. Thanks for your hard work, it is much appreciated.","username":"FlyingTiger","ts":"2019-08-26T11:59:37.246Z"}
{"msg":"No problem! I will keep contributing and learning!","username":"Jasonyou","ts":"2019-08-26T12:54:42.353Z"}
{"msg":"Agenda for tomorrow's 3PM UTC call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n- Final(ish) debate about publishing (Proposed approach/docs: https://aklenik.github.io/caliper/docs/Installing_Caliper.html)\n- Prometheus integration update (plus the new observer approach and implication, e.g., UI integration)\n- AOB","username":"klenik","ts":"2019-08-27T19:39:01.223Z"}
{"msg":"It's probably about time we start approaching other H'ledger techs and ask if anyone in their community would like to contribute adaptors to Caliper ... there's a fair few missing and I don't think we can be an expert for all of them!","username":"nkl199","ts":"2019-08-29T16:01:49.116Z"}
{"msg":"Agenda for today's 3PM UTC call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n- Final_v2 debate about publishing, based on the last call's productive brainstorming session (Proposed approach/docs: https://aklenik.github.io/caliper/docs/Installing_Caliper.html)\n- AOB\n\n@nkl199 I'll try to join the call on time, but I'll have a meeting just finishing around that time. Feel free to start the above docs without me :)","username":"klenik","ts":"2019-09-04T00:38:32.471Z"}
{"msg":"Has joined the channel.","username":"Utsav_Solanki","ts":"2019-09-09T09:36:31.638Z","type":"uj"}
{"msg":"any video document to learn caliper","username":"Utsav_Solanki","ts":"2019-09-09T09:36:33.362Z"}
{"msg":"not yet - the problem with videos is that they become out of date very quickly ... we are working on documented tutorials though","username":"nkl199","ts":"2019-09-09T09:37:27.496Z"}
{"msg":"@Utsav_Solanki +1 for what Nick says. While Caliper is under heavy development, providing (and maintaining) video tutorials would be a huge overhead. We rather put that effort into improving Caliper and text-based tutorials","username":"klenik","ts":"2019-09-09T09:40:06.706Z"}
{"msg":"can i have a link","username":"Utsav_Solanki","ts":"2019-09-09T09:41:47.658Z"}
{"msg":"can i have a link for tutorials","username":"Utsav_Solanki","ts":"2019-09-09T09:41:47.658Z"}
{"msg":"https://hyperledger.github.io/caliper/","username":"klenik","ts":"2019-09-09T09:42:16.200Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2) Thank you","username":"Utsav_Solanki","ts":"2019-09-09T09:42:32.907Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"The tutorials are work in progress, but you'll find them on that site soon","username":"klenik","ts":"2019-09-09T09:42:40.909Z"}
{"msg":"But there are some examples about how to use Caliper","username":"klenik","ts":"2019-09-09T09:43:06.309Z"}
{"msg":"ok","username":"Utsav_Solanki","ts":"2019-09-09T09:43:56.739Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2) does it support 1.4.2","username":"Utsav_Solanki","ts":"2019-09-09T12:55:31.744Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2) does it support 1.4.2 hyperledger fabric","username":"Utsav_Solanki","ts":"2019-09-09T12:55:31.744Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=5HZyLn9pFRTEJYCj2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"in hyperledger caliper repo they mentioned the latest version that has been verified is v1.4.1","username":"Utsav_Solanki","ts":"2019-09-09T12:59:28.959Z"}
{"msg":"@Utsav_Solanki Based on the [release notes](https://github.com/hyperledger/fabric/tree/v1.4.3/release_notes) of Fabric, I think there won't be any issues, just bind to the latest SDK version. And let's move this discussion to the general #caliper channel :)","username":"klenik","ts":"2019-09-09T13:02:11.703Z"}
{"msg":"ok, thank you","username":"Utsav_Solanki","ts":"2019-09-09T13:08:15.761Z"}
{"msg":"@rjones It looks like [probot-stale](https://probot.github.io/apps/stale/) is installed for the HL github org. I guess it needs an admin to enable it for the caliper repo (and bootstrap it with an encrypted github token)? What is the workflow we should follow?","username":"klenik","ts":"2019-09-09T16:12:47.512Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-09-09T16:12:47.550Z","type":"uj"}
{"msg":"@klenik I don't think you need any of that. Just add the stale.yaml in the right place","username":"rjones","ts":"2019-09-09T16:13:50.042Z"}
{"msg":"@rjones Oh, nice, I'll do that, thx!","username":"klenik","ts":"2019-09-09T16:14:13.233Z"}
{"msg":"For example: https://github.com/hyperledger/fabric/blob/master/.github/stale.yml","username":"rjones","ts":"2019-09-09T16:14:43.719Z"}
{"msg":"@nkl199 30 days to stale, then 7 days to close sounds about right for the settings, right? ","username":"klenik","ts":"2019-09-09T16:16:48.154Z"}
{"msg":"sounds good to me!","username":"nkl199","ts":"2019-09-09T16:17:15.757Z"}
{"msg":"so long as it doesnt close bug/enhancement tagged items i guess?","username":"nkl199","ts":"2019-09-09T16:17:43.012Z"}
{"msg":"Certain labels will be excluded of course :ok_hand: ","username":"klenik","ts":"2019-09-09T16:18:19.852Z"}
{"msg":"Agenda for the 9.11. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n- Scheduling the pending adapter PRs for review (Ethereum and FISCO BCOS adapters for starters)\n- Collection features to focus on for the v0.2.0 milestone. Some ideas\n  * Making some modules more OO (like user modules)\n  * Improving the life-cycle API for some objects (something like `initializeForClient(clientId)`, `initializeForRound(roundId)`, their finalize/end counterparts, where appropriate). \n  * Clean up the benchmark config a bit (the array notation for rounds is a bit hard to read and parse)\n  * Removing Zookeeper support (already WIP)\n- Documentation improvements:\n  * DLT tutorials (mainly Fabric for now)\n  * A general architecture docs that reflects the current design\n  * Versioned documentation (e.g., choose the doc version from a dropdown list, like the Composer docs)\n- AOB","username":"klenik","ts":"2019-09-10T09:57:24.918Z"}
{"msg":"- Designing an all-in-one example for the CI","username":"klenik","ts":"2019-09-10T11:30:46.102Z"}
{"msg":"Has joined the channel.","username":"Khaled.MH","ts":"2019-09-12T08:34:51.621Z","type":"uj"}
{"msg":":exclamation:  *This week's Caliper call is cancelled* :exclamation: ","username":"klenik","ts":"2019-09-16T13:28:42.207Z"}
{"msg":"Wow, we have a :caliper: icon, awesome! :grin: ","username":"klenik","ts":"2019-09-16T13:30:10.659Z"}
{"msg":":caliper: ","username":"rjones","ts":"2019-09-16T13:30:19.625Z"}
{"msg":"I put them in for every project I have art for","username":"rjones","ts":"2019-09-16T13:30:31.378Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-09-16T15:33:45.127Z","type":"ul"}
{"msg":"Hey All. I put together a draft for the upcoming :caliper: project update. Feel free to add to it (hopefully more people can edit the same draft), comment on it, etc. You can see the draft after logging in:\n\nhttps://wiki.hyperledger.org/pages/resumedraft.action?draftId=20023040&draftShareId=b6eb7388-0967-47d3-92a9-ca3f57811645&\n\nI'd like to publish it by the end of this week to give the TSC ample time to digest it before the verbal presentation next Thursday. ","username":"klenik","ts":"2019-09-19T14:45:15.792Z"}
{"msg":"Agenda for the 9.24. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n- Discussion/status update about the current major PRs (Ethereum, FISCO BCOS, Prometheus)\n- AOB","username":"klenik","ts":"2019-09-24T10:10:32.748Z"}
{"msg":"Agenda for the 9.25. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n- Discussion/status update about the current major PRs (Ethereum, FISCO BCOS, Prometheus)\n- AOB","username":"klenik","ts":"2019-09-24T10:10:32.748Z"}
{"msg":"Sorry for my absence in the call","username":"russanto","ts":"2019-09-26T10:42:07.138Z"}
{"msg":"@klenik I'll fix what you pointed asap","username":"russanto","ts":"2019-09-26T10:42:23.069Z"}
{"msg":"@russanto No problem, it was rather short notice :sweat_smile: Let me know if you need any help/guidance","username":"klenik","ts":"2019-09-26T10:46:53.052Z"}
{"msg":"@nkl199 Do we have new things to discuss on the call?","username":"klenik","ts":"2019-10-01T14:47:19.192Z"}
{"msg":"@AgniCampos Do you need any assistance with the Corda adapter that we should discuss on the call?","username":"klenik","ts":"2019-10-01T14:47:48.583Z"}
{"msg":"Has joined the channel.","username":"AgniCampos","ts":"2019-10-01T14:47:48.616Z","type":"uj"}
{"msg":":thinking: \n- PR review process\n- Desired contents for next release (and an anticipated date)\n- Focal points for release++","username":"nkl199","ts":"2019-10-01T15:24:11.915Z"}
{"msg":"In that case, agenda for the 10.02. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) PR review process\n2) TODOs till next release\n3) Focal points for next-next release","username":"klenik","ts":"2019-10-01T15:47:22.810Z"}
{"msg":"Some bootstrap thoughts:\n1) I think merging the adapter PRs will be the bottlenecks. The other issues I marked for milestone 0.2.0 are smaller.\n2) Beside the marked issues for 0.2.0, I'd like to clean up a bit the round definitions (get rid of the array syntax). \n3) The reason I want to leave as few issues for 0.3.0 as possible is because we'll have our hands full with the distributed client implementation. I think that issue alone will take up the whole release-cycle time ","username":"klenik","ts":"2019-10-01T15:50:47.158Z"}
{"msg":"@russanto Let us know if you need any help with the Ethereum adapter :)","username":"klenik","ts":"2019-10-02T11:12:20.955Z"}
{"msg":"Thanks, to be honest I had some troubles yesterday to set up the environment to test changes with the 0.1.0 release","username":"russanto","ts":"2019-10-02T13:18:24.584Z"}
{"msg":"each time I have either to stop clean and restart verdaccio or to increase the ethereum adapter version in order to have it updated with changes","username":"russanto","ts":"2019-10-02T13:19:28.971Z"}
{"msg":"You can run the CLI directly, without verdaccio. If you keep your samples the the packages/caliper-samples dir, then:\n```\ncd packages/caliper-samples\nnode ../caliper-cli/caliper.js benchmark run ......\n```","username":"klenik","ts":"2019-10-02T13:20:46.226Z"}
{"msg":"This way you run the current/master version of Caliper, not the published packages. And it's easier to debug this way. Once you feel confident about your code, you can try the verdaccio way.","username":"klenik","ts":"2019-10-02T13:21:54.318Z"}
{"msg":"@russanto https://hyperledger.github.io/caliper/vLatest/installing-caliper/#testing-the-code","username":"klenik","ts":"2019-10-02T13:26:04.922Z"}
{"msg":"Thanks, I completely jumped that line in doc","username":"russanto","ts":"2019-10-02T13:27:23.469Z"}
{"msg":"about the ethereum adapter PR, I don't understand where the apache license is absent","username":"russanto","ts":"2019-10-04T17:12:23.782Z"}
{"msg":"ah sorry, he meant the identifier, it is \"SPDX-License-Identifier: Apache-2.0\" right ?","username":"russanto","ts":"2019-10-04T17:13:58.860Z"}
{"msg":"@russanto Yeah, but don't worry about it for now. We'll add those to every file (and automatic license test settings) before the next release","username":"klenik","ts":"2019-10-04T18:08:08.175Z"}
{"msg":"Just concentrate for the current CI requirements :)","username":"klenik","ts":"2019-10-04T18:08:22.591Z"}
{"msg":"ok, I update with necessary things that you pointed in the PR. I wait for your last feedback before doing a single commit with all updates","username":"russanto","ts":"2019-10-06T16:54:09.367Z"}
{"msg":"ok, I updated with necessary things that you pointed in the PR. I'm waiting for your last feedback before doing a single commit with all updates","username":"russanto","ts":"2019-10-06T16:54:09.367Z"}
{"msg":"@russanto I've left some minor comments on your PR. After addressing them, you can also squash the commits :thumbsup: ","username":"klenik","ts":"2019-10-07T09:31:22.715Z"}
{"msg":"do I add the ethereum test to the travis.yml too ?","username":"russanto","ts":"2019-10-08T11:00:00.444Z"}
{"msg":"@russanto Since you already added the ethereum test in the script, an extra `- env: BENCHMARK=ethereum` in the .travis.yml couldn't hurt :thumbsup: ","username":"klenik","ts":"2019-10-08T11:10:36.189Z"}
{"msg":"Agenda for the 10.09. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) PR review progress\n2) TODOs till next/imminent release","username":"klenik","ts":"2019-10-08T11:44:20.868Z"}
{"msg":"Easy fix: https://github.com/hyperledger/caliper/pull/432#issuecomment-539468822","username":"klenik","ts":"2019-10-08T11:52:44.611Z"}
{"msg":"perfect, thanks","username":"russanto","ts":"2019-10-08T13:55:09.298Z"}
{"msg":"fabric test is failing, can it be something related to updates on master that I don't have ?","username":"russanto","ts":"2019-10-08T14:13:08.563Z"}
{"msg":"Nope, something broke with the new CouchDB image, we'll fix it soon. As long as the ethereum job is passing, all is good","username":"klenik","ts":"2019-10-08T14:13:49.596Z"}
{"msg":"Commits squashed, asap I'll take a look to the doc PR","username":"russanto","ts":"2019-10-08T14:49:25.641Z"}
{"msg":"@russanto Merged the Ethereum PRs, awesome work!! :rocket: :fireworks: ","username":"klenik","ts":"2019-10-10T08:41:22.879Z"}
{"msg":":thumbsup: thanks for your support","username":"russanto","ts":"2019-10-10T08:41:45.398Z"}
{"msg":":exclamation: Today's :caliper: call is canceled ","username":"klenik","ts":"2019-10-16T10:28:10.549Z"}
{"msg":"thanks for reply on the other channel Attila- i'll continue discussions here","username":"AgniCampos","ts":"2019-10-18T12:48:40.535Z"}
{"msg":"Has joined the channel.","username":"shemnon","ts":"2019-10-19T13:25:58.390Z","type":"uj"}
{"msg":"Agenda for the 10.23. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) PR review/release process\n2) Approaching the distributed client implementation ","username":"klenik","ts":"2019-10-23T08:36:02.423Z"}
{"msg":"Agenda for the 10.23. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) PR review/release progress \n2) Approaching the distributed client implementation ","username":"klenik","ts":"2019-10-23T08:36:02.423Z"}
{"msg":"Lyne would like to present her current work on a generator for caliper test files","username":"nkl199","ts":"2019-10-23T10:30:41.802Z"}
{"msg":"Awesome :thumbsup: ","username":"klenik","ts":"2019-10-23T10:31:17.778Z"}
{"msg":"We also have Jason's UI, maybe the two have something in common ","username":"klenik","ts":"2019-10-23T10:32:04.509Z"}
{"msg":"@shemnon Once you squash your Besu commits, the PR is good to go :thumbsup: ","username":"klenik","ts":"2019-10-24T09:15:47.581Z"}
{"msg":"Done","username":"shemnon","ts":"2019-10-24T11:18:10.959Z"}
{"msg":"And merged :) Thanks for the quick and awesome contribution :thumbsup: :champagne: ","username":"klenik","ts":"2019-10-24T11:26:24.456Z"}
{"msg":":point_up: I second that! :D","username":"nkl199","ts":"2019-10-24T14:17:48.134Z"}
{"msg":"We'll use the development plan wiki page for features that require non-trivial designs or modifications: https://wiki.hyperledger.org/display/caliper/Caliper+Development+Plan\nThe distributed client (re)implementation falls in this category. I'll start by uploading a sequence diagram about the current data/control-flow in the core module.\nFeel free to comment on anything, ideas, insights are welcome, the wiki is a nice place for such focused discussions","username":"klenik","ts":"2019-10-28T07:54:06.114Z"}
{"msg":"tha's a busy image!!\n","username":"nkl199","ts":"2019-10-28T14:40:08.281Z"}
{"msg":"Yeah. It starts out nice and clear, then the communication between the processes and update processing happens. :boom: ","username":"klenik","ts":"2019-10-28T14:41:02.213Z"}
{"msg":"I'll write up some concerns in the wiki, mainly about the following:\n1. Caliper-flow has round processing, which should belong to DefaultTest\n2. DefaulTest really should be called TestOrchestrator or something\n3. The \"ready\" and \"promise\" Promises embedded in the `ChildProcess` objects are hard to follow. We should limit the process eventing to a thin wrapper/layer, and provide unified functions for the events for higher modules.\n4. Observers, Monitors, Reporters, both in master and clients. Maybe we could \"formalize\" these modules based on the goals, requirements and interactions","username":"klenik","ts":"2019-10-28T14:44:36.315Z"}
{"msg":"yup","username":"nkl199","ts":"2019-10-28T15:24:10.762Z"}
{"msg":"Agenda for the 10.30. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) Doing an `unstable` rolling release on every PR merge (npm and docker)\n2) Distributed client implementation, points of issues. Bootstrap thoughts: https://wiki.hyperledger.org/display/caliper/Caliper+Development+Plan\n3) AOB\n\n:exclamation:  Don't forget about the recent winter time compensation, might affect your country's local time","username":"klenik","ts":"2019-10-29T13:47:03.948Z"}
{"msg":"@shemnon The Besu integration test seems to pass, although it actually errors during deploying the contract:\nhttps://travis-ci.org/hyperledger/caliper/jobs/607545421#L1680\nThe basically same Ethereum test passes, so this might be Besu-related? Could you investigate please?","username":"klenik","ts":"2019-11-05T11:32:53.658Z"}
{"msg":"My first attempt at repcicaiton failed, the scripts when run by hand worked.","username":"shemnon","ts":"2019-11-05T15:08:01.349Z"}
{"msg":"I think it's startup delay again, which is why the failure is flakey.  I got it when I did a compose up and went straight to the test.","username":"shemnon","ts":"2019-11-05T17:52:40.185Z"}
{"msg":"And you also got the `Invalid params` error? ","username":"klenik","ts":"2019-11-05T19:12:11.173Z"}
{"msg":"Yep.  Thats the only way I see that particular error.  However I got some more errors I'm prepping a PR for separate from this.","username":"shemnon","ts":"2019-11-05T20:28:16.047Z"}
{"msg":"I'll increase the sleep time in my PR (messing around with the configs anyway)","username":"klenik","ts":"2019-11-05T20:56:38.234Z"}
{"msg":"Agenda for the 11.06. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) Progress updates about pending items (unstable publishing, core refactoring, etc)\n2) Discuss next short-term items","username":"klenik","ts":"2019-11-06T10:29:22.455Z"}
{"msg":":exclamation: Tomorrow's :caliper: call is canceled. Questions and updates can be discussed in this channel instead. :exclamation: ","username":"klenik","ts":"2019-11-12T11:24:52.068Z"}
{"msg":"@mackcom @GregTheGreek How long did syncing to the ETC chain head take?  Did you do archival or fast sync?","username":"shemnon","ts":"2019-11-12T21:34:19.313Z"}
{"msg":"Has joined the channel.","username":"GregTheGreek","ts":"2019-11-12T21:34:19.363Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mackcom","ts":"2019-11-12T21:34:19.366Z","type":"uj"}
{"msg":"The recent round refactoring seems to have broken arguments for multiple clients.  For example: the iroha simple test won't run as the second client gets 'undefined' as it's args - \n```\nnode ./packages/caliper-cli/caliper.js benchmark run --caliper-workspace ./packages/caliper-samples --caliper-benchconfig benchmark/simple/config.yaml --caliper-networkconfig network/iroha/simplenetwork/iroha.json\n[...]\n2019.11.12-23:38:06.663 error [caliper] [iroha.js]      Error within getContext: TypeError: Cannot read property 'hasOwnProperty' of undefined\n    at Iroha.getContext (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-iroha/lib/iroha.js:343:22)\n    at Blockchain.getContext (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/common/core/blockchain.js:76:33)\n    at CaliperLocalClient.doTest (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/caliper-local-client.js:320:49)\n    at MessageHandler.test [as testHandler] (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/message-handler.js:104:37)\n    at Function.handle (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/message-handler.js:131:52)\n    at process._tickCallback (internal/process/next_tick.js:68:7)\n2019.11.12-23:38:06.664 info  [caliper] [local-client.js]       Client[5522] encountered an error: Error: Failed when finding access point or user key\n    at Iroha.getContext (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-iroha/lib/iroha.js:391:35)\n    at Blockchain.getContext (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/common/core/blockchain.js:76:33)\n    at CaliperLocalClient.doTest (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/caliper-local-client.js:320:49)\n    at MessageHandler.test [as testHandler] (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/message-handler.js:104:37)\n    at Function.handle (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/message-handler.js:131:52)\n    at process._tickCallback (internal/process/next_tick.js:68:7)\n2019.11.12-23:38:06.664 error [caliper] [message-handler]       Error while handling \"test\" message: Error: Failed when finding access point or user key\n    at Iroha.getContext (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-iroha/lib/iroha.js:391:35)\n    at Blockchain.getContext (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/common/core/blockchain.js:76:33)\n    at CaliperLocalClient.doTest (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/caliper-local-client.js:320:49)\n    at MessageHandler.test [as testHandler] (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/message-handler.js:104:37)\n    at Function.handle (/Users/dannoferrin/git/github.com/shemnon/caliper/packages/caliper-core/lib/worker/client/message-handler.js:131:52)\n    at process._tickCallback (internal/process/next_tick.js:68:7)\n[...]\n```","username":"shemnon","ts":"2019-11-13T06:41:47.842Z"}
{"msg":"My work on besu is impacted becuase we also are depending on non-undefined args values.  Like Iroha we need to track sequence numbers for transactions per client for multi-client setup.","username":"shemnon","ts":"2019-11-13T06:42:26.373Z"}
{"msg":"Will look into it. Or if you found the place of the bug, feel free to raise a pr","username":"klenik","ts":"2019-11-13T07:35:47.739Z"}
{"msg":"@shemnon I'm trying to replicate it now","username":"klenik","ts":"2019-11-13T09:42:37.436Z"}
{"msg":"@shemnon @nkl199 Raised the fix PR (https://github.com/hyperledger/caliper/pull/649)","username":"klenik","ts":"2019-11-13T10:58:19.433Z"}
{"msg":":thumbsup: ","username":"nkl199","ts":"2019-11-13T11:01:58.119Z"}
{"msg":"did u intend to leave the comments in the config-record-replay-rate.yaml file?","username":"nkl199","ts":"2019-11-13T11:03:05.643Z"}
{"msg":"Yeah, it kind of shows what needs to be filled/overridden at the place of use (could have clarified it a bit though :sweat_smile: ). ","username":"klenik","ts":"2019-11-13T11:04:08.126Z"}
{"msg":":thumbsup: ","username":"nkl199","ts":"2019-11-13T11:11:30.058Z"}
{"msg":"@shemnon The fix is merged","username":"klenik","ts":"2019-11-13T11:34:11.868Z"}
{"msg":"[at]here:\nSome thoughts about the new TX stat collection and the trimming feature.\n- Trimming is used to exclude some TXs from the stats in the beginning of a round (which is typically considered a warmup period, often resulting in some irregular TX stats).\n- The new TX stat collection mechanism has precise access to the number and create time of TXs in the worker nodes (which is closest to the TX sending).\n-  Trimming can be implemented in this collector on a per-TX basis, and not on already aggregated stats (as currently, and the precision of trimming depends on the aggregation time).\n- The effects of such precise TX trimming is that the trimmed TXs are completely hidden from every part of Caliper (since the results are technically dropped): \n  1. They're not included in the the submitted TX number (used for the `txNumber`-based TX generation, or used by rate controllers)\n  2. They're not included in the gathered statistics, which means that the TxObservers (which can report to the manager node, or push the current stats to a Prometheus push gateway, or just log them somewhere) won't see them.\n  3. This effect will be consistent across every sub-module of Caliper (both in the master and worker nodes). Even though trimming can be achieved through Prometheus (if used), it only supports time-based trimming.\n\nI think this would be a nice-to-have feature. It is opt-in, of course, and any user can do her/his own post-processing on the somehow exported results (allowing more exotic data manipulation, not just trimming). But if we can drop some TXs out of the box, maybe it helps the further processing of data. \n\nAny thoughts on this are welcome :)  ","username":"klenik","ts":"2019-11-14T10:03:07.478Z"}
{"msg":"Any node experts that can tell me why my CI build failed? https://travis-ci.org/hyperledger/caliper/jobs/612026412?utm_medium=notification&utm_source=github_status - shouldn't the build grab the websocket dependency autmatically?","username":"shemnon","ts":"2019-11-14T19:42:00.954Z"}
{"msg":"@shemnon I don't see it in the package deps. Was it explicitly listed before? Maybe it was accidentally removed? ","username":"klenik","ts":"2019-11-14T20:18:02.839Z"}
{"msg":"No, it wasn't listed.  I added a dep to `\"ethereumjs-wallet\": \"^0.6.3\"`, which has a dep to `web3` which is listed as a dev dep.  Do I need to move web3?","username":"shemnon","ts":"2019-11-14T20:19:38.445Z"}
{"msg":"Hmm, according to git blame, it was never listed. Maybe it was loaded indirectly, and that deps' deps changed. You should add it to deps ","username":"klenik","ts":"2019-11-14T20:19:44.583Z"}
{"msg":"web3 had a version bump 18hrs ago, i've dropped the version in the ethereum adaptor down to 1.2 and spinning a build to see if that was the issue","username":"nkl199","ts":"2019-11-15T09:56:28.437Z"}
{"msg":"web3 had a version bump 18hrs ago, i've dropped the version in the ethereum adaptor down to 1.2.2 and spinning a build to see if that was the issue","username":"nkl199","ts":"2019-11-15T09:56:28.437Z"}
{"msg":"And that's why the binding pulls explicit versions :joy: We should adopt the same for important deps to avoid further surprises ","username":"klenik","ts":"2019-11-15T09:58:08.368Z"}
{"msg":"yh, that would be a smart move","username":"nkl199","ts":"2019-11-15T09:58:25.629Z"}
{"msg":"would also explain why everything is passing locally, because i have a package.lock file enforcing what it pulled last time :joy: ","username":"nkl199","ts":"2019-11-15T09:59:32.244Z"}
{"msg":"Yeah, maybe it's time we commit a lock file, as npm suggests :D","username":"klenik","ts":"2019-11-15T10:00:19.618Z"}
{"msg":"builds passed - raising PR","username":"nkl199","ts":"2019-11-15T10:11:10.002Z"}
{"msg":"@shemnon - If you rebase and force push, your build should pass now :thumbup: ","username":"nkl199","ts":"2019-11-15T10:29:57.669Z"}
{"msg":"Agenda for the 11.20. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) A quick presentation about the vNext architecture\n2) Monitoring and reporting status (now that it's been cleaned up a bit)\n3) AOB","username":"klenik","ts":"2019-11-20T06:53:54.364Z"}
{"msg":"Uploaded the presentation to the dev wiki page: https://wiki.hyperledger.org/pages/viewpageattachments.action?pageId=9110170&metadataLink=true","username":"klenik","ts":"2019-11-20T10:46:15.418Z"}
{"msg":"Agenda for the 11.20. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) Progress report on the manager-worker refactoring (mainly for @nkl199, my tasks haven't really progressed since last week :sweat_smile: )\n2) AOB","username":"klenik","ts":"2019-11-27T11:13:09.523Z"}
{"msg":"Agenda for the 11.27. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) Progress report on the manager-worker refactoring (mainly for @nkl199, my tasks haven't really progressed since last week :sweat_smile: )\n2) AOB","username":"klenik","ts":"2019-11-27T11:13:09.523Z"}
{"msg":"(might be time to update the planning document linked in the header for this channel ... )","username":"nkl199","ts":"2019-11-27T11:42:57.370Z"}
{"msg":"@rjones I think only you have access to the channel topic settings, could you change the planning document link to this? \nhttps://wiki.hyperledger.org/display/caliper/Caliper+Development+Plan","username":"klenik","ts":"2019-11-27T12:15:24.223Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-11-27T12:15:24.259Z","type":"uj"}
{"msg":"klenik","username":"rjones","ts":"2019-11-27T17:10:59.484Z","type":"subscription-role-added"}
{"msg":"@klenik now you have the power :)","username":"rjones","ts":"2019-11-27T17:11:21.262Z"}
{"msg":"Discuss implementation details of Hyperledger Caliper. See [planning document](https://wiki.hyperledger.org/display/caliper/Caliper+Development+Plan)","username":"klenik","ts":"2019-11-28T11:02:52.154Z","type":"room_changed_topic"}
{"msg":"Used for contributors of Hyperledger Caliper to discuss implementation details. See [planning document](https://wiki.hyperledger.org/display/caliper/Caliper+Development+Plan)","username":"klenik","ts":"2019-11-28T11:02:52.156Z","type":"room_changed_description"}
{"msg":"Yes, I have *insert unlimited power meme here*","username":"klenik","ts":"2019-11-28T11:07:05.153Z"}
{"msg":"Yes, I have /insert unlimited power meme here/","username":"klenik","ts":"2019-11-28T11:07:05.153Z"}
{"msg":"Has joined the channel.","username":"RahulEth","ts":"2019-11-29T10:40:14.262Z","type":"uj"}
{"msg":"hi all i am following below repostry https://github.com/hyperledger/caliper/ want to setup caliper for hyperledger fabric. please help thanks","username":"RahulEth","ts":"2019-11-29T10:40:15.906Z"}
{"msg":"@RahulEth https://hyperledger.github.io/caliper/vLatest/getting-started/ ?","username":"nkl199","ts":"2019-12-02T09:15:43.721Z"}
{"msg":"Has joined the channel.","username":"ArjunC 2","ts":"2019-12-03T06:12:48.714Z","type":"uj"}
{"msg":"hii have anyone tried  nextledger accelerator with caliper for fabric network 1.4?","username":"ArjunC 2","ts":"2019-12-03T06:12:51.400Z"}
{"msg":"I think that is a no from those that monitor this channel","username":"nkl199","ts":"2019-12-03T17:05:18.662Z"}
{"msg":"-> agenda item for tomorrow: mqtt broker configuration","username":"nkl199","ts":"2019-12-03T17:05:44.300Z"}
{"msg":"Haven't heard of such integration yet. The TX blur would be challenging to handle on Caliper side. I'll have a look at the whitepaper later.","username":"klenik","ts":"2019-12-03T17:50:39.760Z"}
{"msg":"Agenda for the 12.04. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) MQTT broker configuration\n2) AOB","username":"klenik","ts":"2019-12-03T17:51:46.744Z"}
{"msg":"i want to run test cases for fabric but not able to setup all the things","username":"RahulEth","ts":"2019-12-04T06:33:23.002Z"}
{"msg":"can you elaborate on \"allthe things\" ?","username":"nkl199","ts":"2019-12-04T09:16:49.052Z"}
{"msg":"can you elaborate on \"all the things\" ?","username":"nkl199","ts":"2019-12-04T09:16:49.052Z"}
{"msg":"i am my own custom network with two orgs, raft ordering service and my own chaincode .","username":"RahulEth","ts":"2019-12-04T09:18:05.150Z"}
{"msg":"Accelerator itself (iirc) is a batching mechanism that sits in front of Fabric, and would require its own adaptor component.","username":"nkl199","ts":"2019-12-04T09:18:06.253Z"}
{"msg":"using fabric 1.4.2 ","username":"RahulEth","ts":"2019-12-04T09:18:46.107Z"}
{"msg":"https://developer.ibm.com/tutorials/blockchain-performance-testing-smart-contracts-vscode-caliper/","username":"nkl199","ts":"2019-12-04T09:18:53.952Z"}
{"msg":"this might help","username":"nkl199","ts":"2019-12-04T09:18:56.831Z"}
{"msg":"will look it thanks . have you tried it?","username":"RahulEth","ts":"2019-12-04T09:19:38.550Z"}
{"msg":"kinda ... I wrote it :joy: ","username":"nkl199","ts":"2019-12-04T09:19:47.162Z"}
{"msg":"thanks again boss!! :grinning: ","username":"RahulEth","ts":"2019-12-04T09:20:18.109Z"}
{"msg":"lol, no worries","username":"nkl199","ts":"2019-12-04T09:20:25.658Z"}
{"msg":"will contact you if required","username":"RahulEth","ts":"2019-12-04T12:41:33.030Z"}
{"msg":"well, the modularisation of the worker-orchestrator messenger is now in a PR :scream: ","username":"nkl199","ts":"2019-12-09T16:55:38.499Z"}
{"msg":"Yeah, got the notification, with mixed feelings as a reviewer :sweat_smile: But now I can rebase in peace and mess around freely with the dataflow :D","username":"klenik","ts":"2019-12-09T16:57:22.091Z"}
{"msg":"hahahah","username":"nkl199","ts":"2019-12-09T17:07:47.510Z"}
{"msg":"aye, i'm hoping that the modularization makes it easier?","username":"nkl199","ts":"2019-12-09T17:08:04.806Z"}
{"msg":"Yeah, it definitely will :chart_with_upwards_trend: ","username":"klenik","ts":"2019-12-09T17:08:39.655Z"}
{"msg":"Agenda for the 12.11. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) Discussion about supporting multiple version of the same adapter, while still exposing only a single adapter (use cases: Ethereum adapter with fundamentally different SDK/programming models, single Fabric adapter for v1 and v2)\n2) AOB","username":"klenik","ts":"2019-12-11T11:18:10.810Z"}
{"msg":"Agenda for the 12.11. 3PM UTC+0 Caliper call. Contact info: https://github.com/hyperledger/caliper/wiki/Caliper-Calls\n1) Discussion about supporting multiple version of the same adapter, while still exposing only a single adapter (use cases: Ethereum adapter with fundamentally different SDK/programming models, single Fabric adapter for v1 and v2)\n2) Discussion about implementing Caliper worker nodes in other languages (made possible by the MQTT messaging and the cleaned-up worker modules)\n3) AOB","username":"klenik","ts":"2019-12-11T11:18:10.810Z"}
{"msg":"Has joined the channel.","username":"atoulme","ts":"2019-12-16T21:23:56.564Z","type":"uj"}
{"msg":":exclamation: The 12.18. 3PM UTC+0 Caliper call is canceled :exclamation: ","username":"klenik","ts":"2019-12-18T12:08:18.023Z"}
{"msg":"Has joined the channel.","username":"JerielFrancisMercado","ts":"2019-12-19T01:44:55.147Z","type":"uj"}
{"msg":"@rjones When did the migration to travis-ci.com happened? And what are the implications/benefits compared to the org version?","username":"klenik","ts":"2019-12-23T10:18:44.330Z"}
{"msg":"@klenik last week. there should be no changes. the reason to migrate was a number of projects existed both in .org and .com and were showing inconsistent results","username":"rjones","ts":"2019-12-23T13:59:22.740Z"}
{"msg":"Okay, thanks for the clarification :thumbsup: ","username":"klenik","ts":"2019-12-23T15:42:13.340Z"}
{"msg":"I strongly suspect that the Caliper call will not go ahead tomorrow (25/12) on account of the day it is falling on :santa: ","username":"nkl199","ts":"2019-12-24T10:59:37.390Z"}
{"msg":"I think I share your suspicion, so tomorrow's call is canceled and happy holidays everyone! :) ","username":"klenik","ts":"2019-12-24T11:04:44.930Z"}
{"msg":"Merry Christmas :grinning: ","username":"FlyingTiger","ts":"2019-12-24T12:15:01.115Z"}
{"msg":"Tomorrow is also a holiday, so the next call will happen at 8th of January. Happy new year everyone 🎉🎊","username":"klenik","ts":"2019-12-31T12:10:23.615Z"}
{"msg":"Maintainers call agenda (feel free to add/extend under a thread):\n- Current PRs\n- New CLI commands following the ability to have stand alone clients that are communicated via a messaging protocol","username":"nkl199","ts":"2020-01-08T12:17:10.141Z"}
{"msg":"- The orderer connection management issue might also worth a few sentences\n- Silona recently suggested a blog post about Caliper","username":"klenik","ts":"2020-01-08T14:08:22.386Z"}
{"msg":"Maintainers call agenda (feel free to add/extend under a thread):\n1. Feature set for v0.3.0 (or issues to fix until release)\n2. Unified plugin handling (message transports, observers, monitors, rate controllers, adapters)\n3. CLI structure (master, worker, binding, generators, etc)","username":"klenik","ts":"2020-01-15T13:04:27.041Z"}
{"msg":"4. Documentation improvements :)","username":"klenik","ts":"2020-01-15T14:19:28.134Z"}
{"msg":"following from doc improvements, i think we should have the \"install from npm\" at the top, and assume someone has installed from npm globally. We can go into the install from source at the bottom as usual but people seem to be hitting the issue where they are running unstable code against benchmarks that are incompatible","username":"nkl199","ts":"2020-01-23T17:01:03.488Z"}
{"msg":"following from doc improvements, i think we should have the \"install from npm\" at the top of the `nstalling and Running Caliper` page, and assume someone has installed from npm globally. We can go into the CLI command as per a global install and move to the install from source at the bottom as usual but people seem to be hitting the issue where they are running unstable code against benchmarks that are incompatible","username":"nkl199","ts":"2020-01-23T17:01:03.488Z"}
{"msg":"following from doc improvements, i think we should have the \"install from npm\" at the top of the `Installing and Running Caliper` page, and assume someone has installed from npm globally. We can go into the CLI command as per a global install and move to the install from source at the bottom as usual but people seem to be hitting the issue where they are running unstable code against benchmarks that are incompatible","username":"nkl199","ts":"2020-01-23T17:01:03.488Z"}
{"msg":"TL;DR; We need to tag the bench repo.\n\nI think there is some confusion in the terminology that should be clarified (I don't know the official npm terminology). The `Local NPM install` in the docs means that the `@hyperledger/caliper-cli` package is installed into the current/workspace directory, not to the global npm package dir on the machine/user-level. But it's still installed from the npm registry, without needing the cloned Caliper repo. The `Global NPM install` is the same, but the package (from the npm registry) is installed into the machine/user-level npm package dir.\n\nIf the user only wants to exercise the same SUT (both type and version) multiple times, then there's no practical difference between the two approaches (in other cases, see the notes in the docs about project separation).\n\nThe `Installing locally from source` part is mainly intended for developers, and true, it can lead to mismatches compared to the bench repo files, but this is the \"unstable\" area, so all bets are off.\n\nI think the reason for the recent user problems is that we modified configuration files in the bench repo according to the changes in the current unstable/unreleased version. Which contains breaking changes compared to v0.2.0. \n\nThe correct but cumbersome fix would be to make the bench repo compatible again with v0.2.0 and tag it as v0.2.0. Then re-apply the changes corresponding to the new changes in the main repo since the release. And never forget to tag the bench repo upon a new release :)","username":"klenik","ts":"2020-01-23T17:27:35.308Z"}
{"msg":"Putting out some thoughts relating to the current way benchmarks are defined. At the moment we have:\n```\ntest:\n  rounds:\n    -\n    -\n    -\n```\nSo the notion is that we have a test, with a series of rounds. I don't really feel that this is entirely correct, or perhaps it is and i'm not sticking to an assumed convention. Are we in fact saying that we have a `test-suite` that is comprised of a series of (one or more) `tests`? Because the notion of `rounds` implies that I'm going to be doing the same thing again and again, which I can achieve by running the benchmark multiple times.\n\nI guess what I'm getting at is ... shall we change this benchmark configuration file naming convention to reflect that the configuration defines a test suite, comprised of multiple tests, where the output can be used for benchmarking?","username":"nkl199","ts":"2020-02-06T17:18:30.638Z"}
{"msg":"Valid question. Although test-suites and tests have their own solid definitions in the testing domain, usually implying the independence between tests. So I'd choose a third naming convention :D something like \"benchmark\" and \"phases\" ","username":"klenik","ts":"2020-02-06T17:23:17.552Z"}
{"msg":"Just like the data ingestion phase of the tpc benchmarks. We should probably look up the terminology in those standards ","username":"klenik","ts":"2020-02-06T17:24:05.145Z"}
{"msg":"But I agree that rounds implicate something like fight rounds :sweat_smile: ","username":"klenik","ts":"2020-02-06T17:25:00.750Z"}
{"msg":"yeah, it's something I keep looking at and my inner voice tells me it is wrong, but I can't think of a better term, so I forget it","username":"nkl199","ts":"2020-02-06T17:26:17.429Z"}
{"msg":"I have some colleagues in the benchmark domain, I'll ask around, just ping me before the next call :) ","username":"klenik","ts":"2020-02-06T17:27:27.515Z"}
{"msg":"A more imminent issue is the benchmark repo's versioning. We should revert some commits since the v0.2.0 release, tag the repo, and reapply the commits. Or since 0.3.0 is around the corner, we could do it then ","username":"klenik","ts":"2020-02-06T20:41:21.797Z"}
{"msg":"either way, but yes ... should be easy as we can revert the last few changes that broke people","username":"nkl199","ts":"2020-02-07T09:12:03.420Z"}
{"msg":"Has joined the channel.","username":"stone-ch","ts":"2020-02-11T08:21:57.121Z","type":"uj"}
{"msg":"unfortunately I am unable to attend today's meeting due to a schedule conflict :(","username":"nkl199","ts":"2020-02-12T13:26:45.461Z"}
{"msg":"Same for me (sick day), so I guess the call is canceled ","username":"klenik","ts":"2020-02-12T14:01:07.190Z"}
{"msg":"Has joined the channel.","username":"CatarinaDiegues","ts":"2020-02-19T23:06:30.317Z","type":"uj"}
{"msg":"[Caliper question on Reddit](https://old.reddit.com/r/hyperledger/comments/f8wmhd/does_anyone_have_an_eta_on_when_caliper_will_be/)","username":"rjones","ts":"2020-02-24T20:26:13.011Z"}
{"msg":"it's a confusing question - fabric-sdk is compatible with Fabric 2.0 ... so it is already supported","username":"nkl199","ts":"2020-02-25T13:20:01.233Z"}
{"msg":"I dunno. tell them that, maybe?","username":"rjones","ts":"2020-02-25T15:44:46.918Z"}
{"msg":"hmm. All of the documentation says fabric 1.4","username":"rjones","ts":"2020-02-25T16:31:43.264Z"}
{"msg":"does Caliper rely on composer for Fabric support? all of the Composer packages were unpublished on NPM","username":"rjones","ts":"2020-02-25T18:51:54.263Z"}
{"msg":"we have marked the composer package as deprecated and removed it from the caliper code base","username":"nkl199","ts":"2020-02-26T09:12:36.338Z"}
{"msg":"we have marked the composer addaptor as deprecated and removed it from the caliper code base","username":"nkl199","ts":"2020-02-26T09:12:36.338Z"}
{"msg":"we have marked the composer adaptor as deprecated and removed it from the caliper code base","username":"nkl199","ts":"2020-02-26T09:12:36.338Z"}
{"msg":"The composer packages are still there:\nhttps://www.npmjs.com/package/@hyperledger/caliper-composer","username":"klenik","ts":"2020-02-26T09:58:51.610Z"}
{"msg":"NPM doesn't allow unpublishing after 72 hours","username":"klenik","ts":"2020-02-26T09:59:31.947Z"}
{"msg":"Do you want them to go away?","username":"rjones","ts":"2020-02-26T16:39:55.584Z"}
{"msg":"I was trying to build caliper yesterday, and I couldn't. Part of the failure was hitting composer issues.","username":"rjones","ts":"2020-02-26T16:40:31.087Z"}
{"msg":"@klenik I can have that package unpublished if you want.","username":"rjones","ts":"2020-02-26T16:40:51.131Z"}
{"msg":"I was able to have a bunch of NPM stuff removed for Caliper.","username":"rjones","ts":"2020-02-26T16:42:05.803Z"}
{"msg":"I was able to have a bunch of NPM stuff removed for COmposer.","username":"rjones","ts":"2020-02-26T16:42:05.803Z"}
{"msg":"Ah, I though you meant that the caliper-composer packages were unpublished... My bad. ","username":"klenik","ts":"2020-02-26T16:52:41.814Z"}
{"msg":"If the composer packages are gone, then that could cause a problem","username":"klenik","ts":"2020-02-26T16:53:54.070Z"}
{"msg":"they're gone.","username":"rjones","ts":"2020-02-26T16:54:00.032Z"}
{"msg":"I was confused, sorry.","username":"rjones","ts":"2020-02-26T16:54:42.581Z"}
{"msg":"I deleted all of the docker hub images, not composer.","username":"rjones","ts":"2020-02-26T16:54:51.793Z"}
{"msg":"Although the install instructions on the Caliper page still work. The key part now is the `--prod-only` npm install. That will skip the SDK installs. And then just don't bind to composer :joy: ","username":"klenik","ts":"2020-02-26T16:54:55.890Z"}
{"msg":"https://www.npmjs.com/package/composer-client\nStill there, but deprecated. But this won't be a problem anymore once Caliper v0.3.0 is released soon","username":"klenik","ts":"2020-02-26T16:56:04.631Z"}
{"msg":"yeah, I was confused. I'm sorry for the static. However... it still wouldn't build :)","username":"rjones","ts":"2020-02-26T16:56:29.436Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=3CkrLwRwTmQYQ5BRE) How did you try to build Caliper?","username":"klenik","ts":"2020-02-26T16:56:38.939Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=3CkrLwRwTmQYQ5BRE","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=3CkrLwRwTmQYQ5BRE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"there were errors about getting gPRC","username":"rjones","ts":"2020-02-26T16:56:39.987Z"}
{"msg":"I set up a fresh Ubuntu VM and started plowing through","username":"rjones","ts":"2020-02-26T16:57:00.804Z"}
{"msg":"(I'm opening the VM now)","username":"rjones","ts":"2020-02-26T16:57:25.441Z"}
{"msg":"```node-pre-gyp ERR! Tried to download(403): https://storage.googleapis.com/grpc-precompiled-binaries/node/grpc/v1.10.1/node-v79-linux-x64-glibc.tar.gz \nnode-pre-gyp ERR! Pre-built binaries not found for grpc@1.10.1 and node@13.9.0 (node-v79 ABI, glibc) (falling back to source compile with node-gyp) \nnode-pre-gyp ERR! Pre-built binaries not installable for grpc@1.10.1 and node@13.9.0 (node-v79 ABI, glibc) (falling back to source compile with node-gyp) \nnode-pre-gyp ERR! Hit error Connection closed while downloading tarball file \n```","username":"rjones","ts":"2020-02-26T16:58:21.824Z"}
{"msg":"`ry@ubu-i:~/caliper$ npx caliper-cli --version`","username":"rjones","ts":"2020-02-26T16:58:53.014Z"}
{"msg":"Hmm, what's the node version? 13.x? ","username":"klenik","ts":"2020-02-26T16:59:21.720Z"}
{"msg":"`node-pre-gyp ERR! cwd /home/ry/.npm/_npx/7372/lib/node_modules/caliper-cli/node_modules/composer-connector-hlfv1/node_modules/grpc\nnode-pre-gyp ERR! node -v v13.9.0\nnode-pre-gyp ERR! node-pre-gyp -v v0.7.0\nnode-pre-gyp ERR! not ok \n`","username":"rjones","ts":"2020-02-26T17:00:12.880Z"}
{"msg":"```node-pre-gyp ERR! cwd /home/ry/.npm/_npx/7372/lib/node_modules/caliper-cli/node_modules/composer-connector-hlfv1/node_modules/grpc\nnode-pre-gyp ERR! node -v v13.9.0\nnode-pre-gyp ERR! node-pre-gyp -v v0.7.0\nnode-pre-gyp ERR! not ok \n```","username":"rjones","ts":"2020-02-26T17:00:12.880Z"}
{"msg":"Official support is 8.x LTS and 10.x LTS. ","username":"klenik","ts":"2020-02-26T17:00:16.549Z"}
{"msg":"OK.","username":"rjones","ts":"2020-02-26T17:01:03.044Z"}
{"msg":"honestly, this whole experience was because I was trying to prove that your comment about it should work with fabric 2.0 was true :)","username":"rjones","ts":"2020-02-26T17:01:46.950Z"}
{"msg":"We've had a lot of issues with grpc and node. Currently we stabilized it for 8 and 10. We'll look into the newer versions, but probably not for this release","username":"klenik","ts":"2020-02-26T17:01:47.377Z"}
{"msg":"I think we can put a how-to on the Fabric config page for 2.0. Nick got it working, but the SDK is changing constantly AFAIK, so it's not easy to keep up ","username":"klenik","ts":"2020-02-26T17:03:52.509Z"}
{"msg":"yeah, I hear you. I would think the Fabric 2.0 should be stable now that it's released, no?","username":"rjones","ts":"2020-02-26T17:05:16.422Z"}
{"msg":"Fabric 2 might be stable, but the SDK still doesn't have a stable 2.0.0 version (only beta), according to npm: https://www.npmjs.com/package/fabric-network","username":"klenik","ts":"2020-02-26T17:07:57.400Z"}
{"msg":"ah yes I see. https://www.npmjs.com/package/fabric-network/v/2.0.0-snapshot.309 shows that.","username":"rjones","ts":"2020-02-26T17:08:44.286Z"}
{"msg":":exclamation: This week's :caliper: call is canceled due to the GF. :exclamation: ","username":"klenik","ts":"2020-03-03T21:33:48.941Z"}
{"msg":"Maintainers call agenda for 03.11. (feel free to add/extend under a thread):\n1. Updating the benchmark repo for v0.3.0\n2. Consider providing doc pages for the previous stable release (so have vPrev, vLatest and vNext). \n3. Add Fabric v2 binding and test the v2 adapter with the official v2 images/sdk (for v0.3.1)","username":"klenik","ts":"2020-03-09T15:49:21.985Z"}
{"msg":"4. Install core package separately in the docker image, so it is available for workload modules (otherwise it is just a dep of other packages, and npm can't resolve it when required from a workload module). \n5. Enhanced start/end scripts across config files.","username":"klenik","ts":"2020-03-09T15:56:06.847Z"}
{"msg":"6. Discuss following potential features:\n- start/end scripts separetely for master/worker (item 5 above)\n- some basic data broadcast among worker modules: master -> workers and workers -> workers (similarly to how the adapters can send data to workers). \n- The above will require to update the life-cycle management of workload modules, and finally convert them to classes if possible (there's an issue for that)\n- Introduce a `sequential` rate controller, which is not actually a rate controller, but a separate loop-variant in the workers without a rate controller. Most benchmarks require seqential requests on the worker/client/terminal level. Currently this requires some advanced Caliper magic with controllers and workload modules.\n- Introduce `conditional` TX drive mode beside txDuration and txNumber. This would mean passing an extra \"cancellation token\" to rate controllers and workload modules, so anyone can cancel a round upon some conditional completion. The txNumber or txDuration is sometimes hard to calculate, especially for data loading rounds before the actual benchmark","username":"klenik","ts":"2020-03-09T16:32:39.307Z"}
{"msg":"Just to clarify because of the summer time, the call starts in 2 hours. Right? :sweat_smile:  @nkl199 @shemnon ","username":"klenik","ts":"2020-04-01T13:01:51.360Z"}
{"msg":"I can confirm!","username":"nkl199","ts":"2020-04-01T13:02:15.729Z"}
{"msg":"So for besu versions, are `1.3.x` and `1.4.x` acceptable identifiers?  or do you want all versions spelled out?","username":"shemnon","ts":"2020-04-01T15:40:56.067Z"}
{"msg":"I would advise using SEMVER (not listing the final digit)","username":"rjones","ts":"2020-04-01T15:44:32.773Z"}
{"msg":"The versions in the binding are mainly determined by the SDK. So if the same package can be used for all 1.3.x Besu version, then I'd also suggest using 1.3 and 1.4 as versions","username":"klenik","ts":"2020-04-01T15:49:13.497Z"}
{"msg":"Since there's already a 1.3.2 binding, maybe that could be changed to 1.3.0 (to be consistent with the other versions), and note in the docs, that it also works for all patch versions","username":"klenik","ts":"2020-04-01T15:52:10.750Z"}
{"msg":"I'll propose patches for `1.3` and `1.4` later today along with the docs note.  This will be two patches, one in gh-pages and one in master.","username":"shemnon","ts":"2020-04-01T16:14:53.725Z"}
{"msg":":thumbsup: ","username":"klenik","ts":"2020-04-01T16:31:01.785Z"}
{"msg":"The TSC project update for caliper is a week or two late: https://wiki.hyperledger.org/display/TSC/2020+TSC+Project+Update+Calendar","username":"shemnon","ts":"2020-04-02T13:57:47.174Z"}
{"msg":"Oh, you're right, didn't notice the email notification :sweat_smile: Thanks for the reminder, I'll submit it tomorrow :thumbsup: ","username":"klenik","ts":"2020-04-02T19:05:40.033Z"}
{"msg":"review request - docs updates for besu versions - https://github.com/hyperledger/caliper/pull/786 and https://github.com/hyperledger/caliper/pull/787__","username":"shemnon","ts":"2020-04-03T16:43:40.906Z"}
{"msg":"review request - docs updates for besu versions - https://github.com/hyperledger/caliper/pull/786 and https://github.com/hyperledger/caliper/pull/787","username":"shemnon","ts":"2020-04-03T16:43:40.906Z"}
{"msg":"review request - change besu version in benchmarks - https://github.com/hyperledger/caliper-benchmarks/pull/52","username":"shemnon","ts":"2020-04-03T16:44:31.363Z"}
{"msg":"minor mod request on the bindings only - there are currently 2 `*besu-latest` tags ... should only be one (i assume appleid to the 1.4 version)","username":"nkl199","ts":"2020-04-06T11:08:21.197Z"}
{"msg":"Has joined the channel.","username":"jramps9","ts":"2020-04-07T15:53:03.771Z","type":"uj"}
{"msg":"Hello Caliper contributors! Friendly reminder to pls join us for the Marketing Committee-DevRel call tomorrow, 4/8 at 9am PT. This is a great opportunity to learn how you can get involved in many aspects of Hyperledger marketing including overall messaging, events, content, social media, PR etc. Feel free to add items to the agenda: https://wiki.hyperledger.org/x/_QjcAQ Hope to see you there :slight_smile: ","username":"jramps9","ts":"2020-04-07T15:53:04.759Z"}
{"msg":"Submitted the project update, feel free to extend it if I forgot something: https://wiki.hyperledger.org/display/TSC/2020+Q1+Hyperledger+Caliper","username":"klenik","ts":"2020-04-07T21:58:24.176Z"}
{"msg":"@rjones Just out of curiosity, how does the [CII Best Practices](https://bestpractices.coreinfrastructure.org/en/projects/2381) review process work. Are the criteria evaluated from time to time by LF/HL people, should we trigger such reviews, or we trigger it by editing certain entries? ","username":"klenik","ts":"2020-04-08T09:41:50.817Z"}
{"msg":"@rjones Just out of curiosity, how does the [CII Best Practices](https://bestpractices.coreinfrastructure.org/en/projects/2381) review process work? Are the criteria evaluated from time to time by LF/HL people, should we trigger such reviews, or we trigger it by editing certain entries? ","username":"klenik","ts":"2020-04-08T09:41:50.817Z"}
{"msg":"@klenik it's done via assertion","username":"rjones","ts":"2020-04-08T15:34:05.955Z"}
{"msg":"@klenik it's done via assertion by you.","username":"rjones","ts":"2020-04-08T15:34:05.955Z"}
{"msg":"@nkl199 @shemnon Can't make today's call, sorry. Progress report on my part: reviewing the benchmark repo update PR, then I'll start preparing the release/changes note for v0.3.1 just in case :)","username":"klenik","ts":"2020-04-15T14:16:58.446Z"}
{"msg":":thumbsup: ","username":"nkl199","ts":"2020-04-15T14:17:18.418Z"}
{"msg":":+1: ","username":"shemnon","ts":"2020-04-15T14:23:08.004Z"}
{"msg":"I don't have anything to discuss myself","username":"shemnon","ts":"2020-04-15T14:23:24.327Z"}
{"msg":"and it looks like I fell foul of my calendar not alerting me (have i ever mentioned how much I dislike lotus notes?)","username":"nkl199","ts":"2020-04-15T15:15:23.304Z"}
{"msg":"Has left the channel.","username":"MHBauer","ts":"2020-04-16T21:27:01.491Z","type":"ul"}
{"msg":"Has joined the channel.","username":"benjamincburns","ts":"2020-04-20T21:23:38.447Z","type":"uj"}
{"msg":"review request: https://github.com/hyperledger/caliper/pull/808","username":"benjamincburns","ts":"2020-04-20T21:23:57.474Z"}
{"msg":"Maintainers meeting topics:\n- Are we ready for a new release?\n- Pending the above, what should be targeted for the next release cycle?\n- Is it time for some tutorials?","username":"nkl199","ts":"2020-04-22T07:58:32.022Z"}
{"msg":"Sorry for missing the call. My quick take on the above points: yes, core improvements, yes :D","username":"klenik","ts":"2020-04-22T16:44:43.683Z"}
{"msg":"Topics:\n- caliper PRs to merge\n- when to release?\n- Alternative report options (not html) <external joining call here>","username":"nkl199","ts":"2020-04-29T13:51:01.571Z"}
{"msg":"@nkl199 can I please request an invite to the maintainer's meeting? I've more or less taken over the work that @shemnon was doing previously. Although if he's presently on the invite list, I think he should stay","username":"benjamincburns","ts":"2020-05-04T21:59:33.487Z"}
{"msg":"In other news - by any chance was there a recent change that would've broke/added command line arguments? Up until recently I've been running a master process with the command `caliper launch master --caliper-benchconfig config/benchmark.yaml --caliper-networkconfig config/networkconfig.json --caliper-workspace config/`, and on the latest `HEAD` of `master` it errors and prints usage text ","username":"benjamincburns","ts":"2020-05-04T22:01:41.555Z"}
{"msg":"no worries if this is expected - just figured I'd ask here before raising an issue","username":"benjamincburns","ts":"2020-05-04T22:01:58.796Z"}
{"msg":"it looks like `burrow` was changed? https://github.com/hyperledger/caliper/commit/2c55b6d5da7f75cadb3a32776747bb820135ac5f","username":"rjones","ts":"2020-05-05T00:36:53.118Z"}
{"msg":"@benjamincburns here is the calendar: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings","username":"rjones","ts":"2020-05-05T00:37:48.477Z"}
{"msg":"it looks like Caliper is Wednesday at 1500","username":"rjones","ts":"2020-05-05T00:38:16.125Z"}
{"msg":"(0800 Pacific)","username":"rjones","ts":"2020-05-05T00:39:07.544Z"}
{"msg":"Thanks @rjones!","username":"benjamincburns","ts":"2020-05-05T01:13:57.292Z"}
{"msg":"no changes that should imapact that command, we did have an issue with yargs, where a version change was required to permit the command to run correctly. Have you recently performed a repoclean/bootstrap?","username":"nkl199","ts":"2020-05-05T08:25:15.982Z"}
{"msg":"Yes - every benchmark I run is provisioned on a fresh VM by terraform.\n\nAs a workaround for now I just set it to use the merge commit from my most recent PR. I'll try again tomorrow and file an issue (and likely a PR) if the problem persists.","username":"benjamincburns","ts":"2020-05-05T08:27:33.074Z"}
{"msg":"Has joined the channel.","username":"kiview","ts":"2020-05-05T15:56:16.774Z","type":"uj"}
{"msg":"> Error while performing \"init\" step: TypeError: this.provider.send is not a function\n\nlooks like something changed w.r.t. the web3 dependency","username":"benjamincburns","ts":"2020-05-05T20:52:01.352Z"}
{"msg":"https://github.com/hyperledger/caliper/blame/master/packages/caliper-ethereum/package.json#L29","username":"benjamincburns","ts":"2020-05-05T20:54:09.800Z"}
{"msg":"That'd be the problem","username":"benjamincburns","ts":"2020-05-05T20:54:15.948Z"}
{"msg":"review request: https://github.com/hyperledger/caliper/pull/825 - ethereum adapter is broken until merged :-(","username":"benjamincburns","ts":"2020-05-05T21:01:50.738Z"}
{"msg":"Although not a maintainer, I commented :)\nMakes me wonder, missing CI for this?","username":"kiview","ts":"2020-05-06T05:53:38.651Z"}
{"msg":"The CI performs an explicit binding step, which basically install some runtime deps. And the deps in the binding specification remained correct, so the above bug was a dev-time bug fortunately/hopefully. ","username":"klenik","ts":"2020-05-06T13:00:02.416Z"}
{"msg":"Prepared the version bump PR and release draft for v0.3.1\nhttps://github.com/hyperledger/caliper/pull/827\nhttps://github.com/hyperledger/caliper/releases/tag/untagged-867c111738e9237b0582","username":"klenik","ts":"2020-05-06T13:52:53.290Z"}
{"msg":"wohoo!!","username":"nkl199","ts":"2020-05-06T14:55:37.594Z"}
{"msg":"I've also started organizing the 0.4.0 milestone: https://github.com/hyperledger/caliper/milestone/4\nThe general topics are: consistent logging, OO workload modules, config validations, and the big refactor idea I presented some time ago (pptx in the wiki dev: https://wiki.hyperledger.org/pages/viewpageattachments.action?pageId=9110170&metadataLink=true)","username":"klenik","ts":"2020-05-06T14:58:58.573Z"}
{"msg":"am i currently late for a meeting","username":"nkl199","ts":"2020-05-06T15:03:37.681Z"}
{"msg":"?","username":"nkl199","ts":"2020-05-06T15:03:39.394Z"}
{"msg":"Yes :D","username":"klenik","ts":"2020-05-06T15:03:49.582Z"}
{"msg":"review request (paging @klenik, as we discussed this change on the contributor call): https://github.com/hyperledger/caliper/pull/829","username":"benjamincburns","ts":"2020-05-06T17:35:42.275Z"}
{"msg":"Note: CI failed for that PR, however the test failure was in `caliper-core` in tests that check prometheus monitoring. I've double checked `caliper-core` to be certain that there's no way that my PR could have broken those test. I'd try rerunning the CI build, but I don't have rights to do so.","username":"benjamincburns","ts":"2020-05-06T17:47:11.655Z"}
{"msg":"@benjamincburns I clicked the \"do it again\" button","username":"rjones","ts":"2020-05-06T17:48:08.677Z"}
{"msg":"thanks","username":"benjamincburns","ts":"2020-05-06T17:48:20.715Z"}
{"msg":"On a related topic - is there any reason for the block quote formatting on this page? As a reader it doesn't seem to call out anything specific to me. https://github.com/hyperledger/caliper/blob/gh-pages/docs/vNext/Ethereum_Configuration.md","username":"benjamincburns","ts":"2020-05-06T17:50:20.235Z"}
{"msg":"Looks like some of it came from Antonio Russon (not sure what his username is here, sorry), and some came from @shemnon ","username":"benjamincburns","ts":"2020-05-06T17:52:36.208Z"}
{"msg":"Looks like some of it came from Antonio Russo (not sure what his username is here, sorry), and some came from @shemnon ","username":"benjamincburns","ts":"2020-05-06T17:52:36.208Z"}
{"msg":"@russanto :point_up: ","username":"benjamincburns","ts":"2020-05-06T17:53:26.154Z"}
{"msg":"Hi, do you mean same specific part ?","username":"russanto","ts":"2020-05-06T18:08:00.450Z"}
{"msg":"I mean the paragraphs starting with the `>` character (e.g. the very first paragraph of the document)","username":"benjamincburns","ts":"2020-05-06T18:08:50.938Z"}
{"msg":"I'm updating that page some and I wanted to understand the reason for the formatting choice so that I can either make my changes consistent with it, or remove the block quote formatting.","username":"benjamincburns","ts":"2020-05-06T18:09:30.281Z"}
{"msg":"On my side I only tried to consistent with Fabric configuration pages that reports compatibility and feature summary in that way. No reason beyond that.","username":"russanto","ts":"2020-05-06T18:19:02.582Z"}
{"msg":"OK, thanks. For now I've just reordered things a bit, but left the formatting as-is","username":"benjamincburns","ts":"2020-05-06T18:19:30.758Z"}
{"msg":"Another review request, please: https://github.com/hyperledger/caliper/pull/830","username":"benjamincburns","ts":"2020-05-06T18:22:01.110Z"}
{"msg":"@klenik per our call today, here is the issue I promised to submit regarding decoupling of contract configuration data from the network config for the ethereum adapter: https://github.com/hyperledger/caliper/issues/831","username":"benjamincburns","ts":"2020-05-06T18:49:22.252Z"}
{"msg":"@benjamincburns @nkl199 I added my 5 cents to the above issue, heading towards a general solution. Unfortunately, I can't attend today's call, but feel free to discuss the pros/cons, because it would be a nice enhancement ","username":"klenik","ts":"2020-05-13T11:46:40.099Z"}
{"msg":"Hello Caliper contributors! Reminder to please join the DevRel Marketing Committee call at 9am PT TODAY, 5/13! Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-05-13+Meeting+notes","username":"jramps9","ts":"2020-05-13T12:11:37.487Z"}
{"msg":"Was a rather quiet meeting today :joy: \n- Also keen to see the separation of network and contract information, it is a natural partition and should lead to easier use of Caliper","username":"nkl199","ts":"2020-05-13T15:29:09.524Z"}
{"msg":"Apologies for missing the meeting today - I forgot to make my calendar entry recurring last time :-(","username":"benjamincburns","ts":"2020-05-13T16:48:17.976Z"}
{"msg":"no worries, I'm notorious for missing them - my calendar has decided to no longer alert me to meetings ... which is somewhat frustrating!","username":"nkl199","ts":"2020-05-14T11:20:06.710Z"}
{"msg":"I think we could/should start grouping the breaking changes for the next release, based on the above, the onces we should try to get into the same release are:\n- breaking out smart contracts to a separate file\n- enabling different report formats\n- modify \"backlog\" controllers to permit nomination of back total on the SUT, not per worker (ie align with TPS drivers)\n- make callbacks object oriented","username":"nkl199","ts":"2020-05-14T11:22:11.508Z"}
{"msg":"I think the above points make a nice agenda for today","username":"klenik","ts":"2020-05-20T12:13:58.408Z"}
{"msg":"cool - maybe add a \"worker lifecycle\" when using MQTT?","username":"nkl199","ts":"2020-05-20T12:16:29.435Z"}
{"msg":"I might be 2-3 minutes late :sweat_smile: ","username":"klenik","ts":"2020-05-20T14:57:31.012Z"}
{"msg":"righto :thumbup: ","username":"nkl199","ts":"2020-05-20T15:03:01.316Z"}
{"msg":"re: enabling different report formats - I recommend Jinja2","username":"benjamincburns","ts":"2020-05-20T15:25:39.128Z"}
{"msg":"righto - currently usines Mustache","username":"nkl199","ts":"2020-05-20T15:26:46.919Z"}
{"msg":"righto - currently usies Mustache","username":"nkl199","ts":"2020-05-20T15:26:46.919Z"}
{"msg":"righto - currently uses Mustache","username":"nkl199","ts":"2020-05-20T15:26:46.919Z"}
{"msg":"Mustache is good, too - just something that has support for rendering templates based on a well known templating language","username":"benjamincburns","ts":"2020-05-20T15:27:33.245Z"}
{"msg":"extended the description for the callback->class issue https://github.com/hyperledger/caliper/issues/576","username":"nkl199","ts":"2020-05-21T07:54:26.266Z"}
{"msg":"Although this raises the question of \"cross-platform\" workload modules. The TX arguments are SUT-specific. A base class for each SUT might be overkill. A possible solution would be if the SUT adapters provide a general TX builder API, and assemble the correct object under the hood. But coming up with a common format for the common interaction (target contract and arguments, invoker, target nodes) might be a challenge.","username":"klenik","ts":"2020-05-21T10:43:55.990Z"}
{"msg":"that's fair - though I think most (if not all) things passed into the base blockchain class `invokeSmartContract` (or query) can be supplied at the highest level ...  we consume `(context, contractID, contractVer, args, timeout)` for these, my thoughts were that:\n- a single base class is to be used for all SUT txn driving\n- context, contractID and maybe version be provided at benchmark config level\n- investigate if all adaptors result in a single function being called within the smart contract, and if so have that provided via benchmark file too\n- the user is always responsible for correctly formulating adaptor specific args \nI suspect super users would override the base class invoke/query route :shrug: ","username":"nkl199","ts":"2020-05-21T11:26:39.775Z"}
{"msg":"that's fair - though I think most (if not all) things passed into the base blockchain class `invokeSmartContract` (or query) can be supplied at the highest level ...  we consume `(context, contractID, contractVer, args, timeout)` for these, my thoughts were that:\n- a single base class is to be used for all SUT txn driving\n- context, contractID and maybe version be provided at benchmark config level\n- investigate if all adaptors result in a single function being called within the smart contract, and if so have that provided via benchmark file too\n- the user is always responsible for correctly formulating adaptor specific args (as they do currently)\nI suspect super users would override the base class invoke/query route :shrug: ","username":"nkl199","ts":"2020-05-21T11:26:39.775Z"}
{"msg":"looks like the base class would be rather thin","username":"nkl199","ts":"2020-05-21T11:27:39.059Z"}
{"msg":"Has joined the channel.","username":"covepark","ts":"2020-05-23T14:33:57.698Z","type":"uj"}
{"msg":"hello. I have set my own fabric network through VMs(2org 4peer 1orderer). however, I don't know how to measure fabric network with multi-channel. I wanna set multi-channel which is executed simultaneously or alternately by caliper. how can I write config.yaml or fabric-go.yaml file? or Is there any file that I have to modify? Thanks.\n","username":"covepark","ts":"2020-05-23T14:33:59.377Z"}
{"msg":"Has joined the channel.","username":"qwertlimframe","ts":"2020-05-26T08:43:58.367Z","type":"uj"}
{"msg":" How can i run caliper on byfn? ","username":"qwertlimframe","ts":"2020-05-26T08:45:57.968Z"}
{"msg":"@nkl199 @benjamincburns Can't make today's call, crazy busy week. But I started working on the workload module refactor, should be ready by next week.","username":"klenik","ts":"2020-05-27T09:44:26.430Z"}
{"msg":"Apologies, I didn't make it either. Unfortunately I've been tied up with other things and I haven't had any time to focus on caliper-related tasks this week. I'm not sure if I'll have much time over the next week to do much, either.","username":"benjamincburns","ts":"2020-05-27T16:12:02.424Z"}
{"msg":"are people able to attend today?","username":"nkl199","ts":"2020-06-03T13:52:20.238Z"}
{"msg":"Yep, I have a PoC for the workload module refractor. Although I also have some design decision questions :) ","username":"klenik","ts":"2020-06-03T14:02:57.888Z"}
{"msg":"Had some thoughts about our goal to make workload modules less painful, and came up with the following steps to achieve it:\n1. Converting the modules to classes is almost done (https://github.com/hyperledger/caliper/pull/856)\n2. A bit of config restructuring to pave the road for the next enhancements (https://github.com/hyperledger/caliper/issues/857)\n3. Introducing TX builders to make the workloads more or less SUT agnostic (https://github.com/hyperledger/caliper/issues/858)\n4. Implement a smart base class for workloads that takes advantage of the builder pattern (https://github.com/hyperledger/caliper/issues/859)\n\nAny remarks are appreciated :)","username":"klenik","ts":"2020-06-04T23:17:47.744Z"}
{"msg":"Suggested agenda for tomorrow:\n- Current issues that warrant a 0.3.2 release\n- Do we want to start having release branches? Or maybe feature branches that are merged to master when complete?\n- Docs and the versioning of releases: do we want a drop down for every release, or only for the highest minor version of each release? (1.0 | 1.1 | 1.2 | 1.3.2 | vNext) in this case\n- Current PR backlog","username":"nkl199","ts":"2020-06-09T15:10:43.467Z"}
{"msg":"Suggested agenda for tomorrow:\n- Current issues that warrant a 0.3.2 release\n- Do we want to start having release branches? Or maybe feature branches that are merged to master when complete?\n- Docs and the versioning of releases: do we want a drop down for every release, or only for the highest minor version of each release? (1.0 | 1.1 | 1.2 | 1.3.2 | vNext) in this case\n- Current PR backlog\n- Shall we rename `caliper-client-local` to be `caliper-worker` ?","username":"nkl199","ts":"2020-06-09T15:10:43.467Z"}
{"msg":"Suggested agenda for tomorrow:\n- Current issues that warrant a 0.3.2 release\n- Do we want to start having release branches? Or maybe feature branches that are merged to master when complete?\n- Docs and the versioning of releases: do we want a drop down for every release, or only for the highest minor version of each release? (0.1 | 0.2 | 0.3.2 | vNext) in this case\n- Current PR backlog\n- Shall we rename `caliper-client-local` to be `caliper-worker` ?","username":"nkl199","ts":"2020-06-09T15:10:43.467Z"}
{"msg":"Suggested agenda for tomorrow:\n- Current issues that warrant a 0.3.2 release\n- Do we want to start having release branches? Or maybe feature branches that are merged to master when complete?\n- Docs and the versioning of releases: do we want a drop down for every release, or only for the highest minor version of each release? (0.1 | 0.2 | 0.3.2 | vNext) in this case\n- Current PR backlog\n- Shall we rename `caliper-client-local` to be `caliper-worker` ?\n- Binding: should we only be binding at the semver minor release level, and not patch releases? (use of a config file can give any binding)","username":"nkl199","ts":"2020-06-09T15:10:43.467Z"}
{"msg":"Hi Caliper contributors! Reminder the Marketing Committee-Dev Relations call is tomorrow, 6/10 at 9am PT. Hope to see you there! https://wiki.hyperledger.org/display/Marketing/2020-06-010+Meeting+notes","username":"jramps9","ts":"2020-06-09T15:52:21.571Z"}
{"msg":"Not sure what I just managed to do to the suggested agenda for today, so here it is again:\n\nSuggested agenda for tomorrow:\n- Current issues that warrant a 0.3.2 release\n- Do we want to start having release branches? Or maybe feature branches that are merged to master when complete?\n- Docs and the versioning of releases: do we want a drop down for every release, or only for the highest minor version of each release? (0.1 | 0.2 | 0.3.2 | vNext) in this case\n- Current PR backlog\n- Shall we rename caliper-client-local to be caliper-worker ?\n- Binding: should we only be binding at the semver minor release level, and not patch releases? (use of a config file can give any binding)","username":"nkl199","ts":"2020-06-10T11:02:12.343Z"}
{"msg":"Not sure what I just managed to do to the suggested agenda for today, so here it is again:\n\nSuggested agenda for tomorrow:\n- Current issues that warrant a 0.3.2 release\n- Do we want to start having release branches? Or maybe feature branches that are merged to master when complete?\n- Docs and the versioning of releases: do we want a drop down for every release, or only for the highest minor version of each release? (0.1 | 0.2 | 0.3.2 | vNext) in this case\n- Current PR backlog\n- Shall we rename caliper-client-local to be caliper-worker ?\n- Binding: should we only be binding at the semver minor release level, and not patch releases? (use of a config file can give any binding if explicitly required)","username":"nkl199","ts":"2020-06-10T11:02:12.343Z"}
{"msg":"Minutes of the above:\n- items for inclusion of the 0.3.2 release agreed, will include current non-breaking PRs plus the 1.4.8 fabric binding\n- yes, we should start looking at release branches sooner rather than later, so that we can backport patches to prior releases while we work on significant breaking changes on a different branch\n- docs to be versioned at the highest patch semver level\n- caliper-client-local to renamed inline with the orchestrators to be `round-executor`\n- binding options to be passed to the community for opinions before we move to a specific binding option strategy","username":"nkl199","ts":"2020-06-10T15:30:37.573Z"}
{"msg":":thinking: so what is the process to go to a v1.0.0 release?","username":"nkl199","ts":"2020-06-11T13:52:44.614Z"}
{"msg":"Hmm, I think the tsc wiki has/had some info about this. ","username":"klenik","ts":"2020-06-11T14:14:11.706Z"}
{"msg":"OK, i'll have a peek. I *think* (or is it feel?) that the 0.4.x release could be a viable 1.0 candidate","username":"nkl199","ts":"2020-06-11T14:15:20.118Z"}
{"msg":"I certainly think we're approaching it","username":"nkl199","ts":"2020-06-11T14:15:47.976Z"}
{"msg":"Yeah, we're definitely getting closer. Regarding the core functionalities at least. The adapters are a different question though. ","username":"klenik","ts":"2020-06-11T14:18:59.962Z"}
{"msg":"https://hyperledger.github.io/tsc/project-incubation-exit.html","username":"rjones","ts":"2020-06-11T14:20:41.659Z"}
{"msg":"https://hyperledger.github.io/tsc/project-lifecycle.html#promoted-release","username":"rjones","ts":"2020-06-11T14:21:04.458Z"}
{"msg":"yh, agree there with regards to the adaptors","username":"nkl199","ts":"2020-06-11T14:21:36.588Z"}
{"msg":"https://lfanalytics.io/projects/hyperledger%2Fcaliper/dashboard","username":"rjones","ts":"2020-06-13T12:21:32.351Z"}
{"msg":"Proposed agenda items for tomorrow (feel free to add to the list):\n- Naming conventions/ideas for the new workload module updates (https://github.com/hyperledger/caliper/issues/857 and https://github.com/hyperledger/caliper/issues/859)\n- TX builder API details (https://github.com/hyperledger/caliper/issues/858)","username":"klenik","ts":"2020-06-16T14:03:06.234Z"}
{"msg":"Has joined the channel.","username":"Adhavpavan","ts":"2020-06-20T09:57:24.920Z","type":"uj"}
{"msg":"Hello,\n\nI am getting error as below:\nCaliper currently only supports gateway based operation using the 2.1.0 Fabric-SDK. Please retry with the gateway flag\n\nWhere I have to provide gateway flag?\nCOnfiguration:\nservices:\ncaliper:\ncontainer_name: caliper\nimage: hyperledger/caliper:0.3.1\ncommand: launch master\nenvironment:\n- CALIPER_BIND_SUT=fabric:2.1.0\n- CALIPER_BENCHCONFIG=benchmarks/scenario/simple/pavan/config.yaml\n- CALIPER_NETWORKCONFIG=networks/fabric/pavan/network-config.yaml\nvolumes:\n- ./caliper-benchmarks:/hyperledger/caliper/workspace\nnetwork_mode: host\nPlease let me know for more information.\nThanks in advance.","username":"Adhavpavan","ts":"2020-06-20T10:06:33.542Z"}
{"msg":"Has joined the channel.","username":"NamanGupta1003","ts":"2020-06-22T07:42:40.086Z","type":"uj"}
{"msg":"Hey, i was setting up caliper using the docker image and run the following command:\n\nuser@ubuntu:~/caliper-benchmarks$ docker run \\\n-v $PWD:/hyperledger/caliper/workspace \\\n-e CALIPER_BIND_SUT=fabric:1.4.0 \\\n-e CALIPER_BENCHCONFIG=benchmarks/scenario/simple/config.yaml \\\n-e CALIPER_NETWORKCONFIG=networks/fabric/fabric-v1.4.1/2org1peergoleveldb/fabric-go.yaml \\\n--name caliper hyperledger/caliper:0.3.0 launch master\n\nI got the following error:\n2020-06-20T14:20:29.617Z - error: [FabricCAClientService.js]: Failed to enroll admin, error:%o message=Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054], stack=Error: Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054]\nat ClientRequest.request.on (/home/node/.npm-global/lib/node_modules/fabric-ca-client/lib/FabricCAClient.js:487:12)\nat ClientRequest.emit (events.js:198:13)\nat Socket.socketErrorListener (_http_client.js:392:9)\nat Socket.emit (events.js:198:13)\nat emitErrorNT (internal/streams/destroy.js:91:8)\nat emitErrorAndCloseNT (internal/streams/destroy.js:59:3)\nat process._tickCallback (internal/process/next_tick.js:63:19)\n2020.06.20-14:20:29.618 error [caliper] [caliper-engine] Error while performing \"init\" step: Error: Couldn't enroll Org1's registrar or set it as user context: Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054]\n2020.06.20-14:20:29.618 info [caliper] [caliper-engine] Executed \"init\" step in 0.406 seconds\n2020.06.20-14:20:29.618 info [caliper] [caliper-utils] Executing command: cd /hyperledger/caliper/workspace; docker-compose -f networks/fabric/docker-compose/2org1peergoleveldb/docker-compose.yaml down;(test -z \\\"$(docker ps -aq)\\\") || docker rm $(docker ps -aq);(test -z \\\"$(docker images dev -q)\\\") || docker rmi $(docker images dev -q);rm -rf /tmp/hfc-*\n/bin/sh: docker-compose: not found\n/bin/sh: docker: not found\n/bin/sh: docker: not found\n/bin/sh: docker: not found\n/bin/sh: docker: not found\n/bin/sh: docker: not found\n/bin/sh: docker: not found\n2020.06.20-14:20:29.625 info [caliper] [caliper-engine] Executed end command in 0.007 seconds\n2020.06.20-14:20:29.626 error [caliper] [cli-launch-master] Benchmark failed with error code 4\nUsage:\ncaliper launch master --caliper-bind-sut fabric:1.4.1 [other options]\n\nOptions:\n--help, -h Show usage information [boolean]\n--version Show version information [boolean]\n--caliper-bind-sut The name and version of the platform to bind to [string]\n--caliper-bind-cwd The working directory for performing the SDK install [string]\n--caliper-bind-args Additional arguments to pass to \"npm install\". Use the \"=\" notation when setting this parameter [string]\n--caliper-bind-file Yaml file to override default (supported) package versions when binding an SDK [string]\n\nError: Benchmark failed with error code 4\nat Function.handler (/home/node/.npm-global/lib/node_modules/@hyperledger/caliper-cli/lib/launch/lib/launchMaster.js:70:23)\nat process._tickCallback (internal/process/next_tick.js:68:7)\n\nCan someone please help?","username":"NamanGupta1003","ts":"2020-06-22T07:43:20.992Z"}
{"msg":"replied in caliper channel","username":"nkl199","ts":"2020-06-22T08:06:08.170Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2020-06-22T17:54:36.471Z","type":"ul"}
{"msg":"@nkl199 Do you have some agenda items in mind for today? For my part, I'm working on the workload module config refactor (https://github.com/hyperledger/caliper/issues/857), so not much to report yet :)","username":"klenik","ts":"2020-06-24T09:35:26.330Z"}
{"msg":"hmm, currently working on the docs mod, but maybe we could prioritise a few items?","username":"nkl199","ts":"2020-06-24T09:36:14.734Z"}
{"msg":"Sure. These are the current v0.4.0 items: https://github.com/hyperledger/caliper/milestone/4\nGood basis for discussion","username":"klenik","ts":"2020-06-24T09:38:58.380Z"}
{"msg":"Hey this error just doesn't seem to go away.\nI started a network using \"./startFabric.sh javascript\" in fabcar in fabric-samples. It used fabric version 2.1.0.  \nI mapped the credentials in peerOrganizations and ordererOrganizations.\nI used docker-compose to run caliper and got the following error\ncaliper    | 2020.06.26-14:15:31.398 info  [caliper] [adapters/fabric] \tNo admin.Org1 found in caliper configuration file - unable to perform admin options\ncaliper    | 2020.06.26-14:15:31.398 info  [caliper] [adapters/fabric] \tNo admin.Org2 found in caliper configuration file - unable to perform admin options\ncaliper    | 2020-06-26T14:15:31.749Z - error: [FabricCAClientService.js]: Failed to enroll admin, error:%o message=Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054], stack=Error: Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054]\ncaliper    |     at ClientRequest.request.on (/home/node/.npm-global/lib/node_modules/fabric-ca-client/lib/FabricCAClient.js:484:12)\ncaliper    |     at ClientRequest.emit (events.js:198:13)\ncaliper    |     at TLSSocket.socketErrorListener (_http_client.js:392:9)\ncaliper    |     at TLSSocket.emit (events.js:198:13)\ncaliper    |     at emitErrorNT (internal/streams/destroy.js:91:8)\ncaliper    |     at emitErrorAndCloseNT (internal/streams/destroy.js:59:3)\ncaliper    |     at process._tickCallback (internal/process/next_tick.js:63:19)\n\nCan someone pls help?","username":"NamanGupta1003","ts":"2020-06-26T14:36:44.546Z"}
{"msg":"The current release-cycle aims (among other things) to make the workload modules easier to code. The new, cleaner design also affects the API of the SUT connectors, hopefully in a good way :) I opened an issue for the proposed connector API changes, feel free to add any thoughts and suggestions: https://github.com/hyperledger/caliper/issues/888","username":"klenik","ts":"2020-06-29T14:09:34.050Z"}
{"msg":"added my thoughts :thumbup:","username":"nkl199","ts":"2020-06-29T14:17:18.434Z"}
{"msg":"I can't attend today's call. As a progress update, I'm working on this issue: https://github.com/hyperledger/caliper/issues/888 \nHopefully this will result in a clean, life-cycle aware and event-driven API for the connectors.","username":"klenik","ts":"2020-07-01T09:59:02.058Z"}
{"msg":"Has left the channel.","username":"wangdong","ts":"2020-07-03T05:38:58.865Z","type":"ul"}
{"msg":"hmmm, fabric 2.2 is out it would seem","username":"nkl199","ts":"2020-07-09T17:11:58.346Z"}
{"msg":"As I see it's mostly bug fixes, no notable feature from our point of view (kind of relieved) ","username":"klenik","ts":"2020-07-09T18:14:33.374Z"}
{"msg":"yup","username":"nkl199","ts":"2020-07-09T18:14:43.968Z"}
{"msg":"i'm waiting for them to pull the \"old chaincode lifecycle\" within a patch release tho :/","username":"nkl199","ts":"2020-07-09T18:15:12.647Z"}
{"msg":"they have nailed all the 1.4.x networks tho","username":"nkl199","ts":"2020-07-09T18:15:44.865Z"}
{"msg":"well, set themselves up to fail there it would seem - the chaincode build in the 1.4 imagesalways pulls ccenv:latest, and not the build it needs","username":"nkl199","ts":"2020-07-09T18:16:32.524Z"}
{"msg":"well, set themselves up to fail there it would seem - the chaincode build in the 1.4 images always pulls ccenv:latest, and not the build it needs","username":"nkl199","ts":"2020-07-09T18:16:32.524Z"}
{"msg":"shame that `latest` is now for 2.2","username":"nkl199","ts":"2020-07-09T18:16:47.683Z"}
{"msg":":facepalm:","username":"nkl199","ts":"2020-07-09T18:16:54.829Z"}
{"msg":"Yeah, and even if the 1.4 image is present, the 2.x is used. I had to clean up my test env a few times... ","username":"klenik","ts":"2020-07-09T18:22:11.592Z"}
{"msg":"(that's why I actively oppose the latest tag for the caliper image, it's a big antipattern) ","username":"klenik","ts":"2020-07-09T18:22:11.599Z"}
{"msg":"Has joined the channel.","username":"davidkel","ts":"2020-07-15T15:20:07.355Z","type":"uj"}
{"msg":"Has joined the channel.","username":"abhi201191","ts":"2020-07-20T15:22:59.045Z","type":"uj"}
{"msg":"Hi.. when I try to run ./publish.js verdaccio start terminal gets stucked at PM2_HOME=.pm2 npx pm2 start verdaccio -- -l ${BIND} -c artifacts/verdaccio-config.yaml with this rollbackfailedoptional verb npm-session. Please help me out","username":"abhi201191","ts":"2020-07-20T15:22:59.593Z"}
{"msg":"Hi.. when I try to run `./publish.js verdaccio start` terminal gets stucked at `PM2_HOME=.pm2 npx pm2 start verdaccio -- -l ${BIND} -c artifacts/verdaccio-config.yaml` with this `rollbackfailedoptional verb npm-session`. Please help me out","username":"abhi201191","ts":"2020-07-20T15:22:59.593Z"}
{"msg":"I'm on vacation(ish) from tomorrow, so can't attend the call ","username":"klenik","ts":"2020-07-21T16:36:17.328Z"}
{"msg":"No worries, Nick is on vacation as well","username":"davidkel","ts":"2020-07-21T17:28:59.057Z"}
{"msg":"Has joined the channel.","username":"lehors","ts":"2020-07-22T19:51:03.507Z","type":"uj"}
{"msg":"Hi there","username":"lehors","ts":"2020-07-22T19:51:03.687Z"}
{"msg":"The quarterly report to the TSC for *Q2* is overdue, could someone please submit one?","username":"lehors","ts":"2020-07-22T19:51:39.896Z"}
{"msg":"The one for Q1 is here: https://wiki.hyperledger.org/display/TSC/2020+Q1+Hyperledger+Caliper","username":"lehors","ts":"2020-07-22T19:52:29.567Z"}
{"msg":"any maintainer should be able to make a copy of that and update it as needed","username":"lehors","ts":"2020-07-22T19:53:02.581Z"}
{"msg":"thanks","username":"lehors","ts":"2020-07-22T19:53:16.446Z"}
{"msg":"Yeah, I'll submit it tomorrow, sorry for the delay ","username":"klenik","ts":"2020-07-22T20:00:04.878Z"}
{"msg":"thanks","username":"lehors","ts":"2020-07-22T20:00:10.952Z"}
{"msg":"@lehors Submitted the update: https://wiki.hyperledger.org/display/TSC/2020+Q2+Hyperledger+Caliper","username":"klenik","ts":"2020-07-23T09:59:41.114Z"}
{"msg":"👍","username":"lehors","ts":"2020-07-23T14:02:10.201Z"}
{"msg":"From my part, I'll just give a quick update on the connector API refactoring on the call ","username":"klenik","ts":"2020-07-29T12:49:42.018Z"}
{"msg":"Other items:\n- I can give an update on the txObservers refactor\n- Rosie is to give an update on perf testing \"fabric test network\" with the aim that we can make it easier to connect and test\n- Dave is to propose a modification to the network file for fabric connectors (if unavailable, i can give a high level summary)","username":"nkl199","ts":"2020-07-29T13:14:19.555Z"}
{"msg":"rate controller options convention ... we have a mix of camel case and underscore separation for option names ... shall we vote on a single choice?","username":"nkl199","ts":"2020-07-30T10:27:49.134Z"}
{"msg":"For attributes, I prefer camel casing (underscores are sooo python :D ). We also have mixes in file names, for which I have no preference, but I usually go with camel casing, to almost match the class names in the module.","username":"klenik","ts":"2020-07-30T10:36:32.251Z"}
{"msg":"I've been thinking about how to restructure the network-config for the fabric connector and the way I'm thinking is to make the network-config org specific. ie a single network-config file is representative of a single organisation. My thinking behind this is because\n1. the plan is to have a network config reference a connection profile which will be org specific\n2. identities will be org specific (but in the network config you will give it an alias that can doesn't need to be so workloads can reference that alias)\n3. organisations are only really interested in the performance from their org point of view\n4. if you want to test a network for multiple orgs then from a real world point of view you would have 2 distinct orgs interacting with the network currently via 2 different caliper launches.","username":"davidkel","ts":"2020-07-31T12:58:23.754Z"}
{"msg":"I've been thinking about how to restructure the network-config for the fabric connector and the way I'm thinking is to make the network-config org specific. ie a single network-config file is representative of a single organisation. My thinking behind this is because\n1. the plan is to have a network config reference a connection profile which will be org specific\n2. identities will be org specific (but in the network config you will give it an alias that can doesn't need to be so workloads can reference that alias)\n3. organisations are only really interested in the performance from their org point of view\n4. if you want to test a network for multiple orgs then from a real world point of view you would have 2 distinct orgs interacting with the network currently via 2 different caliper launches.\n\nI was wondering what people think about this approach ?","username":"davidkel","ts":"2020-07-31T12:58:23.754Z"}
{"msg":"I've been thinking about how to restructure the network-config for the fabric connector and the way I'm thinking is to make the network-config org specific. ie a single network-config file is representative of a single organisation. My thinking behind this is because\n1. the plan is to have a network config reference a connection profile which will be org specific\n2. identities will be org specific (but in the network config you will give it an alias that doesn't need to be so workloads can reference that alias)\n3. organisations are only really interested in the performance from their org point of view\n4. if you want to test a network for multiple orgs then from a real world point of view you would have 2 distinct orgs interacting with the network currently via 2 different caliper launches.\n\nI was wondering what people think about this approach ?","username":"davidkel","ts":"2020-07-31T12:58:23.754Z"}
{"msg":":point_up_2:  @klenik","username":"nkl199","ts":"2020-07-31T12:59:07.348Z"}
{"msg":"That makes a lot of sense, and raises further questions, tasks and things to consider (because why would life be easy) :\na) I'd really like to keep the single networkconfig file approach (to be consistent across connectors), but in that file we can reference one or more org-specific connection profiles, just as you described.\nb) I partially agree with point 3., but we can't just ignore the other players (and their workload) on the network, since they consume the same resources. Hence the next, very interesting point.\nc) What you describe in point 4 is (kind of) the \"blockchainification\" of benchmarking itself, something like \"privacy preserving distributed benchmarking\". \nc-1) Everyone plugs in their own private workload logic, uses the network at the same time, and see the aggregated results in the form of a report. \nc-2) Hiding the workload logic is almost possible, since orgs can host their own workers, just a central (or more complicated) message broker is needed. The workers (can) have separated config files, but currently the round configs are determined by the manager (this would be easy to fix, and very useful). So independent, org-hosted workers are not far away.\nc-3) Analyzing the result is also interesting in this case. The manager only provides an aggregated report, which is kind of boring. But with the coming worker-scoped TX Monitors, you can do anything with your own TX results, so org-specific analysis is possible.\n\nIt was a bit long, but I think we need to consider this in real enterprise scenarios. So I await your inputs, since you're the enterprise people :grin:","username":"klenik","ts":"2020-07-31T13:24:46.824Z"}
{"msg":"just trying to dig a bit into c-x above. I think (correct me if i'm wrong) Dave is hinting towards having Fabric network config files restricted to a \"per org\" scenario. So org1 would (in an enterprise scenario) run a scheduled load test and see what they achieve, orgX would do similar at a different time and if they wanted they could compare/share results. In these cases, orgs would potentially have some form of overlap in resources, but org1 might well have way more resources than orgX - so their results would certainly vary. I dont think the suggestion is to merge concurrent caliper runs at completion (or at the very least, shotgun not me!)\n\nAt the moment caliper can pick from any client for an org within the profile, so there is a breaking change in behaviour by moving to a single org focus, but i'm keen to explore what we would lose here .. thoughts? I can only think of asset manipulation from cross organizational actors, such as Org1 creating something based on agreements/contributions from Orgs2 and 3. That itself is edging towards lifecyle performance tests, which in general are a bit tricky to encompass in a workload module","username":"nkl199","ts":"2020-07-31T14:38:23.810Z"}
{"msg":"I'll drop the caveat that my current experience has been people interested from within their own organization, so am keen to explore potential cross-org scenarios","username":"nkl199","ts":"2020-07-31T14:39:58.808Z"}
{"msg":"I'll drop the caveat that my current experience has been based on people interested from within their own organization, so am keen to explore potential cross-org scenarios","username":"nkl199","ts":"2020-07-31T14:39:58.808Z"}
{"msg":"@klenik thanks for the reply, so how about this for an example of a proposal ? It allows you to do both but doesn't add too much overhead if you want to separate orgs into different files\n```\n---\nname: Fabric\nversion: \"1.0\"\nmutual-tls: true\n\ncaliper:\n    blockchain: fabric\n\nchannels:\n    mychannel:\n        created: true\n        discover: true\n        contracts:\n        - id: marbles\n          contractID: mymarbles\n          version: v0\n\norganizations:\n  - mspid: org1MSP\n    identities:\n      # only used for fabric connector not gateway (can also be defined in connection profile)\n      credentialStore:\n        path: /tmp/hfc-kvs/org1\n        cryptoStore:\n            path: /tmp/hfc-cvs/org1\n      # assume that entries in wallet are all of the same org\n      # only for use by gateway\n      wallet:\n         path: 'some/path/to/org-specific-wallet'\n         hsm:\n            library: 'path/to/pkcs11library'\n            slot: 3\n            pin: 123456789\n            usertype: 1\n      localMSP:\n        alias: 'aUser'\n        path: 'some/path/to/org-specific-localMSP'\n      certificates:\n      - alias: 'User1'\n        clientPrivateKey:\n            # can use PEM as well\n            path: ../config/crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/key.pem\n        clientSignedCert:\n            path: ../config/crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem\n      # auto register and enroll to come....\n    # could validate this connection profile matches declared mspid\n    connectionProfile: 'some/path/to/org-specific-profile'\n  - mspid: org2MSP\n    # and so forth\n```","username":"davidkel","ts":"2020-07-31T15:18:48.455Z"}
{"msg":"Can't really see the high-level structure from my phone, but I think I get the concept, and it looks good. Btw, since workers can pick up different network configs, the single-org config could also work. But it would complicate smaller experiments (and centralized benchmarks). I'll give the above remarks some thought, maybe we should come up with some scenarios in figure format, to helps us see the artifact constraints ","username":"klenik","ts":"2020-07-31T15:23:16.762Z"}
{"msg":"@klenik -any more thoughts on the above?","username":"nkl199","ts":"2020-08-04T11:06:23.563Z"}
{"msg":"As I see it's functionally equivalent (but more organized) to the current network config, so I fully support it :thumbsup:","username":"klenik","ts":"2020-08-04T11:29:07.987Z"}
{"msg":"And hopefully we can delegate most of the validation to the SDK :grin:","username":"klenik","ts":"2020-08-04T11:30:12.524Z"}
{"msg":"@nkl199 Not much tangible progress from me (I've started reviewing the TX observers PR, and went through the Tutorial PR), so I'll leave the agenda for you and the others :)","username":"klenik","ts":"2020-08-05T13:05:29.999Z"}
{"msg":"I have another meeting to attend at half past the hour, so i'm hoping it will be a short meeting!","username":"nkl199","ts":"2020-08-05T13:59:09.898Z"}
{"msg":"agenda items:\n- progress on network config file change in fabric connector\n- coding standards ... shall we formalise these? ie stricter eslinting, variable names, etc\n- work in progress","username":"nkl199","ts":"2020-08-05T14:56:10.286Z"}
{"msg":"I'll be late, sorry ","username":"klenik","ts":"2020-08-05T15:08:47.552Z"}
{"msg":"no worries - stalled a little with \"hey look at the shiny things\"","username":"nkl199","ts":"2020-08-05T15:09:27.489Z"}
{"msg":"and completely missed the initial \"introduce self to others and vice-versa\" thing :/","username":"nkl199","ts":"2020-08-05T15:10:14.485Z"}
{"msg":"Has joined the channel.","username":"Lynn14m","ts":"2020-08-06T20:09:52.843Z","type":"uj"}
{"msg":"Did some thinking about loading external modules (since the major components are now pluggable :caliper: ), any remarks are welcome :) https://github.com/hyperledger/caliper/issues/948","username":"klenik","ts":"2020-08-07T13:27:05.496Z"}
{"msg":"Taht would be handy","username":"nkl199","ts":"2020-08-10T07:53:25.882Z"}
{"msg":"That would be handy, as part of that, I'd be keen to ensure that all the intended pluggable parts follow the same pattern and be explicit in what parts will and will not be pluggable","username":"nkl199","ts":"2020-08-10T07:53:25.882Z"}
{"msg":"Hello Caliper contributors! Reminder to please join the DevRel Marketing Committee call at 9am PT this Weds 8/12. Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-08-12+Meeting+notes","username":"jramps9","ts":"2020-08-11T00:08:36.051Z"}
{"msg":"I'll be traveling this afternoon, so I'll skip the call (very bad wifi on the trains....)","username":"klenik","ts":"2020-08-19T11:48:47.677Z"}
{"msg":"not much to update - Prs inbound and under review, items we hope to contain in the 0.4.0 release","username":"nkl199","ts":"2020-08-19T15:18:49.488Z"}
{"msg":"Has joined the channel.","username":"mzeeshanhaider","ts":"2020-08-24T06:41:56.879Z","type":"uj"}
{"msg":"Suggested agenda topics:\n- pending PRs\n- work in flight\n- is the prometheus monitor config correct/ in need of changing?\n- 0.4.0 release requirements","username":"nkl199","ts":"2020-08-26T13:02:16.864Z"}
{"msg":"User <em>User_1</em> added by <em>nkl199</em>.","username":"nkl199","ts":"2020-08-26T16:25:01.134Z","type":"au"}
{"msg":"I've been looking into the \"bump node versions\" issue in more depth. It would appear that:\n- the logical move is to bump to v14\n- doing so requires the removal of the sawtooth connector, which uses the sawtooth-sdk that has been untouched for 2yrs, and fails on zeromq \n\nWe can't really be beholding to an out of date connector, which we have already been forced to remove from the integration tests ... so the suggestion here is that we officially remove it. Thoughts?","username":"nkl199","ts":"2020-09-03T10:05:28.948Z"}
{"msg":"Well, yeah, node v8/10 is no longer lts, so we should explore the 12/14 lts supports. AFAIK, we're still running fine on 8/10, so I wouldn't necessarily remove those (with the engine restriction). Older GRPC packages had issues with newer node versions, that was resolved with the smart binding args/env based on the node version. So I'm all for exploring the two new versions :thumbsup:","username":"klenik","ts":"2020-09-03T11:05:50.410Z"}
{"msg":"https://sawtooth.hyperledger.org/docs/core/releases/1.0/app_developers_guide/sdk_table.html\nBased on this, the JS SDK is stable, but true, untouched for 1-2 year.","username":"klenik","ts":"2020-09-03T11:10:08.567Z"}
{"msg":"Currently, the only stable connectors are: Fabric, Besu/Ethereum and FISCO-BCOS.","username":"klenik","ts":"2020-09-03T11:11:17.370Z"}
{"msg":"yeah, with their format not being compatible with the current caliper API, at the very least we will have to deprecate sawtooth and iroha, as well as exclude them from publish and the CLI binding knowlege","username":"nkl199","ts":"2020-09-03T11:14:12.752Z"}
{"msg":"there's a question about the bindings too, at the moment we have \"quite a few\" bindings available for fabric versions, as well as permitting a file based override for \"any version combination\". This seems to be a bit much now :joy:  we could follow the pattern in the besu binding that provides the \"most recent legacy release\" and the full range of current major release","username":"nkl199","ts":"2020-09-03T11:19:56.868Z"}
{"msg":"there's a question about the bindings too, at the moment we have \"quite a few\" bindings available for fabric versions, as well as permitting a file based override for \"any version combination\". This seems to be a bit much now :joy:  we could follow the pattern in the besu binding that provides the \"most recent legacy release\" and the full range of current major release?","username":"nkl199","ts":"2020-09-03T11:19:56.868Z"}
{"msg":"So for fabric there would be bindings for [1.0, 1.1, 1.2, 1.3, 1.4, 2.0, 2.1, (2.2.x -> 2.2.y)]","username":"nkl199","ts":"2020-09-03T11:21:48.531Z"}
{"msg":"(or even perhaps cull 1.0 -> 1.4 ?)","username":"nkl199","ts":"2020-09-03T11:22:12.954Z"}
{"msg":"(or even perhaps cull 1.0 -> 1.3 ?)","username":"nkl199","ts":"2020-09-03T11:22:12.954Z"}
{"msg":"Yeah, I was thinking the same (currently reviewing the install page) :D We could follow the Besu convention. We could provide the latest SDK version of a compatibility range. For example, we have `1.4` in the binding spec, which will install the latest patch, so the user API won't change. I think 1.0, 1.1 and 1.2 are strictly separate, since each introduced a new feature (channel-based eventing, private collections, CDB indices). The next new feature is the gateway mode with 1.4.x.","username":"klenik","ts":"2020-09-03T11:28:36.065Z"}
{"msg":"So the question is, do we want to stick to only LTS (or not so old) releases, or support what we can with sensible path handling?","username":"klenik","ts":"2020-09-03T11:29:27.747Z"}
{"msg":"So the question is, do we want to stick to only LTS (or not so old) releases, or support what we can with sensible patch handling?","username":"klenik","ts":"2020-09-03T11:29:27.747Z"}
{"msg":"hmm","username":"nkl199","ts":"2020-09-03T11:29:57.813Z"}
{"msg":"so, in theory, if we move the caliper dev onward with officially supported versions, if someone wanted to test an older version, they could grab a previous release of caliper that had it supported, and make use of the multi-versino docs","username":"nkl199","ts":"2020-09-03T11:30:44.576Z"}
{"msg":"so, in theory, if we move the caliper dev onward with officially supported versions, if someone wanted to test an older version, they could grab a previous release of caliper that had it supported, and make use of the multi-version docs","username":"nkl199","ts":"2020-09-03T11:30:44.576Z"}
{"msg":"so i think that put me in the support of LTS versions only camp","username":"nkl199","ts":"2020-09-03T11:31:23.171Z"}
{"msg":"Yeah, in theory yes, but we also introduce awesome, connector-independent features (TX monitors), which would be useful even if we benchmark an old SUT version.","username":"klenik","ts":"2020-09-03T11:32:19.347Z"}
{"msg":"What is the implication of the LTS-only support? Just removing stuff from the binding?","username":"klenik","ts":"2020-09-03T11:32:48.309Z"}
{"msg":"true, that would be lost, unless the explicit binding with older versions was version compatible","username":"nkl199","ts":"2020-09-03T11:32:53.419Z"}
{"msg":"true, that would be lost, unless the explicit file-based binding with older versions was version compatible","username":"nkl199","ts":"2020-09-03T11:32:53.419Z"}
{"msg":"yes - remove from binding and ensure packages are dev-dependancy on latest","username":"nkl199","ts":"2020-09-03T11:33:35.290Z"}
{"msg":"(and update integration test)","username":"nkl199","ts":"2020-09-03T11:33:48.737Z"}
{"msg":"Fabric SDK 1.4.x is feature complete (can do everything the older releases can), the only exception is 1.0.0, with its peer-based eventing. So we only need 3 versions: 1.0, 1.4.x, 2.x (?)","username":"klenik","ts":"2020-09-03T11:34:08.729Z"}
{"msg":"If we look at the version checks in the connector code, the major paths are gateway/low-level, the rest is feature check (private data, etc). So by supporting 1.0, 1.4 and 2, I think we cover everything","username":"klenik","ts":"2020-09-03T11:35:57.748Z"}
{"msg":"Was there any API/SDK change between 2.x and 2.y?","username":"klenik","ts":"2020-09-03T11:36:38.422Z"}
{"msg":"not to my knowledge, certainly nothing that will break the gateway based connector","username":"nkl199","ts":"2020-09-03T11:37:08.211Z"}
{"msg":"aha, and by bumping the fabric-connector package deps to 1.4.11, it seems the grpc error is no more (so can build project on node12)","username":"nkl199","ts":"2020-09-03T11:38:41.351Z"}
{"msg":"v2 sdk uses the grpcjs package, so no more building of native modules","username":"nkl199","ts":"2020-09-03T11:39:14.638Z"}
{"msg":"fabric node v2 sdk uses the grpcjs package, so no more building of native modules","username":"nkl199","ts":"2020-09-03T11:39:14.638Z"}
{"msg":"cool, so let's keep the most stable SDK versions that can cover the previous versions functionally, and upon every release, we bump these (probably just behind the scene, so the `1.4` binding will point to the latest patch). We could do the usual deprecated play with the binding versions. Now we declare some 1.x versions deprecated, then merge them in the next release.","username":"klenik","ts":"2020-09-03T11:42:36.415Z"}
{"msg":"So now we have `2.1` and `2.2`, now we deprecate 2.1, and remove it in the next release","username":"klenik","ts":"2020-09-03T11:43:17.806Z"}
{"msg":"sounds like a plan :thumbsup:","username":"nkl199","ts":"2020-09-03T11:48:15.797Z"}
{"msg":"we should probably doc that somewhere so that all connectors follow the convention","username":"nkl199","ts":"2020-09-03T11:48:49.202Z"}
{"msg":"I'm doing some minor misc updates to the docs currently, so I can include this strategy in the binding command section.","username":"klenik","ts":"2020-09-03T11:49:46.384Z"}
{"msg":"OK, looks like dave has been working on the bindings, so i'll ask him to incorporate the above binding pattern in the options","username":"nkl199","ts":"2020-09-03T12:38:10.455Z"}
{"msg":"@klenik @nkl199 why would you want to keep 1.0 ? 1.0 is so old, out of date and not supported and a lot of breaking changes occurred between 1.0 and 1.1 that I'm not sure I can even remember how it works :-)","username":"davidkel","ts":"2020-09-03T12:52:01.668Z"}
{"msg":"i'm not personally aware of people using it, but people tend not to complain until something is no longer there :joy:","username":"nkl199","ts":"2020-09-03T13:05:35.152Z"}
{"msg":"Something along the following reasoning: https://lists.hyperledger.org/g/fabric/topic/76540833","username":"klenik","ts":"2020-09-03T13:06:32.080Z"}
{"msg":"The only extra code it requires is the event registration, so not much of a maintenance overhead (and it definitely won't change :joy: )","username":"klenik","ts":"2020-09-03T13:07:42.261Z"}
{"msg":"OK, so I think the suggestion is:\n```\n1.0:\n            packages: ['grpc@1.10.1', 'fabric-ca-client@1.1.0', 'fabric-client@1.1.0', 'fabric-protos@2.0.0-snapshot.1']\n            settings:\n            - *new-node-old-grpc\n1.4.11: &fabric-latest\n            packages: ['fabric-client@1.4.11', 'fabric-protos@2.0.0', 'fabric-network@1.4.11']\n        1.4:\n            packages: ['fabric-client@1.4.11', 'fabric-protos@2.0.0', 'fabric-network@1.4.11']\n        2.1.0:\n            packages: ['fabric-common@2.1.0', 'fabric-protos@2.1.0', 'fabric-network@2.1.0', 'fabric-ca-client@2.1.0']\n        2.2.0:\n            packages: ['fabric-common@2.2.0', 'fabric-protos@2.2.0', 'fabric-network@2.2.0', 'fabric-ca-client@2.2.0']\n        2.2.1:\n            packages: ['fabric-common@2.2.1', 'fabric-protos@2.2.1', 'fabric-network@2.2.1', 'fabric-ca-client@2.2.1']\n        2.2.2: &fabric-latest-v2\n            packages: ['fabric-common@2.2.2', 'fabric-protos@2.2.2', 'fabric-network@2.2.2', 'fabric-ca-client@2.2.2']\n        2.2: \n            packages: ['fabric-common@2.2.2', 'fabric-protos@2.2.2', 'fabric-network@2.2.2', 'fabric-ca-client@2.2.2']\n        latest: *fabric-latest\n        latest-v2: *fabric-latest-v2\n```\n?","username":"nkl199","ts":"2020-09-03T13:10:40.588Z"}
{"msg":"(didn't exactly print well, but hopefully is indicative)","username":"nkl199","ts":"2020-09-03T13:11:07.712Z"}
{"msg":"i will confess to be a little confused how the current 1.0.0 binding actually uses 1.1.0 sdk versions tho :joy:","username":"nkl199","ts":"2020-09-03T13:13:33.077Z"}
{"msg":"@klenik so the current caliper definitions trying to use node-sdk 1.1 against a 1.0 fabric I can't imagine working. It would have to be a node-sdk 1.0 release as I'm pretty sure that the protobufs changed a lot between 1.0 and 1.1 (in a breaking way). IIRC There was no concept of chaincode install/instantiate in 1.0 so certain capabilities in caliper just wouldn't work.","username":"davidkel","ts":"2020-09-03T13:16:03.658Z"}
{"msg":"It still has the old event hub class, so it works. The 1.0 SDK had some serious grpc issues (surprise), that's why the 1.1 is used. But different API parts are invoked","username":"klenik","ts":"2020-09-03T13:17:09.425Z"}
{"msg":"ah","username":"nkl199","ts":"2020-09-03T13:17:53.086Z"}
{"msg":"hmm","username":"nkl199","ts":"2020-09-03T13:17:53.111Z"}
{"msg":"but let's run some tests, maybe it broke since then :joy:","username":"klenik","ts":"2020-09-03T13:18:41.755Z"}
{"msg":"so if we retained the 1.1 binding then, which is compatible with 1.0 fabric?","username":"nkl199","ts":"2020-09-03T13:18:43.364Z"}
{"msg":"That should also work. I think the `eventUrl` attribute in the networkconfig triggers the \"legacy\" path","username":"klenik","ts":"2020-09-03T13:19:27.493Z"}
{"msg":"i think i would prefer that, because then the pattern of \"which sdk\" is retained for all items","username":"nkl199","ts":"2020-09-03T13:20:09.450Z"}
{"msg":"i think i would prefer that, because then the pattern of \"which sdk\" is retained for all items, instead of mixing the platform/sdk aspect","username":"nkl199","ts":"2020-09-03T13:20:09.450Z"}
{"msg":"(and a user looks up their required sdk based on target)","username":"nkl199","ts":"2020-09-03T13:20:58.578Z"}
{"msg":"true, aligns with the \"latest SDK over all previous compatible\" pattern","username":"klenik","ts":"2020-09-03T13:21:29.439Z"}
{"msg":"So what's left is 1.1 (installing 1.1), 1.4 (installing 1.4.11) and 2.2 (installing 2.2.2)?","username":"klenik","ts":"2020-09-03T13:22:10.252Z"}
{"msg":"Or we shouldn't trim so many for this release?","username":"klenik","ts":"2020-09-03T13:22:25.670Z"}
{"msg":"hmm","username":"nkl199","ts":"2020-09-03T13:22:34.205Z"}
{"msg":"i think definitely trim the 1.4 options","username":"nkl199","ts":"2020-09-03T13:23:00.317Z"}
{"msg":"yeah, that's for sure :joy:","username":"klenik","ts":"2020-09-03T13:23:16.928Z"}
{"msg":"is this then what is wanted ?\n```\nsut:\n    # Specifies the available SDK bindings and their Node.js-specific install settings\n    fabric:\n        # The name/key of the SDK binding\n        1.1.0:\n            # Specifies the packages and their versions to install\n            packages: ['grpc@1.10.1', 'fabric-ca-client@1.1.0', 'fabric-client@1.1.0', 'fabric-protos@2.0.0-snapshot.1']\n            # The settings to apply during binding. The first setting whose versionRegexp matches the node version will be used\n            settings:\n            - *new-node-old-grpc\n        1.1:\n            # Specifies the packages and their versions to install\n            packages: ['grpc@1.10.1', 'fabric-ca-client@1.1.0', 'fabric-client@1.1.0', 'fabric-protos@2.0.0-snapshot.1']\n            # The settings to apply during binding. The first setting whose versionRegexp matches the node version will be used\n            settings:\n            - *new-node-old-grpc        \n        1.4.11: &fabric-latest\n            packages: ['fabric-client@1.4.11', 'fabric-protos@2.0.0-snapshot.1', 'fabric-network@1.4.11']\n        1.4:\n            packages: ['fabric-client@1.4.11', 'fabric-protos@2.0.0-snapshot.1', 'fabric-network@1.4.11']\n        2.1.0:\n            packages: ['fabric-common@2.1.0', 'fabric-protos@2.1.0', 'fabric-network@2.1.0', 'fabric-ca-client@2.1.0']\n        2.2.0:\n            packages: ['fabric-common@2.2.0', 'fabric-protos@2.2.0', 'fabric-network@2.2.0', 'fabric-ca-client@2.2.0']\n        2.2.1:\n            packages: ['fabric-common@2.2.1', 'fabric-protos@2.2.1', 'fabric-network@2.2.1', 'fabric-ca-client@2.2.1']\n        2.2.2: &fabric-latest-v2\n            packages: ['fabric-common@2.2.2', 'fabric-protos@2.2.2', 'fabric-network@2.2.2', 'fabric-ca-client@2.2.2']\n        2.2:\n            packages: ['fabric-common@2.2.2', 'fabric-protos@2.2.2', 'fabric-network@2.2.2', 'fabric-ca-client@2.2.2']\n        latest: *fabric-latest\n        latest-v2: *fabric-latest-v2\n```","username":"davidkel","ts":"2020-09-03T13:32:51.325Z"}
{"msg":"Has left the channel.","username":"gregdhill","ts":"2020-09-03T13:35:24.037Z","type":"ul"}
{"msg":":wave: bye Greg!","username":"nkl199","ts":"2020-09-03T13:44:50.232Z"}
{"msg":"@davidkel - yes, looks like it to me :thumbsup:","username":"nkl199","ts":"2020-09-03T13:45:27.094Z"}
{"msg":"yep :thumbsup: Although 1.4 and 2.2 could use `*fabric-latest(-v2)`, so it always points to the latest patch when `latest` is moved","username":"klenik","ts":"2020-09-03T13:47:17.599Z"}
{"msg":"ok, submitted a PR","username":"davidkel","ts":"2020-09-03T13:51:28.846Z"}
{"msg":"Now that the bindings are cleaned up, the other big question is the \"functioning/maintained\" connector list. I think the following connectors should be marked \"abandoned\" with the upcoming release: Burrow, Iroha, Sawtooth (what remains: Besu, Fabric, Ethereum, FISCO-BCOS)","username":"klenik","ts":"2020-09-04T08:22:28.548Z"}
{"msg":"That sounds reasonable, we should perhaps approach the maintainers of the abandoned connectors to see if they want to reinstate them at some point in the future","username":"nkl199","ts":"2020-09-04T08:32:14.928Z"}
{"msg":"Yeah, definitely. I guess v0.5.0 will further clean up the surroundings of the connectors (cleaner API, noted best practices). Plus the Fabric connector refactor will come with additional experience we can share. So I think after v0.5.0 the core Caliper code will be stable enough so we can start reaching out to platform experts about the new/renewed connectors.","username":"klenik","ts":"2020-09-04T08:35:56.919Z"}
{"msg":"Until then I don't think we have the capacity to do our own tasks AND provide consulting for new connector implementations","username":"klenik","ts":"2020-09-04T08:36:51.118Z"}
{"msg":"ok, ... should we remove the relevant sections from the vNext docs?","username":"nkl199","ts":"2020-09-04T08:40:42.390Z"}
{"msg":"Since there's API incompatibility, no need to do the deprecate-then-remove steps. So shall we remove code/docs now?","username":"klenik","ts":"2020-09-04T08:44:23.810Z"}
{"msg":"seems the reasonable thing to do to be honest","username":"nkl199","ts":"2020-09-04T08:51:44.295Z"}
{"msg":"Just a heads up that I wont be able to attend the maintainers meeting on weds next week :thumbsup:","username":"nkl199","ts":"2020-09-04T13:59:57.641Z"}
{"msg":"I have a conflicting meeting today, so can't attend the call. Progress update: I'm going through the docs looking for outdated examples or concepts, or anything that requires clarification. The next days I'll also have a look at the prs, there's quite a few now (but mostly reviewed as I see, thanks Dave :tada:) ","username":"klenik","ts":"2020-09-09T10:51:20.667Z"}
{"msg":"@klenik @nkl199 Hi in the BlockChainConnector implementation there is this definition\n```\n   /**\n     * Send a request to the backing SUT. Must be overridden by derived classes.\n     * @param {object} request The object containing the options of the request.\n     * @return {Promise<TxStatus>} The array of data about the executed requests.\n     * @async\n     */\n    async _sendSingleRequest(request) {\n        throw new Error('_sendSingleRequest is not implemented for this blockchain connector');\n    }\n```\n`_sendSingleRequest` is a protected method (ie semi-public) and not really private, so can I propose we remove the underscore pattern from this method as that makes more sense to me","username":"davidkel","ts":"2020-09-14T08:29:03.421Z"}
{"msg":"Makes sense, but does JS have a notation for protected methods? Without the underscore it looks like a public API function. (Btw, it could be, but then sendRequest should be sendRequestBatch, and this should be sendRequest)","username":"klenik","ts":"2020-09-14T08:34:40.798Z"}
{"msg":":thinking: I think having both as public methods would work nicely, iirc there is no \"protected\" method in javascript, though you can emulate it through some hackery using call/apply on a function outside of the exported class (shudder). I like the idea of `sendRequest` and `sendRequestBatch` as being public methods that a user may select","username":"nkl199","ts":"2020-09-14T08:53:14.193Z"}
{"msg":"As a side, some people suggest that you use the `_` for both protected and private methods which is subjective really. Of course some OO purists insist that protected was a bad idea in the first place and you should only have public and private :-) As with Javascript all methods are really public unless you perform clever tricks to hide the methods then I would say the best suggestion I have to describe these would be through the use of JSDoc and don't expose or mark as private all methods that should not be used by caliper or end user developers, others would then be documented to target the audience who would use them and you can also mark them as `@protected` as well.","username":"davidkel","ts":"2020-09-14T09:01:46.020Z"}
{"msg":"As a side, some people suggest that you use the `_` for both protected and private methods which is subjective really. Of course some OO purists insist that protected was a bad idea in the first place and you should only have public and private :-) As with Javascript all methods are really public unless you perform clever tricks to hide the methods then I would say the best suggestion I have to describe these would be through the use of JSDoc and don't expose or mark as private all methods that should not be used by caliper or end user developers, others would then be documented to target the audience who would use them and you can also mark them as `@protected` as well. But my preference would be that only true private methods use the `_` naming convention","username":"davidkel","ts":"2020-09-14T09:01:46.020Z"}
{"msg":"Okay, I support removing the underscore. Most IDEs can process and notify the users about protected/private tags anyway.","username":"klenik","ts":"2020-09-14T09:04:54.941Z"}
{"msg":"Okay, I support removing the underscore. Most IDEs can process and notify the users about protected/private tags anyway. For now I'd keep the single `sendRequest` public method, so users don't have to care about the number of TXs.","username":"klenik","ts":"2020-09-14T09:04:54.941Z"}
{"msg":"Hello Caliper contributors! Reminder to please join the DevRel Marketing Committee call at 9am PT on 9/16 this week. Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-09-16+Meeting+notes","username":"jramps9","ts":"2020-09-14T17:36:02.494Z"}
{"msg":"I would like to put forward a proposal for discussion. It's about using newer capabilities of node. With the release of 0.4 there is an opportunity to define supported versions of node and with that allows us to know what newer capabilities of node we could exploit. The node LTS Table looks like this\n```\nv10\tMaintenance LTS - EOL: 2021-04-30\nv12\tActive LTS - EOL: 2022-04-30\nv14\tCurrent- SOL: 2020-10-27\n\n(EOL = End of Life, SOL = Start of Life)\n```\nDepending on when V0.4 is planned for release I think that would affect whether node V14 could be included, but I would hope that 0.5 wouldn't be too long after 0.4 So could consider that 0.5 includes V14 support. We should definitely drop support for V8 and the minimum should be V10. I think the limiting factors here will be the versions of node that the connectors themselves declare support for and how we manage that considering you can bind different versions. But I would expect connectors to always support the minimum node LTS version at time of release in order to be included in a release.\n\nOne bonus is that with the removal of node 8, we can make use of at least node 10 features which include `fs.promises` support, meaning we don't have to rely on fsextra anymore. Whether we want to go back and remove all uses of fsextra as well as all uses of fs sync use (unless there is a good reason to use the sync methods) I think is worth talking about as well.","username":"davidkel","ts":"2020-09-16T09:18:18.483Z"}
{"msg":"Great idea! If we make the Dockerfile path configurable in [this script](https://github.com/hyperledger/caliper/blob/master/packages/caliper-publish/artifacts/docker-build.sh) (and in the publishing CLI), then we can build and test Caliper locally as a PoC with the [local docker test](https://github.com/hyperledger/caliper/tree/master/packages/caliper-tests-integration/fabric_docker_distributed_tests) by providing custom Dockerfiles, using different node versions. I think this way would be faster than the CI path, and we can run the test with different `(SUT x SUT version x Node version)`  tuples to detect potential incompatibilities :thinking:","username":"klenik","ts":"2020-09-16T09:30:49.168Z"}
{"msg":"And then we can argue about range of Node version support instead of a single version (using a `SUT version x Node version` compatibility table for each SUT). Although for the published docker image we should probably stick with a single/newest Node version.","username":"klenik","ts":"2020-09-16T09:32:47.692Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=g9wpJHzow5RT6X5xy) Added some thoughts to this in the issue: https://github.com/hyperledger/caliper/issues/998","username":"klenik","ts":"2020-09-16T10:22:18.211Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=g9wpJHzow5RT6X5xy","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=g9wpJHzow5RT6X5xy","remote":true,"fileId":null,"fileName":null}]}
{"msg":"oooo - next issue raised is #1000 ... is that a good or bad thing?! :thinking:","username":"nkl199","ts":"2020-09-16T10:47:13.192Z"}
{"msg":"... and it's taken with a PR :joy:","username":"nkl199","ts":"2020-09-16T10:49:22.840Z"}
{"msg":"Since every software has issues, no issues means stale software :D We're not far from the #1000 closed issue, and that's definitely a good thing :grin:","username":"klenik","ts":"2020-09-16T10:49:45.226Z"}
{"msg":"also a conversation on:\n- connector removal\n- bindings (those users may call, and defaults in the container image)","username":"nkl199","ts":"2020-09-16T14:42:20.188Z"}
{"msg":"candidate item for next weeks call - release schedules. I think it is fair to say that we don't release very often. At the moment it is because we want to contain the majority of breaking changes in the next version bump. However, after the 0.4 release we might want to include a \"do we release\" conversation every month, which could be based on:\n- an essential bug fix to go out\n- enough minor bug fixes to warrant a patch release (to remove the niggles)\n- completion of a breaking change/feature that we want out","username":"nkl199","ts":"2020-09-18T11:39:18.186Z"}
{"msg":"I think we managed to keep the breaking changes under control for this release. The only major change from a user's PoV is the new workload module approach. Everything else is either a smaller config change, or new feature. (The internal changes are waaaay bigger, but I think the maintainers and contributors like the new design better :slight_smile: )","username":"klenik","ts":"2020-09-18T16:31:21.265Z"}
{"msg":"There are still some API breaking changes down the road, these might signal fast release cycles after v0.4.0 :thinking: In no particular order, and without being exhaustive:\n1. Make messengers configurable/selectable through config file (currently they're configured through runtime configs, which is kind of weird)\n2. Separate monitors and reporters in a clean way, and make reporters pluggable in the process :)\n3. Introduce a \"Module Config\" file, that gathers every single-place-of-use plugins: messengers, TX monitors, resource monitors, reporters. (1. depends on this.)\n4. Ongoing Fabric connector refactor\n~5. Idea of \"Contract Config\" file, so the network config is separated from the deployed artifacts~\n\n5. is crossed out, because it can be easily achieved inside the connector by using a runtime config, so I think there's no need to pollute the architecture with it.","username":"klenik","ts":"2020-09-18T17:37:20.142Z"}
{"msg":"Raised a draft PR for the connector docs: https://github.com/hyperledger/caliper/pull/1007\nI plan a complete rewrite for this page, since we will need help with reimplementing the recently removed connectors. Plus a consensus of requirements is always helpful. Some of these thoughts are subjective, open for discussion and extension.","username":"klenik","ts":"2020-09-19T08:36:40.452Z"}
{"msg":"Update: the PR is live :newspaper:","username":"klenik","ts":"2020-09-21T08:05:40.986Z"}
{"msg":"And now the changes are actually added to the commit :joy: :sweat_smile:","username":"klenik","ts":"2020-09-21T09:36:53.626Z"}
{"msg":"lol, been there ... many times :joy:","username":"nkl199","ts":"2020-09-21T09:37:24.173Z"}
{"msg":"38 files :worried: suddenly prefer how that PR was before :joy:","username":"nkl199","ts":"2020-09-21T15:15:21.970Z"}
{"msg":"Most of them are only renaming, don't worry :grin:","username":"klenik","ts":"2020-09-21T15:25:52.992Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=me82Dsjy4gZDSzhJ5) I was actually talking about the docs PR, the code PR was already live on Friday evening :D","username":"klenik","ts":"2020-09-21T15:26:38.256Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=me82Dsjy4gZDSzhJ5","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=me82Dsjy4gZDSzhJ5","remote":true,"fileId":null,"fileName":null}]}
{"msg":"ah!","username":"nkl199","ts":"2020-09-21T15:26:48.760Z"}
{"msg":"@davidkel We probably need some fresh/unbiased eyes on the new connector docs (https://github.com/hyperledger/caliper/pull/1007). Could you take a quick look at it please, whether it's clear what I'm talking about? :) \nhttps://aklenik.github.io/caliper/vNext/writing-connectors/","username":"klenik","ts":"2020-09-23T06:13:20.372Z"}
{"msg":"@klenik I will take a look in more detail but I think I have already hit a problem with the interface. It looks like the interface defines the lifecycle on a connector as \n```\n- synchronous constructor (expected it ready for use)\n- optional init depending on master or worker\n```\nThe problem I have is that in some of the work we are doing to change the network configuration it's not possible to construct a connector that is ready for use because asynchronous activities take place to make a connector available. This would mean having to push the logic into the init method but the docs say this is optional.\nAs Caliper is managing the lifecycle of this connector it dictates when a connector is ready for use and if the assumption is purely down to the results of newing a synchronous constructors then connectors may very well have to do lazy initialising on all other calls.\n\nThe other thing I came across was around getContext. It looks like getContext can be called twice which means connectors need to potentially protect against this (as was done in the fabric v1 connector) so would be worth mentioning in the docs","username":"davidkel","ts":"2020-09-23T10:36:21.206Z"}
{"msg":"@klenik I will take a look in more detail but I think I have already hit a problem with the interface. It looks like the interface defines the lifecycle on a connector as \n```\n- synchronous constructor (expected it ready for use)\n- optional init depending on master or worker\n```\nThe problem I have is that in some of the work we are doing to change the network configuration it's not possible to construct a connector that is ready for use because asynchronous activities take place to make a connector available. This would mean having to push the logic into the init method but the docs say this is optional.\nAs Caliper is managing the lifecycle of this connector it dictates when a connector is ready for use and if the assumption is purely down to the results of newing a synchronous constructor then connectors may very well have to do lazy initialising on all other calls.\n\nThe other thing I came across was around getContext. It looks like getContext can be called twice which means connectors need to potentially protect against this (as was done in the fabric v1 connector) so would be worth mentioning in the docs","username":"davidkel","ts":"2020-09-23T10:36:21.206Z"}
{"msg":"Yes, this dual environment is a bit confusing. \n1. So, the manager always calls init and install on the connector, the worker never (maybe optional isn't the right word in the docs). \n2. For the worker instances, the async factory method must return a ready-to-use connector, and the worker will call `getContext` on it next. \n3. There's still some unfortunate naming in the API: get/releaseContext really should be roundStarting/roundFinished (or something similar). \n4. The context concept is still a legacy approach from the early times of Caliper. I'm not sure this is the best way to expose data to workload modules. The connectors should expose additional API functions for additional features. Then the start/finish rounds calls could be events initiated by the worker, never fired twice.\n5. As I was writing the docs, I really had the feeling that two APIs would be needed for this dual environment. Common code could be extracted meaningfully I think, and the concepts would be clear.\n\nThoughts are welcome","username":"klenik","ts":"2020-09-23T11:03:33.483Z"}
{"msg":"I've just found the connector factory :-) so that helps, but I do wonder on the purpose of the init method then and probably calling it `init` is not the right method name here as it implies a certain meaning","username":"davidkel","ts":"2020-09-23T11:55:43.542Z"}
{"msg":"Yep. Nick proposed the initConnector and initSut distinctions. The bottom line is we have to make these concepts cleaner a bit...","username":"klenik","ts":"2020-09-23T11:57:22.655Z"}
{"msg":"do we want this clarification in 0.4 or 0.5?","username":"nkl199","ts":"2020-09-23T12:07:30.896Z"}
{"msg":"I say 0.5, we should really roll out 0.4  already","username":"klenik","ts":"2020-09-23T12:13:20.306Z"}
{"msg":"phew, was hoping u would say that!","username":"nkl199","ts":"2020-09-23T12:13:37.055Z"}
{"msg":"(might be a few minutes late, and drop off after 30 minutes :sweat_smile:) ","username":"klenik","ts":"2020-09-23T14:59:07.705Z"}
{"msg":"phew, had a crack at re-writing the tutorial :scream: there were many comments so i might have missed a few. My plan is to give it a few hours, then run through the tutorial on a fresh VM to check it works","username":"nkl199","ts":"2020-09-24T11:17:55.337Z"}
{"msg":"phew, had a crack at re-writing the tutorial :scream: there were many comments so i might have missed a few. My plan is to give it a few hours, then run through the tutorial on a fresh VM to check it works there","username":"nkl199","ts":"2020-09-24T11:17:55.337Z"}
{"msg":"phew, had a crack at re-writing the tutorial :scream: there were many comments so i might have missed a few. My plan is to give it a few hours, then run through the tutorial on a fresh VM to check it works there, and no doubt modify some text","username":"nkl199","ts":"2020-09-24T11:17:55.337Z"}
{"msg":"any changes required in the changelog PR?","username":"nkl199","ts":"2020-09-24T11:32:31.725Z"}
{"msg":"I think it contains everything. Maybe a doc link for new features and broken APIs would be useful, but I'm okay without it ","username":"klenik","ts":"2020-09-24T13:56:37.844Z"}
{"msg":"hmmm, API docs links can get broken ... but a \"go look at the docs\" would work","username":"nkl199","ts":"2020-09-24T14:00:37.691Z"}
{"msg":"or link the the PR with ur additions to the docs","username":"nkl199","ts":"2020-09-24T14:00:50.867Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=CEbF4Jc5fbgrqqcTu) Can't we \"pre-link\" to the v0.4.0 paths? The docs will be bumped anyway, and won't change after that.","username":"klenik","ts":"2020-09-24T14:02:05.108Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=CEbF4Jc5fbgrqqcTu","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=CEbF4Jc5fbgrqqcTu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Or the users can just look for the keywords in the change list :man_shrugging_light_skin_tone:","username":"klenik","ts":"2020-09-24T14:02:42.599Z"}
{"msg":"hmmm, good point! (bumping docs)","username":"nkl199","ts":"2020-09-24T14:03:13.902Z"}
{"msg":"ah, but we track the current \"latest minor\" such as 0.3.2, vNext","username":"nkl199","ts":"2020-09-24T14:03:56.462Z"}
{"msg":"we will soon have 0.3.2, 0.4, vNext","username":"nkl199","ts":"2020-09-24T14:04:07.214Z"}
{"msg":"Then let's leave it as it is","username":"klenik","ts":"2020-09-24T14:04:43.036Z"}
{"msg":"righto","username":"nkl199","ts":"2020-09-24T14:04:54.753Z"}
{"msg":"OK, i've reached tutorial saturation poing :joy:","username":"nkl199","ts":"2020-09-24T14:15:21.761Z"}
{"msg":"OK, i've reached tutorial saturation point :joy:","username":"nkl199","ts":"2020-09-24T14:15:21.761Z"}
{"msg":"https://nklincoln.github.io/caliper/vNext/fabric-tutorial/tutorials-fabric-existing/ for the interest parties","username":"nkl199","ts":"2020-09-24T14:15:48.071Z"}
{"msg":"https://nklincoln.github.io/caliper/vNext/fabric-tutorial/tutorials-fabric-existing/ for the interested parties","username":"nkl199","ts":"2020-09-24T14:15:48.071Z"}
{"msg":"Just a quick remark for the beginning: \n1. I would note the repo tag for the Fabric sample, in case the example will change again later\n2. I would switch step 1 & 2. First the workspace is created, then Caliper is installed locally there (is `npm init` needed or the install will create it?)","username":"klenik","ts":"2020-09-24T14:19:40.764Z"}
{"msg":"good points!","username":"nkl199","ts":"2020-09-24T14:27:09.894Z"}
{"msg":"i think i will combine those steps to make it more explicit that the bind is localin that workspace","username":"nkl199","ts":"2020-09-24T14:31:38.533Z"}
{"msg":"i think i will combine those steps to make it more explicit that the bind is local in that workspace","username":"nkl199","ts":"2020-09-24T14:31:38.533Z"}
{"msg":"(above change is now live)","username":"nkl199","ts":"2020-09-24T14:36:16.623Z"}
{"msg":"Btw, should we add a `tutorials` folder to the bench repo? It could contain the final artifacts","username":"klenik","ts":"2020-09-24T16:33:47.257Z"}
{"msg":"Has joined the channel.","username":"lucassaldanha","ts":"2020-09-25T00:53:21.927Z","type":"uj"}
{"msg":"Hi folks! I am working on a update to the ethereum-connector to add support for Hyperledger Besu private transactions. I would love some feedback from you on my approach. I'm planning opening a draft PR with my changes to get some feedback. Does that work for you guys?","username":"lucassaldanha","ts":"2020-09-25T00:53:22.321Z"}
{"msg":"@lucassaldanha Sure, and if you could give a short summary of it (private txs in general, how clients use it, some technical details, etc) next Wednesday on the Caliper call, that would be even better :) Let me just tag the Besu experts @benjamincburns and @shemnon  so they're also aware of this","username":"klenik","ts":"2020-09-25T06:32:59.384Z"}
{"msg":"https://hacktoberfest.digitalocean.com/ <- time to start tagging issues? :joy:","username":"nkl199","ts":"2020-09-25T08:18:32.266Z"}
{"msg":"@rjones Hi Ry, it seems that the Caliper repository has lost connection to the Travis builds. Is this something that was intended to occur? This is a little problematic for us, as not only do we use Travis to run the unit/integration tests, it is also used to publish Caliper for both unstable and official releases","username":"nkl199","ts":"2020-09-25T09:22:37.762Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2020-09-25T09:22:37.889Z","type":"uj"}
{"msg":"ok ... so it seems the builds are back?","username":"nkl199","ts":"2020-09-25T09:35:41.516Z"}
{"msg":"Hopefully it stays that way","username":"klenik","ts":"2020-09-25T09:38:30.548Z"}
{"msg":"I didn’t do anything","username":"rjones","ts":"2020-09-25T12:14:41.251Z"}
{"msg":"please migrate to azure pipelines or GitHub actions tho","username":"rjones","ts":"2020-09-25T12:15:07.823Z"}
{"msg":"noted- will add an issue into the repo to do that","username":"nkl199","ts":"2020-09-25T12:18:53.623Z"}
{"msg":"Thanks. Have you played with the minifab integration? Good stuff","username":"rjones","ts":"2020-09-25T12:19:58.211Z"}
{"msg":"Assisted tong with a few small bits when he moved it in, but not used it myself yet :thumbsup:","username":"nkl199","ts":"2020-09-25T12:23:37.052Z"}
{"msg":"Actually, @benjamincburns is aware of the changes. We work together at ConsenSys :)\n\nAt what time do you hold the contributor calls? I have a feeling they might be in the middle of the night for me (I'","username":"lucassaldanha","ts":"2020-09-26T06:39:21.185Z"}
{"msg":"Actually, @benjamincburns is aware of the changes. We work together at ConsenSys :)\n\nAt what time do you hold the contributor calls? I have a feeling they might be in the middle of the night for me (I'm in NZ)","username":"lucassaldanha","ts":"2020-09-26T06:39:21.185Z"}
{"msg":"3PM UTC. If you sum up the above points in the pr, that's also fine ","username":"klenik","ts":"2020-09-26T15:03:04.818Z"}
{"msg":"@nkl199 @davidkel Which `fabric-samples` tag are you using for the tutorial? I used the latest non-master `v2.1.1` tag, and it uses fabcar... We should probably specify a commit on which the tutorial has been tested (and update it to a named release once available).","username":"klenik","ts":"2020-09-28T16:12:19.884Z"}
{"msg":":thumbsup: good idea - will grab the bits I was using ... brb","username":"nkl199","ts":"2020-09-28T16:32:42.823Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/release-2.2/tutorials.html","username":"nkl199","ts":"2020-09-28T16:33:43.661Z"}
{"msg":"and this: https://github.com/hyperledger/fabric-samples/blob/master/asset-transfer-basic/chaincode-javascript/lib/assetTransfer.js","username":"nkl199","ts":"2020-09-28T16:33:57.859Z"}
{"msg":"so it looks like the 2.2 fabric sdks are broken with respect to concurrent queries. Suggestion here is that we pull the binding from the CLI, and add it back in when it works","username":"nkl199","ts":"2020-09-28T16:37:49.182Z"}
{"msg":"How is that possible? :O","username":"klenik","ts":"2020-09-28T17:18:47.735Z"}
{"msg":"good question","username":"nkl199","ts":"2020-09-29T08:17:20.742Z"}
{"msg":"oof, yet another push on the tutorial :joy:","username":"nkl199","ts":"2020-09-29T14:12:09.897Z"}
{"msg":"I also left a few smaller notes, but technically I could run the tutorial without a glitch, so hurray :tada:","username":"klenik","ts":"2020-09-30T07:17:57.790Z"}
{"msg":"not sure why, but i just can't get the \"code snippet\" to work","username":"nkl199","ts":"2020-09-30T07:33:07.219Z"}
{"msg":"I changed the v2.something tag to the commit hash I wrote in the remarks (current master), and it worked like a charm. ","username":"klenik","ts":"2020-09-30T07:34:58.981Z"}
{"msg":"ok, will give it a go","username":"nkl199","ts":"2020-09-30T07:36:51.061Z"}
{"msg":"aha, i haz network :D","username":"nkl199","ts":"2020-09-30T07:54:57.743Z"}
{"msg":"and deployed contract","username":"nkl199","ts":"2020-09-30T07:55:04.905Z"}
{"msg":":tada: ","username":"klenik","ts":"2020-09-30T07:56:59.514Z"}
{"msg":"I can only drop in only for like 10 minutes, maybe enough time for a quick release-check (tasks concerning me) :sweat_smile:","username":"klenik","ts":"2020-09-30T14:09:45.225Z"}
{"msg":"I can only drop in only for like 10 minutes for the call, maybe enough time for a quick release-check (tasks concerning me) :sweat_smile:","username":"klenik","ts":"2020-09-30T14:09:45.225Z"}
{"msg":"OK, suggested agenda:\n- questions around current PRs\n- any pending inclusions for 0.4 release\n- possible discussion on when to release :tada:","username":"nkl199","ts":"2020-09-30T14:34:56.728Z"}
{"msg":"Zoom channel with pass: https://zoom.us/my/hyperledger.community?pwd=STZQd0xMZU9xRVVOVnpQM3JNQ2dqZz09","username":"klenik","ts":"2020-09-30T15:01:50.057Z"}
{"msg":"There is something wrong with the ethereum networks in the bench repo. I'll remove them and add the setup we use for the CI, that has no issues.","username":"klenik","ts":"2020-10-01T12:50:50.644Z"}
{"msg":"righto, hadn't noticed those as ... tbh, i dont use them","username":"nkl199","ts":"2020-10-01T14:03:28.446Z"}
{"msg":"would be good to get a CI for all items in the benchmarks post 0.4 release","username":"nkl199","ts":"2020-10-01T14:03:46.203Z"}
{"msg":"that would be a long running CI :sweat_smile:","username":"klenik","ts":"2020-10-01T14:04:17.978Z"}
{"msg":"yh, maybe just one test from each connector type?","username":"nkl199","ts":"2020-10-01T14:04:52.934Z"}
{"msg":"I was thinking about unit tests for the workload modules, using mocked connectors. So at least we can detect API changes","username":"klenik","ts":"2020-10-01T14:05:40.435Z"}
{"msg":"I was thinking about unit tests for the workload modules, using mocked connectors. So at least we can detect API changes. And one integration test per SUT type maybe.","username":"klenik","ts":"2020-10-01T14:05:40.435Z"}
{"msg":"oooo, much neater","username":"nkl199","ts":"2020-10-01T14:14:30.086Z"}
{"msg":"Hi guys, I have opened the PR adding support to Besu private transactions. Let me know what you think! https://github.com/hyperledger/caliper/pull/1030","username":"lucassaldanha","ts":"2020-10-01T23:15:46.365Z"}
{"msg":"thanks, we're aiming to release 0.4 today, so hopefully it will be \"officially available\" in 0.5 (but we also publish unstable versions on every PR inclusion)","username":"nkl199","ts":"2020-10-02T07:02:34.263Z"}
{"msg":"Thanks! I have just updated the PR :+1:","username":"lucassaldanha","ts":"2020-10-05T01:28:08.173Z"}
{"msg":"Used for contributors of Hyperledger Caliper to discuss implementation details. [Weekly Zoom calls.](https://zoom.us/my/hyperledger.community?pwd=STZQd0xMZU9xRVVOVnpQM3JNQ2dqZz09)","username":"klenik","ts":"2020-10-07T14:51:48.672Z","type":"room_changed_description"}
{"msg":"Used for contributors of Hyperledger Caliper to discuss implementation details. [Weekly Zoom calls.](https://zoom.us/my/hyperledger.community?pwd=STZQd0xMZU9xRVVOVnpQM3JNQ2dqZz09)","username":"klenik","ts":"2020-10-07T14:51:48.678Z","type":"room_changed_topic"}
{"msg":"a consideration for when performance testing (new) fabric networks .. use \"roll back\" instead of rebuilding the entire network from scratch: https://cloud.ibm.com/docs/blockchain?topic=blockchain-backup-restore","username":"nkl199","ts":"2020-10-08T07:49:17.312Z"}
{"msg":"Does this method also save the state database content? We tried the same approach using swarm (point a \"restarted\" peer to a volume containing its previous chain), but recommitting the TX write sets to the state DB took the same time (or even more, I don't remember exactly) than filling the DB from scratch with traditional TXs (which was really surprising that we didn't gain much/anything).","username":"klenik","ts":"2020-10-08T08:05:53.271Z"}
{"msg":"(Off topic: the concept of rolling back entire networks sound like a cross-organizational hell to me. Why should org1 lose its CC1 TXs on channel1, just because a faulty CC2 was deployed by someone else on a different channel? Especially if the failure surfaces only later. I think BPE-like compensation mechanisms would be the correct way to go. A distributed ledger is always backed up by design. A network-wide (or just channel-wide, if possible) rollback... well, good luck pushing that through with the participants and auditors. Defeats the whole purpose.)","username":"klenik","ts":"2020-10-08T08:19:11.021Z"}
{"msg":"yh, agree that cross organisational roll back reeks of \"lets hide that\" :joy:","username":"nkl199","ts":"2020-10-08T09:27:21.697Z"}
{"msg":"Any objections for configuring stale-bot for the bench repo?","username":"klenik","ts":"2020-10-08T13:58:45.598Z"}
{"msg":"none at all :thumbup:","username":"nkl199","ts":"2020-10-08T15:59:41.099Z"}
{"msg":"2 day timeout? :thinking: :joy:","username":"nkl199","ts":"2020-10-08T15:59:59.839Z"}
{"msg":"So there were two significant fixes recently:\n1) Bumping the node version in the Docker image. Both v0.3.2 and v0.4.0 can benefit from this. Only the image needs to be rebuilt and repushed, can be done locally.\n2) A TX stat merging bug fix is on its way, which only affects v0.4.0.\n\nI would suggest the following:\n* Repush v0.3.2 docker image using the updated docker file (no PR required).\n* Switching back to a v0.4.1 patch version after the fix is in, which will push a fix to both npm and docker hub.","username":"klenik","ts":"2020-10-14T08:50:49.721Z"}
{"msg":"At the moment there are no breaking changes, so we can keep with the 0.4.2-unstable once the patch has gone out :thumbup:","username":"nkl199","ts":"2020-10-14T08:52:04.043Z"}
{"msg":"Added agenda item: node version bump and implications for caliper docker image","username":"nkl199","ts":"2020-10-14T09:34:15.555Z"}
{"msg":"Hello Caliber contributors! Reminder to please join the DevRel Marketing Committee call at 9am PT TODAY. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-10-14+Meeting+notes","username":"jramps9","ts":"2020-10-14T14:07:33.220Z"}
{"msg":"@nkl199 I have an almost conflicting meeting today, so if we start with the update of docker images, I'd be grateful :grin:","username":"klenik","ts":"2020-10-14T14:16:15.187Z"}
{"msg":"@nkl199 I have an almost conflicting meeting today, so if we could start with the update of docker images, I'd be grateful :grin:","username":"klenik","ts":"2020-10-14T14:16:15.187Z"}
{"msg":"sure :thumbup:","username":"nkl199","ts":"2020-10-14T14:16:28.745Z"}
{"msg":"i suspect it will be a quick meeting","username":"nkl199","ts":"2020-10-14T14:16:45.539Z"}
{"msg":"Has joined the channel.","username":"Gary_Hsing","ts":"2020-10-20T19:07:26.229Z","type":"uj"}
{"msg":"Hello! We are a team of graduate students from Duke University looking into doing a project extending Caliper to be able to gather statistics from Hyperledger Sawtooth. We saw from online and chat history here that Sawtooth used to be supported and is no longer. Is this a feasible project to accomplish in about a month and a half? Is there anyone we can chat with more to explore this option?","username":"Gary_Hsing","ts":"2020-10-20T19:07:26.415Z"}
{"msg":"@Gary_Hsing I think, in general, it should be doable. IIRC Caliper support for Sawtooth was removed due to lack of interest on Sawtooth's part, not any architectural change","username":"rjones","ts":"2020-10-20T19:13:45.544Z"}
{"msg":"@rjones Thank you very much!","username":"Gary_Hsing","ts":"2020-10-20T19:16:48.002Z"}
{"msg":"@Gary_Hsing It's absolutely doable! The previous Sawtooth connector was removed due to a combination of hard-to-maintain/limited code-base + high-level API change + lack of community/expert interest/support. But if you'd like to reimplement the sawtooth support, we'd be happy to assist you along the way. The first step is getting familiar with the way connectors should behave: https://hyperledger.github.io/caliper/v0.4.1/writing-connectors/","username":"klenik","ts":"2020-10-20T19:27:51.707Z"}
{"msg":"Thanks for the information! Appreciate it a lot, we will start from reading those materials!","username":"Gary_Hsing","ts":"2020-10-20T20:45:49.133Z"}
{"msg":"While thinking more about the equivalent replacement of the operational capabilities for the 1.4 fabric connectors, the current proposed specification was\n```\n   - channelName: otherchannel\n      # [Optional] create the channel\n      create: true\n      definition:\n        # [Either/Or] if you create a channel you must provide a prebuiltTransaction ore capabilities/consortium/msps/version\n        prebuiltTransaction: 'some/binary.tx'\n        # capabilities: []\n        # consortium: 'SampleConsortium2'\n        # msps: ['Org1MSP', 'Org2MSP']\n        # version: 0\n      # Array of contracts to be installed/instantiated on the named channel and available for use by the workload module\n      contracts:\n      - id: marbles\n        contractID: myMarbles\n        # the following are required if create is true\n        version: v0\n        language: golang\n        path: marbles/go\n        metadataPath: src/marbles/go/metadata\n```\nHowever now I understand it a bit more, I think that we could make this section simplier.\n```\n   - channelName: otherchannel\n      definition:\n        # [Either/Or] if you create a channel you must provide a prebuiltTransaction or capabilities/consortium/msps/version\n        prebuiltTransaction: 'some/binary.tx'\n        # capabilities: []\n        # consortium: 'SampleConsortium2'\n        # msps: ['Org1MSP', 'Org2MSP']\n        # version: 0\n      # Array of contracts to be installed/instantiated on the named channel and available for use by the workload module\n      contracts:\n      - id: marbles\n        contractID: myMarbles\n        # the following are required if create is true\n        version: v0\n        language: golang\n        path: marbles/go\n        metadataPath: src/marbles/go/metadata\n```\nie remove the create property altogether.\nIf you want channel creation, then you need to specify the definition property of a channel (you only need to provide a definition if you plan to create a channel)\nif you want chaincode install/instantiate them you need to provide version, language,path and optionally metadataPath (these are only required for chaincode install/instantiate)\nSuggestions welcome, but this capability is something that I don't think should be in caliper moving forward, just putting it in for backward compatibility and the integration tests really","username":"davidkel","ts":"2020-10-21T14:05:36.299Z"}
{"msg":"While thinking more about the equivalent replacement of the operational capabilities for the 1.4 fabric connectors, the current proposed specification was\n```\n   - channelName: otherchannel\n      # [Optional] create the channel\n      create: true\n      definition:\n        # [Either/Or] if you create a channel you must provide a prebuiltTransaction ore capabilities/consortium/msps/version\n        prebuiltTransaction: 'some/binary.tx'\n        # capabilities: []\n        # consortium: 'SampleConsortium2'\n        # msps: ['Org1MSP', 'Org2MSP']\n        # version: 0\n      # Array of contracts to be installed/instantiated on the named channel and available for use by the workload module\n      contracts:\n      - id: marbles\n        contractID: myMarbles\n        # the following are required if create is true\n        version: v0\n        language: golang\n        path: marbles/go\n        metadataPath: src/marbles/go/metadata\n```\nHowever now I understand it a bit more, I think that we could make this section simplier.\n```\n   - channelName: otherchannel\n      definition:\n        # [Either/Or] if you create a channel you must provide a prebuiltTransaction or capabilities/consortium/msps/version\n        prebuiltTransaction: 'some/binary.tx'\n        # capabilities: []\n        # consortium: 'SampleConsortium2'\n        # msps: ['Org1MSP', 'Org2MSP']\n        # version: 0\n      # Array of contracts available on the channel\n      contracts:\n      - id: marbles\n        contractID: myMarbles\n        # the following are required to install/instantiate\n        version: v0\n        language: golang\n        path: marbles/go\n        metadataPath: src/marbles/go/metadata\n```\nie remove the create property altogether.\nIf you want channel creation, then you need to specify the definition property of a channel (you only need to provide a definition if you plan to create a channel)\nif you want chaincode install/instantiate them you need to provide version, language,path and optionally metadataPath (these are only required for chaincode install/instantiate)\nSuggestions welcome, but this capability is something that I don't think should be in caliper moving forward, just putting it in for backward compatibility and the integration tests really","username":"davidkel","ts":"2020-10-21T14:05:36.299Z"}
{"msg":"what about shadowing the \"definition\" in contracts too then? So as a minimal, you get the channelName, with contracts[id/contractId] ... but can explicitly add definitions for both?","username":"nkl199","ts":"2020-10-21T14:20:15.382Z"}
{"msg":"```\n- channelName: otherchannel\n      definition:\n        # [Either/Or] if you create a channel you must provide a prebuiltTransaction or capabilities/consortium/msps/version\n        prebuiltTransaction: 'some/binary.tx'\n        # capabilities: []\n        # consortium: 'SampleConsortium2'\n        # msps: ['Org1MSP', 'Org2MSP']\n        # version: 0\n      # Array of contracts available on the channel\n      contracts:\n      - id: marbles\n        contractID: myMarbles\n        definition:\n          version: v0\n          language: golang\n          path: marbles/go\n          metadataPath: src/marbles/go/metadata\n```","username":"nkl199","ts":"2020-10-21T14:22:17.237Z"}
{"msg":"I agree that channel and contract management in Fabric are reaching a complexity that is hard to mirror in Caliper (and keeping the configuration simple at the same time).\nRemark about the `created` attribute: it was intended to ease re-running benchmark when the channel was already created in the first run. It's only useful for JSON configs, where you can't comment the \"create block\". But the connector also supports skipping channel creation based on runtime configs. So the `created` attribute seems a bit obsolete now.","username":"klenik","ts":"2020-10-21T14:22:24.663Z"}
{"msg":"There is also this in the code base\n```\n            if (ConfigUtil.get(ConfigUtil.keys.Fabric.SkipCreateChannelPrefix + channelNameToCreate, false)) {\n                logger.info(`Creation of Channel '${channelNameToCreate}' is configured to skip`);\n                continue;\n            }\n```\nWhich isn't on the Join part of the creation, wondered if we would still want to keep it and also have it check in the join as well","username":"davidkel","ts":"2020-10-21T14:23:29.670Z"}
{"msg":"So is the concensus that there is no need now for a create/created flag in the config ?","username":"davidkel","ts":"2020-10-21T14:26:44.165Z"}
{"msg":"The initial problem was/is that the existence of a channel is considered private information, so it cannot be queried. You can list the channels a peer is part of, but even if you merge every query result for every peer, it's not a definitive answer to \"Does this channel exist?\". If a known peer is a part of it, then you can answer it, but you can't detect empty channels for example (AFAIK). And the user side of the problem is that Fabric returns general/obfuscated errors when dealing with channel creation/join. So we delegated this knowledge to the users :)","username":"klenik","ts":"2020-10-21T14:26:45.825Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=eWjA6r7RRvmNzJ7DF) I won't miss it. But then we should assemble a FAQ about possible channel related errors (see my comment above)","username":"klenik","ts":"2020-10-21T14:27:32.491Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=eWjA6r7RRvmNzJ7DF","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=eWjA6r7RRvmNzJ7DF","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Ok, so we can leave it out for now. How about determining whether a chaincode should be installed/instantiated. Do we want a section as per Nicks suggestion or a more minimal one as per my original suggestion ?","username":"davidkel","ts":"2020-10-21T14:31:04.222Z"}
{"msg":"When I was putting together the joi validation schema, it was cumbersome to code the OR/AND/XOR/IMPLIES relations among sibling attributes of channels and contracts. So I'd suggest some extra sections to make it clear which operation needs which attributes. Something like this:\n```\nchannels:\n  - channelName: mychannel\n    create:\n        prebuiltTransaction: 'some/binary.tx'\n        buildTransaction:\n            capabilities: []\n            consortium: 'SampleConsortium2'\n            msps: ['Org1MSP', 'Org2MSP']\n            version: 0\n    contracts:\n    - id: marbles\n      contractID: mymarbles\n      install:\n        version: v0\n        language: golang\n        path: marbles/go\n        metadataPath: src/marbles/go/metadata\n        installWithIdentity: admin@org1.exampl.com\n      instantiate:\n        initFunction: init\n        initArguments: []\n        instantiateWithIdentity: admin@org1.exampl.com\n```","username":"klenik","ts":"2020-10-21T14:34:24.598Z"}
{"msg":"Operations are easy to skip based on the absence of the related attributes (create, install, instantiate). Plus I always missed the flexibility to specify who should perform these tasks :) Not that useful for performance benchmarking, but useful for testing different management policies. But since we would like to remove such admin capabilities on the long run, I'm fine without the identity specs","username":"klenik","ts":"2020-10-21T14:36:54.342Z"}
{"msg":"(a join section could be added to the channel similarly, but I think there's a peer list for that already in the CCP)","username":"klenik","ts":"2020-10-21T14:38:44.694Z"}
{"msg":"(a join section could be added to the channel similarly, but I think there's a peer list for that already in the CCP, but we could provide a better schema :) )","username":"klenik","ts":"2020-10-21T14:38:44.694Z"}
{"msg":"Ok, so change `definition` --> `create`, put the channel creation stuff into it's own subsection and split contract deployment into 2 separate subsections.","username":"davidkel","ts":"2020-10-21T14:43:11.246Z"}
{"msg":"Fine with me (sorry won't include the instantiateWithIdentity though)","username":"davidkel","ts":"2020-10-21T14:43:36.291Z"}
{"msg":"Fine with me (sorry won't include the install/nstantiateWithIdentity though)","username":"davidkel","ts":"2020-10-21T14:43:36.291Z"}
{"msg":"I'm fine with this compromise :grin:","username":"klenik","ts":"2020-10-21T14:44:29.065Z"}
{"msg":"@klenik @nkl199 Thanks guys. will adjust it to the above format","username":"davidkel","ts":"2020-10-21T14:47:37.558Z"}
{"msg":"Conflicting task, so I have to skip the call","username":"klenik","ts":"2020-10-21T15:00:21.631Z"}
{"msg":"righto - we have conflicting meetings this side too, so I think the call will have to be cancelled for this week","username":"nkl199","ts":"2020-10-21T15:00:51.444Z"}
{"msg":"Just in time :joy:","username":"klenik","ts":"2020-10-21T15:01:09.126Z"}
{"msg":":sweat_smile:","username":"nkl199","ts":"2020-10-21T15:01:38.255Z"}
{"msg":"OK, so bearing in mind there has been a time-saving change in the UK, i'm blatantly going to be either an hour early, or an hour late to the call today :joy:","username":"nkl199","ts":"2020-10-28T14:27:16.944Z"}
{"msg":"Same here 😂 Based on my rigorous calculations, the call should start in 30 minutes, right? 😅","username":"klenik","ts":"2020-10-28T14:29:20.361Z"}
{"msg":"that was my thoughts too :shrug:","username":"nkl199","ts":"2020-10-28T14:29:34.441Z"}
{"msg":"let's go with it - way better than being in an hour and a half!","username":"nkl199","ts":"2020-10-28T14:29:51.834Z"}
{"msg":"Cool, so I won't be alone then 😂","username":"klenik","ts":"2020-10-28T14:30:14.515Z"}
{"msg":"(NodeJS v14 just went LTS)","username":"nkl199","ts":"2020-10-28T14:30:21.587Z"}
{"msg":"Some ideas for agenda items:\n1. Consequences for moving to NodeJS v12\n2. Using release branches starting from v0.5.0\n3. Improving naming conventions regarding module life-cycles (TX/resource monitors -> worker/manager monitors, etc)","username":"klenik","ts":"2020-10-28T14:42:34.734Z"}
{"msg":"Check out this tool: <https://www.timeanddate.com/worldclock/converter.html?iso=20201028T150000&p1=234&p2=240&p3=1229>","username":"rjones","ts":"2020-10-28T14:44:55.557Z"}
{"msg":"Hello! we're low on project news and updates for the dev/weekly newsletter going out tomorrow 10/30. If there's anything you'd like to suggest, please do so in the comments here: https://wiki.hyperledger.org/pages/viewpage.action?pageId=41584474","username":"jramps9","ts":"2020-10-29T13:53:14.410Z"}
{"msg":"@nkl199 This, with a \"Better late than never\" caption :joy: https://github.com/hyperledger/caliper/issues/1065","username":"klenik","ts":"2020-10-29T16:43:12.603Z"}
{"msg":"I've consolidated the logging-related issues for v0.4.2: https://github.com/hyperledger/caliper/milestone/6\nThe workflow will be: make logging module OO -> add capability of dropping logs -> scatter the code-base with debug logs :grin: \nWe can discuss these on the call, if there're any objections","username":"klenik","ts":"2020-11-04T14:24:16.901Z"}
{"msg":"Has joined the channel.","username":"JongWanSeo","ts":"2020-11-07T17:17:52.945Z","type":"uj"}
{"msg":"Hello Caliper contributors! Reminder to please join the DevRel Marketing Committee call at 9am PT on 11/11 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-11-11+Meeting+notes","username":"jramps9","ts":"2020-11-09T18:12:44.856Z"}
{"msg":"Has joined the channel.","username":"mxevgenis","ts":"2020-11-11T09:48:22.002Z","type":"uj"}
{"msg":"Hi everyone! I am Michael and i use caliper to measure the performance of my custom Ethereum-based blockchain network and the Smart Contract (SC) i have deployed. I have successfully run some tests where i execute each function of the SC i.e. firstFunction 50 times , secondFunction 50 and thirdFunction 50. Because of the nature of my SC , the result of each function are used as an input to the following function, therefore i would like to ask you if caliper can execute several functions of a SC  serially and print the result in terms of throughput and latency? Thank you in advance!","username":"mxevgenis","ts":"2020-11-11T09:48:22.355Z"}
{"msg":"hi, welcome to the channel :thumbup:  you're not the first person to mention this, so we may well have to consider it as an option. My current understanding is that you would like to essentially \"start the timer\", submit sequenced transactions with the result of one going into the next, and then \"stop the timer\" once the transaction sequence has completed?","username":"nkl199","ts":"2020-11-11T10:05:08.844Z"}
{"msg":"@mxevgenis Could you please provide a detailed example containing the following?\n1. The sequence of TXs you want to submit: whether you want to submit them in the same `submitTransaction` call, or same round.\n2. How do the TXs relate to each other: dependency among them, can they run in parallel, or they would conflict\n3. What would you like to see in the report in addition to the current TX-level stats? Stats for groups of TXs? \n\nWe can't really start designing the feature without these use case details. So please try to \"emulate/describe\" a Caliper run that would meet your criteria :)","username":"klenik","ts":"2020-11-11T10:31:36.124Z"}
{"msg":"This is the main concept. I would like to use values produced by the firstFunction (which is a transaction) as an input to the secondFunction(also a transaction) and check the results. I would like to test the network then by changing the number of this transaction sequence and check the results.","username":"mxevgenis","ts":"2020-11-11T12:03:03.482Z"}
{"msg":"@nkl199 @davidkel I have a conflicting call today, so can't attend the Caliper call","username":"klenik","ts":"2020-11-11T12:05:48.400Z"}
{"msg":"@klenik  When i start a round in caliper i want to call the first function of the SC. This function actually produces a number that is used in the second function of my SC. I would like to perform those two functions serially. Then i would like to increase the number of this transaction sequence and change the rate contoller's value.  The report of the caliper will contain information regarding the Avg Latency and Avg Throughput of the network. Is this something that is supported in the current Caliper version? Also from what i have seen Caliper produces results for Transactions made in the network. I have created a function that reads data from the blockchain without performing a transaction. Is there a way to measure the Reads per Second (RPS). Thank you in advance!","username":"mxevgenis","ts":"2020-11-12T14:22:43.992Z"}
{"msg":":alarm_clock:  Call cut short today, very little attendance, with not too much to talk about aside from the completion of the new fabric adaptor","username":"nkl199","ts":"2020-11-25T15:08:00.103Z"}
{"msg":"As discussed in the call, future calls will happen biweekly from now on.\nUpdated calendar: https://lists.hyperledger.org/calendar","username":"klenik","ts":"2020-12-02T15:31:33.123Z"}
{"msg":"Used for contributors of Hyperledger Caliper to discuss implementation details. [Biweekly Zoom calls.](https://zoom.us/my/hyperledger.community?pwd=STZQd0xMZU9xRVVOVnpQM3JNQ2dqZz09)","username":"klenik","ts":"2020-12-02T15:32:06.297Z","type":"room_changed_topic"}
{"msg":"Used for contributors of Hyperledger Caliper to discuss implementation details. [Biweekly Zoom calls.](https://zoom.us/my/hyperledger.community?pwd=STZQd0xMZU9xRVVOVnpQM3JNQ2dqZz09)","username":"klenik","ts":"2020-12-02T15:32:06.304Z","type":"room_changed_description"}
{"msg":":thumbup:  just to clarify, that is once every two weeks","username":"nkl199","ts":"2020-12-02T15:32:41.945Z"}
{"msg":":thumbup:  just to clarify, that is once every two weeks and not twice a week","username":"nkl199","ts":"2020-12-02T15:32:41.945Z"}
{"msg":"Exactly, and the next call will happen on 16th of December, 15:00 PM UTC0 :)","username":"klenik","ts":"2020-12-02T15:35:24.283Z"}
{"msg":"Exactly, and the next call will happen on 16th of December, 3:00 PM UTC0 :)","username":"klenik","ts":"2020-12-02T15:35:24.283Z"}
{"msg":"@rjones, will the wiki calendar (https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings) sync automatically? It embeds a google calendar, I don't know how that relates to the canonical lists.hyperledger.org calendar :man_shrugging_light_skin_tone:","username":"klenik","ts":"2020-12-02T15:40:03.942Z"}
{"msg":"@klenik it is a long story of pain","username":"rjones","ts":"2020-12-02T20:29:46.075Z"}
{"msg":"@klenik please use `https://lists.hyperledger.org/ics/1902217/3131022486068381536/feed.ics` as your calendar feed","username":"rjones","ts":"2020-12-02T20:33:47.963Z"}
{"msg":"if you add that URL to google, it will break.","username":"rjones","ts":"2020-12-02T20:34:01.410Z"}
{"msg":"@klenik I've edited the event that was causing syncing to break, so let's see how long it takes to fix it","username":"rjones","ts":"2020-12-02T20:39:08.533Z"}
{"msg":"The next week call disappeared from the wiki calendar, so I'd say your magic worked, thx :)","username":"klenik","ts":"2020-12-03T09:59:31.928Z"}
{"msg":"Hello Caliper contributors! Reminder to please join the DevRel Marketing Committee call at 9am PT on 12/9 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-12-09+Meeting+notes","username":"jramps9","ts":"2020-12-07T18:00:11.497Z"}
{"msg":"@nkl199 @klenik who publishes to DockerHub? I need to get the user count down, do you both need accounts?","username":"rjones","ts":"2020-12-16T17:26:08.786Z"}
{"msg":"Publishing to dockerhub and npm is done through my accounts/tokens ","username":"klenik","ts":"2020-12-16T17:30:37.933Z"}
{"msg":"OK. We'll need to get those converted to one of our bots, but that's for a later day.","username":"rjones","ts":"2020-12-16T17:31:47.382Z"}
{"msg":"Cool, great idea :thumbsup: ","username":"klenik","ts":"2020-12-16T17:32:47.718Z"}
{"msg":"(can confirm removal from the dockerhub account ... sniff sniff :joy:  )","username":"nkl199","ts":"2020-12-17T08:16:55.751Z"}
{"msg":"@rjones - the move to Azure pipelines is underway, though I do not have sufficient access to the caliper repo to link up to Azure builds ... are you able to complete this aspect?","username":"nkl199","ts":"2020-12-23T15:55:41.660Z"}
{"msg":"@nkl199 what is your azure account ID?","username":"rjones","ts":"2020-12-23T18:30:26.077Z"}
{"msg":"same ID as rocket chat -  nkl199","username":"nkl199","ts":"2020-12-23T19:28:58.345Z"}
{"msg":"Hello Caliper contributors! Reminder to please join the DevRel Marketing Committee call at 9am PT on 1/13 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2021-01-13+Meeting+notes","username":"jramps9","ts":"2021-01-11T15:27:55.084Z"}
{"msg":"Has joined the channel.","username":"prakharsr","ts":"2021-01-15T13:35:07.424Z","type":"uj"}
{"msg":"ny suggested content for the call tomorrow?","username":"nkl199","ts":"2021-01-26T11:12:59.577Z"}
{"msg":"any suggested content for the call tomorrow?","username":"nkl199","ts":"2021-01-26T11:12:59.577Z"}
{"msg":"any suggested content for the call tomorrow?\n- https://github.com/github/renaming","username":"nkl199","ts":"2021-01-26T11:12:59.577Z"}
{"msg":"@nkl199 both caliper projects are using `master`: `caliper` and `caliper-benchmarks`","username":"rjones","ts":"2021-01-26T16:06:00.353Z"}
{"msg":"they certainly do, main decision now is to pick `sith` or `jedi` as the replacement name :joy:","username":"nkl199","ts":"2021-01-27T11:01:14.827Z"}
{"msg":"master -> sith \ngh-pages -> jedi\n:thinking_face:","username":"klenik","ts":"2021-01-27T12:24:31.275Z"}
{"msg":"@rjones - have I heard correctly that a move from Azure Pipelines to github actions is being encouraged?","username":"nkl199","ts":"2021-01-29T15:36:05.026Z"}
{"msg":"no?","username":"rjones","ts":"2021-01-29T15:37:02.973Z"}
{"msg":"I would prefer you are in AZP","username":"rjones","ts":"2021-01-29T15:37:17.457Z"}
{"msg":"thanks :+1:","username":"nkl199","ts":"2021-01-29T15:39:38.878Z"}
{"msg":"where did you hear the opposite?","username":"rjones","ts":"2021-01-29T15:40:47.560Z"}
{"msg":"The advantage of AZP is higher performance and longer artifact retention.","username":"rjones","ts":"2021-01-29T15:41:19.735Z"}
{"msg":"On a call - rumours of azure pipelines being deprecated","username":"nkl199","ts":"2021-01-29T15:41:28.236Z"}
{"msg":"yes - have been enjoying the AZP","username":"nkl199","ts":"2021-01-29T15:41:36.957Z"}
{"msg":"The advantage of GHA is tighter coupling to GitHub.","username":"rjones","ts":"2021-01-29T15:41:37.839Z"}
{"msg":"Hello Caliper contributors! Reminder to please join the DevRel Marketing Committee call at 9am PT on 2/10 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2021-02-10+Meeting+notes","username":"jramps9","ts":"2021-02-08T15:15:40.849Z"}
{"msg":"any content for today?","username":"nkl199","ts":"2021-02-10T13:43:47.716Z"}
{"msg":"Dunno. Have you looked at insights?","username":"rjones","ts":"2021-02-10T14:23:17.806Z"}
{"msg":"@nkl199 I can drop in and do a short demo, but if it would be the only item, we can wait :)","username":"rjones","ts":"2021-02-10T14:23:44.160Z"}
{"msg":"Nothing for me, crazy busy nowadays :/","username":"klenik","ts":"2021-02-10T14:24:34.531Z"}
{"msg":"Nothing from me, crazy busy nowadays :/","username":"klenik","ts":"2021-02-10T14:24:34.531Z"}
{"msg":"Nothing from me","username":"davidkel","ts":"2021-02-10T14:45:46.736Z"}
{"msg":"Has joined the channel.","username":"Helen_Garneau","ts":"2021-02-12T13:57:11.219Z","type":"uj"}
{"msg":"Today I noticed in my local Caliper test that the MQTT messenger initialization hangs indefinitely. And now I also see this in the Azure build log:\nhttps://dev.azure.com/Hyperledger/Caliper/_build/results?buildId=30836&view=logs&j=bed1cfea-7bfd-5b32-a5f9-358166d415d0&t=f5c8edc3-bb24-5330-0757-a49ae09da093&l=678","username":"klenik","ts":"2021-02-25T16:31:47.565Z"}
{"msg":"@nkl199 Do you have the same issue? Could it be related to mosquitto? I noticed some \"Address not available\" error locally in the container, but then it logged that the server started :thinking:","username":"klenik","ts":"2021-02-25T16:33:33.421Z"}
{"msg":"@klenik mosquitto released v2 recently and that has almost certainly broken caliper. Fix would be to force the use of mosquitto 1.6 for now.","username":"davidkel","ts":"2021-02-25T20:24:18.811Z"}
{"msg":"Yeah, now it requires explicit connection configuration\nhttps://mosquitto.org/blog/2020/12/version-2-0-0-released/","username":"klenik","ts":"2021-02-26T07:53:38.908Z"}
{"msg":"https://mosquitto.org/documentation/migrating-to-2-0/","username":"klenik","ts":"2021-02-26T07:55:53.899Z"}
{"msg":"Raised a PR with the necessary mosq. configs: https://github.com/hyperledger/caliper/pull/1128","username":"klenik","ts":"2021-02-26T08:42:14.796Z"}
{"msg":"Sad news about AZP: https://github.com/hyperledger/fabric/discussions/2456","username":"rjones","ts":"2021-03-03T18:45:27.414Z"}
{"msg":"FYI: I proposed a Caliper-related HL mentorship project, which targets the streamlining of workload modules. Hopefully it'll also make it easy to migrate workload modules between Caliper versions next time :sweat_smile: \nhttps://wiki.hyperledger.org/display/INTERN/Declarative+workload+behavior+definition+for+Hyperledger+Caliper","username":"klenik","ts":"2021-03-10T12:12:12.572Z"}
{"msg":"Hello Caliper contributors: Reminder to please join the DevRel Marketing Committee call at 9am PT today. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/x/Nqx6Ag","username":"Helen_Garneau","ts":"2021-03-10T12:59:36.934Z"}
{"msg":"(Please note new zoom info!)","username":"Helen_Garneau","ts":"2021-03-10T14:44:47.708Z"}
{"msg":"@roxhens maybe ask here?","username":"rjones","ts":"2021-04-01T22:26:00.468Z"}
{"msg":"Has joined the channel.","username":"roxhens","ts":"2021-04-01T22:26:00.580Z","type":"uj"}
{"msg":"Is there a tutorial how to benchmark Fabric 2.3.0 with Hyperledger Caliper? I have been searching for 2 weeks and found nothing.\nI found a tutorial on Caliper website for version 2.2, but when I try withe version 2.3 it does not work and gives me the following error:\n`error [caliper] [connectors/v2/FabricGateway] Failed to perform submit transaction [CreateAsset] using arguments [0_1,blue,20,penguin,500], with error: Error: No valid responses from any peers. Errors:\npeer=undefined, status=grpc, message=Peer endorsements do not match`","username":"roxhens","ts":"2021-04-02T08:18:19.088Z"}
{"msg":"@all Is there a tutorial how to benchmark Fabric 2.3.0 with Hyperledger Caliper? I have been searching for 2 weeks and found nothing.\nI found a tutorial on Caliper website for version 2.2, but when I try withe version 2.3 it does not work and gives me the following error:\n`error [caliper] [connectors/v2/FabricGateway] Failed to perform submit transaction [CreateAsset] using arguments [0_1,blue,20,penguin,500], with error: Error: No valid responses from any peers. Errors:\npeer=undefined, status=grpc, message=Peer endorsements do not match`","username":"roxhens","ts":"2021-04-02T08:18:19.088Z"}
{"msg":"the v2 gateway should be 100% compatible with fabric 2.3.0 - no breaking changes went into either fabric or the SDK used to connect (we simply consume the Fabric SDk and use it via the gateway method) Was the above from following the tutorial, or a seperately configured fabric network? Have you looked into the peer/chaincode logs to see if there is anything evident there?","username":"nkl199","ts":"2021-04-02T18:22:52.255Z"}
{"msg":"Hello, \nthank you very much for your reply.\nAfter looking into it, I think the problem might be that when I bind it using: \nnpx caliper bind --caliper-bind-sut fabric:2.3, it says it is not possible","username":"roxhens","ts":"2021-04-02T18:25:50.885Z"}
{"msg":"Then with npx caliper bind --caliper-bind-sut fabric:2.2 it also gets the v2.2.3 of fabric-ca-client from npm library, but version 2.3 of fabric I have uses the fabric-ca-client v1.4.9","username":"roxhens","ts":"2021-04-02T18:27:03.857Z"}
{"msg":"Then if I just edit the package.json of caliper-workspace, then it says it does not work because I have to use the caliper bind first and when I use that, it overrides the fabric-ca-client back to v2.2.3","username":"roxhens","ts":"2021-04-02T18:28:27.237Z"}
{"msg":"....\nThis is a separately edited fabric version. So I took fabric v2.3.0 and made some changes and then built the respective binaries and docker images and replaced them in the fabric-samples","username":"roxhens","ts":"2021-04-02T18:30:08.438Z"}
{"msg":"Has joined the channel.","username":"bistaastha","ts":"2021-04-06T05:40:27.665Z","type":"uj"}
{"msg":"there is no 2.3 sdk to bind to, you can however use an override file to specify the exact versions of all sdks to bind to if you so desire - using a caliper-bind-file https://hyperledger.github.io/caliper/v0.4.2/installing-caliper/#the-bind-command","username":"nkl199","ts":"2021-04-06T15:57:35.052Z"}
{"msg":"Hello! I am Aastha Bist. I intend to apply for this programme and I'm currently going over the Caliper architecture doc and learning how things work :)\n\nAre there any sections of the code/documentation that are more relevant to the project idea?","username":"bistaastha","ts":"2021-04-28T19:36:53.545Z"}
{"msg":"Hi, I would certainly recommend all sections relating to applying workloads to the SUT. So this would (i believe) mean looking at the rate controllers and yaml specification of benchmarks ... especially how the caliper core procesess the yaml files to orchestrate a test run","username":"nkl199","ts":"2021-04-29T16:45:24.511Z"}
{"msg":"Hi! I put together a very barebones doc for personal reference here: https://docs.google.com/document/d/1CCDWlNhGrL7kS1065LCKDhZGB-zciVnMkBgGl98kYr8/edit#","username":"bistaastha","ts":"2021-05-05T17:21:13.682Z"}
{"msg":"Hi! I put together a very barebones doc for personal reference here: https://docs.google.com/document/d/1CCDWlNhGrL7kS1065LCKDhZGB-zciVnMkBgGl98kYr8/edit#\n\nCan you please let me know if my perspective aligns with what is the original goal for the project idea to achieve?\n\nI am also referencing the sample at: https://github.com/hyperledger/caliper-benchmarks/tree/master/benchmarks/samples/fabric/fabcar\nto see how the docs compare to actual implementation. I have been unable to set up the test network with fabric because of some system level constraints that I will be working on resolving this weekend, so I am going by references at this point to understand everything.\n\nPlease let me know your thoughts. Thanks a lot :)","username":"bistaastha","ts":"2021-05-05T17:21:13.682Z"}
{"msg":"Hi! I put together a very barebones doc for personal reference here: https://docs.google.com/document/d/1CCDWlNhGrL7kS1065LCKDhZGB-zciVnMkBgGl98kYr8/edit#\n\nCan you please let me know if my perspective aligns with what is the original goal for the project idea to achieve?\n\nI am also referencing the sample at: https://github.com/hyperledger/caliper-benchmarks/tree/master/benchmarks/samples/fabric/fabcar.\nPlease let me know your thoughts. Thanks a lot :)","username":"bistaastha","ts":"2021-05-05T17:21:13.682Z"}
{"msg":"Hi! I put together a very bare-bones doc for personal reference here: https://docs.google.com/document/d/1CCDWlNhGrL7kS1065LCKDhZGB-zciVnMkBgGl98kYr8/edit#\n\nCan you please let me know if my perspective aligns with what is the original goal for the project idea to achieve?\n\nEDIT: Just added the initial points for possible approaches to handle workload module generation. Hopefully they are not too off the mark and would be useful for any kind of future work on the idea :)","username":"bistaastha","ts":"2021-05-05T17:21:13.682Z"}
{"msg":"Also, I don't think I completely understand what \"workload module migration\" means at this point, so the project objectives in the doc are only half accurate from my own perspective.","username":"bistaastha","ts":"2021-05-05T17:29:23.227Z"}
{"msg":"Also, I don't think I completely understand what \"workload module migration\" means at this point, so the project objectives in my doc are only half accurate from my own perspective at this point in time.","username":"bistaastha","ts":"2021-05-05T17:29:23.227Z"}
{"msg":"I have been unable to set up the test network with fabric because of some system-level constraints that I will be working on resolving this weekend, so I am going by references at this point to understand everything.\n\nAlso, I don't think I completely understand what \"workload module migration\" means at this point, so the project objectives in my doc are only half accurate from my own perspective at this point in time.","username":"bistaastha","ts":"2021-05-05T17:29:23.227Z"}
{"msg":"~I have been unable to set up the test network with fabric because of some system-level constraints that I will be working on resolving this weekend, so I am going by references at this point to understand everything.\n\nAlso, I don't think I completely understand what \"workload module migration\" means at this point, so the project objectives in my doc are only half accurate from my own perspective at this point in time.~\n\nBoth of the issues in this message are resolved now.","username":"bistaastha","ts":"2021-05-05T17:29:23.227Z"}
{"msg":"~I have been unable to set up the test network with fabric because of some system-level constraints that I will be working on resolving this weekend, so I am going by references at this point to understand everything.\n\nAlso, I don't think I completely understand what \"workload module migration\" means at this point, so the project objectives in my doc are only half accurate from my own perspective at this point in time.\n~\nBoth of the issues in this message are resolved now.","username":"bistaastha","ts":"2021-05-05T17:29:23.227Z"}
{"msg":"~\nI have been unable to set up the test network with fabric because of some system-level constraints that I will be working on resolving this weekend, so I am going by references at this point to understand everything.\n\nAlso, I don't think I completely understand what \"workload module migration\" means at this point, so the project objectives in my doc are only half accurate from my own perspective at this point in time.\n~\nBoth of the issues in this message are resolved now.","username":"bistaastha","ts":"2021-05-05T17:29:23.227Z"}
{"msg":"I have been unable to set up the test network with fabric because of some system-level constraints that I will be working on resolving this weekend, so I am going by references at this point to understand everything.\n\nAlso, I don't think I completely understand what \"workload module migration\" means at this point, so the project objectives in my doc are only half accurate from my own perspective at this point in time.\n\nEDIT: Both of the issues in this message are resolved now.","username":"bistaastha","ts":"2021-05-05T17:29:23.227Z"}
{"msg":"Hey everyone, it's been a while! @bistaastha has been working on the Caliper mentorship project for some weeks now. The project is about defining workload modules (benchmarks) in a declarative way (as YAML configuration), and provide a built-in workload module to automatically generate corresponding transactions. Two weeks from tomorrow, on the next-next Caliper call, we'd like to present an initial YAML example for describing operations and their parameters. I really hope we can get some valuable feedback from you experienced Caliper users :) @nkl199 @davidkel","username":"klenik","ts":"2021-07-13T15:20:32.833Z"}
{"msg":"Spread the word, if you know someone who would be interested in YAML-based workload defs instead of code/script-based workloads","username":"klenik","ts":"2021-07-13T15:21:26.799Z"}
{"msg":"Has joined the channel.","username":"mianhammad","ts":"2021-09-13T07:02:16.806Z","type":"uj"}
{"msg":"Hi Everyone!\nHow can I setup hyperledger caliper for ethereum? Can anyone guide me?","username":"mianhammad","ts":"2021-09-13T07:02:29.093Z"}
{"msg":"Hi @klenik I've been thinking about how the new fabric 2.4 gateway peer connector can be used in caliper and I think from an external point of view the way it could be done is\n1. the new connector is selected when you bind to fabric:2.4 - if you want to benchmark using the legacy sdks you would bind to 2.2 or 1.4.\n2. It will only use the new network config format, the old config format cannot be used\n3. To determine the peers that will be used for gateway connections \n   a) a connection profile can still be used, but the discover option will have no meaning here\n   b) The peer information can be embedded into the network configuration file under the organisation tree, the format will be\n\n```\npeers:\n-   endpoint: localhost:port\n    tlsCACerts:\n      pem: |\n          pem-data\n      path: ....\n    grpcOptions:\n      ssl-target-name-override: peer0.org.example.com\n      hostnameOverride: peer0.org.example.com\n```\n\nNote that you can define more than 1 peer, doing so will allow you to create a round robin load balance against the listed peers for requests (A future enhancement, may not get into the first release)\nAlso this format could be used for the legacy connectors as a list of peers to discover from making the connection profile redundant (A future enhancement)\n\nWould appreciate your thoughts on this","username":"davidkel","ts":"2022-01-19T11:00:44.650Z"}
{"msg":"Hi @klenik I've been thinking about how the new fabric 2.4 gateway peer connector can be used in caliper and I think from an external point of view the way it could be done is\n1. the new connector is selected when you bind to fabric:2.4 - if you want to benchmark using the legacy sdks you would bind to 2.2 or 1.4.\n2. It will only use the new network config format, the old config format cannot be used\n3. To determine the peers that will be used for gateway connections \n   a) a connection profile can still be used, but the discover option will have no meaning here\n   b) The peer information can be embedded into the network configuration file under the organisation tree, the format will be\n\n```\npeers:\n-   endpoint: host:port\n    tlsCACerts:\n      pem: |\n          pem-data\n      path: ....\n    grpcOptions:\n      ssl-target-name-override: peer0.org.example.com\n      hostnameOverride: peer0.org.example.com\n```\n\nNote that you can define more than 1 peer, doing so will allow you to create a round robin load balance against the listed peers for requests (A future enhancement, may not get into the first release)\nAlso this format could be used for the legacy connectors as a list of peers to discover from making the connection profile redundant (A future enhancement)\n\nWould appreciate your thoughts on this","username":"davidkel","ts":"2022-01-19T11:00:44.650Z"}
{"msg":"Hi @davidkel, I completely agree with points 1-2. \n\nAs for 3, introducing a third network config format might be confusing for the users, even if they just coexist temporarily. Plus the current (new) network config format has an extensive test coverage and maintainable OOP design (thanks to you :tada:) as I recall. \n\nSo I'm wondering about the following things:\n1. Does the current format have some limitations regarding the new SDK (beside logging a warning if the discover options is set to any value)? \n2. Also, I get the feeling that the focus of the new connector will be \"just\" managing identity/signer and peer connection mappings.  As I see from the sample codes, creating the gateway itself is a sync call, so I assume it's cheap. The connection, identity and signer object creation looks heavier, but it is done only once per peers and identities, independently. Does that mean that we can create a full (Identity X Peer) mapping with gateways (since we don't know what combinations the workloads require)? Or what is the envisioned usage pattern of the SDK?\n\n3. Providing information to the SDK from the network configuration is one thing, we should also expose the functionalities to the users in a friendly manner. Like how we can specify smartContractIDs right now instead of always specifying the channel-chaincode combination, which is Fabric-specific. Same with exposing identities and target nodes (which would require a `name` attribute in your example config). Writing cross-platform workloads is hard (if not impossible at the current scene of DLTs), but I think we should strive towards transparent(ish) and flexible workloads as much as possible.\n\n4. When you say \"making the connection profile redundant\", do you mean that the network configuration file won't reference a connection profile, since the SDK also dropped this part? So basically we'll have our own Fabric \"connection profile\", which is the network configuration file itself.\n\nSo these are my hasty thoughts :sweat_smile: In conclusion, I'd try to avoid introducing too much change into the network configuration schema, unless it's for overcoming a limitation. Once we see the requirements of the different SDK versions (and drop the SUT init support), we can come up with a single clean schema for all versions (hopefully).\n\nAny thoughts on my thoughts? :)","username":"klenik","ts":"2022-01-19T12:10:27.686Z"}
{"msg":"ahh, sorry I think I confused you when I said new config format. As we have 2 config formats in caliper, I referred to the legacy one as the old one and the latest one as the new one. My plan would be to extend the format that is current documented one with this new entry under organisations eg\n```\nname: Calier test\nversion: \"2.0.0\"\n\ncaliper:\n  blockchain: fabric\n\nchannels:\n  - channelName: mychannel\n    contracts:\n    - id: basic\n\norganizations:\n  - mspid: Org1MSP\n    identities:\n      certificates:\n      - name: 'User1'\n        clientPrivateKey:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/priv_sk'\n        clientSignedCert:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem'\n    peers:\n      -   endpoint: host:port\n        tlsCACerts:\n          pem: |\n            pem-data\n          path: ....\n        grpcOptions:\n          ssl-target-name-override: peer0.org.example.com\n          hostnameOverride: peer0.org.example.com\n```","username":"davidkel","ts":"2022-01-19T12:15:27.668Z"}
{"msg":"In the above we drop the connection profile reference and declare the peer directly. I would still like to support connection profiles because that is what test-network still generates and it's convenient","username":"davidkel","ts":"2022-01-19T12:17:57.530Z"}
{"msg":"In the above we drop the connection profile reference and declare the peer directly. I would still like to support connection profiles because that is what test-network still generates and it's convenient, so if you don't want to copy stuff into the network config and you have a connection profile then that connection profile can still be used with the new connector","username":"davidkel","ts":"2022-01-19T12:17:57.530Z"}
{"msg":"2. is a good point. The prototype kept the pattern currently used by current sdks to ensure everything was prepared upfront in the same way. As the pattern of the gateway is still generally the same I think this still applies but will take a look\n3. I would love to remove the channels section and actually discover it, but that there is no api from the fabric team to actually do that and it definitely won't be in the new node connector. We could write one ourselves though to do this","username":"davidkel","ts":"2022-01-19T12:25:12.999Z"}
{"msg":"2. is a good point. The prototype kept the pattern currently used by current sdks to ensure everything was prepared upfront in the same way. As the pattern of the gateway is still generally the same I think this still applies but will take a look\n3. I would love to remove the channels section and actually discover it, but that there is no api from the fabric node-sdkto actually do that and it definitely won't be in the new node connector. We could write one ourselves though to do this","username":"davidkel","ts":"2022-01-19T12:25:12.999Z"}
{"msg":"2. is a good point. The prototype kept the pattern currently used by current sdks to ensure everything was prepared upfront in the same way. As the pattern of the gateway is still generally the same I think this still applies but will take a look\n3. I would love to remove the channels section and actually discover it, but that there is no api from the fabric node-sdk to actually do that and it definitely won't be in the new thin sdks. We could write one ourselves though to do this","username":"davidkel","ts":"2022-01-19T12:25:12.999Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=Pav5dXRMqcS4M9g5D) The \"copy stuff\" part sounds like a good feature candidate for the generator :) give it some paths (connection profiles, crypto-config dir, wallet dir, docker-compose yaml, etc), and it outputs a network config file","username":"klenik","ts":"2022-01-19T13:13:24.026Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=Pav5dXRMqcS4M9g5D","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=Pav5dXRMqcS4M9g5D","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I think we may see connection profiles being phased out completely, the intention of them was right, but the implementation even across versions of the node-sdk made them into a mess","username":"davidkel","ts":"2022-01-19T13:15:49.913Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=gtMdbcZi8fGFaYvaz) For 3: well, we could just say, that the user specifies the channel-chaincode pair for TXs, and we let the SDK/peer detect errors (peer not in channel, chaincode not in channel, etc). These are errors that needs to be fixed once, not like unexpected errors during the TX life-cycle that need to be handled gracefully","username":"klenik","ts":"2022-01-19T13:15:55.430Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=gtMdbcZi8fGFaYvaz","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=gtMdbcZi8fGFaYvaz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"if we want to have contract instances created up front we have to know the channel and chaincode otherwise we would need to build the network and contract instance during the first workload call and I don't know how expensive those calls are at the moment I would have to look at the thin client implementation","username":"davidkel","ts":"2022-01-19T13:18:38.855Z"}
{"msg":"I assumed that they're just decorators to add the chaincode and channel name to the proposal, in which case lazy creation wouldn't be costly. At least I hope that's the case :)","username":"klenik","ts":"2022-01-19T13:20:55.776Z"}
{"msg":"I've had a quick look and those calls don't look expensive, so we could drop the channel/contractid from the network config in the new connector","username":"davidkel","ts":"2022-01-19T13:24:44.993Z"}
{"msg":"That's good news. And if we pass wrong parameters, then it'll be caught only on the peer side?","username":"klenik","ts":"2022-01-19T13:30:22.025Z"}
{"msg":"I'd have to try it to see what sort of potentially horrible error message you might get. It would also mean that workloads would now have to declare the channel as well though as at the moment it works it out from the contractid declaration in the network config","username":"davidkel","ts":"2022-01-19T13:32:12.617Z"}
{"msg":"Yeah, but maybe it's not the worst idea to push the channel/chaincode data to the workload, it should be a workload parameter anyway. The same workload can target any network (given by the network config), it just needs some additional metadata (like channel and cc name). So I'm fine with this trade-off. Plus this way we could clean up the benchmark repo a bit, no more excessive network-cc paired configs.","username":"klenik","ts":"2022-01-19T14:17:10.837Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/caliper-contributors?msg=dq4DykeFXaZuQp6aB) Now that you mention error messages. We really need to make it clearer where error messages originated from. Even by tagging them as [Caliper/Connector Error] or [Fabric SDK Error] or something like that. This way we can delegate error-related questions easier to the proper channels.","username":"klenik","ts":"2022-01-19T14:22:49.760Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/caliper-contributors?msg=dq4DykeFXaZuQp6aB","url":"https://chat.hyperledger.org/channel/caliper-contributors?msg=dq4DykeFXaZuQp6aB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"That sounds like a good idea to determine where error messages come from","username":"davidkel","ts":"2022-01-19T14:23:58.511Z"}
{"msg":"We can push the channel to the workload, do we want to do that for all the fabric connectors or just the new peer gateway connector ?","username":"davidkel","ts":"2022-01-19T14:25:05.454Z"}
{"msg":"We can push the channel to the workload, do we want to do that for all the fabric connectors or just the new peer gateway connector ? Happy to do it for all the connectors and simplify them","username":"davidkel","ts":"2022-01-19T14:25:05.454Z"}
{"msg":"We can push the channel to the workload, do we want to do that for all the fabric connectors or just the new peer gateway connector ? Not sure about the current connectors as these are expensive operations in the legacy sdks","username":"davidkel","ts":"2022-01-19T14:25:05.454Z"}
{"msg":"ie in the legacy connectors there would be a delay in the initial workload to create the network and contract objects","username":"davidkel","ts":"2022-01-19T14:31:30.646Z"}
{"msg":"I think we can leave the current connectors as is, until we fully understand the impact of this change. Can we query channel and chaincode information with the previous v2 SDK? I know the v1 SDKs allow it, but not sure what kind of functionalities were removed from the v2 SDK","username":"klenik","ts":"2022-01-19T14:33:22.307Z"}
{"msg":"v2 sdk doesn't have explicit apis but it should be possible to make discovery apis that are available and there would be similar in V1 to determine what's available. Discovery would be the way to do it","username":"davidkel","ts":"2022-01-19T14:43:52.265Z"}
{"msg":"v2 sdk doesn't have explicit apis but it should be possible to make discovery apis that are available in the fabric-common module and there would be similar in V1 to determine what's available. Discovery would be the way to do it","username":"davidkel","ts":"2022-01-19T14:43:52.265Z"}
{"msg":"Ah yeah, I forgot about discovery :sweat_smile: Then I think it's possible to gather the available channels/chaincodes (based on some seed peers) and construct the gateways for them in the init phase, right?","username":"klenik","ts":"2022-01-19T14:45:40.392Z"}
{"msg":"Yes I think so, it was on my list of things I wanted to do for the connectors in the future.","username":"davidkel","ts":"2022-01-19T14:49:38.021Z"}
{"msg":"The only downside I can see if that it will discover everything even if you aren't interested in it (eg old channels, old chaincodes, ones not under test etc)","username":"davidkel","ts":"2022-01-19T14:50:30.886Z"}
{"msg":"The only downside I can see is that it will discover everything even if you aren't interested in it (eg old channels, old chaincodes, ones not under test etc)","username":"davidkel","ts":"2022-01-19T14:50:30.886Z"}
{"msg":"Well, that's true. But ideally performance testing is done on a clean SUT in development time. So those extra unused connections shouldn't be an issue, even if there are channel/chaincode remnants from previous tests. We can aim for the chaos engineering-style testing of running networks later :D","username":"klenik","ts":"2022-01-19T14:53:56.969Z"}
{"msg":"Excellent, so we will move the channel definition to the workload for the new peer gateway connector and as a later piece of work remove it from the v1 and v2 connectors using discovery","username":"davidkel","ts":"2022-01-19T14:55:59.843Z"}
{"msg":"Sounds like a plan :thumbsup:","username":"klenik","ts":"2022-01-19T14:56:26.835Z"}
{"msg":"So the network config for the new connector would now be\n```\nname: Calier test\nversion: \"2.0.0\"\n\ncaliper:\n  blockchain: fabric\n\norganizations:\n  - mspid: Org1MSP\n    identities:\n      certificates:\n      - name: 'User1'\n        clientPrivateKey:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/priv_sk'\n        clientSignedCert:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem'\n    peers:\n      -   endpoint: host:port\n        tlsCACerts:\n          pem: |\n            pem-data\n          path: ....\n        grpcOptions:\n          ssl-target-name-override: peer0.org.example.com\n          hostnameOverride: peer0.org.example.com\n```\nor instead of peers you can still use a connection profile\n```\n      path: './Org2ConnectionProfile.json'\n      discover: true\n```","username":"davidkel","ts":"2022-01-19T15:00:17.162Z"}
{"msg":"So the network config for the new connector would now be\n```\nname: Calier test\nversion: \"2.0.0\"\n\ncaliper:\n  blockchain: fabric\n\norganizations:\n  - mspid: Org1MSP\n    identities:\n      certificates:\n      - name: 'User1'\n        clientPrivateKey:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/priv_sk'\n        clientSignedCert:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem'\n    peers:\n      -   endpoint: host:port\n        tlsCACerts:\n          pem: |\n            pem-data\n          path: ....\n        grpcOptions:\n          ssl-target-name-override: peer0.org.example.com\n          hostnameOverride: peer0.org.example.com\n```\nor instead of peers you can still use a connection profile\n```\n    connectionprofile:\n      path: './Org2ConnectionProfile.json'\n      discover: true\n```","username":"davidkel","ts":"2022-01-19T15:00:17.162Z"}
{"msg":"So the network config for the new connector would now be\n```\nname: Calier test\nversion: \"2.0.0\"\n\ncaliper:\n  blockchain: fabric\n\norganizations:\n  - mspid: Org1MSP\n    identities:\n      certificates:\n      - name: 'User1'\n        clientPrivateKey:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/priv_sk'\n        clientSignedCert:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem'\n    peers:\n      -   endpoint: host:port\n        tlsCACerts:\n          pem: |\n            pem-data\n          path: ....\n        grpcOptions:\n          ssl-target-name-override: peer0.org.example.com\n          hostnameOverride: peer0.org.example.com\n```\nor instead of peers you can still use a connection profile\n```\n    connectionprofile:\n      path: './Org2ConnectionProfile.json'\n\n```","username":"davidkel","ts":"2022-01-19T15:00:17.162Z"}
{"msg":"So the network config for the new connector would now be\n```\nname: Calier test\nversion: \"2.0.0\"\n\ncaliper:\n  blockchain: fabric\n\norganizations:\n  - mspid: Org1MSP\n    identities:\n      certificates:\n      - name: 'User1'\n        clientPrivateKey:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/priv_sk'\n        clientSignedCert:\n          path: '../fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem'\n    peers:\n      -   endpoint: host:port\n        tlsCACerts:\n          pem: |\n            pem-data\n          path: ....\n        grpcOptions:\n          ssl-target-name-override: peer0.org.example.com\n          hostnameOverride: peer0.org.example.com\n```\nor instead of peers you can still use a connection profile\n```\n    connectionprofile:\n      path: './Org2ConnectionProfile.json'\n```","username":"davidkel","ts":"2022-01-19T15:00:17.162Z"}
{"msg":"1) Is it (or will it be) possible to target a specific peer from the workload module? If yes, how?\n2) I thought you said that `discover` is meaningless (or nonexistent) in this version. Did I misunderstood something?","username":"klenik","ts":"2022-01-19T15:06:06.965Z"}
{"msg":"1) For the new connector do you think there would be a benefit to target a specific peer if more than one was listed ? \n2) yep you are right, discover would be meaningless :-) I will update the example","username":"davidkel","ts":"2022-01-19T15:09:05.793Z"}
{"msg":"1) For the new connector do you think there would be a benefit to target a specific peer if more than one was listed ? \n2) yep you are right, discover would be meaningless :-) I will update the example, cut and paste a bit too quick","username":"davidkel","ts":"2022-01-19T15:09:05.793Z"}
{"msg":"1) Hmm, probably not, since the gateway peer will manage the actual life-cycle, right?","username":"klenik","ts":"2022-01-19T15:14:15.309Z"}
{"msg":"Including the automatic load balancing, etc","username":"klenik","ts":"2022-01-19T15:14:27.047Z"}
{"msg":"It manages getting the right number of endorsements and should balance that across peers (as I raised the issue that during development it didn't do that :-) )","username":"davidkel","ts":"2022-01-19T15:15:40.020Z"}
{"msg":"Has joined the channel.","username":"vlaca","ts":"2022-01-19T16:57:04.643Z","type":"uj"}
{"msg":"@davidkel I've submitted the quarterly project report (with some delay :sweat_smile:), feel free to extend it however you deem necessary.\nhttps://wiki.hyperledger.org/display/TSC/2021+Q4+Hyperledger+Caliper","username":"klenik","ts":"2022-01-20T09:46:14.871Z"}
{"msg":"That looked good to me, thanks @klenik","username":"davidkel","ts":"2022-01-20T13:09:28.036Z"}
{"msg":"Hi @klenik I've created 2 github issues on caliper-benchmarks \nhttps://github.com/hyperledger/caliper-benchmarks/issues/152 (fabric networks)\nhttps://github.com/hyperledger/caliper-benchmarks/issues/153 (node chaincode assets)\nto try to rationalise the current benchmark repo, would be great to get your thoughts.\nI know we have some published reports there as well and I was thinking we leave them as is. I know that I won't be adding any further reports to this and that they refer to old and non-lts released versions but there may still be some value there to leave them. What do you think ?","username":"davidkel","ts":"2022-01-20T15:24:56.171Z"}
{"msg":"@davidkel This are just quick initial thoughts about the above issues, I'll meditate on them a bit more during the weekend.\n1) Most of it should be removed. The reports could stay, it's a good write-up and guide for others. But the underlying artifacts can go too. I'd keep a docker-compose network for v1-latest and v2-lts, so users can easily experiment with them within a single repository (I'd vote for a 2org1peer1raft_goleveldb network, just to be lightweight, or even 1org). Other than this, I'd provide network configs for the official Fabric example networks, and workloads for the example CCs. The integration of 3rd party deploy tooling is a good question. Minifab looks promising and active.\n2) Can't we extract the business logic (or the contract class itself) into a common \"package\"? Although not sure the packaging/install step would pick it up using `file:///` style dependencies. What if we provide 2 scripts that rewrite the package.json as needed (and we keep a single implementation, if it's really the same for both versions)?\n\nOr maybe we could only showcase v2 Fabric examples in the benchmark repo :man_shrugging_light_skin_tone: Caliper itself is backward compatible, but the benchmark repo is there to help new users start a test quickly. And new users probably want to start with a new Fabric version :) This choice could decide a lot of your question :)","username":"klenik","ts":"2022-01-20T21:02:37.366Z"}
{"msg":"@davidkel These are just quick initial thoughts about the above issues, I'll meditate on them a bit more during the weekend.\n1) Most of it should be removed. The reports could stay, it's a good write-up and guide for others. But the underlying artifacts can go too. I'd keep a docker-compose network for v1-latest and v2-lts, so users can easily experiment with them within a single repository (I'd vote for a 2org1peer1raft_goleveldb network, just to be lightweight, or even 1org). Other than this, I'd provide network configs for the official Fabric example networks, and workloads for the example CCs. The integration of 3rd party deploy tooling is a good question. Minifab looks promising and active.\n2) Can't we extract the business logic (or the contract class itself) into a common \"package\"? Although not sure the packaging/install step would pick it up using `file:///` style dependencies. What if we provide 2 scripts that rewrite the package.json as needed (and we keep a single implementation, if it's really the same for both versions)?\n\nOr maybe we could only showcase v2 Fabric examples in the benchmark repo :man_shrugging_light_skin_tone: Caliper itself is backward compatible, but the benchmark repo is there to help new users start a test quickly. And new users probably want to start with a new Fabric version :) This choice could decide a lot of your question :)","username":"klenik","ts":"2022-01-20T21:02:37.366Z"}
{"msg":"I would like to encourage the use of hyperledger fabric 2.x now as 1.4 is now out of LTS so no new releases for core fabric. My preference would be to showcase 2.x and remove 1.4 support. We could create a branch so that if people need assets that still work on 1.4 then at least there is a \"use at your own risk\" branch ?","username":"davidkel","ts":"2022-01-21T10:34:41.347Z"}
{"msg":"Well, the repo is tagged for each release, so we wouldn't lose older assets. So I'm all for keeping only v2 stuff there","username":"klenik","ts":"2022-01-21T12:24:27.882Z"}
{"msg":"Excellent, that great","username":"davidkel","ts":"2022-01-21T14:39:37.006Z"}
{"msg":"Has joined the channel.","username":"nao","ts":"2022-01-26T13:18:52.989Z","type":"uj"}
{"msg":"@klenik I've been diving into the networks in caliper-benchmarks more and I think I've come to the conclusion that we should get rid of all of them and reference in the first instance test-network from fabric-samples with a suitable network config and then move onto something like mini-fabric for more custom networks in the future (as well as perhaps supporting test-network-nano-bash and test-network-k8s from fabric-samples). The problem is that the networks don't only construct a network but also create a channel and deploy chaincode. This means they can only work with the non-gateway 1.4 SUT. As we don't want to have the fabric connector in caliper doing admin type activities, if we leave any networks there then we would have to leave it as an exercise to the user on how to create a channel and deploy chaincode which is not a trivial thing to do (test-network proves that with all the scripting it does). What do you think ?","username":"davidkel","ts":"2022-01-26T14:30:19.292Z"}
{"msg":"I've put the detail now in https://github.com/hyperledger/caliper-benchmarks/issues/152","username":"davidkel","ts":"2022-01-27T14:06:45.299Z"}
{"msg":"@davidkel Added my thoughts there","username":"klenik","ts":"2022-01-27T16:46:42.667Z"}
{"msg":"@klenik I looked in the issue but couldn't see a comment from you","username":"davidkel","ts":"2022-01-27T18:15:57.674Z"}
{"msg":"@davidkel Because I forgot to click the Comment button :man_facepalming_light_skin_tone: But now it's there :)","username":"klenik","ts":"2022-01-28T23:21:39.469Z"}
{"msg":"The project proposal submission for this year's mentorship has started ([wiki](https://wiki.hyperledger.org/display/INTERN#HyperledgerMentorshipProgram-2022ProgramTimeline*)). It would be nice to gather and discuss some project ideas that would benefit the Caliper community, achievable in 3 months (not a lot of time when you need to get to know Caliper first, assuming full-time mentorship schedule), and more or less loosely coupled with the current development of Caliper (our current TODOs should not block the mentees work). Once we gather some ideas, we can discuss them in next week's call in more detail","username":"klenik","ts":"2022-02-01T12:52:28.195Z"}
{"msg":"Idea#1: Hyperledger Caliper VS Code Extension\nInspired by the help provided by the IBM Blockchain extension for Fabric, we could do something similar for Caliper to:\n1. Automatically setup skeleton projects\n2. Provide schemas for different configuration files (helpful when editing YAMLs directly)\n3. Provide VS Code webviews (GUIs) for creating/editing configuration files, so users can operate on a higher abstraction level\n4. Whatever we can make easier/automatic for users","username":"klenik","ts":"2022-02-01T13:03:10.989Z"}
{"msg":"@klenik anything to make caliper more easily consumable is definitely a good thing. If we do a VS Code extension then maybe that should be in a labs repo rather than the main caliper repo. My concern is that it runs the risk of going stale and writing VSCode extensions is a specific skill set that would require the contributor to maintain","username":"davidkel","ts":"2022-02-01T15:37:52.207Z"}
{"msg":"@klenik anything to make caliper more easily consumable is definitely a good thing. If we do a VS Code extension then maybe that should be in a labs repo rather than the main caliper repo. My concern is that it runs the risk of going stale and writing VSCode extensions is a specific skill set that would be needed for a maintainer","username":"davidkel","ts":"2022-02-01T15:37:52.207Z"}
{"msg":"@davidkel Yes, it's something to think about. Although the benchmark repo suffers from the same staleness problem, even though (or maybe because) it's separate. The closer we are to the code base, the more incentive we have to keep things updated. I'm hopeful that we could engineer extensions in a way that keeps the vscode coupling part fairly separated. \n\n(Plus I wouldn't mind picking up some vscode extension skills, I think it's a great integration opportunity for Caliper on the long term, hence the project suggestion) ","username":"klenik","ts":"2022-02-01T22:27:20.949Z"}
{"msg":"My other project idea would be the complete overhaul of our CI tests, including migration to GA, sharding the bigger tests, conditional runs based on modifications, etc","username":"klenik","ts":"2022-02-01T22:52:16.228Z"}
{"msg":"It wouldn't be a new feature, but an exciting and relevant devops technological challenge ","username":"klenik","ts":"2022-02-01T22:53:25.606Z"}
{"msg":"That is a great idea for a project","username":"davidkel","ts":"2022-02-01T23:01:49.595Z"}
{"msg":"Has joined the channel.","username":"sbohanlf","ts":"2022-02-07T18:29:25.551Z","type":"uj"}
{"msg":"@davidkel @klenik may I archive the caliper channels and export them? we have a category [over on discord](https://discord.com/channels/905194001349627914/941417722946924554)","username":"rjones","ts":"2022-02-12T20:59:48.576Z"}
{"msg":"@rjones I'm ok with that, just need the ok from @klenik as well","username":"davidkel","ts":"2022-02-14T11:17:54.543Z"}
{"msg":"OK.","username":"rjones","ts":"2022-02-14T16:36:57.344Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2022-02-15T01:14:55.256Z","type":"ul"}
{"msg":"@rjones Just to confirm, spoken to @klenik we can archive the caliper channels and export them","username":"davidkel","ts":"2022-02-16T17:25:48.570Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2022-02-16T18:09:35.316Z","type":"uj"}
{"msg":"Please join us on Discord: https://discord.gg/hyperledger","username":"rjones","ts":"2022-02-16T18:09:35.503Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2022-02-16T18:10:01.935Z","type":"ul"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:24:15.395Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:24:15.404Z","type":"room_changed_description"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:24:15.407Z","type":"room_changed_announcement"}
