{"msg":"Has joined the channel.","username":"guoger","ts":"2017-11-02T01:54:56.333Z","type":"uj"}
{"msg":"Has joined the channel.","username":"chokha","ts":"2017-11-05T19:41:12.764Z","type":"uj"}
{"msg":"cbf","username":"rjones","ts":"2017-11-16T14:09:44.447Z","type":"subscription-role-added"}
{"msg":"User <em>User_1</em> added by <em>cbf</em>.","username":"cbf","ts":"2017-11-16T14:12:19.128Z","type":"au"}
{"msg":"User <em>User_2</em> added by <em>cbf</em>.","username":"cbf","ts":"2017-11-16T14:12:19.180Z","type":"au"}
{"msg":"User <em>User_3</em> added by <em>cbf</em>.","username":"cbf","ts":"2017-11-16T14:12:19.226Z","type":"au"}
{"msg":"Has joined the channel.","username":"HandsomeRoger","ts":"2017-11-20T08:00:13.866Z","type":"uj"}
{"msg":"Has joined the channel.","username":"harsha","ts":"2017-11-21T15:01:45.846Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jackeyliliang","ts":"2017-11-24T02:59:00.059Z","type":"uj"}
{"msg":"Has joined the channel.","username":"heath","ts":"2017-11-28T06:13:08.229Z","type":"uj"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/15847/ needs one more +2 to merge please","username":"rjones","ts":"2017-11-30T21:08:01.081Z"}
{"msg":"Has joined the channel.","username":"tkuhrt","ts":"2017-12-06T11:08:01.148Z","type":"uj"}
{"msg":"@guoger  @swetha can you suggest some good doc links for EVM exploration please ?","username":"muralisr","ts":"2017-12-09T17:01:46.812Z"}
{"msg":"https://github.com/ethereum/wiki/wiki/White-Paper#code-execution white paper explaining Ethereum, which contains a section about EVM","username":"guoger","ts":"2017-12-09T17:02:35.409Z"}
{"msg":"https://www.gitbook.com/book/ethereum/frontier-guide/details a lengthy, but detailed guide to Ethereum Frontier release","username":"guoger","ts":"2017-12-09T17:03:11.405Z"}
{"msg":"http://yellowpaper.io Ethereum yellow paper, supposed to be definitive and generic, where a spec of EVM can be found","username":"guoger","ts":"2017-12-09T17:03:58.607Z"}
{"msg":"(If somebody simply want to learn about Ethereum, white paper is really good material","username":"guoger","ts":"2017-12-09T17:04:26.012Z"}
{"msg":"Has joined the channel.","username":"guolidong","ts":"2017-12-12T06:02:17.299Z","type":"uj"}
{"msg":"@guoger @swetha how are things progressing?","username":"cbf","ts":"2017-12-13T21:40:11.920Z"}
{"msg":"@cbf: We have all the pieces we need to run the evm as a chaincode on fabric. We have started looking into the web3 json rpc API needed so that ethereum dApps can communicate with the smart contract and platform. Once we some of the API implemented we should have a POC that we can share/demo. @guoger anything I missed?","username":"swetha","ts":"2017-12-13T22:10:17.213Z"}
{"msg":"@swetha after some experiments, I felt it's indeed easier to implement evm as a system chaincode, main reason being that we don't really have a mechanism to dispatch txs to a *singleton user* chaincode based on type, i.e. if the chaincode invoked is _EVM_, send it to _the_ EVM container, otherwise send it to container with corresponding chaincode.","username":"guoger","ts":"2017-12-14T15:46:27.263Z"}
{"msg":"@swetha after some experiments, I felt it's indeed easier to implement evm as a system chaincode, main reason being that we don't really have a mechanism to dispatch txs to a *singleton user chaincode* based on type, i.e. if the chaincode invoked is _EVM_, send it to _the_ EVM container, otherwise send it to container with corresponding chaincode.","username":"guoger","ts":"2017-12-14T15:46:27.263Z"}
{"msg":"I'm putting pieces together now and should be able to have a working poc early next week","username":"guoger","ts":"2017-12-14T15:47:54.898Z"}
{"msg":"To adapt to web3js, maybe we could quickly prototype a JSON RPC server using node-sdk/go-sdk?","username":"guoger","ts":"2017-12-14T16:07:58.916Z"}
{"msg":"@muralisr if I understand correctly\n1. during _install_, code bytes are put in fs on peer\n2. during _instantiate_, we first invoke `lscc` to put ChaincodeData into ledger, then invoke `init` on new user chaincode, where a new container will be launched if not existed.\ncorrect?","username":"guoger","ts":"2017-12-14T16:22:03.129Z"}
{"msg":"@guoger: I am working on creating a JSON RPC server that implements a few of the instructions like sendTransaction and thinking to just have that use the go-sdk to talk to fabric. I will try to have something for the POC early next week. ","username":"swetha","ts":"2017-12-14T16:43:00.165Z"}
{"msg":"Great!","username":"guoger","ts":"2017-12-14T16:44:13.108Z"}
{"msg":"fantasticüëèü§£","username":"cbf","ts":"2017-12-14T18:01:42.152Z"}
{"msg":"fantasticüëè","username":"cbf","ts":"2017-12-14T18:01:42.152Z"}
{"msg":"@swetha it would be good to collaborate on a go-based web3 RPC, this is something I need to build for Burrow","username":"silasdavis","ts":"2017-12-15T14:08:01.956Z"}
{"msg":"so let's make it some kind of reusable facade","username":"silasdavis","ts":"2017-12-15T14:08:12.795Z"}
{"msg":"@guoger to answer your question ^^^, correct.","username":"muralisr","ts":"2017-12-15T15:32:00.468Z"}
{"msg":"@guoger `I felt it's indeed easier to implement evm as a system chaincode,` - sounds right to me too.... other nice property, going by your \"singleton\" comment, is that you can choose between peer wide system chaincode (ie, across all channels) or a syscc per channel","username":"muralisr","ts":"2017-12-15T15:36:32.751Z"}
{"msg":"I'm not sure why you'd need the peer wide syscc but its there if you want it","username":"muralisr","ts":"2017-12-15T15:37:09.537Z"}
{"msg":"@silasdavis: We like that idea too! For the time being we want an end to end POC so we are making an minimal server than we can use to test with. We aren't going to implement more than a couple of the APIs.","username":"swetha","ts":"2017-12-15T16:56:54.482Z"}
{"msg":"That makes sense, I'll be sure to steal what you do if you get there first, then you'll be able to pull any changes I make based of your stuff ","username":"silasdavis","ts":"2017-12-15T17:04:35.168Z"}
{"msg":"Is this code pushed somewhere? ","username":"silasdavis","ts":"2017-12-15T17:04:52.656Z"}
{"msg":"No, not currently. What I have right now is a simple server that does not do anything. I am new to JSON RPC so mostly playing around with it. I will push it all up soon, latest sometime next week and be sure to send you the link","username":"swetha","ts":"2017-12-15T17:09:06.976Z"}
{"msg":"Has joined the channel.","username":"compleatang","ts":"2017-12-17T22:26:23.323Z","type":"uj"}
{"msg":"@swetha  just an update, I pulled in your code, and get most pieces working:\n- compiled solidity bytecode can be installed via CLI\n- CLI can invoke functions in the same way as other chaincodes, but with the hashed args as defined in Solidity\n- an `evmscc` executes the code\nOne remaining problem (hopefully last problem) is that when EVM actually `PutState` or `GetState`, I got error saying tx context is lost. Not sure why, will investigate tomorrow","username":"guoger","ts":"2017-12-18T15:19:55.352Z"}
{"msg":"btw, let's use [this](http://solidity.readthedocs.io/en/develop/introduction-to-smart-contracts.html) example for our demo, and compile it with online compiler [Remix](ethereum.github.io/browser-solidity)! I've been fighting this stupid compiler problem for couple of hours today and realized my local `solc` compiler produces different bytecode than Remix","username":"guoger","ts":"2017-12-18T15:23:40.618Z"}
{"msg":"btw, let's use [this](http://solidity.readthedocs.io/en/develop/introduction-to-smart-contracts.html) example for our demo, and compile it with online compiler [Remix](ethereum.github.io/browser-solidity) ! I've been fighting this stupid compiler problem for couple of hours today and realized my local `solc` compiler produces different bytecode than Remix","username":"guoger","ts":"2017-12-18T15:23:40.618Z"}
{"msg":"oh that's really interesting, thanks for the tip","username":"swetha","ts":"2017-12-18T17:23:33.061Z"}
{"msg":"@guoger `One remaining problem (hopefully last problem) is that when EVM actually `PutState` or `GetState`, I got error saying tx context is lost. ` - are the Get/Put part of the invoke call to the chaincode (as oppoised to EVM initiating Put / Get outside of the the Invoke) ?","username":"muralisr","ts":"2017-12-18T20:55:32.802Z"}
{"msg":"hope not","username":"muralisr","ts":"2017-12-18T20:55:41.064Z"}
{"msg":"other possibility is the invoke request on the peer side got tired of waiting for response and timed out","username":"muralisr","ts":"2017-12-18T20:56:19.831Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=7YiNQcaDQ4xMyAvpw) @muralisr They are part of invoke. Is new txctx created every time a chaincode is invoked? what `evmscc` does today is:\n- call `lscc` to retrieve evm bytecode based on chaincode name\n- execute that bytecode in vm\n- if bytecode calls `SetStorage`, it's translated to `PutState`","username":"guoger","ts":"2017-12-19T01:43:51.397Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=7YiNQcaDQ4xMyAvpw","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=7YiNQcaDQ4xMyAvpw","remote":true,"fileId":null,"fileName":null}]}
{"msg":"What I observed is that txctx (key being `channel name` + `txid`) is deleted after the initial `lscc` call","username":"guoger","ts":"2017-12-19T01:44:44.399Z"}
{"msg":"@here We are thinking of doing a demoing our POC, please ping either @guoger or me if you are interesting in joining the call. We are thinking of Wednesday (US folks: 8am PST, 11 am EST, London: 4 pm, China: 12AM)","username":"swetha","ts":"2017-12-19T03:53:38.168Z"}
{"msg":"@here We are thinking of doing a demoing our POC, please let @guoger or me known in this channel if you are interested in joining the call. We are thinking of Wednesday (US folks: 8am PST, 11 am EST, London: 4 pm, China: 12AM)","username":"swetha","ts":"2017-12-19T03:53:38.168Z"}
{"msg":"I'm interested to learn about this PoC. Please count me in.","username":"harsha","ts":"2017-12-19T03:58:07.061Z"}
{"msg":"@harsha great! what time zone are you in? we are waiting for folks to have a consensus on this","username":"guoger","ts":"2017-12-19T03:59:04.801Z"}
{"msg":"@guoger IST","username":"harsha","ts":"2017-12-19T03:59:14.310Z"}
{"msg":"alright, then proposed time should work for you :)","username":"guoger","ts":"2017-12-19T04:00:09.814Z"}
{"msg":"Has joined the channel.","username":"zhishui","ts":"2017-12-19T08:10:20.691Z","type":"uj"}
{"msg":"@muralisr after quite some debugging, I found that I wasn","username":"guoger","ts":"2017-12-19T09:45:51.035Z"}
{"msg":"@muralisr after quite some debugging, I found that I wasn't updating `stub` for a new `invoke`. Basically I was using the same `stub` when evmscc is init'ed, which obviously contains a stale txid.. stupid mistake","username":"guoger","ts":"2017-12-19T09:45:51.035Z"}
{"msg":"but just to get this clear, \n- when `evmscc` is invoked, it has a `chaincode.Handler` associated with it, where `handler.txCtx` has key `mychannel+txid`\n- `evmscc` invokes `lscc`, a new instance of handler is created and associated with `lscc`, where `handler.txCtx` has exactly same key `mychannel+txid`\n- invocation to `lscc` is finished, and that tx context is deleted\n\nbasically, for each chaincode, there will be a handler associated with it. If multiple chaincodes work together to complete one tx, all of them should have same key (channel name + txid) in their own instance of handler, correct?","username":"guoger","ts":"2017-12-19T09:52:14.472Z"}
{"msg":"@guoger can you elaborate on `evmscc invokes lscc` please ? How does it invoke and why ?","username":"muralisr","ts":"2017-12-19T14:17:40.035Z"}
{"msg":"@swetha i'd like to join the call ... maybe a bit late though (but will try to be on time at 11EST)","username":"muralisr","ts":"2017-12-19T14:22:08.849Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=i4ZcBsC5DB6joHR8i) @muralisr when new contract is installed, bytecode actually is stored in `lscc` namespace. So our `evmscc` needs to call `lscc` to retrieve the code and execute","username":"guoger","ts":"2017-12-19T15:18:36.728Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=i4ZcBsC5DB6joHR8i","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=i4ZcBsC5DB6joHR8i","remote":true,"fileId":null,"fileName":null}]}
{"msg":"and it does\n```\nres := stub.InvokeChaincode(\"lscc\", [][]byte{[]byte(lscc.GETDEPSPEC), []byte(stub.GetChannelID()), ccName}, stub.GetChannelID())\n```","username":"guoger","ts":"2017-12-19T15:19:27.355Z"}
{"msg":"@guoger I'd have stored the bytes directly in evmscc ...this would be along the lines of the \"dynamic chaincode\" approach we touched upon in the hackfest. The lscc is used by the fabric to manage its chaincode and execute them . Here the evmscc is executing it and seems  more natural storing the code in evmscc ... you;d also avoid a InvokeChaincode call (could become expensive if you do it often enough)","username":"muralisr","ts":"2017-12-19T16:03:06.905Z"}
{"msg":"@guoger I'd have stored the bytes directly in evmscc ...this would be along the lines of the \"dynamic chaincode\" approach we touched upon in the hackfest. The lscc is used by the fabric to manage its chaincode and execute them . Here the evmscc is executing  code directly and seems  more natural storing the code in evmscc directly as well ... you;d also avoid a InvokeChaincode call (could become expensive if you do it often enough)","username":"muralisr","ts":"2017-12-19T16:03:06.905Z"}
{"msg":"@guoger I'd have stored the bytes directly in evmscc namespace...this would be along the lines of the \"dynamic chaincode\" approach we touched upon in the hackfest. The lscc is used by the fabric to manage its chaincode and execute them . Here the evmscc is executing  code directly and seems  more natural storing the code in evmscc directly as well ... you;d also avoid a InvokeChaincode call (could become expensive if you do it often enough). Also you;d avoid dragging lscc RWset into the TX","username":"muralisr","ts":"2017-12-19T16:03:06.905Z"}
{"msg":"ie, in otherwords, evmscc will support an \"install\" verb directly","username":"muralisr","ts":"2017-12-19T16:06:40.476Z"}
{"msg":"but to answer your question `basically, for each chaincode, there will be a handler associated with it. If multiple chaincodes work together to complete one tx, all of them should have same key (channel name + txid) in their own instance of handler, correct?` - yes, that's correct","username":"muralisr","ts":"2017-12-19T17:11:45.412Z"}
{"msg":"@swetha : If you let me know the details of the call, I can add it to the Hyperledger community calendar.","username":"tkuhrt","ts":"2017-12-19T17:14:28.280Z"}
{"msg":"@tkuhrt: That would be great! I think the time is confirmed at US folks: 8am PST, 11 am EST, London: 4 pm, China: 12AM. Currently I am planning on using a Google Hangout: https://hangouts.google.com/call/KP2JqvS0tCDent7vmmmJAAEE. The tool we use may change.","username":"swetha","ts":"2017-12-19T17:28:21.612Z"}
{"msg":"Okay...let me know if it changes. I will add the details listed above.","username":"tkuhrt","ts":"2017-12-19T17:28:52.529Z"}
{"msg":"Added to the calendar. It would be great if the meeting could be recorded for others to watch later.","username":"tkuhrt","ts":"2017-12-19T17:32:48.339Z"}
{"msg":"@tkuhrt, Thats a great idea. I will definitely keep that in mind","username":"swetha","ts":"2017-12-19T18:39:39.718Z"}
{"msg":"@tkuhrt: Set up a webex meeting instead so we can record it. \nHere is the link: https://ibm.webex.com/ibm/j.php?MTID=m6d206b302a34a8d806c107c5b370ba53, \nMeeting Password is fabricevm\nVideo address:\nDial 928304252@ibm.webex.com\n\nAudio connection:\n+1-669-234-1178 United States of America Toll\n+1-669-234-1178 United States of America Toll\nGlobal call-in numbers\n\nShow toll-free dialing restrictions\nAccess code: 928 304 252\n","username":"swetha","ts":"2017-12-19T19:12:19.137Z"}
{"msg":"@tkuhrt: Set up a webex meeting instead so we can record it. \nHere is the link: https://ibm.webex.com/ibm/j.php?MTID=m6d206b302a34a8d806c107c5b370ba53, \nMeeting Password is fabricevm\nVideo address:\nDial 928304252@ibm.webex.com\n\nAudio connection:\n+1-669-234-1178 United States of America Toll\n+1-669-234-1178 United States of America Toll\n","username":"swetha","ts":"2017-12-19T19:12:19.137Z"}
{"msg":"Great!  I updated the calendar entry. I am looking forward to the recording (as I have a conflict at this time).","username":"tkuhrt","ts":"2017-12-19T19:14:10.632Z"}
{"msg":"Has joined the channel.","username":"sheehan","ts":"2017-12-20T16:20:46.224Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rtemprano","ts":"2017-12-20T16:53:24.696Z","type":"uj"}
{"msg":"@tkuhrt: Is the a place l can upload recording from the meeting this morning?","username":"swetha","ts":"2017-12-20T17:41:32.730Z"}
{"msg":"Yes...let me grant you access to a Google Drive folder...I will DM you","username":"tkuhrt","ts":"2017-12-20T17:43:48.120Z"}
{"msg":"Thanks!","username":"swetha","ts":"2017-12-20T17:43:54.342Z"}
{"msg":"Swetha uploaded the recording from this morning's demo to: https://drive.google.com/open?id=149FI5gEHLXAN7plzOCBUOyPB_s9AqPAj. Nice job, Swetha and Jay.","username":"tkuhrt","ts":"2017-12-20T20:29:16.139Z"}
{"msg":"@guoger & @silasdavis: I have my initial json rpc server code in this repo: https://github.com/swetharepakula/fabric-chaincode-evm/tree/poc-evm-fab-6590 under the `ethserver` dir","username":"swetha","ts":"2017-12-20T23:52:02.642Z"}
{"msg":"@swetha thanks for sharing","username":"silasdavis","ts":"2017-12-21T10:47:41.616Z"}
{"msg":"I think we should consider using a json-rpc library to take care of the JSON-RPC details such as: https://github.com/ybbus/jsonrpc","username":"silasdavis","ts":"2017-12-21T10:50:35.848Z"}
{"msg":"I had a look at your demo (well done), I only skimmed it but you lay out the option to a) wrapping burrow, and b) this evmscc chaincode wrapper, and that you took the latter. Can you just describe to me how this intergrates with Burrow exactly?","username":"silasdavis","ts":"2017-12-21T11:00:42.627Z"}
{"msg":"@silasdavis hi, thanks for reviewing our demo! To answer your question, our intention, at least for now, is to integrate Burrow EVM only. Therefore, we took the evm library and wrapped it into _evmscc_ (system chaincode in Fabric) to execute contract bytecode. So we weren't really _wrapping Burrow_.","username":"guoger","ts":"2017-12-21T15:51:12.774Z"}
{"msg":"this is the design doc we continuously work on https://docs.google.com/document/d/1xZfdtFiIFvHI7UZAze2xbm5hhgaDHGRBMusozKfpOck/edit?usp=sharing ","username":"guoger","ts":"2017-12-21T15:52:15.936Z"}
{"msg":"this is the design doc we continuously work on https://docs.google.com/document/d/1xZfdtFiIFvHI7UZAze2xbm5hhgaDHGRBMusozKfpOck/edit?usp=sharing ","username":"guoger","ts":"2017-12-21T15:52:15.936Z"}
{"msg":"@tkuhrt actually it would be nice if you could pin this link or put it in the channel description :)","username":"guoger","ts":"2017-12-21T15:53:25.253Z"}
{"msg":"(I don't have moderator permission to do so I guess)","username":"guoger","ts":"2017-12-21T15:53:49.663Z"}
{"msg":"","username":"tkuhrt","ts":"2017-12-21T16:05:34.463Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"guoger","username":"tkuhrt","ts":"2017-12-21T16:05:41.275Z","type":"subscription-role-added"}
{"msg":"swetha","username":"tkuhrt","ts":"2017-12-21T16:07:17.841Z","type":"subscription-role-added"}
{"msg":"The design doc we continuously work on https://docs.google.com/document/d/1xZfdtFiIFvHI7UZAze2xbm5hhgaDHGRBMusozKfpOck/edit?usp=sharing","username":"tkuhrt","ts":"2017-12-21T16:08:56.566Z","type":"room_changed_description"}
{"msg":"Discuss the integration of the EVM with Hyperledger Fabric","username":"tkuhrt","ts":"2017-12-21T16:13:18.410Z","type":"room_changed_topic"}
{"msg":"@silasdavis: I will start playing with that library. I am also looking into this library: https://github.com/gorilla/rpc","username":"swetha","ts":"2017-12-21T17:32:14.166Z"}
{"msg":"@silasdavis: I will start playing with that library. I think the library is a client though. I am also looking into this json rpc server library: https://github.com/gorilla/rpc ","username":"swetha","ts":"2017-12-21T17:32:14.166Z"}
{"msg":"It looks like gorilla does have a package for json rpc 2.0 now: http://www.gorillatoolkit.org/pkg/rpc/v2/json2","username":"silasdavis","ts":"2017-12-21T18:58:24.086Z"}
{"msg":"actually Burrow uses gorilla for websockets. ","username":"silasdavis","ts":"2017-12-21T18:59:05.667Z"}
{"msg":"also yes clearly you are right it's just a client","username":"silasdavis","ts":"2017-12-21T19:00:45.725Z"}
{"msg":"by the way, this is my first bash at an intermediate interface for all of our RPC layers: https://github.com/hyperledger/burrow/blob/hypermarmot/rpc/service.go#L37-L70 ","username":"silasdavis","ts":"2017-12-21T19:02:05.981Z"}
{"msg":"as in the outer RPC is given an instance of that and formulates the concrete RPC","username":"silasdavis","ts":"2017-12-21T19:03:15.592Z"}
{"msg":"for example as in: https://github.com/hyperledger/burrow/blob/hypermarmot/rpc/tm/routes.go#L29-L76 ","username":"silasdavis","ts":"2017-12-21T19:03:20.989Z"}
{"msg":"I doubt `Service` is quite right, but if we could iterate on that, possibly split it up so that it might be something you could implement as an service provider on top of fabric and then implement web3 on top of that it would mean we could share a web3 and other end-user APIs","username":"silasdavis","ts":"2017-12-21T19:05:22.204Z"}
{"msg":"I don't know how viable it would be to make the signature of methods like `Subscribe` and `BroadcastTx` generic enough to be implemented by a Burrow and a Fabric (and a Sawtooth??) backend, but it would be interesting to at least considser","username":"silasdavis","ts":"2017-12-21T19:07:25.963Z"}
{"msg":"obviously they are based on Burrow types now, but are meant to abstract away from the return types of the corresponding v0 and tm APIs (the two interfaces Burrow has)","username":"silasdavis","ts":"2017-12-21T19:08:14.227Z"}
{"msg":" I like the sound of sharing the API libraries and just have an underlying interface that is build on top of. Your interface is a good starting point for me to see how well that will fit in with fabric. In terms of those methods `Subscribe` and `BroadcastTx`, you are right they probably have to be tailored to the backend they are talking to. But the concept of those methods are universal, so there probably is some way to make those more generic? ","username":"swetha","ts":"2017-12-21T19:57:45.373Z"}
{"msg":"Has joined the channel.","username":"sstone1","ts":"2017-12-27T16:04:24.457Z","type":"uj"}
{"msg":"Has joined the channel.","username":"marc0o","ts":"2017-12-30T19:30:59.339Z","type":"uj"}
{"msg":"@binhn to echo the question you had during our demo\n> evm caller account should probably be used to check the ACL of cross-chaincode invocation\nMy take on this is that the chain of invocation would take place in the same tx context, where original creator of proposal would be used to test ACL, therefore caller account is till ignorable. cc @muralisr ","username":"guoger","ts":"2018-01-10T09:58:43.407Z"}
{"msg":"Has joined the channel.","username":"binhn","ts":"2018-01-10T09:58:44.058Z","type":"uj"}
{"msg":"@guoger sure, we have other options too re ACL to make it more flexible which we can explore when we need","username":"muralisr","ts":"2018-01-10T13:21:51.538Z"}
{"msg":"Has joined the channel.","username":"ArnabChatterjee","ts":"2018-01-12T06:27:09.773Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yash-ibm","ts":"2018-01-15T12:04:44.724Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tasmiya_n","ts":"2018-01-15T12:05:47.127Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jtclark","ts":"2018-01-19T10:52:35.638Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Brucepark","ts":"2018-01-20T06:14:44.238Z","type":"uj"}
{"msg":"just fyi, somebody posted in #burrow-contributors requesting for web3 support :)","username":"guoger","ts":"2018-01-22T07:00:10.706Z"}
{"msg":"Hi @swetha, happy new year, just saw your commit here: https://github.com/swetharepakula/fabric-chaincode-evm/commit/97d19e22983ca29bfc1618dd29a6d6c98b758b89 I've been working a bit on my intermediate RPC layers - it would be good to talk about how we might share code on Web3. I also have some broader interest in building some kind of compatibility (quite what form I am still thinking through) between Seth, Fabric-EVM, and Burrow - in the sense of transaction mappability and bridging of networks around the lingua franca of the EVM. This is something for the future but it would probably be good for me if I could understand a bit more about the architecture and ideally help write some code with you. ","username":"silasdavis","ts":"2018-01-26T10:30:42.353Z"}
{"msg":"Do you think it would be worth having a chat in voice to think through, in the first instance, a common 'Service Provider Interface' for web3?","username":"silasdavis","ts":"2018-01-26T10:31:53.512Z"}
{"msg":"@silasdavis: Happy New Year to you too! Yes, I think have a discussion would be very helpful. What is usually a good time for you?  @guoger @jtclark may want to join us too.","username":"swetha","ts":"2018-01-26T17:33:42.019Z"}
{"msg":"@silasdavis: Happy New Year to you too! Yes, I think having a discussion would be very helpful. What is usually a good time for you?  @guoger @jtclark may want to join us too.","username":"swetha","ts":"2018-01-26T17:33:42.019Z"}
{"msg":"Ah yes in my head that was addressed to all three of you - but we had spoken about the SPI thing before. I keep a fairly random schedule within UTC waking hours (which tends to be heavily baby influenced). 10 am EST?","username":"silasdavis","ts":"2018-01-26T17:37:29.396Z"}
{"msg":"Sure that should work for all of us. I will send out an invite next week","username":"swetha","ts":"2018-01-26T17:38:05.219Z"}
{"msg":"works for me!","username":"guoger","ts":"2018-01-27T01:50:22.711Z"}
{"msg":"Cool, noted you will do invite, Monday is only day I can't do currently","username":"silasdavis","ts":"2018-01-29T14:22:48.304Z"}
{"msg":"@silasdavis, will Wednesday work? ","username":"swetha","ts":"2018-01-29T18:30:07.699Z"}
{"msg":"Sorry I didn't process that next week was this week when you sent it. I could do Thursday this week.","username":"silasdavis","ts":"2018-01-29T19:17:55.366Z"}
{"msg":"Oh that is okay, would next week be better?","username":"swetha","ts":"2018-01-29T22:25:43.670Z"}
{"msg":"Oh that is okay, would next week be better? @silasdavis ","username":"swetha","ts":"2018-01-29T22:25:43.670Z"}
{"msg":"Oh that is okay, would next week (first week of Feb) be better? @silasdavis  ","username":"swetha","ts":"2018-01-29T22:25:43.670Z"}
{"msg":"yeah that would work better thans","username":"silasdavis","ts":"2018-01-30T17:43:09.413Z"}
{"msg":"Cool, I will set up something in the first week of Febuary","username":"swetha","ts":"2018-01-30T17:48:25.336Z"}
{"msg":" @adamludvik Would you be interested in the above ^^","username":"swetha","ts":"2018-01-31T00:59:56.978Z"}
{"msg":"Has joined the channel.","username":"adamludvik","ts":"2018-01-31T00:59:57.140Z","type":"uj"}
{"msg":"@swetha yes, I would be","username":"adamludvik","ts":"2018-01-31T21:27:44.784Z"}
{"msg":"@muralisr I'm trying to see how `init` could fit in Ethereum model... not sure if Ethereum has this notion of _constructor_","username":"guoger","ts":"2018-02-01T01:18:35.524Z"}
{"msg":"@guoger you don't HAVE to implement anything in the `Init`","username":"muralisr","ts":"2018-02-01T01:19:25.432Z"}
{"msg":"when the chaincode comes up first time it gives you an opportunnuty to store some state (typically some metadata)","username":"muralisr","ts":"2018-02-01T01:20:09.211Z"}
{"msg":"when the chaincode is instantiated it gives you an opportunnuty to store some state (typically some metadata)","username":"muralisr","ts":"2018-02-01T01:20:09.211Z"}
{"msg":"so for your purpose you can just return success from Init without doing anything ","username":"muralisr","ts":"2018-02-01T01:20:44.656Z"}
{"msg":"yeah, that's what I have for now","username":"guoger","ts":"2018-02-01T01:21:33.823Z"}
{"msg":"ok","username":"muralisr","ts":"2018-02-01T01:21:53.416Z"}
{"msg":"thx!","username":"guoger","ts":"2018-02-01T01:21:55.626Z"}
{"msg":"anytime","username":"muralisr","ts":"2018-02-01T01:22:05.509Z"}
{"msg":"I pushed my draft patches out, starting from https://gerrit.hyperledger.org/r/#/c/17323/","username":"guoger","ts":"2018-02-01T01:23:00.805Z"}
{"msg":"I haven't put you into reviewer list yet cuz I don't want to spam you with all email notification","username":"guoger","ts":"2018-02-01T01:23:36.304Z"}
{"msg":"if you have some time, you are very welcome to comment on those :)","username":"guoger","ts":"2018-02-01T01:24:23.222Z"}
{"msg":"Ethereum contracts can have constructors. Is that somehow handled outside of `Init` in Fabric?","username":"sheehan","ts":"2018-02-01T01:39:56.369Z"}
{"msg":"Has joined the channel.","username":"vchengsong","ts":"2018-02-01T03:51:47.250Z","type":"uj"}
{"msg":"@sheehan hi, thx for feedback! IIUC, constructors in ethereum contract, e.g. solidity, are called every time when it's loaded into an EVM (this is handled by burrow-evm). `init` in Fabric, on the other hand, is an one-time initialization. So I think the statement is correct\n>  Is that somehow handled outside of `Init` in Fabric?","username":"guoger","ts":"2018-02-01T04:17:12.629Z"}
{"msg":"@muralisr thanks for reviewing the patch! Without an extra field in CLI (and SDK), we will need to lookup _chaincode type_ in `lscc` for *every* invocation, incl. non-evm ones. I felt this is not very organic. What do you think?\n> We should not introduce a lang parameter to invoke/query just for doing an under the cover translation for EVM. Better be transparent and make users call \"evmscc\" directly and take the appropriate parameters directly as invoke args.","username":"guoger","ts":"2018-02-02T05:02:41.183Z"}
{"msg":"@guoger let me take a closer look and make sure I wasnt overlooking anything and then respond","username":"muralisr","ts":"2018-02-02T14:33:15.258Z"}
{"msg":"        ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ cert.pem\nThe way I understand it, you want to do something like\n`peer chaincode invoke -n mycc -l EVM -c '{\"Args\":[\"some\", \"args\", \"to\", \"the cc\"]}'`\nwhich will internally convert it to call \"evmcc\" with args {\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}\nI'd just ask users to do this instead\n`peer chaincode invoke -n evmscc -c '{\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}'\n\nPerhaps I'm missing something @guoger ?","username":"muralisr","ts":"2018-02-02T14:59:07.346Z"}
{"msg":"        ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ cert.pem\nThe way I understand it, you want to do something like\n`peer chaincode invoke -n mycc -l EVM -c '{\"Args\":[\"some\", \"args\", \"to\", \"the cc\"]}'`\nwhich will internally convert it to call \"evmcc\" with args {\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}\nI'd just ask users to do this instead\n`peer chaincode invoke -n evmscc -c '{\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}'`\n\nPerhaps I'm missing something @guoger ?","username":"muralisr","ts":"2018-02-02T14:59:07.346Z"}
{"msg":"The way I understand it, you want to do something like\n`peer chaincode invoke -n mycc -l EVM -c '{\"Args\":[\"some\", \"args\", \"to\", \"the cc\"]}'`\nwhich will internally convert it to call \"evmcc\" with args {\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}\nI'd just ask users to do this instead\n`peer chaincode invoke -n evmscc -c '{\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}'`\n\nPerhaps I'm missing something @guoger ?","username":"muralisr","ts":"2018-02-02T14:59:07.346Z"}
{"msg":"The way I understand it, you want to do something like\n`peer chaincode invoke -n mycc -l EVM -c '{\"Args\":[\"some\", \"args\", \"to\", \"the cc\"]}'`\nwhich will internally convert it to call \"evmscc\" with args {\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}\nI'd just ask users to do this instead\n`peer chaincode invoke -n evmscc -c '{\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}'`\n\nPerhaps I'm missing something @guoger ?","username":"muralisr","ts":"2018-02-02T14:59:07.346Z"}
{"msg":"@muralisr: I think what Jay mentioned above was to be able to do something like this:\n`peer chaincode invoke -n mycc -c '{\"Args\":[\"some\", \"args\", \"to\", \"the cc\"]}'` where `mycc` is of type EVM bytecode","username":"swetha","ts":"2018-02-02T17:56:28.830Z"}
{"msg":"@swetha right, I understand... to make sure I;m not off my mark, would you agree `peer chaincode invoke -n evmscc -c '{\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}'` will work ?","username":"muralisr","ts":"2018-02-02T17:57:26.563Z"}
{"msg":"or don't you think it won;t even work ?","username":"muralisr","ts":"2018-02-02T17:57:34.657Z"}
{"msg":"or do you think it won;t even work ?","username":"muralisr","ts":"2018-02-02T17:57:34.657Z"}
{"msg":"I think that is a possible solution. I am considering on how that changes the user experience compared to a non evm chaincode","username":"swetha","ts":"2018-02-02T17:58:30.981Z"}
{"msg":"right","username":"muralisr","ts":"2018-02-02T17:58:37.338Z"}
{"msg":"ok","username":"muralisr","ts":"2018-02-02T17:58:38.458Z"}
{"msg":"we are on the same page then","username":"muralisr","ts":"2018-02-02T17:58:42.687Z"}
{"msg":"We can definitely make the `evmscc` chaincode invoke function operate in that way","username":"swetha","ts":"2018-02-02T17:59:03.474Z"}
{"msg":"currently we do have many situations where we call system chaincodes directly","username":"muralisr","ts":"2018-02-02T17:59:16.926Z"}
{"msg":"typically \"qscc\"","username":"muralisr","ts":"2018-02-02T17:59:23.279Z"}
{"msg":"a user csan just wrap `peer chaincode invoke -n evmscc -c '{\"Args\":[\"mycc\", \"some\", \"args\", \"to\", \"the cc\"]}'` in a shellscript or something (evminvoke.sh) and hide the `evmscc`","username":"muralisr","ts":"2018-02-02T18:00:31.442Z"}
{"msg":"we should avoid special casing and wrapping and start a precedent","username":"muralisr","ts":"2018-02-02T18:01:08.163Z"}
{"msg":"Doesn't this also act as a special case though? In all the other chaincodes you are directly calling the chaincode you wish to use. So a user would have to remember that `evm` bytecode  is different. I don't think it is the same situation as using the `qscc` because that is meant for users to invoke when querying the ledger. Saying all of that, I do prefer a solution where we don't add a language flag. just not sure that directly sending calls to the `evmscc` is a better approach.","username":"swetha","ts":"2018-02-02T18:07:09.524Z"}
{"msg":"But for now, at least initially, I am okay with users have to directly call `evmscc`. We can always change that in the future. We don't get that ability if we add the language flag. It would not be as easy to remove","username":"swetha","ts":"2018-02-02T18:08:46.767Z"}
{"msg":"But for now, I am okay with users have to directly call `evmscc`. We can always change that in the future. We don't get that ability if we add the language flag. It would not be as easy to remove","username":"swetha","ts":"2018-02-02T18:08:46.767Z"}
{"msg":"I don't thnk of it as \"special case\" ... it may be a question of semantics. we can think of the evmscc VM _as_ the chaincode and it manages some code (\"mycc\") ","username":"muralisr","ts":"2018-02-02T18:41:40.239Z"}
{"msg":"I don't thnk of it as \"special case\" ... it may be a question of semantics. we can think of the evmscc _as_ the chaincode and it manages some code (\"mycc\") ","username":"muralisr","ts":"2018-02-02T18:41:40.239Z"}
{"msg":"but sure, we can revisit later","username":"muralisr","ts":"2018-02-02T18:42:00.022Z"}
{"msg":"Sorry for late response... I'm more inclined to be as close to Fabric semantics as possible, where\n> user installs a chaincode `mycc`, and then invokes it\ninstead of\n> user installs a chaincode `mycc`, keep track of the type of it, and look it up when it makes a chaincode invocation.\n\nFrom a pure Ehereum DApp point of view, we could always translate *all* the invocations to `emvscc` calls in web3 adapter. However, if user may install all different type of chaincode, then it's an overhead for user","username":"guoger","ts":"2018-02-04T13:07:28.955Z"}
{"msg":"cc @muralisr @swetha ","username":"guoger","ts":"2018-02-04T13:07:32.789Z"}
{"msg":"what do you think? cc @muralisr @swetha ","username":"guoger","ts":"2018-02-04T13:07:32.789Z"}
{"msg":"@guoger in the original spirit of not modifying fabric (and adding evm specific code to CLI falls into that category) I'd say lets not do that for now. as @swetha points out, easy enough to add it later if that;s the right thing to do but hard to remove once its in","username":"muralisr","ts":"2018-02-04T13:28:22.379Z"}
{"msg":"as long as we keep changes only to the EVM platfrom and evmscc and rest of the fabric untouched...","username":"muralisr","ts":"2018-02-04T13:44:54.935Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=kdgkHdoSKXjzZPP3B) @muralisr had a very brief discussion with @muralisr , for our first MVP (let's call it phase 1), we probably should keep Fabric code as untouched as possible, even though it may twist developer experience a bit, i.e. user needs to keep track of types of installed chaincode, and for `evm` chaincode, it needs to explicitly call `evm`","username":"guoger","ts":"2018-02-04T14:29:30.272Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=kdgkHdoSKXjzZPP3B","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=kdgkHdoSKXjzZPP3B","remote":true,"fileId":null,"fileName":null}]}
{"msg":"cc @swetha ","username":"guoger","ts":"2018-02-04T14:29:59.734Z"}
{"msg":"@guoger `user needs to keep track of types of installed chaincode` - user does not need the `type of chaincode` (golang, java, etc) at the the time of invoke/query as you are just passing args to the running chaincode. ... unless you are thinkibg of something else which I;m missing. In any case, this does seem to be a good compromise for now","username":"muralisr","ts":"2018-02-04T15:39:55.890Z"}
{"msg":"@muralisr, the user will have to keep track that for evm chaincodes calls must go to the `evmscc` and the chaincode. So user doesn't have to worry about all other types, just `evm` type","username":"swetha","ts":"2018-02-04T20:28:34.949Z"}
{"msg":"@muralisr  yup, users need to at least keep track of evm chaincodes so that they know when to call `evmscc` directly. (obviously for those who use Fabric to run evm code *only*, it's not necessary)","username":"guoger","ts":"2018-02-05T01:33:38.141Z"}
{"msg":"also [https://github.com/guoger/fabric/blob/FAB-6590-evm/core/endorser/endorser.go#L156|this part] is quite necessary because we need to *avoid launching evm chaincode*, and dispatch this into `evmscc` instead","username":"guoger","ts":"2018-02-05T02:43:05.823Z"}
{"msg":"also [this part|https://github.com/guoger/fabric/blob/FAB-6590-evm/core/endorser/endorser.go#L156] is quite necessary because we need to *avoid launching evm chaincode*, and dispatch this into `evmscc` instead","username":"guoger","ts":"2018-02-05T02:43:05.823Z"}
{"msg":"also [this part](https://github.com/guoger/fabric/blob/FAB-6590-evm/core/endorser/endorser.go#L156) is quite necessary because we need to *avoid launching evm chaincode*, and dispatch this into `evmscc` instead","username":"guoger","ts":"2018-02-05T02:43:05.823Z"}
{"msg":"We thought about storing evm bytecode into ledger so `evmscc` doesn't need to consult `lscc` for the bytecode for every invocation. However, this doesn't work:\n- during instantiation, `lscc` writes `ChaincodeData` with name `mycc`\n- `evmscc` writes bytecode to ledger under namespace `evmscc`\n- during validation, [this check](https://github.com/hyperledger/fabric/blob/master/core/scc/vscc/validator_onevalidsignature.go#L432) would fail\nWe probably have 3 options here:\n- if it's evm chaincode, use _evmscc_ as `ChaincodeData.Name` instead of _mycc_. (very hacky)\n- during invocation, check if bytecode exists in `evmscc` ledger, if not, query `lscc` for bytecode and store it in ledger (cache bytecode)\n- rollback to what we had for PoC, where `evmscc` consults `lscc` for every invocation (overhead, but works)","username":"guoger","ts":"2018-02-05T09:08:11.127Z"}
{"msg":"I'm more inclined towards the third, and mark the second as future improvement","username":"guoger","ts":"2018-02-05T09:08:56.737Z"}
{"msg":"cc @swetha ","username":"guoger","ts":"2018-02-05T09:09:20.689Z"}
{"msg":"@guoger: I agree with you. Lets stick with 3 for now, and then we can improve to the  second option as a future improvement","username":"swetha","ts":"2018-02-05T19:00:57.489Z"}
{"msg":"update the patch","username":"guoger","ts":"2018-02-06T08:46:17.959Z"}
{"msg":"updated the patch","username":"guoger","ts":"2018-02-06T08:46:17.959Z"}
{"msg":"@swetha @guoger @jtclark just to let you know I've had a stomach bug all night. I think there's a chance I'll rally by the time its our meeting, but just to give you a head's up I might not be able to make it","username":"silasdavis","ts":"2018-02-07T10:18:47.830Z"}
{"msg":"@silasdavis no worries! take care! btw, if you have a quick answer to the question I posted in #burrow-contributors , I'd appreciate it :)","username":"guoger","ts":"2018-02-07T10:49:58.830Z"}
{"msg":"@silasdavis yes, please feel better :-)","username":"jtclark","ts":"2018-02-07T12:56:17.017Z"}
{"msg":"Thanks all I just woke up - feeling a little fuzzy - but I'd like to go ahead with the call just to get things rolling @guoger I'll take a look at that later my PM","username":"silasdavis","ts":"2018-02-07T14:21:12.395Z"}
{"msg":"@silasdavis https://github.com/hyperledger/fabric-sdk-go/blob/master/api/apitxn/chclient/chclient.go#L66-L87","username":"swetha","ts":"2018-02-07T15:23:54.829Z"}
{"msg":"Some EVM info: https://github.com/pirapira/awesome-ethereum-virtual-machine","username":"silasdavis","ts":"2018-02-07T15:24:55.364Z"}
{"msg":"Solidity/EVM compatibility issue we are working through: https://github.com/hyperledger/burrow/issues/674 ","username":"silasdavis","ts":"2018-02-07T15:30:34.098Z"}
{"msg":"Test cases: https://github.com/monax/bosmarmot/tree/master/monax/tests","username":"silasdavis","ts":"2018-02-07T15:32:07.679Z"}
{"msg":"@jtclark https://github.com/monax/bosmarmot/tree/master/test ","username":"silasdavis","ts":"2018-02-07T15:35:49.626Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2018-02-12T20:06:28.304Z","type":"ul"}
{"msg":"Has joined the channel.","username":"eclairamb","ts":"2018-02-17T17:59:55.890Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yzhivkov","ts":"2018-02-25T18:33:28.237Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kakuzu","ts":"2018-02-26T20:10:17.883Z","type":"uj"}
{"msg":"Has joined the channel.","username":"wrannaman","ts":"2018-02-26T21:04:32.111Z","type":"uj"}
{"msg":"I think we do need the concept of *accounts* for evm integration. Take the voting app here as an example: https://solidity.readthedocs.io/en/develop/solidity-by-example.html#voting\nwhen chair person assigns the _right to vote_ to a voter, it actually looks up and update variables using voter's address as the key. And when that actual voter invokes `vote`, the contract checks `msg.sender` to retrieve caller's address, which is used to lookup the map. This can be depicted by following code snippet:\n```\n    struct Voter {\n        uint weight; // weight is accumulated by delegation\n        bool voted;  // if true, that person already voted\n        address delegate; // person delegated to\n        uint vote;   // index of the voted proposal\n    }\n\n    /// Give your vote (including votes delegated to you)\n    /// to proposal `proposals[proposal].name`.\n    function vote(uint proposal) public {\n        Voter storage sender = voters[msg.sender];\n        require(!sender.voted);\n        sender.voted = true;\n        sender.vote = proposal;\n\n        // If `proposal` is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        proposals[proposal].voteCount += sender.weight;\n    }\n```\n\nI synced up with @swetha today and noticed that to introduce token in Fabric, accounts are also required. In our current poc, we follow the pattern of burrow to *compute account address from public key*, which can be retrieved using `stub.GetCreator()`. I wonder where we could track the effort of token work, and align the design\n\ncc @cbf @mastersingh24 @swetha ","username":"guoger","ts":"2018-02-27T09:26:08.749Z"}
{"msg":"Has joined the channel.","username":"mastersingh24","ts":"2018-02-27T09:26:09.046Z","type":"uj"}
{"msg":"+1 I think that any token support would need an account. It seems to me to be fundamental in many use cases. ","username":"cbf","ts":"2018-02-27T12:26:53.760Z"}
{"msg":"If the Ethereum world view is anything, it is account(/public key identity)-oriented programming... The `SENDER` and `ORIGIN` opcodes are the way the EVM exposes this. You can and do often build your own domain accounts on top - very often in the case of 'wallet' contracts, such as multisig wallets or just general purpose delegates that have more structure than the native account model (same flavour as @guoger's `Voter` example) - but you still end up tethering those to collections of native accounts since they are the signed source of transactions... I know this has come up before, but I've not fully understood how you are doing without accounts now...?","username":"silasdavis","ts":"2018-02-27T13:25:11.892Z"}
{"msg":"Has joined the channel.","username":"salmanbaset","ts":"2018-02-27T13:59:08.128Z","type":"uj"}
{"msg":"@silasdavis,currently our poc we are limited in the types of contracts we can use. We create an address based on the user's public key, but there is no account associated with the address. Anything that refers back to users becomes a problem. So we are rethinking that piece now","username":"swetha","ts":"2018-02-27T17:34:25.077Z"}
{"msg":"Has joined the channel.","username":"chandrakanthm","ts":"2018-02-28T09:54:12.553Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=eeMyqrQQRJhxWqCn9) @cbf I wonder if there's an ongoing effort that we could join?","username":"guoger","ts":"2018-03-01T06:38:20.146Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=eeMyqrQQRJhxWqCn9","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=eeMyqrQQRJhxWqCn9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"none has been started, I would suggest a proposal be drafted to start the discussion","username":"cbf","ts":"2018-03-01T12:38:48.740Z"}
{"msg":"Has joined the channel.","username":"igetgames","ts":"2018-03-02T17:41:53.309Z","type":"uj"}
{"msg":"@guoger I'd be interested in helping draft that if you have some thoughts. Initially I was thinking of putting a spec together for a native token to fabric but it seems like the EVM integration has more momentum. ","username":"wrannaman","ts":"2018-03-02T22:29:16.063Z"}
{"msg":"@wrannaman : That would be great! The EVM integration design doc is here: https://docs.google.com/document/d/1xZfdtFiIFvHI7UZAze2xbm5hhgaDHGRBMusozKfpOck/edit?usp=sharing\nWe were talking about starting another proposal doc specific to adding accounts to Fabric. I will send that to you once it is started. Probably early next week. Unless you already have something, we would love to work off of what you already have.","username":"swetha","ts":"2018-03-02T23:22:42.806Z"}
{"msg":"Has joined the channel.","username":"dave.enyeart","ts":"2018-03-06T17:05:02.773Z","type":"uj"}
{"msg":"dave.enyeart","username":"rjones","ts":"2018-03-06T18:12:41.313Z","type":"subscription-role-added"}
{"msg":"@mastersingh24 I overheard that you guys are planning to change some of system chaincodes, e.g. `lscc` to be plugin. Is it being worked on? We have a problem while writing `evm chaincode` as system chaincode plugin, and I assume you guys would face the same:\n- Both `fabric` and `fabric-cc` probably depend on a common pkg, let's say `pkgA`.\n- `fabric-cc` sits in a different repo as `fabric`, you need to vendor `pkgA` for both of them.\n- then you compile `fabric-cc` to .so lib, it wraps all the dependencies into it, including `pkgA`. \n- `fabric` loads `pkgA`\n- `fabric` loads `fabric-cc.so`, which also loads `pkgA`, which is a new instance of it other than the one in previous step\nThen we end up loading `pkgA` twice. In our case, we have this `golang.org/x/net/trace`, which registers to an endpoint `/Debug/requests`, and the second attempt would panic due to double-registration.","username":"guoger","ts":"2018-03-08T03:47:02.867Z"}
{"msg":"I wonder how you guys plan to solve this problem? We are thinking we could have `fabric-cc` as a git submodule in `fabric` repo, so they would share the same `vendor`. However, this is still inconvenient cuz every time `fabric-cc` needs a new dependency, it needs to be vendored into `fabric`/vendor","username":"guoger","ts":"2018-03-08T03:48:29.983Z"}
{"msg":"cc @swetha ","username":"guoger","ts":"2018-03-08T03:48:36.558Z"}
{"msg":"cc @swetha @muralisr ","username":"guoger","ts":"2018-03-08T03:48:36.558Z"}
{"msg":"Has joined the channel.","username":"CodeReaper","ts":"2018-03-18T17:26:20.915Z","type":"uj"}
{"msg":"Has joined the channel.","username":"robinrob","ts":"2018-03-19T22:16:30.438Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ShikarSharma","ts":"2018-03-20T22:43:04.281Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sharifahmad2061","ts":"2018-03-21T17:39:48.182Z","type":"uj"}
{"msg":"@guoger @swetha I need to demo the fabric-evm code for an analyst briefing on Tuesday","username":"cbf","ts":"2018-03-31T21:09:48.999Z"}
{"msg":"@guoger @swetha I'd like to demo the fabric-evm code for an analyst briefing on Tuesday","username":"cbf","ts":"2018-03-31T21:09:48.999Z"}
{"msg":"is it in operational shape?","username":"cbf","ts":"2018-03-31T21:09:56.543Z"}
{"msg":"I could edit the video down if needed, but doing other fabric and composer live so...","username":"cbf","ts":"2018-03-31T21:10:39.937Z"}
{"msg":"@cbf yes, we have both `evm` and `web3` ready for a live demo. We will come up with a complete instruction for you today.","username":"guoger","ts":"2018-04-02T09:47:33.454Z"}
{"msg":"you guys rock! ;-)","username":"cbf","ts":"2018-04-02T11:04:16.901Z"}
{"msg":"@cbf: We ran into issues for showing `web3`. The most recent `web3` library has API changes, so we don't have those instructions ready yet. If you want to run an e2e test you use this: https://github.com/swetharepakula/fabric/tree/master/examples/first-network. If you want to demo using the peer cli you can follow these instructions: https://github.com/swetharepakula/fabric/blob/master/core/scc/evmscc/Instructions.md. \ncc/ @guoger ","username":"swetha","ts":"2018-04-03T07:03:06.213Z"}
{"msg":"building now","username":"cbf","ts":"2018-04-03T11:17:13.694Z"}
{"msg":"@cbf let me know if you run into problem","username":"guoger","ts":"2018-04-03T11:26:05.360Z"}
{"msg":"I did, but I resolved;-)","username":"cbf","ts":"2018-04-03T11:41:05.098Z"}
{"msg":"basically, I had old version of tools installed in my path (I need to fix that) and the byfn.sh path is incorrectly including ../bin but the build outputs to ../../.build/bin ","username":"cbf","ts":"2018-04-03T11:42:05.240Z"}
{"msg":"secondly, using 1.1, you need an updated configtx.yaml that includes the capabilities section","username":"cbf","ts":"2018-04-03T11:42:31.484Z"}
{"msg":"I'll submit a patch","username":"cbf","ts":"2018-04-03T11:42:39.560Z"}
{"msg":"@cbf sounds good! We were actually using e2e_cli for testing purpose and had evmscc implemented as plugin (you could follow steps here https://github.com/guoger/fabric-chaincode-evm to build and run it). However, Swetha had some problems building it, so we decided to go down a safer path for your demo and have evmscc embedded into Fabric","username":"guoger","ts":"2018-04-03T12:02:08.283Z"}
{"msg":"so, you guys are tracking the pluggable ESCC yes? assume that will be the vehicle to get this merged/operational","username":"cbf","ts":"2018-04-03T13:15:42.516Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8729?jql=description%20~%20chaincode%20AND%20statusCategory%20!%3D%20Done%20AND%20type%20!%3D%20Bug%20ORDER%20BY%20updated%20DESC","username":"cbf","ts":"2018-04-03T13:17:20.056Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8729","username":"cbf","ts":"2018-04-03T13:17:20.056Z"}
{"msg":"yacov would have more details","username":"cbf","ts":"2018-04-03T13:19:03.699Z"}
{"msg":"oh, we were aware of this work but didn't really know much details. Although we did talk to divyank who helped us with Golang plugin and caveats","username":"guoger","ts":"2018-04-03T14:21:44.137Z"}
{"msg":"Has joined the channel.","username":"Rumeel_Hussain","ts":"2018-04-03T15:03:48.151Z","type":"uj"}
{"msg":"that is the path to getting this into 1.2 @swetha @guoger ","username":"cbf","ts":"2018-04-04T11:50:45.590Z"}
{"msg":"do me a favor and share with @yacovm the requirements you have for ESCC and VSCC to implement the pluggable EVMscc","username":"cbf","ts":"2018-04-04T12:11:08.885Z"}
{"msg":"Has joined the channel.","username":"yacovm","ts":"2018-04-04T12:11:09.007Z","type":"uj"}
{"msg":"I have a recording of the next gen endorsement and validation","username":"yacovm","ts":"2018-04-04T12:11:44.854Z"}
{"msg":"and a presentation","username":"yacovm","ts":"2018-04-04T12:11:48.373Z"}
{"msg":"@guoger ","username":"yacovm","ts":"2018-04-04T12:11:50.693Z"}
{"msg":"eg what capabilities you need","username":"cbf","ts":"2018-04-04T12:11:54.542Z"}
{"msg":"of the playback that was when I presented it","username":"yacovm","ts":"2018-04-04T12:12:01.286Z"}
{"msg":"@yacovm have you seen their current impl?","username":"cbf","ts":"2018-04-04T12:12:11.664Z"}
{"msg":"I haven't seen anything","username":"yacovm","ts":"2018-04-04T12:12:18.563Z"}
{"msg":"also not sure who is \"their\"","username":"yacovm","ts":"2018-04-04T12:12:34.866Z"}
{"msg":"@guoger and @swetha https://chat.hyperledger.org/channel/fabric-evm?msg=uPoEAo4JNApLRZqDa","username":"cbf","ts":"2018-04-04T12:12:50.206Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=uPoEAo4JNApLRZqDa","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=uPoEAo4JNApLRZqDa","remote":true,"fileId":null,"fileName":null}]}
{"msg":"also https://chat.hyperledger.org/channel/fabric-evm?msg=bmh3rd9378CJhymdJ","username":"cbf","ts":"2018-04-04T12:13:08.538Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=bmh3rd9378CJhymdJ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=bmh3rd9378CJhymdJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"hmmm, Chris - I'm a bit overloaded these days so I think it'd make sense that the EVM guys would read the design of the pluggable ESCC and VSCC","username":"yacovm","ts":"2018-04-04T12:13:53.877Z"}
{"msg":"and will contact me for issues","username":"yacovm","ts":"2018-04-04T12:13:58.980Z"}
{"msg":"does that make sense?","username":"yacovm","ts":"2018-04-04T12:14:03.796Z"}
{"msg":"they know better than I can hope to analyze their needs","username":"yacovm","ts":"2018-04-04T12:14:39.021Z"}
{"msg":"yes, I am not looking to have you do more... I am hoping that they can help you, so access to the spec would be ideal (I could not find it linked to the JIRA)https://jira.hyperledger.org/browse/FAB-8531","username":"cbf","ts":"2018-04-04T12:14:54.296Z"}
{"msg":"i linked it to the epic","username":"yacovm","ts":"2018-04-04T12:15:22.664Z"}
{"msg":"oh wait","username":"yacovm","ts":"2018-04-04T12:15:40.134Z"}
{"msg":"ah, this is the problem with the 1.2 dashboard, epics are not included in the set of issues","username":"cbf","ts":"2018-04-04T12:16:27.316Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8729","username":"cbf","ts":"2018-04-04T12:16:30.711Z"}
{"msg":"@cbf  https://jira.hyperledger.org/browse/FAB-8729","username":"yacovm","ts":"2018-04-04T12:17:35.508Z"}
{"msg":"i linked it to here ^ ","username":"yacovm","ts":"2018-04-04T12:17:41.996Z"}
{"msg":"i thought putting it on the epic makes most sense","username":"yacovm","ts":"2018-04-04T12:17:56.043Z"}
{"msg":"also @simsc said he will upload my recording to youtube.... ","username":"yacovm","ts":"2018-04-04T12:19:09.740Z"}
{"msg":"Has joined the channel.","username":"simsc","ts":"2018-04-04T12:19:09.848Z","type":"uj"}
{"msg":"(any news on that btw? ;) )","username":"yacovm","ts":"2018-04-04T12:19:17.285Z"}
{"msg":"nope","username":"cbf","ts":"2018-04-04T12:30:00.821Z"}
{"msg":"I have the recording as a file, I can send it to anyone who wants...","username":"yacovm","ts":"2018-04-04T12:30:58.392Z"}
{"msg":"@yacovm operations flow seems to suffer the same issues as chaincode","username":"cbf","ts":"2018-04-04T12:34:31.278Z"}
{"msg":"nope","username":"yacovm","ts":"2018-04-04T12:34:42.190Z"}
{"msg":"it compiles the stuff when you install it","username":"yacovm","ts":"2018-04-04T12:34:53.097Z"}
{"msg":"not when you load it !","username":"yacovm","ts":"2018-04-04T12:34:57.110Z"}
{"msg":"installing the plugin on each peer","username":"cbf","ts":"2018-04-04T12:35:02.672Z"}
{"msg":"oh, that?","username":"yacovm","ts":"2018-04-04T12:35:09.320Z"}
{"msg":"it is a hard requirement for me","username":"yacovm","ts":"2018-04-04T12:35:15.255Z"}
{"msg":"yes","username":"cbf","ts":"2018-04-04T12:35:15.438Z"}
{"msg":"I have nothing to do against that","username":"yacovm","ts":"2018-04-04T12:35:20.521Z"}
{"msg":"we can discuss it offline","username":"yacovm","ts":"2018-04-04T12:35:25.703Z"}
{"msg":"Has joined the channel.","username":"victer","ts":"2018-04-13T11:54:26.860Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Rednish","ts":"2018-04-17T19:29:56.762Z","type":"uj"}
{"msg":"Has joined the channel.","username":"navaneethaa","ts":"2018-04-18T10:47:07.719Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Titret","ts":"2018-04-19T00:53:23.155Z","type":"uj"}
{"msg":"Has joined the channel.","username":"hosemose","ts":"2018-04-24T04:58:53.050Z","type":"uj"}
{"msg":"review chain starts from https://gerrit.hyperledger.org/r/#/c/18667/","username":"guoger","ts":"2018-04-24T16:52:52.490Z"}
{"msg":"@swetha feel free to push your cache changes into it","username":"guoger","ts":"2018-04-24T16:53:19.583Z"}
{"msg":"and let's kickoff review process","username":"guoger","ts":"2018-04-24T16:53:36.227Z"}
{"msg":"might be easier to separate the vendored gorp from our code in separate CRs","username":"cbf","ts":"2018-04-24T20:05:53.190Z"}
{"msg":"vendor stuff first","username":"cbf","ts":"2018-04-24T20:06:06.924Z"}
{"msg":"also, we probably should align with use of dep","username":"cbf","ts":"2018-04-24T20:07:06.898Z"}
{"msg":"also, we probably should align with use of dep","username":"cbf","ts":"2018-04-24T20:07:06.898Z"}
{"msg":"nevermind... I see you are","username":"cbf","ts":"2018-04-24T20:07:51.463Z"}
{"msg":"I have some makefile additions once you've addressed my comments","username":"cbf","ts":"2018-04-24T23:42:47.587Z"}
{"msg":"I piled on your makefile CR https://gerrit.hyperledger.org/r/c/20995/","username":"cbf","ts":"2018-04-25T11:54:12.407Z"}
{"msg":"added linters","username":"cbf","ts":"2018-04-25T11:54:16.516Z"}
{"msg":"@guoger thanks for the review, addressed comments https://gerrit.hyperledger.org/r/c/20995/","username":"cbf","ts":"2018-04-25T18:04:49.823Z"}
{"msg":"@cbf @swetha rebased remaining patches and i think they are good to go","username":"guoger","ts":"2018-04-26T07:23:49.539Z"}
{"msg":"@guoger https://gerrit.hyperledger.org/r/c/20961/6 is a \"draft\" and while it has all votes, cannot be merged","username":"cbf","ts":"2018-04-26T11:00:04.582Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/20963/ needs to be rebased","username":"cbf","ts":"2018-04-26T11:01:38.048Z"}
{"msg":"I'll need to rebase mine on yours","username":"cbf","ts":"2018-04-26T11:02:32.224Z"}
{"msg":"@cbf rebased","username":"guoger","ts":"2018-04-26T12:35:25.588Z"}
{"msg":"I rebased again;-)","username":"cbf","ts":"2018-04-26T13:08:48.242Z"}
{"msg":"ready to merge","username":"cbf","ts":"2018-04-26T13:08:56.729Z"}
{"msg":"@guoger this is also ready for another +2","username":"cbf","ts":"2018-04-26T13:10:02.590Z"}
{"msg":"this one is also ready now https://gerrit.hyperledger.org/r/c/20965","username":"cbf","ts":"2018-04-26T13:11:28.243Z"}
{"msg":"I trust we are good for the review with design this morning?","username":"cbf","ts":"2018-04-27T13:30:44.541Z"}
{"msg":"yup","username":"guoger","ts":"2018-04-27T13:34:47.611Z"}
{"msg":"gr8","username":"cbf","ts":"2018-04-27T13:38:26.091Z"}
{"msg":"btw, Marie Wieck wants a demo;-)","username":"cbf","ts":"2018-04-27T13:39:05.283Z"}
{"msg":"Has joined the channel.","username":"nickgaski","ts":"2018-04-27T15:22:11.912Z","type":"uj"}
{"msg":"so this works with vanilla solidity code?  You don't have to code against the chaincode interface? ","username":"nickgaski","ts":"2018-04-27T15:35:21.308Z"}
{"msg":"It looks like the State Writer module of the evmscc handles the conversion... is that correct? ","username":"nickgaski","ts":"2018-04-27T15:36:29.609Z"}
{"msg":"@nickgaski we currently supports 0.4.x, and you would be writing pure Solidity code.","username":"guoger","ts":"2018-04-27T15:51:01.420Z"}
{"msg":"Has joined the channel.","username":"chainsaw","ts":"2018-04-27T15:51:37.036Z","type":"uj"}
{"msg":"State Writer piece is converting calls from Burrow EVM to Fabric cc apis","username":"guoger","ts":"2018-04-27T15:51:38.221Z"}
{"msg":"thanks Jay.  So in theory, could a single web3 application interface with the evmscc for state information on a Fabric channel and then proxy data to a deployed contract on ethereum main net or private chain?","username":"nickgaski","ts":"2018-04-27T15:54:08.225Z"}
{"msg":"@nickgaski in theory yes. but the data would be bridged externally from fabric to others","username":"guoger","ts":"2018-04-27T16:23:55.486Z"}
{"msg":"meaning two networks are still \"isolated\"","username":"guoger","ts":"2018-04-27T16:24:46.297Z"}
{"msg":"right right.  this is very cool work.  nicely done ","username":"nickgaski","ts":"2018-04-27T16:30:44.276Z"}
{"msg":"thx!","username":"guoger","ts":"2018-04-27T16:34:23.353Z"}
{"msg":"@nickgaski we are working on a web3 proxy server as well which translates web3 calls to go-sdk calls","username":"cbf","ts":"2018-04-27T19:16:56.550Z"}
{"msg":"oh that's awesome.  so you could set a `web3.provider` against a Fabric node.  ","username":"nickgaski","ts":"2018-04-27T19:21:53.281Z"}
{"msg":"@cbf - are there weekly or bi-weekly meetings for this? ","username":"nickgaski","ts":"2018-04-27T19:22:46.143Z"}
{"msg":"nah, just this channel","username":"cbf","ts":"2018-04-27T19:25:03.059Z"}
{"msg":"though I suppose @guoger and @swetha do hangouts a bit","username":"cbf","ts":"2018-04-27T19:25:28.761Z"}
{"msg":"if you are interested in helping, glad to have it","username":"cbf","ts":"2018-04-27T19:25:48.025Z"}
{"msg":"as for the web3.provider it would be to the proxy","username":"cbf","ts":"2018-04-27T19:26:24.428Z"}
{"msg":"we are still debating best approach to handling the proxy","username":"cbf","ts":"2018-04-27T19:26:40.269Z"}
{"msg":"initially, we think one account per proxy since it has the keys... we are exploring better options, too","username":"cbf","ts":"2018-04-27T19:27:17.694Z"}
{"msg":"presently, we derive the ethereum acct from the user's certificate registered with msp","username":"cbf","ts":"2018-04-27T19:28:16.301Z"}
{"msg":"@nickgaski ^^","username":"cbf","ts":"2018-04-27T19:28:41.645Z"}
{"msg":"Thanks for the info Chris.  This is some really exciting development.  I'll continue pestering you guys on this channel and hopefully help out as I can.  ","username":"nickgaski","ts":"2018-04-27T19:34:33.609Z"}
{"msg":"we'd love feedback from consensys ","username":"cbf","ts":"2018-04-27T19:35:26.632Z"}
{"msg":"Has joined the channel.","username":"SjirNijssen","ts":"2018-05-01T18:42:55.141Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Aswath8687","ts":"2018-05-01T19:47:30.100Z","type":"uj"}
{"msg":"Has joined the channel.","username":"carlcraig","ts":"2018-05-01T21:44:12.706Z","type":"uj"}
{"msg":"Has joined the channel.","username":"krisc 4","ts":"2018-05-02T03:30:37.574Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kevin-s-wang","ts":"2018-05-03T02:36:46.624Z","type":"uj"}
{"msg":"Has joined the channel.","username":"avlakshmy","ts":"2018-05-07T12:49:31.176Z","type":"uj"}
{"msg":"Has joined the channel.","username":"avkrishnan","ts":"2018-05-08T09:34:28.522Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Starseven","ts":"2018-05-08T11:56:16.146Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JohnH_Traede","ts":"2018-05-10T04:43:16.726Z","type":"uj"}
{"msg":"Has joined the channel.","username":"versus","ts":"2018-05-14T09:05:41.532Z","type":"uj"}
{"msg":"Has joined the channel.","username":"soc1024","ts":"2018-05-19T23:08:10.179Z","type":"uj"}
{"msg":"hi","username":"soc1024","ts":"2018-05-19T23:08:22.535Z"}
{"msg":"i'm writing some kind of multiparty cryptography application in Python, but I want to use fabric as the backend for a \"broadcast\" component of it","username":"soc1024","ts":"2018-05-19T23:18:49.951Z"}
{"msg":"it's easiest for me to express what i want using Solidity and test it using ethereumjs-testrpc, and I'm hoping it can just run easily on top of fabric-em","username":"soc1024","ts":"2018-05-19T23:19:27.640Z"}
{"msg":"it's easiest for me to express what i want using Solidity and test it using ethereumjs-testrpc, and I'm hoping it can just run easily on top of fabric-evm","username":"soc1024","ts":"2018-05-19T23:19:27.640Z"}
{"msg":"it's easiest for me to express what i want using Solidity and test it using ethereumjs-testrpc and web3, and I'm hoping it can just run easily on top of fabric-evm too","username":"soc1024","ts":"2018-05-19T23:19:27.640Z"}
{"msg":"Has joined the channel.","username":"MenterQuick","ts":"2018-05-20T06:14:48.265Z","type":"uj"}
{"msg":"@soc1024 that's exactly the use case we'd like to address in this work. I would expect many hiccups though, as this work is still rudimentary, but we are more than happy to help you out!","username":"guoger","ts":"2018-05-21T01:43:45.939Z"}
{"msg":"@guoger is there a recommended way to run a fabric instance with the evm framework loaded, maybe a simple docker thing? i am looking at https://github.com/swetharepakula/fabric/tree/FAB-6590-poc but do not see the relevant docs or something obvious","username":"soc1024","ts":"2018-05-21T01:45:45.569Z"}
{"msg":"and: cool, thanks!","username":"soc1024","ts":"2018-05-21T01:46:40.089Z"}
{"msg":"@soc1024 here's a peer image with evmscc embedded: `docker pull guoger/fabric-peer:evmscc-embedded`, with which you could launch a fabric network using docker-compose. that should give you a good starting point","username":"guoger","ts":"2018-05-21T03:03:59.349Z"}
{"msg":"@jimthematrix hi Jim, saw your comment in JIRA and google doc, thanks a LOT!\n- that design doc is a bit outdated comparing to our current implementation w.r.t contract deployment. we indeed inspect `to` field to identify a contract deploy tx.\n- if we derive creator from org, instead of individual user, it does align with Fabric architecture. However it does not give a consistent experience to Eth developers. Again, we have not decided on this, and it may change when we finish the design of native accounts in Fabric. We are very much in need of help!\nI'll update the design doc to be more consistent with our implementation, as more people may be interested in this work.","username":"guoger","ts":"2018-05-21T04:26:40.373Z"}
{"msg":"Has joined the channel.","username":"jimthematrix","ts":"2018-05-21T04:26:41.124Z","type":"uj"}
{"msg":"also, this channel is where we discuss this integration, you are welcome to hang out here :)","username":"guoger","ts":"2018-05-21T04:27:13.893Z"}
{"msg":"https://github.com/ConsenSys/Tokens <- contains some tests we might leverage","username":"cbf","ts":"2018-05-21T12:56:58.848Z"}
{"msg":"another https://github.com/CryptoverseRocks/token-test-suite","username":"cbf","ts":"2018-05-21T12:57:16.958Z"}
{"msg":"more https://github.com/OpenZeppelin/openzeppelin-solidity","username":"cbf","ts":"2018-05-21T12:57:29.882Z"}
{"msg":"http://truffleframework.com/tutorials/building-dapps-for-quorum-private-enterprise-blockchains","username":"cbf","ts":"2018-05-21T13:03:00.347Z"}
{"msg":"@swetha where is the code you use to derive an ethereum account id from our x509 certs?","username":"cbf","ts":"2018-05-21T14:49:11.211Z"}
{"msg":"@cbf : https://github.com/hyperledger/fabric-chaincode-evm/blob/master/plugin/evmscc.go#L161-L178","username":"swetha","ts":"2018-05-21T16:17:00.919Z"}
{"msg":"And that corresponds to the call `web3.eth.accounts`","username":"swetha","ts":"2018-05-21T16:17:18.621Z"}
{"msg":"oh, interesting...","username":"cbf","ts":"2018-05-21T16:41:52.922Z"}
{"msg":"ok, let me see if I understand correctly","username":"cbf","ts":"2018-05-21T16:42:02.745Z"}
{"msg":"you have a call sent by a fabric account, that just sends the method 'account' and that returns the id string that is derived from the caller's certificate","username":"cbf","ts":"2018-05-21T16:43:06.911Z"}
{"msg":"have I got that right?","username":"cbf","ts":"2018-05-21T16:43:15.545Z"}
{"msg":"@swetha ^^","username":"cbf","ts":"2018-05-21T16:44:44.492Z"}
{"msg":"Yes","username":"swetha","ts":"2018-05-21T16:44:58.361Z"}
{"msg":"One thing we could do is repeat the code that we derive the account address in the proxy","username":"swetha","ts":"2018-05-21T16:45:33.517Z"}
{"msg":"yes, I was thinking where we could leverage this","username":"cbf","ts":"2018-05-21T16:45:49.777Z"}
{"msg":"the problem though is that if I have an ethereum wallet, it is going to sign with a different ec ","username":"cbf","ts":"2018-05-21T16:46:24.333Z"}
{"msg":"Once we introduce accounts into fabric, there also may be a better place/way to derive the account address","username":"swetha","ts":"2018-05-21T16:46:28.535Z"}
{"msg":"I guess we could go with a model that we don't support wallets","username":"cbf","ts":"2018-05-21T16:46:59.836Z"}
{"msg":"my concern though is that that is what will be expected","username":"cbf","ts":"2018-05-21T16:47:10.283Z"}
{"msg":"I think we need to investigate further what is involved to supporting wallets, specifically ethereum ones","username":"swetha","ts":"2018-05-21T16:48:47.035Z"}
{"msg":"yes","username":"cbf","ts":"2018-05-21T16:58:16.651Z"}
{"msg":"also... thinking that we might want to explore a grpc provider?","username":"cbf","ts":"2018-05-21T16:58:39.029Z"}
{"msg":"https://github.com/ethereum/web3.js/blob/develop/lib/web3/httpprovider.js","username":"cbf","ts":"2018-05-21T16:58:47.694Z"}
{"msg":"that might be a bit much","username":"cbf","ts":"2018-05-21T16:59:02.729Z"}
{"msg":"not sure","username":"cbf","ts":"2018-05-21T16:59:04.870Z"}
{"msg":"we don't need to be all things","username":"cbf","ts":"2018-05-21T16:59:15.849Z"}
{"msg":"Currently we do have that http provider, that is what the Proxy is","username":"swetha","ts":"2018-05-21T16:59:24.458Z"}
{"msg":"yes","username":"cbf","ts":"2018-05-21T16:59:32.383Z"}
{"msg":"What we could do next is support IPC","username":"swetha","ts":"2018-05-21T16:59:34.484Z"}
{"msg":"but, replacing that","username":"cbf","ts":"2018-05-21T16:59:38.768Z"}
{"msg":"nah... would need all the support in the proxy itself and still needs certs","username":"cbf","ts":"2018-05-21T17:01:21.385Z"}
{"msg":"we need to think though some use cases","username":"cbf","ts":"2018-05-21T17:29:56.212Z"}
{"msg":"if I have an account on public ethereum network... do I interact with it on fabric? seems to me only if we actually want to interop between the two","username":"cbf","ts":"2018-05-21T17:30:50.964Z"}
{"msg":"not sure we are ready for thet","username":"cbf","ts":"2018-05-21T17:30:58.596Z"}
{"msg":"not sure we are ready for that","username":"cbf","ts":"2018-05-21T17:30:58.596Z"}
{"msg":"I agree, I am not sure we want to do that. I don't see much gain for the user","username":"swetha","ts":"2018-05-21T17:38:28.225Z"}
{"msg":"> if I have an account on public ethereum network... do I interact with it on fabric? seems to me only if we actually want to interop between the two\nI'm thinking more of interconnecting two networks, e.g. Ethereum <=> Fabric, so the same transaction could be broadcasted to and processed by both network. Even better, if fabric could become the abstraction layer that glue multiple public network together.","username":"guoger","ts":"2018-05-22T01:36:35.660Z"}
{"msg":"one obvious use case could be the exchange, which is kinda centralized today.","username":"guoger","ts":"2018-05-22T01:37:34.837Z"}
{"msg":"Has joined the channel.","username":"xixuejia","ts":"2018-05-22T02:30:54.166Z","type":"uj"}
{"msg":"yes","username":"cbf","ts":"2018-05-22T11:33:43.584Z"}
{"msg":"this is what I meant by interop","username":"cbf","ts":"2018-05-22T11:34:01.722Z"}
{"msg":"I just added new epic for the proxy service FAB-10273","username":"cbf","ts":"2018-05-22T13:14:18.101Z"}
{"msg":"we need to build a development plan for that, but more importantly and urgently, we need to build a test plan for the plugin that includes running a broad range of solidity contracts and finding out what works and what doesn't","username":"cbf","ts":"2018-05-22T13:15:12.684Z"}
{"msg":"because for 1.2, we will want to have a solid caveat on where we are so as not to leave people with unfulfilled expectations","username":"cbf","ts":"2018-05-22T13:15:52.082Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=JK5cCR7NJWivRtyYa) @guoger thanks Jay. where can I find more details on the native accounts design for Fabric?","username":"jimthematrix","ts":"2018-05-22T14:14:34.114Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=JK5cCR7NJWivRtyYa","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=JK5cCR7NJWivRtyYa","remote":true,"fileId":null,"fileName":null}]}
{"msg":"_waves_","username":"cbf","ts":"2018-05-22T14:45:22.648Z"}
{"msg":"@jimthematrix we haven't got a design yet","username":"cbf","ts":"2018-05-22T14:46:28.300Z"}
{"msg":"would love input... have been exploring a few relevant specs etc","username":"cbf","ts":"2018-05-22T14:46:53.567Z"}
{"msg":"@cbf @guoger @swetha I read the code in the Swetha's repos and was getting the impression that it's trying to enable a \"native\" ethereum DApps developer experience by mocking (a subset of) the JSON-RPC APIs via the proxy server that one has to set up with the network config yaml. thinking back on Jay's response above whether the design should cater to a more \"fabric-native\" experience or \"ethereum-native\", my observation is that if we want to enable a truly ethereum native experience we would have to ask the developers to get unique certs for each ethereum accounts, and I think that can get really clunky (and scary) really quickly with all those certs to manage","username":"jimthematrix","ts":"2018-05-22T14:48:29.428Z"}
{"msg":"(ah ok got it, thanks Chris for clarifying that)","username":"jimthematrix","ts":"2018-05-22T14:49:11.748Z"}
{"msg":"@jimthematrix yeah, if you look above, we've been discussing this","username":"cbf","ts":"2018-05-22T14:55:10.975Z"}
{"msg":"on the one hand, enabling one to use any existing ethereum account in fabric would be great... but it means we need to implement the bitcoin crypto in the msp for signing and validation","username":"cbf","ts":"2018-05-22T14:56:59.377Z"}
{"msg":"I think until ethereum introduces org accounts, the current expectation is each transaction can be signed with any random key and it's up to the smart contract to enforce ACL with msg.sender. i wonder if a new MSP impl is in order to accommodate this kind of paradigm","username":"jimthematrix","ts":"2018-05-22T14:57:01.503Z"}
{"msg":"ha I think we are saying the same thing","username":"jimthematrix","ts":"2018-05-22T14:57:33.255Z"}
{"msg":"well, cannot be rando sig... was thinking we wanted it to be registered","username":"cbf","ts":"2018-05-22T14:57:49.142Z"}
{"msg":"now, what we were also thinking (well, at least me) is that we could take the id of the account and register that, generating a fabric-specific certificate","username":"cbf","ts":"2018-05-22T14:58:38.450Z"}
{"msg":"that can be difficult, with popular client side deterministic key derivation techniques like HD Wallet, each transaction can be signed with a different key","username":"jimthematrix","ts":"2018-05-22T14:58:39.105Z"}
{"msg":"yeah, different thing","username":"cbf","ts":"2018-05-22T14:59:16.269Z"}
{"msg":"that's like our idemix","username":"cbf","ts":"2018-05-22T14:59:26.156Z"}
{"msg":"\"well, cannot be rando sig\" - that's the main difference in how ethereum treats identities (until there's org identities) vs. fabric.","username":"jimthematrix","ts":"2018-05-22T15:00:02.791Z"}
{"msg":"in ethereum it's really any private key can send transactions and the nodes will happily take them and pass it on to the smart contracts to decide what to do with them","username":"jimthematrix","ts":"2018-05-22T15:00:41.941Z"}
{"msg":"even Quorum works the same way","username":"jimthematrix","ts":"2018-05-22T15:00:55.079Z"}
{"msg":"fabric could certainly enforce a more organized setup and require keys to be registered first, and issue certs for them, maybe through an authenticated fabric-ca client","username":"jimthematrix","ts":"2018-05-22T15:05:07.864Z"}
{"msg":"\"we need to implement the bitcoin crypto in the msp for signing and validation\" - this would simply be validating that the signature matches the public key, there's no validating of the identity itself like with PKI certs in fabric today","username":"jimthematrix","ts":"2018-05-22T15:06:58.826Z"}
{"msg":"right, quorum is just permissioned vis who can run a node","username":"cbf","ts":"2018-05-22T15:24:39.327Z"}
{"msg":"that really isn't full permissioning","username":"cbf","ts":"2018-05-22T15:24:46.527Z"}
{"msg":"you cannot just hide behind a firewall","username":"cbf","ts":"2018-05-22T15:25:00.006Z"}
{"msg":"right, so I was looking at using fabric-ca-client exactly ","username":"cbf","ts":"2018-05-22T15:26:26.624Z"}
{"msg":"Has joined the channel.","username":"ahmadzafar","ts":"2018-05-22T16:25:41.683Z","type":"uj"}
{"msg":"@cbf @guoger @jimthematrix : Though this document is far from complete, Jay and I had started a proposal document to have single place to write down our thoughts: https://docs.google.com/document/d/1mrIgx-GLMRwMKbs04PoDPuqUUt56kpaz1o419sMfbe4/edit?usp=sharing","username":"swetha","ts":"2018-05-22T17:37:08.863Z"}
{"msg":"There is not much design in there yet, more of why we wanted to introduce accounts","username":"swetha","ts":"2018-05-22T17:40:49.746Z"}
{"msg":";-)","username":"cbf","ts":"2018-05-22T17:41:41.448Z"}
{"msg":"so, balances and storing the account... I think that needs to be in MVP","username":"cbf","ts":"2018-05-22T17:42:00.288Z"}
{"msg":"I need to give more thought, but seems to me that any interest is going to be predicated on being able to run erc contracts","username":"cbf","ts":"2018-05-22T17:43:27.217Z"}
{"msg":"thoughts?","username":"cbf","ts":"2018-05-22T17:43:58.550Z"}
{"msg":"btw, one of the early adopters wants us to add gas back!","username":"cbf","ts":"2018-05-22T17:45:50.885Z"}
{"msg":"Yes I do think being able to run erc contracts is important. It sounded like people were interested in that last week.","username":"swetha","ts":"2018-05-22T17:47:43.875Z"}
{"msg":"Do they want gas back in the sense they want to configure how much gas per transaction or they want to give accounts a certain amount of gas at a time to rate limit the number of transactions they can run","username":"swetha","ts":"2018-05-22T17:48:37.326Z"}
{"msg":"yes","username":"cbf","ts":"2018-05-22T18:00:38.690Z"}
{"msg":"exactly","username":"cbf","ts":"2018-05-22T18:00:41.476Z"}
{"msg":"I think that we can finagle that for 1.3 but it will be a requirement for one of our sponsor users","username":"cbf","ts":"2018-05-22T18:01:20.884Z"}
{"msg":"my understanding is that the idea is that gas will be doled out","username":"cbf","ts":"2018-05-22T18:01:51.480Z"}
{"msg":"so it can be used to rate-limit the system generally","username":"cbf","ts":"2018-05-22T18:02:05.683Z"}
{"msg":"so, with regards to balances... I'm coming up to speed but it seems that token balances are maintained in the token contract's datastore","username":"cbf","ts":"2018-05-22T18:03:14.915Z"}
{"msg":"https://github.com/bokkypoobah/Tokens#fixed-supply-token","username":"cbf","ts":"2018-05-22T18:22:43.686Z"}
{"msg":"actually, I tried that one in remix and it has compile errors...","username":"cbf","ts":"2018-05-22T19:02:03.211Z"}
{"msg":"still poking around for some samples we can use for testing","username":"cbf","ts":"2018-05-22T19:02:22.948Z"}
{"msg":"We also learned at consensus that Ethereum is looking into combining EOAs and Contract Accounts so that there is only one type of account. Still searching for the actual proposal to see how that would affect us","username":"swetha","ts":"2018-05-22T19:29:06.424Z"}
{"msg":"interesting","username":"cbf","ts":"2018-05-22T19:38:47.544Z"}
{"msg":"I'm still trying to sort out where the eoa information is hosted","username":"cbf","ts":"2018-05-22T19:39:03.309Z"}
{"msg":"the refactor has made it in release 0.18.0 of burrow :)","username":"swetha","ts":"2018-05-22T22:08:47.403Z"}
{"msg":"yay","username":"cbf","ts":"2018-05-23T10:44:05.324Z"}
{"msg":"https://github.com/christo4ferris/fixedtoken","username":"cbf","ts":"2018-05-24T00:51:00.902Z"}
{"msg":"I deployed a simple fixed supply erc20 contract","username":"cbf","ts":"2018-05-24T00:51:19.219Z"}
{"msg":"going to develop some tests to interact with it","username":"cbf","ts":"2018-05-24T00:51:46.985Z"}
{"msg":"cbf$ node getAddr.js\nAddress: 44a5026393f2eab185922d69971e1398ae9bd424\nName: Example Fixed Supply Token\nOwner: 0x613ac660a26a66a52eadc02cda9f6c7e7326e675\nBalance: 1,000,000\nSymbol: FIXED","username":"cbf","ts":"2018-05-24T00:52:27.178Z"}
{"msg":"ok, will need to understand why I can query the balance but not transfer","username":"cbf","ts":"2018-05-24T01:20:25.262Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=fs38s7g4dvHRHK4mg) @cbf because we don't support it yet :( the `value` arg is hardcoded 0 when we call burrow evm. main reason is because we didn't implement `balance` api of account, mostly because we don't have account. ","username":"guoger","ts":"2018-05-24T02:24:33.175Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=fs38s7g4dvHRHK4mg","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=fs38s7g4dvHRHK4mg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"hmmm","username":"cbf","ts":"2018-05-24T02:26:54.546Z"}
{"msg":"the contract manages state ","username":"cbf","ts":"2018-05-24T02:27:18.759Z"}
{"msg":"this isn‚Äôt ether","username":"cbf","ts":"2018-05-24T02:27:39.600Z"}
{"msg":"it is a token","username":"cbf","ts":"2018-05-24T02:27:46.069Z"}
{"msg":"every time evmscc is invoked, we instantiate a brand new `callerAccount` using creator's public address, that is EOA data is not persisted","username":"guoger","ts":"2018-05-24T02:32:09.847Z"}
{"msg":"i guess we could actually have a quick prototype to persist it into ledger, so we load the data from ledger to create `callerAcct`","username":"guoger","ts":"2018-05-24T02:33:03.437Z"}
{"msg":"I am not using eoa data","username":"cbf","ts":"2018-05-24T02:33:15.188Z"}
{"msg":"`balance` is part of eoa data","username":"guoger","ts":"2018-05-24T02:33:24.453Z"}
{"msg":"```\ntype ConcreteAccount struct {\n\tAddress     Address\n\tPublicKey   PublicKey\n\tSequence    uint64\n\tBalance     uint64\n\tCode        Bytecode\n\tStorageRoot []byte\n\tPermissions ptypes.AccountPermissions\n}\n```","username":"guoger","ts":"2018-05-24T02:33:53.851Z"}
{"msg":"here's what an account in burrow would contain","username":"guoger","ts":"2018-05-24T02:34:10.742Z"}
{"msg":"will need to explore this more but that balance is ether if i understand","username":"cbf","ts":"2018-05-24T02:34:33.457Z"}
{"msg":"yes","username":"guoger","ts":"2018-05-24T02:34:39.718Z"}
{"msg":"nothing to do with my contract","username":"cbf","ts":"2018-05-24T02:34:48.931Z"}
{"msg":"oh... you are creating erc20 token","username":"guoger","ts":"2018-05-24T02:35:08.280Z"}
{"msg":"yes","username":"cbf","ts":"2018-05-24T02:35:13.703Z"}
{"msg":"sorry, I misunderstood","username":"guoger","ts":"2018-05-24T02:35:14.150Z"}
{"msg":"what error did you get?","username":"guoger","ts":"2018-05-24T02:36:30.974Z"}
{"msg":"none... like I said, I need to look closer","username":"cbf","ts":"2018-05-24T02:49:11.538Z"}
{"msg":"just that the orig balance is unchanged","username":"cbf","ts":"2018-05-24T02:49:31.665Z"}
{"msg":"ah, interesting... so, the tokens are transferring to the other account but the contract does not seem to be deducting them from the contract balance","username":"cbf","ts":"2018-05-24T11:15:37.703Z"}
{"msg":"I can successfully transfer balances to an account, and then from those accounts to/from eachother","username":"cbf","ts":"2018-05-24T11:22:53.784Z"}
{"msg":"I can successfully transfer balances to an account, and then from those accounts to/from each other","username":"cbf","ts":"2018-05-24T11:22:53.784Z"}
{"msg":"ok, just weird - redeployed and now managing the owner balance correctly","username":"cbf","ts":"2018-05-24T13:03:03.668Z"}
{"msg":"ah, found what I messed up initially, the account of the owner is hard coded in the contract (sigh) and I didn't change originally... followed a different tutorial for essentially the same contract and set that correctly... now working as expected. What was weird is that it worked at all","username":"cbf","ts":"2018-05-24T13:23:31.669Z"}
{"msg":"@cbf  are you trying this https://github.com/christo4ferris/fixedtoken/blob/master/tok.sol","username":"guoger","ts":"2018-05-24T14:10:32.978Z"}
{"msg":"yes, have it working now","username":"cbf","ts":"2018-05-24T14:14:14.005Z"}
{"msg":"I pushed a new contract etc","username":"cbf","ts":"2018-05-24T14:14:42.305Z"}
{"msg":"@guoger ^^","username":"cbf","ts":"2018-05-24T14:15:14.139Z"}
{"msg":"you can play around with getBalance.js with the deployed contract","username":"cbf","ts":"2018-05-24T14:15:36.913Z"}
{"msg":"btw, have we pulled in the latest from burrow master (v0.18) for the plugin?","username":"cbf","ts":"2018-05-24T14:16:15.137Z"}
{"msg":"not yet, it's using develop. I'm making the change now","username":"guoger","ts":"2018-05-24T14:20:49.581Z"}
{"msg":"can you please add tasks (not subtasks) to the epic for the remaining steps... I would include any system and functional testing we need to add to test the plugin itself","username":"cbf","ts":"2018-05-24T14:34:37.129Z"}
{"msg":"we definitely want the plugin itself solid for 1.2 (end of june)","username":"cbf","ts":"2018-05-24T14:35:04.457Z"}
{"msg":"@guoger @swetha ","username":"cbf","ts":"2018-05-24T14:35:23.592Z"}
{"msg":"as for the proxy, we should start work on a plan to harden and get the code into hyerledger","username":"cbf","ts":"2018-05-24T14:35:54.664Z"}
{"msg":"as for the proxy, we should start work on a plan to harden and get the code into hyperledger","username":"cbf","ts":"2018-05-24T14:35:54.664Z"}
{"msg":"As for the proxy, I am working on updating the proxy: https://github.com/swetharepakula/fabric-chaincode-evm/tree/update-proxy.","username":"swetha","ts":"2018-05-24T14:58:42.693Z"}
{"msg":"I will take a look at what else we need for the plugin","username":"swetha","ts":"2018-05-24T14:59:01.204Z"}
{"msg":"so we need to focus on the plugin for now","username":"cbf","ts":"2018-05-24T15:26:26.065Z"}
{"msg":"I was looking at leveraging the fabric/integration \"framework\" (ginkgo) for testing the plugin","username":"cbf","ts":"2018-05-24T15:27:24.909Z"}
{"msg":"but I also was not keen on a bunch of cut and paste","username":"cbf","ts":"2018-05-24T15:27:39.767Z"}
{"msg":"@guoger digging deeper, I see that the plugin is still using a 1.1 base fabric","username":"cbf","ts":"2018-05-24T15:43:08.201Z"}
{"msg":"i noticed that pluggable plugin is finished this week... will look into that","username":"guoger","ts":"2018-05-24T15:52:08.370Z"}
{"msg":"yes","username":"cbf","ts":"2018-05-24T15:53:03.109Z"}
{"msg":"so we need to strip out redundant packages","username":"cbf","ts":"2018-05-24T15:53:15.020Z"}
{"msg":"where possible","username":"cbf","ts":"2018-05-24T15:53:34.095Z"}
{"msg":"thinking logging ","username":"cbf","ts":"2018-05-24T15:54:27.314Z"}
{"msg":"in fact, the only logging is debug and that can be removed","username":"cbf","ts":"2018-05-24T16:00:10.226Z"}
{"msg":"reducing the need to import flogging","username":"cbf","ts":"2018-05-24T16:00:24.244Z"}
{"msg":"that leaves the shim package and protos... protos are likely fine... as is the shim I think","username":"cbf","ts":"2018-05-24T16:03:44.837Z"}
{"msg":"I'm thinking that instead of e2e_cli we could do a derivative of fabric/integration with a simple use case of one peer, solo orderer, proxy (when we merge something) and drive some transactions through a series of contracts as a test environment","username":"cbf","ts":"2018-05-24T17:31:43.965Z"}
{"msg":"When you say leveraging ginkgo do you mean for the integration tests? The plugin is already using ginkgo","username":"swetha","ts":"2018-05-24T18:11:13.192Z"}
{"msg":"yes, but the integration tests go further and deploy a couple peers, orderer etc without needing to build containers etc","username":"cbf","ts":"2018-05-24T18:31:56.194Z"}
{"msg":"so it might be a ligter-weight e2e test","username":"cbf","ts":"2018-05-24T18:44:27.589Z"}
{"msg":"so it might be a lighter-weight e2e test","username":"cbf","ts":"2018-05-24T18:44:27.589Z"}
{"msg":"also, I think we have over-complicated the build","username":"cbf","ts":"2018-05-24T18:46:28.321Z"}
{"msg":"we just need to compile the plugin, we don't (to my knowledge) need to build in a fabric environment","username":"cbf","ts":"2018-05-24T18:47:14.548Z"}
{"msg":"eg I just manually compiled and then ran e2e","username":"cbf","ts":"2018-05-24T18:51:04.424Z"}
{"msg":"Oh that is interesting. We had an issue that if we didn't build it in the fabric environment because of the static referencing we would have a problem with the shared libraries","username":"swetha","ts":"2018-05-24T19:04:11.004Z"}
{"msg":"And in terms of removing dependencies, we are using the msp package is pulling in a lot of pieces of fabric, including logging,","username":"swetha","ts":"2018-05-24T19:05:23.504Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=6TXcEwJPq9oqy6SfE) @cbf Are these the tests? https://github.com/hyperledger/fabric/tree/master/integration","username":"swetha","ts":"2018-05-24T20:12:09.645Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=6TXcEwJPq9oqy6SfE","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=6TXcEwJPq9oqy6SfE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"yes","username":"cbf","ts":"2018-05-24T20:35:01.804Z"}
{"msg":"@swetha can you please add SPDX header to Gopkg.toml in your CR","username":"cbf","ts":"2018-05-24T20:38:33.575Z"}
{"msg":"not passing checks","username":"cbf","ts":"2018-05-24T20:38:42.067Z"}
{"msg":"Adding it","username":"swetha","ts":"2018-05-24T20:40:20.290Z"}
{"msg":"Added another patch with the SPDX header","username":"swetha","ts":"2018-05-24T20:41:48.894Z"}
{"msg":"thx","username":"cbf","ts":"2018-05-24T20:43:26.089Z"}
{"msg":"@swetha https://gerrit.hyperledger.org/r/c/22309/","username":"cbf","ts":"2018-05-24T20:45:49.618Z"}
{"msg":"Has left the channel.","username":"jtclark","ts":"2018-05-24T20:52:18.286Z","type":"ul"}
{"msg":"I've got the logging","username":"cbf","ts":"2018-05-24T21:02:34.190Z"}
{"msg":"I am looking into the integration tests. I will create a task for that oo","username":"swetha","ts":"2018-05-24T21:06:05.467Z"}
{"msg":"think I'll create a sample app out of the simple contract","username":"cbf","ts":"2018-05-24T21:12:05.438Z"}
{"msg":"looking at https://gerrit.hyperledger.org/r/#/c/22311/1, how do we do logging for `evmscc` then?","username":"guoger","ts":"2018-05-25T03:06:47.346Z"}
{"msg":"i was thinking to have `evmscc` emit logs under name `evmscc`, and `evm` should be under `evmscc/evm`","username":"guoger","ts":"2018-05-25T03:07:43.077Z"}
{"msg":"(`evm` logs are super verbose)","username":"guoger","ts":"2018-05-25T03:08:07.684Z"}
{"msg":"also, why don't we have `hyperledger/fabric-baseimage:x86_64-0.4.8` in docker repo? I only see amd64, s390x and ppc64le...","username":"guoger","ts":"2018-05-25T03:26:28.107Z"}
{"msg":"amd64 is the new x86_64","username":"cbf","ts":"2018-05-25T09:52:51.986Z"}
{"msg":"right...","username":"guoger","ts":"2018-05-25T10:35:56.726Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-10385","username":"cbf","ts":"2018-05-25T10:53:01.315Z"}
{"msg":"@cbf reply https://gerrit.hyperledger.org/r/#/c/22311/\n> those debug statements were not very useful, what logging do you think we need?\nI'm more inclined to keep the logger here cuz:\n- increase verbosity\n- evm logs can be redirected to it. it's currently no-op logger","username":"guoger","ts":"2018-05-25T16:40:02.666Z"}
{"msg":"hmmm","username":"cbf","ts":"2018-05-25T16:42:48.755Z"}
{"msg":"ok ","username":"cbf","ts":"2018-05-25T16:43:52.351Z"}
{"msg":"added a docker image build step and simplified the build","username":"cbf","ts":"2018-05-25T19:59:04.846Z"}
{"msg":"also abandoned the logger CR","username":"cbf","ts":"2018-05-25T19:59:38.496Z"}
{"msg":"I am taking a look at the simplified build process CR","username":"swetha","ts":"2018-05-25T21:48:28.583Z"}
{"msg":"thx","username":"cbf","ts":"2018-05-25T23:20:58.371Z"}
{"msg":"I am not able to build an image that works with the e2e example with the new dockerfile. Have not figured out what the error is quite yet. I am still digging into it","username":"swetha","ts":"2018-05-25T23:46:52.954Z"}
{"msg":"hmmm...","username":"cbf","ts":"2018-05-26T00:03:31.741Z"}
{"msg":"replied in CR","username":"guoger","ts":"2018-05-26T01:23:17.826Z"}
{"msg":"well, the build part I messed up... but now is not loading plugin at all","username":"cbf","ts":"2018-05-26T01:47:45.230Z"}
{"msg":"I have multi-stage build correctly building linux image","username":"cbf","ts":"2018-05-26T01:48:50.572Z"}
{"msg":"but AFAICT the plugin logic is not being executed","username":"cbf","ts":"2018-05-26T01:49:08.211Z"}
{"msg":"hmmm... I think that the latest tag is b0rking me;-) ","username":"cbf","ts":"2018-05-26T01:54:11.000Z"}
{"msg":"are you building plugin on your mac?","username":"guoger","ts":"2018-05-26T02:00:48.871Z"}
{"msg":"oh ffs, there's a gotag needed in the peer build","username":"cbf","ts":"2018-05-26T02:09:35.285Z"}
{"msg":"no in a multi-stage build","username":"cbf","ts":"2018-05-26T02:09:51.563Z"}
{"msg":"got it","username":"cbf","ts":"2018-05-26T02:15:04.370Z"}
{"msg":"well, almost","username":"cbf","ts":"2018-05-26T02:34:28.434Z"}
{"msg":"sigh","username":"cbf","ts":"2018-05-26T02:40:44.420Z"}
{"msg":"I'm going yo have to discuss with yacov","username":"cbf","ts":"2018-05-26T02:49:51.717Z"}
{"msg":"it doesn't appear to be working correctly","username":"cbf","ts":"2018-05-26T02:50:01.736Z"}
{"msg":"I had to compile the peer specially to add 'pluginsenabled' tag","username":"cbf","ts":"2018-05-26T02:50:24.932Z"}
{"msg":"now it finds the plugin but panics immediately","username":"cbf","ts":"2018-05-26T02:50:41.466Z"}
{"msg":"https://gist.github.com/christo4ferris/563090c5b673f364e646776b4ab28d1e","username":"cbf","ts":"2018-05-26T03:03:59.012Z"}
{"msg":"I pushed another changeset with multistage build that I believe should work","username":"cbf","ts":"2018-05-26T03:07:08.164Z"}
{"msg":"you also need to rebuild the fabric-peer image with GO_TAGS += pluginsenabled nopkcs11","username":"cbf","ts":"2018-05-26T03:07:45.276Z"}
{"msg":"so that it enables the plugin feature and omits all the pkcs11 baggage","username":"cbf","ts":"2018-05-26T03:08:06.518Z"}
{"msg":"I'm beat... will check with Yacov tomorrow","username":"cbf","ts":"2018-05-26T03:08:31.490Z"}
{"msg":"`GO_TAGS=pluginsenabled EXPERIMENTAL=false DOCKER_DYNAMIC_LINK=true make peer-docker`","username":"guoger","ts":"2018-05-26T03:27:07.742Z"}
{"msg":"this is how I build peer today, and we need to install `libltdl-dev` in peer","username":"guoger","ts":"2018-05-26T03:27:24.703Z"}
{"msg":"so dockerfile for peer is also slightly modified","username":"guoger","ts":"2018-05-26T03:27:44.034Z"}
{"msg":"I tried installing libtdl-dev when I built our image","username":"cbf","ts":"2018-05-26T03:28:20.944Z"}
{"msg":"that resulted in a bigger mess","username":"cbf","ts":"2018-05-26T03:28:30.297Z"}
{"msg":"DOCKER_DYNAMIC hmmm","username":"cbf","ts":"2018-05-26T03:28:56.919Z"}
{"msg":"yea....","username":"guoger","ts":"2018-05-26T03:29:47.017Z"}
{"msg":"and I suspect you'll hit another problem because you ought to build plugin *with* peer code, otherwise symbol resolution doesn't work. that's why we had this \"weird\" build process today","username":"guoger","ts":"2018-05-26T03:30:26.229Z"}
{"msg":"symbol resolution should work","username":"cbf","ts":"2018-05-26T03:30:52.892Z"}
{"msg":"interesting new stack trace","username":"cbf","ts":"2018-05-26T03:39:47.150Z"}
{"msg":"goroutine 1 [running]:\nnet/http.(*ServeMux).Handle(0x1d64f60, 0x7f7ca55921a2, 0xf, 0x1551100, 0x7f7ca5c711a8)\n\t/opt/go/src/net/http/server.go:2353 +0x243\nnet/http.(*ServeMux).HandleFunc(0x1d64f60, 0x7f7ca55921a2, 0xf, 0x7f7ca5c711a8)\n\t/opt/go/src/net/http/server.go:2368 +0x57\nnet/http.HandleFunc(0x7f7ca55921a2, 0xf, 0x7f7ca5c711a8)\n\t/opt/go/src/net/http/server.go:2380 +0x50\ngithub.com/hyperledger/fabric-chaincode-evm/vendor/golang.org/x/net/trace.init.0()\n\t/opt/gopath/src/github.com/hyperledger/fabric-chaincode-evm/vendor/golang.org/x/net/trace/trace.go:115 +0x44\nplugin.open(0xc42023c2e0, 0xf, 0xc420202b60, 0x0, 0x0)\n\t/opt/go/src/plugin/plugin_dlopen.go:113 +0xb21\nplugin.Open(0xc42023c2e0, 0x12, 0x1569320, 0xc420202b60, 0x0)\n\t/opt/go/src/plugin/plugin.go:32 +0x35\ngithub.com/hyperledger/fabric/core/scc.loadPlugin(0xc42023c2e0, 0x12, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/core/scc/loadsysccs.go:70 +0x175\ngithub.com/hyperledger/fabric/core/scc.loadSysCCsWithConfig(0xc4200b4370, 0x1, 0x1)\n\t/opt/gopath/src/github.com/hyperledger/fabric/core/scc/loadsysccs.go:51 +0xa6\ngithub.com/hyperledger/fabric/core/scc.loadSysCCs.func1()\n\t/opt/gopath/src/github.com/hyperledger/fabric/core/scc/loadsysccs.go:44 +0x97\nsync.(*Once).Do(0x1d83808, 0x14cc720)\n\t/opt/go/src/sync/once.go:44 +0xbe\ngithub.com/hyperledger/fabric/core/scc.loadSysCCs(0xc4204360a0, 0xc4200b4338, 0xc4204360a0, 0x154dd20)\n\t/opt/gopath/src/github.com/hyperledger/fabric/core/scc/loadsysccs.go:38 +0x39\ngithub.com/hyperledger/fabric/core/scc.CreateSysCCs(0x15665a0, 0xc4200b4338, 0xc4204360a0, 0x154dd20, 0xc420487aa0, 0x263, 0x3c0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/core/scc/register_pluginsenabled.go:20 +0x98\ngithub.com/hyperledger/fabric/peer/node.registerChaincodeSupport(0xc420180bd0, 0xc42003809b, 0x1b, 0x155f3a0, 0xc4200b4270, 0x154dd20, 0xc420487aa0, 0x0, 0x0, 0x12cdf20, ...)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:631 +0x5df\ngithub.com/hyperledger/fabric/peer/node.serve(0x1d83720, 0x0, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:231 +0xaf8\ngithub.com/hyperledger/fabric/peer/node.glob..func1(0x1c7ccc0, 0x1d83720, 0x0, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:111 +0x9c\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x1c7ccc0, 0x1d83720, 0x0, 0x0, 0x1c7ccc0, 0x1d83720)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:698 +0x46d\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x1c7d320, 0x1d65c30, 0xf, 0x2)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:783 +0x2e4\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x1c7d320, 0x2, 0xffffffffffffffff)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:736 +0x2b\nmain.main()\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:97 +0x5bf","username":"cbf","ts":"2018-05-26T03:39:49.511Z"}
{"msg":"open calls init on all ","username":"cbf","ts":"2018-05-26T03:40:37.641Z"}
{"msg":"getting closer","username":"cbf","ts":"2018-05-26T03:41:59.830Z"}
{"msg":"pushed another patchset","username":"cbf","ts":"2018-05-26T03:43:12.863Z"}
{"msg":"heading to bed","username":"cbf","ts":"2018-05-26T03:43:17.462Z"}
{"msg":"this is the symbol resolution thing...","username":"guoger","ts":"2018-05-26T03:44:48.966Z"}
{"msg":"basically, plugin and peer rely on `net`, which should be loaded once","username":"guoger","ts":"2018-05-26T03:45:18.366Z"}
{"msg":"although, they resolve to two different symbol, therefore this pkg is loaded twice","username":"guoger","ts":"2018-05-26T03:45:40.643Z"}
{"msg":"they try to register to the same endpoint during `init`, resulting in panic for the second attempt","username":"guoger","ts":"2018-05-26T03:46:21.790Z"}
{"msg":"do you see something like \"endpoint already in use\" before the stack?","username":"guoger","ts":"2018-05-26T03:47:39.614Z"}
{"msg":"well this is a bug with pluggable then","username":"cbf","ts":"2018-05-26T03:54:24.035Z"}
{"msg":"need to tease apart the shim dependencies","username":"cbf","ts":"2018-05-26T03:55:03.726Z"}
{"msg":"they should be minimal","username":"cbf","ts":"2018-05-26T03:55:18.051Z"}
{"msg":"literally, all we should need is the interface","username":"cbf","ts":"2018-05-26T03:56:06.325Z"}
{"msg":"this is the discussion we had: https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=pjqrayBr4TA5XHRs9","username":"guoger","ts":"2018-05-26T04:17:09.156Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=pjqrayBr4TA5XHRs9","url":"https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=pjqrayBr4TA5XHRs9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"so yes, it's a problem for all plugins","username":"guoger","ts":"2018-05-26T04:17:22.490Z"}
{"msg":"sigh well, it might be easier to do the following ","username":"cbf","ts":"2018-05-26T11:56:43.423Z"}
{"msg":"clone fabric","username":"cbf","ts":"2018-05-26T11:57:08.524Z"}
{"msg":"copy fabric-chaincode-evm/plugin into fabric repo","username":"cbf","ts":"2018-05-26T11:58:05.674Z"}
{"msg":"copy  fabric-chaincode-evm/statemanager into fabric repo","username":"cbf","ts":"2018-05-26T11:58:26.112Z"}
{"msg":"sed the package path names","username":"cbf","ts":"2018-05-26T11:59:45.536Z"}
{"msg":"run dep ensure to pick up missing dependencies","username":"cbf","ts":"2018-05-26T12:00:01.822Z"}
{"msg":"build plugin","username":"cbf","ts":"2018-05-26T12:00:08.468Z"}
{"msg":"that's essentially what `build.sh` does today. instead of copy statemanager to fabric repo, we are copying it to fabric/vendor, so we don't need to sed package path name","username":"guoger","ts":"2018-05-26T13:01:14.341Z"}
{"msg":"but i would agree that making shim dependencies minimal is a better approach","username":"guoger","ts":"2018-05-26T13:01:44.877Z"}
{"msg":"one more difference is that we are copying fabric to a temp folder, instead of cloning it. but i guess we ought to change it to clone a specific version of fabric","username":"guoger","ts":"2018-05-26T13:03:39.976Z"}
{"msg":"I almost have it","username":"cbf","ts":"2018-05-26T13:07:31.961Z"}
{"msg":"dealing with dep craziness","username":"cbf","ts":"2018-05-26T13:07:45.911Z"}
{"msg":"although one could argue we could build fabric as we need it too","username":"cbf","ts":"2018-05-26T13:08:25.386Z"}
{"msg":"yup, we stick with `govendor` instead of `dep`, because `dep` couldn't output what we wanted","username":"guoger","ts":"2018-05-26T13:08:29.026Z"}
{"msg":"well dep is more precise","username":"cbf","ts":"2018-05-26T13:08:54.474Z"}
{"msg":"which is both a curse and a blessing","username":"cbf","ts":"2018-05-26T13:09:06.574Z"}
{"msg":"LMAO","username":"cbf","ts":"2018-05-26T13:11:42.829Z"}
{"msg":"omg so close","username":"cbf","ts":"2018-05-26T13:11:46.285Z"}
{"msg":"panic: Error opening plugin at path /opt/lib/evmscc.so: plugin.Open(\"/opt/lib/evmscc\"): plugin was built with a different version of package github.com/hyperledger/fabric/idemix\n","username":"cbf","ts":"2018-05-26T13:12:12.248Z"}
{"msg":"so yeah, I think building the peer binary in the same stage as we build the plugin will be best","username":"cbf","ts":"2018-05-26T13:15:29.099Z"}
{"msg":"2018-05-26 13:21:25.589 UTC [sccapi] loadSysCCsWithConfig -> INFO 00e Successfully loaded SCC evmscc from path /opt/lib/evmscc.so\n","username":"cbf","ts":"2018-05-26T13:19:16.145Z"}
{"msg":"YAY","username":"cbf","ts":"2018-05-26T13:19:18.887Z"}
{"msg":"BUT, now escc missing","username":"cbf","ts":"2018-05-26T13:19:25.013Z"}
{"msg":"weird","username":"cbf","ts":"2018-05-26T13:19:26.595Z"}
{"msg":"BOOM!","username":"cbf","ts":"2018-05-26T13:35:45.772Z"}
{"msg":"https://gerrit.hyperledger.org/r/22371","username":"cbf","ts":"2018-05-26T14:03:15.371Z"}
{"msg":"do we have `fabric-buildenv` in docker hub?","username":"guoger","ts":"2018-05-28T02:11:45.884Z"}
{"msg":"also,\n```\nStep 6/18 : RUN EXECUTABLES=go GO_TAGS=pluginsenabled EXPERIMENTAL=false DOCKER_DYNAMIC_LINK=true make peer\n ---> Running in 0a2a524f442e\n.build/bin/peer\nCGO_CFLAGS=\" \" GOBIN=/opt/gopath/src/github.com/hyperledger/fabric/.build/bin go install -tags \"pluginsenabled\" -ldflags \"-X github.com/hyperledger/fabric/common/metadata.Version=1.2.0-snapshot-afdaeb3 -X github.com/hyperledger/fabric/common/metadata.BaseVersion=0.4.8 -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger -X github.com/hyperledger/fabric/common/metadata.Experimental=false\" github.com/hyperledger/fabric/peer\n# github.com/hyperledger/fabric/common/crypto/tlsgen\ncommon/crypto/tlsgen/key.go:36:20: undefined: x509.MarshalPKCS8PrivateKey\n# github.com/hyperledger/fabric/vendor/github.com/docker/docker/pkg/archive\nvendor/github.com/docker/docker/pkg/archive/archive.go:364:5: hdr.Format undefined (type *tar.Header has no field or method Format)\nvendor/github.com/docker/docker/pkg/archive/archive.go:364:15: undefined: tar.FormatPAX\nvendor/github.com/docker/docker/pkg/archive/archive.go:1166:7: hdr.Format undefined (type *tar.Header has no field or method Format)\nvendor/github.com/docker/docker/pkg/archive/archive.go:1166:17: undefined: tar.FormatPAX\nMakefile:256: recipe for target '.build/bin/peer' failed\nmake: *** [.build/bin/peer] Error 2\nThe command '/bin/sh -c EXECUTABLES=go GO_TAGS=pluginsenabled EXPERIMENTAL=false DOCKER_DYNAMIC_LINK=true make peer' returned a non-zero code: 2\nmake: *** [docker] Error 2\n```","username":"guoger","ts":"2018-05-28T02:11:51.372Z"}
{"msg":"@cbf commented on your CR. I propose following changes based on it: https://github.com/guoger/fabric-chaincode-evm/commit/6e08048ee64a00d7eb2e8891b78e807c29407f84","username":"guoger","ts":"2018-05-28T09:17:03.802Z"}
{"msg":"verified locally","username":"guoger","ts":"2018-05-28T09:17:18.437Z"}
{"msg":"except that `buildenv` image is built locally...","username":"guoger","ts":"2018-05-28T09:49:45.293Z"}
{"msg":"yes, buildenv is local only... we could publish I suppose","username":"cbf","ts":"2018-05-28T10:47:57.291Z"}
{"msg":"as for DEBUG v INFO, would be better IMO to set DEBUG locally for checkOSN... the debug in the logs is worthless noise ","username":"cbf","ts":"2018-05-28T10:48:47.097Z"}
{"msg":"@guoger pushed another patchset addressing your comments","username":"cbf","ts":"2018-05-28T18:27:58.693Z"}
{"msg":"once we get to 1.2, we can pull the dependent images and will be much less kludgy","username":"cbf","ts":"2018-05-28T18:28:41.205Z"}
{"msg":"I'll work with ramesh to get the buildenv published - even if only to nexus","username":"cbf","ts":"2018-05-28T18:29:03.832Z"}
{"msg":"@cbf I'm more inclined to keep `evmscc-linux` target, because:\n- we still have the option to load `evmscc.so` into a locally built peer, for dev purpose. (building the whole fabric-peer-evm is just too expensive)\n- you don't need to hardcode missing pkgs in Dockerfile (sed scripting), and you don't need to build evmscc there at all. you could simply make `evmscc-linux` a dependency for `docker`, as I proposed in my example commit","username":"guoger","ts":"2018-05-29T02:35:07.973Z"}
{"msg":"ok, now I am confused","username":"cbf","ts":"2018-05-29T11:30:38.359Z"}
{"msg":"evmscc-linux is not needed for docker","username":"cbf","ts":"2018-05-29T11:30:47.037Z"}
{"msg":"I can add evmscc-linux to make a linux .so but the dependencies will be wrong","username":"cbf","ts":"2018-05-29T11:31:21.180Z"}
{"msg":"I can add evmscc-linux to make a linux .so but the vendored dependencies will be wrong","username":"cbf","ts":"2018-05-29T11:31:21.180Z"}
{"msg":"I can change GOOS so that it can be overridden by setting the env var ","username":"cbf","ts":"2018-05-29T11:33:34.431Z"}
{"msg":"but it won't work","username":"cbf","ts":"2018-05-29T11:34:00.870Z"}
{"msg":"I was sorely tempted to just remove this","username":"cbf","ts":"2018-05-29T11:34:13.702Z"}
{"msg":"the problem we have, actually, is that the whole concept of plugin scc is flawed given the dependencies we need to pull in","username":"cbf","ts":"2018-05-29T11:39:49.335Z"}
{"msg":"we cannot be expecting developers of SCC plugins to have to jump through these hoops","username":"cbf","ts":"2018-05-29T11:57:22.805Z"}
{"msg":"it's just insane","username":"cbf","ts":"2018-05-29T11:57:42.295Z"}
{"msg":"Hi guys, great to see you are on Burrow 0.18.0.... Was just looking over code, can someone explain this line: https://github.com/hyperledger/fabric-chaincode-evm/blob/master/plugin/evmscc.go#L87 ","username":"silasdavis","ts":"2018-05-29T12:45:09.688Z"}
{"msg":"Looks like the zero value is being used to signal deploy","username":"silasdavis","ts":"2018-05-29T12:45:42.724Z"}
{"msg":"we use `(*Address)(nil)` for this","username":"silasdavis","ts":"2018-05-29T12:46:06.647Z"}
{"msg":"one reason is that `ZeroAddress` is actually used for the global permission account address (dubiously perhaps)","username":"silasdavis","ts":"2018-05-29T12:46:31.133Z"}
{"msg":"having said this, it's probably unambiguous in practice","username":"silasdavis","ts":"2018-05-29T12:46:52.937Z"}
{"msg":"thanks!","username":"cbf","ts":"2018-05-29T13:20:42.497Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=P6534BeY2tr46v8tD) @cbf we can make it as a dependency for docker, to get rid of sed scripting, cuz hardcoding missing pkgs is just hard to maintain... (obviously we will eventually get rid of it till shim pkgs are torn apart.)","username":"guoger","ts":"2018-05-29T14:03:53.863Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=P6534BeY2tr46v8tD","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=P6534BeY2tr46v8tD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=CNY8dTLYPKeq4RHiZ) @cbf linux .so is also built within Fabric, so dependencies path are actually correct, which can be used by `make docker`, I've tested this: https://github.com/guoger/fabric-chaincode-evm/commit/6e08048ee64a00d7eb2e8891b78e807c29407f84","username":"guoger","ts":"2018-05-29T14:04:45.560Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=CNY8dTLYPKeq4RHiZ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=CNY8dTLYPKeq4RHiZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=DZaEm6yyb9i3xKZN2) @cbf agreed","username":"guoger","ts":"2018-05-29T14:05:09.371Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=DZaEm6yyb9i3xKZN2","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=DZaEm6yyb9i3xKZN2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"please take a look at the latest patchset... once the base is built, you can build a new plugin in just over a minute, and in ~45 secs once we get libltdl-dev added to baseimage","username":"cbf","ts":"2018-05-29T18:14:40.564Z"}
{"msg":"note that what I am trying to accomplish here is slightly broader than just this plugin","username":"cbf","ts":"2018-05-29T18:15:25.889Z"}
{"msg":"because frankly, the whole concept of scc plugin is flawed given the mess with vendored dependencies","username":"cbf","ts":"2018-05-29T18:16:11.734Z"}
{"msg":"@cbf: Left a comment on gerrit. I think if we should remove the `make evmscc` because the plugin that created that way can't be used. But I do prefer what Jay suggested with make docker depend on the evmscc build.","username":"swetha","ts":"2018-05-29T19:23:10.044Z"}
{"msg":"@cbf: Left a comment on gerrit. I think we should remove the `make evmscc` because the plugin that created that way can't be used. But I do prefer what Jay suggested with make docker depend on the evmscc build.","username":"swetha","ts":"2018-05-29T19:23:10.044Z"}
{"msg":"I agree, scc plugin logic quite flawed right now. I think in the docs for plugin vscc or escc they explicitly state don't use packages from fabric for the same reason","username":"swetha","ts":"2018-05-29T19:24:03.576Z"}
{"msg":"Some of those problems are also because of how plugins work in Go","username":"swetha","ts":"2018-05-29T19:24:22.874Z"}
{"msg":"right but they do not require the shim","username":"cbf","ts":"2018-05-29T19:24:28.871Z"}
{"msg":"@swetha but the evmscc build step needs the whole convoluted copy-paste net the delta blah blah ","username":"cbf","ts":"2018-05-29T19:25:38.286Z"}
{"msg":"I rather just remove the option then and we give directions to people on how to extract the `evmscc.so` from the docker image","username":"swetha","ts":"2018-05-29T19:26:52.442Z"}
{"msg":"Or actually that is could be what make evmscc does and it will depend on docker","username":"swetha","ts":"2018-05-29T19:27:38.642Z"}
{"msg":"Or actually that is could be what `make evmscc` does and it will depend on docker","username":"swetha","ts":"2018-05-29T19:27:38.642Z"}
{"msg":"Or actually that could be what `make evmscc` does and it will depend on docker","username":"swetha","ts":"2018-05-29T19:27:38.642Z"}
{"msg":"it's also going to leave a bunch of orphaned directories in /tmp every time the build fails","username":"cbf","ts":"2018-05-29T19:27:55.811Z"}
{"msg":"That is true, I don't like that either","username":"swetha","ts":"2018-05-29T19:28:36.233Z"}
{"msg":"I think that the multi-stage is cleaner ","username":"cbf","ts":"2018-05-29T19:29:11.138Z"}
{"msg":"and what I am hoping will fall out of this is a simple pattern that I can make generic for plugins","username":"cbf","ts":"2018-05-29T19:30:11.951Z"}
{"msg":"I agree with that idea, but the only concern is that we have no way to extract the plugin itself.","username":"swetha","ts":"2018-05-29T19:31:02.664Z"}
{"msg":"actually, that isn't quite tru","username":"cbf","ts":"2018-05-29T19:31:30.263Z"}
{"msg":"actually, that isn't quite true","username":"cbf","ts":"2018-05-29T19:31:30.263Z"}
{"msg":"We could pull it out of the docker image","username":"swetha","ts":"2018-05-29T19:32:02.788Z"}
{"msg":"you can reference an image in the COPY from=hyperledger/fabric-peer-evm:latest /opt/lib/evmscc.so to a mounted fs","username":"cbf","ts":"2018-05-29T19:32:49.723Z"}
{"msg":"Yea I was thinking we do that instead of running go build for `make evmscc`? Or we give directions in a Readme and remove that option in the Makefile","username":"swetha","ts":"2018-05-29T19:34:04.151Z"}
{"msg":"thinking","username":"cbf","ts":"2018-05-29T19:34:44.702Z"}
{"msg":"Something similar to these lines: https://github.com/cloudfoundry/diego-release/blob/develop/scripts/get-envoy-binary-from-docker-image.sh#L2-L3","username":"swetha","ts":"2018-05-29T19:39:49.830Z"}
{"msg":"actually, you cannot mount volume in build, but you can run the image and copy the file to a mounted volume","username":"cbf","ts":"2018-05-29T19:40:44.617Z"}
{"msg":"Yup you can do something similar to what I linked above ","username":"swetha","ts":"2018-05-29T19:42:08.232Z"}
{"msg":"yeah that works... incoming patchset thanks","username":"cbf","ts":"2018-05-29T20:25:01.104Z"}
{"msg":"ok, think this is pretty tight now... make evmscc-linux will build the lot and extract the .so to .build/linux/lib","username":"cbf","ts":"2018-05-29T22:00:06.062Z"}
{"msg":"if you JUST change the .go source files (not tests) then it will just build 'docker' target and extract","username":"cbf","ts":"2018-05-29T22:00:47.278Z"}
{"msg":"once I get libltdl-dev into baseimage, then the normal build will be only ~45 secs... only slightly over 1m now","username":"cbf","ts":"2018-05-29T22:02:15.432Z"}
{"msg":"once I get libltdl-dev into baseimage, then the normal build will be only ~45 secs... only slightly over 1m now","username":"cbf","ts":"2018-05-29T22:02:15.432Z"}
{"msg":"@swetha did you validate the build locally? I have a bunch of times and different combinatorial states (make clean, remove .so, modify Gopkg.toml and any .go) and seems clean","username":"cbf","ts":"2018-05-29T22:09:40.697Z"}
{"msg":"oh everytime i built i had no issues","username":"swetha","ts":"2018-05-29T22:10:25.632Z"}
{"msg":"I did remove previously built docker images before i would run `make docker`","username":"swetha","ts":"2018-05-29T22:10:56.101Z"}
{"msg":"I did remove previously built docker images before i ran `make docker`","username":"swetha","ts":"2018-05-29T22:10:56.101Z"}
{"msg":"cool thx","username":"cbf","ts":"2018-05-29T22:11:32.645Z"}
{"msg":"I am validating again just to verify","username":"swetha","ts":"2018-05-29T22:12:13.447Z"}
{"msg":"@cbf, i missed the integration-test change. We need `./` to prefix the network_setup script","username":"swetha","ts":"2018-05-29T22:20:47.745Z"}
{"msg":"ah, thanks... my path defaults to allow that... fixing","username":"cbf","ts":"2018-05-29T22:29:42.013Z"}
{"msg":"good catch thanks... new ps ","username":"cbf","ts":"2018-05-29T22:31:51.965Z"}
{"msg":"@cbf: I am running into an error running the integration-test because `network_setup down` destroys the images needed for `network_setup up` needs. Are you having the same issue?","username":"swetha","ts":"2018-05-29T23:17:08.563Z"}
{"msg":"I'm not seeing that","username":"cbf","ts":"2018-05-29T23:46:28.784Z"}
{"msg":"oh interesting...","username":"cbf","ts":"2018-05-29T23:47:35.763Z"}
{"msg":"it is deleting the peer-evm-base image","username":"cbf","ts":"2018-05-29T23:47:52.311Z"}
{"msg":"I see the problem","username":"cbf","ts":"2018-05-29T23:48:27.333Z"}
{"msg":"fixed","username":"cbf","ts":"2018-05-30T00:00:45.082Z"}
{"msg":"I am trying to figure out what is the best way to achieve the same result","username":"swetha","ts":"2018-05-30T00:00:47.110Z"}
{"msg":"oh nvm","username":"swetha","ts":"2018-05-30T00:00:56.452Z"}
{"msg":"well, the removeUnwantedImages is purging more than it really should","username":"cbf","ts":"2018-05-30T00:11:57.772Z"}
{"msg":"and is not being specific enough","username":"cbf","ts":"2018-05-30T00:12:11.459Z"}
{"msg":"+2 the CR, everything works locally ","username":"swetha","ts":"2018-05-30T00:23:10.229Z"}
{"msg":"+2ed the CR, everything works locally ","username":"swetha","ts":"2018-05-30T00:23:10.229Z"}
{"msg":"Has joined the channel.","username":"nhrishi","ts":"2018-05-30T01:26:44.116Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bur","ts":"2018-05-30T10:59:34.905Z","type":"uj"}
{"msg":"addressed @guoger comments - clean up dross and add core.yaml as dependency","username":"cbf","ts":"2018-05-30T13:33:55.113Z"}
{"msg":"Has joined the channel.","username":"jwaup","ts":"2018-05-30T13:56:49.376Z","type":"uj"}
{"msg":"you probably missed this? https://gerrit.hyperledger.org/r/#/c/22371/10/Dockerfile.base@22","username":"guoger","ts":"2018-05-30T14:24:08.799Z"}
{"msg":"@guoger I answered in a draft comment and never submitted. Here was my response: correct, but I am trying to establish a baseline... the second ensure takes only a few seconds because nothing to be done. I don't want to move this to the Dockerfile.","username":"cbf","ts":"2018-05-30T15:32:32.103Z"}
{"msg":"I just pushed another patchset... I was readying a CR for baseimage to add libltdl-dev but in doing so, realized that we don't seem to need it. I just tested w/o and things look good here","username":"cbf","ts":"2018-05-30T15:42:51.341Z"}
{"msg":"It worked for me locally without the library as well. That is very interesting","username":"swetha","ts":"2018-05-30T17:18:32.250Z"}
{"msg":"I don't recall the issue that it was supposed to be fixing... but possibly the dependencies that caused it have been fixed?","username":"cbf","ts":"2018-05-30T18:05:08.883Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=8WgQX422KiJd6sAiu) @cbf it's pretty hard to solve though... `golang.org/x/net` is dependency of `grpc` and `tendermint`... tearing apart shim interface does not help","username":"guoger","ts":"2018-05-31T02:02:32.374Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=8WgQX422KiJd6sAiu","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=8WgQX422KiJd6sAiu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=MSozHiMPrmvAw3yHw) @cbf so the issue was go requires it to load plugin... but yeah, it got fixed somehow.. i recall it has something to do with pkcs, and probably fixed in `e91df49c8ad05ec5a9c9dce75e87cc29549aa690` of fabric.. not sure","username":"guoger","ts":"2018-05-31T03:03:41.055Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=MSozHiMPrmvAw3yHw","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=MSozHiMPrmvAw3yHw","remote":true,"fileId":null,"fileName":null}]}
{"msg":"","username":"guoger","ts":"2018-05-31T05:49:40.256Z","attachments":[{"type":"file","title":"dep.png","title_link":"/file-upload/EW5xoFX8qEZYusgX3/dep.png","image_url":"/file-upload/EW5xoFX8qEZYusgX3/dep.png","image_type":"image/png","image_size":403303,"url":"/file-upload/EW5xoFX8qEZYusgX3/dep.png","remote":false,"fileId":"EW5xoFX8qEZYusgX3","fileName":"dep.png"}]}
{"msg":"FWIW, our (burrow's) part of that graph should simplify considerably in 0.18.1 with the migration to using go-crypto nearly exclusively. ","username":"compleatang","ts":"2018-05-31T08:53:01.933Z"}
{"msg":"@guoger can you please do another review? https://gerrit.hyperledger.org/r/c/22371/","username":"cbf","ts":"2018-05-31T11:43:22.404Z"}
{"msg":"@swetha the contract in evmscc_test.go doesn't have a license AFAICT","username":"cbf","ts":"2018-05-31T14:14:56.521Z"}
{"msg":"I think that we need to use and reference one that does (have an MIT or Apache license)","username":"cbf","ts":"2018-05-31T14:15:24.286Z"}
{"msg":"while the voting app is simple maybe an ERC20 token dapp? https://github.com/christo4ferris/fixedtoken/blob/master/tok.sol","username":"cbf","ts":"2018-05-31T14:22:35.259Z"}
{"msg":"I couldn't find the voting app with a license ","username":"cbf","ts":"2018-05-31T14:22:52.876Z"}
{"msg":"and the ethereum docs don't seem to have a license - just a copyright","username":"cbf","ts":"2018-05-31T14:23:09.809Z"}
{"msg":"Okay I will start digging for that","username":"swetha","ts":"2018-05-31T16:34:20.908Z"}
{"msg":"besides, I think having an ERC20 token contract in the tests will be a good signal","username":"cbf","ts":"2018-05-31T17:16:58.715Z"}
{"msg":"we can leverage it to also test account support when we get there","username":"cbf","ts":"2018-05-31T17:17:19.023Z"}
{"msg":"I like that idea. For the simpler tests we I found this: https://github.com/katopz/truffle-simple-storage-example/blob/master/contracts/SimpleStorage.sol","username":"swetha","ts":"2018-05-31T17:32:34.677Z"}
{"msg":"But it is the exact same contract as what is on the Solidity documentation but the variables names are changed and then it was committed under the MIT license. I assume we can do the same thing?","username":"swetha","ts":"2018-05-31T17:33:13.074Z"}
{"msg":"@cbf: https://github.com/christo4ferris/fixedtoken/blob/master/tok.sol#L120 that has an extra 2 at the end of the address","username":"swetha","ts":"2018-05-31T17:57:55.712Z"}
{"msg":"yes, MIT is fine","username":"cbf","ts":"2018-05-31T17:59:25.002Z"}
{"msg":"thanks, I'll fix... must hav ebeen a typo","username":"cbf","ts":"2018-05-31T18:00:29.366Z"}
{"msg":"fixed thanks","username":"cbf","ts":"2018-05-31T18:12:37.741Z"}
{"msg":"docker.base","username":"swetha","ts":"2018-05-31T18:47:27.337Z"}
{"msg":"everything looks good and works locally! but i'm still struggling to understand why we duplicate evmscc pkg setup in `Dockerfile.base`? @cbf ","username":"guoger","ts":"2018-05-31T18:50:51.100Z"}
{"msg":"also, probably you could kill this comment in `Dockerfile`?\n> # TODO modify baseimage to include this","username":"guoger","ts":"2018-05-31T18:52:37.143Z"}
{"msg":"since we are not installing libltdl anymore","username":"guoger","ts":"2018-05-31T18:52:49.797Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=LFW3uhkHPm9oJw5ZN) @compleatang awesome! looking forward to that!","username":"guoger","ts":"2018-05-31T19:01:27.135Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=LFW3uhkHPm9oJw5ZN","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=LFW3uhkHPm9oJw5ZN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"the duplication is as follows... I am building a baseline image that has peer with plugins enabled and the merged vendor content","username":"cbf","ts":"2018-05-31T19:12:16.923Z"}
{"msg":"then the Dockerfile starts FROM that image and only needs to run dep ensure for any package changes in the plugin code","username":"cbf","ts":"2018-05-31T19:12:58.049Z"}
{"msg":"much shorter","username":"cbf","ts":"2018-05-31T19:13:05.227Z"}
{"msg":"the first dep ensure takes like 5 minutes","username":"cbf","ts":"2018-05-31T19:13:19.276Z"}
{"msg":"the Dockerfile build takes < minute","username":"cbf","ts":"2018-05-31T19:13:32.198Z"}
{"msg":"oh, now i get it","username":"guoger","ts":"2018-05-31T19:14:53.398Z"}
{"msg":"incoming patchset 14","username":"cbf","ts":"2018-05-31T19:15:57.764Z"}
{"msg":"do you mind adding some comments explaining this while you push patch 14?","username":"guoger","ts":"2018-05-31T19:16:21.257Z"}
{"msg":"sure","username":"cbf","ts":"2018-05-31T19:16:46.864Z"}
{"msg":"just for posterity","username":"guoger","ts":"2018-05-31T19:17:01.812Z"}
{"msg":"also, just thinking of the process of building evmscc against modified fabric...","username":"guoger","ts":"2018-05-31T19:24:19.171Z"}
{"msg":"like if i make some changes in fabric, and wanna see if evmscc could work with it..","username":"guoger","ts":"2018-05-31T19:25:06.411Z"}
{"msg":"but let's get your patch in and fix it later","username":"guoger","ts":"2018-05-31T19:25:42.795Z"}
{"msg":"could add a step that checks the sha, but I think that the simplest thing is to make clean evmscc-linux","username":"cbf","ts":"2018-05-31T19:31:48.936Z"}
{"msg":"i meant that evmscc is built against a freshly cloned fabric, instead of my local changes","username":"guoger","ts":"2018-05-31T19:33:29.392Z"}
{"msg":"gonna sleep now, i'll give +2 tomorrow to your patch 15. sorry I've been a bit picky on this...","username":"guoger","ts":"2018-05-31T19:42:22.101Z"}
{"msg":"no worries, keeping me honest patchset 15 submitted - also fixed issue when you run make integration-test with some stopped containers from a previous test","username":"cbf","ts":"2018-05-31T19:54:58.909Z"}
{"msg":"one last patchset to align with v0.18.0 burrow... I had mistakenly picked a constraint from a stale master","username":"cbf","ts":"2018-06-01T18:52:35.929Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/22371/","username":"cbf","ts":"2018-06-01T18:52:58.281Z"}
{"msg":"Cool, reviewed the new patch. looks good to go","username":"swetha","ts":"2018-06-01T20:41:10.427Z"}
{"msg":"thanks","username":"cbf","ts":"2018-06-02T11:40:14.474Z"}
{"msg":"now we need to test... how is the integration test \"framework\" coming?... it would be good if we had the ability to drop in different contracts to test to create a suite","username":"cbf","ts":"2018-06-02T11:42:40.692Z"}
{"msg":"I'm working on getting Caliper working","username":"cbf","ts":"2018-06-02T11:43:04.134Z"}
{"msg":"trouble is Caliper is a disaster... docs don't match the code, code is a bit tangled and doesn't work with 1.2 quite yet","username":"cbf","ts":"2018-06-02T11:43:42.758Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=6xeMNWttGnaBGPrHQ) @swetha which is it?","username":"guoger","ts":"2018-06-03T03:22:57.600Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=6xeMNWttGnaBGPrHQ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=6xeMNWttGnaBGPrHQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf, so I haven't been able to get the plugin to run. I am still trying to figure out why that is. The other issue I realized Friday was that I wasn't compiling the plugin within fabric which might cause a problem .","username":"swetha","ts":"2018-06-04T02:49:15.404Z"}
{"msg":"@guoger, I reviewed patch 15","username":"swetha","ts":"2018-06-04T02:49:24.376Z"}
{"msg":"@swetha are you trying to get it running on the deployed Fabric instance for the demo? Are you using the image generated by the build for Fabric?","username":"cbf","ts":"2018-06-04T11:12:55.373Z"}
{"msg":"@cbf, The integration doesn't use an image. It runs the peer locally. Images are only used for kafka and for ccenv","username":"swetha","ts":"2018-06-04T17:42:04.612Z"}
{"msg":"ah, right... context matters;-) ","username":"cbf","ts":"2018-06-04T20:30:41.442Z"}
{"msg":"we need a native build for that","username":"cbf","ts":"2018-06-04T20:30:48.693Z"}
{"msg":"that will be a bit more challenging, I think","username":"cbf","ts":"2018-06-04T20:31:00.450Z"}
{"msg":"first, we need a build of peer that has pkcs11 off.","username":"cbf","ts":"2018-06-04T20:31:28.778Z"}
{"msg":"first, we need a build of peer that has pkcs11 off.","username":"cbf","ts":"2018-06-04T20:31:28.778Z"}
{"msg":"you cannot pull the plugin out of the image to run on a mac, needs to be built natively.","username":"cbf","ts":"2018-06-04T20:32:44.505Z"}
{"msg":"sorry, been MIA today... had to put my dog down - cancer sucks... ","username":"cbf","ts":"2018-06-05T21:36:18.694Z"}
{"msg":"so, I think that in order to build native, we will need to bring back the rsync process from before","username":"cbf","ts":"2018-06-05T21:37:16.724Z"}
{"msg":"@cbf, Sorry to hear that","username":"swetha","ts":"2018-06-05T22:05:55.925Z"}
{"msg":"Yup I redoing some of the build process and making it in go","username":"swetha","ts":"2018-06-05T22:06:24.147Z"}
{"msg":"build process that I was initially taking from the fabric/integration tests","username":"swetha","ts":"2018-06-05T22:07:05.601Z"}
{"msg":"it's still a mess","username":"cbf","ts":"2018-06-05T22:43:10.715Z"}
{"msg":"sigh","username":"cbf","ts":"2018-06-05T22:43:16.186Z"}
{"msg":"I was trying myself to build native","username":"cbf","ts":"2018-06-05T22:43:26.574Z"}
{"msg":"failing miserably","username":"cbf","ts":"2018-06-05T22:43:34.170Z"}
{"msg":"tendermint guys mucking with their libs","username":"cbf","ts":"2018-06-05T22:44:41.460Z"}
{"msg":"I am just not thinking well today... because nothing makes sense","username":"cbf","ts":"2018-06-05T22:50:27.914Z"}
{"msg":"I am thinking it might be better have the plugin and peer built outside of the integration test itself","username":"swetha","ts":"2018-06-05T23:00:58.680Z"}
{"msg":"@swetha just thinking more of it, we could actually load evmscc as *user chaincode* for integration test, so we don't need to deal with messy build. and when people use it, it's still loaded as system chaincode","username":"guoger","ts":"2018-06-06T05:25:13.877Z"}
{"msg":"just tried and it works!","username":"guoger","ts":"2018-06-06T06:12:40.739Z"}
{"msg":"we just need to add a meaningful `main` to evmscc, which is not ran as plugin anyway","username":"guoger","ts":"2018-06-06T06:13:07.308Z"}
{"msg":"we just need to add a meaningful `main` to evmscc, which is not ran if loaded as plugin anyway","username":"guoger","ts":"2018-06-06T06:13:07.308Z"}
{"msg":"so i think it significantly simplifies the integration test. we just need to copy/clone fabric repo to tmp dir and compile there, which I think you've been doing already","username":"guoger","ts":"2018-06-06T06:15:27.953Z"}
{"msg":"so i think it significantly simplifies the integration test as you don't need to deal with plugin build *at all*. we just need to copy/clone fabric repo to tmp dir and compile there, which I think you've been doing already","username":"guoger","ts":"2018-06-06T06:15:27.953Z"}
{"msg":"i'll leave that part to you and I'll be working on modifying integration test so we could easily add new contracts, so I don't step on your toes","username":"guoger","ts":"2018-06-06T06:17:11.483Z"}
{"msg":"@cbf sorry to hear about your dog passing. Out of curiosity which tendermint libs were problematic for y'all? They mess with those a lot and we're keen to isolate our downstream to the extent we can... ","username":"compleatang","ts":"2018-06-06T08:21:00.514Z"}
{"msg":"@compleatang hi, thank you so much for helping us out! [ ](https://chat.hyperledger.org/channel/fabric-evm?msg=qce3sQBw5rBJfK8rs) by looking at this graph, both projects ultimately depend on `x/net/trace`. When we load burrow-evm as a plugin, `init` in `trace` is called for the second time, which triggers a panic because the `/debug/requests` endpoint is registered already.","username":"guoger","ts":"2018-06-06T09:53:48.795Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=qce3sQBw5rBJfK8rs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=qce3sQBw5rBJfK8rs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf sorry for your loss....","username":"guoger","ts":"2018-06-06T09:54:06.105Z"}
{"msg":"@compleatang so I think it's a problem with grpc, instead of tendermint. (possibly `go-kit/kit` as well)","username":"guoger","ts":"2018-06-06T09:58:26.693Z"}
{"msg":"@compleatang go-wire which seems to have been renamed go-amino ","username":"cbf","ts":"2018-06-06T13:17:03.723Z"}
{"msg":"@guoger, did you have to run a `dep ensure` or something? Not all of the plugin dependencies are vendored in Fabric","username":"swetha","ts":"2018-06-06T16:06:14.063Z"}
{"msg":"no, running evm in user chaincode simply builds it as separate binary, therefore not requiring any deps in fabric","username":"guoger","ts":"2018-06-06T17:12:52.166Z"}
{"msg":"just trying to demo the idea: https://github.com/guoger/fabric/commit/9e5c37ffce4c8370bb81c2a238537e0182a2d856","username":"guoger","ts":"2018-06-06T17:16:09.571Z"}
{"msg":"and you need to put this to evm plugin main function:\n```\nfunc main() {\n\terr := shim.Start(&EvmChaincode{})\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"Exiting EVM chaincode: %s\", err)\n\t\tos.Exit(2)\n\t}\n}\n```","username":"guoger","ts":"2018-06-06T17:16:33.870Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=uSbLhxFqumtCsDJ57) @cbf thanks. That one we couldn't totally insulate but we're ripping out a bunch of other stuff related to their serialization... ","username":"compleatang","ts":"2018-06-06T17:46:09.210Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=uSbLhxFqumtCsDJ57","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=uSbLhxFqumtCsDJ57","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=yx8xLKoLFGMTFbYQi) @guoger do you mean burrow and fabric or burrow and tendermint. We may be able to move the init a level higher in our stack. Cc @seanyoung ","username":"compleatang","ts":"2018-06-06T17:48:09.372Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=yx8xLKoLFGMTFbYQi","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=yx8xLKoLFGMTFbYQi","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"seanyoung","ts":"2018-06-06T17:48:10.367Z","type":"uj"}
{"msg":"If it was possible for you to dump an issue in burrows repo that would be very helpful. ","username":"compleatang","ts":"2018-06-06T17:48:41.245Z"}
{"msg":"@guoger: Installing the chaincode as a user chaincode does make the integration test a lot easier. Just realized though we might not be testing the right thing then. We are testing basically the chaincode itself which is what we have before. I thought the point of the integration was to test the plugin piece?","username":"swetha","ts":"2018-06-06T18:21:43.461Z"}
{"msg":"a bit of both;-)","username":"cbf","ts":"2018-06-06T20:30:12.146Z"}
{"msg":"So here are the integration tests by testing the plugin as an integration test: https://github.com/swetharepakula/fabric-chaincode-evm/tree/new-integration-tests.  I am going to continue figuring out the build process though cause I don't think we get much more value from these tests from the unit tests if we don't test the plugin aspect.","username":"swetha","ts":"2018-06-06T23:05:39.333Z"}
{"msg":"So here are the integration tests by testing the plugin as an integration test: https://github.com/swetharepakula/fabric-chaincode-evm/commit/0806ae8b92f6faeec2e30a6d117dd7d3342056b8.  I am going to continue figuring out the build process though cause I don't think we get much more value from these tests from the unit tests if we don't test the plugin aspect.","username":"swetha","ts":"2018-06-06T23:05:39.333Z"}
{"msg":"But I think those tests would be a better place for you to start from in terms of plugging in other smart contracts","username":"swetha","ts":"2018-06-06T23:06:18.292Z"}
{"msg":"@guoger ^","username":"swetha","ts":"2018-06-06T23:06:31.564Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=DuctrKjjKYP4YCjL3) @swetha in terms of what we are writing tests for, here's what I understand:\n\\[\n\\begin{matrix}\n & chaincode & e2e & plugin-loading \\\\\nunit-tests & * & & \\\\\nintegration-test-with-user chaincode & * & * & \\\\\nintegration-test-with-sys chaincode & * & * & * \\\\\n\\end{matrix}\n\\]","username":"guoger","ts":"2018-06-07T02:17:07.971Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=DuctrKjjKYP4YCjL3","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=DuctrKjjKYP4YCjL3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"as long as we make sure plugin is loadable with current e2e test, I feel we are safe to use user chaincode in integration tests.","username":"guoger","ts":"2018-06-07T02:18:31.210Z"}
{"msg":"> I thought the point of the integration was to test the plugin piece?\nnot only plugin piece. recall we discovered read-your-write bug with integration test.","username":"guoger","ts":"2018-06-07T02:19:46.098Z"}
{"msg":"I think e2e is the same thing as plugin-loading","username":"swetha","ts":"2018-06-07T02:21:13.150Z"}
{"msg":"@guoger, The point is to replace e2e though. We don't want those as our integration tests","username":"swetha","ts":"2018-06-07T02:22:03.968Z"}
{"msg":"@guoger, The point is to replace e2e. We don't want those as our integration tests","username":"swetha","ts":"2018-06-07T02:22:03.968Z"}
{"msg":"if we are having all 3 then I agree with you","username":"swetha","ts":"2018-06-07T02:22:11.774Z"}
{"msg":"And if we are keeping the e2e, then I don't see value add in these integration tests because it running the exact tests as what we have in `evmscc_test.go`","username":"swetha","ts":"2018-06-07T02:23:02.064Z"}
{"msg":"Only difference is using the peer cli, but our e2e would already be testing that","username":"swetha","ts":"2018-06-07T02:23:29.545Z"}
{"msg":"> We don't want those as our integration tests\nwhy not? don't we need to make sure it work on Linux OS?","username":"guoger","ts":"2018-06-07T02:23:54.718Z"}
{"msg":"these tests could run both on linux and mac","username":"swetha","ts":"2018-06-07T02:24:44.710Z"}
{"msg":"> it running the exact tests as what we have in `evmscc_test.go`\nnot really.. evmscc_test actually mocks everything, but integration test goes through the whole fabric tx flow","username":"guoger","ts":"2018-06-07T02:25:05.927Z"}
{"msg":"It is mocking out the fabric tx flow which is tested in fabric. We shouldn't be testing that","username":"swetha","ts":"2018-06-07T02:26:21.757Z"}
{"msg":"Right now I see these integration tests testing the ability to add chaincode to Fabric","username":"swetha","ts":"2018-06-07T02:27:13.678Z"}
{"msg":"The plugin aspect I think is more important because that isn't tested in Fabric","username":"swetha","ts":"2018-06-07T02:27:42.667Z"}
{"msg":"we have plugin tests in fabric","username":"guoger","ts":"2018-06-07T02:28:07.016Z"}
{"msg":"those only test pluggable endorsement and validation","username":"swetha","ts":"2018-06-07T02:28:21.960Z"}
{"msg":"@cbf, Jay and I have been talking about the integration tests. This build problem seems to keep coming  up and we are concerned with the maintainability of that process, especially if we are doing that natively in go. As a compromise we are thinking of keeping the e2e_cli test for system chaincode pluggability and using the new ginkgo integration tests which use the evm as a user chaincode as a way to test out the features of evm with a fabric network. When we add more features or want to test different contracts we can extend just the ginkgo tests. What are your thoughts?","username":"swetha","ts":"2018-06-07T02:55:56.332Z"}
{"msg":"also, I tried to load plugin natively on osx and it didn't work because of some exotic seg fault. @swetha is going to give it another try","username":"guoger","ts":"2018-06-07T03:07:01.781Z"}
{"msg":"@guoger, Doesn't work natively. I start getting this error: \n```\nruntime: bad pointer in frame regexp/syntax.(*compiler).compile at 0xc42026dd30: 0x17\n[e][peer-0] fatal error: invalid pointer found on stack\n```","username":"swetha","ts":"2018-06-07T04:00:51.359Z"}
{"msg":"@guoger, Doesn't work natively. I start getting this error: \n```\n[e][peer-0]runtime: bad pointer in frame regexp/syntax.(*compiler).compile at 0xc42026dd30: 0x17\n[e][peer-0] fatal error: invalid pointer found on stack\n```","username":"swetha","ts":"2018-06-07T04:00:51.359Z"}
{"msg":"Hmmm, i think i got something different...don‚Äôt really remember clearly","username":"guoger","ts":"2018-06-07T04:01:58.708Z"}
{"msg":"But I didn‚Äôt work for me neither","username":"guoger","ts":"2018-06-07T04:02:11.298Z"}
{"msg":"It*","username":"guoger","ts":"2018-06-07T04:02:17.605Z"}
{"msg":"im digging to make sure the problem is the plugin. but that error only showed up after changing the config to load the plugin","username":"swetha","ts":"2018-06-07T04:02:48.802Z"}
{"msg":"also you could try exact same thing on Linux, so we know for sure it's the OS issue","username":"guoger","ts":"2018-06-07T04:06:16.646Z"}
{"msg":"Oh wait one sec, I think I altered the wrong part of the integration code","username":"swetha","ts":"2018-06-07T04:08:13.627Z"}
{"msg":"That is a good idea, I will try to run it in a docker image","username":"swetha","ts":"2018-06-07T04:09:36.974Z"}
{"msg":"also, just ran a google search on golang plugin for darwin, and some issues may be related:\nhttps://github.com/golang/go/issues/23369\nhttps://github.com/golang/go/issues/24257","username":"guoger","ts":"2018-06-07T04:30:04.659Z"}
{"msg":"not sure if it's cherry-picked to 1.10.2 though...","username":"guoger","ts":"2018-06-07T04:31:30.718Z"}
{"msg":"I would suggest we defer this (adopting integration test \"framework\") to 1.3","username":"cbf","ts":"2018-06-07T13:02:07.494Z"}
{"msg":"I'd prefer we get some additional cycles testing various contracts","username":"cbf","ts":"2018-06-07T13:02:28.577Z"}
{"msg":"Has joined the channel.","username":"rangak","ts":"2018-06-07T14:19:34.358Z","type":"uj"}
{"msg":"Has joined the channel.","username":"abraham","ts":"2018-06-08T04:24:14.855Z","type":"uj"}
{"msg":"Has joined the channel.","username":"richzhao","ts":"2018-06-08T14:41:45.454Z","type":"uj"}
{"msg":"Having a look at dependency graph above is showing project level dependencies, which burrow packages are you actually depending on for fabric-evm?","username":"silasdavis","ts":"2018-06-13T23:38:25.006Z"}
{"msg":"I'd be surprised if you were hitting x/net/trace from anything in the import graph of burrow/execution/evm","username":"silasdavis","ts":"2018-06-13T23:39:06.074Z"}
{"msg":"not sure what behaviour is with plugin, but recent versions of dep can prune unused packages with:\n\n[prune]\n  go-tests = true\n  unused-packages = true\n  non-go = true","username":"silasdavis","ts":"2018-06-13T23:39:55.887Z"}
{"msg":"not sure what behaviour is with plugin, but recent versions of dep can prune unused packages with:\n```\n[prune]\n  go-tests = true\n  unused-packages = true\n  non-go = true\n```","username":"silasdavis","ts":"2018-06-13T23:39:55.887Z"}
{"msg":"perhaps that will help you avoid the x/net/trace double initialisation","username":"silasdavis","ts":"2018-06-13T23:40:21.804Z"}
{"msg":"certainly you shouldn't be seeing a grpc import unless you have the entire burrow project","username":"silasdavis","ts":"2018-06-13T23:42:38.163Z"}
{"msg":"same with go-kit provided you are only including the required packages","username":"silasdavis","ts":"2018-06-13T23:42:38.214Z"}
{"msg":"@silasdavis We are dependent on `account`, `binary`, `execution/evm`. Though I think just those 3 seem to pull in a few more. Currently what we have is \n```\n  packages = [\n    \"account\",\n    \"account/state\",\n    \"binary\",\n    \"event\",\n    \"execution/evm\",\n    \"execution/evm/abi\",\n    \"execution/evm/asm\",\n    \"execution/evm/asm/bc\",\n    \"execution/evm/events\",\n    \"execution/evm/sha3\",\n    \"logging\",\n    \"logging/structure\",\n    \"permission\",\n    \"permission/types\",\n    \"process\"\n  ]\n```","username":"swetha","ts":"2018-06-14T01:33:27.987Z"}
{"msg":"We do have prune options set in our config","username":"swetha","ts":"2018-06-14T01:34:06.448Z"}
{"msg":"Has joined the channel.","username":"pauljithink","ts":"2018-06-14T01:42:51.049Z","type":"uj"}
{"msg":"So I think I have verified the double x/net/trace is not coming from a dependency on burrow. That double initialization happens because the plugin is dependent on fabric.","username":"swetha","ts":"2018-06-14T05:25:30.560Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=gWqQMCBY9w7w8yMCm) @swetha mind elaborating?","username":"guoger","ts":"2018-06-14T06:06:42.491Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=gWqQMCBY9w7w8yMCm","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=gWqQMCBY9w7w8yMCm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@swetha, you are getting this in the integration framework? it's definitely coming from Fabric and it is because Go considers the symbols to be different because the paths are different. Again, I think we should defer the integration test work to post 1.2 - not worth banging our heads against this now","username":"cbf","ts":"2018-06-14T11:20:58.253Z"}
{"msg":"@cbf , No I just took a quick look at the dependencies for Silas's question","username":"swetha","ts":"2018-06-14T16:03:27.237Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=YPSjoKJqsujJDbqCL) @guoger I meant that we are pulling in a dependency from fabric, namely the shim, which pulls in x/net/trace which is loaded by fabric as well causing the double initialization","username":"swetha","ts":"2018-06-14T16:04:17.123Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=YPSjoKJqsujJDbqCL","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=YPSjoKJqsujJDbqCL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"paulananth","ts":"2018-06-15T12:17:37.276Z","type":"uj"}
{"msg":"https://gerrit.hyperledger.org/r/23457 ","username":"cbf","ts":"2018-06-21T17:14:15.959Z"}
{"msg":"please","username":"cbf","ts":"2018-06-21T17:14:18.691Z"}
{"msg":"@guoger https://gerrit.hyperledger.org/r/c/23457/1/README.md#15 pls see my comment","username":"cbf","ts":"2018-06-21T21:02:56.625Z"}
{"msg":"maybe something like:\n> Fabric proxy implements Ethereum compliant JSON RPC interfaces, so that users could use tools, such as Remix, Truffle, etc, to interact with Smart Contract running in EVM.","username":"guoger","ts":"2018-06-22T01:26:09.401Z"}
{"msg":"^ @cbf ","username":"guoger","ts":"2018-06-22T01:26:15.205Z"}
{"msg":"ok","username":"cbf","ts":"2018-06-22T01:26:41.814Z"}
{"msg":"done thanks","username":"cbf","ts":"2018-06-22T01:28:50.879Z"}
{"msg":"+2'ed","username":"guoger","ts":"2018-06-22T01:30:01.392Z"}
{"msg":"thx","username":"cbf","ts":"2018-06-22T01:33:10.949Z"}
{"msg":"@swetha when you have some time, take a look at https://gerrit.hyperledger.org/r/23457 from chris, adding README","username":"guoger","ts":"2018-06-22T02:55:56.482Z"}
{"msg":"oh will do, sorry didn't see that change","username":"swetha","ts":"2018-06-22T02:56:20.101Z"}
{"msg":"Reviewed it, LGTM","username":"swetha","ts":"2018-06-22T03:00:49.854Z"}
{"msg":"Has joined the channel.","username":"nvxtien","ts":"2018-06-22T11:25:52.992Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sureshtedla","ts":"2018-06-23T23:32:57.275Z","type":"uj"}
{"msg":"Has joined the channel.","username":"GiuseppeLittera","ts":"2018-06-25T20:06:33.840Z","type":"uj"}
{"msg":"Has joined the channel.","username":"baoyangc","ts":"2018-06-26T11:32:53.410Z","type":"uj"}
{"msg":"```shell\ndocker pull hyperledger/fabric-peer-evm:amd64-latest\nError response from daemon: pull access denied for hyperledger/fabric-peer-evm, repository does not exist or may require 'docker login'\n```\n can't pull fabric-peer-evm","username":"baoyangc","ts":"2018-06-26T15:50:09.994Z"}
{"msg":"Has joined the channel.","username":"grice_32","ts":"2018-06-26T15:52:06.922Z","type":"uj"}
{"msg":"yes, we haven't pushed it yet... need someone to create the repository for us","username":"cbf","ts":"2018-06-26T18:34:23.543Z"}
{"msg":"@baoyangc the image has not been pushed ","username":"cbf","ts":"2018-06-27T12:21:44.298Z"}
{"msg":"Has joined the channel.","username":"jaromil","ts":"2018-06-29T11:53:03.345Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mark.zhang","ts":"2018-06-30T02:46:29.813Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tianma323","ts":"2018-06-30T08:25:45.701Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sigma67","ts":"2018-07-01T19:50:38.208Z","type":"uj"}
{"msg":"Has joined the channel.","username":"BabuPallam","ts":"2018-07-04T22:20:46.881Z","type":"uj"}
{"msg":"@guoger & @cbf : Just submitted initial patch for the proxy: https://gerrit.hyperledger.org/r/#/c/24185/","username":"swetha","ts":"2018-07-06T20:03:09.738Z"}
{"msg":"Has joined the channel.","username":"EricPetruzzelli","ts":"2018-07-07T11:59:54.910Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Telijas","ts":"2018-07-09T14:21:10.810Z","type":"uj"}
{"msg":"@swetha what are the accounts on the proxy?","username":"cbf","ts":"2018-07-10T12:52:59.097Z"}
{"msg":"I need to run the client app locally","username":"cbf","ts":"2018-07-10T12:53:06.905Z"}
{"msg":"Has left the channel.","username":"adamludvik","ts":"2018-07-10T13:17:28.293Z","type":"ul"}
{"msg":"@cbf,looking for them","username":"swetha","ts":"2018-07-10T17:16:56.448Z"}
{"msg":"thx","username":"cbf","ts":"2018-07-10T17:17:11.071Z"}
{"msg":"I seem to be in a mode where the login screen does not successfully \"login\" and even if I open the vote page, it just beach-balls when I submit a vote","username":"cbf","ts":"2018-07-10T17:17:55.736Z"}
{"msg":"Try one of these:\n537627a1e9456be6fc015800d23cf91a93555fe6\n613ac660a26a66a52eadc02cda9f6c7e7326e675\n853c507c8abde6d6d82f2e84cc4ca65f82ae5a09\n861256673241f8a9e3b086b1b01e76143253c8fc","username":"swetha","ts":"2018-07-10T17:20:47.444Z"}
{"msg":"Try one of these:\n```\n537627a1e9456be6fc015800d23cf91a93555fe6\n613ac660a26a66a52eadc02cda9f6c7e7326e675\n853c507c8abde6d6d82f2e84cc4ca65f82ae5a09\n861256673241f8a9e3b086b1b01e76143253c8fc\n```","username":"swetha","ts":"2018-07-10T17:20:47.444Z"}
{"msg":"When you get a chance can you open up the inspect console on the browser and see if there are any error messages you see? I am not seeing the issue currently","username":"swetha","ts":"2018-07-10T17:22:37.672Z"}
{"msg":"those are the ones I tried","username":"cbf","ts":"2018-07-10T17:36:39.134Z"}
{"msg":"BAH","username":"cbf","ts":"2018-07-10T17:39:50.250Z"}
{"msg":"I was putting the user in the password","username":"cbf","ts":"2018-07-10T17:40:01.339Z"}
{"msg":"password is 'some-password'","username":"cbf","ts":"2018-07-10T17:40:08.707Z"}
{"msg":"working now","username":"cbf","ts":"2018-07-10T17:40:11.205Z"}
{"msg":"thanks","username":"cbf","ts":"2018-07-10T17:40:14.314Z"}
{"msg":"haha, no problem","username":"swetha","ts":"2018-07-10T17:47:53.208Z"}
{"msg":"@swetha the CR needs license headers for all the new files","username":"cbf","ts":"2018-07-10T21:13:28.521Z"}
{"msg":"Oh yea, forgot about that. Adding them now thanks","username":"swetha","ts":"2018-07-10T21:13:44.759Z"}
{"msg":"thx","username":"cbf","ts":"2018-07-10T21:14:07.524Z"}
{"msg":"@cbf & @guoger Here is the vendor commit: https://gerrit.hyperledger.org/r/#/c/24183/","username":"swetha","ts":"2018-07-11T01:56:25.869Z"}
{"msg":"@swetha how do you plan to do integration test for fabproxy? should we leverage `jest`, or we could go a step further and use `truffle`, etc","username":"guoger","ts":"2018-07-11T02:41:21.310Z"}
{"msg":"I was thinking about a couple things. One was to send requests using our current ginkgo test framework and have those run against our e2e example","username":"swetha","ts":"2018-07-11T02:42:47.079Z"}
{"msg":"Using truffle and remix is going to require a few more instructions & CORS support. The CORS piece is easy and just waiting on these commits to be merged before pushing that. In regards of using truffle, that will take a little longer","username":"swetha","ts":"2018-07-11T02:44:26.007Z"}
{"msg":"The other thing this depends on is how the integration framework will be for the plugin as a whole. If we go down the ginkgo path then i would think it is better to stick to that and not introduce too many languages and types of tests","username":"swetha","ts":"2018-07-11T02:45:29.665Z"}
{"msg":"IMO, including web3.js as part of our test pipeline makes more sense","username":"guoger","ts":"2018-07-11T03:38:19.957Z"}
{"msg":"so that we are not testing our own expectations, but that of web3.js","username":"guoger","ts":"2018-07-11T03:38:53.953Z"}
{"msg":"that is true, but what we really want to make sure is that we implemented the API properly","username":"swetha","ts":"2018-07-11T04:03:44.709Z"}
{"msg":"I am going to keep thinking about that","username":"swetha","ts":"2018-07-11T04:04:01.375Z"}
{"msg":"I would imagine something like this:\n`evm.test.js -> web3.js | fabproxy | fabric | evmscc`\ni'm fine with another layer like:\n` ginkgo -> fabproxy | fabric | evmscc`\nbut it seems a bit redundant","username":"guoger","ts":"2018-07-11T04:17:38.351Z"}
{"msg":"another ginkgo layer does seem redundant","username":"swetha","ts":"2018-07-11T04:56:02.649Z"}
{"msg":"Has joined the channel.","username":"jayeshjawale95","ts":"2018-07-11T07:30:29.410Z","type":"uj"}
{"msg":"@swetha quick question, why do you create new client for every invocation, instead of reusing the same one?\n```\nfunc (s *fabSDK) GetChannelClient() (fabproxy.ChannelClient, error) {\n\tclientChannelContext := s.sdk.ChannelContext(s.channel, fabsdk.WithUser(s.user), fabsdk.WithOrg(s.org))\n\n\treturn channel.New(clientChannelContext)\n}\n```","username":"guoger","ts":"2018-07-11T08:16:55.100Z"}
{"msg":"Has joined the channel.","username":"bramvdbogaerde","ts":"2018-07-11T10:09:00.045Z","type":"uj"}
{"msg":"I think that the goal is to support web3, so Jay's suggestion makes sense to me. I agree we want to make sure we have implemented the API properly. Maybe the distinction is ginkgo is UT and use of jasmine or the like for integration test?","username":"cbf","ts":"2018-07-11T12:15:58.200Z"}
{"msg":"also, I think that we should move the plugin into the fabric repo. It is too clunky to build and make available, as it stands, and we also cannot take advantage of the ACL support, which is only available to SYSCC. I think that we still want to be able to restrict deploying a contract to admin (or some privileged account), no? @swetha @guoger ","username":"cbf","ts":"2018-07-11T12:18:44.493Z"}
{"msg":"@cbf, I think that would solve a lot of our problems","username":"swetha","ts":"2018-07-11T16:27:33.892Z"}
{"msg":"@guoger, I thought it kind of starting a connection each time a request came in and not keep connections alive, but realized I never closed the clients, so will push up another patchtoday","username":"swetha","ts":"2018-07-11T16:28:32.238Z"}
{"msg":"@guoger, I thought it kind of starting a connection each time a request came in and not keep connections alive, but realized I never closed the clients, so will push up another patch today","username":"swetha","ts":"2018-07-11T16:28:32.238Z"}
{"msg":"Nevermind. In this version of the sdk, we can never close the client. I am going to change it to just initialize the channel context once","username":"swetha","ts":"2018-07-11T16:49:51.459Z"}
{"msg":"The current version of the SDK and the combination of Fabric 1.2 we have a problem of the sdk not being able invoke or query custom system chaincodes because the sdk queries the Discovery Service for available chaincodes but the `evmscc` will not show up on that list. So patch won't be ready today","username":"swetha","ts":"2018-07-11T20:30:21.677Z"}
{"msg":"System chaincodes have lifecycle, so it's not even possible to discover what peers have them and what peers don't, and obviously SD doesn't support SCCs and won't until we do the lifecycle change which would *maybe* give SCCs their own lifecycle","username":"yacovm","ts":"2018-07-11T20:35:54.345Z"}
{"msg":"System chaincodes don't have lifecycle, so it's not even possible to discover what peers have them and what peers don't, and obviously SD doesn't support SCCs and won't until we do the lifecycle change which would *maybe* give SCCs their own lifecycle","username":"yacovm","ts":"2018-07-11T20:35:54.345Z"}
{"msg":"The only way is to just not use SD for SCCs üòâ","username":"yacovm","ts":"2018-07-11T20:38:56.087Z"}
{"msg":"The only way in the meantime is to just not use SD for SCCs üòâ","username":"yacovm","ts":"2018-07-11T20:38:56.087Z"}
{"msg":"I agree, I just don't know how to disable that in the SDK. The config didn't seem to have an obvious answers","username":"swetha","ts":"2018-07-11T20:43:08.784Z"}
{"msg":"Has joined the channel.","username":"BlockchainBusiness","ts":"2018-07-16T02:31:57.481Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vladyslavmunin","ts":"2018-07-18T15:07:46.117Z","type":"uj"}
{"msg":"Has joined the channel.","username":"amongv587","ts":"2018-07-19T15:05:28.399Z","type":"uj"}
{"msg":"Has joined the channel.","username":"karadalex","ts":"2018-07-21T11:57:27.973Z","type":"uj"}
{"msg":"Has joined the channel.","username":"chuojiang","ts":"2018-07-25T07:32:28.494Z","type":"uj"}
{"msg":"@swetha any reason that we need to use syscc for the evmcc? ","username":"cbf","ts":"2018-07-25T13:21:44.695Z"}
{"msg":"also, could you please add story points to all the evm jiras? thanks","username":"cbf","ts":"2018-07-25T13:26:43.787Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=c93JaeP2faGKoLfgs) @cbf initially, we did. However, we were trying to follow Fabric work flow as much as possible:\n- user deploys an evm contract with a canonical name\n- looks up the type of invoked contract by name, if `EVM`, redirecting it to evm cc\nthis invaded fabric code.\nAlso, we want to leverage that syscc being automatically deployed to every channel we create.","username":"guoger","ts":"2018-07-25T15:55:15.516Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=c93JaeP2faGKoLfgs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=c93JaeP2faGKoLfgs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=c93JaeP2faGKoLfgs) @cbf initially, we did. However, we were trying to follow Fabric work flow as much as possible:\n- implement a new type of cc `EVM`, along with `GOLANG` and `JAVA`\n- user deploys an evm contract with a canonical name\n- looks up the type of invoked contract by name, if `EVM`, redirecting it to evm cc\nthis invaded fabric code.\nAlso, we want to leverage that syscc being automatically deployed to every channel we create.","username":"guoger","ts":"2018-07-25T15:55:15.516Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=c93JaeP2faGKoLfgs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=c93JaeP2faGKoLfgs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"although, given current design, we could actually revert to this. And I actually did it when I was too sick of bizarre build.","username":"guoger","ts":"2018-07-25T15:56:37.753Z"}
{"msg":"Well, when we deploy a contract, it isn't same as deploying chaincode","username":"cbf","ts":"2018-07-25T16:38:38.867Z"}
{"msg":"it is a transaction","username":"cbf","ts":"2018-07-25T16:38:42.763Z"}
{"msg":"so we could have single evmcc container and a specific method that deployed the contract(s)","username":"cbf","ts":"2018-07-25T16:39:07.110Z"}
{"msg":"@guoger @swetha ","username":"cbf","ts":"2018-07-25T16:39:22.227Z"}
{"msg":"I am not thrilled with the UX of the plugin TBH and this makes the whole deployment question much more naturally integrated with CC lifecycle","username":"cbf","ts":"2018-07-25T16:40:08.815Z"}
{"msg":"and discovery","username":"cbf","ts":"2018-07-25T16:40:13.989Z"}
{"msg":"@cbf I agree that the plugin ux isn't great. Are you thinking we should move away from the syscc completely or that just the plugin aspect of the design?","username":"swetha","ts":"2018-07-25T17:21:49.398Z"}
{"msg":"Also is there a scale we typically use for story points?","username":"swetha","ts":"2018-07-25T17:23:17.770Z"}
{"msg":"yes, let's just make a plain old chaincode shim/container","username":"cbf","ts":"2018-07-25T18:01:31.559Z"}
{"msg":"as for story points, use your best guestimate 1=dayish 2=two 4=week 8=two or more ish","username":"cbf","ts":"2018-07-25T18:02:23.921Z"}
{"msg":"Okay I will look into how we can incorporate this into the usual lifecycle workflow we use for Go","username":"swetha","ts":"2018-07-25T18:08:01.829Z"}
{"msg":"We may need to postpone the design review tomorrow then","username":"swetha","ts":"2018-07-25T18:08:38.214Z"}
{"msg":"@cbf, wait do you mean a regular chaincode?","username":"swetha","ts":"2018-07-25T18:25:04.050Z"}
{"msg":"I mean deploy it as regular Go chaincode","username":"cbf","ts":"2018-07-25T20:12:35.579Z"}
{"msg":"can we do that?","username":"cbf","ts":"2018-07-25T20:12:49.945Z"}
{"msg":"oh okay, yes we can do that in its current situation","username":"swetha","ts":"2018-07-25T20:58:11.076Z"}
{"msg":"Has joined the channel.","username":"MHBauer","ts":"2018-07-25T20:58:34.543Z","type":"uj"}
{"msg":"but for future features like admin only contract deployment we would never be able to do that","username":"swetha","ts":"2018-07-25T20:58:55.046Z"}
{"msg":"Has joined the channel.","username":"ricktobacco","ts":"2018-07-25T23:35:23.897Z","type":"uj"}
{"msg":"hello, thank you for making this plugin!","username":"ricktobacco","ts":"2018-07-25T23:36:48.538Z"}
{"msg":"i am interested in overcoming the following limitations of stock version chaincode (my question is how to go about it if indeed possible)","username":"ricktobacco","ts":"2018-07-25T23:37:46.151Z"}
{"msg":"With Gas, it is possible to control the execution of a smart contract. Gas allows you to re-enter smart contract code as many times as necessary, which produces elegant solutions with contract-to-contract interoperability. It is not possible to re-enter chaincode. Say we need to call the second contract from the first and then do a call-back to the first. \nIn EVM, everything acts as an account, including smart contract, allowing a contract to act as a user and own assets.\nWhen one smart contract calls another smart contract on EVM, it assumes its own identity versus that of the user (who is calling the first smart contract). This way, a smart contract can always identify what code is calling it. In chaincode, there is currently no built-in way to distinguish between the chaincodes. Thus, the code always assumes the calling user identity. ","username":"ricktobacco","ts":"2018-07-25T23:39:13.333Z"}
{"msg":"@ricktobacco: When you use the plugin, there is a different between the EVM smart contract and the chaincode","username":"swetha","ts":"2018-07-25T23:58:49.549Z"}
{"msg":"@ricktobacco: When you use the plugin, there is a difference between the EVM smart contract and the chaincode","username":"swetha","ts":"2018-07-25T23:58:49.549Z"}
{"msg":"The plugin itself is the chaincode  that runs EVM smart contracts, so we don't go through the usual lifecycle workflow for deploying new EVM bytecode contracts","username":"swetha","ts":"2018-07-25T23:59:32.004Z"}
{"msg":"For accounts, Fabric has no concept of accounts as you already mentioned. What we do is we set whoever is invoking the evmscc as the account calling the initial contract","username":"swetha","ts":"2018-07-26T00:01:22.520Z"}
{"msg":"In terms of what a contract calling a contract, I don't know what happens on the top of my mind. I have to go through the Burrow EVM code again and get back to you","username":"swetha","ts":"2018-07-26T00:02:25.210Z"}
{"msg":"I am curious, what are you trying to do with the plugin. We would love feedback!","username":"swetha","ts":"2018-07-26T00:03:07.139Z"}
{"msg":"Also for the time being Gas is hardcoded at 90000 per transaction with the plugin","username":"swetha","ts":"2018-07-26T00:06:04.433Z"}
{"msg":"Has joined the channel.","username":"Ryan2","ts":"2018-07-26T06:09:03.315Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sujanpgowda","ts":"2018-07-30T13:37:53.368Z","type":"uj"}
{"msg":"Has joined the channel.","username":"gatakka","ts":"2018-07-31T06:26:23.951Z","type":"uj"}
{"msg":"assuming y'all haven't done anything crazy with the state (e.g., sharding it and only letting a particular node see part of the EVM state) and it is all available to the EVM container, then the call path will run until completion or exception and then return to you (you being the chaincode level). we test multiple depths or contracts calling contracts and this should be all handled in Burrow EVM. If you run into any challenges tho definitely let us know. ","username":"compleatang","ts":"2018-07-31T15:39:33.809Z"}
{"msg":"tl'dr contracts calling contracts should work just fine as it is an internal EVM operation and the EVM execution path won't return until it reaches completion of the code path (or an exception)","username":"compleatang","ts":"2018-07-31T15:40:11.906Z"}
{"msg":"@compleatang Thanks for that!","username":"swetha","ts":"2018-07-31T18:22:29.487Z"}
{"msg":"np","username":"compleatang","ts":"2018-07-31T21:02:50.404Z"}
{"msg":"Has joined the channel.","username":"samwood","ts":"2018-08-01T17:33:49.620Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zmaro","ts":"2018-08-03T15:20:55.277Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pankajanand26","ts":"2018-08-03T15:34:34.275Z","type":"uj"}
{"msg":"hey i have a question about how read set / write sets are handled in fabric evm","username":"soc1024","ts":"2018-08-06T08:35:22.749Z"}
{"msg":"i tried to look for this terminology in the design doc but couldn't find it, might be using some of the terms wrong","username":"soc1024","ts":"2018-08-06T08:36:06.812Z"}
{"msg":"is there one key for basically the entire EVM space? or one for each contract/account? I'm curious what happens when there are simultaneously multiple transactions sent to the endorsers, and at some point they have to determine whether they are in conflict or not","username":"soc1024","ts":"2018-08-06T08:36:49.892Z"}
{"msg":"> is there one key for basically the entire EVM space\nNo, in short, we use composite key `address + key`, where `address` is associated with user account or contract account, and `key` is whatever evm stores a value with. So account is almost a namespace here.\n> at some point they have to determine whether they are in conflict or not\nthey are still validated using fabric validation, meaning version check on RWset by default.","username":"guoger","ts":"2018-08-06T09:04:31.311Z"}
{"msg":"hi, @soc1024 \n> is there one key for basically the entire EVM space\nNo. in short, we use composite key `address + key`, where `address` is associated with user account or contract account, and `key` is whatever evm stores a value with. So account is almost a namespace here.\n> at some point they have to determine whether they are in conflict or not\nthey are still validated using fabric validation, meaning version check on RWset by default.","username":"guoger","ts":"2018-08-06T09:04:31.311Z"}
{"msg":"thanks for the response!","username":"soc1024","ts":"2018-08-06T09:06:56.367Z"}
{"msg":"so with `address + key`, `address` is associated with the sender?","username":"soc1024","ts":"2018-08-06T09:07:29.958Z"}
{"msg":"maybe i can answer some of my remaining questions by looking at the code, do you have a suggestion where to find RWset, i'll search for tht now","username":"soc1024","ts":"2018-08-06T09:08:09.762Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=oFD976PubXroEisfC) @soc1024 could be, it should depend on the logic in your smart contract.","username":"guoger","ts":"2018-08-06T09:09:13.808Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=oFD976PubXroEisfC","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=oFD976PubXroEisfC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"okay","username":"soc1024","ts":"2018-08-06T09:09:39.239Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=aEjyRzmujchBiERMy) @soc1024 RWset is produced when chaincode shim is invoked.","username":"guoger","ts":"2018-08-06T09:09:46.184Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=aEjyRzmujchBiERMy","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=aEjyRzmujchBiERMy","remote":true,"fileId":null,"fileName":null}]}
{"msg":"i'm trying to track down whether my intuition is correct, which is that if there are a lot of simultaneous transactions to the same contract (e.g., there is an Auction contract and lots of people are trying to make incrementally higher bids) then there will be lots of contention, hence many endorsements will fail at the validation stage and have to be re-endorsed again","username":"soc1024","ts":"2018-08-06T09:10:45.544Z"}
{"msg":"Burrow evm library depends on https://github.com/hyperledger/fabric-chaincode-evm/blob/master/statemanager/statemanager.go#L15-L21","username":"guoger","ts":"2018-08-06T09:10:46.028Z"}
{"msg":"if you are repeatedly modifying one variable, say `highest_bid`, then yes","username":"guoger","ts":"2018-08-06T09:11:58.192Z"}
{"msg":"but if you maintain a `map[user_addr]bid`, then not","username":"guoger","ts":"2018-08-06T09:12:25.700Z"}
{"msg":"makes sense, OK","username":"soc1024","ts":"2018-08-06T09:12:40.499Z"}
{"msg":"to expand on previous question, the code is fairly simple. We translate Burrow ledger interface to Fabric chaincode shim, so it produces RWset as usual","username":"guoger","ts":"2018-08-06T09:13:38.158Z"}
{"msg":"in practice most contracts will do something like `map[user_addr]bid` but also `int totalbids`","username":"soc1024","ts":"2018-08-06T09:13:41.713Z"}
{"msg":"in practice most contracts will do something like `map[user_addr]bid` but also `uint totalbids`","username":"soc1024","ts":"2018-08-06T09:13:41.713Z"}
{"msg":"yeah... we are aware of the limitation here.. ethereum serialize transactions so it's not a problem for them :P","username":"guoger","ts":"2018-08-06T09:14:47.396Z"}
{"msg":"with special validation/endorsement plugins, this could be mitigated in Fabric as well","username":"guoger","ts":"2018-08-06T09:15:19.561Z"}
{"msg":"with custom validation/endorsement plugins, this could be mitigated in Fabric as well","username":"guoger","ts":"2018-08-06T09:15:19.561Z"}
{"msg":"interesting, i was wondering about this for other applications as well,","username":"soc1024","ts":"2018-08-06T09:16:47.051Z"}
{"msg":"it would be nice to have endorsers run their own BFT as a \"pre ordering\" or something to address such contention","username":"soc1024","ts":"2018-08-06T09:17:01.497Z"}
{"msg":"i assume that is what you mean by endorsement plugin s","username":"soc1024","ts":"2018-08-06T09:17:10.996Z"}
{"msg":"any links to such? i wasn't aware of any","username":"soc1024","ts":"2018-08-06T09:17:20.883Z"}
{"msg":"also is there any discussion / writeup about these limitations? or keywords that people would use to describe it? thanks!","username":"soc1024","ts":"2018-08-06T09:17:46.712Z"}
{"msg":"also is there any discussion / writeup about these limitations? or keywords that people would use to describe it? (perhaps not limited to just EVM setting) thanks!","username":"soc1024","ts":"2018-08-06T09:17:46.712Z"}
{"msg":"> run their own BFT as a \"pre ordering\"\nmind elaborate?","username":"guoger","ts":"2018-08-06T09:18:29.514Z"}
{"msg":"> also is there any discussion / writeup about these limitations?\nUnfortunately no, at least to my knowledge. :(","username":"guoger","ts":"2018-08-06T09:19:08.236Z"}
{"msg":"In the hyperledger fabric arxi paper https://arxiv.org/pdf/1801.10228.pdf this is mentioned:\n```\ns. As the endorsers simulate the proposal\nwithout synchronizing with other endorsers, two endorsers\nmay execute it on different states of the ledger and produce different\noutputs. For the standard endorsement policy which requires\nmultiple endorsers to produce the same result, this implies that\nunder high contention of operations accessing the same keys, a\nclient may not be able to satisfy the endorsement policy. This is a\nnew consideration compared to primary-backup replication in replicated\ndatabases with synchronization through middleware [40]: a\nconsequence of the assumption that no single peer is trusted for\ncorrect execution in a blockchain.\nWe consciously adopted this design, as it considerably simplifies\nthe architecture and is adequate for typical blockchain applications.\nAs demonstrated by the approach of Bitcoin, distributed\napplications can be formulated such that contention by operations\naccessing the same state can be reduced, or eliminated completely\nin the normal case (e.g., in Bitcoin, two operations that modify the\nsame ‚Äúobject‚Äù are not allowed and represent a double-spending\nattack [44]). In the future, we plan to gradually enhance the liveness\nsemantics of Fabric under contention, in particular to support\nCRDTs [51] for complementing the current version dependency\nchecks, as well as a per-chaincode lead-endorser that would act as\na transaction sequencer\n```","username":"soc1024","ts":"2018-08-06T09:20:58.623Z"}
{"msg":"In the hyperledger fabric arxi paper https://arxiv.org/pdf/1801.10228.pdf this is mentioned:\n```\n As the endorsers simulate the proposal\nwithout synchronizing with other endorsers, two endorsers\nmay execute it on different states of the ledger and produce different\noutputs. For the standard endorsement policy which requires\nmultiple endorsers to produce the same result, this implies that\nunder high contention of operations accessing the same keys, a\nclient may not be able to satisfy the endorsement policy. This is a\nnew consideration compared to primary-backup replication in replicated\ndatabases with synchronization through middleware [40]: a\nconsequence of the assumption that no single peer is trusted for\ncorrect execution in a blockchain.\nWe consciously adopted this design, as it considerably simplifies\nthe architecture and is adequate for typical blockchain applications.\nAs demonstrated by the approach of Bitcoin, distributed\napplications can be formulated such that contention by operations\naccessing the same state can be reduced, or eliminated completely\nin the normal case (e.g., in Bitcoin, two operations that modify the\nsame ‚Äúobject‚Äù are not allowed and represent a double-spending\nattack [44]). In the future, we plan to gradually enhance the liveness\nsemantics of Fabric under contention, in particular to support\nCRDTs [51] for complementing the current version dependency\nchecks, as well as a per-chaincode lead-endorser that would act as\na transaction sequencer\n```","username":"soc1024","ts":"2018-08-06T09:20:58.623Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=MRx78E9Ahs5Qp9LTd) Basically among a set of endorsers, they could run a BFT protocol among themselves to tentatively agree on a sequence of transactions before signing them. This would invovle, as suggested above, picking one of them as the leader at any given time, and having some policy for switching leaders if the leader crasehs","username":"soc1024","ts":"2018-08-06T09:22:30.466Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=MRx78E9Ahs5Qp9LTd","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=MRx78E9Ahs5Qp9LTd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://gerrit.hyperledger.org/r/c/25115/ please","username":"cbf","ts":"2018-08-06T18:20:50.017Z"}
{"msg":"just finished reviewing it","username":"swetha","ts":"2018-08-06T18:25:04.311Z"}
{"msg":"merged, we now have automated CI - yay","username":"cbf","ts":"2018-08-06T18:54:59.489Z"}
{"msg":"@cbf @guoger: I have been working on a work around the SDK using the discovery service. But if we are going to start recommending people to use the chaincode as a user chaincode, this work around should no longer be necessary","username":"swetha","ts":"2018-08-06T21:55:54.654Z"}
{"msg":"Is user chaincode the way we are going to go? The only thing that I can think of as a problem is the admin only deployment of transactions. Which we can't do with plugins anyway, but could do if we made this into a regular system chaincode","username":"swetha","ts":"2018-08-06T21:57:23.204Z"}
{"msg":"I think we should go the way of user chaincode ","username":"cbf","ts":"2018-08-06T22:18:35.039Z"}
{"msg":"Has joined the channel.","username":"colinster","ts":"2018-08-07T21:15:05.276Z","type":"uj"}
{"msg":"I think we have an issue with the Jenkins build: https://jenkins.hyperledger.org/job/fabric-chaincode-evm-verify-master-x86_64/2/execution/node/11/log/. ","username":"swetha","ts":"2018-08-09T03:09:27.575Z"}
{"msg":"We need a different way to set the $PATH variable","username":"swetha","ts":"2018-08-09T03:12:01.128Z"}
{"msg":"Has joined the channel.","username":"puneet","ts":"2018-08-09T09:35:55.756Z","type":"uj"}
{"msg":"Has joined the channel.","username":"silliman","ts":"2018-08-09T13:07:22.858Z","type":"uj"}
{"msg":"ping Ramesh on #fabric-ci I haven't looked closely but it may be in the Jenkinsfile - meaning we can fix it ourselves","username":"cbf","ts":"2018-08-09T13:21:12.189Z"}
{"msg":"@swetha ^^","username":"cbf","ts":"2018-08-09T13:21:30.706Z"}
{"msg":"Thanks!","username":"swetha","ts":"2018-08-09T16:20:26.232Z"}
{"msg":"reviewing https://gerrit.hyperledger.org/r/c/25315/\nI suppose we will be moving to ginkgo-style integration test in follow up patches?","username":"guoger","ts":"2018-08-10T07:14:29.004Z"}
{"msg":"cc @swetha ","username":"guoger","ts":"2018-08-10T07:14:33.561Z"}
{"msg":"@guoger yeah, I think that @swetha had some of that WIP b4... but now that we are using user chaincode, we can practically cut-n-paste the fabric integration testing of chaincode","username":"cbf","ts":"2018-08-10T12:13:48.389Z"}
{"msg":"Yes, trying to put in the commits one at a time. The stuff I had as a wip will be easy to convert and switch over, but don't want to do everything in one commit","username":"swetha","ts":"2018-08-10T19:15:21.149Z"}
{"msg":"Has joined the channel.","username":"KellyCooper","ts":"2018-08-13T14:45:01.405Z","type":"uj"}
{"msg":"https://gerrit.hyperledger.org/r/c/25315/ LGTM, cc @cbf @swetha ","username":"guoger","ts":"2018-08-15T05:30:24.602Z"}
{"msg":"@swetha i just realized that hyperledger/fabric-ccenv containers are leaked as well, could you confirm?","username":"guoger","ts":"2018-08-15T09:45:06.539Z"}
{"msg":"ill double check but the e2e test  should clean up all the evmcc containers it creates","username":"swetha","ts":"2018-08-15T18:21:55.611Z"}
{"msg":"I don't have any leaked containers or images on my end. How are you running the e2e?","username":"swetha","ts":"2018-08-15T18:37:26.524Z"}
{"msg":"ah, I see, I ctrl-c the e2e in the middle of building cc image, and ccenv is not reaped by `network_setup.sh down`. I guess it's not a problem","username":"guoger","ts":"2018-08-16T05:10:37.229Z"}
{"msg":"CR is still +2'ed i think","username":"guoger","ts":"2018-08-16T05:10:50.123Z"}
{"msg":"the evmcc images and containers are removed","username":"swetha","ts":"2018-08-16T16:15:53.855Z"}
{"msg":"Has joined the channel.","username":"KeenWarrior","ts":"2018-08-17T07:55:17.723Z","type":"uj"}
{"msg":"Has joined the channel.","username":"minskeyguo","ts":"2018-08-18T20:28:21.292Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bdjidi","ts":"2018-08-21T22:48:01.293Z","type":"uj"}
{"msg":"https://jira.hyperledger.org/browse/FAB-11082","username":"swetha","ts":"2018-08-22T03:53:38.292Z"}
{"msg":"Has joined the channel.","username":"raheelz","ts":"2018-08-22T20:24:04.691Z","type":"uj"}
{"msg":"@swetha @gouger @cbf just to let you all know (and anyone else), that we've set up the #burrow-downstream room. As the burrow EVM gets more use from downstream projects we wanted to set up a place where your team and the Sawtooth team could raise any issues with using the EVM as a library and where we could make sure you all were aware of any changes we've made to the EVM that are relevant for you as part of our release cycle. Hope y'all will join! ","username":"compleatang","ts":"2018-08-23T08:59:19.856Z"}
{"msg":"@swetha @guoger  @cbf just to let you all know (and anyone else), that we've set up the #burrow-downstream room. As the burrow EVM gets more use from downstream projects we wanted to set up a place where your team and the Sawtooth team could raise any issues with using the EVM as a library and where we could make sure you all were aware of any changes we've made to the EVM that are relevant for you as part of our release cycle. Hope y'all will join! ","username":"compleatang","ts":"2018-08-23T08:59:19.856Z"}
{"msg":"awesome! thx @compleatang ","username":"guoger","ts":"2018-08-23T09:13:14.617Z"}
{"msg":"Thats great! thanks @compleatang ! ","username":"swetha","ts":"2018-08-23T17:06:28.371Z"}
{"msg":"Has joined the channel.","username":"SarahM","ts":"2018-08-25T17:45:30.708Z","type":"uj"}
{"msg":"hey all, back from vacation... interested in getting a level-set on progress","username":"cbf","ts":"2018-08-27T11:33:48.600Z"}
{"msg":"reviewing swetha's CR for fabproxy","username":"guoger","ts":"2018-08-27T14:39:45.304Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/25315/ this LGTM, +2'ed","username":"guoger","ts":"2018-08-27T14:40:48.015Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/25717 just clean up, LGTM","username":"guoger","ts":"2018-08-27T14:41:30.515Z"}
{"msg":"still need some time to review remainings","username":"guoger","ts":"2018-08-27T14:42:04.859Z"}
{"msg":"Has joined the channel.","username":"asamk","ts":"2018-08-27T14:56:01.909Z","type":"uj"}
{"msg":"Those are the initial 2 patches that need to be review. I think in total I have 6 that have to do with the fabproxy as well as cleaning up the evm to be used as a user chaincode","username":"swetha","ts":"2018-08-27T17:12:24.651Z"}
{"msg":"Hi guys... been ought of the loop for too long, just been trying to catch up with all the progress of fabric-evm","username":"silasdavis","ts":"2018-08-28T11:59:09.525Z"}
{"msg":"regarding support for web3 - looks like you have integration at the web.js level looking at: https://github.com/christo4ferris/votevm","username":"silasdavis","ts":"2018-08-28T11:59:44.462Z"}
{"msg":"which is an approach we were considering too - are you still planning to provide a proxy server serving the json-rpc?","username":"silasdavis","ts":"2018-08-28T12:00:20.491Z"}
{"msg":"@silasdavis yes! and it's currently under review https://gerrit.hyperledger.org/r/c/24185/","username":"guoger","ts":"2018-08-28T13:48:08.867Z"}
{"msg":"@guoger great...","username":"silasdavis","ts":"2018-08-28T14:00:40.140Z"}
{"msg":"It's something that we really ought to get a basic version of into Burrow","username":"silasdavis","ts":"2018-08-28T14:00:53.681Z"}
{"msg":"what might be nice is if we were to share your EthService interface and implement against our underlying API","username":"silasdavis","ts":"2018-08-28T14:01:33.205Z"}
{"msg":"then we could share tests","username":"silasdavis","ts":"2018-08-28T14:01:37.670Z"}
{"msg":"we would use gorilla too","username":"silasdavis","ts":"2018-08-28T14:01:42.864Z"}
{"msg":"@silasdavis That was my thought process behind the interface, but we would love feedback about whether that works for you a not","username":"swetha","ts":"2018-08-29T06:38:57.649Z"}
{"msg":"@silasdavis That was my thought process behind the interface, but we would love feedback about whether that interface works or not","username":"swetha","ts":"2018-08-29T06:38:57.649Z"}
{"msg":"There are some fabric specific things that are tied in, but I did want to make it usable outside of fabric","username":"swetha","ts":"2018-08-29T06:39:38.063Z"}
{"msg":"It would _feel_ good to share elements of implementation too - and when we come to implement `sendTransactionRaw` which will require some kind of serialisation (RLP) and signing converters then we may want to - but I think that our implementation of the interface would end up being pretty thin in Burrow just like yours is against Fabric","username":"silasdavis","ts":"2018-08-29T16:45:11.743Z"}
{"msg":"I will try and find some (of somebody's - possibly my) time to see if I can implement something comparable to what you have - would make a lot of sense to share tests (I wonder if it would make sense for them to live somewhere in Burrow?)","username":"silasdavis","ts":"2018-08-29T16:46:02.720Z"}
{"msg":"the other thing I was looking at is providing a web3.js 'Provider' against our GRPC interfaces. We now have something very close to that as part of https://github.com/monax/bosmarmot/tree/develop/burrow.js. In some ways this might be the neater integration point. Rather than trying to aim for full general web3 compliance (which will be necessarily partial anyway) I was going to shoot for getting truffle mostly working with us: https://truffleframework.com/ since it has this provider injection already for making mist/metamask work. I don't actually think it needs much of web3 to work...","username":"silasdavis","ts":"2018-08-29T16:48:25.976Z"}
{"msg":"Sure I would love to work with whoever has some time to see how well this could port over to Burrow. In terms of tests, we haven't created integration tests yet but are thinking about using web3 to verify that our proxy implements the APIs correctly.\nWe also are starting to look into how Truffle can work with the proxy. The idea of the injected provider is an interesting approach, and as you mention we won't get full web3 compliance just because of how the networks work. I have to think a little more about how that would work with Fabric though since we only integrated the VM portion of Burrow, and don't get access to the GRPC interfaces.","username":"swetha","ts":"2018-08-29T17:04:58.684Z"}
{"msg":"Sure I would love to work with you or someone else to see how well this could port over to Burrow. In terms of tests, we haven't created integration tests yet but are thinking about using web3 to verify that our proxy implements the APIs correctly.\nWe also are starting to look into how Truffle can work with the proxy. The idea of the injected provider is an interesting approach, and as you mention we won't get full web3 compliance just because of how the networks work. I have to think a little more about how that would work with Fabric though since we only integrated the VM portion of Burrow, and don't get access to the GRPC interfaces.","username":"swetha","ts":"2018-08-29T17:04:58.684Z"}
{"msg":"+1000 to collaborating:-)","username":"cbf","ts":"2018-08-29T17:51:13.293Z"}
{"msg":"Swetha do you guys have a general purpose js client lib? Basically truffles providers allows you to inject your RPC specific calls into their interpretation. It's a pretty thin layer we think if you already have a client side js lib. ","username":"compleatang","ts":"2018-08-29T19:14:20.863Z"}
{"msg":"We have a node SDK to talk to fabric, which could probably work. The proxy we are developing is written in go though. I haven't spent time on looking into the truffle integration and what we would need there. Our first priority was web3 and then remix","username":"swetha","ts":"2018-08-30T05:39:19.091Z"}
{"msg":"@cbf @guoger pushed up some new patches this morning. because of the ordering I think all the commits need another review","username":"swetha","ts":"2018-08-30T06:14:08.605Z"}
{"msg":"Also in terms of docs do we want to add something to fabric docs or do we just want something in the chaincode-evm readme for now?","username":"swetha","ts":"2018-08-30T06:15:07.591Z"}
{"msg":"docs of?","username":"guoger","ts":"2018-08-30T06:15:55.435Z"}
{"msg":"I am thinking the evm chaincode, how they should install and how to connect up the proxy","username":"swetha","ts":"2018-08-30T06:24:36.825Z"}
{"msg":"ah, ok, any particular reason why it should go into fabric docs?","username":"guoger","ts":"2018-08-30T06:26:58.703Z"}
{"msg":"what time is it for you?","username":"guoger","ts":"2018-08-30T06:27:23.130Z"}
{"msg":"Its almost midnight for me","username":"swetha","ts":"2018-08-30T06:42:43.479Z"}
{"msg":"No particular reason, but I think people who would be interested would first go to the fabric docs","username":"swetha","ts":"2018-08-30T06:43:01.808Z"}
{"msg":"can we embed a pointer to `chaincode-evm` readme [here](https://github.com/hyperledger/fabric/blob/release-1.2/docs/source/chaincode.rst), saying something like:\n> Chaincode is a program, written in Go, node.js, *Contract-Oriented Languages*, and eventually in other programming languages such as Java,","username":"guoger","ts":"2018-08-30T06:45:51.334Z"}
{"msg":"can we embed a pointer to `chaincode-evm` readme [here](https://github.com/hyperledger/fabric/blob/release-1.2/docs/source/chaincode.rst), saying something like:\n> Chaincode is a program, written in Go, node.js, *Contract-Oriented Languages*(pointer goes here), and eventually in other programming languages such as Java,","username":"guoger","ts":"2018-08-30T06:45:51.334Z"}
{"msg":"I like that idea","username":"swetha","ts":"2018-08-30T06:46:17.398Z"}
{"msg":"(could also be following _Java_, I don't have preference here)","username":"guoger","ts":"2018-08-30T06:47:25.651Z"}
{"msg":"hahah, I don't have a preference on that either","username":"swetha","ts":"2018-08-30T06:52:14.141Z"}
{"msg":"yeah, we need to update the docs... but a README would be warranted as well","username":"cbf","ts":"2018-08-30T12:03:57.278Z"}
{"msg":"please update the README and I will discuss with the doc team where it belongs","username":"cbf","ts":"2018-08-30T12:04:33.675Z"}
{"msg":"Swetha, I'd need to check on remix specifically, but the way eth systems are generally one implements a `provider` that maps / wraps RPC calls to specific end points. This would mean you wouldn't have to do too much \"server\" side. ","username":"compleatang","ts":"2018-08-30T12:07:57.059Z"}
{"msg":"Sorry I think I got a little confused. The proxy we are working on that Jay linked above is our web3 provider. Our first priority was to test it against web3 (basic set of APIs to make this work), then add APIs to make Remix, and follow that pattern for the other tools we want to support. In terms of truffle, we would want to be able to use this proxy as well","username":"swetha","ts":"2018-08-30T16:43:51.190Z"}
{"msg":"Ok. ","username":"compleatang","ts":"2018-08-30T18:12:56.906Z"}
{"msg":"@swetha is [this CR](https://gerrit.hyperledger.org/r/c/25767/) reviewable or it's still WIP","username":"guoger","ts":"2018-09-03T08:58:28.730Z"}
{"msg":"That one is reviewable. There is a timing issue when running the tests in jenkins which is causing build failures. Trying to fix those, so the last 2 will need to be reviewed again.","username":"swetha","ts":"2018-09-03T19:54:06.557Z"}
{"msg":"@swetha review done.\n- left another comment [here](https://gerrit.hyperledger.org/r/c/24185/18/fabproxy/codec.go#34) but I'm ok if it's not addressed. Also, if you want change err assertions in `ethservice_test.go` to `Expect(err).To(MatchError(ContainString()))` in ensuing CRs, I'm also fine with that.\n- [this](https://gerrit.hyperledger.org/r/c/25767/) LGTM, +2'ed\n\nwill merge remaining CRs all together. Good job!","username":"guoger","ts":"2018-09-04T02:17:01.262Z"}
{"msg":"Thanks, I will add the check you were suggesting. I think that makes sense. That is an easy error to return","username":"swetha","ts":"2018-09-04T03:06:52.104Z"}
{"msg":"@guoger , made the changes. let me know if i missed something","username":"swetha","ts":"2018-09-04T03:20:20.627Z"}
{"msg":"@swetha +2'ed everything, let's wait for @cbf to give another round of review and they are ready to be merged.","username":"guoger","ts":"2018-09-04T03:39:30.937Z"}
{"msg":"also, do you guys have a plan for other APIs to support remix?","username":"guoger","ts":"2018-09-04T03:40:38.081Z"}
{"msg":"what's Morgan's chat ID?","username":"guoger","ts":"2018-09-04T03:40:43.662Z"}
{"msg":"its @MHBauer ","username":"swetha","ts":"2018-09-04T03:41:02.392Z"}
{"msg":"For this release I am only planning on the ones needed for remix","username":"swetha","ts":"2018-09-04T03:41:26.750Z"}
{"msg":"is @MHBauer going to do it?","username":"guoger","ts":"2018-09-04T03:42:02.186Z"}
{"msg":"Yup, and I will help him with that once I finish a few more things for this release","username":"swetha","ts":"2018-09-04T03:43:03.894Z"}
{"msg":"cool","username":"guoger","ts":"2018-09-04T03:43:22.279Z"}
{"msg":"@guoger @cbf these patches are ready for review now:\nhttps://gerrit.hyperledger.org/r/26086\nhttps://gerrit.hyperledger.org/r/26087\nhttps://gerrit.hyperledger.org/r/26088\n","username":"swetha","ts":"2018-09-07T04:22:08.480Z"}
{"msg":"Has joined the channel.","username":"magicianx25","ts":"2018-09-09T14:48:15.710Z","type":"uj"}
{"msg":"@swetha  @MHBauer I think it's time to consider using a logger","username":"guoger","ts":"2018-09-10T05:55:51.979Z"}
{"msg":"i agree! and since fabric is using zap now we can start using zap!","username":"swetha","ts":"2018-09-10T06:39:18.120Z"}
{"msg":"does _nwo_ have hard dependencies of couch+kafka/zk, even though we are just using solo in integration test?","username":"guoger","ts":"2018-09-10T06:42:55.892Z"}
{"msg":"Has joined the channel.","username":"knagware9","ts":"2018-09-10T14:03:41.168Z","type":"uj"}
{"msg":"@guoger, I believe so. I took the simplest test they had it is using couch+kafka/zk. I will take another look and see if it is possible to get rid of all those pieces","username":"swetha","ts":"2018-09-10T19:48:35.512Z"}
{"msg":"@guoger, I believe so. I don't think those images are used during the test, but I will take another look. I think the integration packages checks for those images before needing them which forces us to pull them even though we don't need it.","username":"swetha","ts":"2018-09-10T19:48:35.512Z"}
{"msg":"Has joined the channel.","username":"donsonZhang","ts":"2018-09-11T04:23:16.988Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JaydipMakadia","ts":"2018-09-13T13:10:41.375Z","type":"uj"}
{"msg":"@MHBauer https://jira.hyperledger.org/browse/FAB-7983","username":"guoger","ts":"2018-09-15T10:05:20.301Z"}
{"msg":"if it's not soo complicated and prevent us from releasing code, let's do it","username":"guoger","ts":"2018-09-15T10:07:07.416Z"}
{"msg":"`return fmt.Errorf(\"need 2 params, got %q\", numParams)` why `%q`?","username":"guoger","ts":"2018-09-15T10:15:03.141Z"}
{"msg":"@guoger, I was thinking we should tackle the logger after getting all the other jiras done","username":"swetha","ts":"2018-09-17T17:44:47.918Z"}
{"msg":"Where is the above line from?","username":"swetha","ts":"2018-09-17T17:51:16.780Z"}
{"msg":"That‚Äôs from one of Morgan‚Äôs CR","username":"guoger","ts":"2018-09-18T00:02:00.250Z"}
{"msg":"Has joined the channel.","username":"djohnkang","ts":"2018-09-18T06:14:00.212Z","type":"uj"}
{"msg":"@swetha just wanna make sure, in ethereum, they say \"web3 provider\", not \"JSON RPC provider\", correct?","username":"guoger","ts":"2018-09-19T01:35:09.201Z"}
{"msg":"just a wild idea, maybe we could call fabproxy `fab3` (echoing `web3`)? :P","username":"guoger","ts":"2018-09-19T01:38:43.598Z"}
{"msg":"yes web3 provider is I've seen it be called","username":"swetha","ts":"2018-09-19T02:40:44.270Z"}
{"msg":"i kind of like fab3","username":"swetha","ts":"2018-09-19T02:41:02.251Z"}
{"msg":"time to rebrand :P","username":"swetha","ts":"2018-09-19T02:41:07.113Z"}
{"msg":"@swetha just posted some comments https://gerrit.hyperledger.org/r/c/26172/","username":"guoger","ts":"2018-09-19T03:03:58.058Z"}
{"msg":"if we all like `fab3`, let's rename it. wdyt @cbf @MHBauer ","username":"guoger","ts":"2018-09-19T03:04:42.115Z"}
{"msg":"Only thing to note is that fab3 is not a parallel to web3. But I like the name","username":"swetha","ts":"2018-09-19T03:22:58.533Z"}
{"msg":"can we say `fab3 == web3 provider`?","username":"guoger","ts":"2018-09-19T03:26:19.634Z"}
{"msg":"yes","username":"swetha","ts":"2018-09-19T03:29:24.714Z"}
{"msg":"lulz","username":"MHBauer","ts":"2018-09-19T03:44:38.376Z"}
{"msg":"you do you. but if we're renaming folders, let's make it more 'conventional go project layout'","username":"MHBauer","ts":"2018-09-19T03:45:18.080Z"}
{"msg":"very frustrating day today.","username":"MHBauer","ts":"2018-09-19T03:45:39.085Z"}
{"msg":"theoretically, with current master branch, should remix work?","username":"guoger","ts":"2018-09-19T03:53:27.719Z"}
{"msg":"current master? With my two patches, yes, sort of.","username":"MHBauer","ts":"2018-09-19T04:12:44.730Z"}
{"msg":"Depends on what you define as 'work'.","username":"MHBauer","ts":"2018-09-19T04:12:58.956Z"}
{"msg":"I can make a short video if it would help.","username":"MHBauer","ts":"2018-09-19T04:13:05.430Z"}
{"msg":"I'm trying to deploy simplestorage via remix and got some errors","username":"guoger","ts":"2018-09-19T04:22:29.234Z"}
{"msg":"so I just wanna make sure it _should_ work before I give another try later","username":"guoger","ts":"2018-09-19T04:22:44.327Z"}
{"msg":"should work with the current patches, tho I may have pushed something today that blew everything up trying to refactor.","username":"MHBauer","ts":"2018-09-19T06:42:45.674Z"}
{"msg":"let me try","username":"MHBauer","ts":"2018-09-19T06:42:48.037Z"}
{"msg":"I see gerrit top f1e2b40e912b0b07f991e7ab8dbade6db37fa763f1e2b40e912b0b07f991e7ab8dbade6db37fa763 that works for me","username":"MHBauer","ts":"2018-09-19T06:46:19.676Z"}
{"msg":"`git review -d 26323 `","username":"MHBauer","ts":"2018-09-19T06:47:19.364Z"}
{"msg":"that one","username":"MHBauer","ts":"2018-09-19T06:47:20.972Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=E4CEyg36acwFdjrQZ) @guoger q is for quoted","username":"MHBauer","ts":"2018-09-20T01:13:54.778Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=E4CEyg36acwFdjrQZ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=E4CEyg36acwFdjrQZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"so what will get printed is `need 2 params, got \"4\"`","username":"MHBauer","ts":"2018-09-20T01:14:33.298Z"}
{"msg":"so, probably not too relevant in this case, but more useful for errs","username":"MHBauer","ts":"2018-09-20T01:15:02.392Z"}
{"msg":"oh, interesting.. i don't that.. but shouldn't quoted be more suitable for string-like msg? anyway, all lgtm","username":"guoger","ts":"2018-09-20T04:27:04.064Z"}
{"msg":"oh, interesting.. i don't know that.. but shouldn't quoted be more suitable for string-like msg? anyway, all lgtm","username":"guoger","ts":"2018-09-20T04:27:04.064Z"}
{"msg":"agree, agree. sort of a habit I've gotten into. usually makes the arguments \"stand out\" . more sure about what was \"added in\" rather than part of the original message text.","username":"MHBauer","ts":"2018-09-20T05:18:11.645Z"}
{"msg":"keep an eye out.","username":"MHBauer","ts":"2018-09-20T05:18:29.262Z"}
{"msg":"you have me looked up \"keep an eye out\" :)","username":"guoger","ts":"2018-09-20T05:53:14.039Z"}
{"msg":"sorry, idioms, I love them.","username":"MHBauer","ts":"2018-09-21T02:17:14.889Z"}
{"msg":"In the future, I may do similar things. Please notify me if this happens again. It is good to talk and think about.","username":"MHBauer","ts":"2018-09-21T02:17:50.442Z"}
{"msg":"i mostly want to thank you for expanding me vocabulary :)","username":"guoger","ts":"2018-09-21T02:30:30.646Z"}
{"msg":"Oh sure. Ask @Swetha, she'll tell you all about my words. I have the best words.","username":"MHBauer","ts":"2018-09-21T03:05:48.540Z"}
{"msg":"I think the idioms are probably the hardest thing about a language. ","username":"MHBauer","ts":"2018-09-21T03:07:16.468Z"}
{"msg":"Other than maybe puns.","username":"MHBauer","ts":"2018-09-21T03:07:21.643Z"}
{"msg":"and yea, if I say something and it seems wrong, or I am not making sense, ask me to clarify.","username":"MHBauer","ts":"2018-09-21T03:10:52.547Z"}
{"msg":"Hi, had a question regarding setting up locally with docker containers.  Would it be similar to setting up fabric locally, and then installing and instantiating the evm chaincode (evmcc) ?  Next step, I am assuming would be setting up the proxy..","username":"raheelz","ts":"2018-09-24T16:12:02.110Z"}
{"msg":"Hi, had a question regarding setting up locally with docker containers.  Would it be similar to setting up fabric locally, and then installing and instantiating the evm chaincode (evmcc) ?  ","username":"raheelz","ts":"2018-09-24T16:12:02.110Z"}
{"msg":"@raheelz yep. See https://github.com/hyperledger/fabric-chaincode-evm#deploying-the-fabric-evm-chaincode","username":"cbf","ts":"2018-09-24T17:28:54.054Z"}
{"msg":"@cbf, need another round of reviews for this patch: https://gerrit.hyperledger.org/r/#/c/26172/","username":"swetha","ts":"2018-09-24T18:40:13.035Z"}
{"msg":"ok","username":"cbf","ts":"2018-09-24T19:44:19.525Z"}
{"msg":"thanks!","username":"swetha","ts":"2018-09-24T21:51:46.475Z"}
{"msg":"thank you!","username":"cbf","ts":"2018-09-25T11:48:42.391Z"}
{"msg":"Has joined the channel.","username":"zacpl","ts":"2018-09-28T18:37:19.226Z","type":"uj"}
{"msg":"Has joined the channel.","username":"grice32","ts":"2018-10-04T17:35:19.707Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Barry_CPF","ts":"2018-10-05T16:10:26.945Z","type":"uj"}
{"msg":"@cbf @guoger pushed up some commits with integration tests for web3 and fab3 (checking spec implementation). We need to update the pipeline job to have node and working out some tweaks in the tests so commits not quite ready for review","username":"swetha","ts":"2018-10-05T22:47:46.752Z"}
{"msg":"@cbf & @guoger we need review on this https://gerrit.hyperledger.org/r/#/c/26827/ to get node installed before our integration tests","username":"swetha","ts":"2018-10-06T18:22:21.698Z"}
{"msg":"@swetha do integration tests assume peer and orderer docker images to exist locally?","username":"guoger","ts":"2018-10-08T03:54:03.362Z"}
{"msg":"and why does [this](https://gerrit.hyperledger.org/r/c/26829/) trigger an update of ginkgo deps?","username":"guoger","ts":"2018-10-08T03:57:59.423Z"}
{"msg":"[this](https://jenkins.hyperledger.org/job/fabric-chaincode-evm-verify-master-x86_64/130/console) says `ginkgo` not found...","username":"guoger","ts":"2018-10-08T04:29:29.278Z"}
{"msg":"@swetha @guoger https://gerrit.hyperledger.org/r/c/26827/ some comments","username":"cbf","ts":"2018-10-08T11:59:04.224Z"}
{"msg":"@guoger it runs the peer and orderer from $GOPATH/src/github.com/hyperledger/fabric","username":"swetha","ts":"2018-10-08T16:20:59.422Z"}
{"msg":"And still trying to figure out the way to trigger it properly. i think i need to manually add to the path","username":"swetha","ts":"2018-10-08T16:21:38.238Z"}
{"msg":"add ginkgo to the path?","username":"cbf","ts":"2018-10-08T16:38:09.792Z"}
{"msg":"@swetha ^","username":"cbf","ts":"2018-10-08T16:38:18.784Z"}
{"msg":"if that's what you're trying to accomplish, see the integration-test target in fabric makefile and also the gotool.ginkgo target in the gotools.mk","username":"cbf","ts":"2018-10-08T16:40:13.809Z"}
{"msg":"also we need to vendor the relevant version of ginkgo ","username":"cbf","ts":"2018-10-08T16:40:52.671Z"}
{"msg":"ahh, great. I wasn't sure how to add that :)","username":"guoger","ts":"2018-10-08T17:04:16.925Z"}
{"msg":"@swetha not sure which message you were trying to address though...","username":"guoger","ts":"2018-10-08T17:04:56.388Z"}
{"msg":"we should be getting binaries from Nexus from stable build","username":"cbf","ts":"2018-10-08T17:56:02.866Z"}
{"msg":"Yup I did follow what fabric did, but i think this is running slightly differently than fabric is in jenkins which is causing an issue","username":"swetha","ts":"2018-10-08T22:16:27.563Z"}
{"msg":"We are vendoring in the same version of ginkgo as fabric","username":"swetha","ts":"2018-10-08T22:16:37.422Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=8wRYwfaQiiwm2JMLe) @guoger That was related to\n```\n@swetha do integration tests assume peer and orderer docker images to exist locally?\n\nand why does this trigger an update of ginkgo deps?\n```","username":"swetha","ts":"2018-10-08T22:17:29.083Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=8wRYwfaQiiwm2JMLe","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=8wRYwfaQiiwm2JMLe","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Though I think I misunderstood that last part","username":"swetha","ts":"2018-10-08T22:17:37.426Z"}
{"msg":"@swetha ah, they are two different questions and you need to click into the hyperlink of [this](https://gerrit.hyperledger.org/r/c/26829/)","username":"guoger","ts":"2018-10-09T09:30:00.493Z"}
{"msg":"It didn't trigger an update. that part of ginkgo wasn't vendored in because we dont use it for our tests (the actually ginkgo binary)","username":"swetha","ts":"2018-10-09T13:53:17.672Z"}
{"msg":"so we need to add it in order for ci to install it","username":"swetha","ts":"2018-10-09T13:53:26.205Z"}
{"msg":"Has joined the channel.","username":"tahaf10","ts":"2018-10-13T07:06:37.135Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SumanPapanaboina","ts":"2018-10-14T15:36:44.130Z","type":"uj"}
{"msg":"Has joined the channel.","username":"fupeng","ts":"2018-10-15T14:53:49.631Z","type":"uj"}
{"msg":"Does fabric-evm support events now?","username":"fupeng","ts":"2018-10-15T14:54:33.164Z"}
{"msg":"@swetha ?","username":"cbf","ts":"2018-10-15T15:21:37.595Z"}
{"msg":"@fupeng if you are thinking of `events` in Ethereum term, meaning it can be indexed, which makes tx query faster, then *no*, it's not supported, because we need to change Fabric to make it work.","username":"guoger","ts":"2018-10-15T15:41:58.794Z"}
{"msg":"if it's just to support notification, like other Fabric event, then the CR is in gerrit, not merged yet. It's done by a Hyperledger intern and we'll need to revive it.","username":"guoger","ts":"2018-10-15T15:43:07.529Z"}
{"msg":"thanks!  I am using web3.js. Can I use something like  var event = contract.allEvents()  event.watch(...) ?","username":"fupeng","ts":"2018-10-15T16:04:08.967Z"}
{"msg":"\"Introduction of events in Smart Contracts\"  from \"Future Work\" part of Extend-Hyperledger-Fabric-to-Support-EVM-Contract-and-Web3-Toolings_Jiannan-Guo-_-Swetha-Repakula.pdf","username":"fupeng","ts":"2018-10-15T16:18:40.321Z"}
{"msg":"Sorry for the confusion :slight_smile:","username":"fupeng","ts":"2018-10-15T16:19:19.645Z"}
{"msg":"From FAB-8078,  I found  \"Current Status: Working through final CR to add event support. Testing underway - deliver soon after v1.3\" ","username":"fupeng","ts":"2018-10-15T16:27:39.685Z"}
{"msg":"@fupeng We are currently working with the Hyperledger Intern to finish testing and fixing the CRs. \nI am not sure that the work being reviewed will allow for a generic watch yet. But I have to double check to make sure","username":"swetha","ts":"2018-10-15T16:33:36.987Z"}
{"msg":"Got it! Thanks a lot.  Hope it is to release soon! :slight_smile:","username":"fupeng","ts":"2018-10-15T16:43:06.460Z"}
{"msg":"Np!","username":"swetha","ts":"2018-10-15T16:48:37.893Z"}
{"msg":"@cbf & @guoger I think the node patch is ready for another round of reviews: https://gerrit.hyperledger.org/r/#/c/26827/","username":"swetha","ts":"2018-10-15T17:03:38.161Z"}
{"msg":"@cbf, Sorry didn't see that you were debugging the ginkgo issue. I might have messed up the last build by pushing. I will stop looking into that issue","username":"swetha","ts":"2018-10-15T22:29:40.387Z"}
{"msg":"I think I sorted things out","username":"cbf","ts":"2018-10-15T22:30:01.818Z"}
{"msg":"oh cool","username":"swetha","ts":"2018-10-15T22:30:27.893Z"}
{"msg":"the gotool.ginkgo target was never built - also there's no need to build into the .build which was not in the path anyway","username":"cbf","ts":"2018-10-15T22:32:08.917Z"}
{"msg":"hmmm... now b0rked","username":"cbf","ts":"2018-10-15T22:33:48.185Z"}
{"msg":"i think its the debug line `which ginkgo`","username":"swetha","ts":"2018-10-15T22:45:10.196Z"}
{"msg":"wait nope that's not it","username":"swetha","ts":"2018-10-15T22:45:34.845Z"}
{"msg":"@cbf I think i figured out why ginkgo isn't installing properly. Something isn't right about the files that are vendored in. I will keep digging","username":"swetha","ts":"2018-10-16T04:11:58.226Z"}
{"msg":"ginkgo should be working in the latest patch","username":"swetha","ts":"2018-10-16T04:42:24.634Z"}
{"msg":"Has joined the channel.","username":"ibmamnt","ts":"2018-10-17T07:59:45.944Z","type":"uj"}
{"msg":"Has joined the channel.","username":"KOttoni","ts":"2018-10-17T19:53:07.431Z","type":"uj"}
{"msg":"Hello--Where in the documentation or elsewhere is there information regarding Ethereum compatibility (tx, tokens) in the 1.3 release? I did a search and couldn't find anything. Thanks!","username":"KOttoni","ts":"2018-10-17T19:53:12.450Z"}
{"msg":"@KOttoni In terms of how we to use ethereum the we have an example tutorial that goes through that. In terms of just compatibility we have a design document that covers some of the limitations: https://docs.google.com/document/d/1xZfdtFiIFvHI7UZAze2xbm5hhgaDHGRBMusozKfpOck/edit?usp=sharing","username":"swetha","ts":"2018-10-17T20:58:56.677Z"}
{"msg":"@KOttoni In terms of how we to use ethereum the we have an example tutorial that goes through that:https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md. In terms of just compatibility we have a design document that covers some of the limitations: https://docs.google.com/document/d/1xZfdtFiIFvHI7UZAze2xbm5hhgaDHGRBMusozKfpOck/edit?usp=sharing","username":"swetha","ts":"2018-10-17T20:58:56.677Z"}
{"msg":"We are not introducing tokens as part of this work. In terms of transactions, we are using the Burrow EVM (0.18.0). We are still working on getting smart contract events, so that is also a limitation","username":"swetha","ts":"2018-10-17T21:00:49.112Z"}
{"msg":"@KOttoni while we aren't introducing tokens, you can deploy an ERC20 or other standard contract to create tokens","username":"cbf","ts":"2018-10-18T14:55:51.213Z"}
{"msg":"the tx format is consistent with web3 ","username":"cbf","ts":"2018-10-18T14:56:36.892Z"}
{"msg":"Has joined the channel.","username":"AndrewNRise","ts":"2018-10-19T08:19:40.179Z","type":"uj"}
{"msg":"Has joined the channel.","username":"devlintrace","ts":"2018-10-19T17:32:00.170Z","type":"uj"}
{"msg":"Hi, I am working on this project for a code pattern on loyalty points use case with fabric-evm: https://github.com/raheelzubairy/loyalty-points-evm-fabric. I would appreciate any feedback or if anything stands out.  I used the example tutorial for the setup of Fabric-EVM.  And truly liked the idea of creating a smart contract in Solidity and using web3 for the application, with the deployment on Fabric.  Again, please let me know any concerns or feedback. -thanks","username":"raheelz","ts":"2018-10-19T19:59:59.448Z"}
{"msg":"wow, nice...","username":"guoger","ts":"2018-10-20T06:50:01.650Z"}
{"msg":"@raheelz That's awesome.Will let you know if we have any feedback!","username":"swetha","ts":"2018-10-22T09:52:58.824Z"}
{"msg":"Has joined the channel.","username":"grapebaba","ts":"2018-10-24T00:59:05.199Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bobsummerwill","ts":"2018-10-25T06:58:47.698Z","type":"uj"}
{"msg":"@cbf & @guoger I think this patch is ready to be reviewed: https://gerrit.hyperledger.org/r/#/c/26241/","username":"swetha","ts":"2018-10-25T17:49:08.761Z"}
{"msg":"Has joined the channel.","username":"htinshar","ts":"2018-10-29T08:50:49.757Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kaustavha","ts":"2018-10-31T01:46:48.391Z","type":"uj"}
{"msg":"Hi there, is there a way to get the private key to the ethereum address created via instantiating the chaincode and accessible via the fabproxy?","username":"kaustavha","ts":"2018-10-31T02:03:53.888Z"}
{"msg":"(i used raheelz repo readme)","username":"kaustavha","ts":"2018-10-31T02:04:16.077Z"}
{"msg":"@kaustavha sorry i don't understand you question... are you trying to get the priv key that is used to instantiate evm chaincode?","username":"guoger","ts":"2018-10-31T05:23:12.062Z"}
{"msg":"i am trying to get the priv key behind the default account given to us. and yes i do believe its used to instantiate evm contracts, its an ethereum account on the evm, but not to instantiate evm chaincode","username":"kaustavha","ts":"2018-10-31T08:13:35.226Z"}
{"msg":"https://github.com/IBM/loyalty-points-evm-fabric","username":"kaustavha","ts":"2018-10-31T08:14:18.687Z"}
{"msg":"if you look at that readme, im trying to get the privkey behind the web3.eth.accounts[0] entity in step 3","username":"kaustavha","ts":"2018-10-31T08:14:36.558Z"}
{"msg":"@kaustavha ah, in that case, it's the priv key you start `fab3`(fabproxy) with. what `evmcc` does is to `stub.GetCreator()` and convert it to address.","username":"guoger","ts":"2018-10-31T08:39:21.017Z"}
{"msg":"Has joined the channel.","username":"sreeharsha_katta","ts":"2018-10-31T13:05:38.249Z","type":"uj"}
{"msg":"Ah okay so perhaps i can hook into the fab proxy and get it to spit out the privkey then. ","username":"kaustavha","ts":"2018-10-31T13:37:08.250Z"}
{"msg":"So im trying to run the simpleStorage contract but i keep getting errors after deploying the contract\n```\nmyContract.set(10)\nError: Failed to execute transaction: Transaction processing for endorser [localhost:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to deploy code: call error: invalid opcode 4D697373696E67206F70636F64652030783437\n\n```","username":"kaustavha","ts":"2018-10-31T13:39:41.893Z"}
{"msg":"```\n myContract.get()\nError: Failed to query the ledger: ChaincodeID and Fcn are required\n```","username":"kaustavha","ts":"2018-10-31T13:40:03.174Z"}
{"msg":"@kaustavha I need a little more information about the setup. Those errors look like fab3 isn't properly configured with your network","username":"swetha","ts":"2018-10-31T22:43:04.883Z"}
{"msg":"Also the account address that you get that you need for web3, is not the private key. It is an address that is generated from a user's public key. You need it because web3 requires it to be set, but in terms of fabric it looks at the public key of the signed transaction and doesn't pay attention to the converted account address.","username":"swetha","ts":"2018-10-31T22:44:44.908Z"}
{"msg":"Is this the tutorial you are looking at https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md ?","username":"swetha","ts":"2018-10-31T22:45:11.819Z"}
{"msg":"If you are testing the simple storage contract this might be a better tutorial: https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md ?","username":"swetha","ts":"2018-10-31T22:45:11.819Z"}
{"msg":"Also what did you need the private key for? The account address that gets spit out is mostly needed to be able to use web3. The address as Jay mentions is just a translation of a person's public key","username":"swetha","ts":"2018-10-31T22:47:45.747Z"}
{"msg":"The private key should be in your generated certificates for the user you have specified for fab3 (fabproxy)","username":"swetha","ts":"2018-10-31T22:49:30.787Z"}
{"msg":"@cbf @guoger , https://gerrit.hyperledger.org/r/#/c/26323/ has gotten a couple rounds of review from @swetha , and should be close. ","username":"MHBauer","ts":"2018-10-31T23:35:01.588Z"}
{"msg":"this is the implementaiton of I think the last function necessary in the json-rpc for remix to work as far as I've tested.","username":"MHBauer","ts":"2018-10-31T23:35:33.523Z"}
{"msg":"great, i'll take a look today","username":"guoger","ts":"2018-11-01T03:30:28.698Z"}
{"msg":"btw, https://www.the-blockchain.com/2018/10/28/ethereum-now-on-hyperledger-fabric/","username":"guoger","ts":"2018-11-01T03:30:31.342Z"}
{"msg":"we are reported :) also, folks in china are chatting about this in wechat groups and excited to try","username":"guoger","ts":"2018-11-01T03:31:08.282Z"}
{"msg":"When I pass long byte code of the smart contract to this command, `peer chaincode invoke -n <chaincodeName> -C hivelocitychannel  -c '{\"Args\":[\"0000000000000000000000000000000000000000\",\"'<long byteCode>'\"]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/hivelocity.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n`, I've got this error `Error: endorsement failure during invoke. response: status:500 message:\"failed to deploy code: call error: REVERT not yet fully implemented`. But when I try to pass short byte code, the command is pass and contract is correctly install. I would like to know, how can I pass long byte code to that command. ","username":"htinshar","ts":"2018-11-01T05:16:07.848Z"}
{"msg":"When I pass long byte code of the smart contract to this command, `peer chaincode invoke -n <chaincodeName> -C hivelocitychannel  -c '{\"Args\":[\"0000000000000000000000000000000000000000\",\"'<long byteCode>'\"]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/hivelocity.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n`,  I have got this error `Error: endorsement failure during invoke. response: status:500 message:\"failed to deploy code: call error: REVERT not yet fully implemented`. But when I try to pass short byte code, the command is pass and contract is correctly install. I would like to know, how can I pass long byte code to that command. ","username":"htinshar","ts":"2018-11-01T05:16:07.848Z"}
{"msg":"When I pass long byte code of the smart contract to this command, ```peer chaincode invoke -n <chaincodeName> -C hivelocitychannel  -c '{\"Args\":[\"0000000000000000000000000000000000000000\",\"'<long byteCode>'\"]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/hivelocity.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n```,  I have got this error `Error: endorsement failure during invoke. response: status:500 message:\"failed to deploy code: call error: REVERT not yet fully implemented`. But when I try to pass short byte code, the command is pass and contract is correctly install. I would like to know, how can I pass long byte code to that command. ","username":"htinshar","ts":"2018-11-01T05:16:07.848Z"}
{"msg":"When I pass long byte code of the smart contract to this command, ```peer chaincode invoke -n <chaincodeName> -C <channelname>  -c '{\"Args\":[\"0000000000000000000000000000000000000000\",\"'<long byteCode>'\"]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/hivelocity.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n```,  I have got this error `Error: endorsement failure during invoke. response: status:500 message:\"failed to deploy code: call error: REVERT not yet fully implemented`. But when I try to pass short byte code, the command is pass and contract is correctly install. I would like to know, how can I pass long byte code to that command. ","username":"htinshar","ts":"2018-11-01T05:16:07.848Z"}
{"msg":"i don't think there's a problem with the length of bytecode. i suspect the bytecode is erroneous... make sure you are installing compiled bytecode, instead of runtime bytecode","username":"guoger","ts":"2018-11-01T05:18:50.508Z"}
{"msg":"i don't think this is a problem with the length of bytecode. i suspect the bytecode is erroneous... make sure you are installing compiled bytecode, instead of runtime bytecode","username":"guoger","ts":"2018-11-01T05:18:50.508Z"}
{"msg":"@guoger This is my test contract `https://ropsten.etherscan.io/address/0x85fd9925754267054c11d3ba7cae31167fde4a45`, I also try with copy the source code to `remix` and get the compiled bytecode from `remix`.  And pass that bytecode to above command, but the error is still happen. ","username":"htinshar","ts":"2018-11-01T05:27:39.598Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=NacdxATbMweTZqxRR) @guoger  I found the bugs, the error is because of I use `oraclize` service in my smart contract.","username":"htinshar","ts":"2018-11-01T10:10:27.780Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=NacdxATbMweTZqxRR","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=NacdxATbMweTZqxRR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=prKd3xJ7AB9W8LuPs) @guoger Seems to be a lot of articles coming up about the work!","username":"swetha","ts":"2018-11-01T16:56:27.171Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=prKd3xJ7AB9W8LuPs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=prKd3xJ7AB9W8LuPs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"wowee","username":"MHBauer","ts":"2018-11-01T17:45:50.554Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=prKd3xJ7AB9W8LuPs) @guoger super duper","username":"MHBauer","ts":"2018-11-01T17:46:03.209Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=prKd3xJ7AB9W8LuPs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=prKd3xJ7AB9W8LuPs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I should pet back on the FRENCH + CHINESE language lessons.","username":"MHBauer","ts":"2018-11-01T17:47:03.913Z"}
{"msg":"and typing.","username":"MHBauer","ts":"2018-11-01T17:47:12.002Z"}
{"msg":"Has joined the channel.","username":"nrohith","ts":"2018-11-02T20:46:55.706Z","type":"uj"}
{"msg":"Has joined the channel.","username":"carlosfaria","ts":"2018-11-03T00:54:03.703Z","type":"uj"}
{"msg":"@MHBauer replied in [your CR](https://gerrit.hyperledger.org/r/c/26323/), LGTM, +2'ed.","username":"guoger","ts":"2018-11-03T01:23:50.340Z"}
{"msg":"and with that i believe we have remix support!","username":"swetha","ts":"2018-11-05T19:11:20.285Z"}
{"msg":"@MHBauer I tweaked your CR to get it to pass CI https://gerrit.hyperledger.org/r/c/27295/","username":"cbf","ts":"2018-11-06T07:28:29.697Z"}
{"msg":"@swetha awesome!","username":"cbf","ts":"2018-11-06T07:28:50.844Z"}
{"msg":"Has joined the channel.","username":"yoheiueda","ts":"2018-11-07T01:17:22.607Z","type":"uj"}
{"msg":"Has joined the channel.","username":"enriquebusti","ts":"2018-11-07T12:01:14.454Z","type":"uj"}
{"msg":"Has joined the channel.","username":"matthewphamilton","ts":"2018-11-07T14:28:00.352Z","type":"uj"}
{"msg":"Lots of articles about this work, congrats to everyone. Where can I find documentation to learn more?","username":"matthewphamilton","ts":"2018-11-07T14:30:04.968Z"}
{"msg":"Our tutorial/doc at the moment is here: https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md","username":"swetha","ts":"2018-11-07T18:10:25.863Z"}
{"msg":"@matthewphamilton Our tutorial/doc at the moment is here: https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md","username":"swetha","ts":"2018-11-07T18:10:25.863Z"}
{"msg":"ty @swetha ","username":"matthewphamilton","ts":"2018-11-07T19:22:05.792Z"}
{"msg":"Np!","username":"swetha","ts":"2018-11-07T19:22:14.519Z"}
{"msg":"Has joined the channel.","username":"mkhraisha","ts":"2018-11-07T21:46:41.243Z","type":"uj"}
{"msg":"@cbf thanks for looking at https://gerrit.hyperledger.org/r/27295","username":"MHBauer","ts":"2018-11-08T01:26:57.354Z"}
{"msg":"Has joined the channel.","username":"VenkatThota","ts":"2018-11-08T11:10:50.071Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Afe95","ts":"2018-11-10T14:38:43.077Z","type":"uj"}
{"msg":"@cbf @guoger @MHBauer https://gerrit.hyperledger.org/r/#/c/26824/ this is finally ready for review","username":"swetha","ts":"2018-11-12T17:18:13.184Z"}
{"msg":"Hi, is there any way i can currently see what the transaction did? so if i make a call on a smart contract in the EVMCC to mint 5 tokens to address 1, where would i be able to look for that information?","username":"mkhraisha","ts":"2018-11-12T20:46:32.702Z"}
{"msg":"@mkhraisha Are you wanting to see the transaction inputs? You can query the fabric ledger for the transaction using the Fabric txID or you can pass in the txID to getTransactionByHash using Fab3 and web3. The EVMCC does not have any tokens associated with it and accounts will not have any balance either, in case that was what you were asking in the second part of your question. The \"account\" is generated on the fly from the user's public key but not stored anywhere.","username":"swetha","ts":"2018-11-12T21:54:55.418Z"}
{"msg":"Has joined the channel.","username":"rameshthoomu","ts":"2018-11-13T00:55:05.981Z","type":"uj"}
{"msg":"@swetha ^^","username":"rameshthoomu","ts":"2018-11-13T01:05:50.804Z"}
{"msg":"Oh great! thanks @rameshthoomu !","username":"swetha","ts":"2018-11-13T01:08:37.953Z"}
{"msg":"That's a sad bot right there! ;-)","username":"compleatang","ts":"2018-11-13T04:05:16.808Z"}
{"msg":"@swetha When i query the ledger using a fabric txID i get a txHash, a blockHash, a blockNumber, contractAddress ,gasUsed,cumGasUsed and transactionIndex. I would like to know what function was called on the contract. for example in a normal Ethereum TX theres a logs object that in an ERC20 transfer would include from/to/amount etc. If i implement that exact same erc20 in the evmcc how am i able to know my tx details","username":"mkhraisha","ts":"2018-11-13T16:04:36.510Z"}
{"msg":"@mkhraisha How are you querying the ledger?","username":"swetha","ts":"2018-11-13T18:35:35.669Z"}
{"msg":"from fab3 for example fab3.eth.getTransactionReceipt(tx);","username":"mkhraisha","ts":"2018-11-13T18:38:31.786Z"}
{"msg":"@swetha  from fab3 for example fab3.eth.getTransactionReceipt(tx);","username":"mkhraisha","ts":"2018-11-13T18:38:31.786Z"}
{"msg":"do `fab3.eth.getTransaction(tx)`","username":"swetha","ts":"2018-11-13T18:39:48.921Z"}
{"msg":"that should give you some more information","username":"swetha","ts":"2018-11-13T18:40:24.865Z"}
{"msg":"We also don't support logs or events at the moment","username":"swetha","ts":"2018-11-13T18:42:28.192Z"}
{"msg":"do you support a way to get all of my transaction history","username":"mkhraisha","ts":"2018-11-13T18:43:15.952Z"}
{"msg":"No, we don't have any filtering implemented yet. You have manually go through the blocks","username":"swetha","ts":"2018-11-13T18:44:20.631Z"}
{"msg":"Has joined the channel.","username":"eetti","ts":"2018-11-13T18:45:56.127Z","type":"uj"}
{"msg":"ok thank you","username":"mkhraisha","ts":"2018-11-13T18:46:32.113Z"}
{"msg":"@swetha i have attempted to do fab3.eth.getTransaction(tx) however it tells me that it can't find method \"eth.getTransactionByHash\"","username":"mkhraisha","ts":"2018-11-13T19:13:14.808Z"}
{"msg":"@mkhraisha That was a recent change that was added, so try pulling on master and rebuilding fab3","username":"swetha","ts":"2018-11-13T20:08:31.962Z"}
{"msg":"@cbf & @guoger, this is ready for review: https://gerrit.hyperledger.org/r/#/c/27295/","username":"swetha","ts":"2018-11-13T20:13:24.358Z"}
{"msg":"merged","username":"guoger","ts":"2018-11-14T01:41:02.928Z"}
{"msg":"got a more patches to be reviewed: https://gerrit.hyperledger.org/r/#/c/27515/","username":"swetha","ts":"2018-11-14T04:39:27.812Z"}
{"msg":"got more patches to be reviewed: https://gerrit.hyperledger.org/r/#/c/27515/","username":"swetha","ts":"2018-11-14T04:39:27.812Z"}
{"msg":"smart contract can call function from another contract in fabric-evm? I have smart contract A and B and both contract are installed under one evm chaincode. Installation and invoke single function is fine. But when I invoke the function from contract A which is calling contract B function, It show `Contract does not have permission to call` error. I'm also pass contact B address in constructor argument when I deploy with web3 js SDK. This is sample test contract ``` contract A  {\n   ContractBInterface  contractB;\n\n       constructor(ContractBInterface _stateHolder) public {\n        contractB = _stateHolder;\n    }\n\n    function getFee() public view returns(uint256) {\n         uint256f fee = contractB.getFee();\n         return fee;\n   }\n}\n```","username":"htinshar","ts":"2018-11-14T05:06:59.367Z"}
{"msg":"Has joined the channel.","username":"hyper-sunder","ts":"2018-11-14T10:25:44.537Z","type":"uj"}
{"msg":"@swetha I have recently watched the video which explains about `EVM with Fabric`. Can we do `value transaction` using `EVM`? If yes, where does actually does? Inside the Hyperledger Fabric or Etherum Network?","username":"hyper-sunder","ts":"2018-11-14T10:27:31.483Z"}
{"msg":"https://www.youtube.com/watch?v=Rr1Qi-n8vag => Explained well.","username":"hyper-sunder","ts":"2018-11-14T10:31:01.153Z"}
{"msg":"Has joined the channel.","username":"MuthuT","ts":"2018-11-14T14:32:34.750Z","type":"uj"}
{"msg":"@hyper-sunder not clear what you mean by a value transaction. Do you mean can you transact token ownership? To be clear, the EVM in the fabric-chaincode-evm is completely independent of the Ethereum network. We don't have Ether, and we don't require gas for smart contract operations. You can deploy an Ethereum smart contract written in Solidity, Vyper or any other valid DSL that can be compiled into EVM bytecode. e.g. you could deploy an ERC20 token contract and leverage it to manage ownership and transfers of a token - where that token exists within the context of the Fabric network in which it was initially created.","username":"cbf","ts":"2018-11-14T15:08:50.205Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=HgKmxmRJL3asRKZFQ) @htinshar @htinshar I am not sure why that error occurred. Is it possible to send me the two contracts you used for me to investigate?","username":"swetha","ts":"2018-11-14T16:55:25.674Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=HgKmxmRJL3asRKZFQ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=HgKmxmRJL3asRKZFQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=HgKmxmRJL3asRKZFQ) @htinshar  I am not sure why that error occurred. Is it possible to send me the two contracts you used for me to investigate?","username":"swetha","ts":"2018-11-14T16:55:25.674Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=HgKmxmRJL3asRKZFQ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=HgKmxmRJL3asRKZFQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf thanks for the reply. The `value transaction` means, transferring `Ether` from one account to another. ","username":"hyper-sunder","ts":"2018-11-14T17:06:21.141Z"}
{"msg":"@cbf So, EVM is used to run `Ethereum Smart Contract` written Solidity, Vyper or any other valid DSL in `Fabric` without refactoring it? Its not to do with `Ether` coin or token. Am I correct? Kindly correct me if I am wrong","username":"hyper-sunder","ts":"2018-11-14T17:11:07.724Z"}
{"msg":"@hyper-sunder yes you are correct. If it can be compiled into EVM bytecode it should be able to run in the EVM in fabric. However as Chris mentioned we do not support Ether, value transactions, or any other tokens.","username":"swetha","ts":"2018-11-14T17:14:28.259Z"}
{"msg":"@swetha Thanks a lot :)","username":"hyper-sunder","ts":"2018-11-14T17:15:36.482Z"}
{"msg":"Is there any roadmap for the same?","username":"hyper-sunder","ts":"2018-11-14T17:15:48.768Z"}
{"msg":"For tokens, no we don't have any plan for adding them as part of the EVM work","username":"swetha","ts":"2018-11-14T17:16:12.743Z"}
{"msg":"@swetha fine. For instance, if a `Ethereum Smart Contract` involves some kind of amount transaction and I convert it into bytecode and install install it in `fabric-channel`. In that case how does EVM handles the `amount transfer` part of code? ","username":"hyper-sunder","ts":"2018-11-14T17:20:15.866Z"}
{"msg":"The asset that is being transferred would have to be part of the smart contract. If you do amount transfer in which you are transferring ether from one account to another, that will fail. We don't store user accounts as we don't need to keep track of balances","username":"swetha","ts":"2018-11-14T17:23:11.939Z"}
{"msg":"@swetha and @cbf thanks a lot for clarification and making me to understand","username":"hyper-sunder","ts":"2018-11-14T17:24:34.852Z"}
{"msg":"Np!","username":"swetha","ts":"2018-11-14T17:24:44.564Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6) @swetha @swetha yes, I will send you my test contract address in etherscan. This is contract A-token contract(https://ropsten.etherscan.io/address/0x380e270dd784ad78bffe868739312dc316471463), This is contract B(https://ropsten.etherscan.io/address/0x3df6f9f4bac332a533b8faa419800aadbeedd711#code)","username":"htinshar","ts":"2018-11-15T04:12:39.749Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6) @swetha  yes, I will send you my test contract address in etherscan. This is contract A-token contract(https://ropsten.etherscan.io/address/0x380e270dd784ad78bffe868739312dc316471463), This is contract B(https://ropsten.etherscan.io/address/0x3df6f9f4bac332a533b8faa419800aadbeedd711#code)","username":"htinshar","ts":"2018-11-15T04:12:39.749Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6) @swetha  yes, I will send you my test contract address in etherscan. This is contract A-token contract(https://ropsten.etherscan.io/address/0x380e270dd784ad78bffe868739312dc316471463), This is contract B(https://ropsten.etherscan.io/address/0x3df6f9f4bac332a533b8faa419800aadbeedd711#code). When I invoke `transfer` function from contract A, I got the `Contract does not have permission to call ` error.","username":"htinshar","ts":"2018-11-15T04:12:39.749Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6) @swetha  yes, I will send you my test contract address in etherscan. This is contract A-token contract(https://ropsten.etherscan.io/address/0x380e270dd784ad78bffe868739312dc316471463), This is contract B(https://ropsten.etherscan.io/address/0x3df6f9f4bac332a533b8faa419800aadbeedd711#code). When I invoke `transfer` function from contract A (with web3 sdk), I got the `Contract does not have permission to call ` error.","username":"htinshar","ts":"2018-11-15T04:12:39.749Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=oRJbc84Rs8Kn5e9N6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@swetha I tried to setup EVM smart contract on fabric and able to succefully deploy and invoke smart contract but while using fabproxy not able to get contract address during contract deployment ,.,.where we can check the logs ..please find the error","username":"knagware9","ts":"2018-11-15T11:03:17.364Z"}
{"msg":"","username":"knagware9","ts":"2018-11-15T11:03:47.749Z","attachments":[{"type":"file","title":"Screenshot from 2018-11-15 16-33-30.png","title_link":"/file-upload/Hn72Diub9uHNQ5zSt/Screenshot%20from%202018-11-15%2016-33-30.png","image_url":"/file-upload/Hn72Diub9uHNQ5zSt/Screenshot%20from%202018-11-15%2016-33-30.png","image_type":"image/png","image_size":192952,"url":"/file-upload/Hn72Diub9uHNQ5zSt/Screenshot%20from%202018-11-15%2016-33-30.png","remote":false,"fileId":"Hn72Diub9uHNQ5zSt","fileName":"Screenshot from 2018-11-15 16-33-30.png"}]}
{"msg":"@knagware9 when you deploy the contract only the transaction hash will be filled in. you get the contract address by getting the transaction receipt for the deployment. ","username":"swetha","ts":"2018-11-15T18:32:38.571Z"}
{"msg":"@htinshar When you say contract A what is the actual token you have deployed and how are you initializing the balances?","username":"swetha","ts":"2018-11-15T19:22:45.043Z"}
{"msg":"@swetha when deploy token contract(A), initial token supply is already set up. You might be notice at `INITIAL_SUPPLY` value and set that value to owner `balances[msg.sender] = INITIAL_SUPPLY`.  In that contract when I remove line `349 to 352` (which is calling function from another contract), I can invoke transfer function from `web3` with `fabric proxy`. And also, before migrating to fabric, every function can invoke when I test that contracts with native evm and `web3` sdk.","username":"htinshar","ts":"2018-11-16T02:16:46.486Z"}
{"msg":"@swetha when deploy token contract(A), initial token supply is already set up. You might be notice at `INITIAL_SUPPLY` value and set that value to owner `balances[msg.sender] = INITIAL_SUPPLY`.  In that contract when I remove line `349 to 352` (which is calling function from another contract), I can invoke transfer function from `web3` with `fabric proxy`. And also, before migrating to fabric, every function can invoke when I test that contracts with native evm and `web3` sdk. Do you have any example resources for testing fabric evmcc with two smart contract which is calling function through interface?","username":"htinshar","ts":"2018-11-16T02:16:46.486Z"}
{"msg":"@swetha Thanks for your reply. When deploy token contract(A), initial token supply is already set up. You might be notice at `INITIAL_SUPPLY` value and set that value to owner `balances[msg.sender] = INITIAL_SUPPLY`. And actual token is custom token which is similar like this contract `https://www.ethereum.org/token`. But I was calling function from another contract in my custom token contract. In my contract when I remove line `349 to 352` (which is calling function from another contract), I can invoke transfer function from `web3` with `fabric proxy`. And also, before migrating to fabric, every function can invoke when I test that contracts with native evm and `web3` sdk. Do you have any example resources for testing fabric evmcc with two smart contract which is calling function through interface?","username":"htinshar","ts":"2018-11-16T02:16:46.486Z"}
{"msg":"Has joined the channel.","username":"bairathirahul","ts":"2018-11-16T03:43:31.736Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=Se5GqcYMaADHYbLeK) @swetha How I can get the transaction receipt ,,we need contract address for next steps","username":"knagware9","ts":"2018-11-16T05:00:26.729Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=Se5GqcYMaADHYbLeK","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=Se5GqcYMaADHYbLeK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=nyb8hGJyyMbPL6wr3) @knagware9 @knagware9 after `deployedContract = SimpleStorage.new([], {data: simpleStorageBytecode}) `, you can get your contract address with this script `address = web3.eth.getTransactionReceipt(deployedContract.transactionHash).contractAddress`(small letter `C` in `contractAddress`)","username":"htinshar","ts":"2018-11-16T05:12:11.954Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=nyb8hGJyyMbPL6wr3","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=nyb8hGJyyMbPL6wr3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=nyb8hGJyyMbPL6wr3) @knagware9  after `deployedContract = SimpleStorage.new([], {data: simpleStorageBytecode}) `, you can get your contract address with this script `address = web3.eth.getTransactionReceipt(deployedContract.transactionHash).contractAddress`(small letter `C` in `contractAddress`)","username":"htinshar","ts":"2018-11-16T05:12:11.954Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=nyb8hGJyyMbPL6wr3","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=nyb8hGJyyMbPL6wr3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=g3KJxB8o5H224sEpW) @htinshar Thanks it works...actually in the instructions its Capital C  https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md ","username":"knagware9","ts":"2018-11-16T05:25:19.910Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=g3KJxB8o5H224sEpW","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=g3KJxB8o5H224sEpW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@swetha @htinshar I tried to setup https://github.com/IBM/vote-hyperledger-ethereum","username":"knagware9","ts":"2018-11-16T07:31:48.490Z"}
{"msg":"everyting works fine but during Vote .its giving error","username":"knagware9","ts":"2018-11-16T07:32:11.674Z"}
{"msg":"xample app listening on port 3000!\nError: Failed to query the ledger: Transaction processing for endorser [localhost:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: call error: REVERT not yet fully implemented\n    at Object.InvalidResponse (/home/kamlesh/work/src/github.com/hyperledger/web3-fabric-voting-dapp/node_modules/web3/lib/web3/errors.js:38:16)\n    at RequestManager.send (/home/kamlesh/work/src/github.com/hyperledger/web3-fabric-voting-dapp/node_modules/web3/lib/web3/requestmanager.js:61:22)\n","username":"knagware9","ts":"2018-11-16T07:32:22.683Z"}
{"msg":"","username":"knagware9","ts":"2018-11-16T07:33:01.610Z","attachments":[{"type":"file","title":"Screenshot from 2018-11-16 13-02-44.png","title_link":"/file-upload/3f5YWifabTQ2Bm5xY/Screenshot%20from%202018-11-16%2013-02-44.png","image_url":"/file-upload/3f5YWifabTQ2Bm5xY/Screenshot%20from%202018-11-16%2013-02-44.png","image_type":"image/png","image_size":150234,"url":"/file-upload/3f5YWifabTQ2Bm5xY/Screenshot%20from%202018-11-16%2013-02-44.png","remote":false,"fileId":"3f5YWifabTQ2Bm5xY","fileName":"Screenshot from 2018-11-16 13-02-44.png"}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=sEwNEvmNtpfWFqhxM) @knagware9 it is working, what value do you put in text box? In `server.js` line `25`, contract is deploy and init `candidateList` with this three value `yes, no, maybe`. So in UI textbox you should add `yes` or `no` or `maybe` with `small letter`.","username":"htinshar","ts":"2018-11-16T08:05:24.325Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=sEwNEvmNtpfWFqhxM","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=sEwNEvmNtpfWFqhxM","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=eKeycmSDLpJFHG2ij) @htinshar Thanks...its taking only small letter like yes no","username":"knagware9","ts":"2018-11-16T08:20:01.799Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=eKeycmSDLpJFHG2ij","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=eKeycmSDLpJFHG2ij","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=g3KJxB8o5H224sEpW) @htinshar Thanks for catching that. We will fix that in the readme","username":"swetha","ts":"2018-11-16T18:42:08.796Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=g3KJxB8o5H224sEpW","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=g3KJxB8o5H224sEpW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@htinshar I am able to recreate the error and am looking into it","username":"swetha","ts":"2018-11-16T20:01:31.994Z"}
{"msg":"I have created a jira ticket for the problem. Thanks for finding the bug: https://jira.hyperledger.org/browse/FAB-12903","username":"swetha","ts":"2018-11-16T20:41:36.044Z"}
{"msg":"I have created a jira issue for the problem. Thanks for finding the bug: https://jira.hyperledger.org/browse/FAB-12903","username":"swetha","ts":"2018-11-16T20:41:36.044Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=pfSBTBmmc6Pthwp9A) @knagware9 Can you make an issue on that repo explaining the problem?","username":"swetha","ts":"2018-11-16T20:49:26.237Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=pfSBTBmmc6Pthwp9A","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=pfSBTBmmc6Pthwp9A","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"BellaAdams","ts":"2018-11-17T00:45:56.078Z","type":"uj"}
{"msg":"@cbf & @guoger this is ready for review: https://gerrit.hyperledger.org/r/#/c/27624/","username":"swetha","ts":"2018-11-17T01:40:04.549Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=H9mTfwsWtXpNghSsn) @swetha Thank you ","username":"htinshar","ts":"2018-11-19T03:04:55.534Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=H9mTfwsWtXpNghSsn","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=H9mTfwsWtXpNghSsn","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=JojymQ8xDfjLtt9sL) @swetha Swetha .its not issue ..just small & capital letter issue ","username":"knagware9","ts":"2018-11-19T06:15:10.679Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=JojymQ8xDfjLtt9sL","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=JojymQ8xDfjLtt9sL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"snowy13","ts":"2018-11-19T15:57:19.973Z","type":"uj"}
{"msg":"@cbf @guoger @swetha https://gerrit.hyperledger.org/r/#/c/27497/ should be done. has testing now, full implemented the fuller transaction details.","username":"MHBauer","ts":"2018-11-19T19:16:31.745Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=7i5mtaoseaQqCjAqE) @knagware9 Even then, I would create a github issue explaining the confusion","username":"swetha","ts":"2018-11-19T19:28:37.841Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=7i5mtaoseaQqCjAqE","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=7i5mtaoseaQqCjAqE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"huxiangdong","ts":"2018-11-20T00:32:28.784Z","type":"uj"}
{"msg":"anybody around know how to troubleshoot the integration tests? \n```\n[d][OrdererOrg.orderer] spawned /var/folders/km/qbjq1l4n0hng7j8jtc4kgjv00000gn/T/gexec_artifacts786700117/g779727705/orderer (pid: 8851)\n[e][OrdererOrg.orderer] 2018-11-20 10:34:40.822 PST [orderer.common.server] Main -> ERRO 001 failed to parse config:  Error unmarshaling config into struct: 1 error(s) decoding:\n[e][OrdererOrg.orderer]\n[e][OrdererOrg.orderer] * 'General' has invalid keys: LogFormat, LogLevel\n```\nI don't know how to begin looking at this.","username":"MHBauer","ts":"2018-11-20T18:39:11.271Z"}
{"msg":"works on the server, but I'd like to run it on my machine before pushing","username":"MHBauer","ts":"2018-11-20T18:45:15.119Z"}
{"msg":"weird issue involving the gopath, I think.","username":"MHBauer","ts":"2018-11-20T19:31:40.136Z"}
{"msg":"tests seem to use fabric in local gopath if it exists, but will download their own if it does not. ","username":"MHBauer","ts":"2018-11-20T19:32:16.521Z"}
{"msg":"and it downloads a new copy into the gopath, that's not good.","username":"MHBauer","ts":"2018-11-20T19:58:24.578Z"}
{"msg":"pushed additional content to the existing web3 tests in https://gerrit.hyperledger.org/r/27682/\n","username":"MHBauer","ts":"2018-11-20T21:11:42.799Z"}
{"msg":"Has joined the channel.","username":"sanket1211","ts":"2018-11-21T06:12:10.868Z","type":"uj"}
{"msg":"Has joined the channel.","username":"engiwip","ts":"2018-11-21T19:11:05.281Z","type":"uj"}
{"msg":"Hi","username":"engiwip","ts":"2018-11-21T19:11:09.788Z"}
{"msg":"I ve had an issue on docker image","username":"engiwip","ts":"2018-11-21T19:12:00.060Z"}
{"msg":"https://github.com/IBM/loyalty-points-evm-fabric/issues/6","username":"engiwip","ts":"2018-11-21T19:12:38.873Z"}
{"msg":"any ideas ?","username":"engiwip","ts":"2018-11-21T19:13:34.529Z"}
{"msg":"I m trying to install and Instantiate EVM chaincode from docker image","username":"engiwip","ts":"2018-11-21T19:22:17.873Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=uPtTMYpM9YgmFGgMF) @MHBauer Yup I think  too . I've the same problem about export variable into gopath...","username":"engiwip","ts":"2018-11-21T19:47:03.407Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=uPtTMYpM9YgmFGgMF","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=uPtTMYpM9YgmFGgMF","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"praveen.aloker","ts":"2018-11-22T05:44:39.453Z","type":"uj"}
{"msg":"@engiwip Are you still having a problem? Looking at the issue, it seems like the right permissions weren't set up. You would have to debug the first network to see why it wasn'","username":"swetha","ts":"2018-11-26T20:58:15.780Z"}
{"msg":"@engiwip Are you still having a problem? Looking at the issue, it seems like the right permissions weren't set up. You would have to debug the first network to see why it isn't being accepted","username":"swetha","ts":"2018-11-26T20:58:15.780Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=xvfvQJhBdxBoGNPoo) @engiwip Morgan was referring to integration tests in `fabric-chaincode-evm` repo. I don't think the gopath is the problem you are facing.","username":"swetha","ts":"2018-11-26T20:59:18.256Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=xvfvQJhBdxBoGNPoo","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=xvfvQJhBdxBoGNPoo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf & @guoger need another round of reviews on this: https://gerrit.hyperledger.org/r/#/c/27624/","username":"swetha","ts":"2018-11-26T21:43:52.081Z"}
{"msg":"@swetha not sure i follow this sentence in commit msg:\n> Only return burrow contract accounts that have all the permissions for contract creation and contract invocation","username":"guoger","ts":"2018-11-27T08:46:57.780Z"}
{"msg":"unclear to me why we want to give all permissions... can you please relate your reasoning here? @swetha thanks","username":"cbf","ts":"2018-11-27T12:32:44.483Z"}
{"msg":"@cbf & @guoger  the permissions here about creating a new contract from a contract and being able to call another contract from a contract","username":"swetha","ts":"2018-11-27T17:43:43.178Z"}
{"msg":"We can set it to only allow the second one, and not allow contract creation from a contract","username":"swetha","ts":"2018-11-27T17:44:14.402Z"}
{"msg":"but we do need to enable at least contracts calling contracts","username":"swetha","ts":"2018-11-27T17:46:35.217Z"}
{"msg":"confused on the jira process. do we not touchclosed things? ","username":"MHBauer","ts":"2018-11-27T19:16:14.705Z"}
{"msg":"cause Iv'e got a couple against https://jira.hyperledger.org/browse/FAB-11081 but not sure if it should be against a *new* jira. hard to say when something like \"integration tests\" could ever be tocally complete.","username":"MHBauer","ts":"2018-11-27T19:17:10.356Z"}
{"msg":"@MHBauer I would put your integration tests with the jira associated with the remix instructions","username":"swetha","ts":"2018-11-27T20:14:08.866Z"}
{"msg":"that one isn't closed yet","username":"swetha","ts":"2018-11-27T20:14:15.110Z"}
{"msg":"i was waiting for the corresponding integration tests to come in before closing that jira","username":"swetha","ts":"2018-11-27T20:14:29.258Z"}
{"msg":"@swetha my preference would be to adhere to principe of least privilege ","username":"cbf","ts":"2018-11-27T20:42:15.357Z"}
{"msg":"@morgan, if a JIRA is closed prematurely then please reopen it. If you cannot, feel free to ping me","username":"cbf","ts":"2018-11-27T20:42:56.909Z"}
{"msg":"@MHBauer , if a JIRA is closed prematurely then please reopen it. If you cannot, feel free to ping me","username":"cbf","ts":"2018-11-27T20:42:56.909Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=S9LmujPXT2F8hyFj8) @cbf I will update the patch to just allow contracts calling other contracts","username":"swetha","ts":"2018-11-27T20:43:53.386Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=S9LmujPXT2F8hyFj8","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=S9LmujPXT2F8hyFj8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"if you are going to use a single JIRA for multiple CRs, then suggest that you indicate this in the CR commit message","username":"cbf","ts":"2018-11-27T20:43:59.569Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=CX9zDabZNGFADH9xj) @cbf I think this adds more questions for me. I'm at \"How do I JIRA\" levels of understanding any interaction.","username":"MHBauer","ts":"2018-11-27T23:07:33.219Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=CX9zDabZNGFADH9xj","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=CX9zDabZNGFADH9xj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf @guoger https://gerrit.hyperledger.org/r/#/c/27652/ is ready","username":"MHBauer","ts":"2018-11-27T23:08:08.384Z"}
{"msg":"@MHBauer is https://gerrit.hyperledger.org/r/c/27653/2 ready? i would like to get it in to have proper logging","username":"guoger","ts":"2018-11-28T02:42:06.218Z"}
{"msg":"@guoger I was hoping we can hold off on that one until after https://gerrit.hyperledger.org/r/#/c/27747/ & https://gerrit.hyperledger.org/r/#/c/27624/","username":"swetha","ts":"2018-11-28T03:16:27.212Z"}
{"msg":"@guoger I was hoping we can hold off on that one until after ","username":"swetha","ts":"2018-11-28T03:16:27.212Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/27747/","username":"swetha","ts":"2018-11-28T03:17:07.784Z"}
{"msg":"& https://gerrit.hyperledger.org/r/#/c/27321/","username":"swetha","ts":"2018-11-28T03:17:17.053Z"}
{"msg":"the logging patch is easier to rebase than those two","username":"swetha","ts":"2018-11-28T03:17:26.982Z"}
{"msg":"got it","username":"guoger","ts":"2018-11-28T03:17:37.406Z"}
{"msg":"but otherwise i do believe the patch is ready to be reviewed","username":"swetha","ts":"2018-11-28T03:18:20.663Z"}
{"msg":"also need another set of reviews on the permissions","username":"swetha","ts":"2018-11-28T03:19:39.479Z"}
{"msg":"also need another set of reviews on the permissions patch","username":"swetha","ts":"2018-11-28T03:19:39.479Z"}
{"msg":"for 27231 is there something I can do?  ","username":"MHBauer","ts":"2018-11-28T05:34:44.047Z"}
{"msg":"I don't think logging should impact that too adly.","username":"MHBauer","ts":"2018-11-28T05:34:56.568Z"}
{"msg":"If it seems like 27747 & 27321 will take too long to review then maybe, but rebasing is not going to be simple because the methods are being moved in 27747","username":"swetha","ts":"2018-11-28T18:31:10.051Z"}
{"msg":"@swetha when i call a chaincode query like  ` peer chaincode query -n evmcc -C nm-channel -c '{\"Args\":[\"account\"]}'` it creates a new docker image, is that expected behaviour?\n","username":"mkhraisha","ts":"2018-11-28T18:43:35.242Z"}
{"msg":"@mkhraisha If that is the first thing you are doing with the chaincode, yes it should be creating a new docker image. Fabric peers will create the chaincode container only when it is first invoked/queried","username":"swetha","ts":"2018-11-28T18:50:34.297Z"}
{"msg":"@cbf whois ry and where do they live here on rocket chat? ","username":"MHBauer","ts":"2018-11-28T21:14:03.084Z"}
{"msg":"can I edit someone elses change or is that not possile? ","username":"MHBauer","ts":"2018-11-29T18:44:56.564Z"}
{"msg":"do you mean on gerrit?","username":"swetha","ts":"2018-11-29T20:31:44.636Z"}
{"msg":"on gerrit, yes.","username":"MHBauer","ts":"2018-11-29T23:08:03.798Z"}
{"msg":"wow, what builds the fabproxy binary? there's nothing in the makefile","username":"MHBauer","ts":"2018-11-29T23:08:31.559Z"}
{"msg":"what is our release process?","username":"MHBauer","ts":"2018-11-29T23:09:27.482Z"}
{"msg":"We try to go with the Fabric releases which is once a quarter. Fab3 is expected to be built manually by users at the moment","username":"swetha","ts":"2018-11-29T23:16:08.494Z"}
{"msg":"which means what?","username":"MHBauer","ts":"2018-11-29T23:21:04.763Z"}
{"msg":"git ignore looks really weird too.","username":"MHBauer","ts":"2018-11-29T23:27:50.657Z"}
{"msg":"I think that is a remnant from when the evm was supposed to be a chaincode plugin. Most of that is probably unnecessary now","username":"swetha","ts":"2018-11-30T00:33:48.745Z"}
{"msg":"well, I maed this https://gerrit.hyperledger.org/r/#/c/27827/ to make me happy.","username":"MHBauer","ts":"2018-11-30T00:34:46.006Z"}
{"msg":"@MHBauer https://jira.hyperledger.org/browse/FAB-13065 for the ignored defers","username":"swetha","ts":"2018-11-30T01:00:21.958Z"}
{"msg":"@cbf & @guoger we need reviews on the following:\nContract to Contract invocations bug: https://gerrit.hyperledger.org/r/#/c/27624/\nRefactor tx receipt in preparation for events code : https://gerrit.hyperledger.org/r/#/c/27747/\nEvents: https://gerrit.hyperledger.org/r/#/c/27321/\nBuild Cleanup: https://gerrit.hyperledger.org/r/#/c/27827/","username":"swetha","ts":"2018-12-03T02:09:46.341Z"}
{"msg":"@cbf @swetha Will there be a v1.3 release for fabric-evm still?  Or do you want to skip to v1.4 and release with the other components in mid-December?","username":"dave.enyeart","ts":"2018-12-03T06:35:37.107Z"}
{"msg":"Please update the epic and story FixVersions accordingly","username":"dave.enyeart","ts":"2018-12-03T06:35:50.946Z"}
{"msg":"@swetha pls remind me of the difference of `SentTx` and `Call`?","username":"guoger","ts":"2018-12-03T06:57:12.909Z"}
{"msg":"@swetha pls remind me of the difference between `SentTx` and `Call`?","username":"guoger","ts":"2018-12-03T06:57:12.909Z"}
{"msg":"@MHBauer have you sorted out your +2 privilege?","username":"guoger","ts":"2018-12-03T08:55:38.472Z"}
{"msg":"@guoger Send transaction is submitting a transaction and call is a query","username":"swetha","ts":"2018-12-03T19:29:16.041Z"}
{"msg":"@dave.enyeart I thought we already released fabric-evm as part of 1.3. There was an item that we pushed to 1.4. I will update the epic and fix versions.","username":"swetha","ts":"2018-12-03T19:30:39.184Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=u2x4DENDLkhHo6M7B) @guoger seems that way","username":"MHBauer","ts":"2018-12-03T20:48:03.325Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=u2x4DENDLkhHo6M7B","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=u2x4DENDLkhHo6M7B","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer can you review https://gerrit.hyperledger.org/r/#/c/27624/ & https://gerrit.hyperledger.org/r/#/c/27747/?","username":"swetha","ts":"2018-12-03T21:09:34.898Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=ToQ5aXDMXBxyP5ST7) @swetha fabric-chaincode-evm has no tags, no releases, no release notes, that means it has not been released!  @cbf expected to do this sometime after fabric v1.3 shipped.","username":"dave.enyeart","ts":"2018-12-03T23:26:08.332Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=ToQ5aXDMXBxyP5ST7","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=ToQ5aXDMXBxyP5ST7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I will work with Chris to get that working. I will get back to you after that has all been resolved","username":"swetha","ts":"2018-12-03T23:28:30.600Z"}
{"msg":"thanks!","username":"dave.enyeart","ts":"2018-12-03T23:28:40.123Z"}
{"msg":"what's the release process? To do a relaese?","username":"MHBauer","ts":"2018-12-04T00:48:55.208Z"}
{"msg":"Has joined the channel.","username":"lehors","ts":"2018-12-04T14:23:56.681Z","type":"uj"}
{"msg":"some of the copied scripts we have store things into the fabric repo.","username":"MHBauer","ts":"2018-12-04T22:50:58.154Z"}
{"msg":"Yea, as we use them we have been correcting them","username":"swetha","ts":"2018-12-04T23:16:02.687Z"}
{"msg":"is there a reason we generate our own chaincode stub mock instead of using the one in fabric? ","username":"MHBauer","ts":"2018-12-04T23:17:43.976Z"}
{"msg":"Has joined the channel.","username":"arjitkhullar","ts":"2018-12-05T00:02:15.939Z","type":"uj"}
{"msg":"why are we running both goimports and gofmt? ","username":"MHBauer","ts":"2018-12-05T01:17:56.948Z"}
{"msg":"hi guys,\nmake integration-test fails for me when run against fabric master","username":"lehors","ts":"2018-12-05T15:41:47.059Z"}
{"msg":"it works against fabric 1.3","username":"lehors","ts":"2018-12-05T15:42:02.237Z"}
{"msg":"have you tested that?","username":"lehors","ts":"2018-12-05T15:42:15.443Z"}
{"msg":"does it say something about logFormat/spec?","username":"guoger","ts":"2018-12-05T15:44:37.264Z"}
{"msg":"@lehors  does it say something about logFormat/spec?","username":"guoger","ts":"2018-12-05T15:44:37.264Z"}
{"msg":"also we are preparing a release note saying it works against 1.3, not master","username":"guoger","ts":"2018-12-05T15:45:59.143Z"}
{"msg":"yeah: [e][configtxgen-create-channel-tx] 2018-12-05 16:40:52.381 CET [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003 Writing new channel tx\n[d][OrdererOrg.orderer] spawned /var/folders/j1/4b3ygtd52x50rcq6czdsylwc0000gn/T/gexec_artifacts987406300/g063322320/orderer (pid: 78218)\n[e][OrdererOrg.orderer] 2018-12-05 16:40:52.495 CET [orderer.common.server] Main -> ERRO 001 failed to parse config:  Error unmarshaling config into struct: 1 error(s) decoding:\n[e][OrdererOrg.orderer] \n[e][OrdererOrg.orderer] * 'General' has invalid keys: LogFormat, LogLevel\n\n------------------------------\n‚Ä¢ Failure in Spec Setup (BeforeEach) [1.955 seconds]\n","username":"lehors","ts":"2018-12-05T15:47:42.379Z"}
{"msg":"‚Ä¢ Failure in Spec Setup (BeforeEach) [1.955 seconds]\nEndToEnd [BeforeEach] is able to run evm bytecode contracts \n/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric-chaincode-evm/integration/e2e/e2e_test.go:77\n\n  Timed out after 1.003s.\n  Expected\n      <<-chan struct {} | len:0, cap:0>: 0xc000474540\n  to be closed\n\n  /Users/lehors/Projects/Go/src/github.com/hyperledger/fabric-chaincode-evm/integration/e2e/e2e_test.go:63\n","username":"lehors","ts":"2018-12-05T15:48:33.089Z"}
{"msg":"yeah.. that's expected :( , `orderer.yaml` for v1.3 orderer contained those keys, therefore incompatible with master orderer binary. the fabric we vendored is older than 1.3, however `nwo` integration tests builds fabric peer & orderer on `GOPATH`, which might be master depending on your local repo.","username":"guoger","ts":"2018-12-05T16:29:10.210Z"}
{"msg":"but anyway, we should bump our Fabric to v1.3 at least, cc @swetha @MHBauer ","username":"guoger","ts":"2018-12-05T16:29:43.645Z"}
{"msg":"yeah, that's safe to do because I tested it against 1.3","username":"lehors","ts":"2018-12-05T16:57:15.558Z"}
{"msg":"I couldn't build fabric 1.3.0, it was complaing about the javaenv image not existing","username":"MHBauer","ts":"2018-12-05T20:26:50.545Z"}
{"msg":"@lehors we should be rebased on tag v1.3.0  very specificially and you should get a nice warning if things are out of sync for us","username":"MHBauer","ts":"2018-12-06T20:49:01.718Z"}
{"msg":"fabproxy rpc needs to handle arrays of requests for batch mode.","username":"MHBauer","ts":"2018-12-11T02:28:39.627Z"}
{"msg":"we'd have to edit gorilla to support it, or use the helpful link provided by golang godoc to find a replacement library. https://godoc.org/?q=json-rpc+2.0","username":"MHBauer","ts":"2018-12-11T05:12:01.701Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=abjymTzwM8Jgbt5pr) @MHBauer any idea when support for 1.4 might come?","username":"lehors","ts":"2018-12-11T13:20:11.149Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=abjymTzwM8Jgbt5pr","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=abjymTzwM8Jgbt5pr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I'm actually curious to know what breaks","username":"lehors","ts":"2018-12-11T13:20:52.332Z"}
{"msg":"one would think that 1.4 is backwards compatible with 1.3 and therefore things that work with 1.3 would still work with 1.4... ","username":"lehors","ts":"2018-12-11T13:21:29.800Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=jEsLmpnLNXniZDQNe) @lehors not sure what this would mean, we were based on some version of fabric from July 10, which looks to be v1.1.1 maybe? There wasn't much difficulty at the code level. The main issue was the the integration test framework was changed and we coudl't find a specific image that caused it to blow up.","username":"MHBauer","ts":"2018-12-11T18:46:10.062Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=jEsLmpnLNXniZDQNe","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=jEsLmpnLNXniZDQNe","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I don't know what our policy is regarding following along.","username":"MHBauer","ts":"2018-12-11T18:46:35.352Z"}
{"msg":"The sdk has it's own versioning scheme.","username":"MHBauer","ts":"2018-12-11T18:46:58.751Z"}
{"msg":"@MHBauer are you saying the problem is within the SDK?","username":"lehors","ts":"2018-12-11T19:53:43.913Z"}
{"msg":"I apologize if I appear clueless, it's because I am :-)","username":"lehors","ts":"2018-12-11T19:54:04.699Z"}
{"msg":"the error I got when I tried left me puzzled","username":"lehors","ts":"2018-12-11T19:54:30.576Z"}
{"msg":"Ah, we're talking about having master checked out and why doesn't that work. okay.","username":"MHBauer","ts":"2018-12-11T20:25:26.120Z"}
{"msg":"I've not tried that. I will now","username":"MHBauer","ts":"2018-12-11T20:25:48.312Z"}
{"msg":"ah, yes, jay has it up above. not something I would know about. ","username":"MHBauer","ts":"2018-12-11T20:31:34.594Z"}
{"msg":"so, https://github.com/hyperledger/fabric/commit/c209841938d56221b11a095537ebd14a77711fe4#diff-c3e0cc8bbd4e5ea2bf50b91fdff0a01f that broke it with root cause being the use of viperutil.EnhancedExactUnmarshal","username":"MHBauer","ts":"2018-12-11T20:40:44.586Z"}
{"msg":"https://godoc.org/github.com/hyperledger/fabric/common/viperutil ","username":"MHBauer","ts":"2018-12-11T20:40:55.743Z"}
{"msg":"I can understand the idea, but that seems a bit strict to me.","username":"MHBauer","ts":"2018-12-11T20:41:15.205Z"}
{"msg":"@lehors so, it's a breaking change because the code itself is exact about what it needs and will fail otherwise.","username":"MHBauer","ts":"2018-12-11T20:41:45.857Z"}
{"msg":"and the templates in the old version have old fields","username":"MHBauer","ts":"2018-12-11T20:41:57.281Z"}
{"msg":"If I change this sucker here https://github.com/hyperledger/fabric/blob/release-1.4/common/viperutil/config_util.go#L297 to false, it works fine. I'd prefer if it was \"warn unused\" or something, but I suppose nobody reads logs.","username":"MHBauer","ts":"2018-12-11T21:06:08.942Z"}
{"msg":"so, that's the issue. ","username":"MHBauer","ts":"2018-12-11T21:06:20.211Z"}
{"msg":"@lehors I have to verify this, but I believe the evmcc should work with 1.4. Our integration tests just don't pass because we vendored in an older Fabric version for the integration test setup, so the configuration file causes an error when starting up the fabric network because of the change in the orderer keys","username":"swetha","ts":"2018-12-12T01:45:02.469Z"}
{"msg":"it works fine, yes.","username":"MHBauer","ts":"2018-12-12T02:14:45.072Z"}
{"msg":"Has joined the channel.","username":"edwardlee","ts":"2018-12-13T14:56:02.297Z","type":"uj"}
{"msg":"Has joined the channel.","username":"aviralwal","ts":"2018-12-17T11:48:54.033Z","type":"uj"}
{"msg":"marshalling test has been updated with the new fields from merging the events code https://gerrit.hyperledger.org/r/#/c/27764/","username":"MHBauer","ts":"2018-12-18T21:24:05.358Z"}
{"msg":"what would we say to running integration in a container, maybe dind? ","username":"MHBauer","ts":"2018-12-18T23:05:18.579Z"}
{"msg":"Is there a way to force the chaincode to build? ","username":"MHBauer","ts":"2018-12-19T01:44:28.438Z"}
{"msg":"during the tests, it takes about 80sec a contriner to build it.","username":"MHBauer","ts":"2018-12-19T01:44:53.411Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/28201/  needs a +2 from someone else.","username":"MHBauer","ts":"2018-12-19T23:01:32.852Z"}
{"msg":"+2 and submitted, but left some comments [here](https://gerrit.hyperledger.org/r/c/28201/2//COMMIT_MSG#11) and [here](https://gerrit.hyperledger.org/r/c/28201/2/fabproxy/cmd/main.go#96)","username":"guoger","ts":"2018-12-20T02:39:04.017Z"}
{"msg":"made https://jira.hyperledger.org/browse/FAB-13385 & https://jira.hyperledger.org/browse/FAB-13384 to address those","username":"swetha","ts":"2018-12-20T05:13:14.699Z"}
{"msg":"hi there,\nsadly the first Solidity contract I tried on my own failed to run due to a limitation in the burrow version that we currently use (0.18.0):\n\"REVERT not yet fully implemented\".\nIt turns out that support for this was added in the very next version 0.19.0. Unfortunately switching version isn't trivial. There were some significant changes that impact our code.\nHas anyone looked into this?","username":"lehors","ts":"2018-12-20T15:00:54.092Z"}
{"msg":"I saw we already have FAB-13102 for that matter","username":"lehors","ts":"2018-12-20T15:02:19.577Z"}
{"msg":"yep, we were notified by burrow team a while ago when they implemented that opcode, and we also made an attempt to bump burrow version, but as you said, it requires significant changes on our side (especially they changed the account pkg). so we decided at that time to focus on finishing other stuff (fab3 etc) and defer this to post v0.1","username":"guoger","ts":"2018-12-20T16:28:47.983Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=4DNeAdKkFqka66tME) @swetha I love it when a plan comes together","username":"MHBauer","ts":"2018-12-20T20:53:23.439Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=4DNeAdKkFqka66tME","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=4DNeAdKkFqka66tME","remote":true,"fileId":null,"fileName":null}]}
{"msg":"so, nobody asked me but I was curious and started looking into the upgrade of burrow...","username":"lehors","ts":"2018-12-20T21:10:08.579Z"}
{"msg":"sadly, while I could get the code to compile against 0.19.0, the integration test fail","username":"lehors","ts":"2018-12-20T21:10:36.709Z"}
{"msg":"I might dig in as time permit but with vacation starting it may not be for a while...","username":"lehors","ts":"2018-12-20T21:11:36.132Z"}
{"msg":"I might dig in as time permits but with vacation starting it may not be for a while...","username":"lehors","ts":"2018-12-20T21:11:36.132Z"}
{"msg":"note that upgrading to 0.19 is merely a first step","username":"lehors","ts":"2018-12-20T21:12:04.281Z"}
{"msg":"this is still pretty far behind from the latest version but having looked at the changes it seemed prudent to take an incremental approach rather than trying to jump to the latest version","username":"lehors","ts":"2018-12-20T21:12:53.415Z"}
{"msg":"yup, I think we're done for the release. last minute rebase of fabric, but this is definitely a thing to do later.","username":"MHBauer","ts":"2018-12-20T21:26:29.291Z"}
{"msg":"so no 1.4 official until january","username":"MHBauer","ts":"2018-12-21T01:13:08.773Z"}
{"msg":"rc2 based release tomorrow if we can swing it?","username":"MHBauer","ts":"2018-12-21T01:13:19.247Z"}
{"msg":"I was test contract to contract invoke with latest `evmcc` master branch with this two contracts.\n\n```\ncontract ContractA { \n     \n    uint value; \n     \n    function setValue(uint _value) public returns (uint) { \n        value = _value; \n        return value; \n    } \n     \n    function getValue() public view returns (uint) { \n        return value; \n    } \n     \n} \n\n```\n\n```\ninterface ContractAInterface {\n    function setValue(uint _val) external returns (uint);\n    function getValue() external view returns (uint);\n}\n\ncontract ContractB { \n     \n    ContractAInterface contractA; \n     \n    constructor(address _contractAddr) public { \n        contractA = ContractAInterface(_contractAddr); \n    } \n  \n    function setValue(uint _value) public returns (uint result) { \n        contractA.setValue(_value); \n        return _value; \n    } \n    \n    function getValue() public view returns (uint result) { \n        return contractA.getValue(); \n    } \n     \n} \n```\nBut when I invoke `setValue` and `getValue` function from `ContractB` , I got this error ` status Code: (500) UNKNOWN. Description: failed to execute contract: call error: RETURNDATASIZE not yet implemented`. \n`burrow` or `evmcc` won‚Äôt support contract to contract function calling?","username":"htinshar","ts":"2018-12-21T09:05:07.089Z"}
{"msg":"@htinshar hi, thanks for reporting this! contract-to-contract invocation is supported, but the opcode `RETURNDATASIZE` is not supported in the vendored version of burrow evm currently (*but it is supported now in newer burrow*). We will bump the burrow version once we release v0.1 (right after Fabric v1.4 is officially cut)","username":"guoger","ts":"2018-12-21T09:13:32.864Z"}
{"msg":"@htinshar hi, thanks for reporting this! contract-to-contract invocation is supported, but the opcode `RETURNDATASIZE` is not supported in the vendored version of burrow evm currently ( *but it is supported now in newer burrow* ). We will bump the burrow version once we release v0.1 (right after Fabric v1.4 is officially cut)","username":"guoger","ts":"2018-12-21T09:13:32.864Z"}
{"msg":"@guoger I see, thanks for your reply. I can use this feature in evmcc v0.1.  ","username":"htinshar","ts":"2018-12-21T09:17:24.849Z"}
{"msg":"@guoger I see, thanks for your reply. I can only use this feature in evmcc v0.1.  ","username":"htinshar","ts":"2018-12-21T09:17:24.849Z"}
{"msg":"sadly not `v0.1`. perhaps `v0.1.1`, cuz upgrading burrow dependency is actually a bit tricky since it introduces many changes, and we don't want to further delay the release as fabric v1.4 is very close to be released. But we did prioritize this and it shouldn't take too long after `v0.1`","username":"guoger","ts":"2018-12-21T09:20:31.740Z"}
{"msg":"keep an eye on the repo :)","username":"guoger","ts":"2018-12-21T09:20:51.756Z"}
{"msg":"@swetha @guoger something to add to release notes?","username":"MHBauer","ts":"2018-12-21T18:13:54.604Z"}
{"msg":"Has joined the channel.","username":"merq","ts":"2018-12-22T03:44:46.604Z","type":"uj"}
{"msg":"@lehors When we talked to Burrow team, they did properly implement the revert op code in a future release as you mention, however when you see that error it most likely means you ran into an error in the contract itself. The revert op code will give you a better error message though.","username":"swetha","ts":"2018-12-23T19:13:53.552Z"}
{"msg":"Has joined the channel.","username":"MuhammedHafil","ts":"2018-12-26T06:56:59.837Z","type":"uj"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/first-network-sdk-config.yaml is this config file used here is same as as the config we provide to node sdk? like this one? https://github.com/hyperledger/fabric-samples/blob/release-1.3/balance-transfer/artifacts/network-config.yaml","username":"MuhammedHafil","ts":"2018-12-26T08:20:11.043Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=TfC9cGpn3h8QqrSFm) @swetha the contract is one of the samples available online and runs fine elsewhere","username":"lehors","ts":"2018-12-26T16:55:14.406Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=TfC9cGpn3h8QqrSFm","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=TfC9cGpn3h8QqrSFm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"rohitsethi","ts":"2018-12-27T11:35:13.913Z","type":"uj"}
{"msg":"trying to setup loyalty-points-evm-fabrics sample project from :  https://github.com/IBM/loyalty-points-evm-fabric ``````\non running the following command : `./byfn.sh up`\n``` It gives following error in terminal\n` ____    _____      _      ____    _____ \n/ ___|  |_   _|    / \\    |  _ \\  |_   _|\n\\___ \\    | |     / _ \\   | |_) |   | |  \n ___) |   | |    / ___ \\  |  _ <    | |  \n|____/    |_|   /_/   \\_\\ |_| \\_\\   |_|  \n\nBuild your first network (BYFN) end-to-end test\n\nChannel name : mychannel\nCreating channel...\n+ peer channel create -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n+ res=1\n+ set +x\n2018-12-27 11:33:00.531 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized\nError: got unexpected status: FORBIDDEN -- Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied\n!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!\n========= ERROR !!! FAILED to execute End-2-End Scenario ===========\n````\nTest fails here```\n\n``` \n``` \n``` ```\n\n``` ","username":"rohitsethi","ts":"2018-12-27T11:39:29.813Z"}
{"msg":"trying to setup loyalty-points-evm-fabrics sample project from :  https://github.com/IBM/loyalty-points-evm-fabric ``````\non running the following command : `./byfn.sh up`\n``` \n  ____    _____      _      ____    _____ \n/ ___|  |_   _|    / \\    |  _ \\  |_   _|\n\\___ \\    | |     / _ \\   | |_) |   | |  \n ___) |   | |    / ___ \\  |  _ <    | |  \n|____/    |_|   /_/   \\_\\ |_| \\_\\   |_|  \n\nBuild your first network (BYFN) end-to-end test\n\nChannel name : mychannel\nCreating channel...\n+ peer channel create -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n+ res=1\n+ set +x\n2018-12-27 11:33:00.531 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized\nError: got unexpected status: FORBIDDEN -- Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied\n!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!\n========= ERROR !!! FAILED to execute End-2-End Scenario ===========\n````\nTest fails here\n","username":"rohitsethi","ts":"2018-12-27T11:39:29.813Z"}
{"msg":"trying to setup loyalty-points-evm-fabrics sample project from :  https://github.com/IBM/loyalty-points-evm-fabric ```\non running the following command : `./byfn.sh up`\n``` \n `` ____    _____      _      ____    _____ \n/ ___|  |_   _|    / \\    |  _ \\  |_   _|\n\\___ \\    | |     / _ \\   | |_) |   | |  \n ___) |   | |    / ___ \\  |  _ <    | |  \n|____/    |_|   /_/   \\_\\ |_| \\_\\   |_|  \n\nBuild your first network (BYFN) end-to-end test\n\nChannel name : mychannel\nCreating channel...\n+ peer channel create -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n+ res=1\n+ set +x\n2018-12-27 11:33:00.531 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized\nError: got unexpected status: FORBIDDEN -- Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied\n!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!\n========= ERROR !!! FAILED to execute End-2-End Scenario ===========`````\n\n``` \nTest fails here\n","username":"rohitsethi","ts":"2018-12-27T11:39:29.813Z"}
{"msg":"trying to setup loyalty-points-evm-fabrics sample project from :  https://github.com/IBM/loyalty-points-evm-fabric ```\non running the command : `./byfn.sh up`\n``` \n `` ____    _____      _      ____    _____ \n/ ___|  |_   _|    / \\    |  _ \\  |_   _|\n\\___ \\    | |     / _ \\   | |_) |   | |  \n ___) |   | |    / ___ \\  |  _ <    | |  \n|____/    |_|   /_/   \\_\\ |_| \\_\\   |_|  \n\nBuild your first network (BYFN) end-to-end test\n\nChannel name : mychannel\nCreating channel...\n+ peer channel create -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n+ res=1\n+ set +x\n2018-12-27 11:33:00.531 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized\nError: got unexpected status: FORBIDDEN -- Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied\n!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!\n========= ERROR !!! FAILED to execute End-2-End Scenario ===========`````\n\n``` \nTest fails here\n","username":"rohitsethi","ts":"2018-12-27T11:39:29.813Z"}
{"msg":"trying to setup loyalty-points-evm-fabrics sample project from :  https://github.com/IBM/loyalty-points-evm-fabric ```\non running the command : `./byfn.sh up`\n``` \n `````\n\n`  ____    _____      _      ____    _____ \n/ ___|  |_   _|    / \\    |  _ \\  |_   _|\n\\___ \\    | |     / _ \\   | |_) |   | |  \n ___) |   | |    / ___ \\  |  _ <    | |  \n|____/    |_|   /_/   \\_\\ |_| \\_\\   |_|  \n\nBuild your first network (BYFN) end-to-end test\n\nChannel name : mychannel\nCreating channel...\n+ peer channel create -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n+ res=1\n+ set +x\n2018-12-27 11:33:00.531 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized\nError: got unexpected status: FORBIDDEN -- Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied\n!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!\n========= ERROR !!! FAILED to execute End-2-End Scenario ===========`      `````\n\n``` \nTest fails here\n","username":"rohitsethi","ts":"2018-12-27T11:39:29.813Z"}
{"msg":"trying to setup loyalty-points-evm-fabrics sample project from :  https://github.com/IBM/loyalty-points-evm-fabric ```\non running the command : `./byfn.sh up`\n``` \n `````\n\n`  ____    _____      _      ____    _____ \n/ ___|  |_   _|    / \\    |  _ \\  |_   _|\n\\___ \\    | |     / _ \\   | |_) |   | |  \n ___) |   | |    / ___ \\  |  _ <    | |  \n|____/    |_|   /_/   \\_\\ |_| \\_\\   |_|  \n\nBuild your first network (BYFN) end-to-end test\n\nChannel name : mychannel\nCreating channel...\n+ peer channel create -o orderer.example.com:7050 -c mychannel -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n+ res=1\n+ set +x\n2018-12-27 11:33:00.531 UTC [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized\nError: got unexpected status: FORBIDDEN -- Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied\n!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!\n========= ERROR !!! FAILED to execute End-2-End Scenario ===========`      `````\n\nTest fails here\n","username":"rohitsethi","ts":"2018-12-27T11:39:29.813Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=erxBbeTNH3vLp2RyA) @rohitsethi just do ./byfn.sh down first and remove docker network docker network prune and then try again..it will work","username":"knagware9","ts":"2018-12-27T12:18:36.036Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=erxBbeTNH3vLp2RyA","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=erxBbeTNH3vLp2RyA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@knagware9  it worked. Thanks","username":"rohitsethi","ts":"2018-12-27T12:33:15.812Z"}
{"msg":"hey Geeks, Can i ask a very noob question?  where does actually our ethreum smart contract executes with fabric-evm tool? In our fabric blockchain or ethereum network? \n\nIf it works only inside our fabric network all this effort done is only to execute solidity smart contract in fabric? and which state db it uses ?","username":"MuhammedHafil","ts":"2018-12-28T04:34:37.714Z"}
{"msg":"@lehors @guoger @swetha , Please try to give an answer . Thanks","username":"MuhammedHafil","ts":"2018-12-28T04:35:53.976Z"}
{"msg":"@MuhammedHafil this is accurate\n>  it works only inside our fabric network","username":"guoger","ts":"2018-12-28T05:21:28.646Z"}
{"msg":"> which state db it uses\nIt uses whichever your fabric chooses to use","username":"guoger","ts":"2018-12-28T05:21:51.991Z"}
{"msg":"> only to execute solidity smart contract in fabric\nand JSON RPC based toolings, e.g. remix, truffle, etc","username":"guoger","ts":"2018-12-28T05:22:20.483Z"}
{"msg":"and we plan to support some wallets as well","username":"guoger","ts":"2018-12-28T05:22:39.798Z"}
{"msg":"Thank you ","username":"MuhammedHafil","ts":"2018-12-28T05:41:59.202Z"}
{"msg":"Has joined the channel.","username":"rbailey","ts":"2018-12-31T17:29:57.064Z","type":"uj"}
{"msg":"Has joined the channel.","username":"idavidasilva","ts":"2019-01-02T14:44:21.221Z","type":"uj"}
{"msg":"Has joined the channel.","username":"xaviarias","ts":"2019-01-03T11:02:59.568Z","type":"uj"}
{"msg":"The Learning Materials Development working group is in need of contributors for our 2019 objectives: edX Fabric update, edX Sawtooth update, edX Iroha tutorial. At this time, over 133,000 learners have participated in the edX courses. If you, or someone you know (university student, freelance developer, researcher, etc) is interested in contributing, please see the worksheet: 2019 Team and Individual/Small Group Objectives, Key Results, Participants and Tasks - https://goo.gl/1HzKaD  The worksheet has two tabs, one for contributions to the group's 2019 OKRs, and a second that notes individual contributions.  Feel free to message or reply with any questions. Thank you, Kelly","username":"KellyCooper","ts":"2019-01-03T14:10:39.453Z"}
{"msg":"@swetha Could you please review this change https://gerrit.hyperledger.org/r/#/c/28373","username":"rameshthoomu","ts":"2019-01-04T15:20:39.371Z"}
{"msg":"Has joined the channel.","username":"Shirikatsu","ts":"2019-01-04T16:33:52.242Z","type":"uj"}
{"msg":"Hi all, has anybody attempted to deploy this evm chaincode using the CLI here: https://github.com/securekey/fabric-examples/tree/master/fabric-cli","username":"Shirikatsu","ts":"2019-01-04T16:35:20.535Z"}
{"msg":"Hi all, the current build on master seems to failing to instantiate. Any news?","username":"Shirikatsu","ts":"2019-01-04T16:35:20.535Z"}
{"msg":"Hello fabric-evm... I wanted to share a project that @seanyoung has started that I think has a lot of potential to grow into something rather interesting. It is a solidity-to-LLVM compiler using modern compiler tooling to generate LLVM IR with an antlr grammar: https://github.com/seanyoung/solang. What we (Burrow) have in mind is using the LLVM WASM backend to create a migration path for existing solidity code and also thinking about WASM-EVM interop within Burrow that can bring with it a host of advantages. In the context of Hyperledger I would like to see WASM emerge as a cross-framework point of integration for different projects (and I know others would too). However this approach is interesting for chaincode written in any LLVM-supported backend architecture and has the advantage of running through sane, mature, modern compiling machinery. ","username":"silasdavis","ts":"2019-01-04T17:12:02.722Z"}
{"msg":"interesting! Thanks @silasdavis ","username":"cbf","ts":"2019-01-04T18:32:04.450Z"}
{"msg":"oh rust, nice.","username":"MHBauer","ts":"2019-01-04T18:56:25.755Z"}
{"msg":"but nightly...","username":"MHBauer","ts":"2019-01-04T18:57:25.923Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=3tyBPfswAm7N7uDk2) @Shirikatsu Do you have any logs? We haven't had issues instantiating the code on master.","username":"swetha","ts":"2019-01-04T19:00:32.664Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=3tyBPfswAm7N7uDk2","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=3tyBPfswAm7N7uDk2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=jBf96vK7porLPsQxK) @rameshthoomu taking a look now","username":"swetha","ts":"2019-01-04T19:02:13.941Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=jBf96vK7porLPsQxK","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=jBf96vK7porLPsQxK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=jBf96vK7porLPsQxK) @rameshthoomu I reviewed","username":"MHBauer","ts":"2019-01-04T19:02:30.632Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=jBf96vK7porLPsQxK","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=jBf96vK7porLPsQxK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer obviously it would be nice to move to rust stable. Once box patterns end up in stable we can move to stable. https://doc.rust-lang.org/1.5.0/book/box-syntax-and-patterns.html","username":"seanyoung","ts":"2019-01-05T08:57:01.555Z"}
{"msg":"In the AST we need to use box for recursion (e.g. Expression enum contains Expression). So we need box in this enum. But without the box pattern, how do we match these enums?","username":"seanyoung","ts":"2019-01-05T08:58:57.272Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=LNZSwviMvzCTPf6hi) @swetha @swetha \n\nUsing `first-network` in the tutorials, installing evmcc: `peer chaincode install -n evmcc -l golang -v 0 -p github.com/hyperledger/fabric-chaincode-evm/evmcc`\nthen instantiating: `peer chaincode instantiate -n evmcc -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem`\nfails with: \n\n`2019-01-04 16:50:09.370 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc\n2019-01-04 16:50:09.371 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc\nError: could not assemble transaction, err proposal response was not successful, error code 500, msg error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 \"# github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/event\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/event/emitter.go:75:40: cannot use tags (type map[string]interface {}) as type pubsub.TagMap in argument to em.pubsubServer.PublishWithTags:\n\tmap[string]interface {} does not implement pubsub.TagMap (missing Get method)\n# github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:47:50: pubKeyEd25519.Wrap undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PubKeyEd25519 has no field or method Wrap)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:52:28: pk.PubKey.Unwrap undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PubKey has no field or method Unwrap)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:78:2: not enough arguments to return\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:78:18: pk.PubKey.MarshalJSON undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PubKey has no field or method MarshalJSON)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:82:18: pk.PubKey.UnmarshalJSON undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PubKey has no field or method UnmarshalJSON)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:141:53: privKeyEd25519.Wrap undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PrivKeyEd25519 has no field or method Wrap)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:173:30: pk.PrivKey.Unwrap undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PrivKey has no field or method Unwrap)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:188:45: multiple-value pk.PrivKey.Sign() in single-value context\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:192:2: not enough arguments to return\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:192:19: pk.PrivKey.MarshalJSON undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PrivKey has no field or method MarshalJSON)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:192:2: too many errors\n\" `","username":"Shirikatsu","ts":"2019-01-07T09:48:07.429Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=LNZSwviMvzCTPf6hi","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=LNZSwviMvzCTPf6hi","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=LNZSwviMvzCTPf6hi) @swetha @swetha \n\nUsing `first-network` in the tutorials on v1.3, installing evmcc: `peer chaincode install -n evmcc -l golang -v 0 -p github.com/hyperledger/fabric-chaincode-evm/evmcc`\nthen instantiating: `peer chaincode instantiate -n evmcc -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem`\nfails with: \n\n`2019-01-04 16:50:09.370 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc\n2019-01-04 16:50:09.371 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc\nError: could not assemble transaction, err proposal response was not successful, error code 500, msg error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 \"# github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/event\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/event/emitter.go:75:40: cannot use tags (type map[string]interface {}) as type pubsub.TagMap in argument to em.pubsubServer.PublishWithTags:\n\tmap[string]interface {} does not implement pubsub.TagMap (missing Get method)\n# github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:47:50: pubKeyEd25519.Wrap undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PubKeyEd25519 has no field or method Wrap)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:52:28: pk.PubKey.Unwrap undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PubKey has no field or method Unwrap)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:78:2: not enough arguments to return\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:78:18: pk.PubKey.MarshalJSON undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PubKey has no field or method MarshalJSON)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:82:18: pk.PubKey.UnmarshalJSON undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PubKey has no field or method UnmarshalJSON)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:141:53: privKeyEd25519.Wrap undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PrivKeyEd25519 has no field or method Wrap)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:173:30: pk.PrivKey.Unwrap undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PrivKey has no field or method Unwrap)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:188:45: multiple-value pk.PrivKey.Sign() in single-value context\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:192:2: not enough arguments to return\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:192:19: pk.PrivKey.MarshalJSON undefined (type \"github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/tendermint/go-crypto\".PrivKey has no field or method MarshalJSON)\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/evmcc/vendor/github.com/hyperledger/burrow/account/crypto.go:192:2: too many errors\n\" `","username":"Shirikatsu","ts":"2019-01-07T09:48:07.429Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=LNZSwviMvzCTPf6hi","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=LNZSwviMvzCTPf6hi","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I could be doing this wrong, but I arrive at the same error when I use a different deployment method than using the docker-cli image in the `first-network` example.","username":"Shirikatsu","ts":"2019-01-07T09:49:27.395Z"}
{"msg":"that looks like burro is off somehow","username":"MHBauer","ts":"2019-01-07T18:28:43.848Z"}
{"msg":"or tmlibs? ","username":"MHBauer","ts":"2019-01-07T18:31:02.368Z"}
{"msg":"ya, somehow your tmlibs is more recent the 0.8.1","username":"MHBauer","ts":"2019-01-07T18:36:31.483Z"}
{"msg":"@Shirikatsu have you tried to do somethin to the code or is this a fresh checkout?","username":"MHBauer","ts":"2019-01-07T18:37:03.057Z"}
{"msg":"Has joined the channel.","username":"seesemichaelj","ts":"2019-01-08T01:34:05.198Z","type":"uj"}
{"msg":"@MHBauer Thanks for the response. It's a fresh checkout of master indeed.","username":"Shirikatsu","ts":"2019-01-08T09:55:03.317Z"}
{"msg":"@MHBauer Thanks for the response. On second look, I've run `dep` to grab dependencies that seem to have included different versions of the dependencies. Removing those seems to have fixed the issue :) Thank you","username":"Shirikatsu","ts":"2019-01-08T09:55:03.317Z"}
{"msg":"phew","username":"MHBauer","ts":"2019-01-08T17:03:14.156Z"}
{"msg":"@Shirikatsu I think we're both interested in what your impressions are of the chaincode and the proxy when you've had a chance to run through some scenarios.","username":"MHBauer","ts":"2019-01-08T18:23:46.478Z"}
{"msg":"@swetha Is the intent of FAB-13384 to do a complete a renaming of fabproxy to fab3? I'm looking for ways to contribute and would be happy to submit a CR for this :)","username":"lehors","ts":"2019-01-09T13:15:42.816Z"}
{"msg":"@swetha Is the intent of FAB-13384 to do a complete renaming of fabproxy to fab3? I'm looking for ways to contribute and would be happy to submit a CR for this :)","username":"lehors","ts":"2019-01-09T13:15:42.816Z"}
{"msg":"@lehors yes, that's the idea.","username":"MHBauer","ts":"2019-01-09T17:58:43.097Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=wQBnwReucadv2CnCe) @MHBauer ok, I have done that :-)","username":"lehors","ts":"2019-01-09T18:48:29.202Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=wQBnwReucadv2CnCe","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=wQBnwReucadv2CnCe","remote":true,"fileId":null,"fileName":null}]}
{"msg":"but we probably need to coordinate because this is impacting a lot of files obviously so anything else is going to require a rebase","username":"lehors","ts":"2019-01-09T18:51:45.334Z"}
{"msg":"but we probably need to coordinate because this is impacting a lot of files obviously so anything else in progress is going to require a rebase","username":"lehors","ts":"2019-01-09T18:51:45.334Z"}
{"msg":"yup, that's why we haven't done it yet.","username":"MHBauer","ts":"2019-01-09T18:55:43.086Z"}
{"msg":"waiting for 1.4 twiddle-thumbs","username":"MHBauer","ts":"2019-01-09T18:55:58.861Z"}
{"msg":"we need reviews of https://gerrit.hyperledger.org/r/28179 and https://gerrit.hyperledger.org/r/28566","username":"MHBauer","ts":"2019-01-09T18:56:38.852Z"}
{"msg":"ok, I pushed the change I made but can update when you guys are ready","username":"lehors","ts":"2019-01-09T19:01:49.887Z"}
{"msg":"@swetha maybe we try a gerrit topic branch for the burrow update?","username":"MHBauer","ts":"2019-01-09T19:10:17.237Z"}
{"msg":"that could work. Compared the diff last night: `12 files changed, 531 insertions(+), 435 deletions(-)` That is of all commits excluding vendor. Though a large commit we could actually do it in one. It isn't as big as I was expecting","username":"swetha","ts":"2019-01-09T19:11:54.625Z"}
{"msg":"and it looks release is about to come out https://github.com/hyperledger/fabric/blob/release-1.4/CHANGELOG.md","username":"swetha","ts":"2019-01-09T19:12:43.142Z"}
{"msg":"yes 1.4 is being released today, announced tomorrow","username":"lehors","ts":"2019-01-09T19:14:08.145Z"}
{"msg":"are you guys changed both fabric and burrow at the same time?","username":"lehors","ts":"2019-01-09T19:14:43.375Z"}
{"msg":"are you guys changing both fabric and burrow at the same time?","username":"lehors","ts":"2019-01-09T19:14:43.375Z"}
{"msg":"nope, the change to fabric is done: https://gerrit.hyperledger.org/r/#/c/28279/","username":"swetha","ts":"2019-01-09T19:18:32.181Z"}
{"msg":"we are waiting on the 1.4 release to merge that in","username":"swetha","ts":"2019-01-09T19:19:11.058Z"}
{"msg":"ah ok","username":"lehors","ts":"2019-01-09T19:19:23.909Z"}
{"msg":"The burrow change we are almost finished with: https://github.com/swetharepakula/fabric-chaincode-evm/tree/update-burrow","username":"swetha","ts":"2019-01-09T19:20:19.039Z"}
{"msg":"yay stuff merged and reviewed","username":"MHBauer","ts":"2019-01-10T08:40:37.095Z"}
{"msg":"well, I'm happy to report that all the tests I ran passed now","username":"lehors","ts":"2019-01-10T12:09:41.987Z"}
{"msg":"I reran the whole wokshop scenario: no problem","username":"lehors","ts":"2019-01-10T12:09:54.182Z"}
{"msg":"and then I tried using a different contract that failed before because of a lack of support for revert and it now functions as expected","username":"lehors","ts":"2019-01-10T12:10:29.597Z"}
{"msg":"this is using the update-burrow branch from swethat's github fork","username":"lehors","ts":"2019-01-10T12:11:50.028Z"}
{"msg":"this is using the update-burrow branch from swetha's github fork","username":"lehors","ts":"2019-01-10T12:11:50.028Z"}
{"msg":"I do have one question but that's just me not knowing, how can I create several accounts with some ether to use?","username":"lehors","ts":"2019-01-10T12:12:33.031Z"}
{"msg":"I have this contract that implements an auction and one needs to bid with ether from their account","username":"lehors","ts":"2019-01-10T12:13:11.372Z"}
{"msg":"when I use the Remix JVM env I get a few account preloaded I can use","username":"lehors","ts":"2019-01-10T12:13:46.157Z"}
{"msg":"when I use the Remix JVM env I get a few accounts preloaded I can use","username":"lehors","ts":"2019-01-10T12:13:46.157Z"}
{"msg":"but when I switch to fab3 I get one account with zero eth, which makes it impossible to really test the contract","username":"lehors","ts":"2019-01-10T12:14:19.434Z"}
{"msg":"any hint on how to get around that would be appreciated","username":"lehors","ts":"2019-01-10T12:14:32.162Z"}
{"msg":"but otherwise: good job guys :)","username":"lehors","ts":"2019-01-10T12:14:46.257Z"}
{"msg":"ether doesn't matter","username":"MHBauer","ts":"2019-01-10T18:18:05.262Z"}
{"msg":"I think that's in the release notes, but if it isn't we should write that down.","username":"MHBauer","ts":"2019-01-10T18:18:19.748Z"}
{"msg":"accounts are tied to the user account accessing fabric, so if you need more accounts, you need to make more fabric users.","username":"MHBauer","ts":"2019-01-10T18:18:47.025Z"}
{"msg":"@lehors I made a topic branch and messed up the name, https://gerrit.hyperledger.org/r/#/q/topic:test+(status:open+OR+status:merged) is there a way to merge the whole thing in one go?","username":"MHBauer","ts":"2019-01-10T18:22:34.483Z"}
{"msg":"or is it just too bad, so sad, golang is a mess?","username":"MHBauer","ts":"2019-01-10T18:22:59.680Z"}
{"msg":"@lehors About the ether piece. You would have to alter the contract so that it takes in a token contract like ERC 20. Anything that uses native ether won't work in Fabric. Each Fab3 is associated only to a single user, so you won't get the list of accounts like JVM in remix.","username":"swetha","ts":"2019-01-10T19:03:51.265Z"}
{"msg":"@MHBauer @swetha Hey guys, thanks again to you both for the call the other day. It's great to engage with you guys and hopefully we can do some great work together! If you guys are interested and have any questions, you can open issues on the Ion github or visit our gitter for some less formal things :) https://gitter.im/clearmatics/ion","username":"Shirikatsu","ts":"2019-01-11T14:44:16.559Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=EJ2oYTwddJes3o88c) @MHBauer unless your contract is payable... I know it doesn't matter in terms of execution cost but I have an auction contract where one bids with ether, I just don't know how to do that here because the account I get from fab3 has zero ether","username":"lehors","ts":"2019-01-11T15:06:18.429Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=EJ2oYTwddJes3o88c","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=EJ2oYTwddJes3o88c","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=wpNanXneW6jAjjuj7) @swetha Ok, I understand. I think this would be worth noting as a limitation in the documentation. Thanks.","username":"lehors","ts":"2019-01-11T15:07:18.143Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=wpNanXneW6jAjjuj7","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=wpNanXneW6jAjjuj7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"it would be nice to wire this to fabcoin when it's available\n> Anything that uses native ether won't work in Fabric","username":"guoger","ts":"2019-01-11T15:44:15.974Z"}
{"msg":"ah, okay, I'm not familiar with that part of ether work. we do need to add that to the release notes. ","username":"MHBauer","ts":"2019-01-11T18:19:33.732Z"}
{"msg":"I agree @guoger, that would be cool","username":"lehors","ts":"2019-01-11T19:51:07.544Z"}
{"msg":"it would be good to be able to have some substitute, even if it has no real value","username":"lehors","ts":"2019-01-11T20:28:16.111Z"}
{"msg":"it would be good to have some substitute, even if it has no real value","username":"lehors","ts":"2019-01-11T20:28:16.111Z"}
{"msg":"just so that one can run contracts that use ether","username":"lehors","ts":"2019-01-11T20:28:50.520Z"}
{"msg":"@guoger & @cbf we need some reviews:\nevents integration test: https://gerrit.hyperledger.org/r/#/c/28179/\nintegration test timeout: https://gerrit.hyperledger.org/r/#/c/28566/\nburrow update to 0.23: https://gerrit.hyperledger.org/r/#/c/28596/ & https://gerrit.hyperledger.org/r/#/c/28597/","username":"swetha","ts":"2019-01-11T22:43:29.463Z"}
{"msg":"@lehors, @MHBauer the burrow update and fab3 rename conflict with one another. We should determine what order we want them to go in and rebase the other. My preference would be the burrow update first because I think that would be more difficult to rebase","username":"swetha","ts":"2019-01-11T23:01:22.111Z"}
{"msg":"nobody's PR gets merged until they review two things! :-D","username":"MHBauer","ts":"2019-01-12T00:59:30.257Z"}
{"msg":"reviewing it now","username":"guoger","ts":"2019-01-12T01:00:21.296Z"}
{"msg":"when we create  a CR that's related to an existing but closed JIRA, pls open a new JIRA and link to that. So we can have a proper description and keep track of the progress of project (X close, Y in review, Z in progress). I know I may said that if it's really a simple fix, we could simply piggyback that to an old one. but let's not do that anymore, i was wrong.","username":"guoger","ts":"2019-01-12T01:05:40.031Z"}
{"msg":"ok","username":"MHBauer","ts":"2019-01-12T01:08:34.782Z"}
{"msg":"+2'ed https://gerrit.hyperledger.org/r/c/28179/, w/ some comments there","username":"guoger","ts":"2019-01-12T02:04:56.544Z"}
{"msg":"Yup, sorry I had closed the events jira too soon. but the CR was submitted with that jira was open","username":"swetha","ts":"2019-01-13T07:57:04.429Z"}
{"msg":"Yup, sorry I had closed the events jira too soon. but the CR was submitted when that jira was open","username":"swetha","ts":"2019-01-13T07:57:04.429Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=oSfqfTGvNgBhsrxLc) @swetha As I said on Jira I too think the Burrow update should be merged first. I'll be happy to rebase my CR once that's done. No worries.","username":"lehors","ts":"2019-01-13T19:54:56.457Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=oSfqfTGvNgBhsrxLc","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=oSfqfTGvNgBhsrxLc","remote":true,"fileId":null,"fileName":null}]}
{"msg":"what's left on release checklist? tweaking release notes &? ","username":"MHBauer","ts":"2019-01-17T21:02:18.589Z"}
{"msg":"still need reviews of update-burrow branch, I'd appreciate any eyes and any comments. https://gerrit.hyperledger.org/r/#/q/status:open+project:fabric-chaincode-evm+branch:master+topic:update-burrow","username":"MHBauer","ts":"2019-01-17T21:03:29.728Z"}
{"msg":"@MHBauer still reviews on the release notes","username":"swetha","ts":"2019-01-17T23:00:30.438Z"}
{"msg":"@MHBauer still need reviews on the release notes","username":"swetha","ts":"2019-01-17T23:00:30.438Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/28646/","username":"swetha","ts":"2019-01-17T23:00:37.107Z"}
{"msg":"Has joined the channel.","username":"narendranathreddy","ts":"2019-01-21T10:01:00.424Z","type":"uj"}
{"msg":"instantiate","username":"narendranathreddy","ts":"2019-01-21T11:19:03.801Z"}
{"msg":"hello @swetha Swetha I have been trying to instantiate evmcc chaincode, Iam not using fabric samples instead iam using  my modified project  ","username":"narendranathreddy","ts":"2019-01-21T11:24:18.949Z"}
{"msg":"iam getting package not found error \\","username":"narendranathreddy","ts":"2019-01-21T11:24:34.519Z"}
{"msg":"proposalResponses:Error: error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 \"chaincode/input/src/github.com/evmcc/go/evmcc.go:15:2: cannot find package \"github.com/golang/protobuf/proto\" in any of:\n        /opt/go/src/github.com/golang/protobuf/proto (from $GOROOT)\n        /chaincode/input/src/github.com/golang/protobuf/proto (from $GOPATH)\n        /opt/gopath/src/github.com/golang/protobuf/proto\nchaincode/input/src/github.com/evmcc/go/evmcc.go:16:2: cannot find package \"github.com/hyperledger/burrow/account\" in any of:\n        /opt/go/src/github.com/hyperledger/burrow/account (from $GOROOT)\n        /chaincode/input/src/github.com/hyperledger/burrow/account (from $GOPATH)\n        /opt/gopath/src/github.com/hyperledger/burrow/account\nchaincode/input/src/github.com/evmcc/go/evmcc.go:17:2: cannot find package \"github.com/hyperledger/burrow/binary\" in any of:\n        /opt/go/src/github.com/hyperledger/burrow/binary (from $GOROOT)\n        /chaincode/input/src/github.com/hyperledger/burrow/binary (from $GOPATH)\n        /opt/gopath/src/github.com/hyperledger/burrow/binary\nchaincode/input/src/github.com/evmcc/go/evmcc.go:18:2: cannot find package \"github.com/hyperledger/burrow/execution/evm\" in any of:\n        /opt/go/src/github.com/hyperledger/burrow/execution/evm (from $GOROOT)\n        /chaincode/input/src/github.com/hyperledger/burrow/execution/evm (from $GOPATH)\n        /opt/gopath/src/github.com/hyperledger/burrow/execution/evm\nchaincode/input/src/github.com/evmcc/go/evmcc.go:19:2: cannot find package \"github.com/hyperledger/burrow/logging\" in any of:\n        /opt/go/src/github.com/hyperledger/burrow/logging (from $GOROOT)\n        /chaincode/input/src/github.com/hyperledger/burrow/logging (from $GOPATH)\n        /opt/gopath/src/github.com/hyperledger/burrow/logging\nchaincode/input/src/github.com/evmcc/go/evmcc.go:20:2: cannot find package \"github.com/hyperledger/fabric-chaincode-evm/event\" in any of:\n        /opt/go/src/github.com/hyperledger/fabric-chaincode-evm/event (from $GOROOT)\n        /chaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/event (from $GOPATH)\n        /opt/gopath/src/github.com/hyperledger/fabric-chaincode-evm/event\nchaincode/input/src/github.com/evmcc/go/evmcc.go:21:2: cannot find package \"github.com/hyperledger/fabric-chaincode-evm/statemanager\" in any of:\n        /opt/go/src/github.com/hyperledger/fabric-chaincode-evm/statemanager (from $GOROOT)\n        /chaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/statemanager (from $GOPATH)\n        /opt/gopath/src/github.com/hyperledger/fabric-chaincode-evm/statemanager\nchaincode/input/src/github.com/evmcc/go/evmcc.go:26:2: cannot find package \"golang.org/x/crypto/sha3\" in any of:\n        /opt/go/src/golang.org/x/crypto/sha3 (from $GOROOT)\n        /chaincode/input/src/golang.org/x/crypto/sha3 (from $GOPATH)\n        /opt/gopath/src/golang.org/x/crypto/sha3\n\",Error: error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 \"chaincode/input/src/github.com/evmcc/go/evmcc.go:15:2: cannot find package \"github.com/golang/protobuf/proto\" in any of:\n        /opt/go/src/github.com/golang/protobuf/proto (from $GOROOT)\n        /chaincode/input/src/github.com/golang/protobuf/proto (from $GOPATH)\n        /opt/gopath/src/github.com/golang/protobuf/proto\nchaincode/input/src/github.com/evmcc/go/evmcc.go:16:2: cannot find package \"github.com/hyperledger/burrow/account\" in any of:\n        /opt/go/src/github.com/hyperledger/burrow/account (from $GOROOT)\n        /chaincode/input/src/github.com/hyperledger/burrow/account (from $GOPATH)\n        /opt/gopath/src/github.com/hyperledger/burrow/account\n","username":"narendranathreddy","ts":"2019-01-21T11:24:48.075Z"}
{"msg":"above are peer logs","username":"narendranathreddy","ts":"2019-01-21T11:25:09.742Z"}
{"msg":"","username":"narendranathreddy","ts":"2019-01-21T11:26:13.057Z","attachments":[{"type":"file","title":"Clipboard - January 21, 2019 3:26 PM","title_link":"/file-upload/RGeaG7LHNfZfyfpbX/Clipboard%20-%20January%2021,%202019%203:26%20PM","image_url":"/file-upload/RGeaG7LHNfZfyfpbX/Clipboard%20-%20January%2021,%202019%203:26%20PM","image_type":"image/png","image_size":274035,"url":"/file-upload/RGeaG7LHNfZfyfpbX/Clipboard%20-%20January%2021,%202019%203:26%20PM","remote":false,"fileId":"RGeaG7LHNfZfyfpbX","fileName":"Clipboard - January 21, 2019 3:26 PM"}]}
{"msg":"Has joined the channel.","username":"ycarmel","ts":"2019-01-22T08:44:28.839Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Jamie","ts":"2019-01-22T17:09:33.831Z","type":"uj"}
{"msg":"Has joined the channel.","username":"incarose","ts":"2019-01-23T00:23:17.539Z","type":"uj"}
{"msg":"@lehors thanks for review","username":"MHBauer","ts":"2019-01-23T18:47:53.653Z"}
{"msg":"you bet","username":"lehors","ts":"2019-01-23T19:31:58.887Z"}
{"msg":"@swetha so release is out now? ","username":"MHBauer","ts":"2019-01-23T23:54:34.148Z"}
{"msg":"Do we have an announcement somewhere?","username":"MHBauer","ts":"2019-01-23T23:54:44.286Z"}
{"msg":"@MHBauer yes the release is out","username":"swetha","ts":"2019-01-23T23:56:12.389Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/releases/tag/v0.1.0","username":"swetha","ts":"2019-01-23T23:56:30.157Z"}
{"msg":"congrats! :)","username":"lehors","ts":"2019-01-24T15:58:49.996Z"}
{"msg":"you should send an email to the fabric mailing list though","username":"lehors","ts":"2019-01-24T16:01:12.796Z"}
{"msg":"@guoger thanks for looking at the PRs","username":"MHBauer","ts":"2019-01-24T17:55:56.535Z"}
{"msg":"@lehors forgot about the mailing list. i will do that now","username":"swetha","ts":"2019-01-25T19:11:07.433Z"}
{"msg":"@lehors we merged in the burrow update","username":"swetha","ts":"2019-01-25T20:00:47.266Z"}
{"msg":"nice! :-)","username":"lehors","ts":"2019-01-25T21:14:26.766Z"}
{"msg":"@swetha hmm... make integration-test fails for me unfortunately :-(","username":"lehors","ts":"2019-01-25T22:04:08.441Z"}
{"msg":"`------------------------------\n‚Ä¢ Failure [120.924 seconds]\nFabproxy [It] implements the ethereum json rpc api \n/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric-chaincode-evm/integration/fab3/fab3_test.go:137\n\n  Timed out after 60.005s.\n  Expected\n      <helpers.JsonRPCError>: {\n          Code: -32000,\n          Message: \"Failed to query the ledger: QueryBlockByTxID failed: Transaction processing for endorser [localhost:30008]: Chaincode status Code: (500) UNKNOWN. Description: Failed to get block for txID cbd18f1d112a60f28f8c1a1fa6211f762a441c824293b38c18e5712db7edd828, error Entry not found in index\",\n          Data: \"\",\n      }\n  to be zero-valued\n\n  /Users/lehors/Projects/Go/src/github.com/hyperledger/fabric-chaincode-evm/integration/fab3/fab3_test.go:198\n------------------------------\n\n\nSummarizing 1 Failure:\n\n[Fail] Fabproxy [It] implements the ethereum json rpc api \n/Users/lehors/Projects/Go/src/github.com/hyperledger/fabric-chaincode-evm/integration/fab3/fab3_test.go:198\n\nRan 1 of 1 Specs in 137.411 seconds\nFAIL! -- 0 Passed | 1 Failed | 0 Pending | 0 Skipped\n--- FAIL: TestWeb3 (137.42s)\n`","username":"lehors","ts":"2019-01-25T22:05:22.990Z"}
{"msg":"@MHBauer ^^","username":"lehors","ts":"2019-01-25T22:06:29.568Z"}
{"msg":"@lehors, unfortunately i think it is a flaky test. are you consistently having that error?","username":"swetha","ts":"2019-01-25T22:10:27.644Z"}
{"msg":"I got it a couple of times, I can try more and will let you know","username":"lehors","ts":"2019-01-25T22:11:01.392Z"}
{"msg":"okay, i have seen that error before locally","username":"swetha","ts":"2019-01-25T22:12:10.793Z"}
{"msg":"it is definitely a timing issue of some sort, where we query for the block before it has been added","username":"swetha","ts":"2019-01-25T22:12:42.651Z"}
{"msg":"I see","username":"lehors","ts":"2019-01-25T22:13:00.914Z"}
{"msg":"maybe the test should pause","username":"lehors","ts":"2019-01-25T22:13:34.363Z"}
{"msg":"we have pauses in some of the fabric tests","username":"lehors","ts":"2019-01-25T22:13:51.598Z"}
{"msg":"ok, I tried again and it passed","username":"lehors","ts":"2019-01-25T22:16:15.134Z"}
{"msg":"so, not so bad","username":"lehors","ts":"2019-01-25T22:16:28.605Z"}
{"msg":"I also accidentally merged another patch in which affects the file `fabproxy/ethservice_types_roundtrip_test.go`, which I think will affect your rebase. So, sorry about that","username":"swetha","ts":"2019-01-25T22:18:52.005Z"}
{"msg":"yes, it did :)","username":"lehors","ts":"2019-01-25T22:24:31.073Z"}
{"msg":"it's ok, I just pushed another rebase","username":"lehors","ts":"2019-01-25T22:24:43.527Z"}
{"msg":"I was like \"what?? why does it say there is a merge conflict, I just rebased??\" :)","username":"lehors","ts":"2019-01-25T22:25:41.247Z"}
{"msg":"hahah, i clicked merge and then realized what I did","username":"swetha","ts":"2019-01-25T22:26:05.863Z"}
{"msg":"well, I'm taking off (it's 11:30pm here) so it's on you now","username":"lehors","ts":"2019-01-25T22:28:48.780Z"}
{"msg":"all the tests passed so I'm confident I didn't make things worse :)","username":"lehors","ts":"2019-01-25T22:29:33.433Z"}
{"msg":"ttyl","username":"lehors","ts":"2019-01-25T22:30:12.845Z"}
{"msg":"rebase looking good, thanks.","username":"MHBauer","ts":"2019-01-25T22:35:22.948Z"}
{"msg":"thanks arnaud! merged it all in :)","username":"swetha","ts":"2019-01-25T22:46:10.125Z"}
{"msg":"boom, ","username":"MHBauer","ts":"2019-01-25T22:54:03.134Z"}
{"msg":"@swetha oh wait, did we fix the contract init events?","username":"MHBauer","ts":"2019-01-25T23:00:56.593Z"}
{"msg":"I forgot about that","username":"MHBauer","ts":"2019-01-25T23:01:02.060Z"}
{"msg":"yes i fixed it and added tests for it","username":"swetha","ts":"2019-01-25T23:01:34.062Z"}
{"msg":"yup, NAILED IT","username":"MHBauer","ts":"2019-01-25T23:01:59.249Z"}
{"msg":"I didn't notice the new ones","username":"MHBauer","ts":"2019-01-25T23:02:25.729Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/blob/master/evmcc/evmcc_test.go#L598-L650","username":"swetha","ts":"2019-01-25T23:17:49.832Z"}
{"msg":"nope, didn't read it","username":"MHBauer","ts":"2019-01-25T23:37:22.408Z"}
{"msg":"Has joined the channel.","username":"Pradeep_Pentakota","ts":"2019-01-26T13:42:23.475Z","type":"uj"}
{"msg":"Has left the channel.","username":"binhn","ts":"2019-01-26T16:50:16.026Z","type":"ul"}
{"msg":"Has joined the channel.","username":"edisinovcic","ts":"2019-01-28T13:16:06.031Z","type":"uj"}
{"msg":"I feel like we need to start abstracting some of the stuff like https://github.com/hyperledger/fabric-chaincode-evm/blob/master/evmcc/evmcc_test.go#L603-L606","username":"MHBauer","ts":"2019-01-28T17:41:35.045Z"}
{"msg":"the comments are nice, tho","username":"MHBauer","ts":"2019-01-28T17:41:46.484Z"}
{"msg":"Has joined the channel.","username":"andrewyu","ts":"2019-01-29T06:13:49.774Z","type":"uj"}
{"msg":"Hey all, I just put in a pull request, there is an issue which came about from renaming fabproxy to fab3: https://github.com/hyperledger/fabric-chaincode-evm/pull/2","username":"andrewyu","ts":"2019-01-29T06:36:38.486Z"}
{"msg":"@andrewyu please file a JIRA and submit a Gerrit CR per the contributing guidelines in Fabric","username":"cbf","ts":"2019-01-29T14:55:57.741Z"}
{"msg":"we only use GH as a mirror of the code managed by Gerrit","username":"cbf","ts":"2019-01-29T14:56:11.675Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/release-1.4/CONTRIBUTING.html","username":"cbf","ts":"2019-01-29T14:56:31.139Z"}
{"msg":"I have already created a JIRA for the issue that you can reference in yoru commit: https://jira.hyperledger.org/browse/FAB-13947","username":"swetha","ts":"2019-01-29T18:32:26.798Z"}
{"msg":"I have already created a JIRA for the issue that you can reference in your commit: https://jira.hyperledger.org/browse/FAB-13947","username":"swetha","ts":"2019-01-29T18:32:26.798Z"}
{"msg":"@andrewyu ^","username":"swetha","ts":"2019-01-29T18:32:38.346Z"}
{"msg":"ok noted thanks","username":"andrewyu","ts":"2019-01-29T21:27:53.247Z"}
{"msg":"reviews needed for https://gerrit.hyperledger.org/r/#/c/28903/ & https://gerrit.hyperledger.org/r/#/c/28905/","username":"swetha","ts":"2019-01-29T23:05:13.595Z"}
{"msg":"@swetha  I'm still in the middle of it. not super familiar with viper but it looks almost good to go. Also i noticed discussion between morgan and i want to put more thoughts to it/","username":"guoger","ts":"2019-01-30T15:50:20.063Z"}
{"msg":"sounds good!","username":"swetha","ts":"2019-01-30T18:47:07.750Z"}
{"msg":"@guoger anything left on https://gerrit.hyperledger.org/r/28566 ? ","username":"MHBauer","ts":"2019-01-30T23:32:07.595Z"}
{"msg":"so for jira, do I task-ize concepts?","username":"MHBauer","ts":"2019-01-31T02:30:16.480Z"}
{"msg":"you lost me there","username":"guoger","ts":"2019-01-31T02:44:37.464Z"}
{"msg":"what do you mean?","username":"guoger","ts":"2019-01-31T02:44:43.387Z"}
{"msg":"btw, @swetha you might want to rebase your patches","username":"guoger","ts":"2019-01-31T02:45:09.346Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/28949/ should be a tiny bit more than the minimum viable, and I'll put the filtering work into a follow up, so we can focus on having the next step for truffle.","username":"MHBauer","ts":"2019-01-31T03:36:49.627Z"}
{"msg":"basically, I don't know how to use jira","username":"MHBauer","ts":"2019-01-31T03:37:10.032Z"}
{"msg":"and we've got a web of dependencies.","username":"MHBauer","ts":"2019-01-31T03:37:18.492Z"}
{"msg":"and I want to get smaller pieces in","username":"MHBauer","ts":"2019-01-31T03:37:31.243Z"}
{"msg":"thanks for review @guoger ","username":"MHBauer","ts":"2019-01-31T03:38:06.148Z"}
{"msg":"is there a \"proposal\" jira thingy?","username":"MHBauer","ts":"2019-01-31T03:39:38.613Z"}
{"msg":"do you wanna have a quick zoom/slack session?","username":"guoger","ts":"2019-01-31T03:39:47.299Z"}
{"msg":"I think we need to establish a mini-framework or scenario for our block setup","username":"MHBauer","ts":"2019-01-31T03:39:53.766Z"}
{"msg":"@guoger if you want to, I don't know if @swetha is around.","username":"MHBauer","ts":"2019-01-31T03:40:58.243Z"}
{"msg":"one quick question first, i'm looking at https://gerrit.hyperledger.org/r/c/28903/, when i build, i'm getting a binary `main`. shouldn't it be `fab3`?","username":"guoger","ts":"2019-01-31T03:42:12.939Z"}
{"msg":"for make? or ","username":"MHBauer","ts":"2019-01-31T03:42:37.130Z"}
{"msg":"how are you building?","username":"MHBauer","ts":"2019-01-31T03:42:40.460Z"}
{"msg":"(i mean of course i could `go build -o`, but i thought i should be able to get `fab3` just by `go build`?","username":"guoger","ts":"2019-01-31T03:42:47.221Z"}
{"msg":"it would come out 'cmd' I believe","username":"MHBauer","ts":"2019-01-31T03:42:59.518Z"}
{"msg":"ah, yes, sorry, it is `cmd`","username":"guoger","ts":"2019-01-31T03:43:11.478Z"}
{"msg":"but why","username":"guoger","ts":"2019-01-31T03:43:14.614Z"}
{"msg":"that's the name of the folder.","username":"MHBauer","ts":"2019-01-31T03:43:18.327Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=pnsMoDBXyqZRSpnNs) @MHBauer oh, of course...","username":"MHBauer","ts":"2019-01-31T03:43:18.327Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=pnsMoDBXyqZRSpnNs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=pnsMoDBXyqZRSpnNs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"but not the package? ","username":"MHBauer","ts":"2019-01-31T03:43:29.747Z"}
{"msg":"confusing, but that's why.","username":"MHBauer","ts":"2019-01-31T03:43:46.373Z"}
{"msg":"don't bring logic in to this and ask go to make sense...","username":"MHBauer","ts":"2019-01-31T03:44:03.956Z"}
{"msg":"haha","username":"guoger","ts":"2019-01-31T03:44:23.590Z"}
{"msg":"but again, shouldn't we make it produce a binary named `fab3`?","username":"guoger","ts":"2019-01-31T03:44:38.947Z"}
{"msg":"I wrote the makefile, so I use the makefile","username":"MHBauer","ts":"2019-01-31T03:44:42.782Z"}
{"msg":"and that shoudl produce a fab3","username":"MHBauer","ts":"2019-01-31T03:44:56.736Z"}
{"msg":"as 'bin/fab3'","username":"MHBauer","ts":"2019-01-31T03:45:15.732Z"}
{"msg":"as `bin/fab3`","username":"MHBauer","ts":"2019-01-31T03:45:15.732Z"}
{"msg":"yep","username":"guoger","ts":"2019-01-31T03:45:26.942Z"}
{"msg":"but anyway, just a nit","username":"guoger","ts":"2019-01-31T03:45:32.357Z"}
{"msg":" ¬Ø\\_(„ÉÑ)_/¬Ø","username":"MHBauer","ts":"2019-01-31T03:45:47.628Z"}
{"msg":"(and a bit surprised when i saw `cmd`)","username":"guoger","ts":"2019-01-31T03:45:48.521Z"}
{"msg":"oh great, that works here too.","username":"MHBauer","ts":"2019-01-31T03:45:53.916Z"}
{"msg":"lol","username":"guoger","ts":"2019-01-31T03:46:00.959Z"}
{"msg":"well, that's why you normally see a different directory structure.","username":"MHBauer","ts":"2019-01-31T03:46:22.813Z"}
{"msg":"at least, among the go projects I've noticed.","username":"MHBauer","ts":"2019-01-31T03:46:31.763Z"}
{"msg":"it took me 5 seconds to realize it's shrug","username":"guoger","ts":"2019-01-31T03:46:36.153Z"}
{"msg":"CF stuff seems to shove everything into the top-level.","username":"MHBauer","ts":"2019-01-31T03:46:44.260Z"}
{"msg":"so I can forgove jb & qs .","username":"MHBauer","ts":"2019-01-31T03:47:02.161Z"}
{"msg":"so `fabric-chaincode-evm/cmd/fab3/main.go`?","username":"guoger","ts":"2019-01-31T03:47:02.981Z"}
{"msg":"ya, something like that is what *I* would expect.","username":"MHBauer","ts":"2019-01-31T03:47:21.197Z"}
{"msg":"what's jb&qs?","username":"guoger","ts":"2019-01-31T03:47:23.740Z"}
{"msg":"johny berk","username":"MHBauer","ts":"2019-01-31T03:47:34.030Z"}
{"msg":"and queen swe","username":"MHBauer","ts":"2019-01-31T03:47:38.740Z"}
{"msg":"i was gonna ask who's johny berk but i guess i'll just keep that to myself","username":"guoger","ts":"2019-01-31T03:48:13.515Z"}
{"msg":"other local here.","username":"MHBauer","ts":"2019-01-31T03:49:07.124Z"}
{"msg":"could have sworn you've met, but maybe not at all now that I think of it.","username":"MHBauer","ts":"2019-01-31T03:49:21.283Z"}
{"msg":"anyway, back on the topic of fab3, ","username":"MHBauer","ts":"2019-01-31T03:49:41.979Z"}
{"msg":"https://zoom.us/j/766717353","username":"guoger","ts":"2019-01-31T03:49:45.044Z"}
{"msg":"Has joined the channel.","username":"PadmavathyMohan","ts":"2019-01-31T05:50:11.024Z","type":"uj"}
{"msg":"I did a bit restructuring of JIRAs:\n*epic* FAB-14000 - _support toolsings in Ethereum ecosystem_\n \\vdash *story* FAB-13999 - _As a fabric evm chaincode user, I want to interact with my contract via Ethereum JSON RPC_\n                \\vdash FAB-13578 - _Implement getStorageAt_\n                \\vdash etc\n \\vdash *story* FAB-14000 - _As a Truffle developer, i want to use Fab3 as backend_","username":"guoger","ts":"2019-01-31T06:54:38.685Z"}
{"msg":"I did a bit restructuring of JIRAs:\n*epic* FAB-14000 - _support toolsings in Ethereum ecosystem_\n \\[\\vdash] *story* FAB-13999 - _As a fabric evm chaincode user, I want to interact with my contract via Ethereum JSON RPC_\n                \\vdash FAB-13578 - _Implement getStorageAt_\n                \\vdash etc\n \\vdash *story* FAB-14000 - _As a Truffle developer, i want to use Fab3 as backend_","username":"guoger","ts":"2019-01-31T06:54:38.685Z"}
{"msg":"I did a bit restructuring of JIRAs:\n```\n*epic* FAB-14000 - _support toolsings in Ethereum ecosystem_\n  |- *story* FAB-13999 - _As a fabric evm chaincode user, I want to interact with my contract via Ethereum JSON RPC_\n             |- *sub-task* FAB-13578 - _Implement getStorageAt_\n             |- etc\n  |- *story* FAB-14000 - _As a Truffle developer, i want to use Fab3 as backend_\n```","username":"guoger","ts":"2019-01-31T06:54:38.685Z"}
{"msg":"I did a bit restructuring of JIRAs:\n```\n*epic* FAB-14000 - support toolsings in Ethereum ecosystem\n  |- *story* FAB-13999 - As a fabric evm chaincode user, I want to interact with my contract via Ethereum JSON RPC\n             |- *sub-task* FAB-13578 - Implement getStorageAt\n             |- etc\n  |- *story* FAB-14000 - As a Truffle developer, i want to use Fab3 as backend\n```","username":"guoger","ts":"2019-01-31T06:54:38.685Z"}
{"msg":"is https://gerrit.hyperledger.org/r/c/28949 ready for review? or still wip","username":"guoger","ts":"2019-01-31T08:43:28.436Z"}
{"msg":"Has joined the channel.","username":"huanlv94","ts":"2019-01-31T09:07:00.504Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=eJ969P38sv95CqsgY) @guoger to me, should be done, more work in future stuff","username":"MHBauer","ts":"2019-01-31T16:13:51.392Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=eJ969P38sv95CqsgY","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=eJ969P38sv95CqsgY","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@guoger little confused with the restructuring. so we now have an epic in which a story is an issue in it? And why do we pick sub tasks over tasks? Asking just to understand how we should structure things in the future","username":"swetha","ts":"2019-01-31T18:05:09.276Z"}
{"msg":"@guoger little confused with the restructuring. so we now have an epic in which a story is an issue in it? And why do we pick sub tasks over tasks? Asking to understand how we should structure things in the futur","username":"swetha","ts":"2019-01-31T18:05:09.276Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=QuT2e9r6ouZTDTjhr) @guoger The only concern I had about going to this directory structure is because the evmcc main cannot go there which would make it seem that the main command is fab3 in this repo which isn't necessarily true. But since more people would be using fab3 day to day and need to build it over evmcc I can put a jira in the backlog to change this. @guoger @MHBauer ^^","username":"swetha","ts":"2019-01-31T21:39:02.487Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=QuT2e9r6ouZTDTjhr","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=QuT2e9r6ouZTDTjhr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer & @guoger : this patch has been rebased and needs another round of reviews","username":"swetha","ts":"2019-01-31T23:02:10.125Z"}
{"msg":"what if we make a toplevel jira epic/story for various refactorings? A holder that we can toss nits under as we see it, so it can be part of a thing that's not blocking anything.","username":"MHBauer","ts":"2019-02-01T01:57:18.380Z"}
{"msg":"can add stuff and tackle it separately as we see it.","username":"MHBauer","ts":"2019-02-01T01:57:33.817Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=AE9PKbShwm2F79h27) @swetha I don't know if we actually need to change it, but something about the current structure seems to be violating expectations, even for people who I'd assume would know better.","username":"MHBauer","ts":"2019-02-01T01:58:52.692Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=AE9PKbShwm2F79h27","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=AE9PKbShwm2F79h27","remote":true,"fileId":null,"fileName":null}]}
{"msg":"and I don't view cmd as \"this is the ONLY relevant thing in the repo\",  I view it as, \"hey, here's my user visible thing, that a person would want to interact with\". \nas we've discussed, evmcc isn't a deliverable, the code is. So I don't understand","username":"MHBauer","ts":"2019-02-01T02:00:04.131Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw) more than that, we can assign it and assign reviewers I think. then it's \"I promise to do this in a follow up or other change, and you promise to review it when you see it\".","username":"MHBauer","ts":"2019-02-01T02:02:29.015Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw","remote":true,"fileId":null,"fileName":null}]}
{"msg":"like how do you write a user story for code changes. that seems silly","username":"MHBauer","ts":"2019-02-01T02:20:49.454Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw) @MHBauer I agree for some large refactors that we should create jiras. but like the once i suggested in this patch: https://gerrit.hyperledger.org/r/#/c/28949/, since it is an introduction of new code, it would be easier to tackle the refactor at the beginning and never introduce the duplication of code at all. This way we don't accumulate too much technical debt.","username":"swetha","ts":"2019-02-01T02:24:55.517Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw) @MHBauer I agree for some large refactors that we should create jiras. but like the ones i suggested in this patch: https://gerrit.hyperledger.org/r/#/c/28949/, since it is an introduction of new code, it would be easier to tackle the refactor at the beginning and never introduce the duplication of code at all. This way we don't accumulate too much technical debt.","username":"swetha","ts":"2019-02-01T02:24:55.517Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=itTG6XCk5sNYwE9Fw","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Otherwise for refactors we notice after code as been merged I think you can still add a task JIRA. It doesn't necessarily all have to be user facing","username":"swetha","ts":"2019-02-01T02:26:18.728Z"}
{"msg":"I don't like how it make stuff bigger and confused, that is why I ask.","username":"MHBauer","ts":"2019-02-01T02:31:06.821Z"}
{"msg":"one of my commits is ORANGE","username":"MHBauer","ts":"2019-02-01T02:31:29.326Z"}
{"msg":"I DON'T LIKE IT","username":"MHBauer","ts":"2019-02-01T02:31:33.185Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=jmmBanmv39ComsHF6) @swetha Ah, don't read them too literally. It's as simple as a tree with height == 2. So, you can just interpret `issue` as stories under epic. We pick sub-task, because you can only create sub-task under story, not task","username":"guoger","ts":"2019-02-01T02:34:11.922Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=jmmBanmv39ComsHF6","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=jmmBanmv39ComsHF6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I made some more, but I can't figure out how to change some of the fields","username":"MHBauer","ts":"2019-02-01T02:34:45.898Z"}
{"msg":"which one?","username":"guoger","ts":"2019-02-01T02:34:55.253Z"}
{"msg":"what jay said ^","username":"swetha","ts":"2019-02-01T02:35:04.633Z"}
{"msg":"how do I change status","username":"MHBauer","ts":"2019-02-01T02:35:20.401Z"}
{"msg":"todo to inprogress or inprogrress to done?","username":"MHBauer","ts":"2019-02-01T02:35:31.706Z"}
{"msg":"click on start working","username":"guoger","ts":"2019-02-01T02:35:39.699Z"}
{"msg":"there is a button in jira","username":"swetha","ts":"2019-02-01T02:35:40.347Z"}
{"msg":"\"begin work\"?","username":"MHBauer","ts":"2019-02-01T02:35:48.600Z"}
{"msg":"yep","username":"guoger","ts":"2019-02-01T02:35:53.467Z"}
{"msg":"it's like a state machine","username":"guoger","ts":"2019-02-01T02:35:57.016Z"}
{"msg":"that's silly","username":"MHBauer","ts":"2019-02-01T02:36:01.460Z"}
{"msg":"you cannot `SetState`, but only `Step`","username":"guoger","ts":"2019-02-01T02:36:08.702Z"}
{"msg":"","username":"swetha","ts":"2019-02-01T02:36:10.047Z","attachments":[{"type":"file","title":"Screen Shot 2019-01-31 at 6.35.50 PM.png","title_link":"/file-upload/b6GC36nudXcMZQ7B3/Screen%20Shot%202019-01-31%20at%206.35.50%20PM.png","image_url":"/file-upload/b6GC36nudXcMZQ7B3/Screen%20Shot%202019-01-31%20at%206.35.50%20PM.png","image_type":"image/png","image_size":53865,"url":"/file-upload/b6GC36nudXcMZQ7B3/Screen%20Shot%202019-01-31%20at%206.35.50%20PM.png","remote":false,"fileId":"b6GC36nudXcMZQ7B3","fileName":"Screen Shot 2019-01-31 at 6.35.50 PM.png"}]}
{"msg":"that says accept","username":"MHBauer","ts":"2019-02-01T02:36:21.436Z"}
{"msg":"First thing to do is click `Accept`","username":"swetha","ts":"2019-02-01T02:36:23.267Z"}
{"msg":"Never esen that one","username":"MHBauer","ts":"2019-02-01T02:36:33.567Z"}
{"msg":"hold on, it looks different here","username":"guoger","ts":"2019-02-01T02:36:47.922Z"}
{"msg":"for FAB-13600","username":"guoger","ts":"2019-02-01T02:36:55.236Z"}
{"msg":"what a terrible tool, I hope we're not paying for it.","username":"MHBauer","ts":"2019-02-01T02:37:13.874Z"}
{"msg":"i didn't refresh after you did the restructuring","username":"swetha","ts":"2019-02-01T02:37:19.377Z"}
{"msg":"Linux Foundation is paying i guess","username":"guoger","ts":"2019-02-01T02:37:24.866Z"}
{"msg":"oh well, gotta keep atlasian in business","username":"MHBauer","ts":"2019-02-01T02:37:41.026Z"}
{"msg":"which task are you looking at?","username":"swetha","ts":"2019-02-01T02:37:42.213Z"}
{"msg":"although as open source community user, lower fee i guess","username":"guoger","ts":"2019-02-01T02:37:42.833Z"}
{"msg":"i already put getLogs in progress and assigned to you","username":"swetha","ts":"2019-02-01T02:37:53.469Z"}
{"msg":"so you won't be able to see the same buttons on your task","username":"swetha","ts":"2019-02-01T02:38:15.492Z"}
{"msg":"sometimes if you want to change type of a jira, click on `move`","username":"guoger","ts":"2019-02-01T02:42:39.820Z"}
{"msg":"so you get accept, because I'm assigned?","username":"MHBauer","ts":"2019-02-01T02:42:59.844Z"}
{"msg":"no on any new task the first button you see there is accept","username":"swetha","ts":"2019-02-01T02:45:20.188Z"}
{"msg":"should add an event to the simple storage contract","username":"MHBauer","ts":"2019-02-01T02:45:29.719Z"}
{"msg":"the instructor contract already has an event","username":"swetha","ts":"2019-02-01T02:45:47.790Z"}
{"msg":"which i just realized we didn't create a go version of that contract","username":"swetha","ts":"2019-02-01T02:46:30.560Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/blob/master/integration/web3/instructor_contract.js","username":"swetha","ts":"2019-02-01T02:46:31.905Z"}
{"msg":"yea, I know","username":"MHBauer","ts":"2019-02-01T02:46:37.844Z"}
{"msg":"simple storage is easier.","username":"MHBauer","ts":"2019-02-01T02:46:46.061Z"}
{"msg":":-)","username":"MHBauer","ts":"2019-02-01T02:46:50.543Z"}
{"msg":"btw, you can click on the workflow next to status","username":"guoger","ts":"2019-02-01T02:46:59.989Z"}
{"msg":"ya, but you can't actually change it there","username":"MHBauer","ts":"2019-02-01T02:47:09.426Z"}
{"msg":"different type of jira (task, bug) has different workflow","username":"guoger","ts":"2019-02-01T02:47:17.978Z"}
{"msg":"i use a contract with events in the e2e tests","username":"swetha","ts":"2019-02-01T02:47:26.917Z"}
{"msg":"right, because you shouldn't set state in FSM, you should step it","username":"guoger","ts":"2019-02-01T02:47:42.854Z"}
{"msg":"oh nope i dont","username":"swetha","ts":"2019-02-01T02:47:44.522Z"}
{"msg":"(and i don't like it in jira)","username":"guoger","ts":"2019-02-01T02:47:57.197Z"}
{"msg":"silly extra clicks","username":"guoger","ts":"2019-02-01T02:48:07.480Z"}
{"msg":"my preference is for you to use a different contract than altering simple storage, especially because simple storage is kind of like a hello world contract","username":"swetha","ts":"2019-02-01T02:48:38.340Z"}
{"msg":"okay, I've already got LessSimpleStorage.sol written up.","username":"MHBauer","ts":"2019-02-01T02:49:24.937Z"}
{"msg":"has been useful for debugging.","username":"MHBauer","ts":"2019-02-01T02:49:34.147Z"}
{"msg":"lol, that should work","username":"swetha","ts":"2019-02-01T02:49:41.314Z"}
{"msg":"oh ya, watch is pretty sweet.","username":"MHBauer","ts":"2019-02-01T02:57:42.605Z"}
{"msg":"until you are watching a thousands of jira","username":"guoger","ts":"2019-02-01T02:58:19.906Z"}
{"msg":"I meant ginkgo watch","username":"MHBauer","ts":"2019-02-01T03:01:14.492Z"}
{"msg":"How can I make it open a filter by defaul tfor me?","username":"MHBauer","ts":"2019-02-01T03:01:31.724Z"}
{"msg":"I want component=f-c-e","username":"MHBauer","ts":"2019-02-01T03:01:45.162Z"}
{"msg":"i don' think so... you can store the filter though","username":"guoger","ts":"2019-02-01T03:05:24.020Z"}
{"msg":"I made one I think","username":"MHBauer","ts":"2019-02-01T03:25:44.108Z"}
{"msg":"when's the next release?","username":"MHBauer","ts":"2019-02-01T03:43:25.878Z"}
{"msg":"fabric? or fabric-cc-evm?","username":"guoger","ts":"2019-02-01T03:45:32.065Z"}
{"msg":"us","username":"MHBauer","ts":"2019-02-01T04:02:17.023Z"}
{"msg":"f-c-e","username":"MHBauer","ts":"2019-02-01T04:02:23.181Z"}
{"msg":"I ask because I wanna get that sweet sweet new burrow out.","username":"MHBauer","ts":"2019-02-01T04:32:21.657Z"}
{"msg":"i guess anything before 1.0 can be very flexible. we can even have a 0.1.1 :)","username":"guoger","ts":"2019-02-01T04:46:57.100Z"}
{"msg":"that'd be great.","username":"MHBauer","ts":"2019-02-01T04:53:53.214Z"}
{"msg":"rapid releases, continuous even!","username":"MHBauer","ts":"2019-02-01T04:54:04.298Z"}
{"msg":"which counterfeiter version are you guys using?","username":"guoger","ts":"2019-02-01T07:51:18.970Z"}
{"msg":"(IIRC, it's not enforced by project, correct?)","username":"guoger","ts":"2019-02-01T07:51:36.265Z"}
{"msg":"@guoger im using this sha: c936c3d9d00c3bc9158f53f49cd70ff3214ac0b8","username":"swetha","ts":"2019-02-01T16:54:38.302Z"}
{"msg":"if we think we might be altering the mocks often enough we should vendor it in. i will put a jira in","username":"swetha","ts":"2019-02-01T16:55:42.340Z"}
{"msg":"yea, we should do that since it has no versions.","username":"MHBauer","ts":"2019-02-01T19:13:02.896Z"}
{"msg":"oh, they made a release!","username":"MHBauer","ts":"2019-02-01T19:14:05.513Z"}
{"msg":"https://github.com/maxbrunsfeld/counterfeiter/releases/tag/v6.0.0","username":"MHBauer","ts":"2019-02-01T19:14:06.187Z"}
{"msg":"https://github.com/maxbrunsfeld/counterfeiter/releases/tag/v6.0.1 ","username":"MHBauer","ts":"2019-02-01T19:14:19.484Z"}
{"msg":"nice we can start using those then","username":"swetha","ts":"2019-02-01T19:41:17.397Z"}
{"msg":"@guoger you seemed happy with https://gerrit.hyperledger.org/r/#/c/29019/ but didn't +2 ?","username":"MHBauer","ts":"2019-02-01T20:11:41.933Z"}
{"msg":"Has joined the channel.","username":"pasimoes","ts":"2019-02-02T00:58:37.619Z","type":"uj"}
{"msg":"@MHBauer @guoger fyi Jira is set to work that way. It wasn't before. So, don't blame the tool if you don't like it, blame whoever set it up that way. :-) I too think it's a bit clunky - it takes a lot of steps that don't seem really useful - but before we had a mess because nobody knew what process flow was to be followed and you could set the state to any value in any order","username":"lehors","ts":"2019-02-04T16:59:51.202Z"}
{"msg":"make ssense, but they put the button in the wrong place :-)","username":"MHBauer","ts":"2019-02-04T18:49:21.497Z"}
{"msg":"@andrewyu Are you still intersted in making a fix for https://jira.hyperledger.org/browse/FAB-13947. Please let us know if you need any help from us","username":"swetha","ts":"2019-02-04T19:44:42.822Z"}
{"msg":"wow, how did we get jenkins build notification here?","username":"guoger","ts":"2019-02-05T02:59:38.494Z"}
{"msg":"I blame @swetha ","username":"MHBauer","ts":"2019-02-05T06:20:37.058Z"}
{"msg":"I think it posts because it's a failure after merge.","username":"MHBauer","ts":"2019-02-05T06:21:11.622Z"}
{"msg":"not sure if it's a jenkins error or if it's the same hang I've been seeing.","username":"MHBauer","ts":"2019-02-05T06:22:07.389Z"}
{"msg":"@guoger I got them to change the jenkins notification to come here instead of the jenkins failure channel","username":"swetha","ts":"2019-02-05T17:55:03.668Z"}
{"msg":"Some interruption occurred on build. Nothing to do with our test","username":"swetha","ts":"2019-02-05T17:55:38.174Z"}
{"msg":"@MHBauer we solved your hang though. We wouldn't have environment variable collusion on jenkins","username":"swetha","ts":"2019-02-05T17:56:08.006Z"}
{"msg":"Has joined the channel.","username":"MahmoudKhraisha","ts":"2019-02-05T20:57:27.690Z","type":"uj"}
{"msg":"Has joined the channel.","username":"DJEMOA","ts":"2019-02-06T13:21:10.335Z","type":"uj"}
{"msg":" Hi everyone, please, I would like to know if it is possible to generate ABI and BYTECODE from a chaincode written in Go (for example) as we do in EVM using Solidity smart contract. Thanks in advance.\n\n","username":"DJEMOA","ts":"2019-02-06T13:25:11.543Z"}
{"msg":"@DJEMOA not relevant here, but interesting question.","username":"MHBauer","ts":"2019-02-06T18:31:41.921Z"}
{"msg":"on a fabric CC, we have init and invoke, but the args given to each aren't typed, it's all strings/bytes. chaincode does what chaincode does.","username":"MHBauer","ts":"2019-02-06T18:32:34.488Z"}
{"msg":"Has joined the channel.","username":"JigneshVasoya","ts":"2019-02-08T08:59:31.697Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pravn1729","ts":"2019-02-10T08:44:19.537Z","type":"uj"}
{"msg":"at some we're going to have take a serious look at it and nail down the test issue which makes the CI verification fails half the time...","username":"lehors","ts":"2019-02-13T17:25:22.682Z"}
{"msg":"at some we're going to have take a serious look at it and nail down the test issue which makes the CI verification fail half the time...","username":"lehors","ts":"2019-02-13T17:25:22.682Z"}
{"msg":" I've got a thought on one of them, but not the other.","username":"MHBauer","ts":"2019-02-13T17:30:43.020Z"}
{"msg":"well, an interest in both.","username":"MHBauer","ts":"2019-02-13T17:31:28.424Z"}
{"msg":"the one for build 156, I think we're trying to fast and need to wait more for stuff to start up, but I can't be sure. we're missing some err checks for sure. ","username":"MHBauer","ts":"2019-02-13T17:32:26.472Z"}
{"msg":"for the other one I think we're tearing down in the wrong order.","username":"MHBauer","ts":"2019-02-13T17:32:39.111Z"}
{"msg":"might file a pr for each today.","username":"MHBauer","ts":"2019-02-13T17:33:00.438Z"}
{"msg":"@lehors also filed a PR  against upstream burrow to fix an issue https://github.com/hyperledger/burrow/pull/1014","username":"MHBauer","ts":"2019-02-13T17:36:51.871Z"}
{"msg":"sounds good","username":"lehors","ts":"2019-02-13T18:14:55.428Z"}
{"msg":"small change https://gerrit.hyperledger.org/r/#/c/29294/ that I think will help debug.","username":"MHBauer","ts":"2019-02-13T21:45:19.832Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=bZtAWXrvhsBFE7or3) @lehors fab3 integration tests fail me constantly... :(","username":"guoger","ts":"2019-02-14T02:00:16.701Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=bZtAWXrvhsBFE7or3","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=bZtAWXrvhsBFE7or3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"that's a new one that I haven't seen before.","username":"MHBauer","ts":"2019-02-14T06:55:15.287Z"}
{"msg":"well, it's a different form of what I've already seen before.","username":"MHBauer","ts":"2019-02-14T06:56:05.816Z"}
{"msg":"looks to me like we're turning it off before it's been fully started maybe.","username":"MHBauer","ts":"2019-02-14T07:00:07.989Z"}
{"msg":"I think you are right, the issue is that proxy.Start is run in a separate goroutine, so if a signal comes before the httpServer in the start function is created, shutdown gets called when the httpServer is still nil. We should add both a nil check in the shutdown and add a wait to make sure the httpServer has started up. I will create a jira","username":"swetha","ts":"2019-02-15T02:50:26.631Z"}
{"msg":"this CR should prevent the particular error: https://gerrit.hyperledger.org/r/#/c/29320/","username":"swetha","ts":"2019-02-15T04:28:14.037Z"}
{"msg":"I think I have a fix for ^^. I will submit a patch tomorrow","username":"swetha","ts":"2019-02-15T07:02:54.014Z"}
{"msg":"@swetha is https://jenkins.hyperledger.org/job/fabric-chaincode-evm-verify-x86_64/181/console this the same as another?","username":"MHBauer","ts":"2019-02-18T20:57:48.001Z"}
{"msg":"yup same as the one right above","username":"swetha","ts":"2019-02-18T20:58:42.565Z"}
{"msg":"as in the same error","username":"swetha","ts":"2019-02-18T20:58:50.829Z"}
{"msg":"which fixes it? ","username":"MHBauer","ts":"2019-02-18T20:59:50.137Z"}
{"msg":"the refactor into one package?","username":"MHBauer","ts":"2019-02-18T20:59:58.098Z"}
{"msg":"and how? ","username":"MHBauer","ts":"2019-02-18T21:00:07.966Z"}
{"msg":"this one fixes it: https://gerrit.hyperledger.org/r/#/c/29332/. Yup the refactor","username":"swetha","ts":"2019-02-18T21:00:35.484Z"}
{"msg":"It fixes it because the fab3 package was already refactored to avoid this issue. The solution is stopping the proxy before bringing down the network because the SDK waits for I believe longer than 30 secs to kill the connection to the network which causes our tests to fail","username":"swetha","ts":"2019-02-18T21:01:35.367Z"}
{"msg":"okay, need to look at how that worked in the fab3","username":"MHBauer","ts":"2019-02-18T21:02:05.873Z"}
{"msg":"for this one","username":"MHBauer","ts":"2019-02-18T21:43:56.594Z"}
{"msg":"https://jenkins.hyperledger.org/job/fabric-chaincode-evm-verify-x86_64/183/console","username":"MHBauer","ts":"2019-02-18T21:43:57.144Z"}
{"msg":"I think we need to loop on the first git","username":"MHBauer","ts":"2019-02-18T21:44:05.470Z"}
{"msg":"sounds like we need a loopy thing in a different area than where I thought. good discussion.","username":"MHBauer","ts":"2019-02-18T22:11:34.447Z"}
{"msg":"created two jiras: https://jira.hyperledger.org/browse/FAB-14244 & https://jira.hyperledger.org/browse/FAB-14243 that should help address some of the flakes","username":"swetha","ts":"2019-02-18T22:18:35.259Z"}
{"msg":"do we need gocov or manifest-tool in the tools makefile?","username":"MHBauer","ts":"2019-02-18T22:37:01.030Z"}
{"msg":"wish we had something from fabric to vendor/submodule","username":"MHBauer","ts":"2019-02-18T22:37:36.238Z"}
{"msg":"```\n```","username":"MHBauer","ts":"2019-02-18T23:02:36.427Z"}
{"msg":"```\n```","username":"MHBauer","ts":"2019-02-18T23:02:36.427Z"}
{"msg":"```\nHello Hyperledger Jobbuilder, \n\nI'd like you to reexamine a change.\n```","username":"MHBauer","ts":"2019-02-18T23:02:36.427Z"}
{"msg":"does the bot actually get an email and read it?","username":"MHBauer","ts":"2019-02-18T23:02:58.655Z"}
{"msg":"funny","username":"MHBauer","ts":"2019-02-18T23:03:01.906Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=7BnbbiLNFXrfXEJRH) @MHBauer no we don't need either. Nothing in the makefile should be using it, except for the gotools target, which is addressed in a CR. But the CR doesn't remove those two from the gottols target","username":"swetha","ts":"2019-02-19T04:59:21.722Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=7BnbbiLNFXrfXEJRH","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=7BnbbiLNFXrfXEJRH","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=7BnbbiLNFXrfXEJRH) @MHBauer no we don't need either. Nothing in the makefile should be using it, except for the gotools target, which is addressed in a CR. But the CR doesn't remove those two from the gotools target","username":"swetha","ts":"2019-02-19T04:59:21.722Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=7BnbbiLNFXrfXEJRH","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=7BnbbiLNFXrfXEJRH","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer https://gerrit.hyperledger.org/r/c/28352 pls update or abandon","username":"cbf","ts":"2019-02-20T15:48:11.837Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=pfvGqzKZv4FZg6RXX) @swetha can we shove removing them into another place where we're editing the tools makefile, or should it be a separate jira....","username":"MHBauer","ts":"2019-02-20T18:47:21.166Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=pfvGqzKZv4FZg6RXX","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=pfvGqzKZv4FZg6RXX","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer I am ambivalent to removing them. I don't mind them staying in gotools as long as we aren't installing them in CI when we aren't using them. If you want them removed I can update this CR: https://gerrit.hyperledger.org/r/#/c/29322/ to add that change","username":"swetha","ts":"2019-02-20T18:56:53.086Z"}
{"msg":"ya, that avoids installing them now,, so it achieves the goal, I guess, but I'm more at 'why leave it in'","username":"MHBauer","ts":"2019-02-20T19:08:21.307Z"}
{"msg":"but, eh, dunno.","username":"MHBauer","ts":"2019-02-20T19:08:27.440Z"}
{"msg":"how about metrics? future topic? ","username":"MHBauer","ts":"2019-02-20T21:05:00.671Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=SeR7TY5Lb9CGnizp8) solved by https://gerrit.hyperledger.org/r/29370 I'm pretty sure","username":"MHBauer","ts":"2019-02-20T22:02:28.529Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=SeR7TY5Lb9CGnizp8","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=SeR7TY5Lb9CGnizp8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@swetha we still want to do async-filters, right? people have been asking for it?","username":"MHBauer","ts":"2019-02-20T22:10:31.516Z"}
{"msg":"e.g. newFilter, getFilterChanges, uninstallFilter ?","username":"MHBauer","ts":"2019-02-20T22:10:44.801Z"}
{"msg":"@MHBauer yes","username":"swetha","ts":"2019-02-20T22:11:41.984Z"}
{"msg":"cool","username":"MHBauer","ts":"2019-02-20T22:12:31.768Z"}
{"msg":"@swetha looks like fabric just ignores it https://jira.hyperledger.org/browse/FAB-12172","username":"MHBauer","ts":"2019-02-20T22:16:53.786Z"}
{"msg":"https://github.com/hyperledger/fabric/blob/release-1.4/Gopkg.toml#L14-L16","username":"MHBauer","ts":"2019-02-20T22:17:33.530Z"}
{"msg":"But they are only ignoring the one package. It doesn't say how they dealt with the other packages. Also tagging cobra as noverify doesn't seem like the right thing when we aren't doing anything special to the cobra packages","username":"swetha","ts":"2019-02-20T22:20:26.136Z"}
{"msg":"since the build machine seems pretty powerful, I wonder if we can do a `make -J4` or something","username":"MHBauer","ts":"2019-02-20T23:19:53.488Z"}
{"msg":"@swetha where do you want dep mentioned?","username":"MHBauer","ts":"2019-02-20T23:44:55.430Z"}
{"msg":"Lets actually address mentioning dep in the README as part of this: https://jira.hyperledger.org/browse/FAB-14059","username":"swetha","ts":"2019-02-20T23:55:32.014Z"}
{"msg":"@swetha any recommendation to debug this","username":"MHBauer","ts":"2019-02-21T21:00:02.204Z"}
{"msg":"```\n```","username":"MHBauer","ts":"2019-02-21T21:00:03.200Z"}
{"msg":"```\nFailure [91.924 seconds]\n[BeforeSuite] BeforeSuite\n/Users/mhb/go/src/github.com/hyperledger/fabric-chaincode-evm/integration/fab3/fab3_suite_test.go:45\n\n  Timed out after 60.003s.\n  Expected process to exit.  It did not.\n\n  /Users/mhb/go/src/github.com/hyperledger/fabric-chaincode-evm/vendor/github.com/hyperledger/fabric/integration/nwo/deploy.go:108\n------------------------------\n```","username":"MHBauer","ts":"2019-02-21T21:00:03.200Z"}
{"msg":"failing in suite setup? not sure what to think","username":"MHBauer","ts":"2019-02-21T21:00:18.069Z"}
{"msg":"the network didn't come up","username":"swetha","ts":"2019-02-21T21:00:25.106Z"}
{"msg":"either the network didn't come up or the chaincode didn't deploy","username":"swetha","ts":"2019-02-21T21:00:47.733Z"}
{"msg":"any idea why it would happen over and over? ","username":"MHBauer","ts":"2019-02-21T21:01:02.438Z"}
{"msg":"some leftover that never got cleaned up","username":"MHBauer","ts":"2019-02-21T21:01:30.004Z"}
{"msg":"```\ndocker ps\nCONTAINER ID        IMAGE                                   COMMAND                  CREATED              STATUS              PORTS               NAMES\n4e1f8add8ab0        hyperledger/fabric-ccenv:amd64-latest   \"/bin/sh -c 'GOPATH=‚Ä¶\"   About a minute ago   Up About a minute                       relaxed_benz\n```","username":"MHBauer","ts":"2019-02-21T21:01:50.863Z"}
{"msg":"any idea what causes this to hang around osme times?","username":"MHBauer","ts":"2019-02-21T21:01:59.040Z"}
{"msg":"so finnicky.","username":"MHBauer","ts":"2019-02-21T21:03:04.304Z"}
{"msg":"wasn't that.","username":"MHBauer","ts":"2019-02-21T21:03:23.246Z"}
{"msg":"I think the interrupt tests are in the wrong place.","username":"MHBauer","ts":"2019-02-21T21:56:42.405Z"}
{"msg":"other than the fact that it won't run without having a fabric tot connect to :rolling_eyes: ","username":"MHBauer","ts":"2019-02-21T21:59:00.768Z"}
{"msg":"Has joined the channel.","username":"braduf","ts":"2019-03-05T00:04:59.522Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bjwswang","ts":"2019-03-05T06:43:40.137Z","type":"uj"}
{"msg":"Has joined the channel.","username":"klenik","ts":"2019-03-06T11:25:14.254Z","type":"uj"}
{"msg":"@MHBauer you might want to look at the discussion on Fabric's gerrit review policy: https://chat.hyperledger.org/channel/fabric-maintainers?msg=K4xWe7W42iXyghvdb","username":"lehors","ts":"2019-03-06T18:06:20.520Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=K4xWe7W42iXyghvdb","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=K4xWe7W42iXyghvdb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer @swetha you might want to look at the discussion on Fabric's gerrit review policy: https://chat.hyperledger.org/channel/fabric-maintainers?msg=K4xWe7W42iXyghvdb","username":"lehors","ts":"2019-03-06T18:06:20.520Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=K4xWe7W42iXyghvdb","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=K4xWe7W42iXyghvdb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"also: \"Fabric-CA has recently moved from two +2 review policy to non-author code review (NACR) which requires one +2. \"","username":"lehors","ts":"2019-03-06T18:07:03.355Z"}
{"msg":"I think given the very small group of maintainers you have it would make sense to get a less restrictive policy","username":"lehors","ts":"2019-03-06T18:08:29.524Z"}
{"msg":"@lehors That's interesting. I like the idea of NACR, and totally agree a less restrictive policy would be good for us, not to mention would reduce the bottleneck we are currently facing in terms of reviews","username":"swetha","ts":"2019-03-06T19:42:40.053Z"}
{"msg":"@guoger what do you think? I know you have talked about a single +2 as well","username":"swetha","ts":"2019-03-06T19:44:18.042Z"}
{"msg":"Yep, totally agree...","username":"guoger","ts":"2019-03-07T00:21:44.094Z"}
{"msg":"3 & 4, I'll help werie","username":"MHBauer","ts":"2019-03-07T18:32:58.193Z"}
{"msg":"review*","username":"MHBauer","ts":"2019-03-07T18:33:02.295Z"}
{"msg":"docs merged with some comments","username":"guoger","ts":"2019-03-08T02:49:13.993Z"}
{"msg":"comments filed as ticket?","username":"MHBauer","ts":"2019-03-08T07:22:18.025Z"}
{"msg":"or on an existing ticket","username":"MHBauer","ts":"2019-03-08T07:22:23.210Z"}
{"msg":"@MHBauer just on those merged CRs","username":"guoger","ts":"2019-03-08T10:17:58.508Z"}
{"msg":"Has joined the channel.","username":"Suma","ts":"2019-03-08T14:49:41.905Z","type":"uj"}
{"msg":"thanks @guoger !","username":"swetha","ts":"2019-03-08T19:08:58.602Z"}
{"msg":"Has joined the channel.","username":"Yogendrasri","ts":"2019-03-11T14:04:39.046Z","type":"uj"}
{"msg":"We are looking to create Ethereum ERC 20 tokens but within HL Fabric runtime. we have found that we need to use fab proxy to connect to Eth VM in HL Fabric env. And that there is a constraint of one user per fab proxy, This is a issue because we need to move tokens between users, and this means that if we need to create 5k users, which also implies that we need to create 5K Fab Proxies. is there any way fab proxy constraint can be managed/eliminated? ","username":"Yogendrasri","ts":"2019-03-11T14:05:16.805Z"}
{"msg":"It should be doable when offline signing is enabled in SDK. @swetha should be able to have a more detailed answer @Yogendrasri [ ](https://chat.hyperledger.org/channel/fabric-evm?msg=is2WAm9dJHhEcTACG)","username":"guoger","ts":"2019-03-11T15:09:12.858Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=is2WAm9dJHhEcTACG","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=is2WAm9dJHhEcTACG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Basically user should be able to sign the tx with their own private key, and fab3 will simply forward the signed tx ","username":"guoger","ts":"2019-03-11T15:10:07.664Z"}
{"msg":"@Yogendrasri, Currently, as you said, we don't have the ability for fab3 to act as different users. We do want to support offline signing which would result in implemnting `eth_sendRawTransaction`. This way the transactions are formed and signed outside of fab3 and then can be sent in through a single fab3 regardless of the user. However our current blocker for that is that the Fabric Go SDK, which is the library we use to interact with the Fabric network, does not currently support that feature. Can you tell me more about how your network will look in terms of orgs, and users per org? And if fab3 were to support more than one user at a time, how would you divide out the users amongst the different fab3? In general, my reluctance of supporting multiple users is because fab3 becomes more of a centralized component in that design.","username":"swetha","ts":"2019-03-11T20:54:07.519Z"}
{"msg":"@Yogendrasri, Currently, as you said, we don't have the ability for fab3 to act as different users. We do want to support offline signing which would result in implemnting `eth_sendRawTransaction`. This way the transactions are formed and signed outside of fab3 and then can be sent in through a single fab3 regardless of the user. However our current blocker for that is that the Fabric Go SDK, which is the library we use to interact with the Fabric network, does not currently support that feature. Can you tell me more about how your network will look in terms of orgs, and users per org? And if fab3 were to support more than one user at a time, how would you divide out the users amongst the different fab3? In general, my reluctance to supporting multiple users is because fab3 becomes more of a centralized component in that design.","username":"swetha","ts":"2019-03-11T20:54:07.519Z"}
{"msg":"@Yogendrasri, Currently, as you said, we don't have the ability for fab3 to act as different users. We do want to support offline signing which would result in implemnting `eth_sendRawTransaction`. This way the transactions are formed and signed outside of fab3 and then can be sent in through a single fab3 regardless of the user. However our current blocker for that is that the Fabric Go SDK, which is the library we use to interact with the Fabric network, does not currently support that feature. Can you tell me more about how your network will look in terms of orgs, and users per org? And if fab3 were to support more than one user at a time, how would you divide out the users amongst the different fab3 instances? In general, my reluctance to supporting multiple users is because fab3 becomes more of a centralized component in that design.","username":"swetha","ts":"2019-03-11T20:54:07.519Z"}
{"msg":"Has joined the channel.","username":"KyunghoKim","ts":"2019-03-12T03:08:44.825Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=pheLBmXm7Jb6frBwW) @swetha Thank you Swetha for your response","username":"Yogendrasri","ts":"2019-03-12T12:10:11.796Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=pheLBmXm7Jb6frBwW","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=pheLBmXm7Jb6frBwW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"bh4rtp","ts":"2019-03-13T00:42:41.114Z","type":"uj"}
{"msg":"some time in the recent past we made a wiki page","username":"MHBauer","ts":"2019-03-13T02:54:05.667Z"}
{"msg":"there hasn't been anything on it until today (I had thought I had posted something, but perhaps never saved)","username":"MHBauer","ts":"2019-03-13T02:54:24.452Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Fabric+Chaincode+EVM","username":"MHBauer","ts":"2019-03-13T02:54:25.771Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Fabric+Chaincode+EVM","username":"MHBauer","ts":"2019-03-13T02:54:25.771Z"}
{"msg":"I'd like to pin it, but I don't think I have perms.","username":"MHBauer","ts":"2019-03-13T02:54:45.066Z"}
{"msg":"As part of this, I'd like to solicitate the community to have a discussion on when we do releases. ","username":"MHBauer","ts":"2019-03-13T02:55:19.098Z"}
{"msg":"We made a 1.4 based release and then increased drastically the compatibility by updating burrow.","username":"MHBauer","ts":"2019-03-13T02:55:45.967Z"}
{"msg":"I think we should make releases more often, and less tied to fabric releases. ","username":"MHBauer","ts":"2019-03-13T02:56:16.180Z"}
{"msg":"need to figure out a way to make a poll or something.","username":"MHBauer","ts":"2019-03-13T02:56:33.781Z"}
{"msg":"","username":"guoger","ts":"2019-03-13T03:08:55.484Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"pinned for you. i don't have permission to promote you to be moderator though...","username":"guoger","ts":"2019-03-13T03:09:13.384Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=8DLFdMvwxT57Jz2SC) @MHBauer I like the quarterly approach. It doesn't necessarily need to be tied to fabric release as in we don't wait for them. It makes it easy for us to aim for features. I also don't think a monthly release is doable because of the time it takes to get patches in.","username":"swetha","ts":"2019-03-13T03:24:31.891Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=8DLFdMvwxT57Jz2SC","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=8DLFdMvwxT57Jz2SC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@lehors ^the wiki we started. I'd also like to get your perspective on a 'community inclusion checklist' so we behave appropriately.","username":"MHBauer","ts":"2019-03-13T03:43:29.934Z"}
{"msg":"IMO, we should strive for matching the quarterly fabric releases","username":"cbf","ts":"2019-03-13T11:17:20.733Z"}
{"msg":"however, more frequent is also acceptable","username":"cbf","ts":"2019-03-13T11:17:45.691Z"}
{"msg":"do we have a hyperledger docs type thing, or an etherpad? would be good to have everybody write down their opinion and try to make sense of it.","username":"MHBauer","ts":"2019-03-13T18:09:17.763Z"}
{"msg":"Updated this patch to now be a burrow upgrade: https://gerrit.hyperledger.org/r/#/c/29565/","username":"swetha","ts":"2019-03-13T18:45:37.549Z"}
{"msg":"sweet","username":"MHBauer","ts":"2019-03-13T19:14:15.083Z"}
{"msg":"@swetha can I get a quick response on the getlogs comment? ","username":"MHBauer","ts":"2019-03-13T19:14:34.814Z"}
{"msg":"I added an earliest somewhere else, what are we thinking to have it there? ","username":"MHBauer","ts":"2019-03-13T19:14:54.885Z"}
{"msg":"doesn't matter to me, should be quick to add.","username":"MHBauer","ts":"2019-03-13T19:15:00.632Z"}
{"msg":"the earliest paramter?","username":"swetha","ts":"2019-03-13T19:15:00.733Z"}
{"msg":"In other one we add the earliest parameter but since we mock the blocks out i though it would be nice to add in earliest in the integration test so it tests all those pieces without any mocks","username":"swetha","ts":"2019-03-13T19:16:04.636Z"}
{"msg":"In the other one we add the earliest parameter but since we mock the blocks out i though it would be nice to add in earliest in the integration test so it tests all those pieces without any mocks","username":"swetha","ts":"2019-03-13T19:16:04.636Z"}
{"msg":"In the other one we add the earliest parameter but since we mock the blocks out i thoughy it would be nice to add in earliest in the integration test so it tests all those pieces without any mocks","username":"swetha","ts":"2019-03-13T19:16:04.636Z"}
{"msg":"In the other one we add the earliest parameter but since we mock the blocks out i thought it would be nice to add in earliest in the integration test so it tests all those pieces without any mocks","username":"swetha","ts":"2019-03-13T19:16:04.636Z"}
{"msg":"so it isn't about testing \"earliest\" more just verifying that we didn't make any assumptions that we shouldn't have on the block type","username":"swetha","ts":"2019-03-13T19:17:17.209Z"}
{"msg":"eh? it's an integration test, how'd we mock the blocks?","username":"MHBauer","ts":"2019-03-13T19:18:20.042Z"}
{"msg":"now I'm very concerned","username":"MHBauer","ts":"2019-03-13T19:18:26.150Z"}
{"msg":"I thought the \"earliest\" was in a unit test not in the integration","username":"swetha","ts":"2019-03-13T19:18:43.793Z"}
{"msg":"we mock blocks out in the unit test","username":"swetha","ts":"2019-03-13T19:18:50.236Z"}
{"msg":"I commented it on it","username":"MHBauer","ts":"2019-03-13T19:18:55.119Z"}
{"msg":"the usage","username":"MHBauer","ts":"2019-03-13T19:19:04.376Z"}
{"msg":"twice, I think.","username":"MHBauer","ts":"2019-03-13T19:19:10.563Z"}
{"msg":"hard to keep track of all these changes though","username":"MHBauer","ts":"2019-03-13T19:19:22.670Z"}
{"msg":"yup, my bad yes didn't see the new comments","username":"swetha","ts":"2019-03-13T19:19:59.176Z"}
{"msg":"only once","username":"MHBauer","ts":"2019-03-13T19:20:03.614Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/28949/29/integration/fab3/fab3_test.go@241 241","username":"MHBauer","ts":"2019-03-13T19:20:06.894Z"}
{"msg":"i think we are fine then, ill respond on the patch too","username":"swetha","ts":"2019-03-13T19:20:23.743Z"}
{"msg":"oh, left a debug in there, dang it.","username":"MHBauer","ts":"2019-03-13T19:20:34.749Z"}
{"msg":"well, it only prints on failure, so....","username":"MHBauer","ts":"2019-03-13T19:20:42.557Z"}
{"msg":"the Fprintln?","username":"swetha","ts":"2019-03-13T19:20:47.508Z"}
{"msg":":-D","username":"MHBauer","ts":"2019-03-13T19:20:49.047Z"}
{"msg":"i thought that was intentional","username":"swetha","ts":"2019-03-13T19:20:55.525Z"}
{"msg":"yes","username":"MHBauer","ts":"2019-03-13T19:20:59.050Z"}
{"msg":"very intentional","username":"MHBauer","ts":"2019-03-13T19:21:01.186Z"}
{"msg":"ill remember that for the future :P","username":"swetha","ts":"2019-03-13T19:21:09.861Z"}
{"msg":"it's the one that got away","username":"MHBauer","ts":"2019-03-13T19:21:21.898Z"}
{"msg":"I should make a shortcut for \"fmt.Fprintln(GinkgoWriter, )\" and have it leave the cursor after the comma","username":"MHBauer","ts":"2019-03-13T19:21:47.549Z"}
{"msg":"@MHBauer just added some new comments to the minimum getLogs. I think we need to move where with do the genesis block test to avoid flaky tests","username":"swetha","ts":"2019-03-13T21:57:38.376Z"}
{"msg":"ya, was worried about that in a different case, but it appears to be relevant here","username":"MHBauer","ts":"2019-03-13T22:24:19.774Z"}
{"msg":"what's the flag for randomize all the things?","username":"MHBauer","ts":"2019-03-13T22:24:26.736Z"}
{"msg":"any idea what causes '      cannot connect to Docker endpoint'","username":"MHBauer","ts":"2019-03-13T22:26:50.590Z"}
{"msg":"where are you seeing that error?","username":"swetha","ts":"2019-03-13T22:43:48.902Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=NMFrdxjpNQ6G7oJjZ) @MHBauer `--randomizeAllSpecs`","username":"swetha","ts":"2019-03-13T22:44:11.958Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=NMFrdxjpNQ6G7oJjZ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=NMFrdxjpNQ6G7oJjZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"when tests run in ci, they get randomized through  `scripts/run-integration-tests.sh`","username":"swetha","ts":"2019-03-13T22:44:46.699Z"}
{"msg":"neat. I run that sometimes.","username":"MHBauer","ts":"2019-03-13T23:44:48.373Z"}
{"msg":"@guoger on a merge spree tonight!","username":"MHBauer","ts":"2019-03-14T04:29:23.608Z"}
{"msg":"Has joined the channel.","username":"AhmedRebai","ts":"2019-03-14T08:24:49.421Z","type":"uj"}
{"msg":"Hi Guys what's the goal of this project ?","username":"AhmedRebai","ts":"2019-03-14T08:25:12.963Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=XiHE9RcaTFNAoxeE7) @AhmedRebai The goal is to enable one to use the Hyperledger Fabric permissioned blockchain platform to interact with Ethereum smart contracts written in an EVM compatible language such as Solidity or Vyper.","username":"lehors","ts":"2019-03-14T08:33:47.427Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=XiHE9RcaTFNAoxeE7","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=XiHE9RcaTFNAoxeE7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"see https://github.com/hyperledger/fabric-chaincode-evm/","username":"lehors","ts":"2019-03-14T08:33:56.923Z"}
{"msg":"but what's the main advantages of this interaction ? ","username":"AhmedRebai","ts":"2019-03-14T08:34:24.542Z"}
{"msg":"you mean integration?","username":"lehors","ts":"2019-03-14T08:34:53.753Z"}
{"msg":"we can use implement smart contract in chaincode for hyperldger-fabric and is running well ","username":"AhmedRebai","ts":"2019-03-14T08:34:57.746Z"}
{"msg":"yes integration ! ","username":"AhmedRebai","ts":"2019-03-14T08:35:04.768Z"}
{"msg":"if you're already using fabric natively than you probably don't have a use for this","username":"lehors","ts":"2019-03-14T08:35:25.836Z"}
{"msg":"this is really for people who started with ethereum and have developed smart contracts, clients, and skills they want to bring to a Fabric network","username":"lehors","ts":"2019-03-14T08:36:17.878Z"}
{"msg":"can you tell me some use cases of this integration ? ","username":"AhmedRebai","ts":"2019-03-14T08:36:43.392Z"}
{"msg":"it is easy to start with Ethereum because there is a testnet anyone can use","username":"lehors","ts":"2019-03-14T08:37:12.531Z"}
{"msg":"so many people start with Ethereum","username":"lehors","ts":"2019-03-14T08:37:35.758Z"}
{"msg":"Has joined the channel.","username":"hssanbenrhouma","ts":"2019-03-14T08:37:56.884Z","type":"uj"}
{"msg":"yet, they eventually realize it has limitations that makes it hardly suitable for production systems","username":"lehors","ts":"2019-03-14T08:38:05.303Z"}
{"msg":"but it depends in the use case to implement the ethereuem technology or the hyperldger-fabric ","username":"AhmedRebai","ts":"2019-03-14T08:38:11.338Z"}
{"msg":"so, this integration can help them transition to Fabric","username":"lehors","ts":"2019-03-14T08:38:44.496Z"}
{"msg":"for a junior developer having experience with  Ethereuem smart contract and  hyperledger-fabric ","username":"AhmedRebai","ts":"2019-03-14T08:38:58.644Z"}
{"msg":"so the goal of this integration it to make it easy for those who have started with Ethereuem ","username":"AhmedRebai","ts":"2019-03-14T08:40:13.135Z"}
{"msg":"correct","username":"lehors","ts":"2019-03-14T08:40:24.604Z"}
{"msg":"to start with hyperledger ? ","username":"AhmedRebai","ts":"2019-03-14T08:40:29.837Z"}
{"msg":";) ","username":"AhmedRebai","ts":"2019-03-14T08:40:32.194Z"}
{"msg":"hyperledger fabric","username":"lehors","ts":"2019-03-14T08:40:37.999Z"}
{"msg":"yes hyeperledger fabric ","username":"AhmedRebai","ts":"2019-03-14T08:40:49.559Z"}
{"msg":"hyperledger is a consortium not a software","username":"lehors","ts":"2019-03-14T08:40:50.314Z"}
{"msg":"yes yes i know :D ","username":"AhmedRebai","ts":"2019-03-14T08:40:58.496Z"}
{"msg":"but it's not ready yet for production mode ","username":"AhmedRebai","ts":"2019-03-14T08:41:17.945Z"}
{"msg":"i'm currently Blockchain developer intern , we are participating in a bootcamp to learn the blockchain technology (from bitcoin , ethereuem and now Hyperledger-fabric ) ","username":"AhmedRebai","ts":"2019-03-14T08:42:40.784Z"}
{"msg":"the task of this week is to explore this repository , trying to make it working and build a use case based in fabric-chaincode-evm\n","username":"AhmedRebai","ts":"2019-03-14T08:43:35.492Z"}
{"msg":"so, if you have already developed some solidity contract and fab3 client you could try to run it on a fabric network with this","username":"lehors","ts":"2019-03-14T08:44:26.241Z"}
{"msg":"there are some restrictions though","username":"lehors","ts":"2019-03-14T08:44:40.330Z"}
{"msg":"@lehors  one question : in medical chain project, they used both hyperledger fabric and ethereum \nhyperledger-fabric for private blockchain (doctors, pharmacies and hospitals) and the ethereum public blockchain for patients interactions with the private network\nis that have any relation with borrow project (fabric evm) ?","username":"hssanbenrhouma","ts":"2019-03-14T08:44:47.471Z"}
{"msg":"it won't work if your contract is payable","username":"lehors","ts":"2019-03-14T08:44:49.289Z"}
{"msg":"because there is no Ether in Fabric","username":"lehors","ts":"2019-03-14T08:44:57.971Z"}
{"msg":"burrow","username":"lehors","ts":"2019-03-14T08:45:08.407Z"}
{"msg":"yes, it very much does","username":"lehors","ts":"2019-03-14T08:45:14.207Z"}
{"msg":"this integration leverage's the burrow evm","username":"lehors","ts":"2019-03-14T08:45:24.290Z"}
{"msg":"this integration leverages the burrow evm","username":"lehors","ts":"2019-03-14T08:45:24.290Z"}
{"msg":"essentiallly it installs the burrow evm as a fabric chaincode","username":"lehors","ts":"2019-03-14T08:46:01.940Z"}
{"msg":"so the network is implemented with fabric and the smart contract with Solidity running in EVm ? to interact with Ethereuem smart contract in hyperldger environment we should use Fab3 client ? ","username":"AhmedRebai","ts":"2019-03-14T08:51:46.477Z"}
{"msg":"@AhmedRebai you could use fabric sdk or cli as well. Fab3 implements a subset of JSON RPC, so you can use web3.js lib, as well as some other tooling such as Remix. Truffle is WIP","username":"guoger","ts":"2019-03-14T09:05:23.460Z"}
{"msg":"@AhmedRebai if you already developed a web3 client it would be interesting for your project to try and reuse it by connecting to the fab3 proxy","username":"lehors","ts":"2019-03-14T09:43:24.151Z"}
{"msg":"the flow becomes web3 client -> fab3 proxy -> fabric peer -> evm chaincode -> evm burrow -> ethereum contract","username":"lehors","ts":"2019-03-14T09:44:53.803Z"}
{"msg":"the flow becomes web3 client -> fab3 proxy -> fabric peer -> evm chaincode -> burrow evm -> ethereum contract","username":"lehors","ts":"2019-03-14T09:44:53.803Z"}
{"msg":"the two ends should be reusable as is","username":"lehors","ts":"2019-03-14T09:45:50.788Z"}
{"msg":"as if they were running on an Ethereum network","username":"lehors","ts":"2019-03-14T09:46:12.290Z"}
{"msg":"sorry i'm having an issue while trying to install Fab3 client ","username":"AhmedRebai","ts":"2019-03-14T10:17:08.301Z"}
{"msg":"","username":"AhmedRebai","ts":"2019-03-14T10:21:27.194Z","attachments":[{"type":"file","title":"error.png","title_link":"/file-upload/B8ToESCJcCWLpRhAP/error.png","image_url":"/file-upload/B8ToESCJcCWLpRhAP/error.png","image_type":"image/png","image_size":49654,"url":"/file-upload/B8ToESCJcCWLpRhAP/error.png","remote":false,"fileId":"B8ToESCJcCWLpRhAP","fileName":"error.png"}]}
{"msg":"Has joined the channel.","username":"HELASOUISSI","ts":"2019-03-14T14:08:02.903Z","type":"uj"}
{"msg":"hello what is the main file of this project that runs the netwrok  and the containers ?","username":"HELASOUISSI","ts":"2019-03-14T14:12:34.491Z"}
{"msg":"because i'm having an issue while running this command !","username":"HELASOUISSI","ts":"2019-03-14T14:18:01.439Z"}
{"msg":"","username":"HELASOUISSI","ts":"2019-03-14T14:18:16.148Z","attachments":[{"type":"file","title":"Capture du 2019-03-14 15-17-18.png","title_link":"/file-upload/Fk9AAmkAz8Sg3ZsJH/Capture%20du%202019-03-14%2015-17-18.png","image_url":"/file-upload/Fk9AAmkAz8Sg3ZsJH/Capture%20du%202019-03-14%2015-17-18.png","image_type":"image/png","image_size":30329,"url":"/file-upload/Fk9AAmkAz8Sg3ZsJH/Capture%20du%202019-03-14%2015-17-18.png","remote":false,"fileId":"Fk9AAmkAz8Sg3ZsJH","fileName":"Capture du 2019-03-14 15-17-18.png"}]}
{"msg":"peer command was not found !","username":"HELASOUISSI","ts":"2019-03-14T14:18:44.337Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=2GcSk3YEMzkizSW3n) @HELASOUISSI the peer command is part of Fabric","username":"lehors","ts":"2019-03-14T14:52:40.875Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=2GcSk3YEMzkizSW3n","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=2GcSk3YEMzkizSW3n","remote":true,"fileId":null,"fileName":null}]}
{"msg":"you can download the binary following the fabric installation instructions","username":"lehors","ts":"2019-03-14T14:53:10.109Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/install.html","username":"lehors","ts":"2019-03-14T14:54:19.765Z"}
{"msg":"hi @lehors what's the utility of Fab3 ? ","username":"AhmedRebai","ts":"2019-03-14T16:20:44.350Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=vdW8cQ4z6NTS5fMrm) @AhmedRebai fab3 is a proxy, it allows a web3 client to connect to a fabric network","username":"lehors","ts":"2019-03-14T16:24:13.659Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=vdW8cQ4z6NTS5fMrm","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=vdW8cQ4z6NTS5fMrm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"without modification","username":"lehors","ts":"2019-03-14T16:24:27.863Z"}
{"msg":"for the web3 client, it is as if it is connected to ethereum","username":"lehors","ts":"2019-03-14T16:24:53.778Z"}
{"msg":"so my data is stored in ethereuem smart contract ? ","username":"AhmedRebai","ts":"2019-03-14T16:27:16.618Z"}
{"msg":"it's public or deployed in hyperledger network ?","username":"AhmedRebai","ts":"2019-03-14T16:27:30.754Z"}
{"msg":"@AhmedRebai Fab3 is just a proxy. Currently it is stateless. When you use it, it will connect to the Fabric network of your choosing. So all the data and contracts will be deployed to that network you connected Fab3 to.","username":"swetha","ts":"2019-03-14T17:19:46.164Z"}
{"msg":"Were you able to build fab3? The error you sent above is because your the fabric-chaincode-evm is not in the gopath","username":"swetha","ts":"2019-03-14T17:21:03.358Z"}
{"msg":"Has joined the channel.","username":"MarioPissardo","ts":"2019-03-14T22:31:24.471Z","type":"uj"}
{"msg":"thanks @swetha ","username":"AhmedRebai","ts":"2019-03-15T09:39:47.701Z"}
{"msg":"Has joined the channel.","username":"raj_shekhar","ts":"2019-03-18T05:52:44.836Z","type":"uj"}
{"msg":"Has joined the channel.","username":"fastchain","ts":"2019-03-18T07:49:22.019Z","type":"uj"}
{"msg":"Hello everyone!\nWhich project from https://github.com/hyperledger/fabric-chaincode-evm and https://github.com/hyperledger/burrow is the most mature?  Which one is the bect to run Solidity contracts.  ","username":"fastchain","ts":"2019-03-18T07:53:00.832Z"}
{"msg":"Hello everyone!\nWhich project from https://github.com/hyperledger/fabric-chaincode-evm and https://github.com/hyperledger/burrow is the most mature?  Which one is the best to run Solidity contracts?","username":"fastchain","ts":"2019-03-18T07:53:00.832Z"}
{"msg":"fabric-chaincode-evm uses the Burrow code as a library so in terms of execution you should see parity - modulo the version of Burrow being used - fabric-evm is due an upgrade shortly, however fabric-chaincode-evm has fab3 (coming to Burrow too in the medium term) which means you can use web3 tooling. The biggest difference with Burrow is that it uses Tendermint consensus and operationally is a bit simpler (it's a single Go binary) because it doesn't have the notion of different chaincode. ","username":"silasdavis","ts":"2019-03-18T09:33:03.506Z"}
{"msg":"Hi All! When [interacting with a deployed smart contract](https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md#interacting-with-a-deployed-contract), what is the standard way to derive the function hashes? And are there any (syntactic) constraints I need to consider when passing multiple arguments to a smart contract function? \nIf these are implementation-independent EVM rules, just point me to the appropriate docs, thanks :)","username":"klenik","ts":"2019-03-18T10:07:11.634Z"}
{"msg":"@silasdavis  thank you!","username":"fastchain","ts":"2019-03-18T10:12:22.135Z"}
{"msg":"found the ABI encoding spec and related helpful libs in the meantime","username":"klenik","ts":"2019-03-18T14:26:58.405Z"}
{"msg":"small one ready to merge https://gerrit.hyperledger.org/r/#/c/30069/ ","username":"MHBauer","ts":"2019-03-18T18:00:17.136Z"}
{"msg":"Has joined the channel.","username":"leowu","ts":"2019-03-18T20:12:12.240Z","type":"uj"}
{"msg":"Hi everyone. I am new into Hyperledger burrow. I have a question about it. So I know that for burrow we are using Smart Contract instead of Chaincode in the Burrow EVM. So is that possible that we can run the Chaincode and the Solidity Smart Contract Simultaneously? ","username":"leowu","ts":"2019-03-18T20:12:16.076Z"}
{"msg":"I have successfully installed and run the fabric-chainode-evm and the vote-hyperledger-ethereum and the web3-fabric-voting-dapp. But I just wondering that is it possible I can deploy the Chaincode instead and run Chaincode and Smart Contract simultaneously. ","username":"leowu","ts":"2019-03-18T20:12:33.757Z"}
{"msg":"burrow is a different project. We use the burrow EVM as a chaincode. solidity compiled to evm byte code runs in the chaincode. I don't understan dthe last question.","username":"MHBauer","ts":"2019-03-18T20:18:57.320Z"}
{"msg":"Has joined the channel.","username":"noyonthe1","ts":"2019-03-19T05:47:32.501Z","type":"uj"}
{"msg":"Hi, I Have a question, I just deployed my hyper ledger fabric network and fixing the evm instantiation, my smart contract is implemented with ethereuem and deployed, but how to set which channel should we connect to interact with the smart contract? how the permission advantage is implemented? ","username":"AhmedRebai","ts":"2019-03-19T09:04:10.373Z"}
{"msg":"@MHBauer Thx. What I am asking is Can we deploy two Smart Contract (ex: one is Go-lang chaincode and the other one is Solidity Smart Contract) at the same time and let them interact with each other? Is it possible?","username":"leowu","ts":"2019-03-19T13:35:31.995Z"}
{"msg":"For example, I created the web3-fabric-voting-dapp which I used the vote.sol as my Smart Contract. So right now I want to deploy another Chaincode written in Go-lang and I want to Get the result of the voting. Just something like interacting with two smart contracts but in different language. Is that possible?","username":"leowu","ts":"2019-03-19T14:53:46.531Z"}
{"msg":"Has joined the channel.","username":"raphaelbenoit","ts":"2019-03-19T16:35:21.404Z","type":"uj"}
{"msg":"@MHBauer When deploying a bytecode (compiled from Solidity with solc-js), how can I \"pass\" the constructor arguments? Evmcc forwards the bytecode both as code and input. Did I miss something on the client-side?","username":"klenik","ts":"2019-03-19T17:23:43.049Z"}
{"msg":"EVM cc isn't configured to do anything outside of it's domain. ","username":"MHBauer","ts":"2019-03-19T17:35:14.966Z"}
{"msg":"an external chaincode should be able to access the data if it's on the same channel, but you'd have to know where the data is stored and how to parse it. We've not made any plans for that to be easy at the moment.","username":"MHBauer","ts":"2019-03-19T17:36:16.170Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=RrRefwuwegtGmzD7Y) @AhmedRebai deploying the evmcc must have been done on a channel. The fab3 proxy takes an sdk configuration for the details on how to connect, as well as flags speciying the ccname and channel name.","username":"MHBauer","ts":"2019-03-19T17:37:47.569Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=RrRefwuwegtGmzD7Y","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=RrRefwuwegtGmzD7Y","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=q9LKJ9uBpdPqAAQqW) @klenik Can you send me an example contract? I'm not sure how the evmcc could be involved here.","username":"MHBauer","ts":"2019-03-19T17:38:40.691Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=q9LKJ9uBpdPqAAQqW","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=q9LKJ9uBpdPqAAQqW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer The dummy contract:\n```\npragma solidity ^0.4.24;\n\ncontract Abs {\n    int public dummyValue;\n    constructor(int y) public {\n        dummyValue = y;\n    }\n    \n    function abs(int x) public pure returns (int) {\n        int y = x;\n        if (y < 0) y *= -1;\n        assert(y >= 0);\n        return y;\n    }\n}\n```\n\nIf I compile it, I get a `bytecode`, that I can [pass to evmcc](https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md#deploying-a-contract). Then [this line in evmcc](https://github.com/hyperledger/fabric-chaincode-evm/blob/125e0855da3ba2600bf0456317fca5eaa232db7f/evmcc/evmcc.go#L133) passes this `bytecode` to the Burrow EVM both as `code` and `input`. Where can I squash in my dummy integer parameter? Should it be part of the `bytecode` somehow? ","username":"klenik","ts":"2019-03-19T18:13:21.385Z"}
{"msg":"gonna try and run it, may have a newtest case.","username":"MHBauer","ts":"2019-03-19T18:36:33.222Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=KSW6GPZm366awTk3b) @klenik sounds like you're interacting with the CC directly, and not through fab3?","username":"MHBauer","ts":"2019-03-19T18:40:56.121Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=KSW6GPZm366awTk3b","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=KSW6GPZm366awTk3b","remote":true,"fileId":null,"fileName":null}]}
{"msg":"If I use remix attached to fab3, it shows a constructor argument when I deploy.","username":"MHBauer","ts":"2019-03-19T18:54:02.179Z"}
{"msg":"d'ise","username":"MHBauer","ts":"2019-03-19T19:10:07.361Z"}
{"msg":"but yea, it doesn't seem to work correctly to me.","username":"MHBauer","ts":"2019-03-19T19:10:14.551Z"}
{"msg":"I'm going to make a jira ticket.","username":"MHBauer","ts":"2019-03-19T19:11:37.798Z"}
{"msg":"nope, nevermind, I'm a dummy.","username":"MHBauer","ts":"2019-03-19T19:17:44.035Z"}
{"msg":"works fine.","username":"MHBauer","ts":"2019-03-19T19:17:45.795Z"}
{"msg":"turns out every negative number is less than a positive number, who knew?","username":"MHBauer","ts":"2019-03-19T19:18:06.929Z"}
{"msg":"I can make a short video if it would help, but I modified the contract a little bit to make sure that the value was present.","username":"MHBauer","ts":"2019-03-19T19:20:37.511Z"}
{"msg":"```\n```","username":"MHBauer","ts":"2019-03-19T19:20:47.455Z"}
{"msg":"```\npragma solidity ^0.5;\n\ncontract Abs {\n    int public dummyValue;\n    constructor(int y) public {\n        dummyValue = y;\n    }\n    \n    function abs(int x) public view returns (int) {\n        int y = x;\n        if (y < dummyValue) {\n            y *= -1;\n        }\n        return y;\n    }\n```","username":"MHBauer","ts":"2019-03-19T19:20:47.455Z"}
{"msg":"probably could have just returned dummyValue directly, but oh well.","username":"MHBauer","ts":"2019-03-19T19:21:50.074Z"}
{"msg":"@MHBauer Yep, I'm interacting with evmcc directly through HL Caliper (adding the fabric-evm support to it right now). So if it works through Remix->fab3, then the value of `y` must be encoded in the `bytecode` somehow, since the CC doesn't receive additional arguments","username":"klenik","ts":"2019-03-19T19:22:20.752Z"}
{"msg":"caliper is the perf thingy?","username":"MHBauer","ts":"2019-03-19T19:22:50.498Z"}
{"msg":"Yes. And since it has a solid Fabric support already, adding Solidity (or any EVM bytecode) support through your CC is quite straightforward, except for this constructor part. But I think it's because of my lack of EVM knowledge","username":"klenik","ts":"2019-03-19T19:24:35.083Z"}
{"msg":"yes, well we have some idiosyncracies specific to the domain","username":"MHBauer","ts":"2019-03-19T19:25:17.684Z"}
{"msg":"I need to go give a docker presentation.","username":"MHBauer","ts":"2019-03-19T19:25:24.252Z"}
{"msg":"we should talk. I need to do some perf testing.","username":"MHBauer","ts":"2019-03-19T19:25:33.669Z"}
{"msg":":thumbsup: DM me any time","username":"klenik","ts":"2019-03-19T19:25:55.634Z"}
{"msg":"@klenik I added some debug logs, and it looks like it's appended on the end.","username":"MHBauer","ts":"2019-03-19T21:17:36.760Z"}
{"msg":"`0x608060405234801561001057600080fd5b506040516020806101078339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000819055505060b0806100576000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806370469c26146037578063fdae7476146053575b600080fd5b603d606f565b6040518082815260200191505060405180910390f35b60596075565b6040518082815260200191505060405180910390f35b60005481565b6000806000549050809150509056fea165627a7a723058204266cdf6237856aca030627567b9d04d635f1d0a0ec89f5d3e032f9629943d2700290000000000000000000000000000000000000000000000000000000000000063` ","username":"MHBauer","ts":"2019-03-19T21:17:48.929Z"}
{"msg":"see the bunch of 00 with 63 at the end? that's the argument","username":"MHBauer","ts":"2019-03-19T21:18:03.298Z"}
{"msg":"and if I run the compiler, I get the same output ","username":"MHBauer","ts":"2019-03-19T21:20:16.656Z"}
{"msg":"```\n docker run --rm -i ethereum/solc:0.5.6 --combined-json bin - < Constructor.sol | jq .\n{\n  \"contracts\": {\n    \"<stdin>:Abs\": {\n      \"bin\": \"608060405234801561001057600080fd5b506040516020806101078339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000819055505060b0806100576000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806370469c26146037578063fdae7476146053575b600080fd5b603d606f565b6040518082815260200191505060405180910390f35b60596075565b6040518082815260200191505060405180910390f35b60005481565b6000806000549050809150509056fea165627a7a72305820875f1f67a2d0ee19e2841694206eb2a2a9ac337955d41c4ac87ef92af3b626810029\"\n    }\n  },\n  \"version\": \"0.5.6+commit.b259423e.Linux.g++\"\n}\n```\njust without the appended argument","username":"MHBauer","ts":"2019-03-19T21:20:25.077Z"}
{"msg":"@MHBauer So I just need to encode the argument list according to the EVM spec (just like with a normal function call) and simply append it at the end? I'll give it a try. Thanks for the quick help! ","username":"klenik","ts":"2019-03-19T21:29:10.042Z"}
{"msg":"yup, looks like that when I send it.","username":"MHBauer","ts":"2019-03-19T21:46:52.640Z"}
{"msg":"all we do is take the arg and shove it directly into the evmcc","username":"MHBauer","ts":"2019-03-19T21:47:04.126Z"}
{"msg":"no nothing, maybe a 0x on the front.","username":"MHBauer","ts":"2019-03-19T21:47:16.503Z"}
{"msg":"@guoger https://gerrit.hyperledger.org/r/#/c/28949/ nits addressed I believe.","username":"MHBauer","ts":"2019-03-19T22:21:24.664Z"}
{"msg":"Will look into it today @MHBauer [ ](https://chat.hyperledger.org/channel/fabric-evm?msg=2wi54Z346yufrsust)","username":"guoger","ts":"2019-03-19T23:05:48.559Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=2wi54Z346yufrsust","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=2wi54Z346yufrsust","remote":true,"fileId":null,"fileName":null}]}
{"msg":"thankee, hope I didn't wake you","username":"MHBauer","ts":"2019-03-19T23:17:11.665Z"}
{"msg":"Has joined the channel.","username":"seokm0","ts":"2019-03-20T02:27:41.229Z","type":"uj"}
{"msg":"@MHBauer When I try to instantiate the evmcc in a `fabric-peer` container, the dependencies are not available by default. What's the easiest way to make the `vendor` directory available in the container? Can I install it together with the evmcc? Or should I mount the vendor dir into the container's gopath?","username":"klenik","ts":"2019-03-20T13:50:26.692Z"}
{"msg":"@MHBauer Currently I try to `dep ensure` locally based on the GoPkg.lock in the fabric-evm repo then install evmcc with the vendor dir. Is there an easier approach?","username":"klenik","ts":"2019-03-20T15:19:24.142Z"}
{"msg":"I mount the whole project  at the gopath location","username":"MHBauer","ts":"2019-03-20T18:52:18.224Z"}
{"msg":"`        - ~/go/src/github.com/hyperledger/fabric-chaincode-evm:/opt/gopath/src/github.com/hyperledger/fabric-chaincode-evm `","username":"MHBauer","ts":"2019-03-20T18:52:22.429Z"}
{"msg":"@klenik ","username":"MHBauer","ts":"2019-03-20T18:52:38.386Z"}
{"msg":"@MHBauer That would work, but I'm trying to add evmcc to the Caliper examples, so I need it to be as self-contained as possible. So I'm trying to figure out the dependencies of evmcc minus the fabric deps, since they're present in the peer image. If you have this list ready, don't hold it back :)","username":"klenik","ts":"2019-03-20T19:30:19.941Z"}
{"msg":"I don't understand.","username":"MHBauer","ts":"2019-03-20T19:41:16.795Z"}
{"msg":"yes, it depends on fabric","username":"MHBauer","ts":"2019-03-20T19:43:41.539Z"}
{"msg":"@klenik have you tried `go list`? ","username":"MHBauer","ts":"2019-03-20T19:44:14.262Z"}
{"msg":"@klenik  https://gist.github.com/MHBauer/071f9d26f002ddadbee0a95b608f1f55 does this help?","username":"MHBauer","ts":"2019-03-20T19:47:00.518Z"}
{"msg":"otherwise, I'm not sure I understand the issue of what you are trying to do.","username":"MHBauer","ts":"2019-03-20T19:47:26.843Z"}
{"msg":"@MHBauer I'd like to install&instantiate evmcc through the Fabric SDK. My current solution is to copy the repo's vendor folder plus its own packages in the client's chaincode folder:\n```\nevmcc/\n  - vendor/  # repo's vendor content + event, eventmanager and statemanager dirs in github.com/hyperledger/fabric-chaincode-evm\n  - evmcc.go\n```\nSo the cc is installed with its dependencies (and this is how it should be). But his results in a 30+MB vendor folder, and I think/hope most of it comes from the vendored fabric deps, which are present in the peer image, so I'd like to remove those.","username":"klenik","ts":"2019-03-20T20:08:46.999Z"}
{"msg":"@MHBauer I'd like to install&instantiate evmcc through the Fabric SDK. My current solution is to copy the repo's vendor folder plus its own packages in the client's chaincode folder:\n```\nevmcc/\n  - vendor/  # repo's vendor content + event, eventmanager and statemanager dirs in github.com/hyperledger/fabric-chaincode-evm\n  - evmcc.go\n```\nSo the cc is installed with its dependencies (and this is how it should be). But this results in a 30+MB vendor folder, and I think/hope most of it comes from the vendored fabric deps, which are present in the peer image, so I'd like to remove those.","username":"klenik","ts":"2019-03-20T20:08:46.999Z"}
{"msg":"sounds like you're rearranging the project.","username":"MHBauer","ts":"2019-03-20T20:10:01.846Z"}
{"msg":"not sure how to help you there.","username":"MHBauer","ts":"2019-03-20T20:10:09.401Z"}
{"msg":"unless you know a quick way to remove the **fabric-only** dependencies, this'll be a manual labour from my part :/","username":"klenik","ts":"2019-03-20T20:12:09.249Z"}
{"msg":"I blame go.","username":"MHBauer","ts":"2019-03-20T20:13:18.076Z"}
{"msg":"a lot of it looks like golang.org/x/text and golang.org/x/sys","username":"MHBauer","ts":"2019-03-20T20:13:44.512Z"}
{"msg":"the other half is a mix of stuff under github, only about 5.8m is hyperledger.","username":"MHBauer","ts":"2019-03-20T20:14:38.850Z"}
{"msg":"not the largest vendor folder I've seen, by far, so I'm trying to help, but I still don't understand the real problem you're trying to solve.","username":"MHBauer","ts":"2019-03-20T20:15:39.839Z"}
{"msg":"From a Caliper example point-of-view: I'd like to include evmcc as a sample chaincode (plus some solidity contracts), but committing its 30+MB dependencies is a bit extreme. Users cloning the Caliper repo would not like me :) \n(30MB for EVM support is awesome, but putting it in the Caliper repo is brrrr). It works for now on my dev fork, I'm far from merging so I don't need to come up with a more lightweight solution right now. But any thoughts on this topic (~What are the still required dependencies of evmcc, given that the fabric deps are available) is appreciated.","username":"klenik","ts":"2019-03-20T20:26:30.884Z"}
{"msg":"what are the fabric deps exactly? we can diff the two lists","username":"MHBauer","ts":"2019-03-20T20:28:23.967Z"}
{"msg":"also diff against the deps of fab3","username":"MHBauer","ts":"2019-03-20T20:28:33.080Z"}
{"msg":"want to exclude the fab3 deps, ","username":"MHBauer","ts":"2019-03-20T20:28:46.803Z"}
{"msg":"along with the fabric deps.","username":"MHBauer","ts":"2019-03-20T20:28:52.498Z"}
{"msg":"it's not going to be small, it's going to be emvmcc -> burrow -> a bunch of stuff.","username":"MHBauer","ts":"2019-03-20T20:34:04.978Z"}
{"msg":"Fabric's vendor folder is almost 30MB, and those are available in the peer image. So basically I should do `{fabric-chaincode-evm vendor}\\({fabric-chaincode-evm vendor} intersect {fabric vendor})`. Hopefully that would work","username":"klenik","ts":"2019-03-20T20:38:26.337Z"}
{"msg":"Has joined the channel.","username":"gWOLF3","ts":"2019-03-21T18:14:14.536Z","type":"uj"}
{"msg":"hey guys, n00b question, whats the difference between this channel and #burrow? I though burrow was hyperledger fabric's EVM implementation. Or is it more abstract from fabric?","username":"gWOLF3","ts":"2019-03-21T18:16:18.678Z"}
{"msg":"Has joined the channel.","username":"Khaled.MH","ts":"2019-03-24T22:27:07.949Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yanli133","ts":"2019-03-25T06:53:44.565Z","type":"uj"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30396/ is tiny change ","username":"MHBauer","ts":"2019-03-26T04:47:39.693Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/29565/ is big but good.","username":"MHBauer","ts":"2019-03-26T04:47:51.355Z"}
{"msg":"I see a new tendermint/crypto but no license","username":"cbf","ts":"2019-03-26T10:25:35.109Z"}
{"msg":"the repo does have the BSD with the go authors copyright","username":"cbf","ts":"2019-03-26T10:27:47.171Z"}
{"msg":"the repo does have the BSD with the go authors copyright LICENSE file","username":"cbf","ts":"2019-03-26T10:27:47.171Z"}
{"msg":"I don't think the tendermint license file got updated as part of the burrow update. ","username":"swetha","ts":"2019-03-26T17:18:19.678Z"}
{"msg":"thanks for cleaning up after my jiras guys","username":"MHBauer","ts":"2019-03-26T18:23:37.122Z"}
{"msg":"is there a way we can work towards automating that?","username":"MHBauer","ts":"2019-03-26T18:24:01.414Z"}
{"msg":"is there a way to encode a version-ish into the chaincode itself? I would find it useful to know what version/pr I'm running in my environment.","username":"MHBauer","ts":"2019-03-26T18:25:47.689Z"}
{"msg":"there is a version that is connected to the chaincode that is running. but that is user provided at the time of installation and wouldn't necessarily correlate to the build","username":"swetha","ts":"2019-03-26T21:05:20.279Z"}
{"msg":"yea, I want a software revision, not a version","username":"MHBauer","ts":"2019-03-26T21:28:59.021Z"}
{"msg":"@swetha do we know how can `BLOCKHASH` opcode be invoked?","username":"guoger","ts":"2019-03-27T16:17:59.428Z"}
{"msg":"I was just looking into that","username":"swetha","ts":"2019-03-27T16:18:24.514Z"}
{"msg":"@MHBauer i'll get to your in-review CR tomorrow...","username":"guoger","ts":"2019-03-27T16:18:31.187Z"}
{"msg":"i think it is similar to the sender variable","username":"swetha","ts":"2019-03-27T16:18:50.429Z"}
{"msg":"https://solidity.readthedocs.io/en/v0.4.24/units-and-global-variables.html#special-variables-and-functions","username":"swetha","ts":"2019-03-27T16:19:11.149Z"}
{"msg":"https://medium.com/coinmonks/is-block-blockhash-block-number-1-okay-14a28e40cc4b","username":"guoger","ts":"2019-03-27T16:22:13.150Z"}
{"msg":"i fear this func is used sometimes to generate random number","username":"guoger","ts":"2019-03-27T16:22:33.104Z"}
{"msg":"we could of course return the actual block hash, with a limitation that *current block hash* is not available","username":"guoger","ts":"2019-03-27T16:24:22.339Z"}
{"msg":"I don't think we have access to that from the stub","username":"swetha","ts":"2019-03-27T16:30:17.108Z"}
{"msg":"i guess we could do an invoke chaincode ","username":"swetha","ts":"2019-03-27T16:30:28.601Z"}
{"msg":"and get the ledger info?","username":"swetha","ts":"2019-03-27T16:30:31.840Z"}
{"msg":"Though at the same time I think we are opening ourselves up for the possibility that transactions won't get endorsed because if the peers get new blocks and endorsement is done at different times, the block hash can be different","username":"swetha","ts":"2019-03-27T16:32:00.069Z"}
{"msg":"Can we probably examine what this func is mostly used for? We could also say this should always take static argument, instead using a relative number, such as last block - 1. I also think we should merge yours now and revisit","username":"guoger","ts":"2019-03-27T16:38:56.007Z"}
{"msg":"Okay i will make a change to improve the comments and add a note in the README as a limitation for right now. And we can look more into what we should be returning here","username":"swetha","ts":"2019-03-27T16:46:09.495Z"}
{"msg":"what's all the attention on blockhash about?","username":"MHBauer","ts":"2019-03-27T17:02:00.598Z"}
{"msg":"about the stub we added in for block hash","username":"swetha","ts":"2019-03-27T17:36:38.095Z"}
{"msg":"oh, the panic is tied to an opcode?","username":"MHBauer","ts":"2019-03-27T17:47:57.246Z"}
{"msg":"yup","username":"swetha","ts":"2019-03-27T17:54:09.260Z"}
{"msg":"that's super bizarre now","username":"MHBauer","ts":"2019-03-27T17:57:38.960Z"}
{"msg":"now I'm concerned again, okay","username":"MHBauer","ts":"2019-03-27T17:57:44.471Z"}
{"msg":"I think we need a FAQ section on our intern proposal.","username":"MHBauer","ts":"2019-03-27T17:57:55.128Z"}
{"msg":"or a link to our wiki page. something less formal.","username":"MHBauer","ts":"2019-03-27T17:58:13.586Z"}
{"msg":"@swetha added some test cases to show handling of empty addresses","username":"MHBauer","ts":"2019-03-27T18:25:19.010Z"}
{"msg":"cool, will take a look in a bit","username":"swetha","ts":"2019-03-27T18:26:13.001Z"}
{"msg":"and now the error index as well","username":"MHBauer","ts":"2019-03-27T18:29:27.945Z"}
{"msg":"So in regards to the blockhash. I did a little investigating. I am not clear on how we error if asked for a block that hasn't been created yet. But the idea is that the blockhash is queried on a certain block number. We could implement that and add a note stating to be careful of querying for a block number that hasn't been created yet or the latest block as that will either error or can cause discrepencies between the generated read and write sets. If that seems like a reasonable approach I can add that change in the burrow update now. Or I can add it in a subsequent jira/patch which gives us more time to figure out our options","username":"swetha","ts":"2019-03-27T18:44:55.273Z"}
{"msg":"@MHBauer @guoger ^^","username":"swetha","ts":"2019-03-27T18:45:08.718Z"}
{"msg":"I'd want a test case to run both before and after the change.","username":"MHBauer","ts":"2019-03-27T18:46:11.033Z"}
{"msg":"As it is, I'm fine with it.","username":"MHBauer","ts":"2019-03-27T18:46:15.004Z"}
{"msg":"we'll hear about it if we break someone.","username":"MHBauer","ts":"2019-03-27T18:46:24.477Z"}
{"msg":"Yes, I will definitely be adding tests about the blockhash. more concerned about what is the actual behavior we want from the blockhash","username":"swetha","ts":"2019-03-27T18:47:31.457Z"}
{"msg":"and whether we want it in the current patch or in a subsequent one, because it will  make this patch larger","username":"swetha","ts":"2019-03-27T18:48:00.652Z"}
{"msg":"it is not a small addition","username":"swetha","ts":"2019-03-27T18:48:06.316Z"}
{"msg":"sounds like it gets a number and returns the hash of that number","username":"MHBauer","ts":"2019-03-27T18:48:16.068Z"}
{"msg":"very straightforward.","username":"MHBauer","ts":"2019-03-27T18:48:23.054Z"}
{"msg":"now","username":"MHBauer","ts":"2019-03-27T18:48:33.033Z"}
{"msg":"burrow doesn't give us a way to error","username":"swetha","ts":"2019-03-27T18:48:38.133Z"}
{"msg":"if you ask for a block in the future","username":"MHBauer","ts":"2019-03-27T18:48:41.200Z"}
{"msg":"I would have to assume that the evm enforces that, otherwise it seems like a grievous oversight","username":"MHBauer","ts":"2019-03-27T18:49:08.159Z"}
{"msg":"or we return some tombstone, ","username":"MHBauer","ts":"2019-03-27T18:49:35.056Z"}
{"msg":"so, again, I need more understanding ofhow that function is used.","username":"MHBauer","ts":"2019-03-27T18:49:45.701Z"}
{"msg":"the more I learn, the less it seems I know.","username":"MHBauer","ts":"2019-03-27T18:49:56.162Z"}
{"msg":"I am going to say lets review the current burrow update as is with the panic. I've added a note in the readme saying that blockhash is not supported. The blockhash change I will make in another patch/jira. There are still a few open questions in my mind like the error cases, and also whether we have to be concerned with permissioning in terms of chaincode invoking other chaincodes etc","username":"swetha","ts":"2019-03-27T19:00:03.304Z"}
{"msg":":+1: ","username":"MHBauer","ts":"2019-03-27T19:00:19.074Z"}
{"msg":"topic filters should be closer now given feedback on addresses","username":"MHBauer","ts":"2019-03-27T19:19:34.925Z"}
{"msg":"we need to talk about how the evmcc stuff will conflict if there's a couple in the same channel.","username":"MHBauer","ts":"2019-03-28T00:27:29.579Z"}
{"msg":"@swetha merged your CR with a [minor comment](https://gerrit.hyperledger.org/r/c/29565/7/README.md#77)","username":"guoger","ts":"2019-03-28T10:00:09.277Z"}
{"msg":"@MHBauer when i run `ginkgo` in types pkg for https://gerrit.hyperledger.org/r/c/29095/, it says no tests found, and i need to run `ginkgo bootstrap` there.","username":"guoger","ts":"2019-03-28T10:58:51.834Z"}
{"msg":"what's that do?","username":"MHBauer","ts":"2019-03-28T11:19:33.615Z"}
{"msg":"I've never ginkgo'd before.","username":"MHBauer","ts":"2019-03-28T11:21:40.169Z"}
{"msg":"It's weird, if I were to make a matric, (and I should).","username":"MHBauer","ts":"2019-03-28T11:22:54.527Z"}
{"msg":"you wake up at a very weird time :joy: ","username":"guoger","ts":"2019-03-28T11:30:05.398Z"}
{"msg":"how do you run UT for types pkg?","username":"guoger","ts":"2019-03-28T11:31:06.141Z"}
{"msg":"he needs to add a suite file in types and change this line to so that the types package is looked at","username":"swetha","ts":"2019-03-28T16:11:21.606Z"}
{"msg":"he needs to add a suite file in types and change this line: https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Makefile#L29 to so that the types package is looked at","username":"swetha","ts":"2019-03-28T16:11:21.606Z"}
{"msg":"@MHBauer ginkgo bootstrap just creates the suite file for the test. It takes care of all file creation and syntax","username":"swetha","ts":"2019-03-28T16:13:34.670Z"}
{"msg":"@MHBauer ginkgo bootstrap just creates the suite file for the test. It takes care of all file creation and syntax. Also the piece that connects ginkgo to go test","username":"swetha","ts":"2019-03-28T16:13:34.670Z"}
{"msg":"what","username":"MHBauer","ts":"2019-03-28T17:27:15.297Z"}
{"msg":"I'm fixing that, that's ridiculous. We have computers.","username":"MHBauer","ts":"2019-03-28T17:27:42.544Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30505/ okay","username":"MHBauer","ts":"2019-03-28T18:13:20.410Z"}
{"msg":"that's the fix, merge that real quick and we can move on","username":"MHBauer","ts":"2019-03-28T18:13:30.630Z"}
{"msg":"@swetha ","username":"MHBauer","ts":"2019-03-28T18:15:49.212Z"}
{"msg":"@MHBauer reviewing, don't agree with all of them","username":"swetha","ts":"2019-03-28T18:20:25.890Z"}
{"msg":"particularly adding -cover","username":"swetha","ts":"2019-03-28T18:20:37.710Z"}
{"msg":"why not?","username":"MHBauer","ts":"2019-03-28T18:21:42.448Z"}
{"msg":"because i don't think thats a good mesaure of a test suite","username":"swetha","ts":"2019-03-28T18:22:41.596Z"}
{"msg":"if someone is interested they can run themselves","username":"swetha","ts":"2019-03-28T18:22:51.142Z"}
{"msg":"if someone is interested they can run it themselves","username":"swetha","ts":"2019-03-28T18:22:51.142Z"}
{"msg":"what do you mean? ","username":"MHBauer","ts":"2019-03-28T18:23:42.690Z"}
{"msg":"I find it useful at a glance to know if my changes are changing thing.","username":"MHBauer","ts":"2019-03-28T18:24:03.190Z"}
{"msg":"I'm not tied to `-p` that was only done in the integraion tests I think now.","username":"MHBauer","ts":"2019-03-28T18:30:33.338Z"}
{"msg":"the `-p` should work, but yes the integration tests should work with parallel i think. but since they interact with the same environment in fab3 not sure what the consequences would be to enable parallel on integration tests. something to investigate","username":"swetha","ts":"2019-03-28T18:31:59.055Z"}
{"msg":"cover, i think is find if you want to use it locally. but the second we make it part of the unit test target we are tagging are suites with that number and i don't think that is a good thing","username":"swetha","ts":"2019-03-28T18:32:33.143Z"}
{"msg":"cover, i think is fine if you want to use it locally. but the second we make it part of the unit test target we are tagging are suites with that number and i don't think that is a good thing","username":"swetha","ts":"2019-03-28T18:32:33.143Z"}
{"msg":"cover, i think is fine if you want to use it locally. but when we make it part of the unit test target we are tagging are suites with that number and i don't think that is a good thing","username":"swetha","ts":"2019-03-28T18:32:33.143Z"}
{"msg":"cover, i think is fine if you want to use it locally. but when we make it part of the unit test target we are tagging our suites with that number and i don't think that is a good thing","username":"swetha","ts":"2019-03-28T18:32:33.143Z"}
{"msg":"tagging?","username":"MHBauer","ts":"2019-03-28T18:33:19.270Z"}
{"msg":"implicitly tagging","username":"swetha","ts":"2019-03-28T18:33:28.472Z"}
{"msg":"I don't understand","username":"MHBauer","ts":"2019-03-28T18:33:35.853Z"}
{"msg":"i don't want something like fab3 suite -> 50% coverage","username":"swetha","ts":"2019-03-28T18:33:58.894Z"}
{"msg":"we aren't at 50%, but just as an example","username":"swetha","ts":"2019-03-28T18:34:08.557Z"}
{"msg":"It also gives an impression that is a number we are care about and work to improve which we dont","username":"swetha","ts":"2019-03-28T18:34:30.475Z"}
{"msg":"we have no enforcement mechanism or policy. I can write that down","username":"MHBauer","ts":"2019-03-28T18:35:10.822Z"}
{"msg":"I prefer that it isn't run with our tests by default","username":"swetha","ts":"2019-03-28T18:35:31.810Z"}
{"msg":"and I prefer to get lots of information out of things that I run.","username":"MHBauer","ts":"2019-03-28T18:36:04.747Z"}
{"msg":"i don't find value in the cover percentage and thinks it gives the wrong impression. basically i don't think it is accurate information","username":"swetha","ts":"2019-03-28T18:37:04.904Z"}
{"msg":"to whether or not code is executing?","username":"MHBauer","ts":"2019-03-28T18:37:35.459Z"}
{"msg":"I'm not asking for us to target a number, and have no intention to","username":"MHBauer","ts":"2019-03-28T18:37:50.142Z"}
{"msg":"when I write a test, I need to know if it's executing the code, the number indicates that.","username":"MHBauer","ts":"2019-03-28T18:38:21.649Z"}
{"msg":"\n(really, the profile)","username":"MHBauer","ts":"2019-03-28T18:38:33.119Z"}
{"msg":"I feel like we are going into the direction of targeting a number by starting to \"publish\" a number","username":"swetha","ts":"2019-03-28T18:39:32.269Z"}
{"msg":"and it feels like \"publishing\" because this is what is run in our ci","username":"swetha","ts":"2019-03-28T18:39:47.980Z"}
{"msg":"I can see that argument, but what would make it disregardable","username":"MHBauer","ts":"2019-03-28T18:41:27.797Z"}
{"msg":"something in Contributing?","username":"MHBauer","ts":"2019-03-28T18:41:43.527Z"}
{"msg":"not sure that would stop people to going to targeting a number","username":"swetha","ts":"2019-03-28T18:42:32.508Z"}
{"msg":"I don't know what that means. What does that look like?","username":"MHBauer","ts":"2019-03-28T18:42:49.562Z"}
{"msg":"the first issue I see that says \"more tests  for increased code coverage\" I'm closing.","username":"MHBauer","ts":"2019-03-28T18:43:21.979Z"}
{"msg":"that's a misuse of the tool","username":"MHBauer","ts":"2019-03-28T18:43:32.520Z"}
{"msg":"if the makefile is only for CI","username":"MHBauer","ts":"2019-03-28T18:44:07.247Z"}
{"msg":"then I need a morgan.mk to include my personal runners.","username":"MHBauer","ts":"2019-03-28T18:44:28.727Z"}
{"msg":"cause I need something in the repo to do development.","username":"MHBauer","ts":"2019-03-28T18:44:41.279Z"}
{"msg":"I can start doing conditionals on the environment to detect the build system and remove the flag, but it seems excessive.","username":"MHBauer","ts":"2019-03-28T18:46:36.488Z"}
{"msg":"though perhaps we need something like that already.","username":"MHBauer","ts":"2019-03-28T18:46:47.426Z"}
{"msg":"I think that is excessive. Our makfile isn't only for ci, but ci is one of the main uses for it. I will say i don't use the makefile while I develop. I run it once before i push so i run everything that is on ci","username":"swetha","ts":"2019-03-28T18:48:03.409Z"}
{"msg":"well what do you run? let's add some of that.","username":"MHBauer","ts":"2019-03-28T18:49:23.436Z"}
{"msg":"If others are okay with the cover profile being produced at each run, im okay with it. But if it is up to me I prefer it not there","username":"swetha","ts":"2019-03-28T18:49:34.272Z"}
{"msg":"I was going to suggest adding a watch, but I figured that't be kicked back.","username":"MHBauer","ts":"2019-03-28T18:49:39.579Z"}
{"msg":"i do a watch on the repo im working on and i do tdd so i know the code i add is getting tested because i start with failing tests","username":"swetha","ts":"2019-03-28T18:50:16.537Z"}
{"msg":"thats more of a process than an actual command","username":"swetha","ts":"2019-03-28T18:50:50.642Z"}
{"msg":"I think we all know I'm not strict tdd.","username":"MHBauer","ts":"2019-03-28T18:51:19.489Z"}
{"msg":"i didn't say its a requirement, just how i develop and why i don't really use the makefile","username":"swetha","ts":"2019-03-28T18:52:00.166Z"}
{"msg":"and there is no possible mechanism to enforce that.","username":"MHBauer","ts":"2019-03-28T18:52:02.328Z"}
{"msg":"that doesn't really explain that.","username":"MHBauer","ts":"2019-03-28T18:52:17.434Z"}
{"msg":"the make file also doesn't focus on packages","username":"swetha","ts":"2019-03-28T18:53:14.838Z"}
{"msg":"tdd doesn't explain not using the makefile.","username":"MHBauer","ts":"2019-03-28T18:53:17.485Z"}
{"msg":"which i don't think it shouldn't","username":"swetha","ts":"2019-03-28T18:53:19.716Z"}
{"msg":"to be more explicit","username":"MHBauer","ts":"2019-03-28T18:53:23.715Z"}
{"msg":"doesn't focus on packages?","username":"MHBauer","ts":"2019-03-28T18:53:37.043Z"}
{"msg":"just more difficult to run/test things with the makefile","username":"swetha","ts":"2019-03-28T18:53:38.961Z"}
{"msg":"i use focuses, ginkgo watch, package specific tests etc","username":"swetha","ts":"2019-03-28T18:53:58.187Z"}
{"msg":"well is there something we can add to make it more easy/useful","username":"MHBauer","ts":"2019-03-28T18:54:12.297Z"}
{"msg":"doing a make unit-test isn't useful to me when im developing. its something i do at the very end","username":"swetha","ts":"2019-03-28T18:54:15.033Z"}
{"msg":"and if not, can we document what is easier","username":"MHBauer","ts":"2019-03-28T18:54:25.454Z"}
{"msg":"no, im okay with how i do things. i don't think its the job of the makefile to adapt to my development style","username":"swetha","ts":"2019-03-28T18:54:51.400Z"}
{"msg":"also not sure what could be made into a target there which would be easier than just typing out the command","username":"swetha","ts":"2019-03-28T18:55:11.734Z"}
{"msg":"there aren't exactly a lot of people here.","username":"MHBauer","ts":"2019-03-28T18:55:13.095Z"}
{"msg":"people have been using the makefile to build and run things. just not for development","username":"swetha","ts":"2019-03-28T18:55:39.319Z"}
{"msg":"I understand that, but how do people know what to type if we don't write it down?","username":"MHBauer","ts":"2019-03-28T18:55:44.268Z"}
{"msg":"that puts the burden of teaching people how to use ginkgo on us","username":"swetha","ts":"2019-03-28T18:56:16.185Z"}
{"msg":"in terms of teaching people tdd, everyone has their own style with that","username":"swetha","ts":"2019-03-28T18:56:47.917Z"}
{"msg":"i am not using special features of ginkgo","username":"swetha","ts":"2019-03-28T18:57:05.554Z"}
{"msg":"well, we use ginkgo","username":"MHBauer","ts":"2019-03-28T18:57:05.812Z"}
{"msg":"so, yes, we have to do that.","username":"MHBauer","ts":"2019-03-28T18:57:10.022Z"}
{"msg":"no, we show them how to run the integration tests and the unit tests","username":"swetha","ts":"2019-03-28T18:57:21.735Z"}
{"msg":"how","username":"MHBauer","ts":"2019-03-28T18:57:26.951Z"}
{"msg":"which you can still run using go test","username":"swetha","ts":"2019-03-28T18:57:27.546Z"}
{"msg":"the commands are in our repo for running integration and unit tests","username":"swetha","ts":"2019-03-28T18:58:05.235Z"}
{"msg":"that's a distraction from a more useful flow.","username":"MHBauer","ts":"2019-03-28T18:58:07.319Z"}
{"msg":"in the makefile, or where else?","username":"MHBauer","ts":"2019-03-28T18:58:18.350Z"}
{"msg":"in the makefile","username":"swetha","ts":"2019-03-28T18:58:24.114Z"}
{"msg":"I think we need more of a devguide.","username":"MHBauer","ts":"2019-03-28T18:58:40.283Z"}
{"msg":"i would agree if we had more active developers","username":"swetha","ts":"2019-03-28T18:59:06.264Z"}
{"msg":"well, I'm thinking I'll put some words into contributing.","username":"MHBauer","ts":"2019-03-28T19:00:17.526Z"}
{"msg":"pushed a big update. ","username":"MHBauer","ts":"2019-03-28T19:34:33.803Z"}
{"msg":"I really couldn't come up with a good reason not to make a new make target.","username":"MHBauer","ts":"2019-03-28T19:34:49.140Z"}
{"msg":"we don't have a mechanism, or a way to track it over time right now anyway, so I'm fine with dropping it in CI.","username":"MHBauer","ts":"2019-03-28T19:41:39.735Z"}
{"msg":"I think it's an interesting SIGNAL, but should not be a TARGET.","username":"MHBauer","ts":"2019-03-28T19:41:50.574Z"}
{"msg":"Could you please review this https://gerrit.hyperledger.org/r/#/c/30448/","username":"rameshthoomu","ts":"2019-03-29T13:54:34.617Z"}
{"msg":"@rameshthoomu taking a look now","username":"swetha","ts":"2019-03-29T16:56:27.619Z"}
{"msg":"Looking to add diagrams to the readme, which of the following seems better?","username":"swetha","ts":"2019-03-29T17:52:09.022Z"}
{"msg":"","username":"swetha","ts":"2019-03-29T17:52:22.910Z","attachments":[{"type":"file","title":"EndToEnd.jpg","title_link":"/file-upload/8ceDcSGTSs5gL4qet/EndToEnd.jpg","image_url":"/file-upload/8ceDcSGTSs5gL4qet/EndToEnd.jpg","image_type":"image/jpeg","image_size":21022,"url":"/file-upload/8ceDcSGTSs5gL4qet/EndToEnd.jpg","remote":false,"fileId":"8ceDcSGTSs5gL4qet","fileName":"EndToEnd.jpg"}]}
{"msg":"","username":"swetha","ts":"2019-03-29T17:54:59.839Z","attachments":[{"type":"file","title":"EVMCC-Arch.jpg","title_link":"/file-upload/oPrqH4WiYsrYmvnDF/EVMCC-Arch.jpg","image_url":"/file-upload/oPrqH4WiYsrYmvnDF/EVMCC-Arch.jpg","image_type":"image/jpeg","image_size":48862,"url":"/file-upload/oPrqH4WiYsrYmvnDF/EVMCC-Arch.jpg","remote":false,"fileId":"oPrqH4WiYsrYmvnDF","fileName":"EVMCC-Arch.jpg"}]}
{"msg":"@lehors @MHBauer @guoger  ^^","username":"swetha","ts":"2019-03-29T17:58:29.169Z"}
{"msg":"not sure the arch thing is useful for readme, maybe in a dev doc location","username":"MHBauer","ts":"2019-03-29T18:10:34.072Z"}
{"msg":"e2e image is sweet, but might want to complicate it up, or provide two versions, one that has more complications so people understand how to use it.","username":"MHBauer","ts":"2019-03-29T18:11:03.083Z"}
{"msg":"what would be the complications?","username":"swetha","ts":"2019-03-29T18:17:32.740Z"}
{"msg":"The arch diagram shows a little better how evmcc and fab3 fit in the fabric world. we can simplify it a bit","username":"swetha","ts":"2019-03-29T18:18:06.493Z"}
{"msg":"don't need to have all the different components labeled","username":"swetha","ts":"2019-03-29T18:18:18.813Z"}
{"msg":"but im in between how detailed the diagram should be versus not. the intention is to show how fab3 and evmcc fit in fabric as well as showing that the dapp and smart contract are the pieces that can stay the same from ethereum. with that in mind, im leaning towards the end to end","username":"swetha","ts":"2019-03-29T18:19:23.847Z"}
{"msg":"e2e for sure, ","username":"MHBauer","ts":"2019-03-29T18:21:50.191Z"}
{"msg":"I mean, multiple fa3s, one for each user type thing.","username":"MHBauer","ts":"2019-03-29T18:22:01.141Z"}
{"msg":"show that the fa3 is not the point, the evmcc is still the point.","username":"MHBauer","ts":"2019-03-29T18:22:11.515Z"}
{"msg":"@lehors are you still around? I'm not sure how to say it differently for https://gerrit.hyperledger.org/r/#/c/30505/2/CONTRIBUTING.md@28  I wrote a comment on your comment, but I want to be clear. We had a big discussion yesterday.  starts at https://chat.hyperledger.org/channel/fabric-evm?msg=EWxzBmbSYsoTsGtaB","username":"MHBauer","ts":"2019-03-29T19:32:13.274Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=EWxzBmbSYsoTsGtaB","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=EWxzBmbSYsoTsGtaB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@swetha I think for the README a highlevel diagram is all that's needed - I don't think the intended audience would necessarily be familiar with fabric's architecture and really benefit from a lot of details involving some of the internals of fabric such as the state manager vs ledger","username":"lehors","ts":"2019-03-29T21:23:23.634Z"}
{"msg":"now, I think there may be a way to improve the first one to be closer to the real thing, which might somewhere in between those two diagrams you have","username":"lehors","ts":"2019-03-29T21:24:08.537Z"}
{"msg":"now, I think there may be a way to improve the first one to be closer to the real thing, which might be somewhere in between those two diagrams you have","username":"lehors","ts":"2019-03-29T21:24:08.537Z"}
{"msg":"@MHBauer thanks for the pointer to yesterday's discussion but this doesn't tell me WHY @swetha doesn't want to look at test coverage only that she doesn't","username":"lehors","ts":"2019-03-29T21:34:01.832Z"}
{"msg":"what am I missing?","username":"lehors","ts":"2019-03-29T21:34:26.955Z"}
{"msg":"Hahah, i don't mind looking at it. I just think it should be an local development tool not on ci","username":"swetha","ts":"2019-03-29T21:34:36.860Z"}
{"msg":"well, you could say the same thing about formatting and linting then","username":"lehors","ts":"2019-03-29T21:35:47.598Z"}
{"msg":"it is useful to have all these things done automatically as part of the CI because it informs us on the status of the code and helps us improve the overall quality","username":"lehors","ts":"2019-03-29T21:36:29.571Z"}
{"msg":"Formatting and linting though we are following and enforcing","username":"swetha","ts":"2019-03-29T21:36:31.134Z"}
{"msg":"I can't say the same about test coverage","username":"swetha","ts":"2019-03-29T21:36:38.374Z"}
{"msg":"exactly","username":"lehors","ts":"2019-03-29T21:36:43.964Z"}
{"msg":"why treating coverage differently??","username":"lehors","ts":"2019-03-29T21:36:52.460Z"}
{"msg":"And part of the test coverage is on integration tests which we can't get an accurate cover profile of","username":"swetha","ts":"2019-03-29T21:37:05.451Z"}
{"msg":"So I feel like the numbers are inaccurate and give the wrong impression","username":"swetha","ts":"2019-03-29T21:37:17.716Z"}
{"msg":"ok, that's a better answer :)","username":"lehors","ts":"2019-03-29T21:37:28.572Z"}
{"msg":"I'm fine with either of you changing the wording.","username":"MHBauer","ts":"2019-03-29T21:37:47.597Z"}
{"msg":"typically coverage would be done on unit tests","username":"lehors","ts":"2019-03-29T21:37:54.923Z"}
{"msg":"What mechanism does core fabric have? where are the reports?","username":"MHBauer","ts":"2019-03-29T21:39:11.118Z"}
{"msg":"I've never seen it, so I want to know and follow if there is.","username":"MHBauer","ts":"2019-03-29T21:39:21.894Z"}
{"msg":"it's in fabric/scripts","username":"lehors","ts":"2019-03-29T21:41:00.272Z"}
{"msg":"it's in the Makefile","username":"lehors","ts":"2019-03-29T21:41:05.165Z"}
{"msg":"as we can run the unit-tests collecting coverage","username":"lehors","ts":"2019-03-29T21:41:43.403Z"}
{"msg":"we can run the unit-tests collecting coverage","username":"lehors","ts":"2019-03-29T21:41:43.403Z"}
{"msg":"now, I have to admit not to know the latest on that and I'm not sure we do that systematically anymore","username":"lehors","ts":"2019-03-29T21:42:10.221Z"}
{"msg":"we've had to turn off a whole bunch of things because the CI was taking too long to complete","username":"lehors","ts":"2019-03-29T21:42:45.449Z"}
{"msg":"so, we now have different levels of testing and the one that gets triggered on every push isn't as thorough as it used to be","username":"lehors","ts":"2019-03-29T21:43:19.537Z"}
{"msg":"so I don't think we do coverage at every run","username":"lehors","ts":"2019-03-29T21:43:33.736Z"}
{"msg":"but we do have all the mechanics in place and keep an eye on coverage so that we don't go off rail","username":"lehors","ts":"2019-03-29T21:44:30.025Z"}
{"msg":"@cbf should be able to tell where we stand nowadays","username":"lehors","ts":"2019-03-29T21:44:59.623Z"}
{"msg":"@cbf how/when do we measure test coverage for fabric nowadays? and what's the target set at?","username":"lehors","ts":"2019-03-29T21:49:08.029Z"}
{"msg":"and do we have benchmarks.... ","username":"MHBauer","ts":"2019-03-29T23:01:23.157Z"}
{"msg":"i think we have coverage on UT at least in Fabric","username":"guoger","ts":"2019-03-30T02:07:15.327Z"}
{"msg":"[Technical question] Can I utilize the `value` and `gas` variables passed to Burrow's EVM in evmcc? `value` would be of interest for me, since I'm trying to test some contracts (recreate vulnerabilities) from the public world that transfer ether. But since this EVM is picked out of its context and put under Fabric, I'm not sure how the initial `value` values/balances are bootstrapped. ","username":"klenik","ts":"2019-04-01T14:07:55.106Z"}
{"msg":"test coverage metrics are stupid, but if you want a number, I can give you one","username":"cbf","ts":"2019-04-01T15:51:37.892Z"}
{"msg":"I set the bar at 85% but again, this is almost meaningless","username":"cbf","ts":"2019-04-01T15:52:14.946Z"}
{"msg":"it should be high, but not too high","username":"cbf","ts":"2019-04-01T15:52:35.064Z"}
{"msg":"@klenik Neither `value` or `gas` is configurable from the user. There currently is no native underlying token in Fabric so transfering tokens from one account to another is not doable through just the evmcc. If you need tokens, we expect you create your own token contract, and use that for your purposes as ERC20 contracts will work with the evmcc. ","username":"swetha","ts":"2019-04-01T17:00:16.194Z"}
{"msg":"Only contract accounts are stored on the ledger, and user accounts are generated on the fly","username":"swetha","ts":"2019-04-01T17:00:35.958Z"}
{"msg":"We do this because we don't keep any balance associated with a user","username":"swetha","ts":"2019-04-01T17:00:51.231Z"}
{"msg":"@swetha Thanks, confirmed my suspicions :thumbsup: ","username":"klenik","ts":"2019-04-01T17:51:50.793Z"}
{"msg":"@klenik As a related question, would you want gas to be configurable? If so what use case do you see that helping? We made gas hardcoded for the time being but would be open to making it configurable given enough reasoning as to why that would be useful in the Fabric setting","username":"swetha","ts":"2019-04-01T17:54:05.206Z"}
{"msg":"Well, Fabric allows setting the execution timeout of transactions. Gas has the same purpose for the EVM. So a hardcoded gas value is effectively a limit for a Fabric transaction targeting evmcc, regardless of the Fabric-level setting. But since EVM codes aren't that \"big\", I'd be surprised if this would be a real limitation and not just a theoretical one. ","username":"klenik","ts":"2019-04-01T17:58:39.065Z"}
{"msg":"That was our though process too. But just wanted to get another perspective","username":"swetha","ts":"2019-04-01T18:03:48.147Z"}
{"msg":"[This statemanager interface](https://github.com/hyperledger/fabric-chaincode-evm/blob/413ebda94d103ff563786c572a27444d472e0cb8/statemanager/statemanager.go#L19) has a few more corresponding methods defined on Burrow's ReaderWriter (or something like this) interface, right? As I see these are the high level storage/account operations. So if I wanted to hack together a quick-and-dirty balance support, is this the right place to start?","username":"klenik","ts":"2019-04-01T18:04:04.148Z"}
{"msg":"You probably don't need to do too much in the statemanager interface because the it blindly saves the accounts that it is given. The account is the burrow account type so it should have the ability to store a balance. You may need to add a cache for accounts depending on you plan on accessing accounts that you have just written to in the same transaction: https://github.com/hyperledger/fabric-chaincode-evm/blob/413ebda94d103ff563786c572a27444d472e0cb8/statemanager/statemanager.go#L31","username":"swetha","ts":"2019-04-01T18:08:24.742Z"}
{"msg":"The work has to be done in the [evmc](https://github.com/hyperledger/fabric-chaincode-evm/blob/413ebda94d103ff563786c572a27444d472e0cb8/evmcc/evmcc.go)","username":"swetha","ts":"2019-04-01T18:09:55.066Z"}
{"msg":"You would have do edit it so it creates an account for a user it hasn't seen before and give it a starting balance","username":"swetha","ts":"2019-04-01T18:10:37.430Z"}
{"msg":"And then you would have to do some arg parsing be able to accept `value` as an arg pass that along to the vm.call invocation","username":"swetha","ts":"2019-04-01T18:13:37.018Z"}
{"msg":"I think we should link to the wiki in our README","username":"MHBauer","ts":"2019-04-01T18:15:14.491Z"}
{"msg":"that way we can put stuff in easire than making a PR","username":"MHBauer","ts":"2019-04-01T18:15:27.264Z"}
{"msg":"@swetha Cool, thanks for the detailed guide! Any thoughts about bootstrapping certain accounts with initial balances? Who will mint the first \"coin\"? Haven't looked into the design docs of Fabric's token support, but I guess the identity that deploys the evmcc chaincode should have a say in the initial distribution of a certain amount of \"coin\". Although a Remix-style approach would also be fine for me, e.g., giving a fix initial amount for every newly encountered user","username":"klenik","ts":"2019-04-01T18:22:57.384Z"}
{"msg":"@klenik no coins, no tokens. We haven't looked into fabric tokens in any detail, but it's the obvious thing to gonnect too.","username":"MHBauer","ts":"2019-04-01T18:49:39.524Z"}
{"msg":"@lehors  @swetha  Should i take out the code coverage paragraph? Everybody seems confused about it.","username":"MHBauer","ts":"2019-04-01T18:52:50.185Z"}
{"msg":"@klenik I would say thats really up to what you are trying to test out and what works out the easiest. One thing to note is the tips I gave above only add balances to users in the evmcc world. None of those balances would transfer to the rest of fabric","username":"swetha","ts":"2019-04-01T18:54:49.219Z"}
{"msg":"I want to get https://gerrit.hyperledger.org/r/#/c/30505/ merged or fixed so it can be merged. I didn't think it was that controversial.","username":"MHBauer","ts":"2019-04-01T18:54:56.873Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=tbFaPfPRsyzpf4TrQ) @MHBauer I think you could rewrite it to say exactly what you mean. Just don't be cheap on the number of words. :-)","username":"lehors","ts":"2019-04-01T18:55:40.708Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=tbFaPfPRsyzpf4TrQ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=tbFaPfPRsyzpf4TrQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"seriously, there is just too much compacted in that one or two sentences","username":"lehors","ts":"2019-04-01T18:56:13.929Z"}
{"msg":"Hmn, okay, I'll try. ","username":"MHBauer","ts":"2019-04-01T18:57:09.555Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=AQcjYNKhanSnbryu3) I would also say that there is work in Fabric to introduce tokens. We haven't looked into that and what that could mean for the EVM but something you might be interested in","username":"swetha","ts":"2019-04-01T18:58:21.489Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=AQcjYNKhanSnbryu3","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=AQcjYNKhanSnbryu3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"okay, here we go again. smaller, more direct, sentences.","username":"MHBauer","ts":"2019-04-01T19:04:09.734Z"}
{"msg":"It'd be great if we didn't run the builld for docs-only changes.","username":"MHBauer","ts":"2019-04-01T19:04:25.259Z"}
{"msg":"Made comments on the patch","username":"swetha","ts":"2019-04-01T19:33:42.181Z"}
{"msg":"@MHBauer also realized I merged the address filter for getLogs prematurely. Since right now the types tests are not being run in ci","username":"swetha","ts":"2019-04-01T19:34:47.197Z"}
{"msg":"what, why not? didn't I add the suite?","username":"MHBauer","ts":"2019-04-01T19:37:44.636Z"}
{"msg":"15:06:34 [1553897158] Types Suite - 19/19 specs ‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢ SUCCESS! 4.383135ms PASS ","username":"MHBauer","ts":"2019-04-01T19:38:33.674Z"}
{"msg":"looks like it's running","username":"MHBauer","ts":"2019-04-01T19:38:37.941Z"}
{"msg":"oh whoops my bad. oh its the '-r'","username":"swetha","ts":"2019-04-01T19:40:10.923Z"}
{"msg":"sorry i thought a change was necessary in the makefile","username":"swetha","ts":"2019-04-01T19:40:52.511Z"}
{"msg":"yea, that whole thing makes no sense, which is why I'm trying to fix it","username":"MHBauer","ts":"2019-04-01T19:44:07.817Z"}
{"msg":"(it make a little sense)","username":"MHBauer","ts":"2019-04-01T19:44:14.513Z"}
{"msg":"needs some integration tests, which I'm not looking forward to writing https://gerrit.hyperledger.org/r/#/c/29170/","username":"MHBauer","ts":"2019-04-01T19:53:44.890Z"}
{"msg":"change is already yellow sized, groan","username":"MHBauer","ts":"2019-04-01T19:53:58.505Z"}
{"msg":"maybe it's time for that refactor.","username":"MHBauer","ts":"2019-04-01T19:55:04.889Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=NZxubQBs8ASXuRATR) @MHBauer Amen to that! Mind you, I said that about 3 years ago and a couple of times a plugin was set to allow you to direct the CI not to run by simply adding \"[ci-skip] to the commit message but it caused problems so they had to turn it off. I find that very annoying.","username":"lehors","ts":"2019-04-01T19:57:36.120Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=NZxubQBs8ASXuRATR","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=NZxubQBs8ASXuRATR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I'd have to learn how to jenkins I think.","username":"MHBauer","ts":"2019-04-01T19:58:03.417Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=A59rgnRPPhvqYcXAr) @MHBauer you also need to add docs","username":"swetha","ts":"2019-04-01T20:05:24.761Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=A59rgnRPPhvqYcXAr","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=A59rgnRPPhvqYcXAr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"docs is easy, link to https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getlogs","username":"MHBauer","ts":"2019-04-01T20:25:47.958Z"}
{"msg":":-D","username":"MHBauer","ts":"2019-04-01T20:25:52.704Z"}
{"msg":"Has joined the channel.","username":"ZichengWang","ts":"2019-04-01T20:41:36.268Z","type":"uj"}
{"msg":"@swetha good suggestions. pr is back to yellow sized","username":"MHBauer","ts":"2019-04-02T19:26:31.394Z"}
{"msg":"glad i could be of help :)","username":"swetha","ts":"2019-04-02T19:36:33.336Z"}
{"msg":"I wonder if I can send bluethanks to external people?","username":"MHBauer","ts":"2019-04-02T19:44:20.342Z"}
{"msg":"@lehors @swetha let's iterate! https://gerrit.hyperledger.org/r/30505 ","username":"MHBauer","ts":"2019-04-02T20:30:09.443Z"}
{"msg":"@swetha  https://gerrit.hyperledger.org/r/#/c/29170/ should be pretty complete now. ","username":"MHBauer","ts":"2019-04-02T20:30:41.461Z"}
{"msg":"this process makes me wonder about things, but not too closely...","username":"MHBauer","ts":"2019-04-02T20:31:26.101Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=Jm2rfoECFLpeS7iER) @MHBauer I don't see a new patch, but replied to the comments","username":"swetha","ts":"2019-04-02T21:29:26.505Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=Jm2rfoECFLpeS7iER","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=Jm2rfoECFLpeS7iER","remote":true,"fileId":null,"fileName":null}]}
{"msg":"oh, did I forget?","username":"MHBauer","ts":"2019-04-02T21:52:32.018Z"}
{"msg":"arg","username":"MHBauer","ts":"2019-04-02T21:52:40.181Z"}
{"msg":":-(","username":"MHBauer","ts":"2019-04-02T21:53:10.525Z"}
{"msg":"okay, silly thing looks up to me now","username":"MHBauer","ts":"2019-04-02T21:55:52.323Z"}
{"msg":"i see Morgan in https://gerrit.hyperledger.org/r/c/30566/, and probably we could jus reference it in our contribution guideline","username":"guoger","ts":"2019-04-03T09:07:45.744Z"}
{"msg":"I can turn it into a blog, but I didn't like the \"very good coverage\", ","username":"MHBauer","ts":"2019-04-03T18:16:37.143Z"}
{"msg":"meaningless","username":"MHBauer","ts":"2019-04-03T18:16:39.936Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=w6ioy2ad3RiR43xWj) @lehors commit message isn't a great place for that, but interesting concept. need to learn jenkins, I guess.","username":"MHBauer","ts":"2019-04-03T18:17:18.810Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=w6ioy2ad3RiR43xWj","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=w6ioy2ad3RiR43xWj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"we don't do a full build for doc-only changes","username":"cbf","ts":"2019-04-03T18:57:47.729Z"}
{"msg":"How is that done? jenkins config or makefile git magic?","username":"MHBauer","ts":"2019-04-03T18:59:55.389Z"}
{"msg":"more tests, back to orange sized.","username":"MHBauer","ts":"2019-04-03T20:21:18.214Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=foHQBzGcYpA9cueKg) @MHBauer I am curious how this is done too","username":"swetha","ts":"2019-04-03T20:56:09.502Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=foHQBzGcYpA9cueKg","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=foHQBzGcYpA9cueKg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I believe that you need to tag the commit message as docs or something - ask Ramesh","username":"cbf","ts":"2019-04-03T21:26:44.138Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/29170/#message-aa7bf5e6_2f5fd913","username":"guoger","ts":"2019-04-04T03:28:36.139Z"}
{"msg":"\"It would be helpful for readers to include the example from design doc as code comment.\"  swetha's example? or which?","username":"MHBauer","ts":"2019-04-04T03:29:34.566Z"}
{"msg":"I agree generally, I wasn't sure what would be too much, or hold it up. ","username":"MHBauer","ts":"2019-04-04T03:30:34.451Z"}
{"msg":"I can add mucho docs tomorrow/thursday & friday, as I document everything else.","username":"MHBauer","ts":"2019-04-04T03:30:54.226Z"}
{"msg":"basically the topic matching rules, i.e.\n```\n[] \"anything\"\n[A] \"A in first position (and anything after)\"\n[null, B] \"anything in first position AND B in second position (and anything after)\"\n[A, B] \"A in first position AND B in second position (and anything after)\"\n[[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\"\n```\ni need to go back to that design doc several times to refresh my memory while reading code","username":"guoger","ts":"2019-04-04T03:36:09.777Z"}
{"msg":"to me that's not a fully complete description of things.","username":"MHBauer","ts":"2019-04-04T14:49:36.937Z"}
{"msg":"but sure.","username":"MHBauer","ts":"2019-04-04T14:49:47.003Z"}
{"msg":"@swetha where is the documentation for each function?","username":"MHBauer","ts":"2019-04-04T15:59:42.970Z"}
{"msg":"ah, fa3 instructions","username":"MHBauer","ts":"2019-04-04T16:01:20.796Z"}
{"msg":"those in any order?","username":"MHBauer","ts":"2019-04-04T16:01:29.492Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=xyPkCoEJKqPof9Gxs) @MHBauer no i don't think i put them in a specific order. maybe the order they are in the file?","username":"MHBauer","ts":"2019-04-04T16:01:29.492Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=xyPkCoEJKqPof9Gxs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=xyPkCoEJKqPof9Gxs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"can we move fab3_instructions.md to the fab3 folder.","username":"MHBauer","ts":"2019-04-04T18:01:42.108Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=Gi7oXi87hw9TQRmFW) @MHBauer mmmm, i think as we collect more docs it would be better to have a docs directory but for right now i think top level just makes it more visible when people first look at the repo","username":"MHBauer","ts":"2019-04-04T18:01:42.108Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=Gi7oXi87hw9TQRmFW","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=Gi7oXi87hw9TQRmFW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"and is there a reason eventmanager and statemanager aren't in evmcc?","username":"MHBauer","ts":"2019-04-04T18:02:44.814Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=GwDXb2jMrcS4GJN7F) @MHBauer We had a discussion about that at the beginning of the project. We settled on we don't want to have a nested repo and want most of it at the top level","username":"swetha","ts":"2019-04-04T18:39:38.806Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=GwDXb2jMrcS4GJN7F","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=GwDXb2jMrcS4GJN7F","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=8fNXK4y2hM5R8zSZn) @guoger @MHBauer and I went back and forth on understanding the topic matching rules. we need to add a little more to about adding null on the later indices to the effect of \n`if i explicitly put null in an index it means i don‚Äôt care about the value but i do care that it exists`","username":"swetha","ts":"2019-04-04T18:42:24.330Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=8fNXK4y2hM5R8zSZn","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=8fNXK4y2hM5R8zSZn","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=8fNXK4y2hM5R8zSZn) @guoger @MHBauer and I went back and forth on understanding the topic matching rules. we need to add a little more about adding null on the later indices to the effect of \n`if i explicitly put null in an index it means i don‚Äôt care about the value but i do care that it exists`","username":"swetha","ts":"2019-04-04T18:42:24.330Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=8fNXK4y2hM5R8zSZn","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=8fNXK4y2hM5R8zSZn","remote":true,"fileId":null,"fileName":null}]}
{"msg":"","username":"swetha","ts":"2019-04-04T18:51:45.433Z","attachments":[{"type":"file","title":"Screen Shot 2019-04-04 at 9.47.52 AM.png","title_link":"/file-upload/n2ZZrvWNWaXjhQsHH/Screen%20Shot%202019-04-04%20at%209.47.52%20AM.png","image_url":"/file-upload/n2ZZrvWNWaXjhQsHH/Screen%20Shot%202019-04-04%20at%209.47.52%20AM.png","image_type":"image/png","image_size":118864,"url":"/file-upload/n2ZZrvWNWaXjhQsHH/Screen%20Shot%202019-04-04%20at%209.47.52%20AM.png","remote":false,"fileId":"n2ZZrvWNWaXjhQsHH","fileName":"Screen Shot 2019-04-04 at 9.47.52 AM.png"}]}
{"msg":"@lehors does that seem like a middle ground from the original images?","username":"swetha","ts":"2019-04-04T18:52:21.074Z"}
{"msg":"@swetha yes, that's pretty nice!","username":"lehors","ts":"2019-04-04T19:05:24.285Z"}
{"msg":"Yay, I will add that to the README","username":"swetha","ts":"2019-04-04T19:09:50.511Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=cxpsYmwXXoH9do5LA) @swetha looks messy","username":"MHBauer","ts":"2019-04-04T19:16:58.757Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=cxpsYmwXXoH9do5LA","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=cxpsYmwXXoH9do5LA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"i voiced the same opinion when the decision was made","username":"swetha","ts":"2019-04-04T19:19:44.467Z"}
{"msg":"but the counter argument is that this isn't a large project so having everything top level and not hidden was a better approach","username":"swetha","ts":"2019-04-04T19:20:28.141Z"}
{"msg":"I disagree, it implies that somehow, other things might rely on them, but it's specific to the evmcc","username":"MHBauer","ts":"2019-04-04T20:35:58.204Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=44ggeprbZD2o9RJZE) @swetha can you make it bigger when you render it? or make it an SVG?","username":"MHBauer","ts":"2019-04-04T20:37:09.935Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=44ggeprbZD2o9RJZE","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=44ggeprbZD2o9RJZE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"the one here is just a screenshot","username":"swetha","ts":"2019-04-04T20:43:43.820Z"}
{"msg":"the image i created should be bigger","username":"swetha","ts":"2019-04-04T20:43:55.580Z"}
{"msg":"VEKTOR GRAFIX","username":"MHBauer","ts":"2019-04-04T20:49:54.593Z"}
{"msg":"bizarre rebase error. should be fixed now. https://gerrit.hyperledger.org/r/#/c/30752/4","username":"MHBauer","ts":"2019-04-04T23:40:29.592Z"}
{"msg":"bizarre rebase error. should be fixed now. https://gerrit.hyperledger.org/r/#/c/30752","username":"MHBauer","ts":"2019-04-04T23:40:29.592Z"}
{"msg":"```\n```","username":"MHBauer","ts":"2019-04-04T23:45:06.657Z"}
{"msg":"```\n16:41:00 ‚Ä¢ SUCCESS! 58.412517386s PASS\n16:41:40 [1554421188] Fab3 - 13/13 specs ‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢ SUCCESS! 48.129590624s PASS\n16:41:41 \n16:41:41 Ginkgo ran 2 suites in 1m53.059008053s\n16:41:41 Test Suite Passed\n[Pipeline] }\n[Pipeline] // dir\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // timestamps\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] }\n[Pipeline] // timeout\n[Pipeline] End of Pipeline\nFinished: ABORTED\n```","username":"MHBauer","ts":"2019-04-04T23:45:14.553Z"}
{"msg":"wut","username":"MHBauer","ts":"2019-04-04T23:45:16.026Z"}
{"msg":"oh, wrong ","username":"MHBauer","ts":"2019-04-04T23:45:26.939Z"}
{"msg":"Pipeline?","username":"swetha","ts":"2019-04-05T17:18:17.098Z"}
{"msg":"wrong build. not sure how I was looking at it.","username":"MHBauer","ts":"2019-04-05T17:52:54.832Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30755/ should be good and tested.","username":"MHBauer","ts":"2019-04-05T19:12:15.639Z"}
{"msg":"untis and integrations.","username":"MHBauer","ts":"2019-04-05T19:12:25.243Z"}
{"msg":"it's tending towards orange, but it isn't a lot of implementation, mainly use of a new ledger query requires mock.","username":"MHBauer","ts":"2019-04-05T19:12:56.428Z"}
{"msg":"for ","username":"MHBauer","ts":"2019-04-05T21:21:11.248Z"}
{"msg":"@swetha \nhttps://gerrit.hyperledger.org/r/#/c/30752/6/Fab3_Instructions.md@305\nhow about adding \" All visible events will be matched against, which will include other instances of the EVM chaincode operating with different chaincode IDs.\" ","username":"MHBauer","ts":"2019-04-05T21:21:42.367Z"}
{"msg":"but up above, at 296, after the \"these log objects ... on the transaction\"","username":"MHBauer","ts":"2019-04-05T21:22:12.167Z"}
{"msg":"yea that sounds good","username":"swetha","ts":"2019-04-05T21:22:59.798Z"}
{"msg":"should be out now.","username":"MHBauer","ts":"2019-04-05T21:36:20.255Z"}
{"msg":"Has joined the channel.","username":"tcurdt","ts":"2019-04-06T14:51:34.804Z","type":"uj"}
{"msg":"let's say I use the azure hyperledger farbric deployment - is there an easy way to add the evm? (so one can use web3+solidity)","username":"tcurdt","ts":"2019-04-06T15:36:33.950Z"}
{"msg":"@tcurdt I am not familiar with the azure service. But you should be able to install the evm as you would any chaincode","username":"swetha","ts":"2019-04-07T06:14:28.528Z"}
{"msg":"not sure is it's something with my env but when i run [this integration test](https://gerrit.hyperledger.org/r/c/30755/5/integration/fab3/fab3_test.go#346) i got following error:\n```\n[e][Org1.peer0] 2019-04-07 20:01:34.780 CST [endorser] SimulateProposal -> ERRO 06b [testchannel][b46e07d5] failed to invoke chaincode name:\"qscc\" , error: transaction returned with failure: proto: field \"protos.Response.Message\" contains invalid UTF-8\n[e][Org1.peer0] github.com/hyperledger/fabric/core/chaincode.processChaincodeExecutionResult\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:265\n[e][Org1.peer0] github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Execute\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:239\n[e][Org1.peer0] github.com/hyperledger/fabric/core/endorser.(*SupportImpl).Execute\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/core/endorser/support.go:147\n[e][Org1.peer0] github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/core/endorser/endorser.go:142\n[e][Org1.peer0] github.com/hyperledger/fabric/core/endorser.(*Endorser).SimulateProposal\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/core/endorser/endorser.go:237\n[e][Org1.peer0] github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/core/endorser/endorser.go:456\n[e][Org1.peer0] github.com/hyperledger/fabric/core/handlers/auth/filter.(*expirationCheckFilter).ProcessProposal\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/core/handlers/auth/filter/expiration.go:61\n[e][Org1.peer0] github.com/hyperledger/fabric/core/handlers/auth/filter.(*filter).ProcessProposal\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/core/handlers/auth/filter/filter.go:32\n[e][Org1.peer0] github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler.func1\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:169\n[e][Org1.peer0] github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:31\n[e][Org1.peer0] github.com/hyperledger/fabric/common/grpclogging.UnaryServerInterceptor.func1\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/common/grpclogging/server.go:91\n[e][Org1.peer0] github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:34\n[e][Org1.peer0] github.com/hyperledger/fabric/common/grpcmetrics.UnaryServerInterceptor.func1\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/common/grpcmetrics/interceptor.go:30\n[e][Org1.peer0] github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:39\n[e][Org1.peer0] github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:171\n[e][Org1.peer0] github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:982\n[e][Org1.peer0] github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1208\n[e][Org1.peer0] github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1\n[e][Org1.peer0] \t/Users/guoger/workspace/go-project/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:686\n[e][Org1.peer0] runtime.goexit\n[e][Org1.peer0] \t/usr/local/go/src/runtime/asm_amd64.s:1337\n```\n(although the whole test actually passes...)","username":"guoger","ts":"2019-04-07T12:04:32.021Z"}
{"msg":"@MHBauer ^^^^","username":"guoger","ts":"2019-04-07T12:04:42.326Z"}
{"msg":"that's a peer blowing up","username":"MHBauer","ts":"2019-04-08T04:48:03.039Z"}
{"msg":"I haven't seen that","username":"MHBauer","ts":"2019-04-08T04:48:14.051Z"}
{"msg":"and I'm not even sure where to start troubleshooting.","username":"MHBauer","ts":"2019-04-08T04:48:21.282Z"}
{"msg":"but if you're running it with 'go test' I'd say something in 1.4.1 or 2.0 is blowing up","username":"MHBauer","ts":"2019-04-08T04:48:38.939Z"}
{"msg":"and if you've got 1.4.0 checked out, I've not an idea where to start.","username":"MHBauer","ts":"2019-04-08T04:48:56.375Z"}
{"msg":"I'll start it running with ginkgo and let it go, but if it doesn't FAIL, then I can chalk down that fabric is pretty resilient.","username":"MHBauer","ts":"2019-04-08T04:57:37.558Z"}
{"msg":"cause we certainly aren't retrying during the test.","username":"MHBauer","ts":"2019-04-08T04:57:50.409Z"}
{"msg":"overall I think it's ready if we can squeeze it in.","username":"MHBauer","ts":"2019-04-08T04:58:46.548Z"}
{"msg":"Has joined the channel.","username":"Shezay","ts":"2019-04-08T13:55:49.620Z","type":"uj"}
{"msg":"Hi, I have a question about Fab3, if I set the user parameter of a Fab3 instance and then connect using web3, is there anything that prevents some other person from connecting with web3 to my proxy with my user?","username":"Shezay","ts":"2019-04-08T13:57:17.406Z"}
{"msg":"there's no encryption or anything, but the fact that it's running locally for you makes it inaccessible.","username":"MHBauer","ts":"2019-04-08T15:21:05.801Z"}
{"msg":"@guoger ran into the same problem doing some manual testing:\n```\ncurl http://127.0.0.1:5000 -X POST -H \"Content-Type:application/json\" -d '{\n  \"jsonrpc\":\"2.0\",\n  \"method\": \"eth_getLogs\",\n  \"id\":1,\n  \"params\":[{\"blockHash\":\"0xa21538254a4d6dc0115619151029d24833655b401d85bbe06d6c3ba791ca1345\"}]\n}' | jq .\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   499  100   344  100   155    306    138  0:00:01  0:00:01 --:--:--   306\n{\n  \"jsonrpc\": \"2.0\",\n  \"error\": {\n    \"code\": -32000,\n    \"message\": \"failed to find block by block hash: QueryBlockByHash failed: Transaction processing for endorser [169.63.236.150:30110]: Chaincode status Code: (500) UNKNOWN. Description: transaction returned with failure: proto: field \\\"protos.Response.Message\\\" contains invalid UTF-8\",\n    \"data\": null\n  },\n  \"id\": 1\n}\n```","username":"swetha","ts":"2019-04-08T19:44:47.192Z"}
{"msg":"huh","username":"MHBauer","ts":"2019-04-08T19:46:53.401Z"}
{"msg":"im investigating futher","username":"swetha","ts":"2019-04-08T19:47:36.928Z"}
{"msg":"how do the fab3 logs look?","username":"MHBauer","ts":"2019-04-08T19:47:37.055Z"}
{"msg":"fab3 logs have nothign","username":"swetha","ts":"2019-04-08T19:47:42.086Z"}
{"msg":"fab3 logs have nothing","username":"swetha","ts":"2019-04-08T19:47:42.086Z"}
{"msg":"ill turn on debug in a second","username":"swetha","ts":"2019-04-08T19:47:47.769Z"}
{"msg":"did you turn debug on?","username":"MHBauer","ts":"2019-04-08T19:47:49.684Z"}
{"msg":"okay","username":"MHBauer","ts":"2019-04-08T19:47:50.875Z"}
{"msg":"(we should make a jira fo rthat, or switch to flogging)","username":"MHBauer","ts":"2019-04-08T19:48:08.999Z"}
{"msg":"also capitalized 'H' in blockHash but don't think that is the problem","username":"swetha","ts":"2019-04-08T19:48:23.554Z"}
{"msg":"?","username":"MHBauer","ts":"2019-04-08T19:48:31.196Z"}
{"msg":"it's capitalized more than it's not in the example.","username":"MHBauer","ts":"2019-04-08T19:48:40.716Z"}
{"msg":"so, I went with it.","username":"MHBauer","ts":"2019-04-08T19:48:47.790Z"}
{"msg":"i think spec doesn't have it capitalized but looks like go took care of that?","username":"swetha","ts":"2019-04-08T19:50:31.089Z"}
{"msg":"spec has btoh","username":"MHBauer","ts":"2019-04-08T19:51:03.173Z"}
{"msg":"```\nblockhash: DATA, 32 Bytes - (optional) With the addition of EIP-234 (Geth >= v1.8.13 or Parity >= v2.1.0), blockHash is a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash. Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in the filter criteria, then neither fromBlock nor toBlock are allowed.\n```","username":"MHBauer","ts":"2019-04-08T19:51:07.431Z"}
{"msg":"but more blockHash","username":"MHBauer","ts":"2019-04-08T19:51:11.041Z"}
{"msg":"than blockhash","username":"MHBauer","ts":"2019-04-08T19:51:14.332Z"}
{"msg":"debug logs don't have anything unfortunately: \n```\nlooking for block by hash\t{\"method\": \"GetLogs\"}\n2019-04-08T12:52:19.863-0700\tDEBUG\tfab3.ethservice\tfab3/ethservice.go:230\tReceived a request for GetBlockByNumber\n2019-04-08T12:52:19.863-0700\tDEBUG\tfab3.ethservice\tfab3/ethservice.go:232\tParams are : [latest false]\n2019-04-08T12:52:20.224-0700\tDEBUG\tfab3.ethservice\tfab3/ethservice.go:285\tblock has transaction hash:18ec90417c244d6ffdb1273ae2635440ff02d71e949cb3ce0bb71c21ead5d5f5\n2019-04-08T12:52:20.224-0700\tDEBUG\tfab3.ethservice\tfab3/ethservice.go:313\tasked for blocklatestfound block{0x16 0xa21538254a4d6dc0115619151029d24833655b401d85bbe06d6c3ba791ca1345 0xcb864f24525655384466020957c79f60d341f77da29b756fa2d7ff36b51b0133 [0x18ec90417c244d6ffdb1273ae2635440ff02d71e949cb3ce0bb71c21ead5d5f5]}\n```","username":"swetha","ts":"2019-04-08T19:52:59.239Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=EsB2vfc4C4tCizteS) @MHBauer yea but the name of the field says blockhash. and looks like the new docs also use blockhash. either way that isn't the thing causing the error: https://github.com/ethereum/EIPs/blob/4e169dcb6e1d237c9f2e75eb347efb3c94b54f74/EIPS/eip-1474.md","username":"swetha","ts":"2019-04-08T19:55:14.514Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=EsB2vfc4C4tCizteS","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=EsB2vfc4C4tCizteS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I guess, \"what does geth say\" ","username":"MHBauer","ts":"2019-04-08T20:07:00.928Z"}
{"msg":"maddeningly inconsistent.","username":"MHBauer","ts":"2019-04-08T20:08:19.399Z"}
{"msg":"geth accepts both","username":"swetha","ts":"2019-04-08T20:13:56.216Z"}
{"msg":"but returns blockHash","username":"swetha","ts":"2019-04-08T20:14:02.107Z"}
{"msg":"it doesn't really matter, because go seems to be handling this for us?","username":"swetha","ts":"2019-04-08T20:14:17.976Z"}
{"msg":"The problem has to do with how we decode the hash and send it to the ledger. looking into what format it needs to be in","username":"swetha","ts":"2019-04-08T20:20:36.695Z"}
{"msg":"how the heck is the test not failing?","username":"MHBauer","ts":"2019-04-08T20:22:24.887Z"}
{"msg":"oh shoot, I made the proto mistake, I think.","username":"MHBauer","ts":"2019-04-08T20:23:57.172Z"}
{"msg":"looks like it.","username":"MHBauer","ts":"2019-04-08T20:30:23.603Z"}
{"msg":"should probably flag up pprof so we can attach the debugger if necessary","username":"MHBauer","ts":"2019-04-08T22:52:26.525Z"}
{"msg":"@guoger good catch","username":"MHBauer","ts":"2019-04-09T01:10:47.993Z"}
{"msg":"some furious coding later","username":"MHBauer","ts":"2019-04-09T01:10:51.301Z"}
{"msg":"we fixed the huge bug","username":"MHBauer","ts":"2019-04-09T01:11:00.570Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30755/","username":"MHBauer","ts":"2019-04-09T01:11:01.179Z"}
{"msg":"> I don't think contracts are a part of the definition of dapp. I thought dapp was to an app and smart contract was sort of the backend. The goal here is to use terminology that ethereum users are familiar with and that they would understand they can bring these pieces pretty much unaltered. If not dapp what would be the right word?\n\nI think Frontend is probably the closest. DApp in ethereum would include smart contracts","username":"guoger","ts":"2019-04-09T02:18:50.542Z"}
{"msg":"> I don't think contracts are a part of the definition of dapp. I thought dapp was to an app and smart contract was sort of the backend. The goal here is to use terminology that ethereum users are familiar with and that they would understand they can bring these pieces pretty much unaltered. If not dapp what would be the right word?\n\nI think Frontend is probably the closest. DApp in ethereum would include smart contracts @swetha ","username":"guoger","ts":"2019-04-09T02:18:50.542Z"}
{"msg":"would web3 app work?","username":"swetha","ts":"2019-04-09T02:25:37.632Z"}
{"msg":"","username":"swetha","ts":"2019-04-09T02:27:10.767Z","attachments":[{"type":"file","title":"EndToEnd.png","title_link":"/file-upload/SMo6NofMjTqwth6Ym/EndToEnd.png","image_url":"/file-upload/SMo6NofMjTqwth6Ym/EndToEnd.png","image_type":"image/png","image_size":95325,"url":"/file-upload/SMo6NofMjTqwth6Ym/EndToEnd.png","remote":false,"fileId":"SMo6NofMjTqwth6Ym","fileName":"EndToEnd.png"}]}
{"msg":"@guoger ^^","username":"swetha","ts":"2019-04-09T02:27:15.712Z"}
{"msg":"ah, that's actually better :)","username":"guoger","ts":"2019-04-09T02:27:47.645Z"}
{"msg":"i like that, and i will push that up","username":"swetha","ts":"2019-04-09T02:30:21.844Z"}
{"msg":"I'm fine with this","username":"MHBauer","ts":"2019-04-09T02:38:38.007Z"}
{"msg":"@guoger the -1 is to see if you guys can +2 over it. I've never seen that ","username":"MHBauer","ts":"2019-04-09T02:39:07.426Z"}
{"msg":":joy: ","username":"guoger","ts":"2019-04-09T02:39:48.652Z"}
{"msg":"looks like we have a release! https://github.com/hyperledger/fabric-chaincode-evm/releases/tag/v0.2.0","username":"MHBauer","ts":"2019-04-10T14:13:37.314Z"}
{"msg":"If/when we send out an email I'd like to get people to drop suggestions for the next release in this wiki page, or a doc or something: https://wiki.hyperledger.org/display/fabric/2019-07+July+Release+Planning?src=contextnavpagetreemode","username":"MHBauer","ts":"2019-04-10T14:47:23.845Z"}
{"msg":"should we schedule a retro?","username":"MHBauer","ts":"2019-04-10T20:49:58.888Z"}
{"msg":"Should we schedule a release planning meeting coming up?","username":"MHBauer","ts":"2019-04-10T20:50:06.705Z"}
{"msg":"lookign at jiras","username":"MHBauer","ts":"2019-04-11T18:47:45.609Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-15116 is actually more interesting.","username":"MHBauer","ts":"2019-04-11T18:47:54.277Z"}
{"msg":"cause go 1.10 can't generate mocks with the counterfeiter we have","username":"MHBauer","ts":"2019-04-11T18:48:06.892Z"}
{"msg":"so, we should switch to some version of 1.11 ","username":"MHBauer","ts":"2019-04-11T18:48:18.643Z"}
{"msg":"also 1.10 is technically unsupported now.","username":"MHBauer","ts":"2019-04-11T18:49:11.539Z"}
{"msg":"well, https://gerrit.hyperledger.org/r/30906 for it, we can discuss there.","username":"MHBauer","ts":"2019-04-11T18:57:37.219Z"}
{"msg":"@swetha do you like/not-like/care-about the 'enable and use bold in the jenkins build-output' changes?","username":"MHBauer","ts":"2019-04-11T20:42:24.774Z"}
{"msg":"I am indifferent. I am okay either way","username":"swetha","ts":"2019-04-11T20:43:06.473Z"}
{"msg":"@MHBauer ^","username":"swetha","ts":"2019-04-11T20:43:14.608Z"}
{"msg":"thinking I'll edit the PR myself, rebase it, etc.","username":"MHBauer","ts":"2019-04-11T20:59:08.544Z"}
{"msg":"@swetha https://gerrit.hyperledger.org/r/#/c/30448/ check it","username":"MHBauer","ts":"2019-04-11T22:46:26.962Z"}
{"msg":"Has joined the channel.","username":"Akatsuki","ts":"2019-04-12T03:26:33.425Z","type":"uj"}
{"msg":"@MHBauer why are we upgrading go-sdk dep? ","username":"guoger","ts":"2019-04-12T03:50:20.940Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=SF5SaGjkefQ5mzcmZ) @guoger seemed like something we've been talking about doing for a while and I wanted to get that out of the way.","username":"MHBauer","ts":"2019-04-12T14:52:59.043Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=SF5SaGjkefQ5mzcmZ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=SF5SaGjkefQ5mzcmZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"ok, i was just wondering whether there's a specific change in new version that we want to pull in. In this case, wouldn't it be better to upgrade once sdk 1.0 is official?","username":"guoger","ts":"2019-04-12T16:03:58.455Z"}
{"msg":"I don't have any confidence in their 1.0 meaning anything.","username":"MHBauer","ts":"2019-04-12T16:53:45.757Z"}
{"msg":"it will be module based, which I don't know if is good or bad for us.","username":"MHBauer","ts":"2019-04-12T16:54:11.437Z"}
{"msg":"i thought we wanted the new block hash code","username":"swetha","ts":"2019-04-12T18:37:44.785Z"}
{"msg":"they don't have that, ","username":"MHBauer","ts":"2019-04-12T19:04:49.038Z"}
{"msg":"there's a lot of missing stuff in the fabric files they've copied.","username":"MHBauer","ts":"2019-04-12T19:05:06.465Z"}
{"msg":"and the types are still different, so we still can't use upstream","username":"MHBauer","ts":"2019-04-12T19:12:01.936Z"}
{"msg":"oh in that case do we really gain anything from the upgrade?","username":"swetha","ts":"2019-04-12T21:13:22.980Z"}
{"msg":"I'm not sure. We'd be at the most advanced version before switching to modules. It may be easier to upgrade in the future, but I'm not sure.","username":"MHBauer","ts":"2019-04-12T22:33:44.428Z"}
{"msg":"What impact are we having with the current configuration?","username":"MHBauer","ts":"2019-04-12T22:33:44.428Z"}
{"msg":"Has joined the channel.","username":"mallikarjunasai995","ts":"2019-04-13T11:38:01.512Z","type":"uj"}
{"msg":"@MHBauer , @rameshthoomu wants to switch back the third party images to use the actual images and has suggestions to keep the build time short still:\n\"\nThis is what we follow on every new fabric-baseimage release\n\n1) When a new fabric baseimage is out.. say 0.4.16\n2) Some repos are required fabric baseimages and thirdparty images.. we update this line and submit patch to ci-managment repo to cache the images https://github.com/hyperledger/ci-management/blob/master/packer/provision/docker.sh#L131\n3) It depends on dependent repository owner to update the configuration files (Makefile or ci.properties files) to download latest released version.. \n\nIf you want to automate this.. We can do this way in Makefile\n\ncurl -L https://raw.githubusercontent.com/hyperledger/fabric/master/Makefile > Makefile && BASEIMAGE_RELEASE=$(cat Makefile | grep \"BASEIMAGE_RELEASE =\" | awk '{print $3}')\nand one more https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Makefile#L86 we don't have amd64-latest tag in hyperledger dockerhub.\nyou can use \"latest\" or specific release version from here https://hub.docker.com/r/hyperledger/fabric-javaenv/tags\n\"","username":"swetha","ts":"2019-04-15T19:52:35.345Z"}
{"msg":"I don't want to manually deal with any of this, since we don't actually use the images.","username":"MHBauer","ts":"2019-04-15T19:54:51.615Z"}
{"msg":" What impact are we having with the current configuration?","username":"MHBauer","ts":"2019-04-15T19:55:09.008Z"}
{"msg":"I didn't configure the existing pipeline to use latest","username":"MHBauer","ts":"2019-04-15T19:55:39.022Z"}
{"msg":"and nobody should use latest.","username":"MHBauer","ts":"2019-04-15T19:55:44.354Z"}
{"msg":"@MHBauer we can automate this as suggested above..","username":"rameshthoomu","ts":"2019-04-15T19:55:56.035Z"}
{"msg":"I'm not responsible for the existing naming scheme either. ","username":"MHBauer","ts":"2019-04-15T19:56:08.485Z"}
{"msg":"automate it in some commonly available place for everyone to use.","username":"MHBauer","ts":"2019-04-15T19:57:35.731Z"}
{"msg":"yes..","username":"rameshthoomu","ts":"2019-04-15T19:57:56.361Z"}
{"msg":"because I don't want to maintain it, and have it break when upstream changes some thing.","username":"MHBauer","ts":"2019-04-15T19:58:16.309Z"}
{"msg":"ok that makes sense... Let me push change to fix these issues..","username":"rameshthoomu","ts":"2019-04-15T19:59:05.574Z"}
{"msg":"will let you know the update..","username":"rameshthoomu","ts":"2019-04-15T19:59:23.930Z"}
{"msg":"Thanks","username":"swetha","ts":"2019-04-15T19:59:42.060Z"}
{"msg":"We are going to be having a release planning meeting for the fabric-evm. \nThursday 8:00AM PDT\nMeeting Link: https://ibm.webex.com/ibm/j.php?MTID=mf71b4c786845929feaea96f26e563765","username":"swetha","ts":"2019-04-15T22:43:22.465Z"}
{"msg":"We are going to be having a release planning meeting for the fabric-evm. \nThursday 8:00AM PDT\nMeeting Link: https://ibm.webex.com/ibm/j.php?MTID=mf71b4c786845929feaea96f26e563765\nPassword: fabric-evm","username":"swetha","ts":"2019-04-15T22:43:22.465Z"}
{"msg":"We are going to be having a release planning meeting for the fabric-evm. Thursday 8:00AM PDT\n","username":"swetha","ts":"2019-04-15T22:43:22.465Z"}
{"msg":"I am working on getting that and more details such as dial in numbers into the community calendar. Will update with calendar event as soon as I get it.","username":"swetha","ts":"2019-04-15T22:44:13.222Z"}
{"msg":"@MHBauer @guoger @lehors @cbf ^^","username":"swetha","ts":"2019-04-15T22:45:04.052Z"}
{"msg":"@klenik ^","username":"MHBauer","ts":"2019-04-15T23:07:48.324Z"}
{"msg":"Has joined the channel.","username":"MattWilson8","ts":"2019-04-16T15:06:33.743Z","type":"uj"}
{"msg":"Hi guys I'm new and I was having an issue with the very first step of mounting the EVM, I can't seem to update the docker-compose-cli.yaml file with the volumes in the fabric-evm-chaincode","username":"MattWilson8","ts":"2019-04-16T15:18:37.028Z"}
{"msg":"","username":"MattWilson8","ts":"2019-04-16T15:18:54.931Z","attachments":[{"type":"file","title":"Screen Shot 2019-04-16 at 16.18.15.png","title_link":"/file-upload/o4XEGCfuQYGNXDBKj/Screen%20Shot%202019-04-16%20at%2016.18.15.png","image_url":"/file-upload/o4XEGCfuQYGNXDBKj/Screen%20Shot%202019-04-16%20at%2016.18.15.png","image_type":"image/png","image_size":161184,"url":"/file-upload/o4XEGCfuQYGNXDBKj/Screen%20Shot%202019-04-16%20at%2016.18.15.png","remote":false,"fileId":"o4XEGCfuQYGNXDBKj","fileName":"Screen Shot 2019-04-16 at 16.18.15.png"}]}
{"msg":"@MattWilson8 why not? What error?","username":"MHBauer","ts":"2019-04-16T15:23:35.197Z"}
{"msg":"it's a file. ","username":"MHBauer","ts":"2019-04-16T15:23:42.151Z"}
{"msg":"https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/docker-compose-cli.yaml#L80-L85","username":"MHBauer","ts":"2019-04-16T15:23:46.756Z"}
{"msg":"my diff looks like ","username":"MHBauer","ts":"2019-04-16T15:24:40.374Z"}
{"msg":"```\ndiff --git a/first-network/docker-compose-cli.yaml b/first-network/docker-compose-cli.yaml\nindex a18bbc2..e295d0d 100644\n--- a/first-network/docker-compose-cli.yaml\n+++ b/first-network/docker-compose-cli.yaml\n@@ -80,6 +80,7 @@ services:\n     volumes:\n         - /var/run/:/host/var/run/\n         - ./../chaincode/:/opt/gopath/src/github.com/chaincode\n+        - ./../../fabric-chaincode-evm/:/opt/gopath/src/github.com/hyperledger/fabric-chaincode-evm/\n         - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/\n         - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/\n         - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts\n```","username":"MHBauer","ts":"2019-04-16T15:24:51.344Z"}
{"msg":"Well for one I'm not entirely sure which repo/directory I'm meant to copy the command into, I'll send a screenshot of what happens when I try to ","username":"MattWilson8","ts":"2019-04-16T15:38:54.480Z"}
{"msg":"","username":"MattWilson8","ts":"2019-04-16T15:39:49.755Z","attachments":[{"type":"file","title":"Screen Shot 2019-04-16 at 16.40.24.png","title_link":"/file-upload/KckveJtS3CmokjhER/Screen%20Shot%202019-04-16%20at%2016.40.24.png","image_url":"/file-upload/KckveJtS3CmokjhER/Screen%20Shot%202019-04-16%20at%2016.40.24.png","image_type":"image/png","image_size":118442,"url":"/file-upload/KckveJtS3CmokjhER/Screen%20Shot%202019-04-16%20at%2016.40.24.png","remote":false,"fileId":"KckveJtS3CmokjhER","fileName":"Screen Shot 2019-04-16 at 16.40.24.png"}]}
{"msg":"Sorry if I'm being oblivious, any help would be appreciated ","username":"MattWilson8","ts":"2019-04-16T15:40:35.586Z"}
{"msg":"okay, what are you reading?","username":"MHBauer","ts":"2019-04-16T15:42:32.771Z"}
{"msg":"where is it?","username":"MHBauer","ts":"2019-04-16T15:42:35.928Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md#build-and-start-the-evm","username":"MattWilson8","ts":"2019-04-16T15:42:44.768Z"}
{"msg":"it looks like you have the file, and you're in the right directory from that screenshot","username":"MHBauer","ts":"2019-04-16T15:43:04.538Z"}
{"msg":"Following this video as well https://www.youtube.com/watch?v=VbdJVu8bTaw","username":"MattWilson8","ts":"2019-04-16T15:43:09.354Z"}
{"msg":"so, now edit the file","username":"MHBauer","ts":"2019-04-16T15:43:33.137Z"}
{"msg":"Ahh now I get it ","username":"MattWilson8","ts":"2019-04-16T15:44:36.091Z"}
{"msg":"Thank you ","username":"MattWilson8","ts":"2019-04-16T15:44:54.626Z"}
{"msg":"a really quick skim of that, doesn't look like it's done in the video, b","username":"MHBauer","ts":"2019-04-16T15:46:04.546Z"}
{"msg":"Yea he just jump cuts and leaves that bit out ","username":"MattWilson8","ts":"2019-04-16T15:46:48.244Z"}
{"msg":"I'm sure there's other recordings, but not sure any of them have that in it","username":"MHBauer","ts":"2019-04-16T15:51:46.072Z"}
{"msg":"maybe some time we can make one","username":"MHBauer","ts":"2019-04-16T15:52:05.208Z"}
{"msg":"Hi again, I tried to instantiate the chaincode on my channel and got this error","username":"MattWilson8","ts":"2019-04-16T16:09:32.944Z"}
{"msg":"","username":"MattWilson8","ts":"2019-04-16T16:09:44.368Z","attachments":[{"type":"file","title":"Screen Shot 2019-04-16 at 17.08.44.png","title_link":"/file-upload/FKjMh4zR7XXMPMcKh/Screen%20Shot%202019-04-16%20at%2017.08.44.png","image_url":"/file-upload/FKjMh4zR7XXMPMcKh/Screen%20Shot%202019-04-16%20at%2017.08.44.png","image_type":"image/png","image_size":242936,"url":"/file-upload/FKjMh4zR7XXMPMcKh/Screen%20Shot%202019-04-16%20at%2017.08.44.png","remote":false,"fileId":"FKjMh4zR7XXMPMcKh","fileName":"Screen Shot 2019-04-16 at 17.08.44.png"}]}
{"msg":"This is from the same tutorial page as previously mentioned","username":"MattWilson8","ts":"2019-04-16T16:10:20.756Z"}
{"msg":"what are you running on?","username":"MHBauer","ts":"2019-04-16T16:12:51.578Z"}
{"msg":"that's an avx instruction.","username":"MHBauer","ts":"2019-04-16T16:14:07.735Z"}
{"msg":"Mac terminal","username":"MattWilson8","ts":"2019-04-16T16:14:14.936Z"}
{"msg":"well, unless you're using a computer from 2006, I can't see why that would happen.","username":"MHBauer","ts":"2019-04-16T16:15:31.648Z"}
{"msg":"If you could paste the three lines of errors it would help me paste it into google and see what's up","username":"MHBauer","ts":"2019-04-16T16:16:05.489Z"}
{"msg":"Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 \"# github.com/hyperledger/fabric-chaincode-evm/vendor/github.com/tmthrgd/go-hex\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s:66: unrecognized instruction \"VPCMPGTB\"\nchaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s:68: unrecognized instruction \"VPCMPGTB\"\nasm: assembly of chaincode/input/src/github.com/hyperledger/fabric-chaincode-evm/vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s failed\"","username":"MattWilson8","ts":"2019-04-16T16:16:42.165Z"}
{"msg":"nope, I got nothing. some hits for other instructions, but it's possible in our dependencies somewhere it's broken","username":"MHBauer","ts":"2019-04-16T16:20:31.104Z"}
{"msg":"It looks like your version of the fabric-chaincode-evm isnt compiling ","username":"swetha","ts":"2019-04-16T16:20:46.452Z"}
{"msg":"https://github.com/hyperledger/burrow/issues/905 is the closest thing I could find, and again, only triggered by running on an old computer.","username":"MHBauer","ts":"2019-04-16T16:21:35.417Z"}
{"msg":"risky question, but how old is this mac?","username":"MHBauer","ts":"2019-04-16T16:21:49.838Z"}
{"msg":"2015 version ","username":"MattWilson8","ts":"2019-04-16T16:22:10.546Z"}
{"msg":"Macbook Pro","username":"MattWilson8","ts":"2019-04-16T16:22:40.575Z"}
{"msg":"ya, should be fine, that's @swetha 's machine.","username":"MHBauer","ts":"2019-04-16T16:23:13.171Z"}
{"msg":"I'm basically trying to run EVM smart contracts in hyperledger fabric for the purpose of benchmarking them, using the Caliper tool. I tired using the IBM cloud tutorial where you create a cluster but in that example the kubernetes version doesn't support docker anymore so you can't instantiate the chaincode ","username":"MattWilson8","ts":"2019-04-16T16:26:07.272Z"}
{"msg":"I don't know if any of you are familiar with that example","username":"MattWilson8","ts":"2019-04-16T16:26:34.946Z"}
{"msg":"Have you altered the fabric chaincode evm code? ","username":"swetha","ts":"2019-04-16T16:27:15.247Z"}
{"msg":"No I haven't altered any code ","username":"MattWilson8","ts":"2019-04-16T16:28:18.697Z"}
{"msg":"And whi he repo are you using for the cloud tutorial? I maintain one of them. We have a solution to docker but requires a 2 step process","username":"swetha","ts":"2019-04-16T16:28:20.186Z"}
{"msg":"https://github.com/swetharepakula/fabric-evm-ibm-container-service/","username":"MattWilson8","ts":"2019-04-16T16:30:05.841Z"}
{"msg":"That one, which i assume is yours?","username":"MattWilson8","ts":"2019-04-16T16:30:28.613Z"}
{"msg":"Yes, that is mine","username":"swetha","ts":"2019-04-16T16:30:41.262Z"}
{"msg":"There is a branch there that is `dind`","username":"swetha","ts":"2019-04-16T16:30:53.089Z"}
{"msg":"that is meant to solve the problem that iks no longer uses docker","username":"swetha","ts":"2019-04-16T16:31:10.830Z"}
{"msg":"but instantiating will still fail after about 20-30 min and then you have to re run the instantiation for the network to work","username":"swetha","ts":"2019-04-16T16:31:39.184Z"}
{"msg":"I haven't figured out how to improve that","username":"swetha","ts":"2019-04-16T16:31:56.536Z"}
{"msg":"But lets try to solve your current issue","username":"swetha","ts":"2019-04-16T16:32:06.651Z"}
{"msg":"Right ok","username":"MattWilson8","ts":"2019-04-16T16:32:32.676Z"}
{"msg":"Just so I understand what you are doing, you are using a modified version of this file: https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/docker-compose-cli.yaml?","username":"swetha","ts":"2019-04-16T16:32:55.271Z"}
{"msg":"Yes I modified it with cli:\n    volumes:\n      - ./../../fabric-chaincode-evm:/opt/gopath/src/github.com/hyperledger/fabric-chaincode-evm","username":"MattWilson8","ts":"2019-04-16T16:33:32.502Z"}
{"msg":"As stated in the tutorial ","username":"MattWilson8","ts":"2019-04-16T16:33:42.826Z"}
{"msg":"and you are using Fabric 1.4?","username":"swetha","ts":"2019-04-16T16:34:28.661Z"}
{"msg":"Not sure","username":"MattWilson8","ts":"2019-04-16T16:34:45.996Z"}
{"msg":"Is there a quick way to check that?","username":"MattWilson8","ts":"2019-04-16T16:34:52.700Z"}
{"msg":"if you run `docker images` you should be able to see what you have downloaded","username":"swetha","ts":"2019-04-16T16:35:32.456Z"}
{"msg":"Right no I'm not ","username":"MattWilson8","ts":"2019-04-16T16:36:35.818Z"}
{"msg":"Theres a lot of files but it looks like I'm using 1.2","username":"MattWilson8","ts":"2019-04-16T16:36:48.885Z"}
{"msg":"Hmm, okay. It should still work with 1.2 but perhaps there is something we added that doesn't","username":"swetha","ts":"2019-04-16T16:37:49.434Z"}
{"msg":"outside of the cli container, can you run `make build` in the `fabric-chaincode-evm` repository? ","username":"swetha","ts":"2019-04-16T16:38:36.131Z"}
{"msg":"","username":"MattWilson8","ts":"2019-04-16T16:39:07.732Z","attachments":[{"type":"file","title":"Screen Shot 2019-04-16 at 17.38.46.png","title_link":"/file-upload/2zx9qCpLdywJzxhcc/Screen%20Shot%202019-04-16%20at%2017.38.46.png","image_url":"/file-upload/2zx9qCpLdywJzxhcc/Screen%20Shot%202019-04-16%20at%2017.38.46.png","image_type":"image/png","image_size":470892,"url":"/file-upload/2zx9qCpLdywJzxhcc/Screen%20Shot%202019-04-16%20at%2017.38.46.png","remote":false,"fileId":"2zx9qCpLdywJzxhcc","fileName":"Screen Shot 2019-04-16 at 17.38.46.png"}]}
{"msg":"Thats my docker images and I will try to run that now ","username":"MattWilson8","ts":"2019-04-16T16:39:15.911Z"}
{"msg":"oh, what version of go is 1.2 compiled with?","username":"MHBauer","ts":"2019-04-16T16:39:16.053Z"}
{"msg":"you know what, nah","username":"MHBauer","ts":"2019-04-16T16:39:33.836Z"}
{"msg":"that should have been supported for years.","username":"MHBauer","ts":"2019-04-16T16:39:41.881Z"}
{"msg":"Our go requirement should only affect fab3","username":"swetha","ts":"2019-04-16T16:39:43.928Z"}
{"msg":"nope, I'm wrong","username":"MHBauer","ts":"2019-04-16T16:40:57.837Z"}
{"msg":"```\n```","username":"MHBauer","ts":"2019-04-16T16:40:58.997Z"}
{"msg":"‚ûú  evmcc git:(master) ‚úó go version\ngo version go1.9.7 linux/amd64\n‚ûú  evmcc git:(master) ‚úó pwd     \n/home/mhb/go/src/github.com/hyperledger/fabric-chaincode-evm/evmcc\n‚ûú  evmcc git:(master) ‚úó go build\n# github.com/hyperledger/fabric-chaincode-evm/vendor/github.com/tmthrgd/go-hex\n../vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s:66: unrecognized instruction \"VPCMPGTB\"\n../vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s:68: unrecognized instruction \"VPCMPGTB\"\nasm: assembly of ../vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s failed\n```\n```","username":"MHBauer","ts":"2019-04-16T16:41:01.264Z"}
{"msg":"```\n‚ûú  evmcc git:(master) ‚úó go version\ngo version go1.9.7 linux/amd64\n‚ûú  evmcc git:(master) ‚úó pwd     \n/home/mhb/go/src/github.com/hyperledger/fabric-chaincode-evm/evmcc\n‚ûú  evmcc git:(master) ‚úó go build\n# github.com/hyperledger/fabric-chaincode-evm/vendor/github.com/tmthrgd/go-hex\n../vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s:66: unrecognized instruction \"VPCMPGTB\"\n../vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s:68: unrecognized instruction \"VPCMPGTB\"\nasm: assembly of ../vendor/github.com/tmthrgd/go-hex/hex_decode_amd64.s failed\n```\n```","username":"MHBauer","ts":"2019-04-16T16:41:01.264Z"}
{"msg":"running the make build now ","username":"MattWilson8","ts":"2019-04-16T16:41:28.839Z"}
{"msg":"that's evmcc deps, swetha.","username":"MHBauer","ts":"2019-04-16T16:41:31.072Z"}
{"msg":"So we need at least 1.10 for evmcc as well","username":"swetha","ts":"2019-04-16T16:41:50.191Z"}
{"msg":"so, yea, if 1.2 is based on go 1.19","username":"MHBauer","ts":"2019-04-16T16:41:53.239Z"}
{"msg":"1.9*, then it won't work.","username":"MHBauer","ts":"2019-04-16T16:42:00.763Z"}
{"msg":"","username":"MattWilson8","ts":"2019-04-16T16:42:02.767Z","attachments":[{"type":"file","title":"Screen Shot 2019-04-16 at 17.42.38.png","title_link":"/file-upload/mBq8dFdXmbB3mDChm/Screen%20Shot%202019-04-16%20at%2017.42.38.png","image_url":"/file-upload/mBq8dFdXmbB3mDChm/Screen%20Shot%202019-04-16%20at%2017.42.38.png","image_type":"image/png","image_size":43813,"url":"/file-upload/mBq8dFdXmbB3mDChm/Screen%20Shot%202019-04-16%20at%2017.42.38.png","remote":false,"fileId":"mBq8dFdXmbB3mDChm","fileName":"Screen Shot 2019-04-16 at 17.42.38.png"}]}
{"msg":"Okay so I think Morgan figured out the issue","username":"swetha","ts":"2019-04-16T16:42:17.131Z"}
{"msg":"dang I hate go.","username":"MHBauer","ts":"2019-04-16T16:42:20.948Z"}
{"msg":"The peer version of 1.2 doesn't have a go version that supports the evmcc","username":"swetha","ts":"2019-04-16T16:42:32.939Z"}
{"msg":"yea, need to up to 1.3 or 1.4","username":"MHBauer","ts":"2019-04-16T16:42:35.520Z"}
{"msg":"You need to upgrade your fabric images","username":"swetha","ts":"2019-04-16T16:42:41.281Z"}
{"msg":"how would i do that?","username":"MattWilson8","ts":"2019-04-16T16:42:47.768Z"}
{"msg":"good job guys, we figured it out!","username":"MHBauer","ts":"2019-04-16T16:42:56.088Z"}
{"msg":"Thanks so much I would've been lost without you both!","username":"MattWilson8","ts":"2019-04-16T16:43:14.817Z"}
{"msg":"while the go-hex guy was amenable to supporting pentium 4s, I don't think he'll care about supporting go 1.9","username":"MHBauer","ts":"2019-04-16T16:43:35.716Z"}
{"msg":" ¬Ø\\_(„ÉÑ)_/¬Ø","username":"MHBauer","ts":"2019-04-16T16:43:44.430Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/install.html","username":"swetha","ts":"2019-04-16T16:43:45.776Z"}
{"msg":"coffee break time","username":"MHBauer","ts":"2019-04-16T16:44:04.635Z"}
{"msg":"Try `curl -sSL http://bit.ly/2ysbOFE | bash -s -- 1.4.0 1.4.0 0.4.15`. This should download the 1.4.0 version of all the images","username":"swetha","ts":"2019-04-16T16:44:34.080Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/release-1.4/install.html","username":"swetha","ts":"2019-04-16T16:44:54.553Z"}
{"msg":"Ok wil do ","username":"MattWilson8","ts":"2019-04-16T16:46:04.223Z"}
{"msg":"Thanks again","username":"MattWilson8","ts":"2019-04-16T16:46:10.160Z"}
{"msg":"Ok so now I've downloaded the right fabric version I should be able to run the \"fabric-chaincode-evm\" tutorial again with more success ","username":"MattWilson8","ts":"2019-04-16T16:48:52.934Z"}
{"msg":"I'll keep you guys updated just because the library I'm at closes in 15 mins and I need to go home and have dinner etc ","username":"MattWilson8","ts":"2019-04-16T16:49:55.007Z"}
{"msg":"No problem","username":"swetha","ts":"2019-04-16T16:52:05.392Z"}
{"msg":"We ran a workshop at HGF: https://www.youtube.com/watch?v=N_ulmO2-xZQ","username":"swetha","ts":"2019-04-16T16:52:35.919Z"}
{"msg":"That is another resource that might help you","username":"swetha","ts":"2019-04-16T16:53:15.814Z"}
{"msg":"Will give it a watch thanks! ","username":"MattWilson8","ts":"2019-04-16T16:55:39.209Z"}
{"msg":"np!","username":"swetha","ts":"2019-04-16T16:57:38.640Z"}
{"msg":"we should link that video in the reamde","username":"MHBauer","ts":"2019-04-16T17:11:01.837Z"}
{"msg":"that's an official vedo","username":"MHBauer","ts":"2019-04-16T17:11:12.533Z"}
{"msg":"oh that's true","username":"swetha","ts":"2019-04-16T17:16:58.484Z"}
{"msg":"For those interested we are planning on having a release planning meeting for the Fabric EVM tomorrow.  The event is on the community calendar.\n[Calendar Details] (https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW0gc3JlcGFrdUB1cy5pYm0uY29t&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tYThlMWY1MDRhMjNmMjRiNjFjZjg5Y2UwOWE4ZDM2Y2IwMjJhZWUwZg&ctz=America/Los_Angeles&hl=en&es=0)","username":"swetha","ts":"2019-04-16T17:18:05.584Z"}
{"msg":"For those interested we are planning on having a release planning meeting for the Fabric EVM tomorrow.  The event is on the community calendar.\n[Calendar Details](https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW0gc3JlcGFrdUB1cy5pYm0uY29t&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tYThlMWY1MDRhMjNmMjRiNjFjZjg5Y2UwOWE4ZDM2Y2IwMjJhZWUwZg&ctz=America/Los_Angeles&hl=en&es=0)","username":"swetha","ts":"2019-04-16T17:18:05.584Z"}
{"msg":"For those interested we are planning on having a release planning meeting for the Fabric EVM tomorrow.  The [event](https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW0gc3JlcGFrdUB1cy5pYm0uY29t&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tYThlMWY1MDRhMjNmMjRiNjFjZjg5Y2UwOWE4ZDM2Y2IwMjJhZWUwZg&ctz=America/Los_Angeles&hl=en&es=0)) is on the community calendar.","username":"swetha","ts":"2019-04-16T17:18:05.584Z"}
{"msg":"For those interested we are planning on having a release planning meeting for the Fabric EVM tomorrow.  The [event](https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW0gc3JlcGFrdUB1cy5pYm0uY29t&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tYThlMWY1MDRhMjNmMjRiNjFjZjg5Y2UwOWE4ZDM2Y2IwMjJhZWUwZg&ctz=America/Los_Angeles&hl=en&es=0) is on the community calendar.","username":"swetha","ts":"2019-04-16T17:18:05.584Z"}
{"msg":"For those interested we are planning on having a release planning meeting for the Fabric EVM tomorrow.  The [event](https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW0gc3JlcGFrdUB1cy5pYm0uY29t&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tYThlMWY1MDRhMjNmMjRiNjFjZjg5Y2UwOWE4ZDM2Y2IwMjJhZWUwZg&ctz=America/Los_Angeles&hl=en&es=0) is on the community calendar.","username":"swetha","ts":"2019-04-16T17:18:05.584Z"}
{"msg":"For those interested we are planning on having a release planning meeting for the Fabric EVM tomorrow.  The [event](https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW0gc3JlcGFrdUB1cy5pYm0uY29t&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tYThlMWY1MDRhMjNmMjRiNjFjZjg5Y2UwOWE4ZDM2Y2IwMjJhZWUwZg&ctz=America/Los_Angeles&hl=en&es=0) is on the community calendar.","username":"swetha","ts":"2019-04-16T17:18:05.584Z"}
{"msg":"@swetha do you have power here? I have no special rocket-chat perms","username":"MHBauer","ts":"2019-04-16T17:20:52.252Z"}
{"msg":"I don't think I have power, but what were you thinking? I can try","username":"swetha","ts":"2019-04-16T17:29:31.762Z"}
{"msg":"","username":"swetha","ts":"2019-04-16T17:30:06.113Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"YOU HAVE THE POWAH!","username":"MHBauer","ts":"2019-04-16T17:47:27.279Z"}
{"msg":"Hello!   Is there any  roadmap for a fab3 proxy development?  Is there a milestone for a compatibility with web3(j,js,py) client library ?   Thank you/","username":"fastchain","ts":"2019-04-17T03:45:11.949Z"}
{"msg":"there is a call today at 11 am ET Event URL: https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW0gc3JlcGFrdUB1cy5pYm0uY29t&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tYThlMWY1MDRhMjNmMjRiNjFjZjg5Y2UwOWE4ZDM2Y2IwMjJhZWUwZg&ctz=America/Los_Angeles&hl=en&es=0","username":"cbf","ts":"2019-04-17T12:49:22.724Z"}
{"msg":"@here evm release plan meeting starts: https://zoom.us/j/6223336701 ","username":"guoger","ts":"2019-04-17T15:03:21.358Z"}
{"msg":"From the discussion in the EVM call:\nour repo: https://github.com/hyperledger/fabric-chaincode-evm\nworkshop: https://youtu.be/N_ulmO2-xZQ & https://youtu.be/W4HHeM61CbY","username":"swetha","ts":"2019-04-17T15:58:45.655Z"}
{"msg":"posted the recording on the meeting page","username":"cbf","ts":"2019-04-17T16:21:51.383Z"}
{"msg":"@swetha thanks for arranging the call!","username":"MHBauer","ts":"2019-04-17T16:21:53.807Z"}
{"msg":"@cbf thanks for recording and posting!","username":"MHBauer","ts":"2019-04-17T16:22:02.676Z"}
{"msg":"yep","username":"cbf","ts":"2019-04-17T16:22:10.153Z"}
{"msg":"We will be having a monthly meeting to discuss the Fabric EVM: https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW1fUjIwMTkwNTE1VDE1MDAwMCBzcmVwYWt1QHVzLmlibS5jb20&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tMWRmZWExNTRmZTg0MTNlZjU5YTczMDAxNWYwZjc1NTVlMDk0MjY2NA&ctz=America/Los_Angeles&hl=en&es=0","username":"swetha","ts":"2019-04-17T22:03:13.944Z"}
{"msg":"We will be having a monthly meeting to discuss the Fabric EVM: https://calendar.google.com/calendar/event?action=VIEW&eid=NHAwNjJlaXNnc2I3Zmg4OXYyanY3cDlpcW1fUjIwMTkwNTE1VDE1MDAwMCBzcmVwYWt1QHVzLmlibS5jb20&tok=NzIjbGludXhmb3VuZGF0aW9uLm9yZ19uZjl1NjRnOWs5cnZkOWY4dnA0dnVyMjNiMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29tMWRmZWExNTRmZTg0MTNlZjU5YTczMDAxNWYwZjc1NTVlMDk0MjY2NA&ctz=America/Los_Angeles&hl=en&es=0","username":"swetha","ts":"2019-04-17T22:03:13.944Z"}
{"msg":"","username":"swetha","ts":"2019-04-17T22:03:18.808Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=8XwodSaRKDXt4zCY3) @swetha Thanks @swetha For the link","username":"Pradeep_Pentakota","ts":"2019-04-18T01:46:40.385Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=8XwodSaRKDXt4zCY3","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=8XwodSaRKDXt4zCY3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf  Thank you for a link! Unfortunately I was not able to attend due time difference. Could you please share a link to th page with a recording? Thank you.\n\n","username":"fastchain","ts":"2019-04-18T04:39:23.908Z"}
{"msg":"Dear all, could you please explain how can I  use few addresses to interact with  contract on the channel?  Manual says \"However we do have a mechanism to generate a user account address from the user's public key. \" Since I'm working with standart(by manuals)  docker setup with few nodes and few organisations, what exactly 'user's public key' means. Is it a key of the node, or something different? Thank you.","username":"fastchain","ts":"2019-04-18T04:48:19.342Z"}
{"msg":"Dear all, is it possible to swith between orgnisation users  in fab3_proxy without restart?","username":"fastchain","ts":"2019-04-18T04:48:19.342Z"}
{"msg":"Dear all, is it possible to switch between orgnisation's users  in fab3_proxy without restart?","username":"fastchain","ts":"2019-04-18T04:48:19.342Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=dZqFvupu8mDjnrnkS) @fastchain https://wiki.hyperledger.org/display/fabric/2019-07+July+Release+Planning contains meeting data and the recording","username":"MHBauer","ts":"2019-04-18T13:25:48.115Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=dZqFvupu8mDjnrnkS","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=dZqFvupu8mDjnrnkS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=QHcEsRFD7a7F8DtyS) @fastchain no. although multiple instances can run at the same time","username":"MHBauer","ts":"2019-04-18T13:26:50.807Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=QHcEsRFD7a7F8DtyS","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=QHcEsRFD7a7F8DtyS","remote":true,"fileId":null,"fileName":null}]}
{"msg":" I updated the meeting page with notes from during the meeting: https://wiki.hyperledger.org/display/fabric/2019-07+July+Release+Planning\n\n \n","username":"MHBauer","ts":"2019-04-18T17:17:47.323Z"}
{"msg":"rebasing https://gerrit.hyperledger.org/r/#/c/29149/ soon","username":"MHBauer","ts":"2019-04-19T02:16:14.385Z"}
{"msg":"@MHBauer  Thank you for this links. \nRight now I'm figuring out how to use fabric-evm to speed up state transitions in contracts for local groups (advanced state channels). \nfabric-evm looks like best available option to achieve this. But there is som lack of APIs, which I'm developing by myself.\n Since you have \"Truffle support\" and \"web3.py\" in your  plans may be we can collaborate somehow? I can push commits for review.","username":"fastchain","ts":"2019-04-19T03:04:18.053Z"}
{"msg":"I don't understand, but communication channels are open here if you have some ideas. We'd want to make sure we're all on the same page before you start working.","username":"MHBauer","ts":"2019-04-19T04:02:59.480Z"}
{"msg":"@MHBauer \n\n> We'd want to make sure we're all on the same page before you start working.\nHow can I help with this?\n\n\n>I don't understand, but communication channels are open here if you have some ideas.\nwhat exactly should be explained?\n","username":"fastchain","ts":"2019-04-19T05:53:36.412Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=PSR6Knce8nCgCLXbW) @fastchain I cannot understand this either... in particular, i'd appreciate if you could elaborate on:\n- state transition\n- local groups (advanced state channel)\n- lack of APIs\n(obviously all in the context of fabric and evm chaincode)","username":"guoger","ts":"2019-04-19T07:17:51.352Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=PSR6Knce8nCgCLXbW","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=PSR6Knce8nCgCLXbW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hello , when i try to deploy two smart contracts and make interactions between both of them, using import i find that the \"import\" option not yet implemented ! ","username":"Khaled.MH","ts":"2019-04-19T10:57:01.772Z"}
{"msg":"@guoger \n\"state transition\" - many transactions. For example: we have ERC20 contract where few holders(from 2 to 10) create  too much transactions (it means main chain can't handle needed tnx/s rate) of operations between each other. So they can setup there's own HL network, transfer tokens with bridge service ( interledger or swaps), process transactions with acceptable speed and then  write the  final  settlement on the  mainchain  (using same bridges).\n\n \"local groups\" - group of token holders who needs speedy transactions. \n\n\"lack of APIs\" -  when I try to send transactions with web3py, it tries to read block Gas Limit (to check if transaction acceptable ), but there is no such field in GetBlock API, so I have to patch  fab3proxy to make it work.  Truffle also doesn't  work \"from the box\".  (what's happen there I've not researched yet,  I can't  debug JS fast ) and so on ","username":"fastchain","ts":"2019-04-19T11:12:10.574Z"}
{"msg":"@guoger \n\"state transition\" - many transactions. For example: we have ERC20 contract where few holders(from 2 to 10) create  too much transactions (it means main chain can't handle needed tnx/s rate) between each other. So they can setup there's own HL network, transfer tokens with bridge service ( interledger or swaps), process transactions with acceptable speed and then  write the  final  settlement on the  mainchain  (using same bridges).\n\n \"local groups\" - group of token holders who needs speedy transactions. \n\n\"lack of APIs\" -  when I try to send transactions with web3py, it tries to read block Gas Limit (to check if transaction acceptable ), but there is no such field in GetBlock API, so I have to patch  fab3proxy to make it work.  Truffle also doesn't  work \"from the box\".  (what's happen there I've not researched yet,  I can't  debug JS fast ) and so on ","username":"fastchain","ts":"2019-04-19T11:12:10.574Z"}
{"msg":"@guoger \n\"state transition\" - many transactions. For example: we have ERC20 contract where few holders(from 2 to 10) create  too much transactions (it means main chain can't handle needed tnx/s rate) between each other. So they can setup there's own HL network, transfer tokens with bridge service ( interledger or swaps), process transactions with acceptable speed and then  write the  final  settlement on the  mainchain  (using same bridges) . By main chain I mean main Ethereum chain with POW \n\n \"local groups\" - group of token holders who needs speedy transactions. \n\n\"lack of APIs\" -  when I try to send transactions with web3py, it tries to read block Gas Limit (to check if transaction acceptable ), but there is no such field in GetBlock API, so I have to patch  fab3proxy to make it work.  Truffle also doesn't  work \"from the box\".  (what's happen there I've not researched yet,  I can't  debug JS fast ) and so on ","username":"fastchain","ts":"2019-04-19T11:12:10.574Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=KxbuDepSF2KyMh4pp) @Khaled.MH I am not familiar with import, is that an opcode?","username":"MHBauer","ts":"2019-04-19T15:29:35.856Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=KxbuDepSF2KyMh4pp","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=KxbuDepSF2KyMh4pp","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer import it's an option to interact a second smart contract  import \"SecondSmartContract.sol\"\nimport statements that are very similar to those available in JavaScript ","username":"Khaled.MH","ts":"2019-04-19T16:31:25.155Z"}
{"msg":"@fastchain \n1.  ERC20 should work. I'm not aware of the txn rate limits based on how the contracts are written. Fabric should go as fast as consensus occurs, which isn't POW based.\n2. \n3. ","username":"MHBauer","ts":"2019-04-19T16:34:30.221Z"}
{"msg":"@fastchain \n1.  ERC20 should work. I'm not aware of the txn rate limits based on how the contracts are written. Fabric should go as fast as consensus occurs, which isn't POW based.\n2. neat\n3. we have blockbynumber. it'd be nice to hear about the apis you need so we can press forward and maybe integrate some of your work. truffle support is a current goal, we're not 100% there yet. ","username":"MHBauer","ts":"2019-04-19T16:34:30.221Z"}
{"msg":"@fastchain We don't have truffle support yet as @MHBauer said. We are working towards that. In regards to GetBlock, can you look at this jira I have created for your issue https://jira.hyperledger.org/browse/FAB-15233. Please attach logs and relevant code bits from web3.py that you think are relevant. If you have a fix you would like to submit please submit under this Jira, we would love the help!","username":"swetha","ts":"2019-04-19T19:30:24.687Z"}
{"msg":"@fastchain We don't have truffle support yet as @MHBauer said. We are working towards that and have JIRAs open outlining what needs to be added to get that support. In regards to GetBlock, can you look at this jira I have created for your issue https://jira.hyperledger.org/browse/FAB-15233. Please attach logs and relevant code bits from web3.py that you think are relevant. If you have a fix you would like to submit please submit under this Jira, we would love the help!","username":"swetha","ts":"2019-04-19T19:30:24.687Z"}
{"msg":"@Khaled.MH Import should work. We have tested previously. It is a solidity concept and the compiler should be dealing with the import. Fab3/EVMCC only deal with the compiled bytecode. Can you send us the sample code and a way to reproduce the error? If possible it would be great if you can open a JIRA: https://jira.hyperledger.org/projects/FAB/issues/FAB-11237?filter=allopenissues with all that information","username":"swetha","ts":"2019-04-19T19:33:00.186Z"}
{"msg":"Has joined the channel.","username":"PallabPaul","ts":"2019-04-22T03:47:07.743Z","type":"uj"}
{"msg":"@swetha  hello! since I can't comment https://jira.hyperledger.org/browse/FAB-1523 (I don't have an account), how can  submit a comments? Is it OK to use github issues? ","username":"fastchain","ts":"2019-04-22T08:49:54.371Z"}
{"msg":"@fastchain, We don't use Github issues. They will be automatically closed if opened. For Jira you need a linux foundation account. If you already have one you can use that to login ","username":"swetha","ts":"2019-04-22T15:42:21.899Z"}
{"msg":"You will need a Linux Foundation ID to submit changes and PRs","username":"swetha","ts":"2019-04-22T15:43:40.384Z"}
{"msg":"> \"state transition\" - many transactions. For example: we have ERC20 contract where few holders(from 2 to 10) create too much transactions (it means main chain can't handle needed tnx/s rate) between each other. So they can setup there's own HL network, transfer tokens with bridge service ( interledger or swaps), process transactions with acceptable speed and then write the final settlement on the mainchain (using same bridges) . By main chain I mean main Ethereum chain with POW \nlightning network of some sort, implemented with Fabric?","username":"guoger","ts":"2019-04-22T15:56:07.982Z"}
{"msg":"@guoger  hi! not lightning yet (but it's also possible), but more like interledger","username":"fastchain","ts":"2019-04-23T05:13:19.048Z"}
{"msg":"Has joined the channel.","username":"AkilaVasanthakumar","ts":"2019-04-23T06:01:16.985Z","type":"uj"}
{"msg":"@swetha  hello!\nIt looks there is a bug in response on eth_gettransactionreceipt\n\n\nPOST / HTTP/1.1\nHost: 127.0.0.1:5000\nUser-Agent: python-requests/2.21.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 148\n\n{\"jsonrpc\": \"2.0\", \"method\": \"eth_getTransactionReceipt\", \"params\": [\"0x29e61ce83fda0e791744050b305876b67b9a810440acfe7c0b3e12b93466f44c\"], \"id\": 7}HTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\nX-Content-Type-Options: nosniff\nDate: Tue, 23 Apr 2019 08:38:31 GMT\nContent-Length: 383\n\n{\"jsonrpc\":\"2.0\",\"result\":{\"transactionHash\":\"0x29e61ce83fda0e791744050b305876b67b9a810440acfe7c0b3e12b93466f44c\",\"transactionIndex\":\"0x0\",\"blockHash\":\"0xf157191f07683ceaccda1d4f40daa0f4bcd9a835137c4c9dad9285d357620a02\",\"blockNumber\":\"0x24b\",\"contractAddress\":\"\",\"gasUsed\":0,\"cumulativeGasUsed\":0,\"to\":\"0x734138f6316c9eE4662A1FC562d20dbb3cd848fb\",\"logs\":null,\"status\":\"0x1\"},\"id\":7}\n\naccrording to \nhttps://github.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactionreceipt\n\ncontractAddress should be null if not created (as logs in this example). \n","username":"fastchain","ts":"2019-04-23T08:46:13.733Z"}
{"msg":"@swetha  hello!\nIt looks like there is a bug in response on eth_gettransactionreceipt\n\n\nPOST / HTTP/1.1\nHost: 127.0.0.1:5000\nUser-Agent: python-requests/2.21.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 148\n\n{\"jsonrpc\": \"2.0\", \"method\": \"eth_getTransactionReceipt\", \"params\": [\"0x29e61ce83fda0e791744050b305876b67b9a810440acfe7c0b3e12b93466f44c\"], \"id\": 7}HTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\nX-Content-Type-Options: nosniff\nDate: Tue, 23 Apr 2019 08:38:31 GMT\nContent-Length: 383\n\n{\"jsonrpc\":\"2.0\",\"result\":{\"transactionHash\":\"0x29e61ce83fda0e791744050b305876b67b9a810440acfe7c0b3e12b93466f44c\",\"transactionIndex\":\"0x0\",\"blockHash\":\"0xf157191f07683ceaccda1d4f40daa0f4bcd9a835137c4c9dad9285d357620a02\",\"blockNumber\":\"0x24b\",\"contractAddress\":\"\",\"gasUsed\":0,\"cumulativeGasUsed\":0,\"to\":\"0x734138f6316c9eE4662A1FC562d20dbb3cd848fb\",\"logs\":null,\"status\":\"0x1\"},\"id\":7}\n\naccrording to \nhttps://github.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactionreceipt\n\ncontractAddress should be null if not created (as logs in this example). \n","username":"fastchain","ts":"2019-04-23T08:46:13.733Z"}
{"msg":"Has joined the channel.","username":"ahmedahmed","ts":"2019-04-23T09:20:25.839Z","type":"uj"}
{"msg":"hi i'm using the evm with fabric and trying to interact with deployed smart contracts using the web3 library i just built a very simple smart contract with a feature to return the sender's address like that \n   function test() view public returns(address){\n       return msg.sender;\n   }\nit's working fine but what i don't understand is the address i'm getting in return i never set that address and i don't know from where it's coming can anyone explain that to me and how i can change that address to set addresses i know and want to receive transactions from  ","username":"ahmedahmed","ts":"2019-04-23T09:24:59.391Z"}
{"msg":"@ahmedahmed  are you calling test() method or sendiing transaction?","username":"fastchain","ts":"2019-04-23T09:38:02.095Z"}
{"msg":"could you please show sa JS code","username":"fastchain","ts":"2019-04-23T09:39:05.458Z"}
{"msg":"@swetha  unfortunately I don't have a linux foundation account. And I don't know how to get.\n@MHBauer \nAbout web3py: I've created small routing proxy, to solve two problems:\n1. Support of multiple accounts in one web3py instance. (the cluster of fab3 proxies is transparent for a client script)\n2. To  fix easely  bugs in fab3 RPC without changing fab3proxy code (since I have no access anyway) .\n\nhttps://github.com/fastchain/fabric-chaincode-evm/blob/web3py/fab3/fab3_tooling/fab3py/router.py\n","username":"fastchain","ts":"2019-04-23T09:48:40.636Z"}
{"msg":"@MHBauer  @swetha  unfortunately I don't have a linux foundation account. And I don't know how to get.\n\nAbout web3py: I've created small routing proxy, to solve two problems:\n1. Support of multiple accounts in one web3py instance. (the cluster of fab3 proxies is transparent for a client script)\n2. To  fix easely  bugs in fab3 RPC without changing fab3proxy code (since I have no access anyway) .\n\nhttps://github.com/fastchain/fabric-chaincode-evm/blob/web3py/fab3/fab3_tooling/fab3py/router.py\n","username":"fastchain","ts":"2019-04-23T09:48:40.636Z"}
{"msg":"here is my code in the js ","username":"ahmedahmed","ts":"2019-04-23T09:50:41.726Z"}
{"msg":"router.get('/test',function (req, res, next) {\n\tvar web3 = new Web3();\n\tweb3.setProvider(new web3.providers.HttpProvider(\"http://192.168.247.129:5000\"));\n\tweb3.eth.defaultAccount ='0xf6209a59e758c23c7fc24ddf8ee049d9f92d72a8';\n\tconsole.log(web3.eth.defaultAccount);\n\tvar LoyaltyContract = web3.eth.contract(static.abiPerscription);\n    myContract = LoyaltyContract.at(static.scAccess);\n    var idsList = myContract.test();\n\tres.json(idsList);\n});\n","username":"ahmedahmed","ts":"2019-04-23T09:50:43.294Z"}
{"msg":"as you can see i set the web3.eth.defaultAccount ='0xf6209a59e758c23c7fc24ddf8ee049d9f92d72a8';\nbut the return result is always 0xa811ae82a805a8fd1eaa153449084e80dafdbb55","username":"ahmedahmed","ts":"2019-04-23T09:51:28.295Z"}
{"msg":"what is the output of web3.eth.listAccounts() ?","username":"fastchain","ts":"2019-04-23T09:52:04.018Z"}
{"msg":"@ahmedahmed \nwhat is the output of web3.eth.listAccounts() ?\n\ntry to define the caller: myContract.test().call({from: web3.eth.defaultAccount}","username":"fastchain","ts":"2019-04-23T09:52:04.018Z"}
{"msg":"i did this \n   mySmartContract.methods.test().call({from:web3.eth.defaultAccount}, (error, result) => {\n        if(error)\n        res.json(\"error\");\n        else\n        res.json(result);\n    });","username":"ahmedahmed","ts":"2019-04-23T09:59:55.439Z"}
{"msg":"but i get that error ","username":"ahmedahmed","ts":"2019-04-23T10:00:02.567Z"}
{"msg":"Given address &quot;&quot; is not a valid Ethereum address","username":"ahmedahmed","ts":"2019-04-23T10:00:14.463Z"}
{"msg":"no idea why i even tried to pass a static one and i got the same error  ","username":"ahmedahmed","ts":"2019-04-23T10:01:17.090Z"}
{"msg":"and web3.eth.listAccounts() wasn't recognized as a function ","username":"ahmedahmed","ts":"2019-04-23T10:02:06.760Z"}
{"msg":"try this web3.eth.accounts","username":"fastchain","ts":"2019-04-23T10:07:58.915Z"}
{"msg":"","username":"ahmedahmed","ts":"2019-04-23T10:14:29.180Z","attachments":[{"type":"file","title":"Clipboard - April 23, 2019 12:14 PM","title_link":"/file-upload/wBy2Bv6JEfTpEsDNK/Clipboard%20-%20April%2023,%202019%2012:14%20PM","image_url":"/file-upload/wBy2Bv6JEfTpEsDNK/Clipboard%20-%20April%2023,%202019%2012:14%20PM","image_type":"image/png","image_size":239052,"url":"/file-upload/wBy2Bv6JEfTpEsDNK/Clipboard%20-%20April%2023,%202019%2012:14%20PM","remote":false,"fileId":"wBy2Bv6JEfTpEsDNK","fileName":"Clipboard - April 23, 2019 12:14 PM"}]}
{"msg":"","username":"ahmedahmed","ts":"2019-04-23T10:14:47.818Z","attachments":[{"type":"file","title":"Clipboard - April 23, 2019 12:14 PM","title_link":"/file-upload/M6qZSTBLpMbFJRvjW/Clipboard%20-%20April%2023,%202019%2012:14%20PM","image_url":"/file-upload/M6qZSTBLpMbFJRvjW/Clipboard%20-%20April%2023,%202019%2012:14%20PM","image_type":"image/png","image_size":246361,"url":"/file-upload/M6qZSTBLpMbFJRvjW/Clipboard%20-%20April%2023,%202019%2012:14%20PM","remote":false,"fileId":"M6qZSTBLpMbFJRvjW","fileName":"Clipboard - April 23, 2019 12:14 PM"}]}
{"msg":"i think that i need to create the new account this way before using it : web3.eth.personal.newAccount(password, [callback])\n","username":"ahmedahmed","ts":"2019-04-23T11:03:18.808Z"}
{"msg":"but still i have this error \nUnhandledPromiseRejectionWarning: Error: Node error: {\"code\":-32000,\"message\":\"rpc: can't find service \\\"personal.NewAccount\\\"\",\"data\":null}","username":"ahmedahmed","ts":"2019-04-23T11:04:35.634Z"}
{"msg":"any idea why ?","username":"ahmedahmed","ts":"2019-04-23T11:04:47.090Z"}
{"msg":"@ahmedahmed \n\nit's not implemented\nhttps://github.com/hyperledger/fabric-chaincode-evm/blob/master/Fab3_Instructions.md","username":"fastchain","ts":"2019-04-23T11:34:26.719Z"}
{"msg":"the only available key is deriveted from the user's certificate (private part) which is generated for hyperledger network  ","username":"fastchain","ts":"2019-04-23T11:35:31.754Z"}
{"msg":"Has left the channel.","username":"silliman","ts":"2019-04-23T14:26:54.159Z","type":"ul"}
{"msg":"Has left the channel.","username":"silliman","ts":"2019-04-23T14:26:59.031Z","type":"ul"}
{"msg":"do you have a document that includes all the solidity implemented features so that i can know which ones are to use and which to avoid \nplease ","username":"ahmedahmed","ts":"2019-04-23T15:33:01.706Z"}
{"msg":"@fastchain this links to the information to make a linuxfoundation account https://hyperledger-fabric.readthedocs.io/en/release-1.4/Gerrit/lf-account.html#creating-a-linux-foundation-id\nwhat's needed to sign in to rocket chat? I use a lf account I think, but I suppose it could only be email","username":"MHBauer","ts":"2019-04-23T15:45:21.182Z"}
{"msg":"oh whoa, I'm way behind","username":"MHBauer","ts":"2019-04-23T15:45:32.648Z"}
{"msg":"@ahmedahmed details in https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Fab3_Instructions.md#eth_accounts should explain the details behind accounts.","username":"MHBauer","ts":"2019-04-23T15:48:04.574Z"}
{"msg":"the short version is, the account is generated from the fabric keys, and there's no way to give an account as an argument. ","username":"MHBauer","ts":"2019-04-23T15:48:47.990Z"}
{"msg":"@MHBauer  Thank you!","username":"fastchain","ts":"2019-04-24T05:42:17.561Z"}
{"msg":"@guoger  @MHBauer @swetha  \nHello!\nI have a contract which can create different contract, and when I'm calling contract creation method I recieve this:\nPOST / HTTP/1.1\nHost: 127.0.0.1:5000\nUser-Agent: python-requests/2.21.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 249\n\n{\"jsonrpc\": \"2.0\", \"id\": 34, \"method\": \"eth_call\", \"params\": [{\"from\": \"0xBa3e5697A84905B7A34A3855F7E609196878F46B\", \"gas\": \"0x3d0900\", \"gasPrice\": \"0x174876e800\", \"to\": \"0x40b5ee1c640509ec975c651b41993e2183df11ae\", \"data\": \"0xa1ee8c78\"}, \"latest\"]}HTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\nX-Content-Type-Options: nosniff\nDate: Wed, 24 Apr 2019 05:40:15 GMT\nContent-Length: 459\n\n{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"Failed to query the ledger: Transaction processing for endorser [peer0.org1.example.com:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: Account/contract 40B5EE1C640509EC975C651B41993E2183DF11AE does not have permission createContract\\nStack trace: [state.go:97 vm.go:105 vm.go:748 vm.go:167 vm.go:141 evmcc.go:165 handler.go:273 asm_amd64.s:2361]\",\"data\":null},\"id\":34}\n","username":"fastchain","ts":"2019-04-24T05:44:26.943Z"}
{"msg":"@guoger  @MHBauer @swetha  \nHello!\nI have a contract which can create different contract, and when I'm calling contract creation method I get this:\n\n-----\nPOST / HTTP/1.1\nHost: 127.0.0.1:5000\nUser-Agent: python-requests/2.21.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 249\n\n{\"jsonrpc\": \"2.0\", \"id\": 34, \"method\": \"eth_call\", \"params\": [{\"from\": \"0xBa3e5697A84905B7A34A3855F7E609196878F46B\", \"gas\": \"0x3d0900\", \"gasPrice\": \"0x174876e800\", \"to\": \"0x40b5ee1c640509ec975c651b41993e2183df11ae\", \"data\": \"0xa1ee8c78\"}, \"latest\"]}\n\n-----------\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\nX-Content-Type-Options: nosniff\nDate: Wed, 24 Apr 2019 05:40:15 GMT\nContent-Length: 459\n\n{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"Failed to query the ledger: Transaction processing for endorser [peer0.org1.example.com:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: Account/contract 40B5EE1C640509EC975C651B41993E2183DF11AE does not have permission createContract\\nStack trace: [state.go:97 vm.go:105 vm.go:748 vm.go:167 vm.go:141 evmcc.go:165 handler.go:273 asm_amd64.s:2361]\",\"data\":null},\"id\":34}\n\n\nIs it possible somehow to enable contracts creation? \nThanks!","username":"fastchain","ts":"2019-04-24T05:44:26.943Z"}
{"msg":"@fastchain is it possible to get an example contract that does this? I've not done that before.","username":"MHBauer","ts":"2019-04-24T18:16:32.721Z"}
{"msg":"@fastchain We currently don't allow for contracts to create other contracts. We have only allowed contract to contract invocations","username":"swetha","ts":"2019-04-24T19:23:48.525Z"}
{"msg":"Can you explain more about the use case? We have started with the approach to be more limiting and loosen restrictions, so we are willing to make changes, but do need some feedback as why this is a feature we should support","username":"swetha","ts":"2019-04-24T19:25:52.087Z"}
{"msg":"@swetha   hello!\nIn may case I have multiple participants who manages different instances of the same smart contract.All this contracts are linked with each other ( for token exchange operations), so it's critical to guarantee, that each contract doesn't have any backdoors or patches. And the most convenient way to achieve this is to use \"contract-producer\" which can create different instances of the same smart contract .  Does it makes sense?\n\nby the way, if i'll just disable the security check in the sources, will it make a trick? Or there is some deeper impact is needed?\nThank you!\n\n@MHBauer \nhttps://solidity.readthedocs.io/en/v0.4.21/control-structures.html#creating-contracts\n","username":"fastchain","ts":"2019-04-25T04:09:47.615Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=MLC4v6RskawhPpeQ8) @fastchain The code change on our side is simple. But we have to think about how to make the contract creation permission configurable. The enforcement happens in the Burrow code not the evm","username":"swetha","ts":"2019-04-25T04:41:45.891Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=MLC4v6RskawhPpeQ8","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=MLC4v6RskawhPpeQ8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@fastchain The code change on our side is simple. But we have to think about how to make the contract creation permission configurable. The enforcement happens in the Burrow of evm code not the evmcc","username":"swetha","ts":"2019-04-25T04:41:45.891Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=MLC4v6RskawhPpeQ8","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=MLC4v6RskawhPpeQ8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"And thanks for giving that use case ","username":"swetha","ts":"2019-04-25T04:43:16.072Z"}
{"msg":"Has joined the channel.","username":"klkumar369","ts":"2019-04-25T05:58:15.395Z","type":"uj"}
{"msg":"@swetha \n>The code change on our side is simple. \n\nWhere and what should be changed ? (I need this info for tests)\nI've already tried  to add permissions here  https://github.com/hyperledger/fabric-chaincode-evm/blob/6404c8dc4455f63200e190b02b21f8e5f402c966/evmcc/evmcc.go#L33\nand then reinstall the evmcc with (after network restart)\n\npeer chaincode install -n evmcc -l golang -v 0 -p github.com/hyperledger/fabric-chaincode-evm/evmcc\n\nbut with no luck :slight_frown:","username":"fastchain","ts":"2019-04-25T06:19:35.504Z"}
{"msg":"that looks like the right place. if you have some tests you can share, it would help us understand what to look at and debug.","username":"MHBauer","ts":"2019-04-25T08:14:22.413Z"}
{"msg":"@MHBauer \n\nI've started a fabric/fabric-samples/first-network (in docker).  And then I map my  version of evmcc sources into  container:\n\nroot@ff2056688976:~# grep createContract /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/evmcc/evmcc.go\nconst ContractPermFlags = permission.Call | permission.Send | createContract\n\n\nafter this I install  evmcc chaincode: \n\npeer chaincode install -n evmcc -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc\n\nAnd then I do this:\n\npeer chaincode instantiate -n evmcc -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem","username":"fastchain","ts":"2019-04-25T10:01:43.399Z"}
{"msg":"@MHBauer \n\nI've started a fabric/fabric-samples/first-network (in docker).  And then I map my  version of evmcc sources into  container:\n\nroot@ff2056688976:~# grep createContract /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/evmcc/evmcc.go\nconst ContractPermFlags = permission.Call | permission.Send | permission.CreateContract\n\n\nafter this I install  evmcc chaincode: \n\npeer chaincode install -n evmcc -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc\n\nAnd then I do this:\n\npeer chaincode instantiate -n evmcc -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem","username":"fastchain","ts":"2019-04-25T10:01:43.399Z"}
{"msg":"if you need more details please ask. ","username":"fastchain","ts":"2019-04-25T10:01:56.519Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=KaKsS8EAxDir4qDFc) @swetha FWIW, it's an **extremely** common pattern in EVM land to leverage \"factory\" contracts which are contracts that create other contracts. the children contracts are often treated as individual \"objects\" within the chain. as @fastchain says, this also gives assurance about the included code.","username":"compleatang","ts":"2019-04-25T11:46:58.969Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=KaKsS8EAxDir4qDFc","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=KaKsS8EAxDir4qDFc","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi everyone i need help","username":"AhmedRebai","ts":"2019-04-25T13:49:16.540Z"}
{"msg":"i'm getting this error when i'm deploying my smart contract ","username":"AhmedRebai","ts":"2019-04-25T13:49:31.368Z"}
{"msg":"result is{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"rpc: can't find method \\\"eth.NewBlockFilter\\\"\",\"data\":null},\"id\":12}\n","username":"AhmedRebai","ts":"2019-04-25T13:49:46.219Z"}
{"msg":"@AhmedRebai  https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Fab3_Instructions.md","username":"fastchain","ts":"2019-04-25T15:29:09.029Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=txeMumb8qjf69CEHF) @fastchain the actual bytecodes/contracts. I can pull one from the solidity docs if that exactly what you're using. ","username":"MHBauer","ts":"2019-04-25T15:44:33.270Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=txeMumb8qjf69CEHF","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=txeMumb8qjf69CEHF","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=XDHXeu8chrKWE3GYt) @AhmedRebai not implemented, I think newblockfilter is similiar to newfilter, which we are implementing.","username":"MHBauer","ts":"2019-04-25T15:45:16.426Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=XDHXeu8chrKWE3GYt","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=XDHXeu8chrKWE3GYt","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@compleatang thanks! I think now the question is how do tie the permissioning back to something the user can configured. Currently the way the evmcc is setup, it is an all or nothing so we need to look into that","username":"swetha","ts":"2019-04-25T17:34:12.410Z"}
{"msg":"@fastchain The line you have is right. You need to tag on `permission.CreateContract` and possibly `permission.CreateAccount`","username":"swetha","ts":"2019-04-25T17:35:50.246Z"}
{"msg":"Also were you able to create an LFID? As Morgan stated, it should be the same credentials you use to interact with rocket.chat","username":"swetha","ts":"2019-04-25T17:37:36.151Z"}
{"msg":"I created a jira to track this issue: https://jira.hyperledger.org/browse/FAB-15280","username":"swetha","ts":"2019-04-25T17:46:02.593Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=jit3npHiJ8tGRM4PL) @fastchain Sorry, I missed this message earlier. Made a JIRA to track this: https://jira.hyperledger.org/browse/FAB-15281","username":"swetha","ts":"2019-04-25T17:53:32.226Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=jit3npHiJ8tGRM4PL","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=jit3npHiJ8tGRM4PL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@fastchain I did a quick check, adding `permission.CreateContract` to https://github.com/hyperledger/fabric-chaincode-evm/blob/6404c8dc4455f63200e190b02b21f8e5f402c966/evmcc/evmcc.go#L33 allows contract to contract creation. For reference I tested against this contract: https://solidity.readthedocs.io/en/v0.5.7/contracts.html#creating-contracts. Above you had `createContract`. Not sure if that is the exact code you added, but if it is that probably is your error. If that is not it, can you send us sample contracts so we can investigate further","username":"swetha","ts":"2019-04-26T02:57:06.961Z"}
{"msg":"@fastchain The fix I mentioned about should solve the contract creation problem. However I don't think the new contract address can be relayed back to the user yet","username":"swetha","ts":"2019-04-26T03:23:33.290Z"}
{"msg":"I think the contract creating thingy has to store the new addresses.","username":"MHBauer","ts":"2019-04-26T03:27:14.422Z"}
{"msg":"That would be my guess, but remix showed me something different with the vm","username":"swetha","ts":"2019-04-26T03:40:02.023Z"}
{"msg":"That was what I thought, but remix showed me something different with the vm","username":"swetha","ts":"2019-04-26T03:40:02.023Z"}
{"msg":"Okay, confirmed that should be the case with geth","username":"swetha","ts":"2019-04-26T03:45:24.086Z"}
{"msg":"as reference this is the contract I use to test with: https://solidity.readthedocs.io/en/v0.5.7/contracts.html#creating-contracts","username":"swetha","ts":"2019-04-26T03:45:41.778Z"}
{"msg":"@swetha I've added *permission.CreateAccount* but with no luck - the behaviour is the same.","username":"fastchain","ts":"2019-04-26T04:08:37.810Z"}
{"msg":"@swetha  I've successfully logged in to Jira, thanks for clarification about the LFID.","username":"fastchain","ts":"2019-04-26T04:17:28.178Z"}
{"msg":"@fastchain and in combination with CreateAccount ","username":"MHBauer","ts":"2019-04-26T04:20:34.084Z"}
{"msg":"?","username":"MHBauer","ts":"2019-04-26T04:20:36.772Z"}
{"msg":"oh nevermind","username":"MHBauer","ts":"2019-04-26T04:21:00.457Z"}
{"msg":"issue was updated, I'll wait for a patch to think about it.","username":"MHBauer","ts":"2019-04-26T04:21:19.801Z"}
{"msg":"@MHBauer \nthis is my permissions setup in evmcc.go \n\nconst ContractPermFlags = permission.Call | permission.Send | permission.CreateContract | permission.CreateAccount","username":"fastchain","ts":"2019-04-26T04:23:36.781Z"}
{"msg":"@MHBauer  @swetha \n\nI have a feeling I'm doing something wrong because  even I  cut permissions with const ContractPermFlags = permission.Call in evmcc.go \nand restart the network (I install evmcc with *peer chaincode install -n evmcc -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc* ) I can still create transactions and deploy contracts.  What could be missing?","username":"fastchain","ts":"2019-04-26T04:42:06.149Z"}
{"msg":"You don't need permission.CreateAccount, just the permission.createContract","username":"swetha","ts":"2019-04-26T04:46:25.363Z"}
{"msg":"Did you instantiate the evmcc? Do you have multiple versions of the evmcc installed?","username":"swetha","ts":"2019-04-26T04:47:51.525Z"}
{"msg":"@fastchain ","username":"swetha","ts":"2019-04-26T04:47:53.673Z"}
{"msg":"I perform following steps:\n1. I setup the new netwoek with* ./byfn.sh up*  (https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/byfn.sh)\n2. then a attach to *cli* container with *docker exec -it cli bash*","username":"fastchain","ts":"2019-04-26T05:01:29.945Z"}
{"msg":"@swetha  I perform the following steps:\n1. I setup the new netwoek with* ./byfn.sh up*  (https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/byfn.sh)\n2. then a attach to *cli* container with *docker exec -it cli bash*\n3. install evmcc  *peer chaincode install -n evmcc -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc*     fastchain/fabric-chaincode-evm/evmcc - patched code\n4.peer chaincode instantiate -n evmcc -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n\n5. running cluster of fab3 proxys \n\nFAB3_CCID=\"evmcc\" FAB3_CHANNEL=\"mychannel\" FAB3_CONFIG=\"/opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/working.yaml\" FAB3_ORG=\"org2\" FAB3_PORT=\"5000\" FAB3_USER=\"User1\" /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/bin/fab3 &\nFAB3_CCID=\"evmcc\" FAB3_CHANNEL=\"mychannel\" FAB3_CONFIG=\"/opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/working.yaml\" FAB3_ORG=\"org2\" FAB3_PORT=\"5001\" FAB3_USER=\"User2\" /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/bin/fab3 &\n....\n\n6.the start my tests which ends up with an exception","username":"fastchain","ts":"2019-04-26T05:01:29.945Z"}
{"msg":"@swetha  I perform the following steps:\n1. I setup the new netwoek with* ./byfn.sh up*  (https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/byfn.sh)\n2. then a attach to *cli* container with *docker exec -it cli bash*\n3. install evmcc  *peer chaincode install -n evmcc -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc*     fastchain/fabric-chaincode-evm/evmcc - patched code\n4.peer chaincode instantiate -n evmcc -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n\n5. running cluster of fab3 proxys \n\nFAB3_CCID=\"evmcc\" FAB3_CHANNEL=\"mychannel\" FAB3_CONFIG=\"/opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/working.yaml\" FAB3_ORG=\"org2\" FAB3_PORT=\"5000\" FAB3_USER=\"User1\" /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/bin/fab3 &\nFAB3_CCID=\"evmcc\" FAB3_CHANNEL=\"mychannel\" FAB3_CONFIG=\"/opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/working.yaml\" FAB3_ORG=\"org2\" FAB3_PORT=\"5001\" FAB3_USER=\"User2\" /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/bin/fab3 &\n....\n\n6.I start my tests which ends up with an exception","username":"fastchain","ts":"2019-04-26T05:01:29.945Z"}
{"msg":"literally the only part we care about is 6","username":"MHBauer","ts":"2019-04-26T05:18:12.326Z"}
{"msg":"I'm not sure how many ways I can say it","username":"MHBauer","ts":"2019-04-26T05:18:27.996Z"}
{"msg":"but what are you doing in 6","username":"MHBauer","ts":"2019-04-26T05:18:33.254Z"}
{"msg":"@MHBauer  sorry for delay. Since the original smart contracts are the subject of IP, it took time to prepare a test.  I've attached a script to https://jira.hyperledger.org/browse/FAB-15280 ","username":"fastchain","ts":"2019-04-26T06:24:35.533Z"}
{"msg":"@MHBauer  sorry for delay. Since the original smart contracts are the subject of IP, it took time to prepare a test.  I've attached a test script to https://jira.hyperledger.org/browse/FAB-15280 ","username":"fastchain","ts":"2019-04-26T06:24:35.533Z"}
{"msg":"Has joined the channel.","username":"Fias","ts":"2019-04-26T06:49:50.154Z","type":"uj"}
{"msg":"hi i want to know if it's possible to use signed transactions and if yes is it a good idea ?? thanks in advance ","username":"ahmedahmed","ts":"2019-04-26T15:23:59.982Z"}
{"msg":"@ahmedahmed fab3 currently does not allow users to pass through raw transactions that have been signed outside of fab3","username":"swetha","ts":"2019-04-26T16:09:15.686Z"}
{"msg":"thank you but is it going to be integrated in the near future ??","username":"ahmedahmed","ts":"2019-04-26T16:33:22.549Z"}
{"msg":"I don't think near future. We are limited currently by the functionality of the Fabric Go SDK. It is a feature we want to add, possibly later in the year","username":"swetha","ts":"2019-04-26T17:30:09.354Z"}
{"msg":"@fastchain I will take a look at the script, but is it possible to send us the original contract? ","username":"swetha","ts":"2019-04-26T17:39:52.813Z"}
{"msg":"@fastchain I will take a look at the script","username":"swetha","ts":"2019-04-26T17:39:52.813Z"}
{"msg":"This contract works:\n```\npragma solidity ^0.5.0;\n\ncontract SimpleStorage {\n    uint storedData;\n\n    function set(uint x) public {\n        storedData = x;\n    }\n\n    function get() public view returns (uint) {\n        return storedData;\n    }\n}\n\ncontract SimpleStorageCreator {\n    event NewContract(address indexed simpleStorageAddress);\n    function createSimpleStorage() public returns (address simpleStorageAddress){\n        address addr = address(new SimpleStorage());\n        emit NewContract(addr);\n        return addr;\n    }\n}\n```","username":"swetha","ts":"2019-04-26T17:40:17.248Z"}
{"msg":"@fastchain I tested with your contract through remix and the contract creation is successful. Can you send us the changes you made in evmcc.go again?","username":"swetha","ts":"2019-04-26T17:43:19.126Z"}
{"msg":"This is not the cause of the problem, but we don't have a native token in fab3, so you wont be able to do this function \n```\nfunction createAndEndowD(uint arg, uint amount) public payable {\n        // Send ether along with the creation\n        D newD = (new D).value(amount)(arg);\n    }\n```","username":"swetha","ts":"2019-04-26T17:44:31.840Z"}
{"msg":"hmn, maybe that is real root cause for generic failure.","username":"MHBauer","ts":"2019-04-26T19:24:48.970Z"}
{"msg":"what does the failure look like for using ether? is it clear? can we improve that?","username":"MHBauer","ts":"2019-04-26T19:25:08.416Z"}
{"msg":"The failure he is having doesn't have to do with that function. I am able to deploy his contract as is","username":"swetha","ts":"2019-04-26T19:30:10.432Z"}
{"msg":"My guess is that evmcc is not updated on the peer and it is still running the old code","username":"swetha","ts":"2019-04-26T19:30:43.673Z"}
{"msg":"@swetha thanks, Interesting.\n\n>My guess is that evmcc is not updated on the peer and it is still running the old code\n\nI'm not an expert in HL deployment, how can I make sure I'm using patched version of evmmc? Thanks.","username":"fastchain","ts":"2019-04-27T14:14:43.285Z"}
{"msg":"@fastchain In the cli container what do you get as the output of:\n```\npeer chaincode list - - installed\n```\nand\n```\npeer chaincode list - - instantiated\n```","username":"swetha","ts":"2019-04-27T20:24:45.097Z"}
{"msg":"@fastchain In the cli container what do you get as the output of:\n```\npeer chaincode list -- installed\n```\nand\n```\npeer chaincode list -- instantiated\n```","username":"swetha","ts":"2019-04-27T20:24:45.097Z"}
{"msg":"@fastchain In the cli container what do you get as the output of:\n```\npeer chaincode list --installed\n```\nand\n```\npeer chaincode list --instantiated\n```","username":"swetha","ts":"2019-04-27T20:24:45.097Z"}
{"msg":"@fastchain In the cli container what do you get as the output of:\n```\npeer chaincode list --installed\n```\nand\n```\npeer chaincode list --instantiated\n```","username":"swetha","ts":"2019-04-27T20:24:45.097Z"}
{"msg":"Also are you bringing down the network everytime you make a change in the evmcc? ","username":"swetha","ts":"2019-04-27T20:25:09.130Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=7Kgx6tJMkKEG75prJ) >Also are you bringing down the network everytime you make a change in the evmcc?\nI'm doing this","username":"fastchain","ts":"2019-04-28T11:45:31.192Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=7Kgx6tJMkKEG75prJ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=7Kgx6tJMkKEG75prJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=7Kgx6tJMkKEG75prJ) >Also are you bringing down the network everytime you make a change in the evmcc?\n@swetha  I'm doing this","username":"fastchain","ts":"2019-04-28T11:45:31.192Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=7Kgx6tJMkKEG75prJ","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=7Kgx6tJMkKEG75prJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Have you run `. /byfn.sh down`? In between your tests? ","username":"swetha","ts":"2019-04-28T18:05:05.647Z"}
{"msg":"Have you run `./byfn.sh down`? In between your tests? ","username":"swetha","ts":"2019-04-28T18:05:05.647Z"}
{"msg":"Have you run `. /byfn.sh down`? In between your tests?","username":"swetha","ts":"2019-04-28T18:05:25.600Z"}
{"msg":"Were you able to run the commands I asked? ","username":"swetha","ts":"2019-04-28T18:05:51.331Z"}
{"msg":"@swetha  Hello! Yes, I've run this commands.\n\nPlease see the full log here: https://pastebin.com/RQjcDdi4","username":"fastchain","ts":"2019-04-29T02:40:15.323Z"}
{"msg":"what exactly happening during installation? It looks like there is some builder script which is setup to work with a defined git commit, but not the latest version of the sources. ","username":"fastchain","ts":"2019-04-29T02:54:20.512Z"}
{"msg":"@fastchain The script is for the byfn.sh tutorial. It installs an example chaincode. I doesn't use git to my knowledge. It will install based on what is mounted into the container from the host machine.\n\nIn your script you run fab3 without building. Are you building it outside of the script after your changes? You need to rebuild the binary for the changes to take effect. Also is there a reason you are running fab3 from inside the container?\n\nAnother thing is I notice you are not using the fabric-chaincode-evm source code directly and a fork. Are all the changes just on your fork?","username":"swetha","ts":"2019-04-29T03:33:06.130Z"}
{"msg":"@fastchain The script is for the byfn.sh tutorial. It installs an example chaincode. It doesn't use git to my knowledge. It will install based on what is mounted into the container from the host machine. This should not affect your test.\n\nIn your script you run fab3 without building. Are you building it outside of the script after your changes? You need to rebuild the binary for the changes to take effect. Also is there a reason you are running fab3 from inside the container?\n\nAnother thing is I notice you are not using the fabric-chaincode-evm source code directly and a fork. Are all the changes just on your fork?","username":"swetha","ts":"2019-04-29T03:33:06.130Z"}
{"msg":"Can you run the peer chaincode list commands after you install the evmcc?","username":"swetha","ts":"2019-04-29T03:36:06.728Z"}
{"msg":"And on this line of the script: `cat /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/fab3/netservice.go` can you change that to look at the evmcc.go file?","username":"swetha","ts":"2019-04-29T03:40:45.546Z"}
{"msg":"@swetha  I'm sorry I've confused you. I missed the point that net_version is the part of fab3 proxy, but not evmcc..\n\n>Are you building it outside of the script after your changes? \nNo. So If I change something in evmcc.go, I have to rebuild fab3 proxy as well ?\n\n>Also is there a reason you are running fab3 from inside the container?\nI find it more convenient.\n\n>Another thing is I notice you are not using the fabric-chaincode-evm source code directly and a fork. Are all the changes just on your fork?\nYes, all my changes just in /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm\n\n>Can you run the peer chaincode list commands after you install the evmcc?\n```\nroot@c6d881d9017f:~# peer chaincode list -C mychannel --instantiated\nGet instantiated chaincodes on channel mychannel:\nName: evmcc, Version: 0, Path: github.com/fastchain/fabric-chaincode-evm/evmcc, Escc: escc, Vscc: vscc\nName: mycc, Version: 1.0, Path: github.com/chaincode/chaincode_example02/go/, Escc: escc, Vscc: vscc\nroot@c6d881d9017f:~# peer chaincode list --installed\nGet installed chaincodes on peer:\nName: evmcc, Version: 0, Path: github.com/fastchain/fabric-chaincode-evm/evmcc, Id: b8d176e63c19b5b912b8b5a35462fe7a9ef5c32ce7e0852ef2b631b9391ad5ca\nName: mycc, Version: 1.0, Path: github.com/chaincode/chaincode_example02/go/, Id: e128f70653ac5518820478becd8acf4dd2b24e4e40602a307a84f0ea40871d29\n````\n\n>And on this line of the script: `cat /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/fab3/netservice.go` can you change that to look at the evmcc.go file?\n\nhttps://pastebin.com/NeUG1KnW","username":"fastchain","ts":"2019-04-29T03:56:25.602Z"}
{"msg":"@swetha  I'm sorry I've confused you. I missed the point that net_version is the part of fab3 proxy, but not evmcc..\n\n>Are you building it outside of the script after your changes? \nNo  I don't build it, I use unpatched version. So If I change something in evmcc.go, I have to rebuild fab3 proxy as well ?\n\n>Also is there a reason you are running fab3 from inside the container?\nI find it more convenient.\n\n>Another thing is I notice you are not using the fabric-chaincode-evm source code directly and a fork. Are all the changes just on your fork?\nYes, all my changes just in /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm\n\n>Can you run the peer chaincode list commands after you install the evmcc?\n```\nroot@c6d881d9017f:~# peer chaincode list -C mychannel --instantiated\nGet instantiated chaincodes on channel mychannel:\nName: evmcc, Version: 0, Path: github.com/fastchain/fabric-chaincode-evm/evmcc, Escc: escc, Vscc: vscc\nName: mycc, Version: 1.0, Path: github.com/chaincode/chaincode_example02/go/, Escc: escc, Vscc: vscc\nroot@c6d881d9017f:~# peer chaincode list --installed\nGet installed chaincodes on peer:\nName: evmcc, Version: 0, Path: github.com/fastchain/fabric-chaincode-evm/evmcc, Id: b8d176e63c19b5b912b8b5a35462fe7a9ef5c32ce7e0852ef2b631b9391ad5ca\nName: mycc, Version: 1.0, Path: github.com/chaincode/chaincode_example02/go/, Id: e128f70653ac5518820478becd8acf4dd2b24e4e40602a307a84f0ea40871d29\n````\n\n>And on this line of the script: `cat /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/fab3/netservice.go` can you change that to look at the evmcc.go file?\n\nhttps://pastebin.com/NeUG1KnW","username":"fastchain","ts":"2019-04-29T03:56:25.602Z"}
{"msg":"@swetha  I'm sorry I've confused you. I missed the point that net_version is the part of fab3 proxy, but not evmcc..\n\n>Are you building it outside of the script after your changes? \nNo  I don't build it, I use unpatched version. So If I change something in evmcc.go, I have to rebuild fab3 proxy as well ?\n\n>Also is there a reason you are running fab3 from inside the container?\nI find it more convenient in my setup.  Because of some docker issues  with a network. \n\n>Another thing is I notice you are not using the fabric-chaincode-evm source code directly and a fork. Are all the changes just on your fork?\nYes, all my changes just in /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm\n\n>Can you run the peer chaincode list commands after you install the evmcc?\n```\nroot@c6d881d9017f:~# peer chaincode list -C mychannel --instantiated\nGet instantiated chaincodes on channel mychannel:\nName: evmcc, Version: 0, Path: github.com/fastchain/fabric-chaincode-evm/evmcc, Escc: escc, Vscc: vscc\nName: mycc, Version: 1.0, Path: github.com/chaincode/chaincode_example02/go/, Escc: escc, Vscc: vscc\nroot@c6d881d9017f:~# peer chaincode list --installed\nGet installed chaincodes on peer:\nName: evmcc, Version: 0, Path: github.com/fastchain/fabric-chaincode-evm/evmcc, Id: b8d176e63c19b5b912b8b5a35462fe7a9ef5c32ce7e0852ef2b631b9391ad5ca\nName: mycc, Version: 1.0, Path: github.com/chaincode/chaincode_example02/go/, Id: e128f70653ac5518820478becd8acf4dd2b24e4e40602a307a84f0ea40871d29\n````\n\n>And on this line of the script: `cat /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/fab3/netservice.go` can you change that to look at the evmcc.go file?\n\nhttps://pastebin.com/NeUG1KnW","username":"fastchain","ts":"2019-04-29T03:56:25.602Z"}
{"msg":"I am not sure what is the reason for your error.  My recommendation is to restart docker itself and start fresh","username":"swetha","ts":"2019-04-29T04:16:51.052Z"}
{"msg":"No if you make changes to the evmcc you don't need to rebuild fab3. But if you change anything in the fab3 directory you will have to rebuild.","username":"swetha","ts":"2019-04-29T04:17:18.663Z"}
{"msg":"@fastchain ","username":"swetha","ts":"2019-04-29T04:17:21.703Z"}
{"msg":"@swetha  ok, thank you for your time and efforts! I'll try redo  everything from scratch.","username":"fastchain","ts":"2019-04-29T04:20:04.951Z"}
{"msg":"@swetha  just to make it clear, this is the only line which should be changed in evmcc. go https://github.com/hyperledger/fabric-chaincode-evm/blob/master/evmcc/evmcc.go#L32 . And it's the only change that should  be made?","username":"fastchain","ts":"2019-04-29T05:25:04.909Z"}
{"msg":"@fastchain yes","username":"swetha","ts":"2019-04-29T05:33:19.910Z"}
{"msg":"It is the only change I made","username":"swetha","ts":"2019-04-29T05:33:30.143Z"}
{"msg":"I only needed permission.CreateContract","username":"swetha","ts":"2019-04-29T05:33:53.368Z"}
{"msg":"@swetha  It looks like I've I found a workaround. \nwhen I use evmcc2 instead of evmcc in install and instantiate commands, contract deployment works without exceptions. I don't have an explanation for such behaviour, yet.","username":"fastchain","ts":"2019-04-29T06:04:06.793Z"}
{"msg":"Right now, I'm continuing integration tests and here is next strange issue:\n\n```\nPOST / HTTP/1.1\nContent-Type: application/json\nConnection: keep-alive\nHost: localhost:8080\nUser-Agent: Mozilla/5.0 (Linux x64) node.js/11.14.0 v8/7.0.276.38-node.18\nContent-Length: 232\n\n{\"jsonrpc\":\"2.0\",\"id\":34,\"method\":\"eth_call\",\"params\":[{\"from\":\"0x52485A6876A8D7E70DD5CB2A706B7d909842A57e\",\"gas\":\"0x3d0900\",\"gasPrice\":\"0x174876e800\",\"to\":\"0x81e7a7e1c27221c49666c7b007d79f7553f60a13\",\"data\":\"0xa1ee8c78\"},\"latest\"]}\n\n\nHTTP/1.0 200 OK\nContent-Type: application/json\nContent-Length: 298\nServer: Werkzeug/0.15.2 Python/3.7.3\nDate: Mon, 29 Apr 2019 06:18:55 GMT\n\n{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"Failed to query the ledger: Transaction processing for endorser [peer0.org1.example.com:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted\",\"data\":null},\"id\":34}\n\n```\n\nCould you please tell, where is the the right place to start to debuging.","username":"fastchain","ts":"2019-04-29T06:28:20.455Z"}
{"msg":"@fastchain I am not familiar with that error. It is coming from your smart contract so you need to investigate that. Remember there is no ether/native token in fabric so you have to deploy a token like a ERC 20 contract to use tokens","username":"swetha","ts":"2019-04-29T06:48:02.275Z"}
{"msg":">Remember there is no ether/native token in fabric so you have to deploy a token like a ERC 20 contract to use tokens\n\nI don't use it as well. Is it possible to enable any low level EVM debug output? The function which raises this exception has calls other functions, so the exception could happen in any of them.  Tests for all possible combinations could be a quite  big project. So it's look reasonable  to get  evm traces somehow. ","username":"fastchain","ts":"2019-04-29T07:11:06.641Z"}
{"msg":">Remember there is no ether/native token in fabric so you have to deploy a token like a ERC 20 contract to use tokens\n\nI don't use native tokens. Is it possible to enable any low level EVM debug output? The function which raises this exception has calls other functions, so the exception could happen in any of them.  Tests for all possible combinations could be a quite  big project. So it's look reasonable  to get  evm traces somehow. ","username":"fastchain","ts":"2019-04-29T07:11:06.641Z"}
{"msg":">Remember there is no ether/native token in fabric so you have to deploy a token like a ERC 20 contract to use tokens\n\nI don't use native tokens. Is it possible to enable any low level EVM debug output? The function which raises this exception  calls other functions, so the exception could be raised in any of them.  Tests for all possible combinations could be a quite  big project. So it's look reasonable  to get  evm traces somehow. ","username":"fastchain","ts":"2019-04-29T07:11:06.641Z"}
{"msg":"There is no low level EVM debug at the moment. I have to think how we would do that. Maybe try debugging on remix? It should be using the same instructions","username":"swetha","ts":"2019-04-29T16:21:10.978Z"}
{"msg":"like is said, we don't have too much introspection capabilitiy into the evm. Maybe try a setup of burrow directly to see if the same error occurs with that. I'll grep for the \"revereted\" bits ","username":"MHBauer","ts":"2019-04-29T19:25:36.082Z"}
{"msg":"@MHBauer  got. I'll try to do this.\n\n@swetha  \n>Maybe try debugging on remix? It should be using the same instructions\nI'm using ganache testing framework and ethereum private network and contract doesn't produce exeptions( on both).\n\nI've just accidentally found that ecrecover precompiled smart contract is disabled.\nhttps://github.com/hyperledger/fabric-chaincode-evm/blob/master/vendor/github.com/hyperledger/burrow/execution/evm/native.go#L75\n\nIs it a permanent decision?","username":"fastchain","ts":"2019-04-30T11:19:03.544Z"}
{"msg":"Or it's a question for a #burrow  channel?","username":"fastchain","ts":"2019-04-30T11:23:16.796Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=yvstr9x85WdRTsumg) I've localized the bug. It looks like (not 100% sure) burrow evm doesn't support nested contract deployment.\n\nhere is the code which triggers the bug \nhttps://pastebin.com/anuNT9nX\n\n","username":"fastchain","ts":"2019-04-30T12:47:03.108Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=yvstr9x85WdRTsumg","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=yvstr9x85WdRTsumg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=yvstr9x85WdRTsumg) I've localized the bug. It looks like (not 100% sure) burrow evm doesn't support nested (contract creates contract which creats contruct in constructor) contract deployment.\n\nhere is the code which triggers the bug \nhttps://pastebin.com/anuNT9nX\n\n","username":"fastchain","ts":"2019-04-30T12:47:03.108Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=yvstr9x85WdRTsumg","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=yvstr9x85WdRTsumg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"hi can anyone  share with me an example of how to import or call a smart contract from an other that work with fabric-evm ","username":"ahmedahmed","ts":"2019-04-30T13:58:24.753Z"}
{"msg":"thanks in advance ","username":"ahmedahmed","ts":"2019-04-30T13:58:34.236Z"}
{"msg":"pragma solidity >=0.4.25 <0.6.0;\ncontract Test1 { \n\nfunction doIt() public returns(string memory){\n    return \"test!!!!!!!!!!!!!!\";\n} \n    \n}\n\n\n\n/////////////////////","username":"ahmedahmed","ts":"2019-04-30T14:32:14.141Z"}
{"msg":"pragma solidity >=0.4.25 <0.6.0;\nimport \"./1.sol\";\ncontract Test2 { \n\n    address accessSC = 0xdc04977a2078c8ffdf086d618d1f961b6c546222;\n    Test1 x = Test1(accessSC);\n\n    function doTest() public view returns(string){\n        return x.doIt();\n    }\n    \n    function doTest1() public view returns(string){\n        return \"ok\";\n    }\n    \n}","username":"ahmedahmed","ts":"2019-04-30T14:32:15.937Z"}
{"msg":"here is the code i was trying to do the import with but it's not working and i get this error ","username":"ahmedahmed","ts":"2019-04-30T14:32:56.640Z"}
{"msg":"Error: endorsement failure during query. response: status:500 message:\"failed to execute contract: call error: RETURNDATASIZE not yet implemented\" ","username":"ahmedahmed","ts":"2019-04-30T14:33:38.879Z"}
{"msg":"@ahmedahmed That error is not because of the import. You are using v0.1 and `RETURNDATASIZE` was not implemented in the version of burrow used in that version of the evmcc","username":"swetha","ts":"2019-04-30T15:32:34.819Z"}
{"msg":"@ahmedahmed That error is not because of the import. I am assuming you are using v0.1 since `RETURNDATASIZE` was not implemented in the version of burrow used in that version of the evmcc","username":"swetha","ts":"2019-04-30T15:32:34.819Z"}
{"msg":"It is one of the limitation of that release: https://github.com/hyperledger/fabric-chaincode-evm/blob/release-0.1/release_notes/v0.1.0.md#limitations","username":"swetha","ts":"2019-04-30T15:33:13.398Z"}
{"msg":"You have two options, either use the newer release of the evmcc as it has a newer version of the burrow evm which has that opcode implemented","username":"swetha","ts":"2019-04-30T15:33:59.099Z"}
{"msg":"or use a solidity compiler that is less than or equal to 0.4.21","username":"swetha","ts":"2019-04-30T15:34:27.190Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=ncvdBb3JHLo88CtKA) @fastchain Yes, they are a better channel to ask that question","username":"swetha","ts":"2019-04-30T15:36:37.030Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=ncvdBb3JHLo88CtKA","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=ncvdBb3JHLo88CtKA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=nT8MmzGdjLLtM79he) @fastchain That will help us debug. I saw some of the conversation in the #burrow channel. Does a newer version of burrow fix the issue? From what I remember 0.24.4 to 0.25 should have no changes in the evm, which is why we didn't do an upgrade","username":"swetha","ts":"2019-04-30T15:41:46.377Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=nT8MmzGdjLLtM79he","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=nT8MmzGdjLLtM79he","remote":true,"fileId":null,"fileName":null}]}
{"msg":"can u please share a link for that new version  of evmcc that u know may work ?","username":"ahmedahmed","ts":"2019-04-30T15:52:01.651Z"}
{"msg":"@ahmedahmed https://github.com/hyperledger/fabric-chaincode-evm/releases","username":"swetha","ts":"2019-04-30T16:01:07.133Z"}
{"msg":"Sorry, meant to link this one: https://github.com/hyperledger/fabric-chaincode-evm/releases/tag/v0.2.0","username":"swetha","ts":"2019-04-30T16:01:23.949Z"}
{"msg":"We create a tag for each release so you can do `git checkout v0.2.0`","username":"swetha","ts":"2019-04-30T16:02:32.336Z"}
{"msg":"thanks a lot just one more question  if i pull this git repository : https://github.com/hyperledger/fabric-chaincode-evm would it contain that last version of evmcc ?","username":"ahmedahmed","ts":"2019-04-30T16:14:58.427Z"}
{"msg":"the default branch is master","username":"swetha","ts":"2019-04-30T16:32:34.269Z"}
{"msg":"when you clone a repository you should get all the branches, tags currently on the remote","username":"swetha","ts":"2019-04-30T16:45:31.415Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=22AgYmg6uRH43RoBL) @swetha this is more work than I was thinking. get filters has three types of returns based on the filter type created.","username":"MHBauer","ts":"2019-04-30T19:12:50.396Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=22AgYmg6uRH43RoBL","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=22AgYmg6uRH43RoBL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer can you break it into smaller pieces like how you tackled getLogs?","username":"swetha","ts":"2019-04-30T21:04:57.625Z"}
{"msg":"of course, but the point is it's multiple interacting bits, some of which were not planned.","username":"MHBauer","ts":"2019-04-30T21:16:08.275Z"}
{"msg":"All the filtering is a big piece, at least as i understood it. I was expecting it would take time to get it all in ","username":"swetha","ts":"2019-04-30T21:31:13.853Z"}
{"msg":"Yea, for all filtering. Was hoping to be done with just logs in place.","username":"MHBauer","ts":"2019-04-30T23:43:15.585Z"}
{"msg":"need to re-evaluate some thoughts for blocks and txns ","username":"MHBauer","ts":"2019-04-30T23:43:29.780Z"}
{"msg":"@swetha Hello! how can I use newer version of borrow in evmcc?  Just clone it in fabric-chaincode-evm/vendor/github.com/hyperledger/burrow or something else? thanks.","username":"fastchain","ts":"2019-05-01T03:37:33.940Z"}
{"msg":"you'd have to update the dep, with dep, the program.","username":"MHBauer","ts":"2019-05-01T04:12:34.813Z"}
{"msg":"and then fix everything that breaks","username":"MHBauer","ts":"2019-05-01T04:12:50.379Z"}
{"msg":"and we'd be interested in doing that, or having it eventually, but it's not a priority right now if we don't have a bug or demonstration/test to justify doing so.","username":"MHBauer","ts":"2019-05-01T04:17:02.303Z"}
{"msg":"@fastchain Morgan gave the overview of the process and we would love a patch if you can make one. Did you try the test Casey mentioned against the different versions of Burrow to verify the error? ","username":"swetha","ts":"2019-05-01T05:41:01.146Z"}
{"msg":"@swetha  hello! I've built the most recent version of borrow, the executed the test, but the test has failed. Details are here https://github.com/hyperledger/burrow/pull/1102 ","username":"fastchain","ts":"2019-05-01T06:25:11.462Z"}
{"msg":"@MHBauer  got it.\n>and then fix everything that breaks\ndo you have test set do identify broken?\n","username":"fastchain","ts":"2019-05-01T06:46:45.501Z"}
{"msg":"@MHBauer  got it.\n>and then fix everything that breaks\ndo you have test set to identify broken?\n","username":"fastchain","ts":"2019-05-01T06:46:45.501Z"}
{"msg":"@MHBauer  got it.\n>and then fix everything that breaks\nis there any tests  to identify broken?\n","username":"fastchain","ts":"2019-05-01T06:46:45.501Z"}
{"msg":"@MHBauer  got it.\n>and then fix everything that breaks\nare there any tests  to identify broken?\n","username":"fastchain","ts":"2019-05-01T06:46:45.501Z"}
{"msg":"I mostly mean compilation errors, but if anything deep has changed, it should be very very obvious.","username":"MHBauer","ts":"2019-05-01T18:06:10.062Z"}
{"msg":"`make checks integration-test` should do everything we'll need for a successful checkin","username":"MHBauer","ts":"2019-05-01T18:06:31.934Z"}
{"msg":"@fastchain My recommendation is to first make sure the tests with burrow passes before upgrading it in the evmcc. We want to make sure that the new version of burrow has the fix you need before pulling it in","username":"swetha","ts":"2019-05-01T18:35:30.453Z"}
{"msg":"^that","username":"MHBauer","ts":"2019-05-01T18:37:44.733Z"}
{"msg":"","username":"ahmedahmed","ts":"2019-05-02T18:05:35.562Z","attachments":[{"type":"file","title":"Screenshot from 2019-05-02 11-01-12.png","title_link":"/file-upload/R2nPzMy5YQqFwL6s6/Screenshot%20from%202019-05-02%2011-01-12.png","image_url":"/file-upload/R2nPzMy5YQqFwL6s6/Screenshot%20from%202019-05-02%2011-01-12.png","image_type":"image/png","image_size":360833,"url":"/file-upload/R2nPzMy5YQqFwL6s6/Screenshot%20from%202019-05-02%2011-01-12.png","remote":false,"fileId":"R2nPzMy5YQqFwL6s6","fileName":"Screenshot from 2019-05-02 11-01-12.png"}]}
{"msg":"hi i'm trying to run fab3 i just cloned the latest version of fabric-evm so i run this command \"make fab3\" and it generated a fab3 file but when i run to execute it i get this error can anyone help me with that \n","username":"ahmedahmed","ts":"2019-05-02T18:05:38.501Z"}
{"msg":"you have to give it your sdk config so it can connect to a faric network where the chaincode is running.","username":"MHBauer","ts":"2019-05-02T18:07:33.898Z"}
{"msg":"yeah thanks for your quick answer that was exactly the problem THANK YOU :D","username":"ahmedahmed","ts":"2019-05-02T18:10:30.026Z"}
{"msg":"very welcome","username":"MHBauer","ts":"2019-05-02T18:10:54.707Z"}
{"msg":"hi i'm trying to use events and logs with fabric-evm so i wrote this code to get me the logs but i'm not getting anything back \nvar myEvent = myContract.birthCertifcateEvent({}, {fromBlock: 0, toBlock: 'latest'});\n    myEvent.get((error, response)=>\n    {\n \n          return res.json(response);\n       \n    });","username":"ahmedahmed","ts":"2019-05-03T10:12:25.389Z"}
{"msg":"actually  it just keeps on loading nothing no errors or results ","username":"ahmedahmed","ts":"2019-05-03T10:13:11.321Z"}
{"msg":"","username":"ahmedahmed","ts":"2019-05-03T13:15:45.079Z","attachments":[{"type":"file","title":"Clipboard - May 3, 2019 3:14 PM","title_link":"/file-upload/rNDSpdwDKvDfKqHGy/Clipboard%20-%20May%203,%202019%203:14%20PM","image_url":"/file-upload/rNDSpdwDKvDfKqHGy/Clipboard%20-%20May%203,%202019%203:14%20PM","image_type":"image/png","image_size":254672,"url":"/file-upload/rNDSpdwDKvDfKqHGy/Clipboard%20-%20May%203,%202019%203:14%20PM","remote":false,"fileId":"rNDSpdwDKvDfKqHGy","fileName":"Clipboard - May 3, 2019 3:14 PM"}]}
{"msg":"@ahmedahmed my guess is that the function on the backend is using asynchronous filters on the backend that we don't support yet. Try sending a request for get logs ","username":"swetha","ts":"2019-05-03T15:58:21.322Z"}
{"msg":"In your screenshot lines 11-15 are the indexed topics of your event ","username":"swetha","ts":"2019-05-03T15:59:33.702Z"}
{"msg":"Line 12 should be the keccek sum of your event signature ","username":"swetha","ts":"2019-05-03T16:00:25.286Z"}
{"msg":"Is your screenshot the request or response? ","username":"swetha","ts":"2019-05-03T16:01:40.130Z"}
{"msg":"this screenshot is for  myContract.birthCertifcateEvent({}, {fromBlock: 0, toBlock: 'latest'});","username":"ahmedahmed","ts":"2019-05-03T16:32:11.639Z"}
{"msg":"i tried this \nvar myEvent = myContract.birthCertifcateEvent({}, {fromBlock: 'earliest', toBlock: 'latest'}).get(x=>{});\nres.json(myEvent); \nand as a result i got the following response ","username":"ahmedahmed","ts":"2019-05-03T16:37:53.456Z"}
{"msg":"","username":"ahmedahmed","ts":"2019-05-03T16:38:17.279Z","attachments":[{"type":"file","title":"Clipboard - May 3, 2019 6:38 PM","title_link":"/file-upload/bqmTQjM8s6voWrn2o/Clipboard%20-%20May%203,%202019%206:38%20PM","image_url":"/file-upload/bqmTQjM8s6voWrn2o/Clipboard%20-%20May%203,%202019%206:38%20PM","image_type":"image/png","image_size":245503,"url":"/file-upload/bqmTQjM8s6voWrn2o/Clipboard%20-%20May%203,%202019%206:38%20PM","remote":false,"fileId":"bqmTQjM8s6voWrn2o","fileName":"Clipboard - May 3, 2019 6:38 PM"}]}
{"msg":"i added the call back in the get() because it was required ","username":"ahmedahmed","ts":"2019-05-03T16:39:13.096Z"}
{"msg":"other ways  when u suggested that i send a request for get logs what did u mean exactly sry  because i didn't ","username":"ahmedahmed","ts":"2019-05-03T16:46:04.861Z"}
{"msg":"we think the backend code uses async filters https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_newfilter which aren't supported yet.\nsupported filters for logs is https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getlogs","username":"MHBauer","ts":"2019-05-03T16:54:31.316Z"}
{"msg":"ok  so  it's not possible to get the logs using the web3 library because it's asynchronous  ? ","username":"ahmedahmed","ts":"2019-05-03T17:00:44.428Z"}
{"msg":"not unless you can tune it","username":"MHBauer","ts":"2019-05-03T18:00:29.393Z"}
{"msg":"to use that.","username":"MHBauer","ts":"2019-05-03T18:00:31.883Z"}
{"msg":"otherwise it still needs to be implemented.","username":"MHBauer","ts":"2019-05-03T18:00:45.429Z"}
{"msg":"@ahmedahmed until it is implemented try using web3.eth.getBlock or web3.eth.getTransactionReceipt. Those should have the logs for your contract as well","username":"swetha","ts":"2019-05-03T18:13:43.193Z"}
{"msg":"otherwise you can hit the fab3 yourself with the method eth_getLogs: https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Fab3_Instructions.md#eth_getlogs","username":"swetha","ts":"2019-05-03T18:14:30.564Z"}
{"msg":"8uyy;'","username":"MHBauer","ts":"2019-05-03T19:09:13.485Z"}
{"msg":"thanks again for your help that was very constructive for me :D","username":"ahmedahmed","ts":"2019-05-04T06:08:31.065Z"}
{"msg":"hello again \nthis time i'm trying to create a factory smart contract like this \nbut the problem whenever i call the function that creates the new smart contract i get this error \ngeneric error: Account/contract EBAB35950F82D7F8C93B87F9F622350829B64108 does not have permission createContract ","username":"ahmedahmed","ts":"2019-05-04T13:27:02.300Z"}
{"msg":"contract Bakery {\n\n  // index of created contracts\n\n  address[] public contracts;\n\n  // useful to know the row count in contracts index\n\n  function getContractCount() public  constant returns(uint contractCount)\n  {\n    return contracts.length;\n  }\n\n  // deploy a new contract\n\n  function newCookie()  public   returns(address newContract)\n  {\n    Cookie c = new Cookie();\n    contracts.push(c);\n    return c;\n  }\n}\n\n\ncontract Cookie {\n\n  // suppose the deployed contract has a purpose\n\n  function getFlavor() public constant returns (string flavor)\n  {\n    return \"mmm ... chocolate chip\";\n  }    \n}","username":"ahmedahmed","ts":"2019-05-04T13:30:00.622Z"}
{"msg":"","username":"ahmedahmed","ts":"2019-05-04T13:32:20.575Z","attachments":[{"type":"file","title":"Clipboard - May 4, 2019 3:28 PM","title_link":"/file-upload/vQz3PHmfQ5nrYj7xx/Clipboard%20-%20May%204,%202019%203:28%20PM","image_url":"/file-upload/vQz3PHmfQ5nrYj7xx/Clipboard%20-%20May%204,%202019%203:28%20PM","image_type":"image/png","image_size":294388,"url":"/file-upload/vQz3PHmfQ5nrYj7xx/Clipboard%20-%20May%204,%202019%203:28%20PM","remote":false,"fileId":"vQz3PHmfQ5nrYj7xx","fileName":"Clipboard - May 4, 2019 3:28 PM"}]}
{"msg":"","username":"ahmedahmed","ts":"2019-05-04T13:33:46.580Z","attachments":[{"type":"file","title":"Clipboard - May 4, 2019 3:26 PM","title_link":"/file-upload/r2H9bPhHLAHJWc36Y/Clipboard%20-%20May%204,%202019%203:26%20PM","image_url":"/file-upload/r2H9bPhHLAHJWc36Y/Clipboard%20-%20May%204,%202019%203:26%20PM","image_type":"image/png","image_size":294388,"url":"/file-upload/r2H9bPhHLAHJWc36Y/Clipboard%20-%20May%204,%202019%203:26%20PM","remote":false,"fileId":"r2H9bPhHLAHJWc36Y","fileName":"Clipboard - May 4, 2019 3:26 PM"}]}
{"msg":"actually EBAB35950F82D7F8C93B87F9F622350829B64108 is the address of the smart conract i deployed to be the factory ","username":"ahmedahmed","ts":"2019-05-04T13:36:26.902Z"}
{"msg":"@ahmedahmed currently there is not support for contract creation through a contract. There is a discussion above on how to achieve that if you are want that feature: https://chat.hyperledger.org/channel/fabric-evm?msg=GMgtiHfpKwtvm9Kjs","username":"swetha","ts":"2019-05-04T17:25:09.064Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=GMgtiHfpKwtvm9Kjs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=GMgtiHfpKwtvm9Kjs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@ahmedahmed currently there is not support for contract creation through a contract. There is a discussion above on how to achieve that if you want that feature: https://chat.hyperledger.org/channel/fabric-evm?msg=GMgtiHfpKwtvm9Kjs","username":"swetha","ts":"2019-05-04T17:25:09.064Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=GMgtiHfpKwtvm9Kjs","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=GMgtiHfpKwtvm9Kjs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"alexmatson","ts":"2019-05-05T22:01:24.008Z","type":"uj"}
{"msg":"@swetha  Hello Is there any way to get a version of burrowEVM used in chaincodeevm build ?  thank you!","username":"fastchain","ts":"2019-05-06T05:47:18.078Z"}
{"msg":"@MHBauer \nI've updated burrow EVM in evmcc, but with no luck:\n\n\n1. I've download a compatible  version of solc (according to burrow manual)\n\nmake bin/solc\n\n2. created  version of contract which runs in last available version of burrow. (there is some issue with msg.sender variable, so I just removed this variable) \n```\npragma solidity ^0.5.1;\n\ncontract D {\n    //address x;\n    constructor() public payable {\n        //x =z;\n    }\n}\ncontract X {\n    //address z;\n    constructor() public payable {\n        D d = new D();\n    }\n}\ncontract C {\n \n\n    function createD() public {\n        X newX = new X();\n    }\n}\n```\n\n3. Moved the latest  available version (dev branch) of burrow to  the vendor folder in fabric-chaincode-evm.\n\n4. Ran test compilation of evmmc\n\nmake bin/evmcc\n\nwith no issues. \n\n\n4. Launched a new network \n\n./byfn.sh down\n./byfn.sh up\n\n\n5. Installed evmmc \n\n```\npeer chaincode install -n evmcc2 -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc\n```\n\n6. Initiated evmmc\n\n```\npeer chaincode instantiate -n evmcc2 -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n```\n\n7. Launched fab3 proxy\n```\nFAB3_CCID=\"evmcc2\" FAB3_CHANNEL=\"mychannel\" FAB3_CONFIG=\"/opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/working.yaml\" FAB3_ORG=\"org2\" FAB3_PORT=\"5000\" FAB3_USER=\"User1\" /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/bin/fab3 \n\n``\n8. Tried to deploy contract and got the same exception \n\n```\n{'code': -32000, 'message': 'Failed to execute transaction: Transaction processing for endorser [peer0.org1.example.com:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted', 'data': None}\n\n```\n\nit looks like an  issue could be somewhere at the junction.. \nDo you have any Ideas what to do next?\nThanks.  \n \n```","username":"fastchain","ts":"2019-05-06T06:30:13.231Z"}
{"msg":"@MHBauer \nI've updated burrow EVM in evmcc, but with no luck:\n\n\n1. I've download a compatible  version of solc (according to burrow manual)\n\nmake bin/solc\n\n2. created  version of contract which runs in last available version of burrow. (there is some issue with msg.sender variable, so I just removed this variable) \n```\npragma solidity ^0.5.1;\n\ncontract D {\n    //address x;\n    constructor() public payable {\n        //x =z;\n    }\n}\ncontract X {\n    //address z;\n    constructor() public payable {\n        D d = new D();\n    }\n}\ncontract C {\n \n\n    function createD() public {\n        X newX = new X();\n    }\n}\n```\n\n3. Moved the latest  available version (dev branch) of burrow to  the vendor folder in fabric-chaincode-evm.\n\n4. Ran test compilation of evmmc\n\nmake bin/evmcc\n\nwith no issues. \n\n\n4. Launched a new network \n\n./byfn.sh down\n./byfn.sh up\n\n\n5. Installed evmmc \n\n```\npeer chaincode install -n evmcc2 -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc\n```\n\n6. Initiated evmmc\n\n```\npeer chaincode instantiate -n evmcc2 -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n```\n\n7. Launched fab3 proxy\n```\nFAB3_CCID=\"evmcc2\" FAB3_CHANNEL=\"mychannel\" FAB3_CONFIG=\"/opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/working.yaml\" FAB3_ORG=\"org2\" FAB3_PORT=\"5000\" FAB3_USER=\"User1\" /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/bin/fab3 \n\n``\n8. Tried to deploy contract and got the same exception \n\n```\n{'code': -32000, 'message': 'Failed to execute transaction: Transaction processing for endorser [peer0.org1.example.com:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted', 'data': None}\n\n```\n\nit looks like an  issue could be somewhere at the junction.. \nDo you have any Ideas what to do next?\nThanks.  \n \n","username":"fastchain","ts":"2019-05-06T06:30:13.231Z"}
{"msg":"@MHBauer \nI've updated burrow EVM in evmcc, but with no luck:\n\n\n1. I've download a compatible  version of solc (according to burrow manual)\n\nmake bin/solc\n\n2. created  version of contract which runs in last available version of burrow. (there is some issue with msg.sender variable, so I just removed this variable) \n```\npragma solidity ^0.5.1;\n\ncontract D {\n    //address x;\n    constructor() public payable {\n        //x =z;\n    }\n}\ncontract X {\n    //address z;\n    constructor() public payable {\n        D d = new D();\n    }\n}\ncontract C {\n \n\n    function createD() public {\n        X newX = new X();\n    }\n}\n```\n\n3. Moved the latest  available version (dev branch) of burrow to  the vendor folder in fabric-chaincode-evm.\n\n4. Ran test compilation of evmmc\n\nmake bin/evmcc\n\nwith no issues. \n\n\n4. Launched a new network \n\n./byfn.sh down\n./byfn.sh up\n\n\n5. Installed evmmc \n\n```\npeer chaincode install -n evmcc2 -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc\n```\n\n6. Initiated evmmc\n\n```\npeer chaincode instantiate -n evmcc2 -v 0 -C mychannel -c '{\"Args\":[]}' -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem\n```\n\n7. Launched fab3 proxy\n```\nFAB3_CCID=\"evmcc2\" FAB3_CHANNEL=\"mychannel\" FAB3_CONFIG=\"/opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/working.yaml\" FAB3_ORG=\"org2\" FAB3_PORT=\"5000\" FAB3_USER=\"User1\" /opt/gopath/src/github.com/fastchain/fabric-chaincode-evm/bin/fab3 \n\n```\n8. Tried to deploy contract and got the same exception \n\n```\n{'code': -32000, 'message': 'Failed to execute transaction: Transaction processing for endorser [peer0.org1.example.com:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted', 'data': None}\n\n```\n\nit looks like an  issue could be somewhere at the junction.. \nDo you have any Ideas what to do next?\nThanks.  \n \n","username":"fastchain","ts":"2019-05-06T06:30:13.231Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=smLg9NxCMF8k3PvbR) @fastchain burrow details https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Gopkg.toml#L9-L10 ","username":"MHBauer","ts":"2019-05-06T16:22:15.316Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=smLg9NxCMF8k3PvbR","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=smLg9NxCMF8k3PvbR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I assume we can still check out that tag of burrow and run it.","username":"MHBauer","ts":"2019-05-06T16:22:30.117Z"}
{"msg":"We use 0.24.4, https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Gopkg.toml#L8-L10. As Morgan said you should be able to checkout that tag in burrow or that release and test using their binaries","username":"swetha","ts":"2019-05-06T19:05:34.769Z"}
{"msg":"In regards to the steps you outlined above, you don't need to download the solc binary when using the fabric evm because we don't compile contracts. Burrow has a deploy tool that will compile contracts which is why they ask you to download solc, which is only necessary if you are testing against a burrow node","username":"swetha","ts":"2019-05-06T19:06:43.831Z"}
{"msg":"@swetha  hello!\n>In regards to the steps you outlined above, you don't need to download the solc binary when using the fabric evm because we don't compile contracts. \n\nI understand. I used solc to compile a contract to check that contract's bytecode works  in burrow standalone setup. And then I used this code for bmcc chaincode deployment.\n\n\n@MHBauer  thanks for this tip!\n\n ","username":"fastchain","ts":"2019-05-06T23:08:33.471Z"}
{"msg":"@swetha  hello!\n>In regards to the steps you outlined above, you don't need to download the solc binary when using the fabric evm because we don't compile contracts. \n\nI understand. I used solc to compile a contract to check that contract's bytecode works  in burrow standalone setup. And then I used this code for bmcc chaincode deployment.\n\n\n\n ","username":"fastchain","ts":"2019-05-06T23:08:33.471Z"}
{"msg":"@MHBauer thanks! this file Gopkg.toml is used during *make bin/evmcc* operation only, or during  *peer chaincode install -n evmcc2 -l golang -v 0 -p github.com/fastchain/fabric-chaincode-evm/evmcc* as well?\n","username":"fastchain","ts":"2019-05-06T23:12:19.458Z"}
{"msg":" @fastchain that file is used only during development when updating dependencies or ensuring dependencies are correct","username":"swetha","ts":"2019-05-06T23:19:04.755Z"}
{"msg":"you were asking for the version, that's where \"what version we have\" is written down.","username":"MHBauer","ts":"2019-05-06T23:20:06.337Z"}
{"msg":"it's processed by dep, the tool https://github.com/golang/dep","username":"MHBauer","ts":"2019-05-06T23:20:23.540Z"}
{"msg":"and so, to start your upgrade process, i'd expect something like `dep ensure -update github.com/hyperledger/burrow@0.25.0` or edit the toml and then run `dep ensure`","username":"MHBauer","ts":"2019-05-06T23:24:50.020Z"}
{"msg":"Has joined the channel.","username":"Jasonyou","ts":"2019-05-07T00:11:07.049Z","type":"uj"}
{"msg":"Has joined the channel.","username":"fahadkheratker","ts":"2019-05-07T06:43:16.410Z","type":"uj"}
{"msg":"Hello, each time a eth smart contract over fabric-chaincode-evm is invoked , three transaction are added to the block chain","username":"fahadkheratker","ts":"2019-05-07T08:30:48.922Z"}
{"msg":"can anybody tell me the significance of the same?","username":"fahadkheratker","ts":"2019-05-07T08:31:00.390Z"}
{"msg":"and the correct way to filter these transactions?","username":"fahadkheratker","ts":"2019-05-07T08:31:22.896Z"}
{"msg":"i have an event listener listening my blockchain transactions, need to filter transactions over fabric-chaincode-evm accordingly","username":"fahadkheratker","ts":"2019-05-07T08:33:05.663Z"}
{"msg":"Has joined the channel.","username":"Ulysses","ts":"2019-05-07T08:46:05.469Z","type":"uj"}
{"msg":"@MHBauer \nI've ```dep ensure  -update -v``` with \n```\n[[constraint]]\n  version = \"0.25.0\"\n  name = \"github.com/hyperledger/burrow\"\n```\nin Gopkg.toml\n\nand then  relaunched network.  with no luck \n```\nChaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted', 'data': None\n```\n:head_bandage:","username":"fastchain","ts":"2019-05-07T09:00:39.363Z"}
{"msg":"@MHBauer \nI've ```dep ensure  -update -v ```  with \n```\n[[constraint]]\n  version = \"0.25.0\"\n  name = \"github.com/hyperledger/burrow\"\n```\nin Gopkg.toml\n\nand then  relaunched network.  with no luck \n```\nChaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted', 'data': None\n```\n:head_bandage:","username":"fastchain","ts":"2019-05-07T09:00:39.363Z"}
{"msg":"@MHBauer \nI've ``` dep ensure  -update -v ```  with \n```\n[[constraint]]\n  version = \"0.25.0\"\n  name = \"github.com/hyperledger/burrow\"\n```\nin Gopkg.toml\n\nand then  relaunched network.  with no luck \n```\nChaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted', 'data': None\n```\n:head_bandage:","username":"fastchain","ts":"2019-05-07T09:00:39.363Z"}
{"msg":"@MHBauer \nI've \n``` \ndep ensure  -update -v \n``` \n with \n```\n[[constraint]]\n  version = \"0.25.0\"\n  name = \"github.com/hyperledger/burrow\"\n```\nin Gopkg.toml\n\nand then  relaunched network.  with no luck \n```\nChaincode status Code: (500) UNKNOWN. Description: failed to execute contract: error 16 - execution reverted: execution reverted', 'data': None\n```\n:head_bandage:","username":"fastchain","ts":"2019-05-07T09:00:39.363Z"}
{"msg":"What are the 3 transactions? There should only be one transaction per evmcc invocation","username":"swetha","ts":"2019-05-07T18:25:59.033Z"}
{"msg":"We have a couple problems here in debugging. I am not clear that the Burrow update will solve your problem, so until we solve that we won't know if the problem is that the bug is still there or if the code change is taking effect, as this was a problem earlier for you","username":"swetha","ts":"2019-05-07T18:27:31.664Z"}
{"msg":"@fastchain ^^","username":"swetha","ts":"2019-05-07T18:27:58.717Z"}
{"msg":"@fahadkheratker ^^","username":"swetha","ts":"2019-05-07T18:28:08.410Z"}
{"msg":"looks like rocket does threading now.","username":"MHBauer","ts":"2019-05-07T22:08:44.836Z"}
{"msg":"here are filtered logs from container docker logs peer0.org1.example.com -f 2>&1 | grep -via gossip | grep -via discovery\nhttps://pastebin.com/vuG6KaAi\n\ndoes it make any sense?\n\n\n>so until we solve that we won't know if the problem is \n\nOK. I'll roll back to 24","username":"fastchain","ts":"2019-05-07T23:50:12.242Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=ttoQQnoSRvwML27R7) the logs don't really show what the problem is. I don't think 24 versus 25 is the problem. If we are able to verify that burrow in general results in the same thing or doesn't that will help us narrow down the search","username":"swetha","ts":"2019-05-08T00:10:24.968Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=ttoQQnoSRvwML27R7","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=ttoQQnoSRvwML27R7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"In the burrow channel I think sean gave some ideas as to what caused the error. do any of those apply? ","username":"swetha","ts":"2019-05-08T00:11:04.768Z"}
{"msg":"You mean this message \n\nhttps://chat.hyperledger.org/channel/burrow?msg=nJ3Ggm9pCRPypRqMD ?","username":"fastchain","ts":"2019-05-08T01:30:29.785Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=nJ3Ggm9pCRPypRqMD","url":"https://chat.hyperledger.org/channel/burrow?msg=nJ3Ggm9pCRPypRqMD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Do you mean this message  ?\n\nhttps://chat.hyperledger.org/channel/burrow?msg=nJ3Ggm9pCRPypRqMD ?","username":"fastchain","ts":"2019-05-08T01:30:29.785Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/burrow?msg=nJ3Ggm9pCRPypRqMD","url":"https://chat.hyperledger.org/channel/burrow?msg=nJ3Ggm9pCRPypRqMD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"yes that's the one","username":"swetha","ts":"2019-05-08T01:56:48.197Z"}
{"msg":"UI is a bit odd tho...","username":"guoger","ts":"2019-05-08T01:57:38.381Z"}
{"msg":"very weird","username":"MHBauer","ts":"2019-05-08T01:57:50.448Z"}
{"msg":"looks like rocket does threading now.","username":"guoger","ts":"2019-05-08T01:58:38.516Z","attachments":[{"message_link":"/channel/fabric-evm?msg=HELaTHakbJjibuvdd","url":"/channel/fabric-evm?msg=HELaTHakbJjibuvdd","remote":true,"fileId":null,"fileName":null}],"type":"discussion-created"}
{"msg":"it looks like none of this is applicable to test contract :(\n\nis there any way to get a debug output from burrow when it runs with evmcc ?","username":"fastchain","ts":"2019-05-08T02:51:46.207Z"}
{"msg":"it looks like none of this is applicable to the test contract :(\n\nis there any way to get a debug output from burrow when it runs with evmcc ?","username":"fastchain","ts":"2019-05-08T02:51:46.207Z"}
{"msg":"Dear all. Is there any way to forward  an evmcc debug log  to the stdout  (to read with 'docker logs')?  ","username":"fastchain","ts":"2019-05-08T03:40:00.498Z"}
{"msg":"Dear all, Is there any way to forward  an evmcc debug log  to the stdout  (to read with 'docker logs')?  ","username":"fastchain","ts":"2019-05-08T03:40:00.498Z"}
{"msg":"to get this kind of  messages \nhttps://github.com/hyperledger/burrow/blob/c44fbec9feab53f2e537ddde830505fea90e6f98/deploy/jobs/jobs_contracts.go#L478","username":"fastchain","ts":"2019-05-08T04:34:40.374Z"}
{"msg":"not as it is. you'd have to do research to figure out how to hook it up.","username":"MHBauer","ts":"2019-05-08T06:19:09.950Z"}
{"msg":"look for `var evmLogger = logging.NewNoopLogger()`","username":"MHBauer","ts":"2019-05-08T06:19:19.541Z"}
{"msg":"if you can figure out a way to shoehorn the flogging logger , or just implement it with fmt.Println() you'll get output to docker logs.","username":"MHBauer","ts":"2019-05-08T06:26:21.082Z"}
{"msg":"looking back through the code, the vm doesn't have a lot of log entries","username":"MHBauer","ts":"2019-05-08T06:35:47.075Z"}
{"msg":"if you want the opcodes, you can look for ","username":"MHBauer","ts":"2019-05-08T06:38:06.246Z"}
{"msg":"\tvm := evm.NewVM(newParams(), callerAddr, nonce, evmLogger)\n","username":"MHBauer","ts":"2019-05-08T06:38:08.131Z"}
{"msg":"and then add after it ","username":"MHBauer","ts":"2019-05-08T06:38:20.654Z"}
{"msg":"\tevm.DebugOpcodes(vm)","username":"MHBauer","ts":"2019-05-08T06:38:22.374Z"}
{"msg":"and if you want even more, find in burrow code","username":"MHBauer","ts":"2019-05-08T06:38:48.134Z"}
{"msg":"\t// Uncomment for quick and dirty debug\n\t//fmt.Printf(format, a...)\n","username":"MHBauer","ts":"2019-05-08T06:38:48.900Z"}
{"msg":"and uncomment it","username":"MHBauer","ts":"2019-05-08T06:38:52.142Z"}
{"msg":"you'll need to implement the logger for the first one to work.","username":"MHBauer","ts":"2019-05-08T06:39:45.909Z"}
{"msg":"Hi All! I've run into some strange behavior that I can't really explain, could you give me some insights about the EVMCC and EVM interaction?\n\nFull disclosure: I'm using a [modified EVMCC](https://github.com/aklenik/caliper/blob/fabric-evm/src/adapters/fabric-ccp/src/evmcc/evmcc.go) which exposes the `value` and `nonce` variables to the caller (and some extra timing logs). But the core logic is the same, plus I don't use the value, just the nonce in the next scenario. \n\nSo the scenario is the following. I have a simple token contract that has a `transfer` function with an additional `balances` backing field/map and using safemath. The gist of the relevant code is this:\n```\nmapping(address => uint256) public balances;\nfunction transfer(address _receiver, uint256 _value) public returns (bool) {\n\trequire(_value > 0 && balances[msg.sender] >= _value);\n\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\tbalances[_receiver] = balances[_receiver].add(_value);\n\treturn true;\n}\n```\n\nNothing interesting so far. I have two version of this contract","username":"klenik","ts":"2019-05-08T11:11:51.447Z"}
{"msg":"@swetha  my application network is down at the moment ill get back to you with the same issue asap","username":"fahadkheratker","ts":"2019-05-08T11:27:44.537Z"}
{"msg":"Also does any one know how to convert the fabric evm payload to readable string?","username":"fahadkheratker","ts":"2019-05-08T11:28:33.269Z"}
{"msg":"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\003\\350","username":"fahadkheratker","ts":"2019-05-08T11:28:33.937Z"}
{"msg":"@fahadkheratker I use [this](https://github.com/ethereumjs/ethereumjs-abi) npm package on the client side to encode/decode arguments/results","username":"klenik","ts":"2019-05-08T12:00:24.270Z"}
{"msg":"@MHBauer @swetha Hi All! This will be long, sorry :) \nI've run into some strange behavior and I can't really explain what I see, so could you give me some insights about the EVMCC and EVM interactions? Continued in the thread below, since now we have this awesome feature.","username":"klenik","ts":"2019-05-08T12:00:46.107Z"}
{"msg":"Full disclosure: I'm using a [modified EVMCC](https://github.com/aklenik/caliper/blob/fabric-evm/src/adapters/fabric-ccp/src/evmcc/evmcc.go) which exposes the `value` and `nonce` variables to the caller (and some extra timing logs). But the core logic is the same, plus I don't use the value, just the nonce in the next scenario. \n\nSo the scenario is the following. I have a simple token contract that has a `transfer` function with an additional `balances` backing field/map and using SafeMath. The gist of the relevant code is this:\n```\nusing SafeMath for uint256;\nmapping(address => uint256) public balances;\nfunction transfer(address _receiver, uint256 _value) public returns (bool) {\n\trequire(_value > 0 && balances[msg.sender] >= _value);\n\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\tbalances[_receiver] = balances[_receiver].add(_value);\n\treturn true;\n}\n```\n\nNothing interesting so far. I have two versions of this contract, C1 and C2, but their transfer functions are identical (their whole bytecode is not). I have 2 Fabric identities/certs (client[1|2]). \nI test C1 and C2 independently, on totally clean and separate Fabric networks, but with the same identities (that's why I exposed the nonce, so the contract address generation and the nonce passed to the EVM can be deterministic). The contracts and identities got the same addresses in both tests, I've verified this.\n\nI can deploy both contracts successfully, and client1 get a lot of token in the constructor. Now I call transfer on a clean system with client1: transfer 1000 tokens to client2. And it works in both cases, but there's something strange going on under the hood. Namely, the two contract calls produce a different writeset, but a same readset.\n\nIn both cases, there are 3 matching reads (across C1 and C2): \n1. `calleeCode := evmCache.GetCode(calleeAddr)` in EVMCC, with the `contract address` as the key, at version `2.0` (1st block: instantiate EVMCC; 2nd block: deploy EMV contract, so the version comes from this). I assume this read is produced by `statemanager.GetAccount`, based on the key.\n2-3: `balances[msg.sender]` and `balances[_receiver]` also produce 1-1 reads (the other access calls are answered from the EVM State's cache). First part of the key is the contract address, plus an extra part, guessing it's the map's key encoded somehow. Guessing these reads are produced by `statemanager.GetStorage`. And so far still good, it returns a version 2.0 answer and a nil, since the second user has 0 tokens, hence not in the map at this point.\n\nRegarding the write set, there are 3 writes:\n1-2: Setting `balances[msg.sender]` and `balances[_receiver]` produces 1-1 write, with matching keys and values (across C1 and C2). \n3. However, there's a 3rd write, with the contract address as the key, and a really long value (in hex encoded form, 7116 characters for C1 and 7072 for C2). I guess it's produced by `statemanager.UpdateAccount`. What does this 3rd write represents? The map-related storages are already updated by the previous reads. Plus the two value are almost identical, apart from the length and randomly distributed hex characters around the end...\n\nSo what happens here? Functionally, from the client's POV, everything is fine, but this write set difference really botheres me, especially since I don't know where it comes from and everything else matches. Both execution should be deterministic, as ensured by the manually provided nonces.\n\nI've arrived to the following hypothesis by the time I've finished writing this message: the entire Account object is updated/saved, which includes the bytecode of the contract, which is different, hence the different write value. Can someone confirm this? I don't see the bytecode directly in the written value, but I guess Account.Encode() can obscure it somehow.","username":"klenik","ts":"2019-05-08T12:01:01.032Z"}
{"msg":"If you are using the peer cli, unfortunately no there is no way to really decode that. Try using fab3, ir takes care of the the encoding to make it in hex","username":"swetha","ts":"2019-05-08T15:59:56.073Z"}
{"msg":"If you are using the peer cli, unfortunately no there is no way to really decode that. Try using fab3, it takes care of the the encoding to make it in hex","username":"swetha","ts":"2019-05-08T15:59:56.073Z"}
{"msg":"I believe that is correct. There was also a difference in how Burrow dealt with writes so the two releases of the evm will have different writes. I am assuming you are using the same version of the EVM in both cases.","username":"swetha","ts":"2019-05-08T16:04:54.801Z"}
{"msg":"So that is probably not the situation","username":"swetha","ts":"2019-05-08T16:05:12.202Z"}
{"msg":"I would have to verify by the opcodes to see where that 3rd write is being generated from. Callstate in the burrow code will use the EVMCC statemanger: https://github.com/hyperledger/burrow/blob/v0.24.4/execution/evm/vm.go#L226-L991","username":"swetha","ts":"2019-05-08T16:08:49.593Z"}
{"msg":"hi do you think that the use of fabric-evm add an other level of security to fabric because  it stores the smart contract in the ledger and not outside of it like regular chain codes  is that true ?","username":"ahmedahmed","ts":"2019-05-09T09:46:53.351Z"}
{"msg":"too big for a thread","username":"MHBauer","ts":"2019-05-09T17:32:24.216Z"}
{"msg":"this whole conversation is like one inch wide and nine pages long","username":"MHBauer","ts":"2019-05-09T17:32:35.058Z"}
{"msg":"Why do you feel that is another level of security? They are two different approaches, I don't necessarily think one is more secure over the other. Are you worried about the code been changed when it is on the file system? Because the fabric system, through the endorsement policy, will ensure that everyone is arriving to the same answer","username":"swetha","ts":"2019-05-09T17:37:11.437Z"}
{"msg":"we can try the discussion option next time. They apparently create sub channels","username":"swetha","ts":"2019-05-09T17:37:33.221Z"}
{"msg":"this tells me we should do more logging in the evmcc, ","username":"MHBauer","ts":"2019-05-09T17:38:42.149Z"}
{"msg":"so we can see all the writes.","username":"MHBauer","ts":"2019-05-09T17:38:50.539Z"}
{"msg":"@klenik it's too much work to figure out what changed in your fork of the code.","username":"MHBauer","ts":"2019-05-09T17:39:17.214Z"}
{"msg":"@klenik is the evm contracts/bytecode in the repo as well? ","username":"MHBauer","ts":"2019-05-09T17:39:39.152Z"}
{"msg":"would help us repro and triage eventually","username":"MHBauer","ts":"2019-05-09T17:39:49.502Z"}
{"msg":"@MHBauer @swetha I'll put together a MWE tomorrow with the crypto materials, contract sources and bytecodes, and I'll try to reproduce the issue(?) in the original evmcc ","username":"klenik","ts":"2019-05-10T10:06:59.342Z"}
{"msg":"That would be great! ","username":"swetha","ts":"2019-05-10T15:07:43.814Z"}
{"msg":"What's great?","username":"MHBauer","ts":"2019-05-10T17:40:36.290Z"}
{"msg":"oh that was in response to the thread. It looks like app on the phone doesn't distinguish between the channel and the thread","username":"swetha","ts":"2019-05-10T18:39:53.312Z"}
{"msg":"That would be great!","username":"swetha","ts":"2019-05-10T18:40:02.922Z"}
{"msg":"neat","username":"MHBauer","ts":"2019-05-10T19:07:55.845Z"}
{"msg":"hi, everyone, i'm confused about that can i interact with a smart contract which is not deployed on fabric-evm? Sorry for my stupid question and","username":"Ulysses","ts":"2019-05-13T02:46:21.594Z"}
{"msg":"Hi, i'm confused about that can i interact with a smart contact which is *not* deployed on EVMCC ? Sorry for my stupid question and grungy English","username":"Ulysses","ts":"2019-05-13T02:52:56.777Z"}
{"msg":"WHat is \"I\"?","username":"MHBauer","ts":"2019-05-13T06:13:46.953Z"}
{"msg":"evm contracts have no concept of fabric to be able to interact with them.","username":"MHBauer","ts":"2019-05-13T06:14:14.824Z"}
{"msg":"Has joined the channel.","username":"umtyzc","ts":"2019-05-13T07:05:58.829Z","type":"uj"}
{"msg":"Hi, I ran  ‚Äúgo build -o fab3 ./fabproxy/cmd‚Äù , but give a error ‚Äúassembly of vendor hex_decode_amd64.s failed‚Äù. Can you help me for this problem? ","username":"umtyzc","ts":"2019-05-13T07:09:11.421Z"}
{"msg":"@MHBauer  Sorry:sweat_smile: \nCan a smart contact deployed on EVMCC interact with a smart contact deployed on EthereumÔºü","username":"Ulysses","ts":"2019-05-13T07:20:19.507Z"}
{"msg":"@Ulysses , no a smart contract deployed on EVMCC cannot interact with a smart contract deployed on ethereum. The EVMCC only allows portability of ethereum contracts and dapps","username":"swetha","ts":"2019-05-13T11:47:26.196Z"}
{"msg":"@umtyzc What version of go are you using?","username":"swetha","ts":"2019-05-13T11:48:06.623Z"}
{"msg":"Hi swetha, go version 1.9.2","username":"umtyzc","ts":"2019-05-13T12:43:15.977Z"}
{"msg":"@umtyzc Fab3 requires at least Go 1.10 to compile. Here are the requirements: https://github.com/hyperledger/fabric-chaincode-evm#current-dependencies. Also the version you are using seems older as the code you are referring to has fabproxy in it. I recommend updating to our most recent release or master","username":"swetha","ts":"2019-05-13T15:39:57.774Z"}
{"msg":"Thanks @swetha ","username":"umtyzc","ts":"2019-05-13T15:46:20.732Z"}
{"msg":"Thanks for your help @swetha ","username":"Ulysses","ts":"2019-05-14T01:54:39.345Z"}
{"msg":"how can i view logs of evmcc","username":"fahadkheratker","ts":"2019-05-14T07:12:15.398Z"}
{"msg":"?","username":"fahadkheratker","ts":"2019-05-14T07:12:19.615Z"}
{"msg":"i asked this question earlier here  is a link https://chat.hyperledger.org/channel/fabric-evm?msg=zaHjfKp2oWoycsFYy","username":"ahmedahmed","ts":"2019-05-14T10:20:43.842Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=zaHjfKp2oWoycsFYy","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=zaHjfKp2oWoycsFYy","remote":true,"fileId":null,"fileName":null}]}
{"msg":"i have a question: is it possible to change the gas value ?? if yes how or in which file is it set ??","username":"ahmedahmed","ts":"2019-05-14T10:21:51.556Z"}
{"msg":"Yeah it would be great if we had a way to logs fabric evm ","username":"fahadkheratker","ts":"2019-05-14T10:44:02.595Z"}
{"msg":"i have a question: is it possible to change the gas value ?? if yes how or in which file is it set ??","username":"ahmedahmed","ts":"2019-05-14T11:34:51.652Z"}
{"msg":"Also One more query, is there a way to update fabric-evm - (evmcc) whenever a new version is released","username":"fahadkheratker","ts":"2019-05-14T11:36:54.266Z"}
{"msg":"@fahadkheratker there are currently not too many logs produce from the evmcc yet. But if you want those logs you can find them, depending on your setup, by getting logs of the container that is running the evmcc. ","username":"swetha","ts":"2019-05-14T12:30:54.357Z"}
{"msg":"If you are looking for logs/events that are produced from your contracts, we don't yet support asynchronous event support. But the events are consumable through the eth_getLogs method","username":"swetha","ts":"2019-05-14T12:31:32.294Z"}
{"msg":"In terms of updating the evmcc, we currently don't make the versions compatible with each other, which means updating might not work if there have been changes in the data model. In general though you should be able to upgrade any chaincode by installing the new version and then running a `peer chaincode update` command","username":"swetha","ts":"2019-05-14T12:33:16.377Z"}
{"msg":"I believe for right not, v0.1 of the evmcc cannot be upgraded to v0.2","username":"swetha","ts":"2019-05-14T12:34:14.349Z"}
{"msg":"@ahmedahmed No it is not possible to change the gas value dynamically. Right now it is hardcoded here: https://github.com/hyperledger/fabric-chaincode-evm/blob/master/evmcc/evmcc.go#L91. Why do you want to change the gas value? Is the value too small?","username":"swetha","ts":"2019-05-14T12:35:23.044Z"}
{"msg":"We made it very high to ensure that transactions should have enough gas to complete","username":"swetha","ts":"2019-05-14T12:35:53.222Z"}
{"msg":"actually i have a  smart contract that is a bit big i'm using web3 to deploy the smart contract by passing the byte code ","username":"ahmedahmed","ts":"2019-05-14T12:43:07.066Z"}
{"msg":"Just curious, what gas limit do you need for your smart contract to work? Typically would you deploy a contract that big on the ethereum network?","username":"swetha","ts":"2019-05-14T12:59:00.001Z"}
{"msg":"@ahmedahmed ^^","username":"swetha","ts":"2019-05-14T12:59:33.013Z"}
{"msg":"when i tested the smart contract in remix the default gas limit value : 3000000 was not enough so i had to set it to 4000000 and in some cases 5000000","username":"ahmedahmed","ts":"2019-05-14T13:19:54.307Z"}
{"msg":"I was gonna say that 10k doesn't seem like a lot, but burrow has everything valued at 1.","username":"MHBauer","ts":"2019-05-14T17:08:12.045Z"}
{"msg":"@swetha Oh man, we have a meeting tomorrow morning. Gonna be short, I think.","username":"MHBauer","ts":"2019-05-14T19:17:28.139Z"}
{"msg":"@MHBauer I have a conflict tomorrow, so won't be able to attend","username":"swetha","ts":"2019-05-14T19:59:39.535Z"}
{"msg":"@swetha thanks for your response, we are planning to use fabric-evm in our production application, however if there are any updates in the evm or any fixes or changes we would mostly like to get an update of that as well if the versions are not compatible we will be unable to do so. Please comment on this query! ","username":"fahadkheratker","ts":"2019-05-15T05:26:08.826Z"}
{"msg":"Also i get that fabric-evm cannot be updated at the moment but what about solidity smartcontract can they be updated over the evm? for eg smartcontract.sol (v1) can be upgraded to smartcontract.sol (v2)","username":"fahadkheratker","ts":"2019-05-15T05:27:14.223Z"}
{"msg":"Hi, I want to assign assign loyalty contract with web3 using the contract's ABI.               LoyaltyContract = web3.eth.contract(LoyaltyABI)           Error = Reference error loyaltyABI not defined.  ","username":"umtyzc","ts":"2019-05-15T08:36:35.242Z"}
{"msg":"Solved.  [ ](https://chat.hyperledger.org/channel/fabric-evm?msg=3g7wWslhRFf1AilCjC)","username":"umtyzc","ts":"2019-05-15T08:38:16.279Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=3g7wWslhRFf1AilCjC","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=3g7wWslhRFf1AilCjC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer Hmm, this is an interesting fact, thx. Do you know by any chance what was the reasoning behind this? It's strange that everything matches the EVM yellow paper specification, except the gas costs of operations :thinking: ","username":"klenik","ts":"2019-05-15T08:40:38.366Z"}
{"msg":"Now, I want to create a new member using web-app.  Can you help?                             Failed to query the ledger: Transaction processing for endorser [localhost:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: call error: Invalid jump dest","username":"umtyzc","ts":"2019-05-15T08:52:58.842Z"}
{"msg":"hi fabric is taking more and more space on my hard disk i tried shutting down the network and creating a new one but still i can't recover any space \nis possible that some files or docker images need to be removed manually ??","username":"ahmedahmed","ts":"2019-05-15T10:43:19.948Z"}
{"msg":"yes ","username":"fahadkheratker","ts":"2019-05-15T11:41:34.847Z"}
{"msg":"clear docker cahc","username":"fahadkheratker","ts":"2019-05-15T11:41:38.422Z"}
{"msg":"cache*","username":"fahadkheratker","ts":"2019-05-15T11:41:40.764Z"}
{"msg":"using docker system prune","username":"fahadkheratker","ts":"2019-05-15T11:41:47.273Z"}
{"msg":"thanks @fahadkheratker but  i have a running  network is going to go down or i'm i going to lose the config if i run  docker system prune  ???","username":"ahmedahmed","ts":"2019-05-15T11:53:04.425Z"}
{"msg":"i tried docker system prune  -a  nothing much happened :(","username":"ahmedahmed","ts":"2019-05-15T12:07:03.145Z"}
{"msg":"what is your system config?","username":"fahadkheratker","ts":"2019-05-15T12:11:50.425Z"}
{"msg":"@fahadkheratker no, a solidity smart contract can't be upgraded. Its the same situation as in Ethereum","username":"swetha","ts":"2019-05-15T12:34:47.673Z"}
{"msg":"@umtyzc I am not sure what you are trying. I need more information about what you are calling.","username":"swetha","ts":"2019-05-15T12:35:29.407Z"}
{"msg":"@ahmedahmed docker prune should not affect anything is running","username":"swetha","ts":"2019-05-15T12:36:21.848Z"}
{"msg":"I am trying to implement loyalty-points-evm-fabric example. @swetha I have reached the last step. I can start the dapp.js application on localhost:8000 but give a error. ","username":"umtyzc","ts":"2019-05-15T12:41:18.552Z"}
{"msg":"Error details: Failed to query the ledger: Transaction processing for endorser [localhost:7051]: Chaincode status Code: (500) UNKNOWN. Description: failed to execute contract: call error: Invalid jump dest","username":"umtyzc","ts":"2019-05-15T12:43:05.175Z"}
{"msg":"What is the actual command you are trying to run that causes that error","username":"swetha","ts":"2019-05-15T12:55:47.773Z"}
{"msg":"@swetha do you actually plan to have the call today? I'm guessing not, given that you're at Consensus...","username":"lehors","ts":"2019-05-15T14:54:15.503Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Fabric+Chaincode+EVM","username":"lehors","ts":"2019-05-15T14:54:29.910Z"}
{"msg":"@MHBauer should be running it","username":"swetha","ts":"2019-05-15T15:27:18.231Z"}
{"msg":"I panicked. Computer crashed and i couldn't get it to start,, so I went in to \"get ready to go in to work mode\" and failed to consider the obvious solution of \"use my own personal computer\" until I got to work here.  I apologize. ","username":"MHBauer","ts":"2019-05-15T18:07:25.875Z"}
{"msg":"I think our main update right now, is we don't have enough time to work on this in relation to trying to fill gaps on fabric 2.0. ","username":"MHBauer","ts":"2019-05-15T18:08:12.880Z"}
{"msg":"any idea how to debug evmcc?","username":"fahadkheratker","ts":"2019-05-16T09:45:50.561Z"}
{"msg":"","username":"fahadkheratker","ts":"2019-05-16T12:32:02.904Z","attachments":[{"type":"file","title":" Clipboard - May 16, 2019 6:01 PM","title_link":"/file-upload/46DWpFC8MEMPts9Km/%20Clipboard%20-%20May%2016,%202019%206:01%20PM","image_url":"/file-upload/46DWpFC8MEMPts9Km/%20Clipboard%20-%20May%2016,%202019%206:01%20PM","image_type":"image/png","image_size":21050,"url":"/file-upload/46DWpFC8MEMPts9Km/%20Clipboard%20-%20May%2016,%202019%206:01%20PM","remote":false,"fileId":"46DWpFC8MEMPts9Km","fileName":" Clipboard - May 16, 2019 6:01 PM"}]}
{"msg":"Seems like your application isn't able to connect to the peer","username":"swetha","ts":"2019-05-16T12:51:11.632Z"}
{"msg":"any idea on how do we debug the above issue?","username":"fahadkheratker","ts":"2019-05-17T05:05:52.510Z"}
{"msg":"also is there nay way to debug evmcc?","username":"fahadkheratker","ts":"2019-05-17T05:06:04.786Z"}
{"msg":"","username":"fahadkheratker","ts":"2019-05-17T05:06:52.661Z","attachments":[{"type":"file","title":"ethereum-get-set.zip","title_link":"/file-upload/YctfZjsyLCz2pxNku/ethereum-get-set.zip","url":"/file-upload/YctfZjsyLCz2pxNku/ethereum-get-set.zip","remote":false,"fileId":"YctfZjsyLCz2pxNku","fileName":"ethereum-get-set.zip"}]}
{"msg":"I have also setup a channel based even listener on my channel to listen to my blocks and to detect changes to ledger","username":"fahadkheratker","ts":"2019-05-17T06:02:54.359Z"}
{"msg":"the following is the output of the chain code","username":"fahadkheratker","ts":"2019-05-17T06:03:07.562Z"}
{"msg":"","username":"fahadkheratker","ts":"2019-05-17T06:03:32.487Z","attachments":[{"type":"file","title":"fahadkheratker - Fri May 17 2019 11:33:13 GMT+0530 (India Standard Time).txt","title_link":"/file-upload/AMco9vyY2EAinkZRr/fahadkheratker%20-%20Fri%20May%2017%202019%2011:33:13%20GMT+0530%20(India%20Standard%20Time).txt","url":"/file-upload/AMco9vyY2EAinkZRr/fahadkheratker%20-%20Fri%20May%2017%202019%2011:33:13%20GMT+0530%20(India%20Standard%20Time).txt","remote":false,"fileId":"AMco9vyY2EAinkZRr","fileName":"fahadkheratker - Fri May 17 2019 11:33:13 GMT+0530 (India Standard Time).txt"}]}
{"msg":"There are three blocks\n\nDuring invoking of Block 1 , i had initialised value \"ab\" to \"fahad\" and as you can see there are two values in the write state, the first value i do not know what it is, the second value is my data.","username":"fahadkheratker","ts":"2019-05-17T06:05:37.447Z"}
{"msg":"then when invoking block 2 i updated \"ab\" to \"fahad v2\" and there were three entries in the write states , 1st unclear value [ chaincode data maybe], second value is blank and the 3rd value is my data","username":"fahadkheratker","ts":"2019-05-17T06:07:24.259Z"}
{"msg":"then when invoking block 2 i updated \"ab\" to \"fahad v2\" and there were three entries in the write states , 1st unknown value [ chaincode data maybe], second value is blank and the 3rd value is my data","username":"fahadkheratker","ts":"2019-05-17T06:07:24.259Z"}
{"msg":"then when invoking the 3rd block i updated \"ab\" to \"\" and there are three states again , 1st unknown value [ chaincode data maybe], second value is blank and third value is the key \"ab\" with some unknown string","username":"fahadkheratker","ts":"2019-05-17T06:09:09.851Z"}
{"msg":"@swetha  can you please check the chain code and the write state and explain me why is this happening and what is  happening and give some clarity towards the process","username":"fahadkheratker","ts":"2019-05-17T06:10:42.789Z"}
{"msg":"we have a channel based block listener that reads writes states to determine what value is added in the block chain such that we do not have to query the block chain everytime and have a record of all transaction and states.","username":"fahadkheratker","ts":"2019-05-17T06:12:58.577Z"}
{"msg":"Please look in to this.","username":"fahadkheratker","ts":"2019-05-17T06:13:14.249Z"}
{"msg":"what has your listener to do with the question? ","username":"MHBauer","ts":"2019-05-17T22:45:04.016Z"}
{"msg":"The reads are the reads and the writes are the writes. It's how the chaincode works.","username":"MHBauer","ts":"2019-05-17T22:45:20.451Z"}
{"msg":"Has joined the channel.","username":"circlespainter","ts":"2019-05-18T07:41:02.234Z","type":"uj"}
{"msg":"You can check the listener output and see what the evm is writing","username":"fahadkheratker","ts":"2019-05-18T11:03:02.942Z"}
{"msg":"the thing is  when i am setting the property ab to blank during the third write the value that is written to the ledger is the name of the property that is ab with some added string","username":"fahadkheratker","ts":"2019-05-18T11:09:44.001Z"}
{"msg":"i dont understand this behavior","username":"fahadkheratker","ts":"2019-05-18T11:09:49.765Z"}
{"msg":"@fahadkheratker I haven't had time to dig through. Quick glance the 3 keys seem to make sense. I believe the first is the contract account, the second is the mapping in which you are storing the keys in your contract, and the third is the key,value pair in the mapping of which you are altering","username":"swetha","ts":"2019-05-20T04:39:11.557Z"}
{"msg":"After you do the third block and you query the key value is ab returning something other than blank?","username":"swetha","ts":"2019-05-20T05:06:35.243Z"}
{"msg":"yes","username":"fahadkheratker","ts":"2019-05-20T05:13:45.692Z"}
{"msg":"this is what is written in the second block's last write states\n\n\n          \"value\": \"Fahadv2\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u000e\"","username":"fahadkheratker","ts":"2019-05-20T05:15:54.750Z"}
{"msg":"and the below is written in the third block's last write state\n\n\n  \"value\": \"ab\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"\n        ","username":"fahadkheratker","ts":"2019-05-20T05:16:21.367Z"}
{"msg":"as you can see Fahadv2 is replaced by the property name itself in the last block","username":"fahadkheratker","ts":"2019-05-20T05:21:36.558Z"}
{"msg":"shouldnt it be blank insteaD?","username":"fahadkheratker","ts":"2019-05-20T05:21:46.236Z"}
{"msg":"and what is this value \"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\" what encoding is this , is this garbage value?","username":"fahadkheratker","ts":"2019-05-20T05:22:15.031Z"}
{"msg":"okI think `\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000` is just a series of empty bytes","username":"swetha","ts":"2019-05-20T05:27:43.599Z"}
{"msg":"are you using the peer cli?","username":"swetha","ts":"2019-05-20T05:27:51.043Z"}
{"msg":"basically you are getting the raw bits back, you should encode into hex","username":"swetha","ts":"2019-05-20T05:28:17.465Z"}
{"msg":"yes i am using peer cli","username":"fahadkheratker","ts":"2019-05-20T05:30:56.018Z"}
{"msg":"post encoding to hex how to convert it into readable string?","username":"fahadkheratker","ts":"2019-05-20T05:33:25.968Z"}
{"msg":"you have to use the sdk","username":"swetha","ts":"2019-05-20T05:42:15.744Z"}
{"msg":"or when you query you can provide `--hex'","username":"swetha","ts":"2019-05-20T05:42:27.742Z"}
{"msg":"or when you query you can provide `--hex`","username":"swetha","ts":"2019-05-20T05:42:27.742Z"}
{"msg":"but recommendation is to use an sdk to interact with the evmcc","username":"swetha","ts":"2019-05-20T05:42:46.171Z"}
{"msg":"but recommendation is to use an sdk to interact with a fabric network","username":"swetha","ts":"2019-05-20T05:42:46.171Z"}
{"msg":"for the evmcc specifically use fab3","username":"swetha","ts":"2019-05-20T05:43:00.915Z"}
{"msg":"we are using node sdk can we do it with that?","username":"fahadkheratker","ts":"2019-05-20T05:44:43.137Z"}
{"msg":"yes","username":"swetha","ts":"2019-05-20T05:46:27.612Z"}
{"msg":"you an do that and do everything manually","username":"swetha","ts":"2019-05-20T05:46:44.822Z"}
{"msg":"you can do that and do everything manually","username":"swetha","ts":"2019-05-20T05:46:44.822Z"}
{"msg":"or you can use fab3, which allows you to use ethereum clients like remix or web3.js","username":"swetha","ts":"2019-05-20T05:46:58.127Z"}
{"msg":"actually we already have a lot of micro services up and running so we are avoiding fab3 implementation.","username":"fahadkheratker","ts":"2019-05-20T05:56:41.137Z"}
{"msg":"we have already manually implemented the code to invoke and query from our peers directly","username":"fahadkheratker","ts":"2019-05-20T05:57:07.327Z"}
{"msg":"only this remaining is to convert this raw data into readable data","username":"fahadkheratker","ts":"2019-05-20T05:57:21.324Z"}
{"msg":"then you can do it using the node sdk","username":"swetha","ts":"2019-05-20T06:19:02.856Z"}
{"msg":"just change the encoding of the returned values of your invokes and queries","username":"swetha","ts":"2019-05-20T06:19:18.014Z"}
{"msg":"@fahadkheratker I use the following npm package to encode and decode arguments and return values\nhttps://www.npmjs.com/package/ethereumjs-abi\n\nPros: just supply the \"readable\" values plus the param/return part of the solidity method signature, and the package will encode/decode it according to the solidity spec (handling even complex structures) ","username":"klenik","ts":"2019-05-20T08:38:20.819Z"}
{"msg":"Has joined the channel.","username":"gregdhill","ts":"2019-05-20T11:14:48.093Z","type":"uj"}
{"msg":"@klenik thanks ","username":"fahadkheratker","ts":"2019-05-20T12:42:06.927Z"}
{"msg":"@swetha i have successfully decoded the payloads on node","username":"fahadkheratker","ts":"2019-05-20T12:42:27.771Z"}
{"msg":"however still unsure about the value that is written in the third block. It should be blank  but instead the key name is being written in the last state of the third block","username":"fahadkheratker","ts":"2019-05-20T12:44:14.282Z"}
{"msg":"why is it so?","username":"fahadkheratker","ts":"2019-05-20T12:44:21.712Z"}
{"msg":"the last block is storing both the key and the value","username":"swetha","ts":"2019-05-20T18:23:51.464Z"}
{"msg":"the value in this case is empty bytes","username":"swetha","ts":"2019-05-20T18:23:56.952Z"}
{"msg":"the key is ab","username":"swetha","ts":"2019-05-20T18:24:00.352Z"}
{"msg":"any particular reason for this behaviour?","username":"fahadkheratker","ts":"2019-05-21T04:38:58.902Z"}
{"msg":"as all blocks are only storing the value of the keys","username":"fahadkheratker","ts":"2019-05-21T04:39:15.319Z"}
{"msg":"only the last block is saving both the key and value when blank value is assigned","username":"fahadkheratker","ts":"2019-05-21T04:39:40.341Z"}
{"msg":"whenever a blank value is set , the key value both are stored in the write state.","username":"fahadkheratker","ts":"2019-05-21T05:21:13.767Z"}
{"msg":"why is it so?","username":"fahadkheratker","ts":"2019-05-21T05:21:16.332Z"}
{"msg":"can you please help?","username":"fahadkheratker","ts":"2019-05-21T05:21:20.412Z"}
{"msg":"@fahadkheratker that's what the burrow evm gives as writes. We're passing whatever it does through.","username":"MHBauer","ts":"2019-05-21T20:23:51.445Z"}
{"msg":"@swetha there is an issue, i have set up the fab3 server and the web3 client, then i deployed the solidity smart contract below and tried to set a blank value to a property (A) of object called \"state\" of type \"mapping\", the service was successfully executed, however when i tried to retrieve the same property again through web3 and fab3 setup my client broke. and in the \"Write States\" the name of the property was saved instead of a blank value\n\nthis is indeed a bug. as my fab3 and web3 client also broke when querying this.","username":"fahadkheratker","ts":"2019-05-22T09:32:27.665Z"}
{"msg":"pragma solidity ^0.4.0;\n\ncontract GetSetContract{\n\n    mapping (string => string) state;\n    event StateSaveEvent(string key, string value);\n\n    function get(string memory key) public view returns(string) {\n        string memory value = state[key];\n        \n        require(!equal(value, ''));\n        \n        return value;\n    }\n\n    function set(string memory key, string memory value) public {\n        state[key] = value;\n\n        emit StateSaveEvent(key, value);\n    }\n    \n    function compare(string _a, string _b) internal returns (int) {\n        bytes memory a = bytes(_a);\n        bytes memory b = bytes(_b);\n        uint minLength = a.length;\n        if (b.length < minLength) minLength = b.length;\n        \n        for (uint i = 0; i < minLength; i ++)\n            if (a[i] < b[i])\n                return -1;\n            else if (a[i] > b[i])\n                return 1;\n        if (a.length < b.length)\n            return -1;\n        else if (a.length > b.length)\n            return 1;\n        else\n            return 0;\n    }\n    \n    function equal(string _a, string _b) internal returns (bool) {\n        return compare(_a, _b) == 0;\n    }\n}","username":"fahadkheratker","ts":"2019-05-22T09:32:29.376Z"}
{"msg":"","username":"fahadkheratker","ts":"2019-05-22T09:32:58.188Z","attachments":[{"type":"file","title":"ethereum-get-set.zip","title_link":"/file-upload/2SJnYw7MR7GfJqbeG/ethereum-get-set.zip","url":"/file-upload/2SJnYw7MR7GfJqbeG/ethereum-get-set.zip","remote":false,"fileId":"2SJnYw7MR7GfJqbeG","fileName":"ethereum-get-set.zip"}]}
{"msg":"you know there's a require that's supposed to crash it when it's a blank value?","username":"MHBauer","ts":"2019-05-22T14:06:38.847Z"}
{"msg":"additionally, I'm still not sure if this can run require.","username":"MHBauer","ts":"2019-05-22T14:08:24.443Z"}
{"msg":"@fahadkheratker were you having issues when you tried this just with the peer cli or the node sdk?","username":"swetha","ts":"2019-05-22T14:09:07.120Z"}
{"msg":"and what is the error you are seeing?","username":"swetha","ts":"2019-05-22T14:12:45.921Z"}
{"msg":"@klenik any update on your fork-ish to make a caliper bench?","username":"MHBauer","ts":"2019-05-23T01:51:39.451Z"}
{"msg":"@swetha fab3 package","username":"fahadkheratker","ts":"2019-05-23T05:33:15.206Z"}
{"msg":"@fahadkheratker What is the error you are seeing? As @MHBauer pointed out, your contract will error when get something that is blank","username":"swetha","ts":"2019-05-23T17:11:31.469Z"}
{"msg":"@fahadkheratker What is the error you are seeing? As @MHBauer pointed out, your contract will error when you get something that is blank","username":"swetha","ts":"2019-05-23T17:11:31.469Z"}
{"msg":"@MHBauer My fork-ish was a quick-and-not-so-dirty integration, so it'll be some time (2 weeks maybe) before I can add it to the Caliper repo. \n(But it will be a nice addition, an Ethereum adapter is also WIP, and Burrow has some initial support, so the EVM will be covered from every angle soon :P )","username":"klenik","ts":"2019-05-23T20:10:00.233Z"}
{"msg":"@klenik very cool! looking forward to seeing that","username":"swetha","ts":"2019-05-23T20:38:04.386Z"}
{"msg":"Hi everyone, how can smart contract(deployed on Fabric) written in solidity invoke chaincode?  ","username":"Ulysses","ts":"2019-05-24T01:49:10.380Z"}
{"msg":"Cannot.","username":"MHBauer","ts":"2019-05-24T01:56:37.736Z"}
{"msg":"evm can only talk to evm","username":"MHBauer","ts":"2019-05-24T01:57:01.904Z"}
{"msg":":no_mouth: ","username":"Ulysses","ts":"2019-05-24T02:06:42.057Z"}
{"msg":"Thank you for helping me .","username":"Ulysses","ts":"2019-05-24T02:10:03.189Z"}
{"msg":"think about it realistically, tho. What concept of fabric has the evm? How would an evm call fabric?","username":"MHBauer","ts":"2019-05-24T02:11:47.762Z"}
{"msg":"wasm intern 2019 summer","username":"guoger","ts":"2019-06-03T03:06:54.136Z"}
{"msg":"wasm intern 2019 summer","username":"guoger","ts":"2019-06-03T03:07:54.484Z","attachments":[{"message_link":"/channel/fabric-evm?msg=jxnbJGwviPqnjkHXr","url":"/channel/fabric-evm?msg=jxnbJGwviPqnjkHXr","remote":true,"fileId":null,"fileName":null}],"type":"discussion-created"}
{"msg":"Has left the channel.","username":"hyper-sunder","ts":"2019-06-05T05:05:39.508Z","type":"ul"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Fabric+Chaincode+EVM meeting very soon","username":"MHBauer","ts":"2019-06-19T14:59:21.314Z"}
{"msg":"nobody wants to say hi to you...","username":"lehors","ts":"2019-06-19T15:05:56.676Z"}
{"msg":"you're not on mute but we like to make you suffer thinking you might be ;-)","username":"lehors","ts":"2019-06-19T15:12:10.878Z"}
{"msg":"Has joined the channel.","username":"kenty","ts":"2019-07-17T02:25:23.404Z","type":"uj"}
{"msg":"Has joined the channel.","username":"annumberhocker","ts":"2019-08-02T18:37:45.477Z","type":"uj"}
{"msg":"Has joined the channel.","username":"conanoc","ts":"2019-08-13T08:50:32.551Z","type":"uj"}
{"msg":"Has joined the channel.","username":"madiazp","ts":"2019-08-22T08:31:04.800Z","type":"uj"}
{"msg":"Hi, I've got a \"error 9 - call stack overflow: int64 overflow from word: ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩl\n\" from the evmcc.go when it use the call method https://github.com/hyperledger/fabric-chaincode-evm/blob/master/evmcc/evmcc.go#L148, is that bc of the smartcontract code being too large? or the arguments? or something else that I'm missing?","username":"madiazp","ts":"2019-08-22T08:38:16.151Z"}
{"msg":"the function in the smartcontract is something like this dd129313\": \"verifyTx(uint256[2],uint256[2][2],uint256[2],uint256[1]), and I don't want to paste the smartcontract code but is pretty large","username":"madiazp","ts":"2019-08-22T08:40:40.766Z"}
{"msg":"@madiazp I am taking a look. Sorry for the delay","username":"swetha","ts":"2019-08-26T18:09:17.360Z"}
{"msg":"@swetha No problem, I've got this answere from the burrow team https://github.com/hyperledger/burrow/issues/1224","username":"madiazp","ts":"2019-08-26T22:32:17.911Z"}
{"msg":"It will be really good if I (We) can see the logs from burrow","username":"madiazp","ts":"2019-08-26T22:33:09.374Z"}
{"msg":"@madiazp Oh great that they responded","username":"swetha","ts":"2019-08-26T22:33:17.823Z"}
{"msg":"\"We have an option that would help you debug which opcode caused the error: https://github.com/hyperledger/burrow/blob/develop/execution/evm/options.go#L11-L13 but it looks like fabric-evm doesn't currently expose any switch to make that run.\"","username":"madiazp","ts":"2019-08-26T22:33:29.961Z"}
{"msg":"Adding an option for burrow logs is on our list","username":"swetha","ts":"2019-08-26T22:33:46.208Z"}
{"msg":"Nice!","username":"madiazp","ts":"2019-08-26T22:33:54.306Z"}
{"msg":"We haven't gotten to it yet, unfortunately","username":"swetha","ts":"2019-08-26T22:34:15.992Z"}
{"msg":"Were you able to get to the core of your issue?","username":"swetha","ts":"2019-08-26T22:34:27.926Z"}
{"msg":"I think the issue was it just dumped it on stdout, and isn't configurable.","username":"MHBauer","ts":"2019-08-26T22:34:28.924Z"}
{"msg":"Not yet, today I will run the test told by the burrow team","username":"madiazp","ts":"2019-08-26T22:35:09.636Z"}
{"msg":":+1: ","username":"MHBauer","ts":"2019-08-26T22:35:22.227Z"}
{"msg":"If I get something weird I would let you know","username":"madiazp","ts":"2019-08-26T22:36:38.314Z"}
{"msg":"(in the test)","username":"madiazp","ts":"2019-08-26T22:36:47.757Z"}
{"msg":"will*","username":"madiazp","ts":"2019-08-26T22:36:56.711Z"}
{"msg":"I am also experimenting with the logs. If there is a quick way for you to enable it locally I will let you know as well","username":"swetha","ts":"2019-08-26T23:02:00.371Z"}
{"msg":"that would be great, thanks","username":"madiazp","ts":"2019-08-26T23:03:06.870Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=JYgt8PB8amCqdiFm4) this code irritates me. there's a way to turn it on, but not off...","username":"MHBauer","ts":"2019-08-26T23:45:03.060Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=JYgt8PB8amCqdiFm4","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=JYgt8PB8amCqdiFm4","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I do retract the previous statement I made about stdout logging, they appear to log to a logger now.","username":"MHBauer","ts":"2019-08-26T23:46:11.115Z"}
{"msg":"I suppose we always use a fresh instance of the vm, so, it could be made into a startup configuration, or read from the ledger. Bit difficult.","username":"MHBauer","ts":"2019-08-26T23:49:41.118Z"}
{"msg":"@madiazp Here is a commit I added on my fork that turns on the logging in burrow: https://github.com/swetharepakula/fabric-chaincode-evm/commit/27a43d5ff4e2b9c3eb72f70a5314393cd66731e0","username":"swetha","ts":"2019-08-27T00:33:57.479Z"}
{"msg":"As Morgan mentioned, there is no way to turn it off currently","username":"swetha","ts":"2019-08-27T00:34:09.527Z"}
{"msg":"To get those changes, I recommend installing the evmcc again with the logging changes with a new version and then upgrading the evmcc to the new version. That should turn on the logging for you","username":"swetha","ts":"2019-08-27T00:34:55.523Z"}
{"msg":"Oh thanks a lot, I would try to do a merge in my local repo, I've changed a lot of things for my purposes","username":"madiazp","ts":"2019-08-27T02:00:21.732Z"}
{"msg":"will* again","username":"madiazp","ts":"2019-08-27T02:00:36.275Z"}
{"msg":"@swetha do we want to migrate to github?","username":"guoger","ts":"2019-08-27T02:03:19.119Z"}
{"msg":"@guoger yes we should","username":"swetha","ts":"2019-08-27T02:06:07.122Z"}
{"msg":"is the github pipeline thing free? or we need to coordinate with LF to sort out CI","username":"guoger","ts":"2019-08-27T02:06:46.091Z"}
{"msg":"Are we still sticking with jenkins?","username":"swetha","ts":"2019-08-27T02:18:28.531Z"}
{"msg":"I believe pipeline is free for open source/public projects?","username":"swetha","ts":"2019-08-27T02:18:56.523Z"}
{"msg":"that's how i understand it, so no jenkins, but azure pipelines","username":"guoger","ts":"2019-08-27T02:37:08.995Z"}
{"msg":"azure pipeline?","username":"MHBauer","ts":"2019-08-27T19:26:21.613Z"}
{"msg":"I just got access to the github version","username":"MHBauer","ts":"2019-08-27T19:26:28.309Z"}
{"msg":"not sure I can share that access","username":"MHBauer","ts":"2019-08-27T19:26:36.138Z"}
{"msg":"Hi again. So it was the amount of gas https://github.com/hyperledger/fabric-chaincode-evm/blob/master/evmcc/evmcc.go#L87. I've put a random value var gas uint64 = 10123122000 and kind of worked (I had no output but I think is related to the smart contract and not the fabric-cc-evm, and it ran successfully without error)","username":"madiazp","ts":"2019-08-28T00:28:11.609Z"}
{"msg":"Has joined the channel.","username":"vikas.kundz","ts":"2019-08-28T05:07:31.451Z","type":"uj"}
{"msg":"@madiazp that's great! Interesting error though. I am used to see a not enough gas error for that situation","username":"swetha","ts":"2019-08-28T20:47:29.777Z"}
{"msg":"Are most of the smart contracts that you write a similar size which would require gas limits higher than 90000?","username":"swetha","ts":"2019-08-28T20:48:09.437Z"}
{"msg":"Are most of the smart contracts that you write a similar size which would require gas limits higher than 10000?","username":"swetha","ts":"2019-08-28T20:48:09.437Z"}
{"msg":"the sc that I used in this case it was one auto generated by ZoKrates https://github.com/Zokrates/ZoKrates. I'm really new with smart contract but the tiny ones that I made to test fabric-cc-evm worked just fine. The smart contracts generated by ZoKrates are really large bc of the zk-SNARK implementations.","username":"madiazp","ts":"2019-08-28T20:58:36.240Z"}
{"msg":"but yeah it was odd to me too. I'll make more test about gas and why throw an overflow instead of a \"not enough gas\" error","username":"madiazp","ts":"2019-08-28T21:02:36.894Z"}
{"msg":"Here is a more detailed update https://github.com/hyperledger/burrow/issues/1224#issuecomment-525984271","username":"madiazp","ts":"2019-08-29T01:39:14.217Z"}
{"msg":"I have two questions about fabric-evm. \n1. evmcc is replacing \"from account\" or caller address to the creater's ID. This creater's ID will be the ID of Fab3 and it is strange that Fab3 replaces the caller address with it's own address. Some Ethereum Dapp will not work if it's JSON-RPC proxy replaces the caller address. For example, Ethereum wallet will not able to send ERC20 tokens to other accounts using Fab3. Is there any reason why Fab3 replaces the caller addess?\n2. Ethereum Dapps usually send signed transaction to the proxy and this ensures that the transaction is valid and it will not be modified in the middle until it is included in the block. evmcc does not seem to check the signature of the transaction, and it does not save the transaction as the original form. It's a problem because it executes the transaction without validation and the stored transaction cannot be verified that it's not tampered.","username":"conanoc","ts":"2019-08-29T09:50:01.373Z"}
{"msg":"@conanoc \n1. So in this case Fab3 would be connected to your wallet. When you start up you indicate the identity that you want to use. Fab3 does not actually replace the address. It just removes whatever is provided because the EVM gets the address by the submitting signature. Fab3 will sign the transaction with the identity you have chosen to use and from the signature the EVM on the fabric node will be able to determine the caller address. So there is no way to actually insert an caller address. We currently do not support Ethereum wallets. One of the biggest reasons is because the certificate algorithms are different from Ethereum and Fabric so the certs cannot be shared.\n2. Fab3 does not have the ability to send signed transactions. One of the blocks for this is that the underlying fabric client  (fabric-go-sdk) does not accept signed transactions yet. When the feature is added, there will need to be some thought on design because of the differences in Ethereum and Fabric certs. \nBy the time the transaction comes to the EVMCC, the fabric node has already verified the signature of the transactions. And for the transaction to be added to a block, various nodes must generate the same read write sets. Each node would be verifying the transaction signature ","username":"swetha","ts":"2019-08-29T20:23:57.644Z"}
{"msg":"when I submit a smart contract to the ledger via the ZeroAddress, it get added in the chain right? so other smart contract in the chain can use it? for example If I submit a solidity library as a smart contract  another smart contract could import it with its address.","username":"madiazp","ts":"2019-08-29T20:49:00.854Z"}
{"msg":"@madiazp That is correct","username":"swetha","ts":"2019-08-29T20:57:03.415Z"}
{"msg":"@swetha Thanks for your explanation. I think fabric transaction can just embed ethereum transaction as data and treat ethereum as one of the apps using fabric. fabric-evm could support ethereum wallets if evmcc does not replace the caller account. You mentioned that certificate algorithms are different from Ethereum and Fabric, but why do they have be the same? The thing fabric-evm has to do with the ethereum signature is to validate the signature of the ethereum transaction. As for the transaction added in the block, Ethereum Dapps will only care whether it's the same transaction as the one they submitted and if it can be verified with the signature attached in the transaction that it's not tamperd.","username":"conanoc","ts":"2019-08-30T02:45:17.024Z"}
{"msg":"@conanoc The algorithms don't necessarily need to be the same, but an ethereum identity is not associated to anything on the fabric side. It would mean the EVMCC would have added functionality about storing ethereum certs, and need to do the validation, which is already being done by the Fabric Peer. Saying that, we have thought about the approach you have mentioned, but have not settled on how to handle it. Questions that come up is whether that ethereum identity/certificate can be anonymous, which is different from Fabric. If we say ethereum identity needs to be connected to a fabric identity, it means maintaining two types of identity management. Ethereum Dapps would still be able to see it as the same transaction, as the caller address will be the same as the identity that signed the transaction to begin with. It would only be different if the Dapp tried to put in a callee address that it was not using to sign the transaction.\n\nI am also curious to understand the use case of needed an ethereum certificate over using the fabric one? What are the benefits gained?","username":"swetha","ts":"2019-08-30T03:06:31.048Z"}
{"msg":"@conanoc The algorithms don't necessarily need to be the same, but an ethereum identity is not associated to anything on the fabric side. It would mean the EVMCC would have added functionality about storing ethereum certs, and need to do the validation, which is already being done by the Fabric Peer. Saying that, we have thought about the approach you have mentioned, but have not settled on how to handle it. Questions that come up is whether that ethereum identity/certificate can be anonymous, which is different from Fabric. If we say ethereum identity needs to be connected to a fabric identity, it means maintaining two types of identity management. Ethereum Dapps would still be able to see it as the same transaction, as the caller address will be the same as the identity that signed the transaction to begin with. It would only be different if the Dapp tried to put in a callee address that it was not using to sign the transaction.\n\nI am also curious to understand the use case of needing an ethereum certificate over using the fabric one? What are the benefits gained?","username":"swetha","ts":"2019-08-30T03:06:31.048Z"}
{"msg":"@swetha \"If we say ethereum identity needs to be connected to a fabric identity\" I want to argue the opposite. I think fabric need not worry about ethereum identity. Because fabric need not worry about the internal ID system of the apps running on fabric. Ethereum is an app running on fabric. But currently, evmcc is touching the internal account of the app named \"ethereum\".\nI'd like to clarify this confusion. An ethereum node which serves evm-JSON-RPC can have two roles. One is serving the user running the node. The user is running a Dapp and a node on the his computer. He is the single user of the computer. The node has accounts generated by the user and the Dapp will use that accounts. The second role is serving multiple users as a proxy. The users are running Dapp on their own computers but are not running ethereum nodes. They use a proxy node which supports JSON-RPC. In this case, the users have their own accounts and they send transactions signed with their own certificate to the proxy. \nI've talked about this second case and you seem to considering only the first case. I think the second case is more common when we consider the ethereum nodes for the enterprise.","username":"conanoc","ts":"2019-08-30T04:16:42.015Z"}
{"msg":"Not sure i fully understand the question here but here's my response:\n\n>  I think fabric need not worry about ethereum identity.\nUltimately a tx needs to be signed by a signer, which needs to be 1-1 mapped to an account addr within Fabric, so the evm will know who's calling the contract. In another word, as long as evm itself doesn't manage an address space and does not do authentication, Fabric is going to be \"worrying about ethereum\" identity.\n\nas for submitting a signed tx via proxy or having a light node doing that for you, is orthogonal to this problem.","username":"guoger","ts":"2019-08-30T06:41:02.401Z"}
{"msg":"@conanoc  Not sure i fully understand the question here but here's my response:\n\n>  I think fabric need not worry about ethereum identity.\nUltimately a tx needs to be signed by a signer, which needs to be 1-1 mapped to an account addr within Fabric, so the evm will know who's calling the contract. In another word, as long as evm itself doesn't manage an address space and does not do authentication, Fabric is going to be \"worrying about ethereum\" identity.\n\nas for submitting a signed tx via proxy or having a light node doing that for you, is orthogonal to this problem.","username":"guoger","ts":"2019-08-30T06:41:02.401Z"}
{"msg":"@guoger  Yeah. I was actually talking about signed tx. I agree that generating 1-1 mapped account for handling unsigned tx or doing some command line jobs can be a convenient way. What I wanted to say was fabric identity can be and should be independent to the ethereum identity.","username":"conanoc","ts":"2019-08-30T09:55:09.833Z"}
{"msg":"@conanoc are you suggesting that we double sign the tx - `F(E(m))`, where F is for fabric and E for ethereum?","username":"guoger","ts":"2019-08-30T09:58:16.179Z"}
{"msg":"Sure.","username":"conanoc","ts":"2019-08-30T09:58:54.673Z"}
{"msg":"E(m) is necessary because it will be done offline usually and F(m') will be done by fabric's existing logic.","username":"conanoc","ts":"2019-08-30T10:01:28.847Z"}
{"msg":"It may be confusing what tx mean here. I mean the fabric tx not the ethereum tx.","username":"conanoc","ts":"2019-08-30T10:03:35.155Z"}
{"msg":"ok i see. My confusion was actually around `fabric need not worry about ethereum identity`, because technically it does - it needs to get addr from pubkey.","username":"guoger","ts":"2019-08-30T10:10:43.223Z"}
{"msg":"so it's not completely agnostic to ethereum identity in the sense that if ethereum changes the way it encodes addr, then evmcc is broken","username":"guoger","ts":"2019-08-30T10:11:47.444Z"}
{"msg":"Right.","username":"conanoc","ts":"2019-08-30T10:12:31.119Z"}
{"msg":"but anyway, i agree that we should be more compatible with wallets, and i don't think this require drastic change to out implementation","username":"guoger","ts":"2019-08-30T10:12:53.516Z"}
{"msg":"but anyway, i agree that we should be more friendly with wallets, and i don't think this require drastic change to out implementation","username":"guoger","ts":"2019-08-30T10:12:53.516Z"}
{"msg":"but anyway, i agree that we should be more friendly to wallets, and i don't think this require drastic change to out implementation","username":"guoger","ts":"2019-08-30T10:12:53.516Z"}
{"msg":"let's see what others think when they wake up @swetha @MHBauer ","username":"guoger","ts":"2019-08-30T10:13:26.544Z"}
{"msg":"I was confused that fab3 was already handling signed tx via eth_sendTrasaction RPC. I didn't know signed tx only sent via eth_sendRawTransaction RPC.","username":"conanoc","ts":"2019-08-30T10:17:23.862Z"}
{"msg":"So I thought evmcc was replacing the caller address of the signed ethereum tx.","username":"conanoc","ts":"2019-08-30T10:18:47.754Z"}
{"msg":"I think every thing will be clear when we implement eth_sendRawTransaction RPC. :smile: ","username":"conanoc","ts":"2019-08-30T10:22:33.290Z"}
{"msg":"So in this scenario E(M) where E is ethereum is purely meant for encryption purposes. If this is the purpose then doing F(E(m)) is not a problem. My concern here is that Fab3 if it is doing F(x), where x is any transaction, is that it should not be used as a proxy that multiple users can use. Because from a fabric transaction standpoint only one user is submitting those transactions. I know Jay and I have talked about F(E(m)) as a way to introduce wallet support sooner than later. However, even if we don't care about the E(m) algorithm or identity, we should care that F(x) is done per user, not a group. If we break this, it opens the door for pseudo anonymous transactions which I feel like is a departure from Fabric. \n\nTo be able to make fab3 a proxy that does no signing and simply acts as a way to send transactions, then I think the identity used needs to be one recognized by the system. This option requires that 1. either we support ethereum signing algorithm or 2. waiting on signing transactions through the go sdk. Though as I think about it we could support 2 now and leave it up to the user to figure out how to sign the transaction.\n\nIf we support F(E(m)) I think we are then making Fab3 1-1 to a user. If we try to support using Fabric ways of submitting signed transactions we would be able to make fab3 more lightweight and simply a proxy.","username":"swetha","ts":"2019-08-30T16:44:59.194Z"}
{"msg":"@conanoc , @guoger ","username":"swetha","ts":"2019-08-30T16:45:10.296Z"}
{"msg":"@swetha Isn't F(x) done on the peer not on Fab3? Fab3 could have no function of signing. E(m) will be done on the ethereum Dapps, e,g, Wallets and sent to Fab3 via eth_sendRawTrasaction. Fab3 only checks the validity of the signature and bypasses the transaction to evmcc. F(x) will be done on the endorsing peers as usual. In this scenario, E(m) is not done when Fab3 is serving eth_sendTransaction because Fab3 is creating ethereum tx itself. I think it's not a problem because the ethereum tx is created by Fab3 itself, which means Fab3 don't have to verify the tx.","username":"conanoc","ts":"2019-08-31T01:54:07.902Z"}
{"msg":"F(x) validation is done on the peer side, but the actual signing currently is done on Fab3. So to submit anything it needs to be signed by an identity recognized by Fabric. Say we allow an ethereum cert to sign a transaction and send the raw transaction. That signed ethereum tx must be signed by with a fabric cert. Whether this is done through fab3 or outside, it doesn't matter. This is where you need to have a fabric identity.","username":"swetha","ts":"2019-08-31T02:04:10.304Z"}
{"msg":"So what the role of Fab3 is in that end to end can change based on how the fabric signing is done","username":"swetha","ts":"2019-08-31T02:06:01.613Z"}
{"msg":"@conanoc ","username":"swetha","ts":"2019-08-31T02:06:19.800Z"}
{"msg":"I got what you mean. Thank you for your explanation. @swetha @guoger ","username":"conanoc","ts":"2019-09-02T02:45:06.365Z"}
{"msg":"@swetha I have found a bit of time for us to finally take a look at integrating the fab3 web3 code into Burrow. Last time we spoke it was with regards to an intern which we didn't get but I remember you saying you had the go ahead in principle to spin https://github.com/hyperledger/fabric-chaincode-evm/tree/master/fab3 out into it sown repo?\n\nIs that still the case, not sure what kind of overhead that represents for you. Provided the import tree from the fab3 sub-package is fairly clean it is not a huge deal for us to start integrating by depending on fabric-chaincode-evm. Longer term if it makes it into Burrow master it would be preferable for it to be its own thing.\n\n\n\n\n","username":"silasdavis","ts":"2019-09-02T12:14:27.528Z"}
{"msg":"@swetha I have found a bit of time for us to finally take a look at integrating the fab3 web3 code into Burrow. Last time we spoke it was with regards to an intern which we didn't get but I remember you saying you had the go ahead in principle to spin https://github.com/hyperledger/fabric-chaincode-evm/tree/master/fab3 out into it sown repo?\n\nIs that still the case, not sure what kind of overhead that represents for you. Provided the import tree from the fab3 sub-package is fairly clean it is not a huge deal for us to start integrating by depending on fabric-chaincode-evm. Longer term if it makes it into Burrow master it would be preferable for it to be its own thing.","username":"silasdavis","ts":"2019-09-02T12:14:27.528Z"}
{"msg":"@swetha I have found a bit of time for us to finally take a look at integrating the fab3 web3 code into Burrow. Last time we spoke it was with regards to an intern which we didn't get but I remember you saying you had the go ahead in principle to spin https://github.com/hyperledger/fabric-chaincode-evm/tree/master/fab3 out into it sown repo?\n\nIs that still the case? I'm not sure what kind of overhead that represents for you. Provided the import tree from the fab3 sub-package is fairly clean it is not a huge deal for us to start integrating by depending on fabric-chaincode-evm. Longer term if it makes it into Burrow master it would be preferable for it to be its own thing.","username":"silasdavis","ts":"2019-09-02T12:14:27.528Z"}
{"msg":"Also reading above I think there will be some coordination needed if/when we add wallet support - assuming this involves `sendRawTransaction`.","username":"silasdavis","ts":"2019-09-02T12:15:13.088Z"}
{"msg":"One piece we could definitely collaborate on is writing a Apache 2 golang RLP codec to pull out the eth transaction data","username":"silasdavis","ts":"2019-09-02T12:15:53.213Z"}
{"msg":"@silasdavis I have to check if we still have the go ahead to move fab3 out. A few things that have changed from then to know, is that fabric and its sub components have been slowly moving from gerrit to github repositories. This involves changes in our CI/CD.  I am thinking if I get the go ahead again, it would be best to coordinate with the move to github for the fabric-chaincode-evm.\n\nIn regards to fab3 imports. They should be fairly clean. We are also trying to separate out the evmcc and fab3 code in the repository to make the evmcc easier to install as well as give us more flexibility with out dependencies between evmcc and fab3. Here is a wip branch of that code: https://github.com/swetharepakula/fabric-chaincode-evm/tree/split-evmcc-fab3. ","username":"swetha","ts":"2019-09-03T16:52:50.742Z"}
{"msg":"why did we think https://jira.hyperledger.org/browse/FAB-13768 was a problem? I can recall we kind of all independently think so, but the 'why' doesn't come to me anymore...","username":"MHBauer","ts":"2019-09-03T20:32:54.201Z"}
{"msg":"@MHBauer The user address creation is not a problem in its current form. The issue was originally created to move towards being more similar to how ethereum generates address. As in directly getting the sum from the user's public key. The issue will not have much a change from a user perspective other than their user address being different","username":"swetha","ts":"2019-09-04T00:34:53.274Z"}
{"msg":"well let's get it in the issue.","username":"MHBauer","ts":"2019-09-04T00:41:59.345Z"}
{"msg":"There should be a comment from earlier today saying something similar","username":"swetha","ts":"2019-09-04T04:26:24.060Z"}
{"msg":"SUPER","username":"MHBauer","ts":"2019-09-04T05:24:23.713Z"}
{"msg":"Hi, from where does the evmcc import the burrow package? They're not in the fabric-cli container's gopath, nor the peer's, and even when I remove the burrow files from the gopath of my local machine the chaincode is still installed and invokated with no problems. ","username":"madiazp","ts":"2019-09-05T06:24:34.118Z"}
{"msg":"I want to modify something on the evm/vm.go of the burrow package, but I'm not sure what path is the one that evmcc is using. ","username":"madiazp","ts":"2019-09-05T06:26:58.079Z"}
{"msg":"IINM, it's in `vendor` dir","username":"guoger","ts":"2019-09-05T06:36:06.233Z"}
{"msg":"oh I see... Thanks!","username":"madiazp","ts":"2019-09-05T06:38:35.478Z"}
{"msg":"Hi,I've been having an issue with fab3 for a few days now. I'm trying the getLogs call like in Fab3 Instructions: https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Fab3_Instructions.md#eth_getlogs however, I'm getting this message:\n{\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32000,\"message\":\"rpc: can't find method \\\"eth.GetLogs\\\"\",\"data\":null},\"id\":1}``\nI don't know what I'm doing wrong, because it used to work before.\nAny help is appreciated, thanks","username":"Shezay","ts":"2019-09-05T06:43:48.508Z"}
{"msg":"@Shezay what is the request you are sending?","username":"swetha","ts":"2019-09-05T13:58:43.016Z"}
{"msg":"@swetha I'm sending the request from the example\ncurl http://127.0.0.1:5000 -X POST -H \"Content-Type:application/json\" -d '{\n  \"jsonrpc\":\"2.0\",\n  \"method\": \"eth_getLogs\",\n  \"id\":1,\n  \"params\":[\n    {\"fromBlock\":\"earliest\",\n    \"address\":\"0x...\",\n    \"topics\":[]}]\n}'\nwith a valid address of a smart contract I've deployed on the network and empty topics. But get the \"can't find method getLogs\" message.","username":"Shezay","ts":"2019-09-06T05:56:46.747Z"}
{"msg":"@Shezay what version of the code are you using?","username":"swetha","ts":"2019-09-06T06:09:02.221Z"}
{"msg":"That error means that getLogs was not implemented. We introduced that api in our second release. So v0.2, v0.3 and master should not be having that problem","username":"swetha","ts":"2019-09-06T06:11:40.412Z"}
{"msg":"If you are switching between versions, also check to make sure to rebuild fab3","username":"swetha","ts":"2019-09-06T06:11:55.945Z"}
{"msg":"If you are switching between versions, also check to make sure you are rebuilding fab3","username":"swetha","ts":"2019-09-06T06:11:55.945Z"}
{"msg":"@swetha I thought it might have been that, so tried with the master and v0.2, and it didn't work with either. I rebuilt it, even installed evmcc again just in case. So at this point I thought it might have been something with a configuration file that is wrong, but idk if there's anything that may cause that problem?\nI did use fab3 to deploy some contracts and it worked, so idk why it wouldn't with that. \nI'll rebuild it again using the master branch just in case, and see if it works though","username":"Shezay","ts":"2019-09-06T06:29:23.768Z"}
{"msg":"@swetha So I just removed the previous fabric-chaincode-evm directory, got the master branch, \ndid the make fab3 command, \nrestarted my cli container, installed the evm chaincode as evmcc2\nset the Fab3 variables, started it, and sent the request and it still says it cannot find the getLogs method. I'm sorry if this is not getting anywhere haha but I'm a bit lost. I'm thinking of starting a brand new network on another machine and test it there. Just in case there is something wrong with this network or something","username":"Shezay","ts":"2019-09-06T06:52:06.180Z"}
{"msg":"@swetha just tried it on another machine with a previous configuration, and it worked. So there must be something wrong with some of my changes","username":"Shezay","ts":"2019-09-06T11:11:54.204Z"}
{"msg":"@Shezay where/what are the changes you are making? Are you touching the codec file? Changes to the config file will not affect how fab3 works. That error is coming purely from the library we use to process the requests ","username":"swetha","ts":"2019-09-06T15:32:47.392Z"}
{"msg":"The issue must exist in a Fab3 change.","username":"MHBauer","ts":"2019-09-06T15:42:18.982Z"}
{"msg":"The reason why I don't believe the issue is in Fab3 itself is because I tried rebuilding it using version 0.2 and it kept giving me that issue. And on another machine, using 0.2 it didn't? I mean, I don't know I could be way wrong haha\nAnd no, @swetha I haven't touched any fab3 files. I was mostly speaking about maybe something being spelled wrong or wrong paths or something like that.","username":"Shezay","ts":"2019-09-07T17:31:42.547Z"}
{"msg":"@Shezay So the error is coming because the gorilla rpc library we use can't find a method eth.GetLogs, which should be corresponding to https://github.com/hyperledger/fabric-chaincode-evm/blob/release-0.2/fab3/ethservice.go#L388. Gorilla figures out what to look for from this file: https://github.com/hyperledger/fabric-chaincode-evm/blob/release-0.2/fab3/codec.go#L38-L51. Basically it takes eth_getLogs and turns it into eth.GetLogs. The error happens at the fab3 level. The request can't be processed, so it is returning the error, but it has not passed on the request to the fabric network yet.\n\nIf there are not spelling errors and changes to those files, I am not sure why that error is happening. My only guess is that it could be because the args you are passing in does not match what getLogs is expecting. But if you are seeing on a clean clone of the repo and compiling your request is working, that tells me it has be linked to the changes you have.","username":"swetha","ts":"2019-09-07T18:58:01.155Z"}
{"msg":"@swetha ohh i see\n\nThought as much, thank you so much for taking your time answering this. I'll look more into, see if I can find what was off","username":"Shezay","ts":"2019-09-08T15:39:46.490Z"}
{"msg":"@swetha Do you by any chance have a timeline for this update?\nhttps://github.com/swetharepakula/fabric-chaincode-evm/tree/split-evmcc-fab3\nA self-contained evmcc vendor dir would be a huge help :) ","username":"klenik","ts":"2019-09-13T18:10:24.585Z"}
{"msg":"@klenik some of your struggles were part of the motivation of doing the split. :grinning:  Code wise I think the work is almost ready, it needs a little rebasing with some of the new patches. The difficult thing is going to be the reviews as the change touches almost every file. Most are renames, but we still want to be careful. So I see the review process taking a while. So in regards to a concrete timeline, I don't have one. We do want that in our next release, but I am not sure when that will be","username":"swetha","ts":"2019-09-13T18:17:42.090Z"}
{"msg":"lol.","username":"MHBauer","ts":"2019-09-13T18:32:36.572Z"}
{"msg":"pretty sure I already reviewed it.","username":"MHBauer","ts":"2019-09-13T18:33:04.160Z"}
{"msg":"yes, you started reviewing and had suggestions as well as more things you wanted to look at it","username":"swetha","ts":"2019-09-13T19:13:34.449Z"}
{"msg":"@swetha glad I could contribute to your pile of todos üòÅ then I think I'll do some unofficial testing on your branch ","username":"klenik","ts":"2019-09-13T19:13:47.511Z"}
{"msg":"Yes, @MHBauer we did go through some initial reviews, but iirc they weren't complete and more exploratory to make sure I wasn't missing anything obvious. Also I am not sure the suggestions that came out of that have been completely incorporated into the branch","username":"swetha","ts":"2019-09-13T19:14:57.987Z"}
{"msg":"Yes, @MHBauer we did go through some initial reviews, but iirc they weren't complete and were more exploratory to make sure I wasn't missing anything obvious. Also I am not sure the suggestions that came out of that have been completely incorporated into the branch","username":"swetha","ts":"2019-09-13T19:14:57.987Z"}
{"msg":"@klenik functionality wise that branch should be the same as testing on master of fabric-chaincode-evm :)","username":"swetha","ts":"2019-09-13T19:15:42.374Z"}
{"msg":"might be a little different in terms of what is vendored as now their is more flexibility","username":"swetha","ts":"2019-09-13T19:16:22.476Z"}
{"msg":"might be a little different in terms of what is vendored as now there is more flexibility","username":"swetha","ts":"2019-09-13T19:16:22.476Z"}
{"msg":"@swetha awesome! Hopefully I won't break it with my own added mods üòÖ","username":"klenik","ts":"2019-09-13T19:16:39.722Z"}
{"msg":"haha, look forward to hearing your feedback!","username":"swetha","ts":"2019-09-13T19:17:53.413Z"}
{"msg":"Any reason for also vendoring the fabric modules? They should be available inside the peer image, shouldn't they? (I'm a golang vendor novice, so forgive me if it's a stupid question) ","username":"klenik","ts":"2019-09-13T19:20:55.552Z"}
{"msg":"(at least the chaincodes I've seen so far haven't vendored them, and can still access the stub and other modules) ","username":"klenik","ts":"2019-09-13T19:29:37.200Z"}
{"msg":"@klenik Mostly ease of developing and testing outside of a fabric peer image","username":"swetha","ts":"2019-09-13T19:30:32.108Z"}
{"msg":"Shouldn't cloning the fabric source into gopath would achieve the same? And it'd also decrease the evmcc vendor folder size (and wouldn't bind it to a specific fabric version) ","username":"klenik","ts":"2019-09-13T19:32:27.176Z"}
{"msg":"yes what you said makes sense in efforts to reduce the vendor folder size","username":"swetha","ts":"2019-09-13T19:45:32.714Z"}
{"msg":"though I think we open the door to more development issues depending on fabric in someone's gopath","username":"swetha","ts":"2019-09-13T19:45:57.220Z"}
{"msg":"Versioning can become a problem, especially for someone who is also developing on fabric. Though fabric in terms of user functionality might not have breaking changes, they could have changes in the individual functions internally that we use or depend on. ","username":"swetha","ts":"2019-09-13T19:47:12.663Z"}
{"msg":"We probably get hit on this in our testing more than our chaincode as we depend on a lot of the testing helpers and utils in the fabric repo","username":"swetha","ts":"2019-09-13T19:48:29.098Z"}
{"msg":"and those change version to version","username":"swetha","ts":"2019-09-13T19:48:36.849Z"}
{"msg":"What you brought up though is interesting and I haven't really given it much thought before. Our current vendoring was a product of just how we/I were/was used to development for a go project, but I think it would be valuable to explore removing fabric from the evmcc vendor","username":"swetha","ts":"2019-09-13T19:52:13.832Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=4uv46S73EYXbhbkZ5) I haven't considered this aspect. In this case it makes perfect sense to vendor fabric modules :ok_hand: ","username":"klenik","ts":"2019-09-13T19:52:37.128Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=4uv46S73EYXbhbkZ5","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=4uv46S73EYXbhbkZ5","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I don't know whether devDependency concept exists in go, but that would be a good solution for this ","username":"klenik","ts":"2019-09-13T19:53:42.600Z"}
{"msg":"The more I think about it, the verisioning I think is the biggest issue, because right now we don't depend on the version of fabric available in the peer. And most chaincodes to my knowledge don't depend on modules in fabric as much as we do, so I feel like there is also more possibility of errors in that way too. But I am not sure","username":"swetha","ts":"2019-09-13T19:54:43.718Z"}
{"msg":"Dev dependencies is one thought. I don't think that is a built in concept and would be more about how a specific project is managed","username":"swetha","ts":"2019-09-13T20:00:25.236Z"}
{"msg":"I would love to hear what you learn if you experiment with removing fabric from the vendor directory. Definitely would be open to that as long as we figured out a way to keep development easy enough","username":"swetha","ts":"2019-09-13T20:01:32.088Z"}
{"msg":"@MHBauer & @guoger may have more thoughts on the subject as well","username":"swetha","ts":"2019-09-13T20:01:47.501Z"}
{"msg":"modules and stop vendoring","username":"MHBauer","ts":"2019-09-14T04:40:49.008Z"}
{"msg":"ut I dunno how any of it works in real life","username":"MHBauer","ts":"2019-09-14T04:41:00.908Z"}
{"msg":"How about using a hierarchical vendor structure? Something like this:\n```\nrepo-root/\n‚îú‚îÄ‚îÄ modules/\n‚îÇ   ‚îú‚îÄ‚îÄ evmcc/\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ vendor/\n‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ runtime deps without fabric\n‚îÇ   ‚îî‚îÄ‚îÄ fab3/\n‚îÇ       ‚îî‚îÄ‚îÄ vendor/\n‚îÇ           ‚îî‚îÄ‚îÄ runtime deps\n‚îî‚îÄ‚îÄ vendor/\n    ‚îî‚îÄ‚îÄ dev&test deps\n```\nThis way you still bind the fabric modules to your repo for dev&test, and evmcc is not packaged with fabric. Haven't tried such a structure yet, but _in theory_ it sounds doable (and maintainable)","username":"klenik","ts":"2019-09-15T09:09:59.844Z"}
{"msg":"Has joined the channel.","username":"charyorde","ts":"2019-09-15T14:24:35.393Z","type":"uj"}
{"msg":"Does that even work? I'm not sure that would help.","username":"MHBauer","ts":"2019-09-15T15:17:10.000Z"}
{"msg":"and its not really different from the three folders we have to move towards right now.","username":"MHBauer","ts":"2019-09-15T15:17:43.281Z"}
{"msg":"From this: https://golang.org/cmd/go/#hdr-Vendor_Directories\n> Code below a directory named \"vendor\" is importable only by code in the directory tree rooted at the parent of \"vendor\", and only using an import path that omits the prefix up to and including the vendor element.\n\nSo the evmcc code would see the union of packages in `reporoot/vendor` and `evmcc/vendor`, but the different types of deps are still kept separated (if I understood the above rule correctly, kind of like node_modules for Node.js). \n(I haven't tried the modules feature yet, seems cleaner than vendoring, but a multi-module repo is still discouraged in the go wiki.)\nAnyway, these are just some ideas, you probably know the reqs and constraints of your repo better","username":"klenik","ts":"2019-09-15T21:01:29.201Z"}
{"msg":"@MHBauer @swetha \nI've run into a strange behavior for a contract. An event marshalling error occurs after deploying a Solidity contract. I've gathered every related info in this gist: https://gist.github.com/aklenik/0f02e12a4a4c0461aedbd5249d3d8f0d\nSo far this is the only contract that produced the error (tried other contracts with/without constructor arguments, those worked fine).\nCan you also reproduce this in the master branch? (I'm working with the fork of @swetha )","username":"klenik","ts":"2019-09-16T12:38:44.520Z"}
{"msg":"@klenik which contract are you deploying?","username":"swetha","ts":"2019-09-16T21:41:31.576Z"}
{"msg":"This: https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/contracts/payment/escrow\n(included the exact source in the gist above)","username":"klenik","ts":"2019-09-16T21:43:16.273Z"}
{"msg":"(RefundEscrow.sol)","username":"klenik","ts":"2019-09-16T21:45:37.549Z"}
{"msg":"so i don't get an error when i deploy the refund escrow contract and put my user address as the argument to the constructor!","username":"swetha","ts":"2019-09-16T22:20:13.992Z"}
{"msg":"so i don't get an error when i deploy the refund escrow contract and put my user address as the argument to the constructor","username":"swetha","ts":"2019-09-16T22:20:13.992Z"}
{"msg":"What are the actual transactions you are running that are producing the error?","username":"swetha","ts":"2019-09-16T22:35:09.709Z"}
{"msg":"I see one log in the deployment and if I am reading the contracts correctly I believe that is what is expected?","username":"swetha","ts":"2019-09-16T22:36:22.219Z"}
{"msg":"Haven't got that far, the deploy step returned the mentioned error for me. It couldn't marshal the chaincode event (which is the first 8 byte of the new contract address), complaining about invalid UTF8 string :/","username":"klenik","ts":"2019-09-16T22:37:34.261Z"}
{"msg":"Did you compile the source, or deployed the bytecode directly from the gist?","username":"klenik","ts":"2019-09-16T22:38:09.718Z"}
{"msg":"(the same line for event encoding works for other contracts... that's why I found it strange)","username":"klenik","ts":"2019-09-16T22:39:57.637Z"}
{"msg":"Oh I just saw the piece at the bottom of the gist.","username":"swetha","ts":"2019-09-16T22:43:51.984Z"}
{"msg":"I took the file and put it in remix and deployed it","username":"swetha","ts":"2019-09-16T22:44:00.342Z"}
{"msg":"Is the bytcode in the file with an address added to the end already?","username":"swetha","ts":"2019-09-16T22:45:18.073Z"}
{"msg":"The second bytecode contains the argument","username":"klenik","ts":"2019-09-16T22:52:10.941Z"}
{"msg":"(the first is just the output of the compiler)","username":"klenik","ts":"2019-09-16T22:52:46.460Z"}
{"msg":"Okay, cool. Just realized I was using remix with the inbuilt vm. Retrying now with the peer cli and the directions you gave","username":"swetha","ts":"2019-09-16T22:57:16.295Z"}
{"msg":"@klenik So I keep running into a timeout issue, that is something I have not seen before. But the one time I have not got the timeout issue the contract deployed fine and I am able to query the beneficiary","username":"swetha","ts":"2019-09-16T23:09:32.378Z"}
{"msg":"Yeah, on the client side it manifests as a timeout, because the peer raises a timeout, since it doesn't get a response from the CC. Which is halted because of a marshalling error. The CC container logs contain the actual issue","username":"klenik","ts":"2019-09-16T23:10:57.205Z"}
{"msg":"Interesting, I don't see any logs in the CC container","username":"swetha","ts":"2019-09-16T23:15:25.755Z"}
{"msg":"And in the peer logs it is as you said","username":"swetha","ts":"2019-09-16T23:15:39.779Z"}
{"msg":"But this exercise does seem to indicate that the problem exists on master","username":"swetha","ts":"2019-09-16T23:16:25.858Z"}
{"msg":"Ah, yeah, I changed the logging in the `main` function to: `logger.Errorf(\"Error starting EVM chaincode: %+v\", err)`\n`%+v` will give you the detailed error","username":"klenik","ts":"2019-09-16T23:17:02.327Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=gjZegZTGaNLBCd2kr) Or maybe in the Burrow EVM. The contract address is returned from an EVM module. Although there is a slicing in evmcc before it's added to the events","username":"klenik","ts":"2019-09-16T23:18:36.474Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=gjZegZTGaNLBCd2kr","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=gjZegZTGaNLBCd2kr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Would you be willing to convert the gist you made into a jira issue?","username":"swetha","ts":"2019-09-16T23:22:01.304Z"}
{"msg":"Sure, I'll raise the issue tomorrow :thumbsup: ","username":"klenik","ts":"2019-09-16T23:23:13.971Z"}
{"msg":"thanks!","username":"swetha","ts":"2019-09-16T23:24:54.925Z"}
{"msg":"@swetha https://jira.hyperledger.org/browse/FAB-16620","username":"klenik","ts":"2019-09-17T11:32:14.275Z"}
{"msg":"thanks @klenik !","username":"swetha","ts":"2019-09-17T17:29:24.898Z"}
{"msg":"@here Our monthly meeting for the Fabric Chaincode EVM is tomorrow at 8 AM PST\nMeeting Event: https://calendar.google.com/calendar/event?eid=NGdxaGpjYXNsYjRjZjVobG1vY3RobnFicnRfMjAxOTA5MThUMTUwMDAwWiBsaW51eGZvdW5kYXRpb24ub3JnX25mOXU2NGc5azlydmQ5Zjh2cDR2dXIyM2IwQGc&ctz=America/Los_Angeles\n\n","username":"swetha","ts":"2019-09-17T22:23:13.939Z"}
{"msg":"Please feel free to add to agenda here: https://wiki.hyperledger.org/display/fabric/September+18th+2019","username":"swetha","ts":"2019-09-17T22:23:21.916Z"}
{"msg":"@BrettLogan I think if there was going to be some help doing the cutover we'd be fine with it. I can move my open changes if we lose that.","username":"MHBauer","ts":"2019-09-18T21:16:50.545Z"}
{"msg":"Has joined the channel.","username":"BrettLogan","ts":"2019-09-18T21:16:50.595Z","type":"uj"}
{"msg":"I think we had some questions about the amount of people required to do a merge. go from 2 to 1.","username":"MHBauer","ts":"2019-09-18T21:18:19.288Z"}
{"msg":"Yes, we were wondering what is the process to change the policy from 2 maintainers to a single non-author maintainer","username":"swetha","ts":"2019-09-18T22:52:12.807Z"}
{"msg":"though that might be a question for the hyperledger staff who are doing the actual gerrit to github migration","username":"swetha","ts":"2019-09-18T22:52:51.731Z"}
{"msg":"@swetha this is what it would look like in travis. https://github.com/MHBauer/fabric-chaincode-evm/pull/3/files","username":"MHBauer","ts":"2019-09-18T23:28:24.786Z"}
{"msg":"could matrix the go and node versions if we wanted.","username":"MHBauer","ts":"2019-09-18T23:28:42.638Z"}
{"msg":"To track our migration: https://wiki.hyperledger.org/display/fabric/Migration+to+Github","username":"swetha","ts":"2019-09-18T23:47:33.421Z"}
{"msg":"To move to the one +2 for merges, open a Jira with the proposal. Then make the Jira proposal public in the fabric-maintainers and fabric-evm with a few days of debate (specify a debate deadline). Then have your maintainers vote at the end of that period by commenting on the Jira. Assuming a majority of maintainers vote yes, it is trivial in GitHub to change to one +2, which Ry will do for the repo with proof of the Jira passing majority","username":"BrettLogan","ts":"2019-09-19T00:00:50.910Z"}
{"msg":"To move to the one +2 for merges, open a Jira with the proposal. Then make the Jira proposal public in the fabric-maintainers and fabric-evm with a few days of debate (specify a debate deadline). Then have your maintainers vote at the end of that period by commenting on the Jira. Assuming a majority of votes, it is trivial in GitHub to change to one +2","username":"BrettLogan","ts":"2019-09-19T00:00:50.910Z"}
{"msg":"To move to the one +2 for merges, open a Jira with the proposal. Then make the Jira proposal public in the fabric-maintainers and fabric-evm with a few days of debate (specify a debate deadline). Then have your maintainers vote at the end of that period by commenting on the Jira. Assuming a majority of votes, it is trivial in GitHub to change to one +2, which Ry will do for us with proof of the Jira passing majority","username":"BrettLogan","ts":"2019-09-19T00:00:50.910Z"}
{"msg":"To move to the one +2 for merges, open a Jira with the proposal. Then make the Jira proposal public in the fabric-maintainers and fabric-evm with a few days of debate (specify a debate deadline). Then have your maintainers vote at the end of that period by commenting on the Jira. Assuming a majority of votes, it is trivial in GitHub to change to one +2, which Ry will do for the repo with proof of the Jira passing majority","username":"BrettLogan","ts":"2019-09-19T00:00:50.910Z"}
{"msg":"@MHBauer @swetha There are two options for the migration in terms of CI, I can recreate your current Jenkins pipeline in Azure, and then once you have all of the changes merged that you want merged, I will have LF cut the mirror and you will take over from there (with the blessing of your maintainers). You then completely own your CI and you can edit and maintain it however you see fit (this is definitely the easier and faster option). The other option is you fork the repo, get an Azure Pipelines account yourself, tie your forked repo to it, and create a new pipeline that does what you want it to do. Then when you are happy with the state of this pipeline you built, you will take your Azure YAML, commit it to the hyperledger fabric-chaincode-evm repo in gerrit, and then we can flip the switch and switch to GitHub (this path is time dependent on you forming an Azure YAML file you are happy with).","username":"BrettLogan","ts":"2019-09-19T00:07:00.730Z"}
{"msg":"@MHBauer @swetha There are two options for the migration in terms of CI, I can recreate your current Jenkins pipeline in Azure, and then once you have all of the changes merged that you want merged, I will have LF cut the mirror and you will take over from there. You then completely own your CI and you can edit and maintain it however you see fit (this is definitely the easier and faster option). The other option is you fork the repo, get an Azure Pipelines account yourself, tie your forked repo to it, and create a new pipeline that does what you want it to do. Then when you are happy with the state of this pipeline you built, you will take your Azure YAML, commit it to the hyperledger fabric-chaincode-evm repo in gerrit, and then we can flip the switch and switch to GitHub (this path is time dependent on you forming an Azure YAML file you are happy with).","username":"BrettLogan","ts":"2019-09-19T00:07:00.730Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=SdADG8SBB2GE7pyEa) majority of voters or majority of maintainers? we've got like 6 maintainers listed, but only 2+1 really do anything ","username":"MHBauer","ts":"2019-09-19T00:07:45.848Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=SdADG8SBB2GE7pyEa","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=SdADG8SBB2GE7pyEa","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Modified it to say majority of maintainers","username":"BrettLogan","ts":"2019-09-19T00:08:34.103Z"}
{"msg":"While I agree, only a few actually maintain it, this is the process we have followed in Fabric in the past for things like this. We had at one time also proposed going to one +2 in Fabric (never followed through with it), and this was what the maintainers and LF felt was the best way to put it in the public and make sure the change was valid","username":"BrettLogan","ts":"2019-09-19T00:10:56.548Z"}
{"msg":"While I agree, only a few actually maintain it, this is the process we have followed in Fabric in the past for things like this. We had at one time also proposed going to one +2 in Fabric (never followed through with it), and this was what the maintainers and LF felt was the best way to put it in the public and make sure the move was valid","username":"BrettLogan","ts":"2019-09-19T00:10:56.548Z"}
{"msg":"yea, sounds good.","username":"MHBauer","ts":"2019-09-19T00:11:52.694Z"}
{"msg":"It's one of those things that really need a better process spelled out by the TSC and added to the charter.","username":"BrettLogan","ts":"2019-09-19T00:11:54.158Z"}
{"msg":"I'm fine with it. We'll have to maybe track down some pepole.","username":"MHBauer","ts":"2019-09-19T00:12:05.306Z"}
{"msg":"I can write that up if it helps.","username":"MHBauer","ts":"2019-09-19T00:12:20.804Z"}
{"msg":"I can get Gari and Jay, I talk to both of them almost every day","username":"BrettLogan","ts":"2019-09-19T00:12:23.276Z"}
{"msg":"meeting is too early for me to go to","username":"MHBauer","ts":"2019-09-19T00:12:26.339Z"}
{"msg":"I'd rather do the first option, let someone else try and figure it out.","username":"MHBauer","ts":"2019-09-19T00:13:49.178Z"}
{"msg":"I think we will be able to get Gari, Jay, and Chris on board","username":"swetha","ts":"2019-09-19T00:13:52.950Z"}
{"msg":"It's not a complicated build.","username":"MHBauer","ts":"2019-09-19T00:13:58.617Z"}
{"msg":"so that itself if 5/6 ?","username":"swetha","ts":"2019-09-19T00:14:05.354Z"}
{"msg":"I'll be honest, if you could write the Jira for it, that would be a huge help, the amount of doc I am in the midst of writing for contribution guidelines is eating at my cycles","username":"BrettLogan","ts":"2019-09-19T00:14:06.147Z"}
{"msg":"for us specifically, or the process in general?","username":"MHBauer","ts":"2019-09-19T00:14:28.216Z"}
{"msg":"The process in general","username":"BrettLogan","ts":"2019-09-19T00:14:40.790Z"}
{"msg":"Since we are moving Fabric next week, we need to make sure the doc is 100% updated now","username":"BrettLogan","ts":"2019-09-19T00:14:58.826Z"}
{"msg":"If EVM wants to go with option #1, then the only thing the EVM maintainers need to do, is get in what you want with Gerrit, and vote on the change to one +2. Then if everyone is agreement they are ready to move, we can flip the switch. That whole process takes about 5 minutes (quite trivial)","username":"BrettLogan","ts":"2019-09-19T00:17:26.975Z"}
{"msg":"I'll take care of setting up everything in Azure, and giving you a base pipeline","username":"BrettLogan","ts":"2019-09-19T00:17:52.941Z"}
{"msg":"alright, I think some of the smaller things we can merge. I'm personally fine with making new PRs on the other side.","username":"MHBauer","ts":"2019-09-19T00:18:09.501Z"}
{"msg":"I am with Morgan, I think option 1 will be nice","username":"swetha","ts":"2019-09-19T00:18:26.295Z"}
{"msg":"We can merge the smaller changes in and at the same time finish the jira proposal + debate","username":"swetha","ts":"2019-09-19T00:18:47.688Z"}
{"msg":"Also, you have 4 branches, do you want all 4 to run through CI. In Fabric's core repos we are only taking master and our LTS (release-1.4) branches","username":"BrettLogan","ts":"2019-09-19T00:19:15.698Z"}
{"msg":"You can always add them later, but when I create the initial definition file I just want to make sure the branches you want included, all work","username":"BrettLogan","ts":"2019-09-19T00:20:01.282Z"}
{"msg":"We just need to track master","username":"swetha","ts":"2019-09-19T00:20:02.410Z"}
{"msg":"we haven't had much need to add to the release branches after the fact so I don't think we need that setup right now","username":"swetha","ts":"2019-09-19T00:20:34.766Z"}
{"msg":"yes, only one branch","username":"MHBauer","ts":"2019-09-19T00:20:37.515Z"}
{"msg":"Perfect, I will get this file done asap, (should be trivial, your current pipeline is quite simple). Then once you've all closed out the other loops we can go ahead with the migration","username":"BrettLogan","ts":"2019-09-19T00:21:36.020Z"}
{"msg":"Thanks both of you!","username":"BrettLogan","ts":"2019-09-19T00:21:40.021Z"}
{"msg":":+1: ","username":"MHBauer","ts":"2019-09-19T00:21:46.537Z"}
{"msg":"Thanks !","username":"swetha","ts":"2019-09-19T00:22:30.515Z"}
{"msg":"@muralisr , @MHBauer , @guoger , @cbf , @mastersingh24 we need majority maintainer approval on this proposal to change the number of required reviews: https://jira.hyperledger.org/browse/FAB-16649","username":"swetha","ts":"2019-09-19T01:01:17.573Z"}
{"msg":"@swetha I opened a jira for eth_sendRawTransaction RPC. https://jira.hyperledger.org/browse/FAB-16667 and put the ticket number to the commit message of https://gerrit.hyperledger.org/r/c/fabric-chaincode-evm/+/33600","username":"conanoc","ts":"2019-09-20T09:24:20.978Z"}
{"msg":"@conanoc Thanks for making the issue","username":"swetha","ts":"2019-09-20T18:09:51.476Z"}
{"msg":"@conanoc We are in the middle of trying to move from gerrit to github to host our repository. Would you be willing to resubmit your CR using github pull requests after the merge. I think your patches/feature will require some discussion before they can be merged in","username":"swetha","ts":"2019-09-20T18:55:55.936Z"}
{"msg":"@conanoc We are in the middle of trying to move from gerrit to github to host our repository. Would you be willing to resubmit your CR using github pull requests after the merge. I think your patches/feature will require some discussion before they can be merged in. The move has not been done yet, but you would have to resubmit after we make the switch","username":"swetha","ts":"2019-09-20T18:55:55.936Z"}
{"msg":"@BrettLogan & @rjones The proposal to change the review policy has already got majority votes and we are almost done clearing all the CRs in gerrit. I think we can aim for beginning of next week to make the switch? /cc @MHBauer @guoger ","username":"swetha","ts":"2019-09-20T19:16:37.513Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-09-20T19:16:37.561Z","type":"uj"}
{"msg":"@swetha sure","username":"rjones","ts":"2019-09-20T19:17:46.698Z"}
{"msg":"There are only a few open CRs: https://gerrit.hyperledger.org/r/q/project:fabric-chaincode-evm+status:open","username":"rjones","ts":"2019-09-20T19:18:25.558Z"}
{"msg":"I'm abandoning mine","username":"MHBauer","ts":"2019-09-20T19:20:13.053Z"}
{"msg":"I can break the CI mirror at any time, but I don't have anything to do with the CI part, so we would need to work with @BrettLogan and @sykesm ","username":"rjones","ts":"2019-09-20T19:20:58.152Z"}
{"msg":"I can break the Gerrit mirror at any time, but I don't have anything to do with the CI part, so we would need to work with @BrettLogan and @sykesm ","username":"rjones","ts":"2019-09-20T19:20:58.152Z"}
{"msg":"Has joined the channel.","username":"sykesm","ts":"2019-09-20T19:20:59.343Z","type":"uj"}
{"msg":"ah, okay. I've got a travis config we could use until the jenkins is converted to azure, but I guess that means we wait.","username":"MHBauer","ts":"2019-09-20T19:22:25.620Z"}
{"msg":"Sorry, I said CI when I meant Gerrit.","username":"rjones","ts":"2019-09-20T19:23:01.712Z"}
{"msg":"There are only 2 CRs left, that I want to confirm with the submitter before we abandon them and then I am okay making the switch","username":"swetha","ts":"2019-09-20T19:30:16.908Z"}
{"msg":"To prep for this, I've added you all (in CODEOWNERS) in the Maintainer role for https://github.com/hyperledger/fabric-chaincode-evm","username":"rjones","ts":"2019-09-20T19:41:54.967Z"}
{"msg":"please wait to merge this: https://gerrit.hyperledger.org/r/c/fabric-chaincode-evm/+/33643","username":"rjones","ts":"2019-09-20T19:45:05.241Z"}
{"msg":"until all of the other CRs are either merged or abandoned.","username":"rjones","ts":"2019-09-20T19:47:02.742Z"}
{"msg":"cool","username":"MHBauer","ts":"2019-09-20T19:51:01.814Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=cGDNjDZTNcthjuRmo) @conanoc Have you seen this? I'm confused by the PR stack now as it looks like there's two different top commits, and three total.","username":"MHBauer","ts":"2019-09-23T18:17:22.167Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=cGDNjDZTNcthjuRmo","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=cGDNjDZTNcthjuRmo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer should we just mark the repo read-only and move on?","username":"rjones","ts":"2019-09-23T19:35:41.418Z"}
{"msg":"I'm OOF today so Tuesday works for me","username":"rjones","ts":"2019-09-23T19:35:52.768Z"}
{"msg":"That's my opinion, but I think we need to get the CI working. I'm in no rush. ","username":"MHBauer","ts":"2019-09-23T19:36:59.414Z"}
{"msg":"I think Tuesday should work. Still waiting on confirmation from @conanoc about moving his CR stack to github.","username":"swetha","ts":"2019-09-23T20:06:29.900Z"}
{"msg":"OOF, out of florida?","username":"MHBauer","ts":"2019-09-23T20:18:19.130Z"}
{"msg":"ah, a search says something something you used to work for microsoft or with someone from microsoft who said taht.","username":"MHBauer","ts":"2019-09-23T20:23:31.005Z"}
{"msg":"At this point, I'm confident we can cut over and use travis or github actions if necessary. ","username":"MHBauer","ts":"2019-09-23T20:57:25.409Z"}
{"msg":"I would rather not keep switching through ci/cds. I am okay moving over to github without ci being ready and we just waiting on ci to be ready before merging any code changes","username":"swetha","ts":"2019-09-23T21:49:05.499Z"}
{"msg":"ya, sure. I'm not sure what azure pipes gets us the others don't.","username":"MHBauer","ts":"2019-09-23T21:50:23.813Z"}
{"msg":"I'm not about to let it have the permissions it wants on my account to find otu.","username":"MHBauer","ts":"2019-09-23T21:51:18.075Z"}
{"msg":"Our ci pipeline is fairly small & simple, so my guess is that all of the options out there will work for our needs. However if fabric is moving to azure pipelines, then I think we should use that as well. We are a sub component, so I think we should go with that approach for consistency and ease for people who are contributing across the different fabric repos","username":"swetha","ts":"2019-09-23T21:57:02.232Z"}
{"msg":"that is not a good arument.","username":"MHBauer","ts":"2019-09-23T22:03:07.359Z"}
{"msg":"but sure. eagerly await the transition.","username":"MHBauer","ts":"2019-09-23T22:03:26.399Z"}
{"msg":"Is there something that travis or github actions gets us that azure pipelines dont?","username":"swetha","ts":"2019-09-23T22:22:01.065Z"}
{"msg":"no idea, not going to let azure have the permissions it's asking for. The travis one is at least very simple. Five or so lines.","username":"MHBauer","ts":"2019-09-23T22:24:47.436Z"}
{"msg":"actions is a huge mess.","username":"MHBauer","ts":"2019-09-23T22:25:04.128Z"}
{"msg":"other hyperledger projects are using other things. ","username":"MHBauer","ts":"2019-09-23T22:25:55.272Z"}
{"msg":"we're not even using the same jenkins setup as fabric core, so the continuity there is nil already.","username":"MHBauer","ts":"2019-09-23T22:26:09.344Z"}
{"msg":"To what I have read of the CI/CD task force it looks like the other options being used were looked at. Not have the same jenkins setup did cause issues for us when we needed help in the past","username":"swetha","ts":"2019-09-23T22:30:29.523Z"}
{"msg":"Here we will have more control so maybe it won't be a problem","username":"swetha","ts":"2019-09-23T22:31:58.864Z"}
{"msg":"I would say that, yes. The other team required to do anything.","username":"MHBauer","ts":"2019-09-23T22:32:14.994Z"}
{"msg":"Was the problem.","username":"MHBauer","ts":"2019-09-23T22:32:21.426Z"}
{"msg":"Though why did we choose to have a different jenkins setup?","username":"MHBauer","ts":"2019-09-23T22:32:31.257Z"}
{"msg":"We didn't, they were trying to move all projects to jenkins pipelines","username":"swetha","ts":"2019-09-23T22:32:44.967Z"}
{"msg":"I think other than fabric core, the sub components were moved to the pipelines","username":"swetha","ts":"2019-09-23T22:33:02.316Z"}
{"msg":"lol, that never happened in the end, did it?","username":"MHBauer","ts":"2019-09-23T22:33:18.600Z"}
{"msg":"I think by then the task force started about looking at ci/cd and handling it differently","username":"swetha","ts":"2019-09-23T22:33:41.736Z"}
{"msg":"I think by then the task force started looking at ci/cd and handling it differently","username":"swetha","ts":"2019-09-23T22:33:41.736Z"}
{"msg":"ah, ","username":"MHBauer","ts":"2019-09-23T22:34:43.867Z"}
{"msg":"task force sounds so awesome","username":"MHBauer","ts":"2019-09-23T22:34:49.866Z"}
{"msg":"can we form a task force?","username":"MHBauer","ts":"2019-09-23T22:34:55.783Z"}
{"msg":"This is the ci/cd task force page on the wiki https://wiki.hyperledger.org/pages/viewpage.action?pageId=6428757","username":"swetha","ts":"2019-09-23T22:35:25.771Z"}
{"msg":"ya, I've seen it.","username":"MHBauer","ts":"2019-09-23T22:35:44.248Z"}
{"msg":"not a lot of info there.","username":"MHBauer","ts":"2019-09-23T22:40:53.510Z"}
{"msg":"https://wiki.hyperledger.org/pages/viewpage.action?pageId=16322259 has some of the notes of why they looked at azure I think","username":"swetha","ts":"2019-09-23T22:42:32.583Z"}
{"msg":"Fabric itself is going to AZP. Some projects want to use Github Actions, which are basically rebranded AZP","username":"rjones","ts":"2019-09-24T01:04:39.456Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/fabric-chaincode-evm/+/33678","username":"BrettLogan","ts":"2019-09-24T03:05:42.453Z"}
{"msg":"@swetha @MHBauer The initial file replicating what exists today in Jenkins.","username":"BrettLogan","ts":"2019-09-24T03:07:59.473Z"}
{"msg":"https://dev.azure.com/btl5037/Fabric-Chaincode-EVM/_build/results?buildId=188&view=logs","username":"BrettLogan","ts":"2019-09-24T03:13:07.849Z"}
{"msg":"https://dev.azure.com/btl5037/Fabric-Chaincode-EVM/_build/results?buildId=188&view=results","username":"BrettLogan","ts":"2019-09-24T03:13:07.849Z"}
{"msg":"Here is a link to a successful run of it, if you want to verify or take a look at the logs","username":"BrettLogan","ts":"2019-09-24T03:13:24.178Z"}
{"msg":"Here is a link to a successful run of it, if you want to take a look at the logs","username":"BrettLogan","ts":"2019-09-24T03:13:24.178Z"}
{"msg":"@BrettLogan @swetha @MHBauer if you want to enable AZP I can invite you to the Hyperledger AZP org","username":"rjones","ts":"2019-09-24T03:53:06.261Z"}
{"msg":"swetha","username":"rjones","ts":"2019-09-24T03:53:29.375Z","type":"subscription-role-added"}
{"msg":"swetha","username":"rjones","ts":"2019-09-24T03:53:34.889Z","type":"subscription-role-removed"}
{"msg":"MHBauer","username":"rjones","ts":"2019-09-24T03:53:40.952Z","type":"subscription-role-added"}
{"msg":"@BrettLogan Thanks. The pipeline looks great!","username":"swetha","ts":"2019-09-24T16:21:57.787Z"}
{"msg":"@rjones so everything but yours and azp is merged.","username":"MHBauer","ts":"2019-09-24T16:26:54.666Z"}
{"msg":"I think we merge the pipeline and then yours and then someone hits a switch?","username":"MHBauer","ts":"2019-09-24T16:27:04.241Z"}
{"msg":"@MHBauer merge the azo","username":"swetha","ts":"2019-09-24T16:31:23.326Z"}
{"msg":"@MHBauer merge the azp","username":"swetha","ts":"2019-09-24T16:31:23.326Z"}
{"msg":"I thought I did?","username":"MHBauer","ts":"2019-09-24T16:31:32.071Z"}
{"msg":"I did \"submit\"","username":"MHBauer","ts":"2019-09-24T16:31:38.974Z"}
{"msg":"is that not merge?","username":"MHBauer","ts":"2019-09-24T16:31:41.479Z"}
{"msg":"i see the update now","username":"swetha","ts":"2019-09-24T16:31:44.644Z"}
{"msg":"Merged Ry's change","username":"swetha","ts":"2019-09-24T16:32:14.529Z"}
{"msg":"I think we are ready!","username":"swetha","ts":"2019-09-24T16:32:19.155Z"}
{"msg":"Ry seems ready.","username":"MHBauer","ts":"2019-09-24T16:32:35.365Z"}
{"msg":"I'm ready","username":"rjones","ts":"2019-09-24T16:33:56.331Z"}
{"msg":"good, we're all ready then.","username":"MHBauer","ts":"2019-09-24T16:34:19.680Z"}
{"msg":"The last step would be for someone ( @BrettLogan ? ) to remove everything from the ci-managament repo","username":"rjones","ts":"2019-09-24T16:38:26.559Z"}
{"msg":"is that the part that read-only's gerrit?","username":"MHBauer","ts":"2019-09-24T16:41:07.168Z"}
{"msg":"or the part that runs the jenkins pipeline?","username":"MHBauer","ts":"2019-09-24T16:41:18.218Z"}
{"msg":"the part that runs the Jenkins pipeline. Since you aren't using it/","username":"rjones","ts":"2019-09-24T16:56:47.713Z"}
{"msg":"yay","username":"MHBauer","ts":"2019-09-24T16:56:55.267Z"}
{"msg":"if you go here: https://dev.azure.com/Hyperledger/ and log in with your GitHub SSO credentials, you should show up and be able to see how things are going","username":"rjones","ts":"2019-09-24T16:58:14.251Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/ci-management/+/33701 @BrettLogan @sykesm ","username":"rjones","ts":"2019-09-24T17:01:01.346Z"}
{"msg":"swetha already getting on it.","username":"MHBauer","ts":"2019-09-24T17:04:52.217Z"}
{"msg":"aww, you closed it.","username":"MHBauer","ts":"2019-09-24T17:13:00.893Z"}
{"msg":"?","username":"rjones","ts":"2019-09-24T17:13:08.583Z"}
{"msg":"Oh I see: https://github.com/hyperledger/fabric-chaincode-evm/pull/8","username":"rjones","ts":"2019-09-24T17:13:37.080Z"}
{"msg":"Is the pipeline results going to show up as a check in GH?","username":"MHBauer","ts":"2019-09-24T17:13:55.587Z"}
{"msg":"yes","username":"rjones","ts":"2019-09-24T17:14:01.662Z"}
{"msg":"I just enabled that. I couldn't do that until it had run once","username":"rjones","ts":"2019-09-24T17:14:15.664Z"}
{"msg":"and can we get a \"build success\" badge or something? not that we'll ever merge anything that fails I suppose.","username":"MHBauer","ts":"2019-09-24T17:14:19.144Z"}
{"msg":"NEAT!","username":"MHBauer","ts":"2019-09-24T17:14:22.958Z"}
{"msg":"this is why I have like 500 abandoned PRs called \"Create DCO\"; I can't enable the DCO bot until it fails once.","username":"rjones","ts":"2019-09-24T17:15:03.046Z"}
{"msg":"lol","username":"MHBauer","ts":"2019-09-24T17:16:47.977Z"}
{"msg":"I have strong feelings about GitHub :)","username":"rjones","ts":"2019-09-24T17:26:54.431Z"}
{"msg":"OK - I think you guys are on your way, right? nothing more needed?","username":"rjones","ts":"2019-09-24T17:27:06.211Z"}
{"msg":"You might edit the CODEOWNERS file to point to the actual people you want doing reviews","username":"rjones","ts":"2019-09-24T17:27:27.880Z"}
{"msg":"\nRy, did you install LGTM in the Hyperledger Org?","username":"BrettLogan","ts":"2019-09-24T17:28:29.125Z"}
{"msg":"how so? ","username":"MHBauer","ts":"2019-09-24T17:28:33.417Z"}
{"msg":"Or did Microsoft do it once they bought LGTM last week","username":"BrettLogan","ts":"2019-09-24T17:28:47.051Z"}
{"msg":"oh that's a good idea! I didn't think about that","username":"swetha","ts":"2019-09-24T17:29:50.771Z"}
{"msg":"@rjones & @BrettLogan Is there a way to get github & jira integrations?","username":"swetha","ts":"2019-09-24T17:30:15.851Z"}
{"msg":"Not at the moment. The integration is only supported with the SaaS version of Jira, not the onprem","username":"BrettLogan","ts":"2019-09-24T17:31:03.980Z"}
{"msg":"ahh okay","username":"swetha","ts":"2019-09-24T17:31:58.731Z"}
{"msg":"Thanks everyone for their help! ","username":"swetha","ts":"2019-09-24T17:32:12.474Z"}
{"msg":"@BrettLogan I installed LGTM last week","username":"rjones","ts":"2019-09-24T17:32:59.760Z"}
{"msg":"It should only be in an advisory role, I didn't make it required anywhere","username":"rjones","ts":"2019-09-24T17:33:21.521Z"}
{"msg":"and so what does that do? ","username":"MHBauer","ts":"2019-09-24T17:35:09.824Z"}
{"msg":"It's unfortunately misidentifying projects. It thinks Fabric-CA is a python project","username":"BrettLogan","ts":"2019-09-24T17:38:22.731Z"}
{"msg":"It thinks fabric-evm is javascript","username":"swetha","ts":"2019-09-24T17:44:25.170Z"}
{"msg":"is that based on looking at only the change tho?","username":"MHBauer","ts":"2019-09-24T17:44:34.721Z"}
{"msg":"nope it says that on the readme pr","username":"swetha","ts":"2019-09-24T17:44:57.419Z"}
{"msg":"Would it see a go project if we made a go change?","username":"MHBauer","ts":"2019-09-24T17:44:57.885Z"}
{"msg":"I don't have super strong feelings about the plugin. Gari asked for some other plugin as well","username":"rjones","ts":"2019-09-24T18:35:28.372Z"}
{"msg":"OK. Go is not supported so I will disable it here.","username":"rjones","ts":"2019-09-24T18:39:42.126Z"}
{"msg":"https://lgtm.com/help/lgtm/analysis-faqs#which-languages-are-supported","username":"rjones","ts":"2019-09-24T18:39:50.332Z"}
{"msg":"I disabled it on `fabric` and `fabric-ca`","username":"rjones","ts":"2019-09-24T18:40:48.750Z"}
{"msg":"lol","username":"MHBauer","ts":"2019-09-24T19:06:17.848Z"}
{"msg":"I don't have access to the setting, but can we enable the \"dismiss stale pull request approvals when new commits are pushed\" ?","username":"MHBauer","ts":"2019-09-24T19:13:03.885Z"}
{"msg":"@swetha I think we want that ^","username":"MHBauer","ts":"2019-09-24T19:13:16.903Z"}
{"msg":"I think you have the power to enable that?","username":"rjones","ts":"2019-09-24T19:13:47.922Z"}
{"msg":"no","username":"MHBauer","ts":"2019-09-24T19:13:55.244Z"}
{"msg":"its in the file isn't it","username":"swetha","ts":"2019-09-24T19:13:58.201Z"}
{"msg":"I can see the settings tab, but I can't do anything with it.","username":"MHBauer","ts":"2019-09-24T19:14:02.742Z"}
{"msg":"it's totally blank for options for me.","username":"MHBauer","ts":"2019-09-24T19:14:13.350Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/blob/master/.github/stale.yml","username":"swetha","ts":"2019-09-24T19:14:23.347Z"}
{"msg":"@MHBauer try now ;)","username":"rjones","ts":"2019-09-24T19:14:46.566Z"}
{"msg":"that's inactivity","username":"MHBauer","ts":"2019-09-24T19:14:53.269Z"}
{"msg":"Think of that file as a placeholder for now, OK?","username":"rjones","ts":"2019-09-24T19:15:08.858Z"}
{"msg":"lol, I think it's reloading. just got a 500","username":"MHBauer","ts":"2019-09-24T19:15:19.051Z"}
{"msg":"I added it when *fabric* were on Gerrit, and I didn't want valid PRs to get killed now","username":"rjones","ts":"2019-09-24T19:15:30.754Z"}
{"msg":"I added it when `*fabric*` were on Gerrit, and I didn't want valid PRs to get killed now","username":"rjones","ts":"2019-09-24T19:15:30.754Z"}
{"msg":"yay, okay, I can see the buttons now, I did want to discuss it a little, but I do think it's a thing we want on.","username":"MHBauer","ts":"2019-09-24T19:16:03.922Z"}
{"msg":"thank you ry","username":"MHBauer","ts":"2019-09-24T19:16:08.932Z"}
{"msg":"OK. I know that's different on different projects. Some of them don't want that, some do","username":"rjones","ts":"2019-09-24T19:16:19.765Z"}
{"msg":"thanks ry!","username":"swetha","ts":"2019-09-24T19:17:08.170Z"}
{"msg":"@MHBauer the option basically requires another review if code in the commit changes?","username":"swetha","ts":"2019-09-24T19:17:34.682Z"}
{"msg":"that is my understanding, yes","username":"MHBauer","ts":"2019-09-24T19:17:44.117Z"}
{"msg":"like for #9, you pushed an update","username":"MHBauer","ts":"2019-09-24T19:17:50.134Z"}
{"msg":"and crhis approval is still in effect.","username":"MHBauer","ts":"2019-09-24T19:17:57.495Z"}
{"msg":"i thought he approved it a second time","username":"swetha","ts":"2019-09-24T19:18:20.910Z"}
{"msg":"i just rebased it now","username":"swetha","ts":"2019-09-24T19:18:32.787Z"}
{"msg":"I don't see that.","username":"MHBauer","ts":"2019-09-24T19:18:34.266Z"}
{"msg":"either way i think enabling the option seems correct","username":"swetha","ts":"2019-09-24T19:18:55.814Z"}
{"msg":"okay, I'll clicky the button","username":"MHBauer","ts":"2019-09-24T19:19:13.091Z"}
{"msg":"and now I kind of miss prow.","username":"MHBauer","ts":"2019-09-24T19:19:56.123Z"}
{"msg":"your approval is after my most recent pushes right?","username":"swetha","ts":"2019-09-24T19:20:41.121Z"}
{"msg":"that's what it appears","username":"MHBauer","ts":"2019-09-24T19:21:44.861Z"}
{"msg":"your change 13 minutes, my approval 10 minutes","username":"MHBauer","ts":"2019-09-24T19:21:53.862Z"}
{"msg":" i was confused with chris's approval too which is why im verifying now. the settings change doesn't affect current pull requests","username":"swetha","ts":"2019-09-24T19:22:48.071Z"}
{"msg":"I mean","username":"MHBauer","ts":"2019-09-24T19:23:01.566Z"}
{"msg":"yea, it doesn't go back in time","username":"MHBauer","ts":"2019-09-24T19:23:05.187Z"}
{"msg":"it's an as happens thing.","username":"MHBauer","ts":"2019-09-24T19:23:12.626Z"}
{"msg":"so now master merge pipeline is running.","username":"MHBauer","ts":"2019-09-24T19:23:41.224Z"}
{"msg":"yay","username":"MHBauer","ts":"2019-09-24T19:23:43.296Z"}
{"msg":"\\o/","username":"MHBauer","ts":"2019-09-24T19:23:46.089Z"}
{"msg":"if you want prow... :)","username":"rjones","ts":"2019-09-24T19:25:42.326Z"}
{"msg":"do you want LGTM disabled on this repo?","username":"rjones","ts":"2019-09-24T19:26:59.465Z"}
{"msg":"Yea I think we can disable LGTM if it doesn't support go yet","username":"swetha","ts":"2019-09-24T19:27:34.274Z"}
{"msg":"Thanks Ry!","username":"swetha","ts":"2019-09-24T19:30:06.682Z"}
{"msg":"I don't know what it does. says something about vulnerability analysis ","username":"MHBauer","ts":"2019-09-24T19:35:31.934Z"}
{"msg":"hmn, something is funky about the pipeline","username":"MHBauer","ts":"2019-09-24T19:56:04.326Z"}
{"msg":"@BrettLogan is the pipeline job after a merge? or is it the pr/branch itself?","username":"MHBauer","ts":"2019-09-24T19:56:29.844Z"}
{"msg":"Can we have it do both? one to ensure the branch builds at all, but then the merge to ensure it merges cleanly?","username":"MHBauer","ts":"2019-09-24T19:56:59.540Z"}
{"msg":"I'm asking because I see references to non-existent lines in the build failure.","username":"MHBauer","ts":"2019-09-24T19:57:18.488Z"}
{"msg":"(I'm going to drop out of here - if you need me, reach out)","username":"rjones","ts":"2019-09-24T20:03:05.714Z"}
{"msg":"bye bye","username":"MHBauer","ts":"2019-09-24T20:03:53.353Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-09-24T20:05:54.013Z","type":"ul"}
{"msg":"I wonder if we have control of pre-recieve hooks.","username":"MHBauer","ts":"2019-09-24T20:18:30.351Z"}
{"msg":"or maybe need a bot to scan the commit messaegs or something.","username":"MHBauer","ts":"2019-09-24T20:18:48.062Z"}
{"msg":"besides lgtm, I'm more curious about dependabot and pull panda.","username":"MHBauer","ts":"2019-09-24T20:31:26.050Z"}
{"msg":"For PR's it runs all 3 jobs. For merges it runs just unit tests. I'd you want all 3 to run on a merge remove the conditions clauses","username":"BrettLogan","ts":"2019-09-24T20:33:00.347Z"}
{"msg":"hmn, not what I meant, but I was also being a dope.","username":"MHBauer","ts":"2019-09-24T20:34:02.667Z"}
{"msg":"left out some new files, whoops!","username":"MHBauer","ts":"2019-09-24T20:34:12.193Z"}
{"msg":"I like that the pipeline is in a ci directory","username":"MHBauer","ts":"2019-09-24T20:34:28.914Z"}
{"msg":"@swetha @guoger not sure I agree with the setting `Require branches to be up to date before merging This ensures pull requests targeting a matching branch have been tested with the latest code. This setting will not take effect unless at least one status check is enabled (see below). ` in github","username":"MHBauer","ts":"2019-09-27T19:12:56.770Z"}
{"msg":"Unless we can have github run the merging tests on the outcome of the merge before making the merge, I am okay with that setting","username":"swetha","ts":"2019-09-27T19:14:23.599Z"}
{"msg":"I would like to get rid of all the merge commits though","username":"swetha","ts":"2019-09-27T19:14:34.669Z"}
{"msg":"I disagree, don't edit my work.","username":"MHBauer","ts":"2019-09-27T19:14:57.567Z"}
{"msg":"anyway, it's a learning process ","username":"MHBauer","ts":"2019-09-27T19:18:13.472Z"}
{"msg":"I meant is I would like the fast forward commits. We don't need to have merge commits if the code is forced to be rebased on the master before being merged in","username":"swetha","ts":"2019-09-27T19:23:30.366Z"}
{"msg":"I meant I would like the fast forward commits. We don't need to have merge commits if the code is forced to be rebased on the master before being merged in","username":"swetha","ts":"2019-09-27T19:23:30.366Z"}
{"msg":"True, but that's not what that does.","username":"MHBauer","ts":"2019-09-27T19:23:46.474Z"}
{"msg":"I understand, that is a setting I would like. Otherwise I like having the forced rebase because it means we can see the tests run once before we merge the code in","username":"swetha","ts":"2019-09-27T19:24:26.052Z"}
{"msg":"I can agree to that, but not what that does.","username":"MHBauer","ts":"2019-09-27T19:25:02.641Z"}
{"msg":"Being a small enough project, anyway.","username":"MHBauer","ts":"2019-09-27T19:25:43.213Z"}
{"msg":"lunch?","username":"MHBauer","ts":"2019-09-27T19:27:25.368Z"}
{"msg":"","username":"swetha","ts":"2019-09-27T19:29:43.625Z","attachments":[{"type":"file","title":"Screen Shot 2019-09-27 at 12.29.19 PM.png","title_link":"/file-upload/dG8JZ96xca3RPwfAr/Screen%20Shot%202019-09-27%20at%2012.29.19%20PM.png","image_url":"/file-upload/dG8JZ96xca3RPwfAr/Screen%20Shot%202019-09-27%20at%2012.29.19%20PM.png","image_type":"image/png","image_size":69324,"url":"/file-upload/dG8JZ96xca3RPwfAr/Screen%20Shot%202019-09-27%20at%2012.29.19%20PM.png","remote":false,"fileId":"dG8JZ96xca3RPwfAr","fileName":"Screen Shot 2019-09-27 at 12.29.19 PM.png"}]}
{"msg":"I would like to dissable `Allow merge commits`, and `Automatically delete head branches`","username":"swetha","ts":"2019-09-27T19:30:04.188Z"}
{"msg":"I think the last option should be left to the person who submitted the PR","username":"swetha","ts":"2019-09-27T19:30:16.504Z"}
{"msg":"hmn, lemme see.","username":"MHBauer","ts":"2019-09-27T19:30:59.769Z"}
{"msg":"ehh, it keeps my stuff clean.","username":"MHBauer","ts":"2019-09-27T19:32:10.903Z"}
{"msg":"But not everyone would know that is the outcome","username":"swetha","ts":"2019-09-27T19:32:39.778Z"}
{"msg":"So? it's merged? pull it back out yourself.","username":"MHBauer","ts":"2019-09-27T19:32:52.210Z"}
{"msg":"deleting branches on someone else's repo doesn't seem right","username":"swetha","ts":"2019-09-27T19:33:08.759Z"}
{"msg":"`Deleted branches will still be able to be restored.`","username":"MHBauer","ts":"2019-09-27T19:33:11.689Z"}
{"msg":"I don't think that is good enough","username":"swetha","ts":"2019-09-27T19:33:24.262Z"}
{"msg":"lemme see how true that is","username":"MHBauer","ts":"2019-09-27T19:33:24.636Z"}
{"msg":"We shouldn't be deleting it to begin with","username":"swetha","ts":"2019-09-27T19:33:40.759Z"}
{"msg":"You and me might like the feature since we contribute often and we have many branches","username":"swetha","ts":"2019-09-27T19:33:52.986Z"}
{"msg":"Don't think that necessarily applies to everyone submitting a request","username":"swetha","ts":"2019-09-27T19:34:04.117Z"}
{"msg":"I don't understand","username":"MHBauer","ts":"2019-09-27T19:34:35.250Z"}
{"msg":"what are you doing to do with it after it's merged?","username":"MHBauer","ts":"2019-09-27T19:34:50.746Z"}
{"msg":"its not a branch on our repo. I think that should mean we should not do anything destructive, regardless of whether we can recover from it or not","username":"swetha","ts":"2019-09-27T19:36:25.959Z"}
{"msg":"I'm somewhat with you on dataloss, destruction of other people's information, but in practice, I don't understand.","username":"MHBauer","ts":"2019-09-27T19:36:27.005Z"}
{"msg":"I am just thinking about it as other people's information. In practice don't 100% understand, but I can see it happen if they develop on their forked master and keep using that to submit PRs","username":"swetha","ts":"2019-09-27T19:37:15.838Z"}
{"msg":"It shouldn't be up to us to dictate how someone does their branch management","username":"swetha","ts":"2019-09-27T19:37:43.992Z"}
{"msg":"but they'd have to do something to it to it to submit it again","username":"MHBauer","ts":"2019-09-27T19:38:33.814Z"}
{"msg":"I'm trying to think up the cases.","username":"MHBauer","ts":"2019-09-27T19:39:01.406Z"}
{"msg":"We're going to force them to rebase","username":"MHBauer","ts":"2019-09-27T19:39:06.742Z"}
{"msg":"then after it's merged in to master","username":"MHBauer","ts":"2019-09-27T19:39:15.102Z"}
{"msg":"anything they create, they have to pull and rebase ","username":"MHBauer","ts":"2019-09-27T19:39:32.052Z"}
{"msg":"I dunno. I don't feel strongly, but I do end up with a zillion branch references.","username":"MHBauer","ts":"2019-09-27T19:39:59.732Z"}
{"msg":"for the other thing, rebasing","username":"MHBauer","ts":"2019-09-27T19:40:13.596Z"}
{"msg":"I'd be fine with that button if it didn't 'rebase-anyway' even if the current commit was up to date.","username":"MHBauer","ts":"2019-09-27T19:40:37.947Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-evm?msg=MAak6WPbruox4kjiD) it doesn't rebase unless someone clicks rebase","username":"MHBauer","ts":"2019-09-27T19:40:37.947Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-evm?msg=MAak6WPbruox4kjiD","url":"https://chat.hyperledger.org/channel/fabric-evm?msg=MAak6WPbruox4kjiD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"So, if we want to do manual merging into master, that's fine, but don't use the button.","username":"MHBauer","ts":"2019-09-27T19:40:53.201Z"}
{"msg":"So perhaps we turn off the option you mentioned about and then we only allow rebase merging that might solve the problem?","username":"swetha","ts":"2019-09-27T20:41:52.484Z"}
{"msg":"I dunno. I need to experiment again.","username":"MHBauer","ts":"2019-09-27T20:42:58.309Z"}
{"msg":"The answer might just be, \"don't use the button, try and do things manually\"","username":"MHBauer","ts":"2019-09-27T20:43:18.589Z"}
{"msg":"I'm comfortable with git, but others might not be.","username":"MHBauer","ts":"2019-09-27T20:43:32.869Z"}
{"msg":"manually as in locally? I didn't think we are allowed to do that directly, since it is a protected branch ","username":"swetha","ts":"2019-09-27T20:45:46.596Z"}
{"msg":"hmn, haven't tried. maybe when yours is ready","username":"MHBauer","ts":"2019-09-27T20:55:36.262Z"}
{"msg":"@swetha the checks didn't run.","username":"MHBauer","ts":"2019-09-27T21:03:44.836Z"}
{"msg":"weird","username":"MHBauer","ts":"2019-09-27T21:03:53.514Z"}
{"msg":"checks are still running. maybe azp doesn't have any free vms right now?","username":"swetha","ts":"2019-09-27T21:05:30.878Z"}
{"msg":"one thing we can look into is to not run code checks on doc changes","username":"swetha","ts":"2019-09-27T21:06:00.421Z"}
{"msg":"There is a 10 parallel job limit in AZP by default. If you need more jobs, I can open a support ticket and request they bump it up","username":"BrettLogan","ts":"2019-09-27T21:14:33.525Z"}
{"msg":"I can't see anything running right now","username":"MHBauer","ts":"2019-09-27T22:28:53.158Z"}
{"msg":"@BrettLogan and I don't see any related to the push she made.","username":"MHBauer","ts":"2019-09-27T22:29:18.330Z"}
{"msg":"so if it's 10 jobs for the whole org, we're never going to have enough.","username":"MHBauer","ts":"2019-09-27T22:29:30.410Z"}
{"msg":"or we need a button to push it if it doesn't see anything.","username":"MHBauer","ts":"2019-09-27T22:29:48.001Z"}
{"msg":"Ah. I misunderstood. I thought Swetha was saying her jobs were queued but not running. In which case AZP may not report back to the checks API that the job had started. You can also comment on your PR with `/azp list` to see available comment triggers. Though we may not have permissions set up correctly for that, I have to check. As Maintainers on the repo you may have a high enough level to do so. ","username":"BrettLogan","ts":"2019-09-27T22:33:14.925Z"}
{"msg":"And the 10 jobs is per project, not for the whole org","username":"BrettLogan","ts":"2019-09-27T22:33:26.851Z"}
{"msg":"ooh","username":"MHBauer","ts":"2019-09-27T22:49:59.704Z"}
{"msg":"comment triggers, did not know that was a thing.","username":"MHBauer","ts":"2019-09-27T22:50:06.522Z"}
{"msg":"ah, okay, and for the record, as context, we're specifically talking about this pr https://github.com/hyperledger/fabric-chaincode-evm/pull/12","username":"MHBauer","ts":"2019-09-27T22:50:49.399Z"}
{"msg":"that was very nice. thank you @BrettLogan :ok_hand: ","username":"MHBauer","ts":"2019-09-27T22:52:28.213Z"}
{"msg":"Yea. If you implement stages you can get much more granular on what you can control via comments. Currently your only option is to trigger the entire pipeline. ","username":"BrettLogan","ts":"2019-09-27T22:58:40.647Z"}
{"msg":"more to read about.","username":"MHBauer","ts":"2019-09-28T00:19:11.707Z"}
{"msg":"curious as to whether there are any inhibitors to moving off Gerrit for the evm chaincode... thoughts?","username":"cbf","ts":"2019-10-09T18:13:08.373Z"}
{"msg":"We actually migrated EVM off Gerrit about two weeks ago","username":"BrettLogan","ts":"2019-10-09T18:19:26.677Z"}
{"msg":":+1: ","username":"MHBauer","ts":"2019-10-09T18:29:13.282Z"}
{"msg":"If there's anything left over there, we're not concerned and it can be turned off.","username":"MHBauer","ts":"2019-10-09T18:29:43.607Z"}
{"msg":"https://gerrit.hyperledger.org/r/admin/repos","username":"BrettLogan","ts":"2019-10-09T18:31:26.052Z"}
{"msg":"Nope, the repo is marked read-only","username":"BrettLogan","ts":"2019-10-09T18:31:32.134Z"}
{"msg":"I have no concerns.","username":"MHBauer","ts":"2019-10-09T18:46:04.074Z"}
{"msg":"@cbf are we advertising gerrit somewhere that needs to be corrected?","username":"MHBauer","ts":"2019-10-09T18:46:18.174Z"}
{"msg":"older blogs, probably","username":"MHBauer","ts":"2019-10-09T18:46:32.976Z"}
{"msg":"@swetha cc https://github.com/perlin-network/life/pull/93","username":"silasdavis","ts":"2019-10-09T19:33:42.886Z"}
{"msg":"avoids replace directive pain","username":"silasdavis","ts":"2019-10-09T19:33:51.870Z"}
{"msg":"perfect! i was just looking into how the burrow upgrade will look in the evmcc","username":"swetha","ts":"2019-10-09T19:35:11.596Z"}
{"msg":"???","username":"MHBauer","ts":"2019-10-09T19:46:48.049Z"}
{"msg":"@klenik @swetha https://github.com/hyperledger/fabric-chaincode-evm/pull/16 looks like we're still after a test case to trigger it? ","username":"MHBauer","ts":"2019-10-09T19:48:57.719Z"}
{"msg":"Yes we need to play around with the test case a little more","username":"swetha","ts":"2019-10-09T20:04:44.882Z"}
{"msg":"I just did a quick test with the same inputs as Attila used. I have not investigated why it didn't cause the problem. I will look into it soon","username":"swetha","ts":"2019-10-09T20:05:38.034Z"}
{"msg":"I'm not sure time is well spent on finding an exact case of fabric certificates that cause the issue.","username":"MHBauer","ts":"2019-10-09T20:17:21.700Z"}
{"msg":"If I have to look for another combination, I am not going to add the test. I need to make sure I didn't miss a mock or something","username":"swetha","ts":"2019-10-09T20:27:16.487Z"}
{"msg":"@swetha Could you please send me the link to your fork/branch you're experimenting on with the tests? I'll also try to reproduce the issue in that environment","username":"klenik","ts":"2019-10-09T20:29:49.384Z"}
{"msg":"@klenik I just added a wip commit on the pr branch: https://github.com/swetharepakula/fabric-chaincode-evm/tree/event-name-error","username":"swetha","ts":"2019-10-09T20:32:16.055Z"}
{"msg":"it's something we can generate once and reuse. we're looking for a 8byte pattern that fails utf8.Valid() ","username":"MHBauer","ts":"2019-10-09T21:25:24.675Z"}
{"msg":"grr, I didn't want a thread","username":"MHBauer","ts":"2019-10-09T21:25:43.390Z"}
{"msg":"I guess I missed the memo;-) been traveling too much","username":"cbf","ts":"2019-10-10T15:04:02.236Z"}
{"msg":"but in the Fabric docs, we don't mention this","username":"cbf","ts":"2019-10-10T15:04:18.684Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html","username":"cbf","ts":"2019-10-10T15:04:40.681Z"}
{"msg":"eg we point in our CONTRIBUTING.md to the doc above, yet that does not mention that we have transitioned to GitHub","username":"cbf","ts":"2019-10-10T15:09:01.208Z"}
{"msg":"I missed both of those. I will make some PRs to have those be more accurate","username":"swetha","ts":"2019-10-10T15:15:17.802Z"}
{"msg":"submitted this https://gerrit.hyperledger.org/r/#/c/fabric/+/33937/ to fix fabric docs","username":"swetha","ts":"2019-10-10T19:22:23.969Z"}
{"msg":"@here Fabric Chaincode EVM Meeting starting now https://zoom.us/my/hyperledger.community.backup","username":"swetha","ts":"2019-10-16T15:03:59.480Z"}
{"msg":"Agenda: https://wiki.hyperledger.org/display/fabric/2019-10-16","username":"swetha","ts":"2019-10-16T15:04:26.388Z"}
{"msg":"@MHBauer we did want to enable this feature on github right?\n```\nDismiss stale pull request approvals when new commits are pushed\n```","username":"swetha","ts":"2019-10-17T18:02:46.544Z"}
{"msg":"yes, right? I agree to that. We can put all the settings in a jira and make it official_","username":"MHBauer","ts":"2019-10-17T19:27:37.785Z"}
{"msg":"Just verifying before i turn it on. It would match what we had in gerrit","username":"swetha","ts":"2019-10-17T19:32:41.320Z"}
{"msg":"make sense to me to match that as well.","username":"MHBauer","ts":"2019-10-17T19:41:58.381Z"}
{"msg":"only problem is it doesn't differentiate a rebase","username":"swetha","ts":"2019-10-17T20:27:54.713Z"}
{"msg":"ah, no biggie.","username":"MHBauer","ts":"2019-10-17T22:35:39.341Z"}
{"msg":"just hit the button before that, or do it manually.","username":"MHBauer","ts":"2019-10-17T22:35:48.194Z"}
{"msg":"not sure if I have tried a manual rebase, but the worst that happens is you manually close the issue","username":"MHBauer","ts":"2019-10-17T22:58:24.145Z"}
{"msg":"I did the manual rebase and force pushed to the branch. it made the review required","username":"swetha","ts":"2019-10-18T00:25:21.669Z"}
{"msg":"Next time I will try the button. Not sold on letting github rebase my branches, but we can give it try on a simple pr","username":"swetha","ts":"2019-10-18T00:25:48.820Z"}
{"msg":"not push to branch, push to master.","username":"MHBauer","ts":"2019-10-18T01:41:28.161Z"}
{"msg":"Oh that's right, i should have tried that","username":"swetha","ts":"2019-10-18T04:16:49.931Z"}
{"msg":"Has left the channel.","username":"BrettLogan","ts":"2019-10-30T12:46:05.651Z","type":"ul"}
{"msg":"Has joined the channel.","username":"hawkinggg","ts":"2019-11-04T07:12:30.278Z","type":"uj"}
{"msg":"hi there","username":"lehors","ts":"2019-11-20T16:01:41.162Z"}
{"msg":"is there a call today?","username":"lehors","ts":"2019-11-20T16:01:44.901Z"}
{"msg":"Agenda: https://wiki.hyperledger.org/display/fabric/2019-11-19","username":"swetha","ts":"2019-11-20T16:06:26.512Z"}
{"msg":"Has joined the channel.","username":"greg2git","ts":"2019-11-20T16:40:51.646Z","type":"uj"}
{"msg":"hello guys, great call, thank you","username":"greg2git","ts":"2019-11-20T16:41:15.293Z"}
{"msg":"@greg2git Thank you for joining!","username":"swetha","ts":"2019-11-20T19:11:27.321Z"}
{"msg":"hi @greg2git thanks for beingthere.","username":"MHBauer","ts":"2019-11-21T21:24:10.430Z"}
{"msg":"Has joined the channel.","username":"maciejjedrzejczyk","ts":"2019-12-17T07:07:38.500Z","type":"uj"}
{"msg":"Fabric EVM Meeting today. Agenda: https://wiki.hyperledger.org/display/fabric/2019-12-18\nZoom: https://zoom.us/j/6223336701","username":"swetha","ts":"2019-12-18T16:01:16.226Z"}
{"msg":"Fabric EVM Meeting now. Agenda: https://wiki.hyperledger.org/display/fabric/2019-12-18\nZoom: https://zoom.us/j/6223336701","username":"swetha","ts":"2019-12-18T16:01:16.226Z"}
{"msg":"Hi, could you please point me to an up to date tutorial that explains how to deploy all components of Fabric EVM?","username":"maciejjedrzejczyk","ts":"2019-12-19T06:20:42.046Z"}
{"msg":"Hi @maciejjedrzejczyk, the tutorial in the repo should be up to date. If you run into any issues, please let us know","username":"swetha","ts":"2019-12-19T14:58:30.102Z"}
{"msg":"Has joined the channel.","username":"ChaoLiu","ts":"2019-12-21T17:17:47.519Z","type":"uj"}
{"msg":"go 1.11 is already not being updated anymore. I need to make a record of whatever upstream policy is so I can stop thinking about this.","username":"MHBauer","ts":"2020-01-09T23:00:37.264Z"}
{"msg":"meeting comping up as soon as I load zoom.","username":"MHBauer","ts":"2020-01-15T16:01:29.347Z"}
{"msg":"Thanks for attending, here's the meeting page with recording https://wiki.hyperledger.org/display/fabric/2020-01-15","username":"MHBauer","ts":"2020-01-15T16:34:16.827Z"}
{"msg":"Has joined the channel.","username":"Ewkoll","ts":"2020-02-17T09:19:23.482Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Franz","ts":"2020-02-28T15:58:02.084Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Abhishekkishor","ts":"2020-03-12T19:44:20.934Z","type":"uj"}
{"msg":"Is there a meeting now? I can't find the slack channel","username":"MHBauer","ts":"2020-03-19T15:13:06.524Z"}
{"msg":"Hi, I'm trying web31.2.0 to interact with the network, but calling methods of smart contract the output is [ [Object] ]. Do you know why ? ","username":"Franz","ts":"2020-03-20T11:25:38.721Z"}
{"msg":"Has joined the channel.","username":"gokulalex","ts":"2020-03-20T12:05:16.648Z","type":"uj"}
{"msg":"The web3 we have in our tests is very old. Before 1.0","username":"MHBauer","ts":"2020-03-20T18:13:28.831Z"}
{"msg":"I know. In all the examples is used web3@0.20.2. There's some guide or example that use web3@1.0 or greater to deploy and test smart contract ?","username":"Franz","ts":"2020-03-22T18:02:53.711Z"}
{"msg":"No we don't have any samples for 1.0 or greater, but 1.0 and greater does work","username":"swetha","ts":"2020-03-24T18:19:38.053Z"}
{"msg":"Thanks ","username":"Franz","ts":"2020-03-24T18:40:49.446Z"}
{"msg":"Hello I'm running a simple smart contract that add or spend points among registered users _(address, name, points, isRegistered)_. When I run the clients and call the methods the _eth address_ is always the same, calling `web3.eth.getAccounts(console.log)` there's always just one account from beginning to end of the console running. *1)* If I call `web3.eth.accounts.create()` what happens to the created accounts ? *2)* The only one account is associated to fab3 instance running? *3)* How can I create and call methods from different accounts (_e.g `registerUser `with different msg.sender address_) in order to test my smart contract?","username":"Franz","ts":"2020-03-24T19:09:51.910Z"}
{"msg":"Hello I'm running a simple smart contract that add or spend points among registered users _(address, name, points, isRegistered)_. When I run the clients and call the methods the _eth address_ is always the same, calling `web3.eth.getAccounts(console.log)` there's always just one account from beginning to end of the console running. If I call `web3.eth.accounts.create()` what happens to the created accounts ? The only one account is associated to fab3 instance running? How can I create and call methods from different accounts (_e.g `registerUser `with different msg.sender address_) in order to test my smart contract?","username":"Franz","ts":"2020-03-24T19:09:51.910Z"}
{"msg":"Each fab3 can only have one account at a time. It is one to one with the user that the fab3 instance is started with. Fab3 puts the sender address and ignores what is passed in","username":"swetha","ts":"2020-03-24T20:56:08.353Z"}
{"msg":"If you want more accounts, you need to have multiple fab3 instances and more users created in fabric ","username":"swetha","ts":"2020-03-24T20:56:45.179Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Fab3_Instructions.md","username":"swetha","ts":"2020-03-24T21:00:36.788Z"}
{"msg":"Those are the subset of the ethereum json rpc api we support and the current restrictions","username":"swetha","ts":"2020-03-24T21:01:44.365Z"}
{"msg":"Thanks a lot :) I finally understood","username":"Franz","ts":"2020-03-26T10:01:56.120Z"}
{"msg":"Hello everybody. I've a doubt about` loyalty-points-evm-fabric`. How the example handle the membership application side. I understand how works fab3 and integration but How client recognize the User(belong to Org1 or Org2) that call method inside smart contract. e.g the method registerMember could be called only by User belonging to Org2 and so on. so how application filter the request ?","username":"Franz","ts":"2020-03-31T11:44:37.249Z"}
{"msg":"I am not familiar with the details of that example, but I think the application roles don't necessarily translate into Fabric users. The app is more defining users from the app's perspective. I recommend asking one of the contributors of the project for more information. ","username":"swetha","ts":"2020-04-01T07:18:07.301Z"}
{"msg":"Has joined the channel.","username":"matanyahu","ts":"2020-04-06T17:54:37.435Z","type":"uj"}
{"msg":"Hello there's a way to link metamask (own eth address) to Fab3 in order to interact with ethereum network too ? My goal is move erc20 token on a ethereum network starting from fabric chaincode. there's a way to do that ? ","username":"Franz","ts":"2020-04-10T09:29:35.133Z"}
{"msg":"No, fab3 talks to fabric network, and there is no concept of talking to a mainnet or fork.","username":"MHBauer","ts":"2020-04-16T21:30:22.886Z"}
{"msg":"Hi. If I run the chaincode-evm in net mode the only way to see all transactions logs is to run `docker logs containerID` ?  There's a way (e.g using fab3) to print all blockchain transactions log at higher level ? ","username":"Franz","ts":"2020-04-23T15:58:04.700Z"}
{"msg":"I am not sure what is meant by \"net mode\". Which container logs are you looking at? The chaincode? Which transaction logs are you trying to look for? Fabric or evm? We store evm logs into fabric logs, but in a somewhat custom way as json. \n\nfor evm logs through fab3 we've implemented the rpc call https://github.com/hyperledger/fabric-chaincode-evm/blob/master/Fab3_Instructions.md#eth_getLogs\n\nThere is a partially completed implementation of the asynchronous log follower, https://github.com/hyperledger/fabric-chaincode-evm/pull/27 but it still needs some work.","username":"MHBauer","ts":"2020-04-23T17:30:40.467Z"}
{"msg":"I saw in some opened topics(e.g on stackoverflow ) that talk about \"net mode\" and \"dev mode\". \"net mode\" should mean the standard mode running the peers and all net components inside docker containers. ","username":"Franz","ts":"2020-04-24T09:31:24.005Z"}
{"msg":"I saw in some opened topics(e.g on stackoverflow ) that talk about \"net mode\" and \"dev mode\". \"net mode\" should mean the standard mode running the peers and all net components inside docker containers.  ```\n```\nI'm trying to look the blockchain transactions log, when an endorsing peer verify a transaction and the orderer release a new block. at \"lower level\". If I look inside docker containers I could see all the transactions processed and block released, but can I see that informations at \"higher level\" in order to insert that transactions log inside my dapp ?  \nI tryed eth_getLogs in several way but it return \"can't find method getLogs\" message","username":"Franz","ts":"2020-04-24T09:31:24.005Z"}
{"msg":"I saw in some opened topics(e.g on stackoverflow ) that talk about \"net mode\" and \"dev mode\". \"net mode\" should mean the standard mode running the peers and all net components inside docker containers.  ```\n```\nI'm trying to look the blockchain transactions log, when an endorsing peer verify a transaction and the orderer release a new block. at \"lower level\". If I look inside docker containers I could see all the transactions processed and block released, but can I see that informations at \"higher level\" in order to insert that transactions log inside my dapp ?  \n``` \nI tryed eth_getLogs in several way but it return \"can't find method getLogs\" message``` ","username":"Franz","ts":"2020-04-24T09:31:24.005Z"}
{"msg":"I saw in some opened topics(e.g on stackoverflow ) that talk about \"net mode\" and \"dev mode\". \"net mode\" should mean the standard mode running the peers and all net components inside docker containers.  ```\n```\nI'm trying to look the blockchain transactions log, when an endorsing peer verify a transaction and the orderer release a new block. at \"lower level\". If I look inside docker containers I could see all the transactions processed and block released, but can I see that informations at \"higher level\" in order to insert that transactions log inside my dapp ?  \n``` \nI tryed eth_getLogs in several way but it return \"can't find method getLogs\" message","username":"Franz","ts":"2020-04-24T09:31:24.005Z"}
{"msg":"So from the fabric chaincode evm side there is no change based on the modes you mentioned. I am not familiar with those terms. In general the evm chaincode logs will be found looking at the docker logs for that container, or where the other chaincode logs are. Fab3 only logs to stdout right now and only shows INFO level logging. At the moment neither the evm and fab3 log every request so having a transaction log would not work. You can query for all the blocks using fab3 and json rpc api. ","username":"swetha","ts":"2020-04-24T18:30:42.942Z"}
{"msg":"Thanks a lot for the help üôÇ","username":"Franz","ts":"2020-04-25T08:19:44.858Z"}
{"msg":"At this link https://wiki.hyperledger.org/display/fabric/Raw+Transaction+Design I saw that @MHBauer  conceptualize to introduce metamask in raw transaction process. There's architecture design limit to develop it ?  ","username":"Franz","ts":"2020-04-25T08:30:53.005Z"}
{"msg":"That's information we came up together of the work required. It was never put to full planning. ","username":"MHBauer","ts":"2020-04-27T17:37:05.481Z"}
{"msg":"Has joined the channel.","username":"magdasta","ts":"2020-05-06T14:13:30.043Z","type":"uj"}
{"msg":"Hi! I've been playing around with HLF for only a few days, so please forgive me if it's a lame question, but I couldn't find an answer. Is it possible to use evmcc with fabric 2.0? If so, are there any tutorials or docs? And if not, when it's planned to be supported?","username":"magdasta","ts":"2020-05-06T14:13:30.413Z"}
{"msg":"It's a go chaincode, so I can't think of any reason it wouldn't work.","username":"MHBauer","ts":"2020-05-06T18:04:36.422Z"}
{"msg":"Has joined the channel.","username":"abrinckm","ts":"2020-05-12T13:47:21.944Z","type":"uj"}
{"msg":"*[Fab3]* Hello I build and run a new network with  3 Orgs( 1 peer per org ) and 2 channels (channel12 and channel23). When I run the fab3 proxy appear the error \"`Error: Failed to create Fabric SDK Client: failed to initialize configuration: unable to load endpoint config: failed to initialize endpoint config from config backend: network configuration load failed: failed to load channel configs: failed to load channel peers: unable to find MSP ID for peer : peer0.org3.example.com`\" . I modified the config file `network-sdk-config.yaml` in order to add peer0.org3.example.com and the channel12 and channel23. Some tips for that error ? ","username":"Franz","ts":"2020-05-13T08:20:30.773Z"}
{"msg":"SOLVED. It 'was a simple typo :grimacing: ","username":"Franz","ts":"2020-05-13T15:22:47.440Z"}
{"msg":"Oh, I hate those so much. ","username":"MHBauer","ts":"2020-05-13T16:26:37.838Z"}
{"msg":"There's a way to run transaction of an ERC20 token over a public Blockchain(Ethereum) starting from my private fabric chaincode(smart contract) ?","username":"Franz","ts":"2020-05-15T09:05:49.435Z"}
{"msg":"Has left the channel.","username":"conanoc","ts":"2020-05-19T10:07:52.902Z","type":"ul"}
{"msg":"You ought to be able to run erc20 contracts in evm-chaincode, but there is no connection from chaincode-evm to public networks. That would have to be done outside of chaincode-evm.","username":"MHBauer","ts":"2020-05-19T19:37:05.199Z"}
{"msg":"Thanks for the reply. I would like to study if it's possible to implement a mapping mechanism between eth wallets and fabric users, storing the eth wallet(couple of keys) instead of generate it on the fly when run fab3, and link it to a x.509 certificate of fabric user. I saw that on github repo of Fab3 there's not a docs about files goal, but just how to use it. Where is generated the eth wallet during fab3 running ? in types.go ? and where is stored the keys once it is generated ? Every other kind of tips and advise about argument are so much appreciate :)","username":"Franz","ts":"2020-05-20T08:56:50.890Z"}
{"msg":"the mapping mecahism would be the msp from the diagram.","username":"MHBauer","ts":"2020-05-20T15:45:45.416Z"}
{"msg":"The address in fab3 is generated from the fabric auth","username":"MHBauer","ts":"2020-05-20T15:46:07.568Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/blob/59deb68bba4dd870905ee57aca767a7421bd4b56/evmcc/evmcc.go#L205-L233\n\n","username":"MHBauer","ts":"2020-05-20T18:09:33.415Z"}
{"msg":"Thanks a lot for advise. I pay attention to the code during this days. So approximately it should work in the following way: the fab3 run -> call account function in evmcc chaincode -> the account function check identity and generate an eth address starting from \"IdentityToAddress\" -> this eth address is used to invoke smart contract  ","username":"Franz","ts":"2020-05-20T18:30:35.888Z"}
{"msg":"so the eth account generated isn't completly random but \"semi-random\" generated starting from address of own fabric certificate ?","username":"Franz","ts":"2020-05-20T18:30:35.888Z"}
{"msg":"must recall that fab3 is using a fabric identity","username":"MHBauer","ts":"2020-05-20T19:19:13.942Z"}
{"msg":"that is passed through to evmcc, which unpacks it to convert to a evm address.","username":"MHBauer","ts":"2020-05-20T20:53:50.697Z"}
{"msg":"so the eth account address generated isn't completly random but \"semi-random\"?","username":"Franz","ts":"2020-05-21T08:15:44.203Z"}
{"msg":"more arbitrary, than random, https://github.com/hyperledger/fabric-chaincode-evm/blob/59deb68bba4dd870905ee57aca767a7421bd4b56/evmcc/address/converter.go\n","username":"MHBauer","ts":"2020-05-21T14:22:56.339Z"}
{"msg":"sha3 of public key","username":"MHBauer","ts":"2020-05-21T14:23:04.229Z"}
{"msg":"One other thing to note is that the eth address used for the from field is always rewritten by fab3 to use the address generated from the public key of the transaction ","username":"swetha","ts":"2020-05-21T14:42:25.772Z"}
{"msg":"So correct me if I'm wrong. Fab3 instance run -> connect as UserX of OrgX to evmcc -> evm chaincode check identity, take fabric identity, umarshall keyPub and perform sha3(keyPub) to generate eth address -> from now each chaincode invokation is done using eth account chaincode side otherwise fabric network side use fabric identity. my dubts is 1. where is stored the eth account ? 2. the fabric auth is performed chaincode side or network side ? ","username":"Franz","ts":"2020-05-22T10:00:15.410Z"}
{"msg":"not sure what's mean by \"where is eth account stored\" account is an address, and the address generation has been shown above.\n\n2. fabric auth is done during fab3 -> fabric communication.","username":"MHBauer","ts":"2020-05-22T17:28:14.350Z"}
{"msg":"The eth account is not stored anywhere. Every fabric transaction needs a fabric identity, so using that public key which is sent with the transaction, fabric knows the account. The account address is always generated on the fly. ","username":"swetha","ts":"2020-05-22T18:24:36.458Z"}
{"msg":"Okay so there isn't created a real eth wallet with a couple of keys (with a storing mechanism for KeyPrivate). but it's created just the eth public key used for transaction over the evm ?","username":"Franz","ts":"2020-05-23T08:19:06.742Z"}
{"msg":"yes, correct.","username":"MHBauer","ts":"2020-05-27T00:46:01.501Z"}
{"msg":"There are fabric pub/priv key pair that is used. That private key is needed to sign the fabric transaction which has the evm transaction within it ","username":"swetha","ts":"2020-05-27T01:01:19.825Z"}
{"msg":"Has joined the channel.","username":"SuperSeiyan","ts":"2020-08-07T06:08:45.949Z","type":"uj"}
{"msg":"Anyone has experience building a custom token on EVM with no gas, runs on own VM and can interoperate with IBM Blockchain? Please DM for project","username":"charyorde","ts":"2020-08-17T01:06:33.539Z"}
{"msg":"@MHBauer With fabric release 2.2, which docker file do I add the fabric-chaincode-evm? There's no docker-compose-cli in fabric release 2.2","username":"charyorde","ts":"2020-08-25T16:56:20.177Z"}
{"msg":"what are you working through?","username":"MHBauer","ts":"2020-08-25T18:38:47.173Z"}
{"msg":"I don't your question","username":"charyorde","ts":"2020-08-25T19:00:35.903Z"}
{"msg":"What are you doing? Following a guide? Where does comopse-cli figure in to your process?","username":"MHBauer","ts":"2020-08-25T19:04:32.517Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md","username":"charyorde","ts":"2020-08-25T19:15:03.028Z"}
{"msg":"ah, yes, we have not migrated to a 2.0 based process nor the `test-network` instead of `first-network`.","username":"MHBauer","ts":"2020-08-25T19:17:05.929Z"}
{"msg":"I'm using the test-network on relese 2.2","username":"charyorde","ts":"2020-08-25T19:17:13.525Z"}
{"msg":"we should probably not be linking to master for our links.","username":"MHBauer","ts":"2020-08-25T19:17:30.119Z"}
{"msg":"Has joined the channel.","username":"NizomjonKhajiev","ts":"2020-08-31T13:09:36.499Z","type":"uj"}
{"msg":"Hi","username":"NizomjonKhajiev","ts":"2020-08-31T13:09:37.115Z"}
{"msg":"Has left the channel.","username":"sstone1","ts":"2020-09-03T07:13:57.238Z","type":"ul"}
{"msg":"Has left the channel.","username":"gregdhill","ts":"2020-09-03T13:34:12.765Z","type":"ul"}
{"msg":"Has left the channel.","username":"jaromil","ts":"2020-10-08T15:19:15.768Z","type":"ul"}
{"msg":"Has joined the channel.","username":"ErnestoGomez","ts":"2020-11-11T17:16:35.245Z","type":"uj"}
{"msg":"Hello, How can I get the address from a public key?\nI tried using keccak256(PuK), Sha2-256(PuK), and Sha3-256(PuK) but no result match the address associated with this PuK","username":"ErnestoGomez","ts":"2020-11-11T17:16:35.725Z"}
{"msg":"Ok, I got the solution\nSha3-256(0x3059301306072a8648ce3d020106082a8648ce3d030107034200:PubK)","username":"ErnestoGomez","ts":"2020-11-16T18:15:50.822Z"}
{"msg":"concatenate 3059301306072a8648ce3d020106082a8648ce3d030107034200 and the publickey","username":"ErnestoGomez","ts":"2020-11-16T18:16:07.121Z"}
{"msg":"Has joined the channel.","username":"pouya","ts":"2020-11-29T11:02:10.106Z","type":"uj"}
{"msg":"Hi, what is the use of fabric-evm? I am using the SDK accessing the fabric network.","username":"bh4rtp","ts":"2021-01-10T00:47:46.960Z"}
{"msg":"Has joined the channel.","username":"HansrajRami","ts":"2021-01-11T15:35:59.099Z","type":"uj"}
{"msg":"Hi I was setting up this on fabric 2.2.1 \nevmcc chaincode working perfect\n\nBut fab3 proxy is not running\nDoes fab3 proxy works with fabric 2.2.x ??","username":"HansrajRami","ts":"2021-01-12T07:24:06.551Z"}
{"msg":"I've tried this example https://github.com/hyperledger/fabric-chaincode-evm/blob/master/examples/EVM_Smart_Contracts.md\n\nWith first network example in fabric samples repo\nBut fabric version is 2 \n\nI am having this error while starting fab3 proxy \n\n```\nError: Failed to create Fabric SDK Channel Client: failed to create channel context: failed to get client context to create channel client: getting private key from cert failed: Failed getting key for SKI [[195 186 252 66 222 59 87 132 88 84 30 189 208 4 67 84 65 93 59 65 204 231 202 219 251 121 53 38 15 172 231 228]]: Key with SKI c3bafc42de3b578458541ebdd0044354415d3b41cce7cadbfb7935260face7e4 not found in /tmp/msp/keystore\n```","username":"HansrajRami","ts":"2021-01-12T13:13:23.024Z"}
{"msg":"Has joined the channel.","username":"barankilic","ts":"2021-01-31T15:54:10.048Z","type":"uj"}
{"msg":"Has joined the channel.","username":"CANEREMEC","ts":"2021-03-26T08:32:56.992Z","type":"uj"}
{"msg":"Has joined the channel.","username":"RobertBetschinger","ts":"2021-05-28T10:21:16.713Z","type":"uj"}
{"msg":"Has left the channel.","username":"jimthematrix","ts":"2021-06-07T16:01:53.726Z","type":"ul"}
{"msg":"Has joined the channel.","username":"Shritesh99","ts":"2021-07-16T04:58:27.093Z","type":"uj"}
{"msg":"Hello, I am the Mentee for this year's \"Implement cross-chain contract invocation using Servicemesh way\" project. I have installed fabric EVM chaincode on Fabric 2.2, I am not able to invoke the EVM starting transaction using command ``` peer chaincode invoke -o localhost:7050 --tls --cafile $ORDERER_CA -C mychannel -n evmcc --peerAddresses localhost:7051 --tlsRootCertFiles $PEER0_ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $PEER0_ORG2_CA -c '{\"Args\":[]}'\n```","username":"Shritesh99","ts":"2021-07-16T05:12:59.833Z"}
{"msg":"Hello, I am the Mentee for this year's \"Implement cross-chain contract invocation using Servicemesh way\" project. I have installed fabric EVM chaincode on Fabric 2.2, I am not able to invoke the EVM starting transaction using command \n``` peer chaincode invoke -o localhost:7050 --tls --cafile $ORDERER_CA -C mychannel -n evmcc --peerAddresses localhost:7051 --tlsRootCertFiles $PEER0_ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $PEER0_ORG2_CA -c '{\"Args\":[]}'\n```","username":"Shritesh99","ts":"2021-07-16T05:12:59.833Z"}
{"msg":"Hello, I am the Mentee for this year's \"Implement cross-chain contract invocation using Servicemesh way\" project. I have installed fabric EVM chaincode on Fabric 2.2, I am not able to invoke the EVM starting transaction using the command:\n``` peer chaincode invoke -o localhost:7050 --tls --cafile $ORDERER_CA -C mychannel -n evmcc --peerAddresses localhost:7051 --tlsRootCertFiles $PEER0_ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $PEER0_ORG2_CA -c '{\"Args\":[]}'\n```\nI have also logged into thechaincode docker container and here are the logs of it.\n```\n2021-07-16 05:03:10.185 UTC [shim] setupChaincodeLogging -> WARN 001 Error: logger: invalid log level for shim log level: warn2021-07-16 05:03:10.185 UTC [shim] setupChaincodeLogging -> INFO 002 Chaincode (build level: 2.3.2) starting up ...\n```","username":"Shritesh99","ts":"2021-07-16T05:12:59.833Z"}
{"msg":"Hello, I am the Mentee for this year's \"Implement cross-chain contract invocation using Servicemesh way\" project. I have installed fabric EVM chaincode on Fabric 2.2, I am not able to invoke the EVM starting transaction using the command:\n```peer chaincode invoke -o localhost:7050 --tls --cafile $ORDERER_CA -C mychannel -n evmcc --peerAddresses localhost:7051 --tlsRootCertFiles $PEER0_ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $PEER0_ORG2_CA -c '{\"Args\":[]}'\n```\nI have also logged into thechaincode docker container and here are the logs of it.\n```\n2021-07-16 05:03:10.185 UTC [shim] setupChaincodeLogging -> WARN 001 Error: logger: invalid log level for shim log level: warn2021-07-16 05:03:10.185 UTC [shim] setupChaincodeLogging -> INFO 002 Chaincode (build level: 2.3.2) starting up ...\n```","username":"Shritesh99","ts":"2021-07-16T05:12:59.833Z"}
{"msg":"Hello, I am the Mentee for this year's \"Implement cross-chain contract invocation using Servicemesh way\" project. I have installed fabric EVM chaincode on Fabric 2.2, I am not able to invoke the EVM starting transaction using the command:\n```\npeer chaincode invoke -o localhost:7050 --tls --cafile $ORDERER_CA -C mychannel -n evmcc --peerAddresses localhost:7051 --tlsRootCertFiles $PEER0_ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $PEER0_ORG2_CA -c '{\"Args\":[]}'\n```\nI have also logged into thechaincode docker container and here are the logs of it.\n```\n2021-07-16 05:03:10.185 UTC [shim] setupChaincodeLogging -> WARN 001 Error: logger: invalid log level for shim log level: warn\n2021-07-16 05:03:10.185 UTC [shim] setupChaincodeLogging -> INFO 002 Chaincode (build level: 2.3.2) starting up ...\n```","username":"Shritesh99","ts":"2021-07-16T05:12:59.833Z"}
{"msg":"Hello, I am the Mentee for this year's \"Implement cross-chain contract invocation using Servicemesh way\" project. I have installed fabric EVM chaincode on Fabric 2.2, I am not able to invoke the EVM starting transaction using the command:\n```\npeer chaincode invoke -o localhost:7050 --tls --cafile $ORDERER_CA -C mychannel -n evmcc --peerAddresses localhost:7051 --tlsRootCertFiles $PEER0_ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $PEER0_ORG2_CA -c '{\"Args\":[]}'\n```\nI have also logged into the EVM chaincode docker container and here are the logs of it.\n```\n2021-07-16 05:03:10.185 UTC [shim] setupChaincodeLogging -> WARN 001 Error: logger: invalid log level for shim log level: warn\n2021-07-16 05:03:10.185 UTC [shim] setupChaincodeLogging -> INFO 002 Chaincode (build level: 2.3.2) starting up ...\n```","username":"Shritesh99","ts":"2021-07-16T05:12:59.833Z"}
{"msg":"Has joined the channel.","username":"kaushambi","ts":"2021-08-20T13:57:55.467Z","type":"uj"}
{"msg":"Hi, I am considering the use of fabric-evm in my future project but wanted to confirm if it has been successfully tested against HLF 2.x (preferrably 2.3)?","username":"maciejjedrzejczyk","ts":"2021-10-06T12:16:08.844Z"}
{"msg":"On the projects Github page (https://github.com/hyperledger/fabric-chaincode-evm), Hyperledger Fabric v1.4 is listed as dependency. I _guess_ it will not work with Fabric 2.x.\n\nI am not related to this project, but it looks like it is currently not maintained (or the development is finished and there is no need to change things.)","username":"barankilic","ts":"2021-10-11T12:02:41.858Z"}
{"msg":"Has joined the channel.","username":"gsarkar","ts":"2021-12-10T08:23:36.292Z","type":"uj"}
{"msg":"I have followed the link ( https://github.com/hyperledger/fabric-chaincode-evm ) to install EVM chaincode on Hyperledger Fabric. I also deployed the ERC721 solidity smart contract on the EVM chaincode. While querying the owner address through the function in the ERC721 smart contract, I'm getting the owner address as   \"AAAAAAAAAAAAAAAAMeGlXRSvGKRwCB3ufvC6Xg6YlE0=\" from  EVM chaincode compared to the owner address of \"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\" from the same ERC721 smart contract on Ethereum. It looks like there are 2 different encoding standards followed between EVM and Ethereum. Please suggest how to resolve the issue.   Please note that I'm also getting additional characters like nulls and line breaks during the response from ERC721 smart contract on EVM chaincode.","username":"gsarkar","ts":"2021-12-10T08:23:37.252Z"}
{"msg":"@MHBauer @swetha : Is the EVM chaincode still supported? We are looking to move Hyperledger Burrow to a Dormant state, and I would like to understand the impact to this integration.","username":"tkuhrt","ts":"2022-01-03T20:31:21.087Z"}
{"msg":"@MHBauer @swetha : Is the EVM chaincode still supported? We are looking to move Hyperledger Burrow to a Dormant state (at the request of the maintainers), and I would like to understand the impact to this integration.","username":"tkuhrt","ts":"2022-01-03T20:31:21.087Z"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:17.665Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:17.679Z","type":"room_changed_description"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:17.684Z","type":"room_changed_announcement"}
