{"msg":"Hyperledger Fabric maintainers discussion","username":"cbf","ts":"2017-02-01T20:59:44.956Z","type":"room_changed_topic"}
{"msg":"Discussion amongst or with the Hyperledger Fabric maintainers","username":"cbf","ts":"2017-02-01T21:00:03.889Z","type":"room_changed_description"}
{"msg":"User <em>User_1</em> added by <em>cbf</em>.","username":"cbf","ts":"2017-02-02T00:02:16.274Z","type":"au"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2017-02-02T00:06:05.705Z","type":"uj"}
{"msg":"howdy","username":"rjones","ts":"2017-02-02T00:06:10.361Z"}
{"msg":"User <em>User_2</em> removed by <em>cbf</em>.","username":"cbf","ts":"2017-02-02T00:07:05.183Z","type":"ru"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2017-02-02T00:07:23.333Z","type":"uj"}
{"msg":"ryjones","username":"cbf","ts":"2017-02-02T00:07:27.251Z","type":"subscription-role-added"}
{"msg":"something","username":"cbf","ts":"2017-02-02T00:07:40.881Z"}
{"msg":"something cool","username":"cbf","ts":"2017-02-02T00:07:40.881Z"}
{"msg":"foo","username":"rjones","ts":"2017-02-02T00:08:23.131Z"}
{"msg":"foobar","username":"rjones","ts":"2017-02-02T00:08:23.131Z"}
{"msg":"greg.haskins","username":"cbf","ts":"2017-02-02T00:10:17.699Z","type":"subscription-role-added"}
{"msg":"Has left the channel.","username":"rjones","ts":"2017-02-02T00:45:56.623Z","type":"ul"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2017-02-02T08:35:54.432Z","type":"uj"}
{"msg":"Has joined the channel.","username":"VipinB","ts":"2017-02-02T17:20:07.875Z","type":"uj"}
{"msg":"Has joined the channel.","username":"C0rWin","ts":"2017-02-02T17:23:47.128Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jimthematrix","ts":"2017-02-02T17:24:46.123Z","type":"uj"}
{"msg":"Has joined the channel.","username":"yacovm","ts":"2017-02-02T17:36:22.867Z","type":"uj"}
{"msg":"Has joined the channel.","username":"silliman","ts":"2017-02-02T17:56:00.900Z","type":"uj"}
{"msg":"Has joined the channel.","username":"muralisr","ts":"2017-02-02T18:33:34.143Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jyellick","ts":"2017-02-02T19:14:00.653Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ashutosh_kumar","ts":"2017-02-03T00:22:55.081Z","type":"uj"}
{"msg":"Has joined the channel.","username":"salmanbaset","ts":"2017-02-03T01:20:38.752Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SriramaSharma","ts":"2017-02-03T03:22:02.637Z","type":"uj"}
{"msg":"Has joined the channel.","username":"didnotgetagoodname","ts":"2017-02-03T03:58:55.720Z","type":"uj"}
{"msg":"Has joined the channel.","username":"grapebaba","ts":"2017-02-03T04:30:32.465Z","type":"uj"}
{"msg":"Has joined the channel.","username":"harsha","ts":"2017-02-03T05:28:04.789Z","type":"uj"}
{"msg":"guys, it seems missing twg-china channel in rocket.chat","username":"grapebaba","ts":"2017-02-03T06:28:44.945Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/5167/ has protobuf changes... we really cannot have changes post alpha. Is this absolutely it? ","username":"cbf","ts":"2017-02-03T06:30:39.251Z"}
{"msg":"Has joined the channel.","username":"JonathanLevi","ts":"2017-02-03T07:47:46.670Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dave.enyeart","ts":"2017-02-03T11:19:53.779Z","type":"uj"}
{"msg":"@cbf I cannot think of protobuf changes for alpha but we will likely have some for beta (at least one for adding version field to chainid if the new deployment model goes through)","username":"muralisr","ts":"2017-02-03T13:11:37.321Z"}
{"msg":"talking of alpha, have also fixed a potential issue reported by @rameshthoomu in https://gerrit.hyperledger.org/r/#/c/5497/","username":"muralisr","ts":"2017-02-03T13:12:38.972Z"}
{"msg":"Has joined the channel.","username":"rameshthoomu","ts":"2017-02-03T13:12:38.998Z","type":"uj"}
{"msg":"Since we want to minimize post-alpha changes, I've gone ahead and made the one proto change that I know about - adding an isValidated flag on the transaction header so that clients know whether the tran was validated or not by committer: https://gerrit.hyperledger.org/r/#/c/5503/","username":"dave.enyeart","ts":"2017-02-03T14:16:31.749Z"}
{"msg":"just out of curiosity: do we strive to have 0 protobuf changes after alpha, or are protobuf forwards/backwards compatible changes ok?","username":"greg.haskins","ts":"2017-02-03T14:16:57.251Z"}
{"msg":"i dont have any plans, I am just wondering about the policy so I can enforce it in my reviews","username":"greg.haskins","ts":"2017-02-03T14:17:12.806Z"}
{"msg":"Seams we should strive to limit changes, but if changes are needed they are much better pre-v1 than post-v1, even if that means they come in post-alpha.","username":"dave.enyeart","ts":"2017-02-03T14:18:32.313Z"}
{"msg":"@greg.haskins the main issue is more of all SDKs and tooling keeping up with protobuf changes (but right, backward compatibility will become more and more important as we progress)","username":"muralisr","ts":"2017-02-03T14:29:03.605Z"}
{"msg":"i agree with all that @dave.enyeart @muralisr ","username":"greg.haskins","ts":"2017-02-03T14:40:19.440Z"}
{"msg":"Has joined the channel.","username":"gormand","ts":"2017-02-03T14:43:11.740Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ssaddem","ts":"2017-02-03T15:53:11.041Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rickr","ts":"2017-02-03T17:33:11.189Z","type":"uj"}
{"msg":"@all what is the plan for v1.0 GA release date, if any?","username":"greg.haskins","ts":"2017-02-03T18:21:45.928Z"}
{"msg":"Paul Mason","username":"cbf","ts":"2017-02-03T18:21:59.144Z"}
{"msg":"Paul Masson","username":"cbf","ts":"2017-02-03T18:21:59.144Z"}
{"msg":"i know it could slip, or whatever, just looking for the plan","username":"greg.haskins","ts":"2017-02-03T18:22:01.172Z"}
{"msg":"@cbf are you saying ask Paul?","username":"greg.haskins","ts":"2017-02-03T18:22:34.427Z"}
{"msg":"@greg.haskins https://www.youtube.com/watch?v=oSs6DcA6dFI","username":"cbf","ts":"2017-02-03T18:23:19.668Z"}
{"msg":"ah, hahah","username":"greg.haskins","ts":"2017-02-03T18:24:13.061Z"}
{"msg":"i missed the reference","username":"greg.haskins","ts":"2017-02-03T18:24:16.543Z"}
{"msg":"We will sell no fabric before its time","username":"greg.haskins","ts":"2017-02-03T18:24:29.192Z"}
{"msg":"bingo","username":"cbf","ts":"2017-02-03T18:24:43.808Z"}
{"msg":"funny, though not very helpful ;)","username":"greg.haskins","ts":"2017-02-03T18:25:05.977Z"}
{"msg":"I think that right now we are looking to integrate the docker image refactor and the proto changes (as well as any documentation updates) before -alpha is cut","username":"cbf","ts":"2017-02-03T18:25:25.084Z"}
{"msg":"lots of people traveling today","username":"cbf","ts":"2017-02-03T18:25:45.144Z"}
{"msg":"I was sitting there wondering how Paul could be so key to the release yet I hadnt heard of him","username":"greg.haskins","ts":"2017-02-03T18:25:51.922Z"}
{"msg":"yeah, to be clear though, I was wondering about GA not alpha","username":"greg.haskins","ts":"2017-02-03T18:26:14.377Z"}
{"msg":"I know at one point we were targeting \"March\"","username":"greg.haskins","ts":"2017-02-03T18:26:30.022Z"}
{"msg":"but \"we dont know\" is perfectly fine","username":"greg.haskins","ts":"2017-02-03T18:26:58.670Z"}
{"msg":"","username":"JonathanLevi","ts":"2017-02-03T18:53:47.767Z","attachments":[{"title":"File Uploaded: Even If Everything Is Predestined...","title_link":"/file-upload/HfdwtRDXJmZ284HFR/Even If Everything Is Predestined...","image_url":"/file-upload/HfdwtRDXJmZ284HFR/Even If Everything Is Predestined...","image_type":"image/jpeg","image_size":22441,"url":"/file-upload/HfdwtRDXJmZ284HFR/Even If Everything Is Predestined...","remote":false,"fileId":"HfdwtRDXJmZ284HFR"}]}
{"msg":"well they are hoping the car driver does not think like them ;-) @JonathanLevi ","username":"muralisr","ts":"2017-02-03T19:00:06.728Z"}
{"msg":"Yeah, they probably don't want to assume, eh? ","username":"JonathanLevi","ts":"2017-02-03T19:00:35.173Z"}
{"msg":"We should spend enough time for testing... as we really need to \"lock APIs\" and soon.","username":"JonathanLevi","ts":"2017-02-03T19:01:10.142Z"}
{"msg":"We should spend/allocate enough time for testing... as we really need to \"lock APIs\" and soon.","username":"JonathanLevi","ts":"2017-02-03T19:01:10.142Z"}
{"msg":"Has joined the channel.","username":"fz","ts":"2017-02-03T19:29:04.120Z","type":"uj"}
{"msg":"Has joined the channel.","username":"karkal","ts":"2017-02-03T19:52:52.548Z","type":"uj"}
{"msg":"@JonathanLevi , you read Stephen Hawkins ? ","username":"ashutosh_kumar","ts":"2017-02-03T20:05:38.700Z"}
{"msg":"I read his book , The Brief History of Time , loved that book.","username":"ashutosh_kumar","ts":"2017-02-03T20:06:19.752Z"}
{"msg":"Has joined the channel.","username":"rocket.chat","ts":"2017-02-03T20:10:28.365Z","type":"uj"}
{"msg":"@ashutosh_kumar Please don't write in this channel.","username":"JonathanLevi","ts":"2017-02-03T22:06:50.150Z"}
{"msg":"JonathanLevi","username":"rjones","ts":"2017-02-03T23:04:32.160Z","type":"subscription-role-added"}
{"msg":"greg.haskins","username":"rjones","ts":"2017-02-03T23:04:42.333Z","type":"subscription-role-added"}
{"msg":"greg.haskins","username":"rjones","ts":"2017-02-03T23:04:43.293Z","type":"subscription-role-removed"}
{"msg":"Has joined the channel.","username":"jiangyaoguo","ts":"2017-02-04T01:32:36.922Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sheehan","ts":"2017-02-04T02:34:06.952Z","type":"uj"}
{"msg":"Has joined the channel.","username":"genggjh","ts":"2017-02-04T03:44:45.122Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mastersingh24","ts":"2017-02-04T15:20:22.382Z","type":"uj"}
{"msg":"@cbf, all: one thing we should decide on ABI wise for v1.0 is the whole core.yaml/CORE_ name","username":"greg.haskins","ts":"2017-02-05T13:36:40.190Z"}
{"msg":"this has never struck me as aptly named especially in the grand scheme of all the other HL projects and fabric components","username":"greg.haskins","ts":"2017-02-05T13:37:11.517Z"}
{"msg":"do we want to try to fix that before we are more stuck with it than we are now?","username":"greg.haskins","ts":"2017-02-05T13:37:23.115Z"}
{"msg":"also, we should probably restructure the devenv docs to be docker/docker-for-mac/docker-for-win oriented, making vagrant a sidebar and dropping docker-toolbox (we arent compatible with docker-toolbox)","username":"greg.haskins","ts":"2017-02-05T13:38:53.560Z"}
{"msg":"@greg.haskins  - I am just going to be harsh here (not towards you).  The config stuff is simply terrible.  We also have a big issue IMHO where we treat the peer executable as both a server and a client (CLI).  ","username":"mastersingh24","ts":"2017-02-05T13:39:54.610Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=npSuJnQgn3WWc27hq) @greg.haskins a sidebar?","username":"yacovm","ts":"2017-02-05T13:40:04.641Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=npSuJnQgn3WWc27hq","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=npSuJnQgn3WWc27hq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@yacovm by that, i mean deemphasize ","username":"greg.haskins","ts":"2017-02-05T13:40:32.468Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Yh5bGxBuz7BJswHsD) @mastersingh24 +1 for the dual usage of the peer binary. IMO, the code needs to be common but a separate binary needs to be used for CLI.","username":"yacovm","ts":"2017-02-05T13:40:39.214Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Yh5bGxBuz7BJswHsD","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Yh5bGxBuz7BJswHsD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I support a distinct CLI binary as well","username":"greg.haskins","ts":"2017-02-05T13:41:06.484Z"}
{"msg":"If you drop docker-toolbox, Windows users will have to go with Vagrant given Docker for Windows is not support on Win7 - just Win10","username":"mastersingh24","ts":"2017-02-05T13:41:09.003Z"}
{"msg":"If you drop docker-toolbox, Windows users will have to go with Vagrant given Docker for Windows is not supported on Win7 - just Win10","username":"mastersingh24","ts":"2017-02-05T13:41:09.003Z"}
{"msg":"@mastersingh24 ok, to be clear, I dont have a desire to drop docker-toolbox, I just didnt think we worked properly with it","username":"greg.haskins","ts":"2017-02-05T13:41:43.460Z"}
{"msg":"Why drop support for vagrant? so much time was invested in that. Is that really so hard to support it? I assume that some people would want to run on native linux and not in docker, and referencing the vagrant environment could be very beneficial.","username":"yacovm","ts":"2017-02-05T13:42:31.927Z"}
{"msg":"but to your original point, I do think we need to \"rename\" the config file(s)","username":"mastersingh24","ts":"2017-02-05T13:42:31.930Z"}
{"msg":"one of the things I ran into was that the old docker-toolbox (on mac) was compatible with TCP transports to dockerd, but not unix.  And docker-for-mac was compatible with unix transports, but not TCP","username":"greg.haskins","ts":"2017-02-05T13:42:33.005Z"}
{"msg":"but saying it out loud, I can imagine why that is not the case on windows ;)","username":"greg.haskins","ts":"2017-02-05T13:42:51.012Z"}
{"msg":"(no UDS on windows, for one)","username":"greg.haskins","ts":"2017-02-05T13:42:56.356Z"}
{"msg":"but I am confused how this might work on windows, as we do things like volume mount the dockerd UDS","username":"greg.haskins","ts":"2017-02-05T13:43:28.615Z"}
{"msg":"well docker-toolbox uses a Linux-based VM on both Windows and Mac.","username":"mastersingh24","ts":"2017-02-05T13:43:30.871Z"}
{"msg":"understood","username":"greg.haskins","ts":"2017-02-05T13:43:48.142Z"}
{"msg":"the issue I was seeing was related to how you effectively do docker in docker, so to speak","username":"greg.haskins","ts":"2017-02-05T13:44:03.150Z"}
{"msg":"there was a difference between them on mac, and I picked docker-for-mac to be supported","username":"greg.haskins","ts":"2017-02-05T13:44:16.791Z"}
{"msg":"the key is making sure the you run within the Docker terminal.  I've used mounts, etc without issue (unless I am confusing which things I've done on which OS's)  ;)","username":"mastersingh24","ts":"2017-02-05T13:44:36.916Z"}
{"msg":"my assumption was that docker-toolbox was broken all around, but maybe windows still manages to work somehow","username":"greg.haskins","ts":"2017-02-05T13:44:48.655Z"}
{"msg":"do you have a proposal for renaming the config files, etc?","username":"mastersingh24","ts":"2017-02-05T13:45:26.141Z"}
{"msg":"we should also quantify the full scope of \"supported\" because I am running docker-toolbox on this old MacPro and _most_ things work but not all","username":"greg.haskins","ts":"2017-02-05T13:45:47.844Z"}
{"msg":"so I do wonder if windows on docker-toolbox is in a similar boat","username":"greg.haskins","ts":"2017-02-05T13:45:58.702Z"}
{"msg":"most things work, but not all","username":"greg.haskins","ts":"2017-02-05T13:46:04.026Z"}
{"msg":"regarding config name, ill think about it","username":"greg.haskins","ts":"2017-02-05T13:46:30.113Z"}
{"msg":"i didnt have anything preconceived ","username":"greg.haskins","ts":"2017-02-05T13:46:40.001Z"}
{"msg":"Gari- you mean the core.yaml? ","username":"yacovm","ts":"2017-02-05T13:46:45.101Z"}
{"msg":"yeah - silly name  ;)","username":"mastersingh24","ts":"2017-02-05T13:46:53.285Z"}
{"msg":"I just know \"core\" is not great","username":"greg.haskins","ts":"2017-02-05T13:46:57.847Z"}
{"msg":"why not config.yaml and also rename the orderer.yaml accordingly? ","username":"yacovm","ts":"2017-02-05T13:47:13.619Z"}
{"msg":"I would probably have something like \"peer.yaml\" or \"peer-config.yaml\" and \"cli-config.yaml\"","username":"mastersingh24","ts":"2017-02-05T13:47:32.063Z"}
{"msg":"also something I thought about in this context- we have viper.Foo in all places in the code but do we have an index for all these knobs?","username":"yacovm","ts":"2017-02-05T13:47:36.631Z"}
{"msg":"i think something like \"config.yaml\" is fine if its expected to be in its own dir like /etc/hyperledger/fabric/peer/config.yaml","username":"greg.haskins","ts":"2017-02-05T13:48:12.561Z"}
{"msg":"I also like peer.yaml","username":"greg.haskins","ts":"2017-02-05T13:48:18.068Z"}
{"msg":"anything is better than \"core\"","username":"greg.haskins","ts":"2017-02-05T13:48:22.193Z"}
{"msg":"but I am just as concerned about the envvar names","username":"greg.haskins","ts":"2017-02-05T13:48:29.924Z"}
{"msg":"CORE_ is just asking for collisions/confusion","username":"greg.haskins","ts":"2017-02-05T13:48:38.100Z"}
{"msg":"viper is def adding some oddities into this mix","username":"greg.haskins","ts":"2017-02-05T13:49:09.541Z"}
{"msg":"on most systems I have ever worked on, the name of the config file is of little consequence","username":"greg.haskins","ts":"2017-02-05T13:49:30.107Z"}
{"msg":"because you would just specify the path or accept a default","username":"greg.haskins","ts":"2017-02-05T13:49:47.831Z"}
{"msg":"e.g. \"peer node start --config /etc/hyperledger/fabric/peer/config.yaml\"","username":"greg.haskins","ts":"2017-02-05T13:50:08.494Z"}
{"msg":"then, the user can call it \"frank.yaml\" if they want, I dont care","username":"greg.haskins","ts":"2017-02-05T13:50:25.147Z"}
{"msg":"anyway, I will leave you guys with this: be thinking about all of this in terms of what it would look like to do an LSB install of fabric","username":"greg.haskins","ts":"2017-02-05T13:52:16.510Z"}
{"msg":"where, traditionally, we might install config to /etc/, binaries to /usr/bin, and set up a writable area in /var","username":"greg.haskins","ts":"2017-02-05T13:53:06.974Z"}
{"msg":"and actually, this is related: https://jira.hyperledger.org/browse/FAB-2037?filter=-2","username":"greg.haskins","ts":"2017-02-05T13:55:08.155Z"}
{"msg":"we also need to get away from people adding ad-hoc envvars","username":"greg.haskins","ts":"2017-02-05T13:56:07.153Z"}
{"msg":"like MSP_CONFIG","username":"greg.haskins","ts":"2017-02-05T13:56:09.572Z"}
{"msg":"I actually don't like Viper (or perhaps our use of Viper).  The use of environment variables is \"convenient\" but also a nightmare","username":"mastersingh24","ts":"2017-02-05T13:56:11.804Z"}
{"msg":"I personally like a nice, simple config file  ;)","username":"mastersingh24","ts":"2017-02-05T13:56:40.111Z"}
{"msg":"having PEER_CFG_PATH is fine to bootstrap the lack of ability to do --config path/to/config, but from there, everything should be in the config file","username":"greg.haskins","ts":"2017-02-05T13:56:54.753Z"}
{"msg":"FAB-2037 would help in that capacity because that msp config could be specified in the config file as absolute or relative path","username":"greg.haskins","ts":"2017-02-05T13:57:33.851Z"}
{"msg":"@mastersingh24 i think we are aligned, except I dont mind the envvar overrides and in fact, I think that facility is more conducive to containerization","username":"greg.haskins","ts":"2017-02-05T13:58:13.953Z"}
{"msg":"but I would like to see it all be in one file, with a sane name, and support relative paths","username":"greg.haskins","ts":"2017-02-05T13:58:35.511Z"}
{"msg":"but I could be convinced otherwise on the envvar thing too...i know we can easily plug new bind-mounts into a container to replace a config file too","username":"greg.haskins","ts":"2017-02-05T13:59:48.500Z"}
{"msg":"perhaps ive been too spoiled because they were there","username":"greg.haskins","ts":"2017-02-05T14:00:00.462Z"}
{"msg":"Has joined the channel.","username":"lehors","ts":"2017-02-05T18:05:19.369Z","type":"uj"}
{"msg":"Yes, I think that `peer-config.yaml` (, `cli-config.yaml`, `fabric-ca-config.yaml`, ...) is a good convention - certainly better than `core` and `CORE_`","username":"JonathanLevi","ts":"2017-02-05T18:32:57.326Z"}
{"msg":"In a way, if we don't want name collusion (in the environment variables) then we should have longer env variable names. ","username":"JonathanLevi","ts":"2017-02-05T18:35:23.995Z"}
{"msg":"We need to remember to rename all those `CORE_` (to the more globally friendly `PEER_CFG_*`) - and later on, see if we can remove all these.","username":"JonathanLevi","ts":"2017-02-05T18:36:20.806Z"}
{"msg":"Hi guys. Not to be the whiner here but this is the kind of discussion/decision that we should take to the mailing list so that everyone can get a chance to comment and be informed","username":"lehors","ts":"2017-02-05T19:52:27.997Z"}
{"msg":"Tous is not to say we can't discuss it here, just that it would be better if it wasn't only here","username":"lehors","ts":"2017-02-05T19:53:10.894Z"}
{"msg":"This is not to say we can't discuss it here, just that it would be better if it wasn't only here","username":"lehors","ts":"2017-02-05T19:53:10.894Z"}
{"msg":"As for the topic at hand, I'm all for consistency!  :-)","username":"lehors","ts":"2017-02-05T19:54:47.922Z"}
{"msg":"Hi maintainers, verification keeps failing for this one:","username":"dave.enyeart","ts":"2017-02-06T00:10:50.652Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/5539/","username":"dave.enyeart","ts":"2017-02-06T00:10:54.477Z"}
{"msg":"Fails at this point:","username":"dave.enyeart","ts":"2017-02-06T00:11:10.409Z"}
{"msg":"19:46:32 \u001b[33munit-tests_1  |\u001b[0m ok  \tgithub.com/hyperledger/fabric/core/chaincode/shim\t0.028s\tcoverage: 16.8% of statements\n19:46:57 \u001b[33munit-tests_1  |\u001b[0m 2017/02/05 19:46:42 setting Number of procs to -1, was 4","username":"dave.enyeart","ts":"2017-02-06T00:11:27.549Z"}
{"msg":"Any ideas?","username":"dave.enyeart","ts":"2017-02-06T00:11:32.111Z"}
{"msg":"So @dave.enyeart the test that's failing is  `github.com/hyperledger/fabric/core/comm` (comes after `github.com/hyperledger/fabric/core/chaincode/shim`","username":"muralisr","ts":"2017-02-06T00:36:55.203Z"}
{"msg":"ok, why i mine failing and not others?  my changeset doesnt touch that area","username":"dave.enyeart","ts":"2017-02-06T00:37:46.902Z"}
{"msg":"ok, why is mine failing and not others?  my changeset doesnt touch that area","username":"dave.enyeart","ts":"2017-02-06T00:37:46.902Z"}
{"msg":"yeah...","username":"muralisr","ts":"2017-02-06T00:38:20.092Z"}
{"msg":"not sure","username":"muralisr","ts":"2017-02-06T00:38:22.698Z"}
{"msg":"worth rebasing perhaps ?","username":"muralisr","ts":"2017-02-06T00:39:36.983Z"}
{"msg":"yeah, just rebased and pushed as a new commit:","username":"dave.enyeart","ts":"2017-02-06T00:42:56.581Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/5553/","username":"dave.enyeart","ts":"2017-02-06T00:42:59.157Z"}
{"msg":"prior one had a dependency, maybe that has some impact that i dont understand.  new one is stand alone.","username":"dave.enyeart","ts":"2017-02-06T00:43:36.842Z"}
{"msg":"ok. lets watch out...","username":"muralisr","ts":"2017-02-06T00:44:16.615Z"}
{"msg":"thx","username":"dave.enyeart","ts":"2017-02-06T00:44:22.119Z"}
{"msg":"sure!","username":"muralisr","ts":"2017-02-06T00:44:26.872Z"}
{"msg":"shucks, https://gerrit.hyperledger.org/r/#/c/5553 also failing at github.com/hyperledger/fabric/core/comm","username":"dave.enyeart","ts":"2017-02-06T02:30:53.744Z"}
{"msg":"yes... saw that","username":"muralisr","ts":"2017-02-06T02:52:40.980Z"}
{"msg":"@dave.enyeart ...just curious, I see `viper.Set(\"ledger.blockchain.deploy-system-chaincode\", \"false\")` in the `comm/connection_test.go`","username":"muralisr","ts":"2017-02-06T02:55:45.494Z"}
{"msg":"perhaps grasping at straws :-) but what does that ledger setting do ?","username":"muralisr","ts":"2017-02-06T02:56:08.586Z"}
{"msg":"I think what's happening is that the comm tests rely upon the peer running in 7051 and its gone for some reason","username":"muralisr","ts":"2017-02-06T02:58:46.503Z"}
{"msg":"Any chance that `defer env.TestBlockStorageEnv.Cleanup()` (new in the CR) cause issues with a running container ? ","username":"muralisr","ts":"2017-02-06T03:09:55.293Z"}
{"msg":"i'll do some trials on my local with make unit-tests","username":"dave.enyeart","ts":"2017-02-06T03:23:14.522Z"}
{"msg":"Has joined the channel.","username":"david.peyronnin","ts":"2017-02-06T09:52:41.482Z","type":"uj"}
{"msg":"Has joined the channel.","username":"harrijk","ts":"2017-02-06T15:14:22.057Z","type":"uj"}
{"msg":"one point of discussion: maintainers on the new fabric-chaintool repo in gerrit","username":"greg.haskins","ts":"2017-02-06T15:41:38.807Z"}
{"msg":"er, rather, merge policy","username":"greg.haskins","ts":"2017-02-06T15:41:47.308Z"}
{"msg":"historically, the gh repo had three maintainers  (@muralisr @ecb and myself) and we operated with an effective NACR policy","username":"greg.haskins","ts":"2017-02-06T15:42:34.788Z"}
{"msg":"Has joined the channel.","username":"ecb","ts":"2017-02-06T15:42:34.894Z","type":"uj"}
{"msg":"I think the new repo in gerrit was setup with 2+2","username":"greg.haskins","ts":"2017-02-06T15:42:46.299Z"}
{"msg":"my concern is that will strain the small maintainer pool and question whether we should operate NACR there too","username":"greg.haskins","ts":"2017-02-06T15:43:08.401Z"}
{"msg":"thoughts?","username":"greg.haskins","ts":"2017-02-06T15:43:10.657Z"}
{"msg":"one difference is I think the maintainer group for gerrit fabric-chaintool mirrors fabric and adds @ecb ","username":"greg.haskins","ts":"2017-02-06T15:43:50.395Z"}
{"msg":"if that is the case, 2+2 might work if maintainers outside of the core chaintool team do not mind contributing a +2 from time to time","username":"greg.haskins","ts":"2017-02-06T15:44:11.579Z"}
{"msg":"@cbf @rjones ^^^","username":"greg.haskins","ts":"2017-02-06T15:44:41.220Z"}
{"msg":"@greg.haskins yes, the current configuration is 2+2, with two committer groups: fabric and another group which is just the committers from github (you, @muralisr, @ecb). I don't see much difference between NACR and 2+2 - is anyone that isn't a committer submitting patches?","username":"rjones","ts":"2017-02-06T15:46:54.865Z"}
{"msg":"yes, we had 8 contributors though the vast majority of the patches come from me","username":"greg.haskins","ts":"2017-02-06T15:47:29.442Z"}
{"msg":"https://github.com/hyperledger/fabric-chaintool/graphs/contributors","username":"greg.haskins","ts":"2017-02-06T15:48:03.153Z"}
{"msg":"I have no strong opinion on this :) Just tell me the decision - if you want NACR, NACR you get :)","username":"rjones","ts":"2017-02-06T15:48:14.172Z"}
{"msg":"I think the other maintainers should decide","username":"greg.haskins","ts":"2017-02-06T15:49:05.466Z"}
{"msg":"yes, agreed","username":"rjones","ts":"2017-02-06T15:49:14.616Z"}
{"msg":"my vote would be NACR only because I think we lack a critical mass for 2+2","username":"greg.haskins","ts":"2017-02-06T15:49:21.427Z"}
{"msg":"@greg.haskins  - I am ok either way.  Perhaps if we get more critical mass for it, we can add additional maintainers, etc.  NACR seems fine for now","username":"mastersingh24","ts":"2017-02-06T15:54:55.177Z"}
{"msg":"+1 to distinct binary","username":"cbf","ts":"2017-02-06T16:13:55.204Z"}
{"msg":"@greg.haskins if you are comfortable with fabric.maintainers + @ecb that works for me","username":"cbf","ts":"2017-02-06T16:14:51.485Z"}
{"msg":"but NACR is also fine if you want to retain the current committers","username":"cbf","ts":"2017-02-06T16:15:09.821Z"}
{"msg":"to be clear, I have absolutely no problem with all current committers to have commit access","username":"greg.haskins","ts":"2017-02-06T16:16:08.762Z"}
{"msg":"i am more concerned about having enough SME critical mass to get 2+2 on a timely basis","username":"greg.haskins","ts":"2017-02-06T16:16:37.282Z"}
{"msg":"so if we want to leave it as fabric+ecb but with NACR, that works for me","username":"greg.haskins","ts":"2017-02-06T16:16:56.385Z"}
{"msg":"@all so I think we should have a maintainers meeting (virtual) on how we proceed with closure on v1.0-alpha","username":"cbf","ts":"2017-02-06T16:17:14.365Z"}
{"msg":"a call might be difficult to arrange and would also be less than transparent","username":"cbf","ts":"2017-02-06T16:17:42.051Z"}
{"msg":"however, we could do it here or email","username":"cbf","ts":"2017-02-06T16:17:53.651Z"}
{"msg":"topics: documentation, configuration, api/abi lockdown, merge strategy until we cut the v1.0-alpha branch (distinct from the release), and testing","username":"cbf","ts":"2017-02-06T16:19:12.818Z"}
{"msg":"Good morning -  here or via email works for me (I'm finally really up!)","username":"JonathanLevi","ts":"2017-02-06T17:09:14.676Z"}
{"msg":"BTW: A Fabric logo (that is contributed to the community etc.) is certainly not a bad idea...","username":"JonathanLevi","ts":"2017-02-06T17:10:04.078Z"}
{"msg":"I'm on board","username":"mastersingh24","ts":"2017-02-06T17:42:39.545Z"}
{"msg":"Let me just say something to start the conversation maybe, despite the risk of showing my age...","username":"JonathanLevi","ts":"2017-02-06T17:48:01.312Z"}
{"msg":"Even when working in Agile, etc... for release, I haven't found any silver bullet that allow us to beat the following:\n\nAPI freeze -> Feature freeze -> Code freeze -> UAT -> Staging -> Release (candidate) -> Release","username":"JonathanLevi","ts":"2017-02-06T17:48:09.881Z"}
{"msg":"Even when working in Agile, etc... for release, I haven't found any silver bullet that allow us to beat the following:\n\nAPI freeze -> Feature freeze -> Code freeze -> Staging -> Release (candidate) -> Release","username":"JonathanLevi","ts":"2017-02-06T17:48:09.881Z"}
{"msg":"I interpret: API/ABI freeze/lockdown includes the configuration... that is a form of an input to an interface","username":"JonathanLevi","ts":"2017-02-06T17:48:59.429Z"}
{"msg":"Document should follow the API/ABI changes (including where to retrieve the binaries)","username":"JonathanLevi","ts":"2017-02-06T17:49:23.770Z"}
{"msg":"Document should follow the API/ABI changes (including from where one/a process should retrieve the binaries)","username":"JonathanLevi","ts":"2017-02-06T17:49:23.770Z"}
{"msg":"Documentation should follow the API/ABI changes (including from where one/a process should retrieve the binaries)","username":"JonathanLevi","ts":"2017-02-06T17:49:23.770Z"}
{"msg":"---\nSlightly separate, but related: I believe that the merge strategy will really require us all to be on the same page (more than some of us focusing on just a few of Fabric's components)","username":"JonathanLevi","ts":"2017-02-06T17:51:19.081Z"}
{"msg":"---\nSlightly separate, but related: I believe that the merge strategy will really require us all to be on the same page (more than some of us focusing on just a few of Fabric's components). Otherwise, it may be different to \"merge down\" from the alpha branch to master or vice versa.","username":"JonathanLevi","ts":"2017-02-06T17:51:19.081Z"}
{"msg":"related: last time was handled poorly, and @muralisr and I took the brunt of the punishment in the form of resolving everyones patches that were not merged on a regular basis","username":"greg.haskins","ts":"2017-02-06T18:17:38.791Z"}
{"msg":"lets avoid that this time ;)","username":"greg.haskins","ts":"2017-02-06T18:17:43.552Z"}
{"msg":"on the other side, I took the brunt of the fact that stuff we put out did not actually work  ;)","username":"mastersingh24","ts":"2017-02-06T18:18:12.321Z"}
{"msg":"haha, touche","username":"greg.haskins","ts":"2017-02-06T18:18:22.855Z"}
{"msg":"so - we first need to decide what this thing needs to do  ;)","username":"mastersingh24","ts":"2017-02-06T18:18:30.561Z"}
{"msg":"though we all have been paying for that until recently","username":"greg.haskins","ts":"2017-02-06T18:18:39.924Z"}
{"msg":"indeed","username":"mastersingh24","ts":"2017-02-06T18:18:45.214Z"}
{"msg":"blood, sweat, tears and possibly some of our souls","username":"mastersingh24","ts":"2017-02-06T18:19:12.642Z"}
{"msg":"yeah...on a positive note, its rapidly stabilizing ","username":"greg.haskins","ts":"2017-02-06T18:19:41.687Z"}
{"msg":"for a while there, moving one HEAD was a game of Russian roulette with 5 chambers loaded","username":"greg.haskins","ts":"2017-02-06T18:20:22.032Z"}
{"msg":"its much better now","username":"greg.haskins","ts":"2017-02-06T18:20:41.980Z"}
{"msg":"so the simple green path woukd be `create channel(s) -> join channel(s) -> deploy chaincode -> invoke chaincode`","username":"muralisr","ts":"2017-02-06T18:41:33.497Z"}
{"msg":"documentation for that from node SDK, and CLI ","username":"muralisr","ts":"2017-02-06T18:42:16.073Z"}
{"msg":"docker samples for that ","username":"muralisr","ts":"2017-02-06T18:42:35.387Z"}
{"msg":"bdd pointers for bootstrap","username":"muralisr","ts":"2017-02-06T18:43:49.342Z"}
{"msg":"how does that sound ?","username":"muralisr","ts":"2017-02-06T18:44:24.246Z"}
{"msg":"So that implies single org, right? (since no fetch and nothing generated with BDD)","username":"yacovm","ts":"2017-02-06T18:53:30.767Z"}
{"msg":"correct at will @mastersingh24 ","username":"muralisr","ts":"2017-02-06T18:56:48.816Z"}
{"msg":":grinning:","username":"muralisr","ts":"2017-02-06T18:56:59.286Z"}
{"msg":"(right @yacovm ...that's what I was implying)","username":"muralisr","ts":"2017-02-06T18:57:34.663Z"}
{"msg":"what does bdd pointers mean?","username":"yacovm","ts":"2017-02-06T18:59:16.075Z"}
{"msg":"Has joined the channel.","username":"vpaprots","ts":"2017-02-06T19:00:59.241Z","type":"uj"}
{"msg":"We need to think about what we need to show / get feedback on and I'd say that what @muralisr wrote is not sufficient :(\n\nWe are now at a point where we need to be able to demonstrate *most* if not *all* of the key attributes of the system:\n\n1) Channels - we've spent a lot of time and effort on this feature and we need to show how it really works.   This means we need to be able to have the \"proper\" config items as part of channel creation - e.g. member organizations (each comprised of an MSP and anchor peers)\n\nWe need to be able to create multiple channels and have different membership for each channel (at least from a configuration perspective)\n\n2) We need to be able to create channels *properly* from at least one of the SDKs (e.g. Node) and the CLI (although the CLI needs a real overhaul in this aspect as it should be a real client of the orderer)\n\n3) Need to show that we can have peers from multiple organizations \"join\" a channel.  This means that we need to properly parse and leverage the genesis / config block (with proper config items as specified in 1) above) - i.e. use this information in the peer to have per channel MSP list which can be used by both the endorser (to verify proposals from clients) and by gossip (gossip also needs the per channel list of anchor peers as well).  We could decide that we should not show gossip across orgs but I think at this point that would be a mistake\n\n4) Endorsement / validation policies - we need to demonstrate how to author a basic policy which requires multiple signatures.  Should be able to do this from at least one SDK and from the CLI when deploying chaincode\n\n5) There is a load of crypto material needed for 1) - 4) above so we need to document how to use fabric-ca to generate / obtain this material\n\nWe have zero real documentation about any of the above items.  We need to produce API docs for the SDKs, for fabric-ca (e.g. publish the Swagger), descriptions of the components in 1)- 4) above, etc\n\n\n\n","username":"mastersingh24","ts":"2017-02-06T19:09:21.190Z"}
{"msg":"We need to think about what we need to show / get feedback on and I'd say that what @muralisr wrote is not sufficient :(\n\nWe are now at a point where we need to be able to demonstrate *most* if not *all* of the key attributes of the system:\n\n1) Channels - we've spent a lot of time and effort on this feature and we need to show how it really works.   This means we need to be able to have the \"proper\" config items as part of channel creation - e.g. member organizations (each comprised of an MSP and anchor peers)\n\nWe need to be able to create multiple channels and have different membership for each channel (at least from a configuration perspective)\n\n2) We need to be able to create channels *properly* from at least one of the SDKs (e.g. Node) and the CLI (although the CLI needs a real overhaul in this aspect as it should be a real client of the orderer)\n\n3) Need to show that we can have peers from multiple organizations \"join\" a channel.  This means that we need to properly parse and leverage the genesis / config block (with proper config items as specified in 1) above) - i.e. use this information in the peer to have per channel MSP list which can be used by both the endorser (to verify proposals from clients) and by gossip (gossip also needs the per channel list of anchor peers as well).  We could decide that we should not show gossip across orgs but I think at this point that would be a mistake\n\n4) Endorsement / validation policies - we need to demonstrate how to author a basic policy which requires multiple signatures.  Should be able to do this from at least one SDK and from the CLI when deploying chaincode\n\n5) There is a load of crypto material needed for 1) - 4) above so we need to document how to use fabric-ca to generate / obtain this material\n\n6) We need to have published Docker images for the peer, orderer and fabric-ca plus NodeSDK published to NPM and if we are going to put out the Java SDK need to have a downloadable JAR and/or install via maven or gradle\n\nWe have zero real documentation about any of the above items.  We need to produce API docs for the SDKs, for fabric-ca (e.g. publish the Swagger), descriptions of the components in 1)- 4) above, etc\n\n\n\n","username":"mastersingh24","ts":"2017-02-06T19:09:21.190Z"}
{"msg":"We need to think about what we need to show / get feedback on and I'd say that what @muralisr wrote is not sufficient :(\n\nWe are now at a point where we need to be able to demonstrate *most* if not *all* of the key attributes/features of the system:\n\n1) Channels - we've spent a lot of time and effort on this feature and we need to show how it really works.   This means we need to be able to have the \"proper\" config items as part of channel creation - e.g. member organizations (each comprised of an MSP and anchor peers)\n\nWe need to be able to create multiple channels and have different membership for each channel (at least from a configuration perspective)\n\n2) We need to be able to create channels *properly* from at least one of the SDKs (e.g. Node) and the CLI (although the CLI needs a real overhaul in this aspect as it should be a real client of the orderer)\n\n3) Need to show that we can have peers from multiple organizations \"join\" a channel.  This means that we need to properly parse and leverage the genesis / config block (with proper config items as specified in 1) above) - i.e. use this information in the peer to have per channel MSP list which can be used by both the endorser (to verify proposals from clients) and by gossip (gossip also needs the per channel list of anchor peers as well).  We could decide that we should not show gossip across orgs but I think at this point that would be a mistake\n\n4) Endorsement / validation policies - we need to demonstrate how to author a basic policy which requires multiple signatures.  Should be able to do this from at least one SDK and from the CLI when deploying chaincode\n\n5) There is a load of crypto material needed for 1) - 4) above so we need to document how to use fabric-ca to generate / obtain this material\n\n6) We need to have published Docker images for the peer, orderer and fabric-ca plus NodeSDK published to NPM and if we are going to put out the Java SDK need to have a downloadable JAR and/or install via maven or gradle\n\nWe have zero real documentation about any of the above items.  We need to produce API docs for the SDKs, for fabric-ca (e.g. publish the Swagger), descriptions of the components in 1)- 4) above, etc\n\n\n\n","username":"mastersingh24","ts":"2017-02-06T19:09:21.190Z"}
{"msg":"BUT - there's light at the end of the tunnel here.  Although maybe the above looks daunting, other than the doc piece we are not *that* far off","username":"mastersingh24","ts":"2017-02-06T19:58:44.194Z"}
{"msg":"BUT - there's light at the end of the tunnel here.  Although maybe the above looks daunting, other than the doc piece we are *not that far off*","username":"mastersingh24","ts":"2017-02-06T19:58:44.194Z"}
{"msg":"regardless that list above looks more right and complete than the simplistic \"green path\" of mine","username":"muralisr","ts":"2017-02-06T20:24:47.194Z"}
{"msg":"we need to just make that happen :-) @mastersingh24 ","username":"muralisr","ts":"2017-02-06T20:24:58.509Z"}
{"msg":"Has joined the channel.","username":"weeds","ts":"2017-02-06T20:25:22.112Z","type":"uj"}
{"msg":"so fellow maintainers, how do we make this happen?  or something else if anyone has other thoughts?","username":"mastersingh24","ts":"2017-02-06T20:37:28.775Z"}
{"msg":"@mastersingh24 +1","username":"cbf","ts":"2017-02-06T21:34:11.251Z"}
{"msg":"I agree and kept a bit quiet after my first round of feedback/input - as I would like to hear/get more input (from others)  if possible, in case we miss anything.","username":"JonathanLevi","ts":"2017-02-06T21:40:33.086Z"}
{"msg":"In the interim: @mastersingh24 +1","username":"JonathanLevi","ts":"2017-02-06T21:41:07.092Z"}
{"msg":"Has joined the channel.","username":"tarima","ts":"2017-02-07T01:10:46.623Z","type":"uj"}
{"msg":"Has joined the channel.","username":"binhn","ts":"2017-02-07T03:34:06.335Z","type":"uj"}
{"msg":"we need some feedback/comment on https://gerrit.hyperledger.org/r/#/c/5555  -- detail in the associated fab-1783","username":"binhn","ts":"2017-02-07T03:35:32.566Z"}
{"msg":"i posted my vote in the comment of the CR","username":"binhn","ts":"2017-02-07T03:35:47.590Z"}
{"msg":"@mastersingh24 now we are getting greedy","username":"binhn","ts":"2017-02-07T03:43:06.939Z"}
{"msg":"Has joined the channel.","username":"crazybit","ts":"2017-02-07T05:32:37.119Z","type":"uj"}
{"msg":"@jyellick @hgabre please weigh in on @mastersingh24 proposal above","username":"cbf","ts":"2017-02-07T12:15:55.317Z"}
{"msg":"Has joined the channel.","username":"hgabre","ts":"2017-02-07T12:15:55.362Z","type":"uj"}
{"msg":"@cbf I think @mastersingh24 is spot on.  Here is my response from an orderer perspective.\n\n1. Due to some deficiencies in the configtx discovered during integration, there are some changes coming in that path, but they should be relatively isolated inside the centralized config parsing code, so should not have a significant impact on the actual consumers of the configuration.  \n\n2. The changes in (1) will make this a little tricky for the next few days while the configtx format changes slightly.  This is because the SDKs are producers of configuration and are therefore not as isolated as the consumers. But, the end result should actually make life easier for the SDKs.\n\n3. To my knowledge this is essentially complete, the orderer and peer are both parsing MSPs from the configtx, and the peer specific MSP mgmt map has been integrated with the configtx manager.  I say this with total confidence for the orderer code, but I do not know the peer code as well and it could probably use a quick audit for MSP usage.  One of the deficiencies of the current config structure involves the association between anchor peer and org, to be addressed in (1).\n\n4. Orderer independent.\n\n5. Agreed. This is a bit of a pain point for us generating a valid genesis block / configtx right now.\n\n6. Agreed.","username":"jyellick","ts":"2017-02-07T13:56:23.164Z"}
{"msg":"@jyellick perfect, thanks","username":"cbf","ts":"2017-02-07T14:00:36.337Z"}
{"msg":"@tamas @sheehan when you get a chance, please join us over in rocket.chat https://hyperledgerproject.slack.com/archives/general/p1486475686004850","username":"cbf","ts":"2017-02-07T14:02:27.000Z"}
{"msg":"Has joined the channel.","username":"tamas","ts":"2017-02-07T14:02:28.653Z","type":"uj"}
{"msg":"thanks for the heads-up @cbf","username":"tamas","ts":"2017-02-07T14:03:19.000Z"}
{"msg":"Has joined the channel.","username":"Dan","ts":"2017-02-07T14:38:52.576Z","type":"uj"}
{"msg":"Has joined the channel.","username":"smithbk","ts":"2017-02-07T14:41:16.421Z","type":"uj"}
{"msg":"Before cutting alpha, I really think we need to resolve https://jira.hyperledger.org/browse/FAB-2026","username":"jyellick","ts":"2017-02-07T14:53:38.483Z"}
{"msg":"Has joined the channel.","username":"brianeno","ts":"2017-02-07T14:55:30.662Z","type":"uj"}
{"msg":"If we resolve this, we need to add the gossip proto too to the list I guess","username":"yacovm","ts":"2017-02-07T14:57:19.957Z"}
{"msg":"Ah yes, the gossip protos were not under `protos` when I made my pass through this, so I missed htem.","username":"jyellick","ts":"2017-02-07T14:58:54.305Z"}
{"msg":"Ah yes, the gossip protos were not under `protos` when I made my pass through this, so I missed them.","username":"jyellick","ts":"2017-02-07T14:58:54.305Z"}
{"msg":"I was supposed to move them long ago but it got delayed, totally my fault :)","username":"yacovm","ts":"2017-02-07T14:59:43.314Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd) \n@mastersingh24 (5) is the one I am most interested in. Any takers there? Can be volunteered... I would like a tool under fabric (would write one too if OKed) to generated keys via BCCSP interface. Today they are standard PEM files which limits it to either SW BCCSP or key imports (not always possible).","username":"vpaprots","ts":"2017-02-07T15:08:40.053Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"we should use fabric-ca - but it's got bccsp anyway","username":"mastersingh24","ts":"2017-02-07T15:15:35.940Z"}
{"msg":"we can figure out what we need to do","username":"mastersingh24","ts":"2017-02-07T15:15:51.102Z"}
{"msg":"Has joined the channel.","username":"adc","ts":"2017-02-07T15:19:49.985Z","type":"uj"}
{"msg":"@mastersingh24 for 2) above, it'll be a bit of work for the node (or java for that matter) SDK to complete the create/join channels support, the squad hasn't focused on that with the understanding that it's not part of the alpha plan. so this is a change from two weeks ago right? we can do it but just need more time (like this week)","username":"jimthematrix","ts":"2017-02-07T15:20:14.422Z"}
{"msg":"I think we need to be able to drive it from one of the SDKs to prove the externals actually work","username":"mastersingh24","ts":"2017-02-07T15:20:50.416Z"}
{"msg":"+1","username":"cbf","ts":"2017-02-07T15:21:02.111Z"}
{"msg":"ok, i can get started on it right away","username":"jimthematrix","ts":"2017-02-07T15:21:06.140Z"}
{"msg":"Has joined the channel.","username":"elli-androulaki","ts":"2017-02-07T15:21:06.986Z","type":"uj"}
{"msg":"do we prefer using templates for the create channel step?","username":"jimthematrix","ts":"2017-02-07T15:22:06.767Z"}
{"msg":"check in with Jason as we are likely to have some changes to create channel","username":"mastersingh24","ts":"2017-02-07T15:22:17.432Z"}
{"msg":"or it doesn't matter?","username":"jimthematrix","ts":"2017-02-07T15:22:18.413Z"}
{"msg":"I think you want to \"hide\" as much as possible","username":"mastersingh24","ts":"2017-02-07T15:22:33.267Z"}
{"msg":"yes that's another reason we've been holding off this work","username":"jimthematrix","ts":"2017-02-07T15:22:34.059Z"}
{"msg":"the pending changes that Jason mentioned to us","username":"jimthematrix","ts":"2017-02-07T15:22:41.581Z"}
{"msg":"ok will double check with him to make sure that work is in","username":"jimthematrix","ts":"2017-02-07T15:22:53.955Z"}
{"msg":"Has joined the channel.","username":"simsc","ts":"2017-02-07T15:46:33.845Z","type":"uj"}
{"msg":"all, not sure if you saw @binhn's comment yesterday, but there is a new proposal for how the system deals with deploying chaincode that could use everyone's input","username":"cbf","ts":"2017-02-07T16:05:58.531Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aq3TZffhkjnGBMt5T","username":"cbf","ts":"2017-02-07T16:06:01.171Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aq3TZffhkjnGBMt5T","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aq3TZffhkjnGBMt5T","remote":true,"fileId":null,"fileName":null}]}
{"msg":"This proposal will have significant impact, so please review and comment in JIRA and/or here","username":"cbf","ts":"2017-02-07T16:06:38.842Z"}
{"msg":"@all ^^","username":"cbf","ts":"2017-02-07T16:06:59.943Z"}
{"msg":"Has joined the channel.","username":"rascal-3","ts":"2017-02-07T16:07:55.662Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kostas","ts":"2017-02-07T16:09:48.786Z","type":"uj"}
{"msg":"@cbf: Yes, will do.\n\n@vpaprots: \"Today they are standard PEM files which limits it to either SW BCCSP or key imports (not always possible).\"","username":"JonathanLevi","ts":"2017-02-07T16:14:35.496Z"}
{"msg":"I agree that fabric-ca should be the \"go-to\" place for such generations. Do we have a place where the requirements/limitations are listed out? Can I assist in any way?","username":"JonathanLevi","ts":"2017-02-07T16:15:25.635Z"}
{"msg":"I had created a whole slew of JIRA items a while back..","username":"vpaprots","ts":"2017-02-07T16:16:15.545Z"}
{"msg":"Mind you, I go around telling everybody how we always use very basic crypto constructs/primitives (don't know if you care to listen to my talks ;-)), but if this changes... then let's document and communicate accordingly.","username":"JonathanLevi","ts":"2017-02-07T16:16:27.912Z"}
{"msg":"Before we cut an alpha! ;-)","username":"JonathanLevi","ts":"2017-02-07T16:16:39.951Z"}
{"msg":"I'll PM you.","username":"JonathanLevi","ts":"2017-02-07T16:16:55.883Z"}
{"msg":"please migrate to https://chat.hyperledger.org","username":"rjones","ts":"2017-02-07T18:00:04.000Z"}
{"msg":"@greg.haskins are you GTG to merge all the chaintool CRs?","username":"cbf","ts":"2017-02-07T19:32:07.321Z"}
{"msg":"I can push the button if you like","username":"cbf","ts":"2017-02-07T19:32:14.280Z"}
{"msg":"@cbf - thank you, you just beat me to it.","username":"ecb","ts":"2017-02-07T20:09:17.667Z"}
{"msg":"Hi, for the crypto-squad Jira items under fabric-crypto, and Sprint 11 contain the list of pending items that correspond to @mastersingh24 's list.\nIn summary, our pending work items, blockers and estimated effort in PDs (= Person Days):\n 1) Channel ACL in endorser, orderer, and gossip logic [~ 2 x 3 PDs]. We are blocked by channel policy setup through genesis, and pending design on LCCC instantiation\n 2) Minimum level of replay protection [0.5 PD]\n 3) MSP-implementation completion (intermediate CAs, admin/OrganizationUnit) [1.5 PD]\n 4) Code todos that are not covered by the items listed before \n 5) Application libraries for ACL [ETA: end of month]\n 6) Research paper (ETA: end of month)\n 7) Security review of new designs in CC2CC, deployment model, and reconfiguration ","username":"elli-androulaki","ts":"2017-02-07T20:20:27.605Z"}
{"msg":"thanks elli ","username":"simsc","ts":"2017-02-07T20:32:13.951Z"}
{"msg":"Has joined the channel.","username":"beauson45","ts":"2017-02-07T20:58:21.955Z","type":"uj"}
{"msg":"for @mastersingh24 's list of six, the following are needed in SDK: FAB-687, FAB-1263","username":"jimthematrix","ts":"2017-02-07T21:17:35.896Z"}
{"msg":"Here is what I think remains for fabric-ca","username":"smithbk","ts":"2017-02-07T21:39:54.277Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-2012 Update fabric-ca CLI to use cobra & viper\nhttps://jira.hyperledger.org/browse/FAB-1477 BCCSP integration (ecert, tcert, auth header, etc)\nhttps://jira.hyperledger.org/browse/FAB-1463 TLS for LDAP client of fabric-ca-server\nhttps://jira.hyperledger.org/browse/FAB-2095 Document fabric-ca usage by fabric\n","username":"smithbk","ts":"2017-02-07T21:39:57.742Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=z55tEviaq32dd9Jcd)  &> #fabric-pr-review ","username":"yacovm","ts":"2017-02-07T21:44:47.513Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=z55tEviaq32dd9Jcd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=z55tEviaq32dd9Jcd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Minor change to the list above ... replacing the 2nd jira item with one with better description","username":"smithbk","ts":"2017-02-07T21:52:50.316Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-2012 Update fabric-ca CLI to use cobra & viper\nhttps://jira.hyperledger.org/browse/FAB-2110 Complete BCCSP integration for fabric-ca\nhttps://jira.hyperledger.org/browse/FAB-1463 TLS for LDAP client of fabric-ca-server\nhttps://jira.hyperledger.org/browse/FAB-2095 Document fabric-ca usage by fabric","username":"smithbk","ts":"2017-02-07T21:52:52.675Z"}
{"msg":"Hi, for gossip-squad to items correspond to https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd\n\nAre:\n\n1. [FAB - 1846] Connection between delivery client and leader election\n2. [FAB - 2007] Make gossip publish external endpoints to peers from other organizations\n3. [FAB - 1938] Make delivery client to track the availability of ordering service\n4. [FAB - 2016] Add organization ids into GossipMessage\n5. [FAB - 1845] Gossip message store timely expiraton\n6. [FAB - 1879] Connect gossip configuration to core.yaml file","username":"C0rWin","ts":"2017-02-07T22:40:24.838Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi, for gossip-squad to items correspond to @mastersingh24 list, are:\n\n1. [FAB - 1846] Connection between delivery client and leader election\n2. [FAB - 2007] Make gossip publish external endpoints to peers from other organizations\n3. [FAB - 1938] Make delivery client to track the availability of ordering service\n4. [FAB - 2016] Add organization ids into GossipMessage\n5. [FAB - 1845] Gossip message store timely expiraton\n6. [FAB - 1879] Connect gossip configuration to core.yaml file","username":"C0rWin","ts":"2017-02-07T22:40:24.838Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi, for gossip-squad to items correspond to @mastersingh24 list, are:\n\n1. [FAB - 1846] Connection between delivery client and leader election\n2. [FAB - 2007] Make gossip publish external endpoints to peers from other organizations\n3. [FAB - 1938] Make delivery client to track the availability of ordering service\n4. [FAB - 2061] Add organization ids into GossipMessage\n5. [FAB - 1845] Gossip message store timely expiraton\n6. [FAB - 1879] Connect gossip configuration to core.yaml file","username":"C0rWin","ts":"2017-02-07T22:40:24.838Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FNvpQM7DduH26sJhd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"sanchezl","ts":"2017-02-07T23:35:31.331Z","type":"uj"}
{"msg":"Maintainers: please +1 the creation of the fabric-docs repo that we discussed in SFO: https://jira.hyperledger.org/browse/FAB-2114 please vote for the issue in JIRA directly","username":"rjones","ts":"2017-02-07T23:39:25.668Z"}
{"msg":"Has joined the channel.","username":"patchpon","ts":"2017-02-08T01:16:07.798Z","type":"uj"}
{"msg":"Has joined the channel.","username":"peter","ts":"2017-02-08T05:49:45.815Z","type":"uj"}
{"msg":"@all @mastersingh24 @lehors and I were just discussing a few things and the subject of the alpha release came up (what a surprise!)","username":"cbf","ts":"2017-02-08T14:20:44.751Z"}
{"msg":"clearly there is a lot of interest on the part of people coming to the project to have v1.0 images that they can use and explore","username":"cbf","ts":"2017-02-08T14:21:20.839Z"}
{"msg":"yet, as we have discussed, we aren't really ready for alpha","username":"cbf","ts":"2017-02-08T14:21:39.459Z"}
{"msg":"one compromise we discussed, which I think the three of us agreed would be worth considering, was to take the images we created for the hackfest last week, and publish those to dockerhub/u/hyperledger as fabric-xxx:v1.0-preview images - update the docs accordingly so that they gettingstarted.md points to these images and promote it as ready for developer preview.","username":"cbf","ts":"2017-02-08T14:24:23.808Z"}
{"msg":"basically, we would not release these from a build (there's some additional bootstrap cruft that makes this intenable just yet)","username":"cbf","ts":"2017-02-08T14:24:53.603Z"}
{"msg":"I created a JIRA to track this... if you agree, please vote on the issue https://jira.hyperledger.org/browse/FAB-2123","username":"cbf","ts":"2017-02-08T14:28:41.875Z"}
{"msg":"Has joined the channel.","username":"chris.elder","ts":"2017-02-08T14:34:31.961Z","type":"uj"}
{"msg":"Currently, there are a lot of changes how we manage configuration and that will ripple through MSP, policy and other things.  Jason is hoping to be done by Friday.  So next week, we will have something running.  ","username":"weeds","ts":"2017-02-08T14:42:07.797Z"}
{"msg":"(Jason Yellick)","username":"weeds","ts":"2017-02-08T14:42:20.948Z"}
{"msg":"Crytpo team can not progress until Jason's piece is done- we need policy framework and the genesis block to be complete to do the access control","username":"weeds","ts":"2017-02-08T14:43:05.579Z"}
{"msg":"Jim Zhang said he can do the MSP initialization in paralell.","username":"weeds","ts":"2017-02-08T14:43:31.225Z"}
{"msg":"Jim Zhang-> We need to update the protobufs (Jason is planning for more change)... once we got MSP initialization done, we need to consider how configuration is loaded and what is vehicle for that along with configuration block... That finishes off Gari's scenario.  For remainder of release-- main piece are TCERT support.. managing TCERTs is complex... Another piece on SDK Verify responses, signature verification and policy verification on proposal response and need APIs for that. (this we have to have on verify)","username":"weeds","ts":"2017-02-08T14:50:06.597Z"}
{"msg":"Jim Zhang- rest api wrapper... it falls now with another team to Ian Mitchell, but seems like that may come back to Jim- we were trying to get primitive APIs into SDK.","username":"weeds","ts":"2017-02-08T14:51:58.810Z"}
{"msg":"@mastersingh24 I'd recommend adding a 7th item to your list.  Here's the key ledger work items remaining.","username":"dave.enyeart","ts":"2017-02-08T15:53:44.055Z"}
{"msg":"7)  Clients need an expanded set of ledger APIs to meet solution requirements. For example to perform queries as part of transactions, to perform rich queries against the ledger data, and to understand the history of keys for simple provenance scenarios.\n\nFAB-1667 - Finalize ledger APIs in Query System Chaincode (QSCC)\nFAB-2124 - Finalize ledger chaincode APIs\nFAB-1502 - Ledger history: I want a chaincode API to see the history of key values\nFAB-787 As a fabric deployer, I want a CouchDB docker image that can be deployed with a fabric network","username":"dave.enyeart","ts":"2017-02-08T15:54:31.751Z"}
{"msg":"@all maintainers, please vote on https://jira.hyperledger.org/browse/FAB-2114 and https://jira.hyperledger.org/browse/FAB-2123 or leave comments if you disagree so that we can move forward","username":"cbf","ts":"2017-02-08T16:46:08.155Z"}
{"msg":"@cbf I stayed quiet as I don't know submodules ... it seems to be a good way to organize but I sensed there were \"things to be cautious about \" in this approach and was hoping others with more knowledge would weigh in with pros (and cons/caution if any)","username":"muralisr","ts":"2017-02-08T16:49:28.059Z"}
{"msg":"^^ was for https://jira.hyperledger.org/browse/FAB-2114 ","username":"muralisr","ts":"2017-02-08T16:50:03.410Z"}
{"msg":"@cbf  I tried to comment twice on https://jira.hyperledger.org/browse/FAB-2123  but my comment doesn't show on JIRA from some reason.","username":"yacovm","ts":"2017-02-08T16:51:50.494Z"}
{"msg":"But I simply stated I think the script there can be fixed with https://gerrit.hyperledger.org/r/#/c/5691/ (after testing it, of course)","username":"yacovm","ts":"2017-02-08T16:52:38.387Z"}
{"msg":"@yacovm I see your comment...","username":"muralisr","ts":"2017-02-08T16:53:24.668Z"}
{"msg":"weird, I refreshed and nothing. Eventual consistency FTW I guess","username":"yacovm","ts":"2017-02-08T16:53:43.882Z"}
{"msg":"@muralisr submodules can be complex to manage, but as noted, opensaylight is using this approach with success so we have some sister projects using it and who have experience doing so","username":"cbf","ts":"2017-02-08T16:53:46.174Z"}
{"msg":"@yacovm lol","username":"cbf","ts":"2017-02-08T16:53:55.516Z"}
{"msg":"maybe had to reach concensus","username":"cbf","ts":"2017-02-08T16:54:05.846Z"}
{"msg":"maybe had to reach consensus","username":"cbf","ts":"2017-02-08T16:54:05.846Z"}
{"msg":"aha, now I see with private browsing (bypasses browser cache)","username":"yacovm","ts":"2017-02-08T16:54:22.938Z"}
{"msg":"aha, now I see with private browsing (bypasses browser cache) --- Update: re-logged into JIRA and now I see.","username":"yacovm","ts":"2017-02-08T16:54:22.938Z"}
{"msg":"@cbf good enough for me.. seems a step in the right direction (and better than status quo in any case)","username":"muralisr","ts":"2017-02-08T16:55:36.693Z"}
{"msg":"(thanks for that , btw, it helped!)","username":"muralisr","ts":"2017-02-08T16:56:13.821Z"}
{"msg":"@cbf on the submodules, would a code change that requires doc change end up with 2 separate CR's?  1 on the repo and another for fabric-docs repo ","username":"binhn","ts":"2017-02-08T18:10:22.170Z"}
{"msg":"no, a git submodule is akin to a symlink but versioned","username":"cbf","ts":"2017-02-08T18:40:57.034Z"}
{"msg":"so if you have repo A as a submodule of repo B and make a change in repo A, when you bump the commit level of the submodule for A it picks up the latest changes reflected at that commit level","username":"cbf","ts":"2017-02-08T18:41:54.327Z"}
{"msg":"Has joined the channel.","username":"troyronda","ts":"2017-02-08T18:44:31.035Z","type":"uj"}
{"msg":"I think binh is correct though","username":"greg.haskins","ts":"2017-02-08T19:00:19.865Z"}
{"msg":"well, at least w.r.t. the doc becoming visible via the fabric-doc repo","username":"greg.haskins","ts":"2017-02-08T19:00:47.183Z"}
{"msg":"There would be a CR to the official repo, and then a sep CR to fabric-doc to make the change visible","username":"greg.haskins","ts":"2017-02-08T19:01:16.233Z"}
{"msg":"Just to reiterate, submodules have still left me with a bad taste in my mouth, proceed with caution","username":"greg.haskins","ts":"2017-02-08T19:02:25.650Z"}
{"msg":"very very fragile experience, especially for anyone not a git expert","username":"greg.haskins","ts":"2017-02-08T19:03:19.317Z"}
{"msg":"conceptually its a great idea, and I understand why its desired...just submodules themselves might be a fragile way to do it","username":"greg.haskins","ts":"2017-02-08T19:04:30.437Z"}
{"msg":"we might be better served with something more direct, like a script where the pointers may be changed","username":"greg.haskins","ts":"2017-02-08T19:05:29.241Z"}
{"msg":"Has joined the channel.","username":"kelly_","ts":"2017-02-08T19:21:37.427Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=qX5zLTRJcsiMDFTdZ) I need 3 more votes: @greg.haskins @JonathanLevi @hgabre @binhn @jimthematrix @jyellick @sheehan @TamasBlummer ","username":"rjones","ts":"2017-02-08T20:20:19.750Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qX5zLTRJcsiMDFTdZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qX5zLTRJcsiMDFTdZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=qX5zLTRJcsiMDFTdZ) I need 4 more votes: @greg.haskins @JonathanLevi @hgabre @binhn @jimthematrix @jyellick @sheehan @TamasBlummer ","username":"rjones","ts":"2017-02-08T20:20:19.750Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qX5zLTRJcsiMDFTdZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qX5zLTRJcsiMDFTdZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"TamasBlummer","ts":"2017-02-08T20:20:19.807Z","type":"uj"}
{"msg":"@rjones @cbf I would vote yes for a consolidated repo for docs, but on the use of submodules, i haven't used it myself but it sounds like those who have (Greg, Binh) are expressing concerns. @dshuffma @daveryIBM are using submodules in the updated marbles repo, would like them to weigh in on their experience...","username":"jimthematrix","ts":"2017-02-08T20:37:09.503Z"}
{"msg":"@rjones @cbf I would vote yet for a consolidated repo for docs, but on the use of submodules, i haven't used it myself but it sounds like those who have (Greg, Binh) are expressing concerns. @dshuffma @daveryIBM are using submodules in the updated marbles repo, would like them to weigh in on their experience...","username":"jimthematrix","ts":"2017-02-08T20:37:09.503Z"}
{"msg":"Has joined the channel.","username":"daveryIBM","ts":"2017-02-08T20:37:09.634Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dshuffma","ts":"2017-02-08T20:37:09.656Z","type":"uj"}
{"msg":"@jimthematrix what other options are there? It is important to keep the code and docs consistent","username":"cbf","ts":"2017-02-08T20:37:55.676Z"}
{"msg":"I DO NOT want to be juggling docs with varying versions of the various sub-components","username":"cbf","ts":"2017-02-08T20:38:23.927Z"}
{"msg":"that will be rather messy","username":"cbf","ts":"2017-02-08T20:38:32.140Z"}
{"msg":"so for the parts of the doc that need to be hand-written, the main thing is for the maintainer of the docs to be diligent and keep the content up to date, which is a manual process anyway. for the generated part of the doc, like the html derived from javadoc/jsdoc, we can have CI jobs that publishes to the fabric-docs. did I miss anything?","username":"jimthematrix","ts":"2017-02-08T20:41:54.449Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=BKjExp8gc46vcdoQG) @cbf I assume you were asking w.r.t. submodules?","username":"greg.haskins","ts":"2017-02-08T20:51:30.629Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=BKjExp8gc46vcdoQG","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=BKjExp8gc46vcdoQG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"yes","username":"cbf","ts":"2017-02-08T20:51:45.324Z"}
{"msg":"basically, I think we want the docs to be bound to the code from a versioning perspective","username":"cbf","ts":"2017-02-08T20:52:21.315Z"}
{"msg":"so the content stays in the repos where it is now","username":"cbf","ts":"2017-02-08T20:52:37.209Z"}
{"msg":"one thing I can think of is something as simple as a script that references versioned URLs like https://github.com/hyperledger/fabric/tree/f7c19f88e824cbaea3c55bc218b3bbed37cc29ad/docs","username":"greg.haskins","ts":"2017-02-08T20:52:38.762Z"}
{"msg":"and slurp in?","username":"cbf","ts":"2017-02-08T20:52:51.867Z"}
{"msg":"its effectively just as coupled as submodules, but without the git-odditites","username":"greg.haskins","ts":"2017-02-08T20:52:59.240Z"}
{"msg":"that's effectively what submodules to but clumsier, no?","username":"cbf","ts":"2017-02-08T20:53:08.146Z"}
{"msg":"yeah, something like that","username":"greg.haskins","ts":"2017-02-08T20:53:08.619Z"}
{"msg":"wget","username":"greg.haskins","ts":"2017-02-08T20:53:09.675Z"}
{"msg":"its effectively the same thing, yes, but there is some operational challenges with submodules that wouldnt exist","username":"greg.haskins","ts":"2017-02-08T20:53:34.957Z"}
{"msg":"its less elegant, but also less complicated/fragile","username":"greg.haskins","ts":"2017-02-08T20:53:51.479Z"}
{"msg":"what ends up happening in practice (IMO) is the submodule metadata gets messed up by users","username":"greg.haskins","ts":"2017-02-08T20:54:15.478Z"}
{"msg":"that wouldnt be the case in a simple script, nor would it require extra care/knowledge to use","username":"greg.haskins","ts":"2017-02-08T20:54:39.728Z"}
{"msg":"what I found is that invariably users will do things like move the git refspec but not refresh the submodules: calamity","username":"greg.haskins","ts":"2017-02-08T20:55:29.888Z"}
{"msg":"or accidentally modify the submodule: calamity","username":"greg.haskins","ts":"2017-02-08T20:55:43.088Z"}
{"msg":"or any number of other things: calamity","username":"greg.haskins","ts":"2017-02-08T20:55:52.106Z"}
{"msg":"heh","username":"greg.haskins","ts":"2017-02-08T20:55:52.743Z"}
{"msg":"to be clear, this is just my advice","username":"greg.haskins","ts":"2017-02-08T20:57:25.975Z"}
{"msg":"if you want to try to manage it this way, go for it","username":"greg.haskins","ts":"2017-02-08T20:57:34.358Z"}
{"msg":"well, my take is a) we have a fairly simple setup b) I would not expect us to be changing things except the refspec periodically, tied with a release","username":"cbf","ts":"2017-02-08T21:08:04.599Z"}
{"msg":"and 3) we have multiple eyes on things with 2+2 so I would hope we would catch any calamitous errors","username":"cbf","ts":"2017-02-08T21:08:54.931Z"}
{"msg":"yeah, the review process should highlight very clearly when the submodule meta data is changing","username":"greg.haskins","ts":"2017-02-08T21:13:53.680Z"}
{"msg":"by that, i mean, it will","username":"greg.haskins","ts":"2017-02-08T21:14:05.143Z"}
{"msg":"(ive worked on other projects where it had committers without a UI approval process, so sometimes you ahve to go untangle an inadvertent change to submodules after the fact","username":"greg.haskins","ts":"2017-02-08T21:14:50.517Z"}
{"msg":"i would think we would catch that early in this setup","username":"greg.haskins","ts":"2017-02-08T21:15:10.557Z"}
{"msg":"@mastersingh24 https://gerrit.hyperledger.org/r/#/c/5749/","username":"greg.haskins","ts":"2017-02-08T21:23:27.693Z"}
{"msg":"still WIP as I need to add a few tests, but wanted to give an early preview","username":"greg.haskins","ts":"2017-02-08T21:23:46.564Z"}
{"msg":"@muralisr ^^^","username":"greg.haskins","ts":"2017-02-08T21:24:53.911Z"}
{"msg":"very cool @greg.haskins ... will look closer tonight (CI is running anyway)","username":"muralisr","ts":"2017-02-08T21:34:08.024Z"}
{"msg":"one half-baked thought which can be freely ignored :-)","username":"muralisr","ts":"2017-02-08T21:34:48.895Z"}
{"msg":"`From string    ` in BuildSpec seems to suggest generalization to other types of substiutions and perhaps calls for `map[dockercmd]func(<appropriate context args such as the stream>) error` ?","username":"muralisr","ts":"2017-02-08T21:36:40.894Z"}
{"msg":"certainly could be a future thought if interesting","username":"muralisr","ts":"2017-02-08T21:37:07.772Z"}
{"msg":"@muralisr actually I think we need to refactor the relationship between controller and platform","username":"greg.haskins","ts":"2017-02-08T22:04:39.277Z"}
{"msg":"right now, theres a few layering violations in the sense that the controller accepts the notion of an io.Reader (and later, BuildSpecFactor->BuildSpec","username":"greg.haskins","ts":"2017-02-08T22:05:23.492Z"}
{"msg":"what I think we should probably do is have the container details encapsulated in the VM interface","username":"greg.haskins","ts":"2017-02-08T22:05:58.967Z"}
{"msg":"e.g. have platform return a VM instance, which can have the details such as From, io.Reader, args, buried in it","username":"greg.haskins","ts":"2017-02-08T22:06:42.986Z"}
{"msg":"but that is a bigger change, didnt want to tackle now","username":"greg.haskins","ts":"2017-02-08T22:06:53.377Z"}
{"msg":"for now, just perpetuating the layering violation, as it was already there to begin with in some form","username":"greg.haskins","ts":"2017-02-08T22:07:19.418Z"}
{"msg":"on the front of docker args, I think we need two fundamental changes:","username":"greg.haskins","ts":"2017-02-08T22:07:41.266Z"}
{"msg":"1) the platform should be in charge of them","username":"greg.haskins","ts":"2017-02-08T22:07:53.313Z"}
{"msg":"2) we could/should look to unifying the args as some kind of ENTRYPOINT standard","username":"greg.haskins","ts":"2017-02-08T22:08:18.939Z"}
{"msg":"e.g. all docker containers are started in the same way (regardless of clang)","username":"greg.haskins","ts":"2017-02-08T22:08:47.106Z"}
{"msg":"this will become more important when chaintool is supporting more than just golang","username":"greg.haskins","ts":"2017-02-08T22:09:11.118Z"}
{"msg":"(but I think it also cleans things up)","username":"greg.haskins","ts":"2017-02-08T22:09:22.711Z"}
{"msg":"@greg.haskins  - what about options for logging?  for example, what if people don't want to use syslog for the Docker daemon but want to configure it for the chaincode containers?   Or by platform you still mean we can drive some parameters from the YAML config?","username":"mastersingh24","ts":"2017-02-08T22:10:03.205Z"}
{"msg":"that seems logical to me","username":"greg.haskins","ts":"2017-02-08T22:10:18.437Z"}
{"msg":"by platform, i was referring to the platform abstraction in the code","username":"greg.haskins","ts":"2017-02-08T22:10:48.523Z"}
{"msg":"https://github.com/hyperledger/fabric/blob/master/core/chaincode/platforms/platforms.go","username":"greg.haskins","ts":"2017-02-08T22:11:19.384Z"}
{"msg":"I see no problem with the notion that we can make the exposed logging routable","username":"greg.haskins","ts":"2017-02-08T22:11:59.707Z"}
{"msg":"and then let the platform driver decide how to do that","username":"greg.haskins","ts":"2017-02-08T22:12:09.685Z"}
{"msg":"for instance, \"SYSLOG\" might cause the docker driver to enable the dockerd routing to syslog","username":"greg.haskins","ts":"2017-02-08T22:12:37.544Z"}
{"msg":"cool - figured as much","username":"mastersingh24","ts":"2017-02-08T22:12:59.292Z"}
{"msg":"whereas perhaps the inproccontainer would need some golang mechanism","username":"greg.haskins","ts":"2017-02-08T22:13:07.767Z"}
{"msg":"I'd actually like to see if someday we can try backends other than Docker for running chaincode - for example going directly to runc instead (which conveniently supports Docker archives)","username":"mastersingh24","ts":"2017-02-08T22:13:40.157Z"}
{"msg":"sounds good to me","username":"greg.haskins","ts":"2017-02-08T22:14:04.477Z"}
{"msg":"and you know I have a dream about using unikernels (for no other reason than it seems cool  ;) )","username":"mastersingh24","ts":"2017-02-08T22:15:23.557Z"}
{"msg":"Could we get the maintainers to vote on the below?\n\nhttps://jira.hyperledger.org/browse/FAB-2026 \n\nhttps://gerrit.hyperledger.org/r/#/c/5507/\nhttps://gerrit.hyperledger.org/r/#/c/5509/\nhttps://gerrit.hyperledger.org/r/#/c/5521/\n\nPer @binhn he does not like switching to the official proto style guide.  I find this understandable, as it does make reading the golang code slightly less nice, especially with respect to abbreviations like \"ID\".\n\nThat being said, we are all over the place with our proto conventions.  In some places we are using UpperCamelCase for fields, in some places lower_underscore_separated, and in some places lowerCamelCase.\n\nBeing on the fence about what's best, my default is \"Go with the official style guide\", but regardless of what we choose, I'd say we should pick a style, and enforce it.  I'm happy to rebase and fix up the above CRs, but don't want to do it, until we have a consensus.","username":"jyellick","ts":"2017-02-08T22:45:45.005Z"}
{"msg":"Did we already merge some of the changes?","username":"yacovm","ts":"2017-02-08T22:49:55.580Z"}
{"msg":"Did we already merge some of the changes? @jyellick ","username":"yacovm","ts":"2017-02-08T22:49:55.580Z"}
{"msg":"And- how much work is left to be done?","username":"yacovm","ts":"2017-02-08T22:50:10.053Z"}
{"msg":"I think this also needs to be considered","username":"yacovm","ts":"2017-02-08T22:50:16.990Z"}
{"msg":"I do not believe any of the proto style changes have been merged","username":"jyellick","ts":"2017-02-08T22:51:42.220Z"}
{"msg":"@jyellick I agreed that we need to be consistent in proto, whichever style we pick","username":"binhn","ts":"2017-02-08T22:52:37.458Z"}
{"msg":"we just need to be diligent and make sure that since there's no tool to help scan the code","username":"binhn","ts":"2017-02-08T22:53:18.207Z"}
{"msg":"I personally don't like the proto style because it recommends 1 style and it generates another","username":"binhn","ts":"2017-02-08T22:54:12.752Z"}
{"msg":"but I am ok with being consistent, so if you already changed them all, let's go with that rather than undo","username":"binhn","ts":"2017-02-08T22:55:17.562Z"}
{"msg":"Of course the generation is language dependent, perhaps we could have some of our other proto consumers (python? javascript? java?) @jeffgarratt @jimthematrix @rickr weigh in on how the proto files affect their code?","username":"jyellick","ts":"2017-02-08T22:55:32.783Z"}
{"msg":"Has joined the channel.","username":"jeffgarratt","ts":"2017-02-08T22:55:32.820Z","type":"uj"}
{"msg":"Renaming them is mindless work, I am happy to switch to another convention which is more go friendly, say lowerCamelCase (This would be more minimally invasive than the lower_undescore changes, at least from a golang perspective).  Perhaps some other opinions? @cbf @mastersingh24 @greg.haskins ?","username":"jyellick","ts":"2017-02-08T22:57:24.793Z"}
{"msg":"@jyellick I think primary criteria for v1.0.x is ABI compatibility.  For that, we are primarily gated on two things: type and index","username":"greg.haskins","ts":"2017-02-08T22:58:22.540Z"}
{"msg":"field names generally only impact local consumption..and while fire drills are annoying, they arent critical to gate a release per se","username":"greg.haskins","ts":"2017-02-08T22:59:01.964Z"}
{"msg":"that said, I also appreciate the notion of cleaning things up before a release","username":"greg.haskins","ts":"2017-02-08T22:59:15.963Z"}
{"msg":"so, I am supportive of cleaning things up if that is what needs to be done, but I dont see it as necessary to nail down unless ABI borkage is on the table","username":"greg.haskins","ts":"2017-02-08T22:59:45.867Z"}
{"msg":"it looks like your changes with _ doesn't cause golang code changes, but if we change txID to tx_id would require a lot of changes.  I too would like comment from other languages ","username":"binhn","ts":"2017-02-08T22:59:59.355Z"}
{"msg":"hmm, rocketchat throws away me `_` ","username":"binhn","ts":"2017-02-08T23:00:49.596Z"}
{"msg":"Yes, I split the CRs into three, the first which requires no golang changes (simply changes all the non ID fields to be lower_underscore), the second fixes up the enum style to be UPPER_CASE, and the final actually tweaks the `ID` related things (this is the most annoyingly invasive).","username":"jyellick","ts":"2017-02-08T23:01:49.126Z"}
{"msg":"Yes, I split the CRs into three, the first which requires no golang changes (simply changes all the non `ID` fields to be lower_underscore), the second fixes up the enum style to be UPPER_CASE, and the final actually tweaks the `ID` related things (this is the most annoyingly invasive).","username":"jyellick","ts":"2017-02-08T23:01:49.126Z"}
{"msg":"The CRs are split into three, the first which requires no golang changes (simply changes all the non `ID` fields to be lower_underscore), the second fixes up the enum style to be UPPER_CASE, and the final actually tweaks the `ID` related things (this is the most annoyingly invasive).\n\nEssentially, for field names, the protoc for golang turns `multi_word_name` into `MultiWordName`.  It does the same thing to `multiWordName` or `MultiWordName`.  So, in general, switching style in the proto does not affect the output golang code.  However, for fields with abbreviations, like `chaincode_id` it is turned into `ChaincodeId`.  While proto field `chaincodeID` and `ChaincodeID` are both translated to `ChaincodeID`","username":"jyellick","ts":"2017-02-08T23:01:49.126Z"}
{"msg":"The CRs are split into three, the first which requires no golang changes (simply changes all the non `ID` fields to be lower_underscore), the second fixes up the enum style to be UPPER_CASE, and the final actually tweaks the `ID` related things (this is the most annoyingly invasive).\n\nEssentially, for field names, the protoc for golang turns `multi_word_name` into `MultiWordName`.  It does the same thing to `multiWordName` or `MultiWordName`.  So, in general, switching style in the proto does not affect the generated golang code.  However, for fields with abbreviations, like `chaincode_id` it is turned into `ChaincodeId`.  While proto field `chaincodeID` and `ChaincodeID` are both translated to `ChaincodeID`","username":"jyellick","ts":"2017-02-08T23:01:49.126Z"}
{"msg":"The CRs are split into three, the first which requires no golang changes (simply changes all the non `ID` fields to be lower_underscore), the second fixes up the enum style to be UPPER_CASE, and the final actually tweaks the `ID` related things (this is the most annoyingly invasive).\n\nEssentially, for field names, the protoc for golang turns `multi_word_name` into `MultiWordName`.  \n\nSo, the field names `multi_word_name`, `multiWordName` and `MultiWordName` are all translated to the golang struct member `MultiWordName`.  So for the vast majority of the fields, the style has no impact on the generated golang code.\n\nHowever, the field name `chaincode_id` translates to the golang struct member `ChaincodeId`, while the field names `chaincodeID` and `ChaincodeID` translate to the golang struct member `ChaincodeID`.  So, for any fields containing abbreviations, the output is different.","username":"jyellick","ts":"2017-02-08T23:01:49.126Z"}
{"msg":"The only way I could assess I think is bring it but I think were behind to far now that no matter what it's a chore .. this will just add to it.","username":"rickr","ts":"2017-02-08T23:17:59.514Z"}
{"msg":"@rickr Assuming we standardize the proto naming, does one format fit more naturally for java than another?","username":"jyellick","ts":"2017-02-08T23:30:57.778Z"}
{"msg":"@jyellick thinking about this some more, I would also say that striving to achieve parity with proto styling guide is good as opposed to chasing a particular nuance of a translation into a language...which is what I think you are saying too","username":"greg.haskins","ts":"2017-02-08T23:36:28.374Z"}
{"msg":"if we strive to get the .protos as close to the style guide as possible, then we can let the protoc module do its job of making the most natural translation to the target language","username":"greg.haskins","ts":"2017-02-08T23:37:02.143Z"}
{"msg":"this would be the most conducive to sharing the .proto spec","username":"greg.haskins","ts":"2017-02-08T23:37:43.727Z"}
{"msg":"if, on the other hand, we optimize the output for one particular language in spite of the style guide, that is more conducive to a per-project .proto","username":"greg.haskins","ts":"2017-02-08T23:38:33.594Z"}
{"msg":"I think you are advocating the former, which makes sense to me","username":"greg.haskins","ts":"2017-02-08T23:38:47.904Z"}
{"msg":"Exactly @greg.haskins.  Following proto style should make it most likely that the protos translate nicely to all languages.  However, we do the vast majority of our fabric work in golang, and acronymns do not translate well to golang from proto style.  So, it's a tradeoff.  My inclination is to lean towards interoperability over convenience, but I see both sides.","username":"jyellick","ts":"2017-02-08T23:42:30.167Z"}
{"msg":"Exactly @greg.haskins .  Following proto style should make it most likely that the protos translate nicely to all languages.  However, we do the vast majority of our fabric work in golang, and acronymns do not translate well to golang from proto style.  So, it's a tradeoff.  My inclination is to lean towards interoperability over convenience, but I see both sides.","username":"jyellick","ts":"2017-02-08T23:42:30.167Z"}
{"msg":"yeah...i still think its not critical to nail that before the alpha cut per se, its an internal refactoring in essence  ","username":"greg.haskins","ts":"2017-02-08T23:45:44.579Z"}
{"msg":"but its also not a big deal to find/replace things too","username":"greg.haskins","ts":"2017-02-08T23:45:55.519Z"}
{"msg":"so I would support either way","username":"greg.haskins","ts":"2017-02-08T23:45:59.785Z"}
{"msg":"Although I agree ABI is most important, but, the sooner we settle the API, the smaller that pile of code to search and replace through will be.","username":"jyellick","ts":"2017-02-08T23:47:17.249Z"}
{"msg":"I agree ABI is most important, but, the sooner we settle the API, the smaller that pile of code to search and replace through will be.","username":"jyellick","ts":"2017-02-08T23:47:17.249Z"}
{"msg":"i agree proliferation is the biggest concern in this regard","username":"greg.haskins","ts":"2017-02-08T23:50:58.787Z"}
{"msg":"but I do see your point regarding API...for instance if \"request.foo\" is exposed to a client of the API, changing it to \"request.Foo\" can be done without breaking wire compat, but it still sucks to do that to our users","username":"greg.haskins","ts":"2017-02-08T23:52:19.558Z"}
{"msg":"Speaking of which... do we have a rough estimate/ballpark date/kind-of-a-baseline as to when we might be able to assume that we can have a soft form of a super mild API/ABI freeze for an alpha cut?","username":"JonathanLevi","ts":"2017-02-09T00:59:33.031Z"}
{"msg":"And apologies in advance if the above question was too direct. I don't need anything that is carved in stone - just trying to see if we can all agree on some very rough timeline (as a conversation/thread starter.)","username":"JonathanLevi","ts":"2017-02-09T01:01:17.421Z"}
{"msg":"Do most of us feel like we are a week or two away from it?","username":"JonathanLevi","ts":"2017-02-09T01:01:43.433Z"}
{"msg":"It sux big time to ask clients/implementers and others to break their workflow, even more so when it is more than changing 'foo' to 'Foo'... let alone test everything/everywhere.","username":"JonathanLevi","ts":"2017-02-09T01:03:27.410Z"}
{"msg":"Has joined the channel.","username":"sachikoy","ts":"2017-02-09T06:39:14.093Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Clayton Sims","ts":"2017-02-09T14:57:30.990Z","type":"uj"}
{"msg":"i agree, I have certainly been feeling this pain personally","username":"greg.haskins","ts":"2017-02-09T17:04:11.070Z"}
{"msg":"as many of us have, I am sure","username":"greg.haskins","ts":"2017-02-09T17:04:15.962Z"}
{"msg":"I believe that the sooner we lock APIs (which continuing to develop) it will also help us assessing where we actually stand.","username":"JonathanLevi","ts":"2017-02-09T17:14:35.841Z"}
{"msg":"I believe that the sooner we lock APIs (which continuing to develop) the better - also because it help us assessing where we actually stand.","username":"JonathanLevi","ts":"2017-02-09T17:14:35.841Z"}
{"msg":"[ Moving this over here.  Look - I honestly don't care whether we \"officially\" publish the hackfest images or not.   There was chatter that we needed to get something out for fabric users to work with ASAP - aka \"preview\".   While we can say there's been progress on master, from a usability / config perspective, it has not improved since we put out the unofficial sfhackfest images so my assertion was that there is no point wasting time on trying to cut a release from the current master until we get the \"proper\" end to end flow working else we are just implementing and documenting hacks.](https://chat.hyperledger.org/channel/fabric-ci?msg=hhAYKt5TN3zhqANhb) @greg.haskins ","username":"mastersingh24","ts":"2017-02-09T17:20:26.236Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-ci?msg=hhAYKt5TN3zhqANhb","url":"https://chat.hyperledger.org/channel/fabric-ci?msg=hhAYKt5TN3zhqANhb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@rjones: unless anyone else objects, pls reconfigure fabric-chaintool back to NACR","username":"greg.haskins","ts":"2017-02-09T18:58:02.704Z"}
{"msg":"any objections? going once...","username":"rjones","ts":"2017-02-09T21:05:07.566Z"}
{"msg":"any objections? hearing none I now pronounce you NACR enabled","username":"rjones","ts":"2017-02-09T21:05:07.566Z"}
{"msg":"ty","username":"greg.haskins","ts":"2017-02-09T21:13:07.892Z"}
{"msg":"np","username":"rjones","ts":"2017-02-09T21:13:43.804Z"}
{"msg":"I just saw this was merged? https://gerrit.hyperledger.org/r/#/c/5555/","username":"greg.haskins","ts":"2017-02-10T03:57:56.364Z"}
{"msg":"im not sure this was ready to go in","username":"greg.haskins","ts":"2017-02-10T03:58:21.131Z"}
{"msg":"@muralisr @binhn @mastersingh24 ","username":"greg.haskins","ts":"2017-02-10T03:58:45.099Z"}
{"msg":"the only deployment model is predicated on the assumption that we have CLI access on the same node as the peer","username":"greg.haskins","ts":"2017-02-10T03:59:19.286Z"}
{"msg":"this feels like a huge step backwards: i understand the reasons for not wanting it on ledger, but I think a network deployment model should still be included","username":"greg.haskins","ts":"2017-02-10T04:00:17.088Z"}
{"msg":"could just be p2p","username":"greg.haskins","ts":"2017-02-10T04:00:23.865Z"}
{"msg":"this will not play well with containerized peers","username":"greg.haskins","ts":"2017-02-10T04:00:49.836Z"}
{"msg":"right, no remote deploy yet, but we want to get that in for sdk to build api while working the rest, including remote deploy cli and security","username":"binhn","ts":"2017-02-10T04:01:11.673Z"}
{"msg":"that seems like a core function though","username":"greg.haskins","ts":"2017-02-10T04:03:51.870Z"}
{"msg":"it negates a ton of work I had in progress","username":"greg.haskins","ts":"2017-02-10T04:04:24.114Z"}
{"msg":"this is just catching me by surprise","username":"greg.haskins","ts":"2017-02-10T04:04:49.336Z"}
{"msg":"as an example: if I deploy a v1.0 network as a docker swarm or kubernetes, how would I then deploy chaincode?","username":"greg.haskins","ts":"2017-02-10T04:06:07.733Z"}
{"msg":"i can awkwardly exec a shell into each node for the requisite cli access, but I dont have the ability to move files in or out","username":"greg.haskins","ts":"2017-02-10T04:06:50.366Z"}
{"msg":"the only thing running in the container is the peer-node process, no sshd","username":"greg.haskins","ts":"2017-02-10T04:07:07.865Z"}
{"msg":"I think this should have minimally included the RPC to accept the modern equivalent of a ChaincodeDeploymentSpec (at least the CodePackage sans the init payload), even if the SDK wasnt supporting it","username":"greg.haskins","ts":"2017-02-10T04:09:20.207Z"}
{"msg":"at this point, theres very little difference between system chaincode and user chaincode...they all have to be baked in ahead of time","username":"greg.haskins","ts":"2017-02-10T04:11:53.372Z"}
{"msg":"long story short, I'm somewhat dead in the water until this is fixed.  Everything we do is in containers","username":"greg.haskins","ts":"2017-02-10T04:19:55.423Z"}
{"msg":"understood;  it'll be like a deploy now but only copying the code to a directory and will be there by tomorrow","username":"binhn","ts":"2017-02-10T04:52:11.238Z"}
{"msg":"Hi @greg.haskins `I think this should have minimally included the RPC to accept the modern equivalent of a ChaincodeDeploymentSpec (at least the CodePackage sans the init payload), even if the SDK wasnt supporting it`","username":"muralisr","ts":"2017-02-10T08:59:49.553Z"}
{"msg":"yes","username":"muralisr","ts":"2017-02-10T08:59:51.535Z"}
{"msg":"once I get the playbacks out, that'll be the focus. Hopefully not later than monday (mechanics same as the old \"deploy\" so should be straightforward)","username":"muralisr","ts":"2017-02-10T09:00:59.234Z"}
{"msg":"I don't know why the API could have had just a simple change.  If the init proposal and NO chaincode   (maybe with a boollean option that signified that) the it was assumed to be on the file system and loaded from there.  If the chaincode was present it would be installed on the files system and initialized at the same time (one api). Seems like we could have had the best of both worlds allowing the user to decide what was right for them.","username":"rickr","ts":"2017-02-10T13:58:34.676Z"}
{"msg":"I don't know why the API could have had just a simple change.  If the init proposal had NO chaincode   (maybe with a boolean option that signified that) the it was assumed to be on the file system and loaded from there.  If the chaincode was present it would be installed on the files system and initialized at the same time (one api). Seems like we could have had the best of both worlds allowing the user to decide what was right for them.","username":"rickr","ts":"2017-02-10T13:58:34.676Z"}
{"msg":"@rickr the problem is that the instantiation will contain the chaincode which become part of the transaction (one of the things the new model tries to avoid... btw, @binhn pointed that out)","username":"muralisr","ts":"2017-02-10T16:14:33.985Z"}
{"msg":"@rickr the problem is that the instantiation will contain the chaincode which become part of the transaction (one of the things the new model tries to avoid... btw, @binhn pointed that out on a tangential discussion)","username":"muralisr","ts":"2017-02-10T16:14:33.985Z"}
{"msg":"The more I think about this, the more I think we need to revert it and regroup","username":"greg.haskins","ts":"2017-02-10T18:17:55.648Z"}
{"msg":"One question I have is: Is there ever a situation where we do not want all member of a channel to have the code?","username":"greg.haskins","ts":"2017-02-10T18:18:37.283Z"}
{"msg":"One question I have is: Is there ever a situation where we do not want all members of a channel to have the code?","username":"greg.haskins","ts":"2017-02-10T18:18:37.283Z"}
{"msg":"I understand there can be some inefficiencies in the current design if the same chaincode is needed in multiple channels...lets just assume that is a solvable problem for a second (because I think it is)","username":"greg.haskins","ts":"2017-02-10T18:19:41.053Z"}
{"msg":"in terms of channel function, when is it valid for channel members to have only a subset of addressable chaincodes in them?","username":"greg.haskins","ts":"2017-02-10T18:20:43.875Z"}
{"msg":"I am seeing lots of holes in the new model and no good solution in sight","username":"greg.haskins","ts":"2017-02-10T18:21:20.316Z"}
{"msg":"this seems too rushed this late in the game","username":"greg.haskins","ts":"2017-02-10T18:21:27.148Z"}
{"msg":"(apologies to @muralisr )","username":"greg.haskins","ts":"2017-02-10T18:27:24.258Z"}
{"msg":"I should also state that I do not see the chaincode on the ledger as an overarching problem","username":"greg.haskins","ts":"2017-02-10T18:28:28.156Z"}
{"msg":"at least when its managed well","username":"greg.haskins","ts":"2017-02-10T18:28:40.652Z"}
{"msg":"chaintool packages example02 into 2.3k.....this is smaller than most normal transactions in lots of the apps I have written","username":"greg.haskins","ts":"2017-02-10T18:29:06.938Z"}
{"msg":"the benefit of having it be transactional at the channel scope is fairly high though","username":"greg.haskins","ts":"2017-02-10T18:29:32.320Z"}
{"msg":"i fear we traded mild optimization for gross deficiency","username":"greg.haskins","ts":"2017-02-10T18:29:52.463Z"}
{"msg":"this isnt to say we need chaintool for managing the deployment payload size, but that is just an example of what it looks like when its well controller","username":"greg.haskins","ts":"2017-02-10T18:30:54.505Z"}
{"msg":"this isnt to say we need chaintool for managing the deployment payload size, but that is just an example of what it looks like when its well controlled","username":"greg.haskins","ts":"2017-02-10T18:30:54.505Z"}
{"msg":"@greg.haskins appreciate your comments here but I wish that happened earlier -- we do envision use-cases as mentioned in fab-1783 for this change in direction","username":"binhn","ts":"2017-02-10T20:36:39.222Z"}
{"msg":"it is not just optimization for chaincode deployment, but certainly part of the motivation.  It is more so on how to manage chaincodes on multichannel (1000s of channels)","username":"binhn","ts":"2017-02-10T20:38:47.791Z"}
{"msg":"thats fair, but I do my best tracking multiple facets of things including both FOSS an internal...I had been following the JIRA at a high level but it seems like it went from \"JIRA WIP\" to \"Merged CR\" without broader agreement","username":"greg.haskins","ts":"2017-02-10T20:40:47.392Z"}
{"msg":"thats fair, but I do my best tracking multiple facets of things including both FOSS and internal...I had been following the JIRA at a high level but it seems like it went from \"JIRA WIP\" to \"Merged CR\" without broader agreement","username":"greg.haskins","ts":"2017-02-10T20:40:47.392Z"}
{"msg":"the difference isn't that much between \"instantiate\" and \"deploy\" tx, where deploy contains the code, and instantiate contains the hash(code+) with the assumption that the code has been \"installed\" on the endorsers","username":"binhn","ts":"2017-02-10T20:40:49.528Z"}
{"msg":"and I understand the concern about multi-channel, but it seems that the solution isnt fully baked","username":"greg.haskins","ts":"2017-02-10T20:41:30.484Z"}
{"msg":"what is the deployment model now?  what is the security model? how do we address the notion that not all peers within a channel may have the code","username":"greg.haskins","ts":"2017-02-10T20:42:01.936Z"}
{"msg":"etc etc","username":"greg.haskins","ts":"2017-02-10T20:42:06.323Z"}
{"msg":"other things too: like the lack of a transactional store for the chaincodes now","username":"greg.haskins","ts":"2017-02-10T20:42:26.275Z"}
{"msg":"maybe I am just missing details, but it seems like key architectural details are \"TBD\"","username":"greg.haskins","ts":"2017-02-10T20:42:46.243Z"}
{"msg":"I think the majority of the multi-channel concern would be addressed at the container level, and that wouldnt require a modification to the wire-protocol/network-operation","username":"greg.haskins","ts":"2017-02-10T20:43:40.490Z"}
{"msg":"let me look up a jira item on security related to this new model","username":"binhn","ts":"2017-02-10T20:44:15.960Z"}
{"msg":"it just seems like \"payload per channel\" is properly scoped and secured","username":"greg.haskins","ts":"2017-02-10T20:44:22.150Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=P5gwAyzB9LAQfuAvN) @binhn right, but thats a big assumption","username":"greg.haskins","ts":"2017-02-10T20:47:07.430Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=P5gwAyzB9LAQfuAvN","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=P5gwAyzB9LAQfuAvN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"right, it would be better scoped as no cross channel things -- the new model sets up 1 container per chaincode for all channels that the chaincode is operating on provide optimization but also bringing security concerns","username":"binhn","ts":"2017-02-10T20:47:11.057Z"}
{"msg":"the way I look at it (and correct where my gaps in understanding are in both old and new models)","username":"greg.haskins","ts":"2017-02-10T20:47:52.486Z"}
{"msg":"in the old method: I could create a channel between relevant parties, and then deploy a payload on that channel","username":"greg.haskins","ts":"2017-02-10T20:48:20.637Z"}
{"msg":"by definition, all the parties on the channel should be privy to that code, no?","username":"greg.haskins","ts":"2017-02-10T20:48:32.774Z"}
{"msg":"yes, with the old model","username":"binhn","ts":"2017-02-10T20:49:04.031Z"}
{"msg":"and by association, all parties on that channel would have appropriate access to that code","username":"greg.haskins","ts":"2017-02-10T20:49:08.803Z"}
{"msg":"i could write an LCCC policy that defines the privledge to deploy on that particular channel","username":"greg.haskins","ts":"2017-02-10T20:49:48.221Z"}
{"msg":"so that is the security and deployment model","username":"greg.haskins","ts":"2017-02-10T20:49:54.099Z"}
{"msg":"in the new model, the availability of the code from the channel is decoupled","username":"greg.haskins","ts":"2017-02-10T20:50:07.302Z"}
{"msg":"i could instantiate \"X\" on a channel, but theres no saying that any of the members of the channel have X","username":"greg.haskins","ts":"2017-02-10T20:50:25.884Z"}
{"msg":"so now I need to replicate a security model that mirrors the scope of the channel, but isnt built into the channel","username":"greg.haskins","ts":"2017-02-10T20:51:00.710Z"}
{"msg":"one model is \"well, every node on the channel needs to log in to their node, upload the code, and run the CLI","username":"greg.haskins","ts":"2017-02-10T20:51:30.945Z"}
{"msg":"and that technically meets the criteria, but its both OOB to the security policy of the peer as well as awkward at best, and at worst, not an option for certain deployment models (e.g. containerized peers)","username":"greg.haskins","ts":"2017-02-10T20:52:20.333Z"}
{"msg":"or, we could add an RPC to upload the code, but now we need an OOB security mechanism, and we need to ensure it overlaps with channel membership","username":"greg.haskins","ts":"2017-02-10T20:52:59.712Z"}
{"msg":"im not sure its worth all this, and it seems like it breaks the (really important) property of being able to define meta policy with things like LCCC","username":"greg.haskins","ts":"2017-02-10T20:53:47.270Z"}
{"msg":"ok, let me try to address some and i see murali is also typing ... so let he charm in as well","username":"binhn","ts":"2017-02-10T20:55:06.451Z"}
{"msg":"the main differences I think is the new model allows for deployment and scenarios where (1) assets are manipulated by different peers/orgs in different ways (but they belong to one problem domain) (2) they all generate transactions in the problem domain differently (different endorser set for different kinds of proposals/transactions) (3) ownership and management of chaincode is also separated  .... to me, the old model can be derived from the new but the new allows for many different scenarios","username":"muralisr","ts":"2017-02-10T20:57:38.876Z"}
{"msg":"the linkage beweeen the code on the peer and the instantiation on the channel is the tricky part (the security concerns) which have to be carefully addressed","username":"muralisr","ts":"2017-02-10T20:58:24.681Z"}
{"msg":"i dont see how this relates to assets though...that should be related to transactions on the channel in either case","username":"greg.haskins","ts":"2017-02-10T20:58:48.902Z"}
{"msg":"as far as code, I understand why one chaincode on mulitple channels is undesirable to have multiple containers, but we can address that without changing the protocol","username":"greg.haskins","ts":"2017-02-10T20:59:21.126Z"}
{"msg":"the peer would just need to maintain the container catalog at a lower level, but that should be achievable","username":"greg.haskins","ts":"2017-02-10T20:59:48.051Z"}
{"msg":"e.g. if I deploy X (using the old scheme) on channel Y, and the peer hasnt seen it before, it installs X","username":"greg.haskins","ts":"2017-02-10T21:00:28.829Z"}
{"msg":"then if I deploy Y on channel Z, the CodePackage is still on the ledger for channel Z, but the peer doesnt need to create the container again","username":"greg.haskins","ts":"2017-02-10T21:00:54.345Z"}
{"msg":"then if I deploy X on channel Z, the CodePackage is still on the ledger for channel Z, but the peer doesnt need to create the container again","username":"greg.haskins","ts":"2017-02-10T21:00:54.345Z"}
{"msg":"it already has it","username":"greg.haskins","ts":"2017-02-10T21:00:56.438Z"}
{"msg":"that would solve the bulk of the problem, I would think","username":"greg.haskins","ts":"2017-02-10T21:01:32.422Z"}
{"msg":"yes, both the Y and Z channels have the payload for the code, but we are talking probably 2k-20k in the vast majority of the cases which is smaller than many standard invokes()","username":"greg.haskins","ts":"2017-02-10T21:02:26.106Z"}
{"msg":"but I would also argue this is a good thing","username":"greg.haskins","ts":"2017-02-10T21:02:37.508Z"}
{"msg":"its repeatable within the channel forevermore","username":"greg.haskins","ts":"2017-02-10T21:02:49.955Z"}
{"msg":"it was by definition, appropriate for the channel having passed as an LCCC transaction, etc","username":"greg.haskins","ts":"2017-02-10T21:03:07.991Z"}
{"msg":"if we decouple the payload, theres now a whole slew of problems that can crop up","username":"greg.haskins","ts":"2017-02-10T21:03:35.244Z"}
{"msg":"a) what if a node in Channel Y or Z doesnt have X now?","username":"greg.haskins","ts":"2017-02-10T21:03:53.670Z"}
{"msg":"b) what if they dont have it in the future","username":"greg.haskins","ts":"2017-02-10T21:04:00.656Z"}
{"msg":"c) what if X was partially written to the filesystem and then went down","username":"greg.haskins","ts":"2017-02-10T21:04:28.684Z"}
{"msg":"d) what if I want to govern the validity of the install via consensus","username":"greg.haskins","ts":"2017-02-10T21:04:50.157Z"}
{"msg":"etc etc","username":"greg.haskins","ts":"2017-02-10T21:04:57.937Z"}
{"msg":"i just dont see how that is going to be addressed, all for saving 2k-20k in the init() transaction","username":"greg.haskins","ts":"2017-02-10T21:05:15.210Z"}
{"msg":"The case where a chaincode need not be on all peers because they address different facet in the same problem domain.The code resides on those peers who need it and it can be accessed only on those but all peers need to be aware of the transactions generated (so having private channels for those may not always be an option)","username":"muralisr","ts":"2017-02-10T21:12:30.445Z"}
{"msg":"understood, but doesnt \"need not be on all peers\" also overlap with channel membership?","username":"greg.haskins","ts":"2017-02-10T21:13:06.448Z"}
{"msg":"generally, if you are on the channel, you need the code...if you are not on the channel, you may or may not","username":"greg.haskins","ts":"2017-02-10T21:13:43.245Z"}
{"msg":"it would to some extent but depends upon the problem domain I think.","username":"muralisr","ts":"2017-02-10T21:13:55.289Z"}
{"msg":"consider peers Alice and Bob","username":"greg.haskins","ts":"2017-02-10T21:14:41.625Z"}
{"msg":"they want to run chaincodes X Y and Z so they install them manually","username":"greg.haskins","ts":"2017-02-10T21:15:05.456Z"}
{"msg":"well take my example ```a \"car consortium\" channel with Vehicle Registration, Dealership companies, Insurance companies etc. The common thing is the CarAsset/Owner and everyone will have a CarAssetChaincode. But there will be chaincodes (CarDealerChaincode, InsuranceChaincode etc) which will only be on relevant peers. Everyone will be aware of the TXs but only some can generate them.```","username":"muralisr","ts":"2017-02-10T21:15:09.014Z"}
{"msg":"well take my example  ```a \"car consortium\" channel with Vehicle Registration, Dealership companies, Insurance companies etc. The common thing is the CarAsset/Owner and everyone will have a CarAssetChaincode. But there will be chaincodes (CarDealerChaincode, InsuranceChaincode etc) which will only be on relevant peers. Everyone will be aware of the TXs but only some can generate them.```","username":"muralisr","ts":"2017-02-10T21:15:09.014Z"}
{"msg":"well take my example   -  a \"car consortium\" channel with Vehicle Registration, Dealership companies, Insurance companies etc. The common thing is the CarAsset/Owner and everyone will have a CarAssetChaincode. But there will be chaincodes (CarDealerChaincode, InsuranceChaincode etc) which will only be on relevant peers. Everyone will be aware of the TXs but only some can generate them.","username":"muralisr","ts":"2017-02-10T21:15:09.014Z"}
{"msg":"that didn't come out well ... let me try again","username":"muralisr","ts":"2017-02-10T21:15:28.186Z"}
{"msg":"then an auditor wants to replay their history","username":"greg.haskins","ts":"2017-02-10T21:15:29.991Z"}
{"msg":"so, would we have a channel with different endorsing scopes?","username":"greg.haskins","ts":"2017-02-10T21:16:15.254Z"}
{"msg":"i thought a channel was how we define endorsing scopes","username":"greg.haskins","ts":"2017-02-10T21:16:33.564Z"}
{"msg":"when an auditor wants to replay, install the chaincode and replay","username":"muralisr","ts":"2017-02-10T21:16:43.298Z"}
{"msg":"heres my problem: there doesnt seem to be a plan for what constitutes \"install the chaincodes\"","username":"greg.haskins","ts":"2017-02-10T21:17:23.213Z"}
{"msg":"its just some OOB thing that is passed off to a different layer","username":"greg.haskins","ts":"2017-02-10T21:17:33.989Z"}
{"msg":"do Alice and/or Bob have to give the auditor the chaincodes?","username":"greg.haskins","ts":"2017-02-10T21:18:29.907Z"}
{"msg":"is there a protocol for the Auditor to ask for them?","username":"greg.haskins","ts":"2017-02-10T21:18:37.568Z"}
{"msg":"what are the security constraints governing the Auditors permissions to do that?","username":"greg.haskins","ts":"2017-02-10T21:19:00.199Z"}
{"msg":"is it just left to the Auditor to figure out on their own?","username":"greg.haskins","ts":"2017-02-10T21:19:28.057Z"}
{"msg":"the instantiation and the subsequent transactions are on the channel - that's a starting point. Wouln't the same concerns and protocol regarding auditing apply directly from the old model ? Granted there has to be additions to address the code part of it (which is why the strong link via the code and LCCC entries on the ledger is needed)","username":"muralisr","ts":"2017-02-10T21:21:30.332Z"}
{"msg":"The difference as I see it, is that the instantiate(new) and deploy(old) employ inband processes ","username":"greg.haskins","ts":"2017-02-10T21:22:27.443Z"}
{"msg":"you need to be able to generate a valid (as per network/LCCC rules) deploy/instantiate txn to play","username":"greg.haskins","ts":"2017-02-10T21:22:52.919Z"}
{"msg":"the problem with the instantiate model is, its a partial reference to something that happened OOB","username":"greg.haskins","ts":"2017-02-10T21:23:22.458Z"}
{"msg":"now, if I had a clear understanding of the rules of that OOB mechanism, and it had similar extensibility to the inband network in terms of AAA, policy, consensus, etc) it would be ok","username":"greg.haskins","ts":"2017-02-10T21:24:18.804Z"}
{"msg":"then perhaps it would be ok","username":"greg.haskins","ts":"2017-02-10T21:24:29.660Z"}
{"msg":"I see a string parallel to strong links to data items via maintaining hashes on the ledger - for audit and other purposes","username":"muralisr","ts":"2017-02-10T21:24:40.133Z"}
{"msg":"but the thing I dont get is: regardless of whether the plan for that OOB network exist or not, they seem to more or less overlap with what we already do at the LCCC/channel level","username":"greg.haskins","ts":"2017-02-10T21:25:07.350Z"}
{"msg":"and therefore I question whether that OOB mechanism has real value","username":"greg.haskins","ts":"2017-02-10T21:25:31.235Z"}
{"msg":"but even if it has a plan, and has value, I would still suggest that we should have those pieces in place before flipping the switch","username":"greg.haskins","ts":"2017-02-10T21:26:03.200Z"}
{"msg":"let me make sure of one point first greg ..I think its important","username":"muralisr","ts":"2017-02-10T21:26:40.188Z"}
{"msg":"to be clear, I am totally supportive of the notion that we can optimize container creation to be 1:1 with uniqueness of code","username":"greg.haskins","ts":"2017-02-10T21:26:54.364Z"}
{"msg":"ok","username":"greg.haskins","ts":"2017-02-10T21:27:15.281Z"}
{"msg":"` it had similar extensibility to the inband network in terms of AAA, policy, consensus`  - trying to understand that","username":"muralisr","ts":"2017-02-10T21:27:24.014Z"}
{"msg":"ok, consider the old deployment model","username":"greg.haskins","ts":"2017-02-10T21:27:57.260Z"}
{"msg":"o","username":"muralisr","ts":"2017-02-10T21:28:09.750Z"}
{"msg":"ok","username":"muralisr","ts":"2017-02-10T21:28:11.332Z"}
{"msg":"to create chaincode, I had to be able to create a deploy transaction, right?","username":"greg.haskins","ts":"2017-02-10T21:28:14.345Z"}
{"msg":"correct","username":"muralisr","ts":"2017-02-10T21:28:22.365Z"}
{"msg":"I see where you are going with this","username":"muralisr","ts":"2017-02-10T21:28:44.927Z"}
{"msg":"in order to create a deploy transaction, I needed to meet the general requirements of creating a transaction within a fabric network (presumably fabric-ca credentials, etc)","username":"greg.haskins","ts":"2017-02-10T21:28:46.387Z"}
{"msg":"(but sorry, do continue :-) )","username":"muralisr","ts":"2017-02-10T21:28:52.907Z"}
{"msg":"and I had to adhere to whatever rules we bake into LCCC","username":"greg.haskins","ts":"2017-02-10T21:29:04.963Z"}
{"msg":"etc","username":"greg.haskins","ts":"2017-02-10T21:29:06.277Z"}
{"msg":" etc","username":"greg.haskins","ts":"2017-02-10T21:29:07.242Z"}
{"msg":"and then that transaction, after passing those initial validity checks, would go through consensus and eventually result in an update to the ledger, the creation of a container, etc","username":"greg.haskins","ts":"2017-02-10T21:29:36.294Z"}
{"msg":"right","username":"muralisr","ts":"2017-02-10T21:29:43.398Z"}
{"msg":"so, all of that was using the AAA/policy/consensus of the network as a whole","username":"greg.haskins","ts":"2017-02-10T21:30:04.301Z"}
{"msg":"thats what I meant by that","username":"greg.haskins","ts":"2017-02-10T21:30:07.302Z"}
{"msg":"right. understood","username":"muralisr","ts":"2017-02-10T21:30:19.123Z"}
{"msg":"but now if its OOB, none of that is in play (presumably)....or it IS in play, but we are replicating what we already do in the old model","username":"greg.haskins","ts":"2017-02-10T21:30:45.593Z"}
{"msg":"so for the former, id say \"its not ready\", and for the latter, I would say \"why?\"","username":"greg.haskins","ts":"2017-02-10T21:31:37.648Z"}
{"msg":"but the instantiation will be using the AAA/policy/consensus (and the endorsements of others with the chaincode) ... only those endorsers know / care about the chaincode . Others in the channel get the tx and don't care about the chaincode itself (and in the old model will also have the chaincode in their ledger)","username":"muralisr","ts":"2017-02-10T21:33:06.604Z"}
{"msg":"i guess what I need to understand better is: what is an endorser scope vs channel","username":"greg.haskins","ts":"2017-02-10T21:33:48.560Z"}
{"msg":"i thought they were more or less the same thing","username":"greg.haskins","ts":"2017-02-10T21:33:55.027Z"}
{"msg":"i thought the channels were more or less defining the endorser scope","username":"greg.haskins","ts":"2017-02-10T21:34:26.835Z"}
{"msg":"but since the instantiation plays such a pivotal role, it is important to maintain the strong link between that code and that instantiation tx (vial the LCCC entry) much as we can keep bulk data in an external db but put hash on on the blockchain","username":"muralisr","ts":"2017-02-10T21:35:17.725Z"}
{"msg":"in a channel with N peers, a subset can be endorsers for TX","username":"muralisr","ts":"2017-02-10T21:35:47.978Z"}
{"msg":"ok...so what is the point of a channel?","username":"greg.haskins","ts":"2017-02-10T21:36:11.766Z"}
{"msg":"(i am not being facetious: i am confused as to what its purpose is) ","username":"greg.haskins","ts":"2017-02-10T21:37:19.100Z"}
{"msg":"er, i thought I knew, until just now","username":"greg.haskins","ts":"2017-02-10T21:37:44.799Z"}
{"msg":"absolutely, I understood :-) ","username":"muralisr","ts":"2017-02-10T21:37:56.307Z"}
{"msg":"to be clear, i totally get why code should only be targeted at the endorsing scope...i had just thought thats what a channel was)","username":"greg.haskins","ts":"2017-02-10T21:39:09.414Z"}
{"msg":"I see.. I begin to understand the direction you were coming from. ... endorsser is just a role for a peer .... many peers in a channel, depending upon the nature of transacion and the application, different peers will be called to endorse (and run CC to do that) those txs","username":"muralisr","ts":"2017-02-10T21:41:58.814Z"}
{"msg":"not sure that helps...","username":"muralisr","ts":"2017-02-10T21:42:16.345Z"}
{"msg":"what bestows the peer with the role of endorser and when?","username":"greg.haskins","ts":"2017-02-10T21:43:04.455Z"}
{"msg":"is it per channel (what I thought), per chaincode, per tx, something else?","username":"greg.haskins","ts":"2017-02-10T21:43:25.738Z"}
{"msg":"is it per channel (what I thought), per chaincode-instance, per tx, something else?","username":"greg.haskins","ts":"2017-02-10T21:43:25.738Z"}
{"msg":"sorry, i got interrupted -- reading...","username":"binhn","ts":"2017-02-10T21:43:25.872Z"}
{"msg":"at one level,  the application would say - \"I need endorsements for this user request/tx from those two banks in that channel\" - ... so application (SDK and Chaincode) and the tx I'd say (at least in that view)","username":"muralisr","ts":"2017-02-10T21:54:30.586Z"}
{"msg":"what is the granularity?","username":"greg.haskins","ts":"2017-02-10T21:58:47.031Z"}
{"msg":"is it per chaincode instance, per function?","username":"greg.haskins","ts":"2017-02-10T21:58:58.253Z"}
{"msg":"per tx?","username":"greg.haskins","ts":"2017-02-10T21:59:10.221Z"}
{"msg":"in my mind, channel is for transactions isolation (private to counter parties); these transactions may involve multiple chaincodes instantiated on that channel, whose endorsers varied per chaincode endorsement policy, and hence, only those endorsers would need to have the chaincode to stand up the container. ","username":"binhn","ts":"2017-02-10T22:00:40.727Z"}
{"msg":"@binhn i think that is why I am confused","username":"greg.haskins","ts":"2017-02-10T22:01:12.643Z"}
{"msg":"all of those terms (transaction isolation, privacy to counter parties, etc) to me implies a relationship to endorsing","username":"greg.haskins","ts":"2017-02-10T22:01:44.160Z"}
{"msg":"i think that might be why I thought channel formation was essentially setting the bounds of endorsement/privacy","username":"greg.haskins","ts":"2017-02-10T22:02:03.757Z"}
{"msg":"i still am not clear on what _does_ set that if channels are not it","username":"greg.haskins","ts":"2017-02-10T22:02:30.333Z"}
{"msg":"say bob and alice (bilateral transaction) with some observers on a channel, and say bob and alice are the endorsers of their transactions involving 1 chaincode, and the observers (committing peers) only receive the transactions.  So we need a model to deploy the chaincode such that observers don't get it but know about it","username":"binhn","ts":"2017-02-10T22:03:58.706Z"}
{"msg":"so, step back a level","username":"greg.haskins","ts":"2017-02-10T22:06:36.333Z"}
{"msg":"bob and alice want to create a bilateral mechanism of some kind","username":"greg.haskins","ts":"2017-02-10T22:06:53.488Z"}
{"msg":"how do they do that?","username":"greg.haskins","ts":"2017-02-10T22:06:58.997Z"}
{"msg":"what are the steps","username":"greg.haskins","ts":"2017-02-10T22:07:03.010Z"}
{"msg":"say the fabric is newly deployed and empty, but it has 10 peers from various entities","username":"greg.haskins","ts":"2017-02-10T22:07:30.595Z"}
{"msg":"of which alice and bob own 1 each","username":"greg.haskins","ts":"2017-02-10T22:07:57.552Z"}
{"msg":"assume the chaincode is already written","username":"greg.haskins","ts":"2017-02-10T22:09:13.463Z"}
{"msg":"(but not deployed/installed)","username":"greg.haskins","ts":"2017-02-10T22:09:22.637Z"}
{"msg":"how do I establish that only Alice and Bob can see/run the code and see the data that the code manipulates","username":"greg.haskins","ts":"2017-02-10T22:10:08.939Z"}
{"msg":"1) either alice or bob needs to have privilege to create channel (which is set as part of the config block on the ordering service)\n2) they would agree on the chaincode (reviewed, signed, packaged, etc) -- FAB-2143\n3) they would install the package on their peers\n4) they would create a channel where they are the members, and they might optionally include others (observers) as members of this channel\n4) they would instantiate the chaincode with endorsement policy requiring both alice's and bob's sig\n5) they now would be able to transact","username":"binhn","ts":"2017-02-10T22:15:04.158Z"}
{"msg":"ok, and this is more or less in line with how I thought it would work","username":"greg.haskins","ts":"2017-02-10T22:15:49.773Z"}
{"msg":"so my question is: if I create a channel and assign Alice and Bob as members...dont they, by definition, expect to be running the same code on that channel?","username":"greg.haskins","ts":"2017-02-10T22:16:27.981Z"}
{"msg":"to put it another way, would I ever add Charlie to that channel but not want him to have/see the code?","username":"greg.haskins","ts":"2017-02-10T22:17:07.686Z"}
{"msg":"yes, if charlie is a required observer or some other role that might run other chaincodes with bob ","username":"binhn","ts":"2017-02-10T22:18:25.379Z"}
{"msg":"well, the latter would just be a different channel between Charlie and Bob, right?","username":"greg.haskins","ts":"2017-02-10T22:18:50.845Z"}
{"msg":"but lets talk about the Observer","username":"greg.haskins","ts":"2017-02-10T22:19:09.901Z"}
{"msg":"wouldnt the observer want to be able to validate transactions?","username":"greg.haskins","ts":"2017-02-10T22:19:30.515Z"}
{"msg":"yes, but they might not need the chaincodes to do that","username":"binhn","ts":"2017-02-10T22:20:11.651Z"}
{"msg":"where I am going with this is: it seems to me that channel really does scope the privacy, including active endorsers and observers","username":"greg.haskins","ts":"2017-02-10T22:20:14.939Z"}
{"msg":"and therefore, all members of a channel need to execute transactions (even if observers do not submit endorser signatures","username":"greg.haskins","ts":"2017-02-10T22:20:38.753Z"}
{"msg":"validating transaction doesn't require executing chaincodes again","username":"binhn","ts":"2017-02-10T22:21:01.442Z"}
{"msg":"well, thats a function of validation depth though, isnt it?","username":"greg.haskins","ts":"2017-02-10T22:21:35.697Z"}
{"msg":"validating things like MVCC correctness or endorser signatures, no","username":"greg.haskins","ts":"2017-02-10T22:21:53.306Z"}
{"msg":"validating things like the content of MVCC correctness, yes","username":"greg.haskins","ts":"2017-02-10T22:22:06.023Z"}
{"msg":"(or, I would think anyway)","username":"greg.haskins","ts":"2017-02-10T22:22:11.021Z"}
{"msg":"a transaction contains static data that linked to other transactions (mvcc, right), so to prove correctness doesn't require replaying the transactions","username":"binhn","ts":"2017-02-10T22:23:30.826Z"}
{"msg":"I'm not sure everyone would agree with that though","username":"greg.haskins","ts":"2017-02-10T22:23:58.525Z"}
{"msg":"i think in certain use cases, repeating the calculation will be important","username":"greg.haskins","ts":"2017-02-10T22:24:13.021Z"}
{"msg":"i digress, thats actually not important right now","username":"greg.haskins","ts":"2017-02-10T22:24:20.477Z"}
{"msg":"what is important is that: at some level, there is a group which must share code, correct?","username":"greg.haskins","ts":"2017-02-10T22:24:44.730Z"}
{"msg":"yes","username":"binhn","ts":"2017-02-10T22:24:59.598Z"}
{"msg":"i had thought the dichotomy was perhaps simpler than it is","username":"greg.haskins","ts":"2017-02-10T22:25:03.627Z"}
{"msg":"i had thought it was in-channel vs out-of-channel","username":"greg.haskins","ts":"2017-02-10T22:25:18.752Z"}
{"msg":"perhaps its at least three levels deep","username":"greg.haskins","ts":"2017-02-10T22:25:27.040Z"}
{"msg":"endorser-inchannel, in-channel, and out-of-channel","username":"greg.haskins","ts":"2017-02-10T22:25:39.715Z"}
{"msg":"i think we all agree the OOC case doesnt need the code","username":"greg.haskins","ts":"2017-02-10T22:25:52.244Z"}
{"msg":"I think we all agree the endorsers do need the code","username":"greg.haskins","ts":"2017-02-10T22:26:04.987Z"}
{"msg":"i suppose its debatable whether it matters if in-channel gets the code or not","username":"greg.haskins","ts":"2017-02-10T22:26:23.572Z"}
{"msg":"right","username":"binhn","ts":"2017-02-10T22:26:36.551Z"}
{"msg":"personally I think theres at least a subclass of \"in-channel\" that are not endorsers but who need the ability to re-execute the transactions","username":"greg.haskins","ts":"2017-02-10T22:26:54.135Z"}
{"msg":"but lets shelve that for a minute","username":"greg.haskins","ts":"2017-02-10T22:26:59.722Z"}
{"msg":"ok","username":"binhn","ts":"2017-02-10T22:27:37.400Z"}
{"msg":"w.r.t. the \"endorser-inchannel\" group, I think there is still merit to consider an in-band deployment transaction","username":"greg.haskins","ts":"2017-02-10T22:27:44.509Z"}
{"msg":"im not sure what the mechanics of this might look like, we would have to thnk about the design","username":"greg.haskins","ts":"2017-02-10T22:28:01.133Z"}
{"msg":"but thats kind of my point","username":"greg.haskins","ts":"2017-02-10T22:28:04.433Z"}
{"msg":"if we dont have a story there, the logic isnt ready","username":"greg.haskins","ts":"2017-02-10T22:28:10.787Z"}
{"msg":"this is very important to get right","username":"greg.haskins","ts":"2017-02-10T22:28:39.667Z"}
{"msg":"(and I would add, risky to try to change now)","username":"greg.haskins","ts":"2017-02-10T22:29:31.684Z"}
{"msg":"though I understand the pressure to get this ABI impacting decision in for 1.0","username":"greg.haskins","ts":"2017-02-10T22:29:58.619Z"}
{"msg":"i thought there would be that the lccc would have an \"install\" function such that cli or sdk may invoke to pass long the chaincode package to the inchannel endorsers","username":"binhn","ts":"2017-02-10T22:30:00.182Z"}
{"msg":"yes, and I am sure we can come up with something","username":"greg.haskins","ts":"2017-02-10T22:30:15.683Z"}
{"msg":"but again, my point is: we should have that nailed or defer until we do","username":"greg.haskins","ts":"2017-02-10T22:30:32.096Z"}
{"msg":"agreed","username":"binhn","ts":"2017-02-10T22:31:22.362Z"}
{"msg":"so where do we go from here?","username":"greg.haskins","ts":"2017-02-10T22:31:49.508Z"}
{"msg":"@muralisr will push a cr on FAB-2143 and we can discuss more there","username":"binhn","ts":"2017-02-10T22:33:02.612Z"}
{"msg":"ok","username":"greg.haskins","ts":"2017-02-10T22:33:09.392Z"}
{"msg":"thanks for all the thoughts - i will try to capture the essence of this convo on FAB-2143","username":"binhn","ts":"2017-02-10T22:33:46.517Z"}
{"msg":"ok","username":"greg.haskins","ts":"2017-02-10T22:33:51.745Z"}
{"msg":"should I continue with the plan of having SDK access to push code ? ...no need to interrupt that is it (and its not a whole lot anyway)","username":"muralisr","ts":"2017-02-10T22:36:15.672Z"}
{"msg":"sorry just saw the above `i thought there would be that the lccc would have an \"install\" function such that cli or sdk may invoke to pass long the chaincode package to the inchannel endorsers`","username":"muralisr","ts":"2017-02-10T22:39:43.715Z"}
{"msg":"this chat didn't get updated for me till I was tagged for some reason","username":"muralisr","ts":"2017-02-10T22:40:12.452Z"}
{"msg":"ill try to summarize my understanding and position","username":"greg.haskins","ts":"2017-02-10T23:11:59.988Z"}
{"msg":"IIUC, the main goal of this effort was for the scenario where we have a super popular chaincode and 1000s of channels","username":"greg.haskins","ts":"2017-02-10T23:12:24.490Z"}
{"msg":"in the previous model, we would end up with 1000s of deployment txns, 1000s of on-ledger storage of the code, and 1000s of docker containers","username":"greg.haskins","ts":"2017-02-10T23:13:16.068Z"}
{"msg":"I think the reduction of 1 container to N contexts can be achieved without modifying the model","username":"greg.haskins","ts":"2017-02-10T23:13:49.466Z"}
{"msg":"either way, a hash of the CodePackage tells us the container being referenced...whether that comes in the form of hash(deploy.CodePackage) or instiantiate.CodeHash doesnt matter","username":"greg.haskins","ts":"2017-02-10T23:14:47.140Z"}
{"msg":"for the other case, I would argue that the deployment payload plays a critical function","username":"greg.haskins","ts":"2017-02-10T23:15:12.296Z"}
{"msg":"(and its also smaller than I think we realize, at least if we do this right)","username":"greg.haskins","ts":"2017-02-10T23:15:32.481Z"}
{"msg":"e.g. 2.4k for \"example02\"..so perhaps a real application range is probably 2k-50k","username":"greg.haskins","ts":"2017-02-10T23:16:10.225Z"}
{"msg":"its critical to be carried in the channel gossip to properly distribute the code in the right context, and its proper to live on the channel's ledger to facilitate re-play validation","username":"greg.haskins","ts":"2017-02-10T23:17:38.180Z"}
{"msg":"oh sure, gossip dressing goes well with anything. ","username":"yacovm","ts":"2017-02-10T23:18:25.854Z"}
{"msg":"so, if the payload is needed, and the optimization of 1:N containers can be achieved without changing the model, my vote is that this should not be changed","username":"greg.haskins","ts":"2017-02-10T23:18:29.944Z"}
{"msg":"I have a question- the new deployment module provides a serious benefit with the multi-tenant container being a scalable solution but how does the SDK know which chaincode is installed on which peers? is there a planned solution for that? In the previous deployment module you could've selected any peer of the channel. ","username":"yacovm","ts":"2017-02-10T23:21:31.941Z"}
{"msg":"`in the previous deployment module you could've selected any peer of the channel.`  - you could have, yes, but you may want only to select the peer that can endorse the chaincode and which works with the application for that type of transactions the chaincode is supposed to serve","username":"muralisr","ts":"2017-02-10T23:23:24.836Z"}
{"msg":"in other words, the application-CC are paired","username":"muralisr","ts":"2017-02-10T23:23:38.084Z"}
{"msg":"oh yeah, of course.","username":"yacovm","ts":"2017-02-10T23:23:56.774Z"}
{"msg":"but who determines if the peer can endorse or not? the configuration, right? why would a peer be in a channel and not be an endorser? (am I missing something?) ","username":"yacovm","ts":"2017-02-10T23:25:23.374Z"}
{"msg":"I mean, I understand why but I don't understand *why* would users not just always configure all peers to be endorsers, apart from some security reasons of peers being in DMZs","username":"yacovm","ts":"2017-02-10T23:26:17.772Z"}
{"msg":"and even if we conclude that, indeed, some members of a channel can legitimately not need to execute code (not convinced yet on this), it just means we are referring to the wrong layer","username":"greg.haskins","ts":"2017-02-10T23:28:07.594Z"}
{"msg":"ah, I think I understand what you mean @muralisr  - that the application \"comes\" with the peer it knows anyway?","username":"yacovm","ts":"2017-02-10T23:28:11.632Z"}
{"msg":"ah, I think I understand what you mean @muralisr  - that the application \"comes\" with the peer(s) it knows anyway?","username":"yacovm","ts":"2017-02-10T23:28:11.632Z"}
{"msg":"so s/channel/endorser-group in my above statements and it still applies","username":"greg.haskins","ts":"2017-02-10T23:28:39.101Z"}
{"msg":"really depends upon the domain  of the blockchain .. \" all are peers equal, all participate in all endorsement\" and \"the nature of TX/application defines which subset of peers are needed for endorsement\" (and yes, @yacovm )","username":"muralisr","ts":"2017-02-10T23:29:10.278Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=edqREfKcZPeZijf8w) @greg.haskins You made my mind compile a sed statement... ","username":"yacovm","ts":"2017-02-10T23:29:11.001Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=edqREfKcZPeZijf8w","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=edqREfKcZPeZijf8w","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=edqREfKcZPeZijf8w) @greg.haskins You made my mind compile a `sed` statement... ","username":"yacovm","ts":"2017-02-10T23:29:11.001Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=edqREfKcZPeZijf8w","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=edqREfKcZPeZijf8w","remote":true,"fileId":null,"fileName":null}]}
{"msg":"e.g. the code distribution group, call it just endorsers or more broadly, channel members, should still be a function of a txn of the lccc","username":"greg.haskins","ts":"2017-02-10T23:29:22.804Z"}
{"msg":"whats a little regex between friends","username":"greg.haskins","ts":"2017-02-10T23:30:01.787Z"}
{"msg":"it should be linked to LCCC for sure","username":"muralisr","ts":"2017-02-10T23:30:04.598Z"}
{"msg":"indeed :-) ","username":"muralisr","ts":"2017-02-10T23:30:08.807Z"}
{"msg":"(reminds me of another recent regex experiance ;-)","username":"muralisr","ts":"2017-02-10T23:30:27.637Z"}
{"msg":"heh","username":"greg.haskins","ts":"2017-02-10T23:30:33.771Z"}
{"msg":"the danger is when you forget that not many people will know what that means","username":"greg.haskins","ts":"2017-02-10T23:30:55.294Z"}
{"msg":"i mean in other scnenarios","username":"greg.haskins","ts":"2017-02-10T23:31:13.290Z"}
{"msg":"not here","username":"greg.haskins","ts":"2017-02-10T23:31:14.391Z"}
{"msg":"like texting my wife","username":"greg.haskins","ts":"2017-02-10T23:31:20.980Z"}
{"msg":"right, i was reminded of the regex exchange and blurted it out ... :-)","username":"muralisr","ts":"2017-02-10T23:42:56.792Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=tX9SvgM5bzPbhssNb) @yacovm he's missing a trailing `/g`, no?","username":"rjones","ts":"2017-02-11T00:25:02.310Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=tX9SvgM5bzPbhssNb","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=tX9SvgM5bzPbhssNb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"maybe I am missing something, but having the application \"come\" with the peers means a static relationship. This means I cannot dynamically add a peer node/cluster to a channel? ","username":"cbf","ts":"2017-02-11T09:54:51.267Z"}
{"msg":"so, if by some change in regulation a new auditor or regulatory body needed to have visibility to the transactions in a particular channel relationship, you'd have to redesign and redeploy? really?","username":"cbf","ts":"2017-02-11T09:55:48.082Z"}
{"msg":"@cbf  - That means IIUC that you'll need to update the application somehow when peer(s) are added and/or are configured as endorsers.","username":"yacovm","ts":"2017-02-11T10:10:57.334Z"}
{"msg":"ugh, that isn't operationally scalable, IMO","username":"cbf","ts":"2017-02-11T10:11:19.879Z"}
{"msg":"The previous design, however- still has a problem that the app needs to know who are the peers of the channel. ","username":"yacovm","ts":"2017-02-11T10:11:42.222Z"}
{"msg":"true, but this seems rather \"hard coded\" ","username":"cbf","ts":"2017-02-11T10:12:10.656Z"}
{"msg":"we could have tracked which peers on a channel in the ledger","username":"cbf","ts":"2017-02-11T10:12:49.439Z"}
{"msg":"or some registry of sorts","username":"cbf","ts":"2017-02-11T10:13:11.321Z"}
{"msg":"Well- I really don't see why we can't add to the API of the peer an ability to query the peers of the channel","username":"yacovm","ts":"2017-02-11T10:13:18.394Z"}
{"msg":"Gossip already stores and maintains this information","username":"yacovm","ts":"2017-02-11T10:13:26.647Z"}
{"msg":"not for alpha of course","username":"yacovm","ts":"2017-02-11T10:13:31.754Z"}
{"msg":"But- it's a no-brainer for gossip to expose that to the peer and if we somehow add an API call- you can have the app know only 1(!) peer","username":"yacovm","ts":"2017-02-11T10:14:01.597Z"}
{"msg":"and then it could use that peer as a service-discovery endpoint","username":"yacovm","ts":"2017-02-11T10:14:18.588Z"}
{"msg":"another totally different direction btw- is use a real service discovery service and integrate with it","username":"yacovm","ts":"2017-02-11T10:14:40.668Z"}
{"msg":"like Eureka, or consul, etc.","username":"yacovm","ts":"2017-02-11T10:14:46.433Z"}
{"msg":"(Or like bluemix's native service discovery service written in our group in Haifa ;) ) ","username":"yacovm","ts":"2017-02-11T10:15:07.515Z"}
{"msg":"You can have the peers register into the service discovery service, and the app can come with a node.js client that can query that info","username":"yacovm","ts":"2017-02-11T10:15:28.927Z"}
{"msg":"It's just a thought of course","username":"yacovm","ts":"2017-02-11T10:15:32.359Z"}
{"msg":"gossip maintains list of peers joined the channel while it's still doesn' know peers role, no? I mean we cannot differ between committer and endorser peer?","username":"C0rWin","ts":"2017-02-11T10:16:17.820Z"}
{"msg":"yeah we don't but that's fixable","username":"yacovm","ts":"2017-02-11T10:16:35.827Z"}
{"msg":"I do not think that gossip should do it :)","username":"C0rWin","ts":"2017-02-11T10:17:15.082Z"}
{"msg":"IMO service discovery + DNS a way better approach","username":"C0rWin","ts":"2017-02-11T10:17:45.694Z"}
{"msg":"should do what?","username":"yacovm","ts":"2017-02-11T10:17:54.264Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WBcYKeLGL7RJ7v2cZ","username":"C0rWin","ts":"2017-02-11T10:18:23.587Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WBcYKeLGL7RJ7v2cZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WBcYKeLGL7RJ7v2cZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"oh- well- the benefit is that it's much less work than integrating with all kinds of service discovery products on the peer and the SDK side.","username":"yacovm","ts":"2017-02-11T10:19:06.513Z"}
{"msg":"another problem is- what if from some reason the organization doesn't have service discovery? you'll tell it to deploy one? could be a problem.","username":"yacovm","ts":"2017-02-11T10:20:13.613Z"}
{"msg":"[ The reality is that most people will not separate the roles and worst case someone gets an error calling the endorse API and tries again](https://chat.hyperledger.org/channel/fabric-maintainers?msg=PRBrQfQES2CGDG2u2) @C0rWin ","username":"mastersingh24","ts":"2017-02-11T10:26:08.154Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=PRBrQfQES2CGDG2u2","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=PRBrQfQES2CGDG2u2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"ok, I'm still struggling with how it suppose to work right now? I mean how application discovers who are endorsers?","username":"C0rWin","ts":"2017-02-11T10:26:42.924Z"}
{"msg":"we need to \"define\" a set of APIs for info the peer *should* provide and then figure out how to populate the responses to those","username":"mastersingh24","ts":"2017-02-11T10:26:44.098Z"}
{"msg":"1) config block has member orgs and anchor peers - we can make that info available\n2) gossip will build up the list of peers on a channel by org","username":"mastersingh24","ts":"2017-02-11T10:28:03.126Z"}
{"msg":"and how app will access it?","username":"C0rWin","ts":"2017-02-11T10:28:24.709Z"}
{"msg":"Am I correct on 2) - you know peers on a  channel and the org for each peer","username":"mastersingh24","ts":"2017-02-11T10:28:26.772Z"}
{"msg":"API that I mentioned","username":"mastersingh24","ts":"2017-02-11T10:28:33.107Z"}
{"msg":";)","username":"mastersingh24","ts":"2017-02-11T10:28:34.377Z"}
{"msg":"yeah","username":"yacovm","ts":"2017-02-11T10:28:34.390Z"}
{"msg":"@mastersingh24 yes you correct","username":"C0rWin","ts":"2017-02-11T10:28:41.251Z"}
{"msg":"we need to design those APIs","username":"mastersingh24","ts":"2017-02-11T10:28:44.384Z"}
{"msg":"oddly enough, that's on my lost to propose as a JIRA this weekend","username":"mastersingh24","ts":"2017-02-11T10:28:58.672Z"}
{"msg":"oddly enough, that's on my list to propose as a JIRA this weekend","username":"mastersingh24","ts":"2017-02-11T10:28:58.672Z"}
{"msg":"I think that in any case the peer should expose them via gRPC ","username":"yacovm","ts":"2017-02-11T10:29:01.064Z"}
{"msg":"I mean, that the code of registration will be in the peer","username":"yacovm","ts":"2017-02-11T10:29:10.255Z"}
{"msg":"agreed","username":"mastersingh24","ts":"2017-02-11T10:30:46.705Z"}
{"msg":"I must be missing something, but how app will get list of endpoints for retries?\nhttps://chat.hyperledger.org/channel/fabric-maintainers?msg=aNF8yf75TppGTExme @mastersingh24 ","username":"C0rWin","ts":"2017-02-11T10:37:02.946Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aNF8yf75TppGTExme","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aNF8yf75TppGTExme","remote":true,"fileId":null,"fileName":null}]}
{"msg":"and assuming we need to provide/support dynamicity of adding/removing peers, these endpoints are subject to changes...","username":"C0rWin","ts":"2017-02-11T10:38:57.296Z"}
{"msg":"unless we relay on having DNS somehow","username":"C0rWin","ts":"2017-02-11T10:39:23.334Z"}
{"msg":"what I think he's saying is that the SDK can try to invoke a peer and if it's not an endorser it'll fail and re-try and invoke a different peer as if the first peer is offline.\nRegarding the membership changes- that's true, you need some bootstrapping point for the app to get a list of members from, and service discovery has an advantage in this area (but then you need service discover which is a disadvantage if you don't have it in your system)","username":"yacovm","ts":"2017-02-11T10:44:57.652Z"}
{"msg":"the invoke part is clear, the membership part is rather static right now","username":"C0rWin","ts":"2017-02-11T10:46:50.935Z"}
{"msg":"I think the notion of service discovery and namespace mapping, etc, are all critical services...but please please please dont be thinking of them as integrations with external services like Consul or DNS","username":"greg.haskins","ts":"2017-02-11T13:40:41.937Z"}
{"msg":"it has to be in the fabric protocol","username":"greg.haskins","ts":"2017-02-11T13:40:47.909Z"}
{"msg":"conceptually, yes","username":"greg.haskins","ts":"2017-02-11T13:40:52.903Z"}
{"msg":"implementation, go integrated please","username":"greg.haskins","ts":"2017-02-11T13:41:02.375Z"}
{"msg":"I am not denigrating products like Consul, but rather thing that architectually it needs to be tightly integrated","username":"greg.haskins","ts":"2017-02-11T13:41:57.946Z"}
{"msg":"I am not denigrating products like Consul, but rather think that architectually it needs to be tightly integrated","username":"greg.haskins","ts":"2017-02-11T13:41:57.946Z"}
{"msg":"but you can't get around the problem that you have an SDK and you have peers, and there is no way for the SDK to know the list of peers without DNS or service discovery","username":"yacovm","ts":"2017-02-11T13:43:18.296Z"}
{"msg":"or a config file, that is","username":"yacovm","ts":"2017-02-11T13:43:25.997Z"}
{"msg":"thats not what I am saying","username":"greg.haskins","ts":"2017-02-11T13:43:34.251Z"}
{"msg":"I am saying \"DNS and service discovery\" == good, relying on components outside of the peer network == bad","username":"greg.haskins","ts":"2017-02-11T13:43:56.763Z"}
{"msg":"ahh","username":"yacovm","ts":"2017-02-11T13:44:06.116Z"}
{"msg":"bake the concept of DNS and service discovery into the fabric protocols","username":"greg.haskins","ts":"2017-02-11T13:44:17.220Z"}
{"msg":"I think if we decide to solve this problem we should make it pluggable","username":"yacovm","ts":"2017-02-11T13:44:38.022Z"}
{"msg":"sure, thats fine","username":"greg.haskins","ts":"2017-02-11T13:45:08.865Z"}
{"msg":"catching up with the latest... (good morning!)","username":"muralisr","ts":"2017-02-11T13:53:37.158Z"}
{"msg":"```\nTrying this summary of today's discussion to make sure I understood... (please correct at will!)\n\nIn a \"consortium with orgs\" network I'm assuming the following will typically be true \n  . different applications with their own chaincode(s) will be running on the network\n  . on any channel different sets of endorsers (with corresponding application/chaincode pairs) will be responsible for different transactions\n  . if a peer needs to endorse it needs to have the chaincode for it\n       - as an aside, this is where the new model will be different.. the chaincode has to be installed on the peer as chaincodes will not be on the ledger\n\nGiven the above, we have the question \"how does the application know which endorser to go to ?\" \n\nOne answer could be that application developers know the Orgs (and hence the peers) each application is targetted for and so will have to know\nabout the peers anyway. \n\nThe other answer could be that application itself needs discover the Org / peer for sending endorsements to. So we'd need a discovery service for the application to use.\nSuch a discovery service would have to take the availability of chaincode on the peer into account.\nIn either case, a discovery service supplied by the fabric and working in tandem with application seems to be a good thing... \n```","username":"muralisr","ts":"2017-02-11T14:55:08.307Z"}
{"msg":"```\nTrying this summary of todays discussion to make sure I understood... (please correct at will!)\n\nIn a \"consortium with orgs\" network assuming the following will typically be true \n  . different applications with their own chaincode(s) will be running on the network\n  . on any channel different sets of endorsers (with corresponding application/chaincode pairs) will be responsible for different transactions\n  . if a peer needs to endorse it needs to have the chaincode for it\n       - as an aside, this is where the new model will be different.. the chaincode has to be installed on the peer as chaincodes will not be on the ledger\n\nGiven the above, we have the question \"how does the application know which endorser to go to ?\" \n\nOne answer could be that application developers know the Orgs (and hence the peers) each application is targetted for and so will have to know\nabout the peers anyway. \n\nThe other answer could be that application itself needs discover the Org / peer for sending endorsements to. So wed need a discovery service for the application to use.\nSuch a discovery service would have to take the availability of chaincode on the peer into account.\nIn either case, a discovery service supplied by the fabric and working in tandem with application seems to be a good thing... \n```","username":"muralisr","ts":"2017-02-11T14:55:08.307Z"}
{"msg":"```\nTrying this summary of todays discussion to make sure I understood... (please correct at will!)\n\nIn a \"consortium with orgs\" network assuming the following will typically be true \n  . different applications with their own chaincode(s) will be running on the network\n  . on any channel different sets of endorsers (with corresponding application/chaincode pairs) will be responsible for different transactions\n  . if a peer needs to endorse it needs to have the chaincode for it\n       - as an aside, this is where the new model will be different.. the chaincode has to be installed on the peer as chaincodes will not be on the ledger\n\nGiven the above, we have the question \"how does the application know which endorser to go to ?\" \n\nOne answer could be that application developers know the Orgs (and hence the peers) each application is targetted for and so will have to know about the peers anyway. \n\nThe other answer could be that application itself needs discover the Org / peer for sending endorsements to. So wed need a discovery service for the application to use.\nSuch a discovery service would have to take the availability of chaincode on the peer into account.\nIn either case, a discovery service supplied by the fabric and working in tandem with application seems to be a good thing... \n```","username":"muralisr","ts":"2017-02-11T14:55:08.307Z"}
{"msg":"```\nTrying this summary of todays discussion to make sure I understood... (please correct at will!)\n\nIn a \"consortium with orgs\" network assuming the following will typically be true \n  . different applications with their own chaincode(s) will be running on the network\n  . on any channel different sets of endorsers (with corresponding application/chaincode pairs) will be responsible for different transactions\n  . if a peer needs to endorse it needs to have the chaincode for it\n       - as an aside, this is where the new model will be different.. the chaincode has to be installed on the peer as chaincodes will not be on the ledger\n\nGiven the above, we have the question \"how does the application know which endorser to go to ?\" \n\nOne answer could be that application developers know the Orgs (and hence the peers) each application is targetted for and so will have to know about the peers anyway. \n\nThe other answer could be that application itself needs discover the Org / peer for sending endorsements to. So wed need a discovery service for the application to use.\nSuch a discovery service would have to take the availability of chaincode on the peer into account.\nIn either case, a discovery service supplied by the fabric and working in tandem with application seems to be a good thing... \n```","username":"muralisr","ts":"2017-02-11T14:55:08.307Z"}
{"msg":"@greg.haskins  @yacovm   -  not sure if I understand the \"bake the concept of DNS and discovery\" into the fabric protocols discussion.  ","username":"mastersingh24","ts":"2017-02-11T20:29:43.583Z"}
{"msg":"what I was trying to get at is there is \"information\" which ordering and peer nodes have about the \"network\".   \n\n- An application can connect to a peer node and/or an ordering node\n- Clearly the application will need to know at least one of those endpoints in order to do anything\n- The identity of the application will be scoped to one of the members / organizations else it won't be able to connect to any peer or ordering node\n- A peer node knows the following:   channels it belongs to, information about those channels (which includes peer organizations (MSP and anchor peers) and orderer addresses/identities) and via gossip will know about public peer endpoints which are part of the channel)\n- Ordering nodes know about channels (which includes peer organizations (MSP and anchor peers) and orderer addresses/identities)","username":"mastersingh24","ts":"2017-02-11T20:34:57.926Z"}
{"msg":"what I was trying to get at is there is \"information\" which ordering and peer nodes have about the \"network\".   \n\n- An application can connect to a peer node and/or an ordering node\n- Clearly the application will need to know at least one of those endpoints in order to do anything\n- The identity of the application will be scoped to one of the members / organizations else it won't be able to connect to any peer or ordering node\n- A peer node knows the following:   channels it belongs to, information about those channels (which includes peer organizations (MSP and anchor peers) and orderer addresses/identities) and via gossip will know about public peer endpoints which are part of the channel), chaincodes (and the channels on which they are deployed), the endorsement policies for the chaincodes\n- Ordering nodes know about channels (which includes peer organizations (MSP and anchor peers) and orderer addresses/identities)","username":"mastersingh24","ts":"2017-02-11T20:34:57.926Z"}
{"msg":"given that a majority of the time applications will be communicating with peers for endorsement and then sending to orderers for ordering, it seems to me that an easy starting point is to make the information a peer possesses available to the client application","username":"mastersingh24","ts":"2017-02-11T20:36:33.603Z"}
{"msg":"(as a stupid example, in v0.6 you could use the /network endpoint to get the list of peers any given peer knew about)","username":"mastersingh24","ts":"2017-02-11T20:37:09.508Z"}
{"msg":"@mastersingh24 `given that a majority of the time applications will be communicating with peers for endorsement ` - how did the apps know which peers to communicate with ?","username":"muralisr","ts":"2017-02-11T20:37:55.218Z"}
{"msg":"so you have to know at least one address to start with","username":"mastersingh24","ts":"2017-02-11T20:38:15.471Z"}
{"msg":"either a peer node or an ordering node.  IMHO, getting the address of a single peer node would be the best starting point.   ","username":"mastersingh24","ts":"2017-02-11T20:39:25.129Z"}
{"msg":"but at the end of the day, you need to know some address","username":"mastersingh24","ts":"2017-02-11T20:39:35.524Z"}
{"msg":"because of the binding with applications and orgs (and the txs), right ?","username":"muralisr","ts":"2017-02-11T20:39:35.644Z"}
{"msg":"ie, we don't write applications in a vacuum... an org or set of orgs are involved in the dev of the application","username":"muralisr","ts":"2017-02-11T20:40:12.182Z"}
{"msg":"no matter how you solve the problem, you have to know something - typically that would be an endpoint address","username":"mastersingh24","ts":"2017-02-11T20:40:54.735Z"}
{"msg":"right","username":"muralisr","ts":"2017-02-11T20:40:59.057Z"}
{"msg":"I'm with you.. ","username":"muralisr","ts":"2017-02-11T20:41:05.080Z"}
{"msg":"and given that the peer has access to lots of info and given that in most cases the peer will be the center of the universe (either I own a peer and am writing applications or I am using someone else's peer to write applications), having the peer provide a set of APIs to make this info available seems to make the most sense to me","username":"mastersingh24","ts":"2017-02-11T20:42:42.403Z"}
{"msg":"of course you can create an external registry, etc to bootstrap this if you so desired, but I think we should provide some of this (in this simple form) out of the box","username":"mastersingh24","ts":"2017-02-11T20:43:18.316Z"}
{"msg":"every chaincode on a channel has an endorsement policy, which currently contains the MSPs (eg  OR(msp1.members, msp2.members)), we also know that anchors must be part of the channel, so we could return the list of anchors of the channel and they would be responsible for disseminating the request to correct endorsers (that requires some more code).  The alternative is to name the endorsers in the endorsement policy, and we would resolve the actual endpoints (DNS method)","username":"binhn","ts":"2017-02-11T20:52:14.353Z"}
{"msg":"@mastersingh24  - so, what I am saying is that I think that in the future we could add pluggable support for knowing about this \"single peer\" if in the organization there is a service discovery service or DNS.","username":"yacovm","ts":"2017-02-11T21:07:53.482Z"}
{"msg":"ok - that makes sense @yacovm  - basically be able to \"populate\" an existing discovery or DNS service","username":"mastersingh24","ts":"2017-02-11T21:08:53.379Z"}
{"msg":"personally, I am a fan of using DNS SRV records  ;)","username":"mastersingh24","ts":"2017-02-11T21:10:05.326Z"}
{"msg":"what will be the queries to the discovery/domain service be ?","username":"muralisr","ts":"2017-02-11T21:12:24.649Z"}
{"msg":"in case of DNS its like `dig all-kinds-of-params SRV`","username":"yacovm","ts":"2017-02-11T21:13:28.026Z"}
{"msg":"in case of service-discovery, it's a REST call","username":"yacovm","ts":"2017-02-11T21:13:57.244Z"}
{"msg":"for DNS, SRV records like like `_Service ._ Protocol . DnsDomainName` , e.g. `_ldap._tcp.mastersingh.com`","username":"mastersingh24","ts":"2017-02-11T21:15:13.009Z"}
{"msg":"but in the end, once again I am saying the peers have a ton of info and we need to make it available  ;)","username":"mastersingh24","ts":"2017-02-11T21:16:17.192Z"}
{"msg":"so feeling a bit dense here :-) ...you are using `DNS` really in the tcp sense or as an abstraction for other service we could provide (e.g., `chaincodename.invokeparams`) ?","username":"muralisr","ts":"2017-02-11T21:18:01.550Z"}
{"msg":"you use DNS to find the host:port of a single peer","username":"yacovm","ts":"2017-02-11T21:20:29.218Z"}
{"msg":"and then you can talk to that peer and ask it what you need- who are the endorsers, etc.","username":"yacovm","ts":"2017-02-11T21:20:43.085Z"}
{"msg":"or multiple peers listed under a service with SRV records","username":"mastersingh24","ts":"2017-02-11T21:20:47.817Z"}
{"msg":"ok. so basically DNS as in DNS","username":"muralisr","ts":"2017-02-11T21:21:13.193Z"}
{"msg":"correct","username":"mastersingh24","ts":"2017-02-11T21:21:19.682Z"}
{"msg":"ok","username":"muralisr","ts":"2017-02-11T21:21:23.659Z"}
{"msg":"I like DNS SRV queries because they allow you to get a list of endpoints for a type of service","username":"mastersingh24","ts":"2017-02-11T21:22:02.899Z"}
{"msg":"example of \"type of service\" for fabric ? ","username":"muralisr","ts":"2017-02-11T21:23:45.107Z"}
{"msg":"endorsers, ordering service, I'd guess","username":"C0rWin","ts":"2017-02-11T21:25:25.506Z"}
{"msg":"channels on a peer ? peer ? orderer ..","username":"muralisr","ts":"2017-02-11T21:25:38.801Z"}
{"msg":"I'd guess you can reserve a namespace for `orgA` to be something like `peers.orgA.com` or maybe even `channel1.peers.orgA.com` ","username":"yacovm","ts":"2017-02-11T21:27:28.420Z"}
{"msg":"but these are all talks, we can't even create a genesis block with all the PEM data in the CLI right now","username":"yacovm","ts":"2017-02-11T21:28:27.511Z"}
{"msg":"but these are all talks, we can't even create a genesis block with all the PEM data with the CLI right now","username":"yacovm","ts":"2017-02-11T21:28:27.511Z"}
{"msg":"CLI sucks  ;)","username":"mastersingh24","ts":"2017-02-11T21:32:14.824Z"}
{"msg":"hopefully we'll get all of @jyellick 's config stuff in soon and then we can get this going correctly","username":"mastersingh24","ts":"2017-02-11T21:33:33.294Z"}
{"msg":"Working as fast as I can, CI not doing us any favors right now.  But we should be able to scope anchor peer definition together with MSP definition soon.","username":"jyellick","ts":"2017-02-11T21:35:09.799Z"}
{"msg":"CLI does NOT suck ;-) and if it does, we should make it not suck","username":"muralisr","ts":"2017-02-11T21:35:51.209Z"}
{"msg":"1) Regarding the anchor peers- we would need to get rid of the PEM material in the `peer channel create` call but we would still need a list of host:port. \nI think a commit can be cooked prior to Jason finishing\n2) Regarding the MSPs- there are still some stuff that need to be read from the CLI and can't be \"just magically appear\" in the genesis block. We need to enumerate all of these (Or, maybe they were but I'm simply not aware and in that case please point me to a JIRA if possible)","username":"yacovm","ts":"2017-02-11T21:39:21.669Z"}
{"msg":"1) Regarding the anchor peers- we would need to get rid of the PEM material in the `peer channel create` call but we would still need a list of host:port. \nI think a commit can be cooked and then frozen until Jason finishes.\n2) Regarding the MSPs- there are still some stuff that need to be read from the CLI and can't be \"just magically appear\" in the genesis block. We need to enumerate all of these (Or, maybe they were but I'm simply not aware and in that case please point me to a JIRA if possible)","username":"yacovm","ts":"2017-02-11T21:39:21.669Z"}
{"msg":"the CLI is NOT a good client.  The fact that we try to make it be both a CLI for the peer running as a server and running as a client has been a big problem and with all of these new API calls (join channel, etc), things are even worse.  Also - not sure why we attempt to configure anything directly related to the orderer via the peer CLI","username":"mastersingh24","ts":"2017-02-11T22:02:59.316Z"}
{"msg":"we need a REAL Go client SDK and if we want to build a CLI for the fabric we should be using that.  But trying to add all commands to the peer executable has not worked well in a long time","username":"mastersingh24","ts":"2017-02-11T22:04:04.849Z"}
{"msg":"@yacovm  - and while this is not something you did, I seriously question why we need to specify the MSPID for crypto operations.  I don't understand why they are not strictly channel scoped.  It would then be quite easy to build up the root of trust on a per channel basis.  then there would never be a need to associate an anchor peer with an MSPID","username":"mastersingh24","ts":"2017-02-11T22:06:12.503Z"}
{"msg":"I was under the impression that the MSP-ID is a way of identifying an organization in the MSP layer, isn't it? How can an MSP be channel scoped? it's built from root CA certs, and other stuff. ","username":"yacovm","ts":"2017-02-11T22:09:37.885Z"}
{"msg":"About the anchor peers- well, as you know- I work with what I get, and if I get a serializedIdentity constructor method that needs an MSP-ID, i give it an MSP-ID :)","username":"yacovm","ts":"2017-02-11T22:10:31.759Z"}
{"msg":"@yacovm  - given a channel, it has a list of MSPs.  There is no reason why you could not build a per channel trust store which includes all the root / intermediates for all MSPs defined in the channel","username":"mastersingh24","ts":"2017-02-11T22:14:19.633Z"}
{"msg":"By the way, to use TLS \"out of the box\", we are going to need to build a trust store that includes all MSPs for all channels for a which the peer is a meber","username":"mastersingh24","ts":"2017-02-11T22:15:17.446Z"}
{"msg":"By the way, to use TLS \"out of the box\", we are going to need to build a trust store that includes all MSPs for all channels for a which the peer is a member","username":"mastersingh24","ts":"2017-02-11T22:15:17.446Z"}
{"msg":"You already did 90% of the needed work","username":"yacovm","ts":"2017-02-11T22:17:33.004Z"}
{"msg":"Regarding your MSP comment- what I think they do is:\n- Grab an identity\n- extract the MSP id\n- go to the peer's MSP by that id\n- ask the MSP- hey, is this identity ok?","username":"yacovm","ts":"2017-02-11T22:21:04.267Z"}
{"msg":"this is a more \"precise\" way of validating signatures","username":"yacovm","ts":"2017-02-11T22:21:53.152Z"}
{"msg":"I can see it being more efficient if there are a lot of members per channel.  but it is really ugly from the client / mgmt perspective - meaning for example when you build an app using one of the SDKs, you actually prepend the MSPID to the public cert bytes in creator field.  I just think its ugly  ;)","username":"mastersingh24","ts":"2017-02-11T22:27:48.975Z"}
{"msg":"On the CLI topic - I am not faulting what we have now as much as saying that it needs to be rethought given all the new config complexities of configuration","username":"mastersingh24","ts":"2017-02-11T22:44:46.358Z"}
{"msg":"but there are SO many changes happening that starting any revamp did not seem to make sense","username":"mastersingh24","ts":"2017-02-11T22:45:11.557Z"}
{"msg":"right @mastersingh24 agreed ...especially `we need a REAL Go client SDK and if we want to build a CLI for the fabric we should be using that. But trying to add all commands to the peer executable has not worked well in a long time`","username":"muralisr","ts":"2017-02-11T23:01:40.039Z"}
{"msg":"the main thing I like about CLI is that its a minimal interface.. you have the fabric, you got something to drive it immediately","username":"muralisr","ts":"2017-02-11T23:02:11.655Z"}
{"msg":"but its boundaries need to be defined and its uses AND limitations spelled out. ","username":"muralisr","ts":"2017-02-11T23:03:01.900Z"}
{"msg":"but oh for a GO SDK","username":"muralisr","ts":"2017-02-11T23:03:08.825Z"}
{"msg":"luckily there are some nice folks working on a Go SDK  ;)","username":"mastersingh24","ts":"2017-02-12T00:06:54.990Z"}
{"msg":"@muralisr  - are you working on that earlier issue that was failing in CI (occasionally)?","username":"mastersingh24","ts":"2017-02-12T00:07:38.813Z"}
{"msg":"looks like you were correct - there are times with the payload of the chaincodemessage is not a response (like FSM errors)","username":"mastersingh24","ts":"2017-02-12T00:08:18.323Z"}
{"msg":" @mastersingh24 ... fixed in https://gerrit.hyperledger.org/r/#/c/5889/","username":"muralisr","ts":"2017-02-12T00:47:42.046Z"}
{"msg":"@cbf @rjones or others.  What is our policy on clicking the submit button?  If your own CR has two +2s from other maintainers, is it okay to click 'submit'?  I've been avoiding this, but especially in cases where a CR is dependent on previous ones being merged, the second +2 may not have the ability to submit at review time.  Just curious.","username":"jyellick","ts":"2017-02-12T01:48:28.212Z"}
{"msg":"@mastersingh24 I was referring to this comment: https://chat.hyperledger.org/channel/fabric-maintainers?msg=6dwY5dEQHCAZp9AtA","username":"greg.haskins","ts":"2017-02-12T03:03:39.976Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6dwY5dEQHCAZp9AtA","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6dwY5dEQHCAZp9AtA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I was commenting that whatever services we have (be it name resolution, discovery, etc, please make it integrated tightly","username":"greg.haskins","ts":"2017-02-12T03:04:13.004Z"}
{"msg":"e.g. /network endpoint as in your example vs, say, mDNS + SRV records","username":"greg.haskins","ts":"2017-02-12T03:04:52.568Z"}
{"msg":"Has joined the channel.","username":"hanhzf","ts":"2017-02-12T04:10:51.666Z","type":"uj"}
{"msg":"@jyellick personally, I don't have a problem with a submitter merging a change. This is a governance issue, or a social contract, so I'm not the right person to give you an authoritative answer","username":"rjones","ts":"2017-02-12T04:48:32.408Z"}
{"msg":"Understood, just thought there might be some standard practice standard across many LF projects","username":"jyellick","ts":"2017-02-12T05:24:36.728Z"}
{"msg":"Understood, just thought there might be some standard practice across many LF projects","username":"jyellick","ts":"2017-02-12T05:24:36.728Z"}
{"msg":"@jyellick My take is similar to @ry.  I don't have a problem with it if the 2+2 is already met, though I try not to do it unless exceptional circumcstances","username":"greg.haskins","ts":"2017-02-12T14:57:04.662Z"}
{"msg":"Like critical fix on a Saturday or something","username":"greg.haskins","ts":"2017-02-12T14:57:25.170Z"}
{"msg":"Generally it's pretty rare this ever happens","username":"greg.haskins","ts":"2017-02-12T14:57:54.911Z"}
{"msg":"Usually the last +2 excutes the merge I find ","username":"greg.haskins","ts":"2017-02-12T14:58:13.811Z"}
{"msg":"recently CI has had more chaincode test than usual. *<details>*This was caused by race in sending events over ... now that \"init\" is being treated like any other transaction we can /should use the same path *</details>* ... good news is the fix is simple and is mainly removal (firther streamlining of code) ... https://jira.hyperledger.org/browse/FAB-2203. Will have a fix shortly","username":"muralisr","ts":"2017-02-12T23:04:12.636Z"}
{"msg":"recently CI has had more chaincode test failures than usual. *<details>*This was caused by race in sending events over ... now that \"init\" is being treated like any other transaction we can /should use the same path *</details>* ... good news is the fix is simple and is mainly removal (firther streamlining of code) ... https://jira.hyperledger.org/browse/FAB-2203. Will have a fix shortly","username":"muralisr","ts":"2017-02-12T23:04:12.636Z"}
{"msg":"(sorry @rjones)","username":"muralisr","ts":"2017-02-12T23:11:42.726Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ERLz5Dp65Z4cPLBfR) @jyellick LF provides structure, but each project (and really, each working group in each project) determines the rules they operate under","username":"rjones","ts":"2017-02-12T23:12:28.713Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ERLz5Dp65Z4cPLBfR","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ERLz5Dp65Z4cPLBfR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=seCWwswDNkrJ9gSEk) @muralisr eh? nothing to apologize for.","username":"rjones","ts":"2017-02-12T23:12:49.868Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=seCWwswDNkrJ9gSEk","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=seCWwswDNkrJ9gSEk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I am fairly certain you might have been spending time wondering about these CI failures. :-) @rjones ","username":"muralisr","ts":"2017-02-12T23:14:20.808Z"}
{"msg":"Yes, a little. :)","username":"rjones","ts":"2017-02-12T23:15:13.436Z"}
{"msg":"I noticed I had accidentally left the permissions on github/fabric open to you all. I've removed that permission; if this causes you any troubles please let me know so we can work on it","username":"rjones","ts":"2017-02-13T00:00:17.557Z"}
{"msg":"submitted easy CR https://gerrit.hyperledger.org/r/#/c/5919 . CI succeeding first time out of the bat woukd be a good indication that https://jira.hyperledger.org/browse/FAB-2203 is fixed (going a bit on the limb here :-) )","username":"muralisr","ts":"2017-02-13T00:29:24.050Z"}
{"msg":"it took one more CR actually https://gerrit.hyperledger.org/r/#/c/5923 ... and with https://gerrit.hyperledger.org/r/#/c/5919 should help a lot with CI ","username":"muralisr","ts":"2017-02-13T04:07:52.897Z"}
{"msg":"I think we need to make this one: https://gerrit.hyperledger.org/r/#/c/5691/1 in, unless people will keep struggling to run steps from: http://hyperledger-fabric.readthedocs.io/en/latest/gettingstarted/","username":"C0rWin","ts":"2017-02-13T09:14:06.842Z"}
{"msg":"@bmos299, @rameshthoomu can you please verify the CR and confirm it valid to be merged?","username":"C0rWin","ts":"2017-02-13T09:15:34.772Z"}
{"msg":"Has joined the channel.","username":"bmos299","ts":"2017-02-13T09:15:34.825Z","type":"uj"}
{"msg":"@rameshthoomu Please sign https://gerrit.hyperledger.org/r/#/c/5691/2 !","username":"rjones","ts":"2017-02-13T14:32:29.927Z"}
{"msg":"@mastersingh24 @binhn @yacovm  @rjones  @muralisr   Can we get priority on https://gerrit.hyperledger.org/r/#/c/5899/   This will let the SDKs create test that are end to end again without a side process to install the chaincode.","username":"rickr","ts":"2017-02-13T18:27:43.938Z"}
{"msg":"Has joined the channel.","username":"cdaughtr","ts":"2017-02-13T18:29:35.376Z","type":"uj"}
{"msg":"@rickr I have no voting rights (or expertise) on that project","username":"rjones","ts":"2017-02-13T18:30:41.100Z"}
{"msg":"I stated my opinion. I do not think that the remote=true thing makes sense. The CLI is hard to use even now. I think we need to have normal flags and jf you already add a flag jn that cr, then it needa to be something that does it right","username":"yacovm","ts":"2017-02-13T18:31:37.120Z"}
{"msg":"all CLI commands (at least all chaincode commands) so far have been on remote calls @yacovm and the default is to use CORE_PEER_ADDRESS. This is the one time where it is reversed - you are not doing an operation on the channel but doing it on the local peer.  I just wanted that distinction","username":"muralisr","ts":"2017-02-13T18:38:16.715Z"}
{"msg":"it might make sense to remove the \"local\" option altogether and just have remote - which is not a bad option","username":"muralisr","ts":"2017-02-13T18:38:48.332Z"}
{"msg":"then it'll be uniform with other commands but we might lost the fact that is \"installed\" on the peer as opposed to a channel save","username":"muralisr","ts":"2017-02-13T18:41:06.478Z"}
{"msg":"but that might just be an education thing and I'm fine with that change ... what do you think @binhn @yacovm ? Get rid of local install altighter in favor of using CORE_PEER_ADDRESS ?","username":"muralisr","ts":"2017-02-13T18:41:54.599Z"}
{"msg":"@rickr working on it","username":"binhn","ts":"2017-02-13T18:58:08.122Z"}
{"msg":"@muralisr yes, that would simplify for the user","username":"binhn","ts":"2017-02-13T18:59:35.697Z"}
{"msg":"yes I think this is the best course of action","username":"yacovm","ts":"2017-02-13T18:59:42.503Z"}
{"msg":"works for me too, thanks for the feed back @yacovm @binhn ","username":"muralisr","ts":"2017-02-13T19:00:15.532Z"}
{"msg":"will push shortly","username":"muralisr","ts":"2017-02-13T19:00:19.177Z"}
{"msg":"I'm not at home in the next 2 hours so don't expect anything immediate ","username":"yacovm","ts":"2017-02-13T19:09:34.794Z"}
{"msg":"you know, being in a different continent, and all","username":"yacovm","ts":"2017-02-13T19:10:08.432Z"}
{"msg":"how disappointing @yacovm  - we expect you to be availing at our beckon call  ;)","username":"mastersingh24","ts":"2017-02-13T19:55:49.088Z"}
{"msg":"how disappointing @yacovm  - we expect you to be availing at our beck and call  ;)","username":"mastersingh24","ts":"2017-02-13T19:55:49.088Z"}
{"msg":"Actually I'm back, the rain got me by surprise. Got back home all soaked","username":"yacovm","ts":"2017-02-13T19:56:17.754Z"}
{"msg":"have you agreed that the fabric-docs repo should be created, and the discussion is how to populate it - or are you @all discussing if the repo should be created at all? WRT https://jira.hyperledger.org/browse/FAB-2114?filter=-1","username":"rjones","ts":"2017-02-13T20:38:48.560Z"}
{"msg":"Has joined the channel.","username":"pmullaney","ts":"2017-02-13T21:17:23.411Z","type":"uj"}
{"msg":"so in the block structure, what is the difference/purpose for `Data` and `Metadata`?? i'm looking at the contents of my block and they seem awfully similar in content","username":"dshuffma","ts":"2017-02-14T20:37:40.078Z"}
{"msg":"","username":"dshuffma","ts":"2017-02-14T20:39:22.044Z","attachments":[{"title":"File Uploaded: Clipboard","title_link":"/file-upload/nBpAXqX7rgKGtfND5/Clipboard","image_url":"/file-upload/nBpAXqX7rgKGtfND5/Clipboard","image_type":"image/png","image_size":9098,"url":"/file-upload/nBpAXqX7rgKGtfND5/Clipboard","remote":false,"fileId":"nBpAXqX7rgKGtfND5"}]}
{"msg":"(@dshuffma: Let's take it #fabric, I'll respond there.)","username":"kostas","ts":"2017-02-14T20:51:30.617Z"}
{"msg":"(@dshuffma: Let's take it to #fabric, I'll respond there.)","username":"kostas","ts":"2017-02-14T20:51:30.617Z"}
{"msg":"Has joined the channel.","username":"mbaizan","ts":"2017-02-15T13:00:52.267Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jansony1","ts":"2017-02-15T17:15:32.541Z","type":"uj"}
{"msg":"Has joined the channel.","username":"murrekatt","ts":"2017-02-16T06:16:38.855Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jojocheung","ts":"2017-02-16T07:17:23.156Z","type":"uj"}
{"msg":"Has joined the channel.","username":"wutongtree","ts":"2017-02-16T10:06:48.898Z","type":"uj"}
{"msg":"Has joined the channel.","username":"alviontaran","ts":"2017-02-16T16:20:21.997Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ylsGit","ts":"2017-02-17T02:29:04.545Z","type":"uj"}
{"msg":"An easy one that needs a \"3rd\" +2: https://gerrit.hyperledger.org/r/#/c/5027","username":"JonathanLevi","ts":"2017-02-17T18:37:30.632Z"}
{"msg":"(already approved, but a manual rebase was needed)","username":"JonathanLevi","ts":"2017-02-17T18:37:59.222Z"}
{"msg":"with https://gerrit.hyperledger.org/r/#/c/6161 end-to-end tests  work (channel create/join, chaincode install/instantiate/invoke/query)","username":"muralisr","ts":"2017-02-17T20:16:08.957Z"}
{"msg":"@rjones has there been any modifications to gerrit? Something odd going on, trying to push an update to a patchset and its trying to upload to a (different) closed item.. From what I read, gerrit picks where to drop this based on ChangeId, which I left the same..","username":"vpaprots","ts":"2017-02-17T21:50:29.878Z"}
{"msg":"@vpaprots link please?","username":"rjones","ts":"2017-02-17T22:19:47.074Z"}
{"msg":"I suspect the other change is on a different branch","username":"rjones","ts":"2017-02-17T22:20:09.610Z"}
{"msg":"Ended up pushing to ref directly..","username":"vpaprots","ts":"2017-02-17T22:20:32.864Z"}
{"msg":"vpapro@volodymyrs-mbp:~/git/src/github.com/hyperledger/fabric$ git push origin HEAD:refs/for/master\nCounting objects: 600, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (318/318), done.\nWriting objects: 100% (600/600), 135.16 KiB | 0 bytes/s, done.\nTotal 600 (delta 436), reused 367 (delta 263)\nremote: Resolving deltas: 100% (436/436)\nremote: Processing changes: refs: 1, done    \nTo ssh://gerrit.hyperledger.org:29418/fabric\n ! [remote rejected] HEAD -> refs/for/master (change http://gerrit.hyperledger.org/r/5705 closed)\nerror: failed to push some refs to 'ssh://vpaprots@gerrit.hyperledger.org:29418/fabric'\nvpapro@volodymyrs-mbp:~/git/src/github.com/hyperledger/fabric$ git push origin HEAD:refs/changes/97/5897\nCounting objects: 600, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (318/318), done.\nWriting objects: 100% (600/600), 135.16 KiB | 0 bytes/s, done.\nTotal 600 (delta 436), reused 367 (delta 263)\nremote: Resolving deltas: 100% (436/436)\nremote: Processing changes: updated: 1, refs: 1, done    \nremote: \nremote: Updated Changes:\nremote:   http://gerrit.hyperledger.org/r/5897 [FAB-1647] Yaml used to configure BCCSP\nremote: \nTo ssh://gerrit.hyperledger.org:29418/fabric\n * [new branch]      HEAD -> refs/changes/97/5897\nvpapro@volodymyrs-mbp:~/git/src/github.com/hyperledger/fabric$ \n","username":"vpaprots","ts":"2017-02-17T22:20:37.429Z"}
{"msg":"5705 is merged. you can't re-use the change ID, it needs to be unique. that's what the error says.","username":"rjones","ts":"2017-02-17T22:22:18.729Z"}
{"msg":"yep, except I was on 5897","username":"vpaprots","ts":"2017-02-17T22:22:52.577Z"}
{"msg":"no clue why it got into its head to use 5705..","username":"vpaprots","ts":"2017-02-17T22:23:11.572Z"}
{"msg":"http://stackoverflow.com/questions/24457418/how-to-change-a-patchset-and-push-it-as-a-new-one","username":"vpaprots","ts":"2017-02-17T22:23:20.064Z"}
{"msg":"that says if I leave the `Change-Id` the same, it will match to existing, if I remove, it will upload to new..","username":"vpaprots","ts":"2017-02-17T22:24:03.217Z"}
{"msg":"I had given up, tried uploading to new patchset by removing Change-Id.. still 5705!","username":"vpaprots","ts":"2017-02-17T22:24:37.173Z"}
{"msg":"could I ask you to rebase? `git fetch origin master (or whateveer)` `git rebase -i origin/master`","username":"rjones","ts":"2017-02-17T22:27:03.408Z"}
{"msg":"I suspect you are building on unmerged changes or something","username":"rjones","ts":"2017-02-17T22:27:19.943Z"}
{"msg":"sure.. though, that was exactly what I was doing.. it was several hours ago, so I buy that I am yet again out of sync :(","username":"vpaprots","ts":"2017-02-17T22:29:29.150Z"}
{"msg":"https://gerrit-review.googlesource.com/Documentation/user-upload.html#push_replace","username":"vpaprots","ts":"2017-02-17T22:30:11.865Z"}
{"msg":"did the 'manual replacement mapping' per that doc","username":"vpaprots","ts":"2017-02-17T22:30:43.566Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/6219 has been rebased to use https://gerrit.hyperledger.org/r/#/c/6225.. once it succeeds hopefully master will be back on track","username":"muralisr","ts":"2017-02-18T22:40:48.003Z"}
{"msg":"@muralisr merged","username":"greg.haskins","ts":"2017-02-19T02:10:49.303Z"}
{"msg":"ty @greg.haskins ","username":"muralisr","ts":"2017-02-19T13:52:18.412Z"}
{"msg":"np...keep an eye on https://gerrit.hyperledger.org/r/#/c/6167/","username":"greg.haskins","ts":"2017-02-19T13:52:50.475Z"}
{"msg":"i think the remaining issues are fixed, waiting on CI","username":"greg.haskins","ts":"2017-02-19T13:52:57.605Z"}
{"msg":"I thaught heard some _talk_ of fabric having some issues is that all cleared up now ?","username":"rickr","ts":"2017-02-19T16:48:00.398Z"}
{"msg":"@greg.haskins started looking at 6167 and parents (looks real good but need a bit more time) ","username":"muralisr","ts":"2017-02-19T18:08:14.828Z"}
{"msg":"@rickr as far as I can tell the CLI based e2e is working but we are still working thru some issues from node-SDK ( @bretharrison and @adc might know more)","username":"muralisr","ts":"2017-02-19T18:09:20.239Z"}
{"msg":"Has joined the channel.","username":"bretharrison","ts":"2017-02-19T18:09:20.271Z","type":"uj"}
{"msg":"still looking at it","username":"bretharrison","ts":"2017-02-19T18:10:20.507Z"}
{"msg":"so, we (are trying to have the node-SDK generating a proper txid. The issue is all about converting the output of the hash function to a string","username":"adc","ts":"2017-02-19T18:18:34.100Z"}
{"msg":"• https://gerrit.hyperledger.org/r/5929","username":"sanchezl","ts":"2017-02-20T05:27:23.498Z"}
{"msg":"• https://gerrit.hyperledger.org/r/5857","username":"sanchezl","ts":"2017-02-20T05:28:25.279Z"}
{"msg":"@all CI tests are failing intermittently due to the new CouchDB tests that were merged last night.  I have a fix to disable the new CouchDB tests until we resolve the underlying problem. https://gerrit.hyperledger.org/r/#/c/6281/ Please +2 and merge as soon as possible.","username":"dave.enyeart","ts":"2017-02-20T15:04:58.914Z"}
{"msg":"It passed verification and has two +2.  Please merge.","username":"dave.enyeart","ts":"2017-02-20T16:11:37.894Z"}
{"msg":"@binhn @muralisr so at this point there's really no escc, vscc to be specified during chaincode deploy from the SDK correct? the endorser code uses only one of those each","username":"jimthematrix","ts":"2017-02-20T16:15:14.908Z"}
{"msg":"these is a default one but you don't have to specify that in your test if you want to use the default one","username":"binhn","ts":"2017-02-20T16:20:03.004Z"}
{"msg":"do we have anything beyond the single signature at this point?","username":"mastersingh24","ts":"2017-02-20T16:20:19.562Z"}
{"msg":"the api should allow the user to pass in their e/vscc","username":"binhn","ts":"2017-02-20T16:20:23.658Z"}
{"msg":"are we going to support custom escc and vscc?","username":"jimthematrix","ts":"2017-02-20T16:20:30.568Z"}
{"msg":"need to decide if we need to have that in the API at all","username":"jimthematrix","ts":"2017-02-20T16:20:38.772Z"}
{"msg":"we should AVOID people writing custom ESCC / VSCC though  ;)","username":"mastersingh24","ts":"2017-02-20T16:20:41.742Z"}
{"msg":"of course","username":"binhn","ts":"2017-02-20T16:20:42.274Z"}
{"msg":"@mastersingh24 from cli, you can see it support polish notation","username":"binhn","ts":"2017-02-20T16:21:42.752Z"}
{"msg":"from api, we accept a signature policy proto","username":"binhn","ts":"2017-02-20T16:22:00.214Z"}
{"msg":"ah - sorry - right","username":"mastersingh24","ts":"2017-02-20T16:22:02.414Z"}
{"msg":"I get confused the vscc actually enforces the policy","username":"mastersingh24","ts":"2017-02-20T16:22:13.929Z"}
{"msg":"escc is just for signing the response","username":"mastersingh24","ts":"2017-02-20T16:22:23.364Z"}
{"msg":"right","username":"binhn","ts":"2017-02-20T16:22:34.571Z"}
{"msg":"@mastersingh24 you had asked why not FROM scratch","username":"greg.haskins","ts":"2017-02-21T01:29:46.564Z"}
{"msg":"its basically the same issue that killed the busybox effort: glibc/dns","username":"greg.haskins","ts":"2017-02-21T01:30:23.026Z"}
{"msg":"otherwise, that is exactly what I would have done","username":"greg.haskins","ts":"2017-02-21T01:30:40.754Z"}
{"msg":"(I created the hyperledger/fabric-baseos image as an alternative to the scratch/busybox option)","username":"greg.haskins","ts":"2017-02-21T01:31:12.713Z"}
{"msg":"its not as small of course, but its also not broken ;)","username":"greg.haskins","ts":"2017-02-21T01:31:29.689Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=vbzeKqiQSvNFeHYcN) @greg.haskins (For my own edification, what is a _slightly_ more expanded version of the `glibc/dns` issue?)","username":"kostas","ts":"2017-02-21T02:17:57.944Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=vbzeKqiQSvNFeHYcN","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=vbzeKqiQSvNFeHYcN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@kostas https://jira.hyperledger.org/browse/FAB-1652","username":"greg.haskins","ts":"2017-02-21T02:19:24.739Z"}
{"msg":"in a nutshell, on any glibc based system, even compiling with -static doesnt completely decouple you from the host's .so files","username":"greg.haskins","ts":"2017-02-21T02:20:07.122Z"}
{"msg":"this is because of how glibc implements the NSS feature","username":"greg.haskins","ts":"2017-02-21T02:20:25.279Z"}
{"msg":"it materializes as a DNS issue because your static binary looks/acts like a static binary, but at runtime calls to functions like gethostbyname() will try to dlopen some of the nss runtime","username":"greg.haskins","ts":"2017-02-21T02:21:30.825Z"}
{"msg":"which, with something like scratch/busybox wont be there","username":"greg.haskins","ts":"2017-02-21T02:21:45.695Z"}
{"msg":"most of the solutions were non-trivial when considering things like supportability and multi-arch","username":"greg.haskins","ts":"2017-02-21T02:23:09.541Z"}
{"msg":"so, ultimately, I created \"baseos\" as a next-best thing and with the understanding that it could be revisited someday","username":"greg.haskins","ts":"2017-02-21T02:23:46.578Z"}
{"msg":"@greg.haskins: Thank you for explaining this. I have read a few best-of practices for Docker, had seen the scratch image mentioned time and time again, and was wondering why we were going a different route. Now I know :)","username":"kostas","ts":"2017-02-21T13:30:08.196Z"}
{"msg":"@greg.haskins: Thank you for explaining this. I have read a few best-of practices for Docker, had seen the scratch image mentioned time and time again, and was wondering why we were going a different route. Now I know :slight_smile: ","username":"kostas","ts":"2017-02-21T13:30:08.196Z"}
{"msg":"yeah, it would have been awesome","username":"greg.haskins","ts":"2017-02-21T13:30:23.825Z"}
{"msg":"we were using it until I found the DNS bug","username":"greg.haskins","ts":"2017-02-21T13:30:32.577Z"}
{"msg":"the chaincode containers would be ~15M","username":"greg.haskins","ts":"2017-02-21T13:30:57.345Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=SaPXYGYb9396jNCYf) @greg.haskins to be clear, I meant we were using it to minimize the peer/orderer/ca....it hadnt been introduced to the chaincode at that time","username":"greg.haskins","ts":"2017-02-21T13:31:33.847Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=SaPXYGYb9396jNCYf","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=SaPXYGYb9396jNCYf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"in the end, I think it actually matters little because of how docker works","username":"greg.haskins","ts":"2017-02-21T13:32:05.607Z"}
{"msg":"i.e. if \"baseos\" is 5MB or 150MB, you only pay that cost once","username":"greg.haskins","ts":"2017-02-21T13:32:30.871Z"}
{"msg":"regardless of the number of containers","username":"greg.haskins","ts":"2017-02-21T13:32:39.146Z"}
{"msg":"but, optics-wise, it looks better to have the container be smaller...and if anything ever gets into the situation where the chaincode containers need to be transferred around, smaller is better (not sure what the use case would be, but perhaps hosts like bluemix can take advantage)","username":"greg.haskins","ts":"2017-02-21T13:33:53.252Z"}
{"msg":"the bigger win IMO is the elimination of unnecessary tools","username":"greg.haskins","ts":"2017-02-21T13:34:26.877Z"}
{"msg":"from a security perspective","username":"greg.haskins","ts":"2017-02-21T13:34:44.788Z"}
{"msg":"Has left the channel.","username":"bretharrison","ts":"2017-02-21T14:05:49.502Z","type":"ul"}
{"msg":"Has joined the channel.","username":"sb2407","ts":"2017-02-21T18:35:12.744Z","type":"uj"}
{"msg":"Hello fellow maintainers.  I've officially sent a request proposing that Fabric graduate from incubation to active status.  It's been a long time coming with a lot of hard work from the community.  This will be a great achievement.  Here's a link to the proposal:   https://docs.google.com/document/d/1UQwQdAfK9DwTpGFQmIF7HU4YBTpx0ZG1VbdtGW1hlIQ/edit?usp=sharing","username":"mastersingh24","ts":"2017-02-22T13:34:25.495Z"}
{"msg":"Has joined the channel.","username":"psa","ts":"2017-02-22T15:55:59.079Z","type":"uj"}
{"msg":"This project is definitely on the *active* side...","username":"JonathanLevi","ts":"2017-02-22T22:06:15.582Z"}
{"msg":"Well, let's hope this goes through b/c this project is definitely on the *active* side... ","username":"JonathanLevi","ts":"2017-02-22T22:12:19.418Z"}
{"msg":"Exciting!  ","username":"weeds","ts":"2017-02-23T19:18:39.015Z"}
{"msg":"Yes, certainly.\n\nBTW: on that note, the TSC vote regarding *fabric* will take place on Mar 2nd...","username":"JonathanLevi","ts":"2017-02-23T19:49:39.688Z"}
{"msg":"what you guys think about removing z-linux CI?  it hasn't been stabled and causing so much delay in getting the CRs merged. I know it's important to do CI on all but z hasn't been stabled since it's introduced","username":"binhn","ts":"2017-02-24T14:23:05.536Z"}
{"msg":"what you guys think about removing z-linux CI?  it hasn't been stable and causing so much delay in getting the CRs merged. I know it's important to do CI on all but z hasn't been stabled since it's introduced","username":"binhn","ts":"2017-02-24T14:23:05.536Z"}
{"msg":"Please let's do this. Time isn't on our side and these CI situation isn't helping","username":"yacovm","ts":"2017-02-24T14:29:45.518Z"}
{"msg":"being removed by ramesh","username":"binhn","ts":"2017-02-24T14:43:59.301Z"}
{"msg":"@binhn I have submitted patch to disable voting for z jobs.. @rjones or @jwagantall have to merge this patch https://gerrit.hyperledger.org/r/#/c/6483/","username":"rameshthoomu","ts":"2017-02-24T15:45:58.723Z"}
{"msg":"@binhn I have submitted patch to disable voting for power jobs.. @rjones or @jwagantall has to merge this patch https://gerrit.hyperledger.org/r/#/c/6483/","username":"rameshthoomu","ts":"2017-02-24T15:45:58.723Z"}
{"msg":"@binhn I have submitted patch to disable voting for power jobs.. @rjones or @jwagantall have to merge this patch https://gerrit.hyperledger.org/r/#/c/6483/","username":"rameshthoomu","ts":"2017-02-24T15:45:58.723Z"}
{"msg":"Has joined the channel.","username":"jwagantall","ts":"2017-02-24T15:45:58.762Z","type":"uj"}
{"msg":"@binhn done","username":"rjones","ts":"2017-02-24T16:14:54.746Z"}
{"msg":"thanks @rjones ","username":"rameshthoomu","ts":"2017-02-24T16:15:08.336Z"}
{"msg":"CRs https://gerrit.hyperledger.org/r/#/c/6489/ https://gerrit.hyperledger.org/r/#/c/6379/ https://gerrit.hyperledger.org/r/#/c/5955/  should provide a stable commit level for the fabric with end to end function working with multiple MSPs, orgs and so forth....they have been reviewed, cherry picked and tested. Plan to test/merge these in within the next few hours. Unless urgent it'll be good to hold of other CRs till then","username":"muralisr","ts":"2017-02-24T22:16:09.166Z"}
{"msg":"at  `commit bb5a53f9c1f3c4427c1182ee6d93f7969ac40ebf`  - confirm various tests pass after merging and testing. We can start working on other CRs now. Thanks for the patience!","username":"muralisr","ts":"2017-02-25T00:03:21.702Z"}
{"msg":"Has joined the channel.","username":"blackskygg","ts":"2017-02-25T16:52:35.936Z","type":"uj"}
{"msg":"Hi there. I am in a team working on a blockchain project, and we've chosen fabric as our base platform. But we want the ability to quantify the resources used by every chaincode execution. So we want to know if  there are any maintainers currently working on integrating fabric with Ethereum EVM or doing similar things.","username":"blackskygg","ts":"2017-02-25T16:57:07.896Z"}
{"msg":"Looking for reviews on these two simple changes to fix up the permissions on some files that we flag as suspicious. It's currently blocking me from deploying any golang chaincode:\n• https://gerrit.hyperledger.org/r/6531\n• https://gerrit.hyperledger.org/r/6529","username":"sanchezl","ts":"2017-02-25T20:39:49.493Z"}
{"msg":"@sanchezl https://gerrit.hyperledger.org/r/#/c/6531/ is just file perm change ?","username":"muralisr","ts":"2017-02-25T20:47:27.644Z"}
{"msg":"oh both are ?","username":"muralisr","ts":"2017-02-25T20:47:47.523Z"}
{"msg":"","username":"sanchezl","ts":"2017-02-25T20:48:08.720Z","attachments":[{"title":"File Uploaded: Clipboard","title_link":"/file-upload/GcbnJeaJZgBYqtxmx/Clipboard","image_url":"/file-upload/GcbnJeaJZgBYqtxmx/Clipboard","image_type":"image/png","image_size":31587,"url":"/file-upload/GcbnJeaJZgBYqtxmx/Clipboard","remote":false,"fileId":"GcbnJeaJZgBYqtxmx"}]}
{"msg":"correct ","username":"sanchezl","ts":"2017-02-25T20:48:09.723Z"}
{"msg":"ok","username":"muralisr","ts":"2017-02-25T20:49:03.715Z"}
{"msg":"Just file perm change on both (one for fabric repo, a second set for fabric-ca repo)","username":"sanchezl","ts":"2017-02-25T20:49:08.622Z"}
{"msg":"waiting for CI","username":"muralisr","ts":"2017-02-25T20:49:09.241Z"}
{"msg":"(also @sanchezl some people look only in fabric-pr-review for CRs to review... you may want to post there going forward)","username":"muralisr","ts":"2017-02-25T21:17:37.271Z"}
{"msg":"@blackskygg i think you might want to ask that question on the fabric- composer channel","username":"weeds","ts":"2017-02-25T22:38:55.315Z"}
{"msg":"@weeds Thanks","username":"blackskygg","ts":"2017-02-26T03:41:23.258Z"}
{"msg":"Has left the channel.","username":"blackskygg","ts":"2017-02-26T04:13:47.523Z","type":"ul"}
{"msg":"Has joined the channel.","username":"norinos","ts":"2017-02-27T10:03:27.572Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Hangyu","ts":"2017-02-27T10:05:31.768Z","type":"uj"}
{"msg":"Hi, all.. I tried to commit a changset to gerrit but failed at the compiling phase (got a -1 from Jobbuilder). This is a very trivial changset involves removing unused code. I tried twice but both were verified with failure (and the error messages ere different). Could anyone so kindly give me some advises on this?","username":"Hangyu","ts":"2017-02-27T10:06:05.489Z"}
{"msg":"Hello @Hangyu!\n1. Absolutely.\n2. What CR?\n3. Let's take it to the #fabric-pr-review channel?\n","username":"JonathanLevi","ts":"2017-02-27T11:30:56.683Z"}
{"msg":"do we have a powerpc channel anywhere?","username":"hgabre","ts":"2017-02-27T12:09:01.382Z"}
{"msg":"hi folks,  I'd like to hold all new functions from being merged to stabilize the code for beta.  We should only merge bug fixes, unit tests or bdd from now until we release the beta ","username":"binhn","ts":"2017-02-27T23:45:42.661Z"}
{"msg":"our current objective is to drive down this list https://jira.hyperledger.org/issues/?filter=10500 ","username":"binhn","ts":"2017-02-27T23:46:31.519Z"}
{"msg":"Has joined the channel.","username":"daijianw","ts":"2017-02-28T03:13:08.499Z","type":"uj"}
{"msg":"@binhn @jyellick @muralisr  For chain creation the  SDKs end users  need a config transaction file.  Where can I reference on how to create that ?","username":"rickr","ts":"2017-02-28T13:24:17.307Z"}
{"msg":"@rickr https://gerrit.hyperledger.org/r/#/c/6287/ puts the capability for creating config files for channel creation. It has a md on how to use the tool. We shoukd supplement that with a sample... will take that up ","username":"muralisr","ts":"2017-02-28T15:32:54.718Z"}
{"msg":"@rjones can we revert this back? ","username":"binhn","ts":"2017-02-28T15:38:31.958Z"}
{"msg":"@binhn revert exactly what?","username":"rjones","ts":"2017-02-28T15:43:34.474Z"}
{"msg":"@muralisr  @binhn   https://jira.hyperledger.org/browse/FAB-2536  \nSending initiate proposal causes Peer panic\n","username":"rickr","ts":"2017-02-28T15:43:36.062Z"}
{"msg":"@rjones undo this merge https://gerrit.hyperledger.org/r/#/c/6549 ","username":"binhn","ts":"2017-02-28T15:44:35.887Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/6633","username":"rjones","ts":"2017-02-28T15:46:40.141Z"}
{"msg":"@binhn ^^^","username":"rjones","ts":"2017-02-28T15:50:25.949Z"}
{"msg":"@rjones thanks","username":"binhn","ts":"2017-02-28T16:26:42.901Z"}
{"msg":"@binhn add reviewers you think are appropriate - not sure who that would be","username":"rjones","ts":"2017-02-28T16:27:20.890Z"}
{"msg":"will do","username":"binhn","ts":"2017-02-28T16:27:30.351Z"}
{"msg":"I posted the Fabric Go SDK proposal to the wiki","username":"troyronda","ts":"2017-02-28T23:26:11.572Z"}
{"msg":"(https://wiki.hyperledger.org/community/proposals | https://docs.google.com/document/d/1tYk3t8pF2mj4IGSzPvGopzKxSz8okTW749UyNqxTGZk)","username":"troyronda","ts":"2017-02-28T23:26:54.708Z"}
{"msg":"Has joined the channel.","username":"Donald Liu","ts":"2017-03-02T01:25:22.865Z","type":"uj"}
{"msg":"Has joined the channel.","username":"YueyueZhao","ts":"2017-03-02T11:08:30.948Z","type":"uj"}
{"msg":"Has left the channel.","username":"troyronda","ts":"2017-03-02T16:46:20.000Z","type":"ul"}
{"msg":"Has joined the channel.","username":"troyronda","ts":"2017-03-02T16:46:29.231Z","type":"uj"}
{"msg":"hi maintainers - just checking if you saw the proposal notice above? thanks 🙂","username":"troyronda","ts":"2017-03-02T16:54:56.208Z"}
{"msg":"so, heads up regarding https://gerrit.hyperledger.org/r/#/c/6741/","username":"cbf","ts":"2017-03-02T20:02:55.093Z"}
{"msg":"it's a biggun","username":"cbf","ts":"2017-03-02T20:03:00.191Z"}
{"msg":"however, it is _mostly_ a translation from markdown to RST so that we can take advantage of some of the styling features of RTD","username":"cbf","ts":"2017-03-02T20:03:42.558Z"}
{"msg":"however, it does include a reorg of content and some updated content","username":"cbf","ts":"2017-03-02T20:04:03.249Z"}
{"msg":"will try not to have this ever happen again;-) ","username":"cbf","ts":"2017-03-02T20:04:18.315Z"}
{"msg":"my recommendation to the team is to merge this and then undertake a thorough review of the docs which will be driven by @markparz on #fabric-documentation ","username":"cbf","ts":"2017-03-02T20:05:10.968Z"}
{"msg":"Has joined the channel.","username":"markparz","ts":"2017-03-02T20:05:11.008Z","type":"uj"}
{"msg":"Has joined the channel.","username":"RezwanKabir","ts":"2017-03-02T20:08:03.661Z","type":"uj"}
{"msg":"@cbf ;-)","username":"JonathanLevi","ts":"2017-03-02T20:28:28.611Z"}
{"msg":"can someone with more privilege undo this commit https://gerrit.hyperledger.org/r/#/c/6273  ?","username":"binhn","ts":"2017-03-02T20:33:40.948Z"}
{"msg":"vendoring files should not have been changed  ","username":"binhn","ts":"2017-03-02T20:34:19.706Z"}
{"msg":"@JonathanLevi @mastersingh24 ","username":"binhn","ts":"2017-03-02T20:34:46.810Z"}
{"msg":"what are you talking about?","username":"mastersingh24","ts":"2017-03-02T20:39:15.356Z"}
{"msg":"we vendor bccsp and it's been updated","username":"mastersingh24","ts":"2017-03-02T20:39:25.520Z"}
{"msg":"I am confused","username":"mastersingh24","ts":"2017-03-02T20:39:40.852Z"}
{"msg":"we need the latest version of bccsp","username":"mastersingh24","ts":"2017-03-02T20:39:50.922Z"}
{"msg":"the lastest of bccsp is in fabric, not here -- from this cr, a different code is here","username":"binhn","ts":"2017-03-02T20:41:17.316Z"}
{"msg":"??????","username":"mastersingh24","ts":"2017-03-02T20:43:07.785Z"}
{"msg":"this is the code from fabric","username":"mastersingh24","ts":"2017-03-02T20:43:23.490Z"}
{"msg":"no, it contains extra code from the author submitted by mistake","username":"binhn","ts":"2017-03-02T20:43:58.165Z"}
{"msg":"@vpaprots  - can you please comment here?","username":"mastersingh24","ts":"2017-03-02T20:44:40.641Z"}
{"msg":"probably we don't have to undo but just revendoring to get all back","username":"binhn","ts":"2017-03-02T20:44:55.109Z"}
{"msg":"I was prototyping what else I needed for fabric-ca.. GetBCCSPFromOpts in\nhttps://gerrit.hyperledger.org/r/#/c/6273/6/vendor/github.com/hyperledger/fabric/bccsp/factory/factory.go ","username":"vpaprots","ts":"2017-03-02T20:47:46.050Z"}
{"msg":"seems between rebases for the paired change (which is where that function was supposed to have stayed!!) I ended up merging into the revendor?","username":"vpaprots","ts":"2017-03-02T20:48:20.614Z"}
{"msg":"there are no calls to it, all the uses are coming in new code.. I just can't be going back and forth updating bccsp for every function, so was going to keep on working on collecting them all","username":"vpaprots","ts":"2017-03-02T20:49:51.101Z"}
{"msg":"ok - well it's going to end up in fabric/bccsp anyway, correct?   so really not sure what the big issue is?  these are two separate projects anyway","username":"mastersingh24","ts":"2017-03-02T20:49:55.934Z"}
{"msg":"yes, it will go into bccsp","username":"vpaprots","ts":"2017-03-02T20:50:07.690Z"}
{"msg":"I guess we can do another CR to bring to vendor the \"current\" fabric/bccsp package?","username":"mastersingh24","ts":"2017-03-02T20:51:19.430Z"}
{"msg":"Yes, let's do that.","username":"JonathanLevi","ts":"2017-03-02T20:51:27.292Z"}
{"msg":"The * GetBCCSPFromOpts* is certainly needed (which is what I focused on).","username":"JonathanLevi","ts":"2017-03-02T20:52:00.191Z"}
{"msg":"@binhn: OK ?","username":"JonathanLevi","ts":"2017-03-02T20:52:10.504Z"}
{"msg":"still trying to understand what the big issue is/was here?","username":"mastersingh24","ts":"2017-03-02T20:53:55.058Z"}
{"msg":"someone doing something with fabric-ca that we don't know about?","username":"mastersingh24","ts":"2017-03-02T20:56:57.632Z"}
{"msg":"the issue here is that we were not doing vendoring but forking the code  -- we can't accept changes that are not bugs into Fabric at this point.  If it is not used, let's keep it out for now until we cut the branch;  folks can certainly work on their own branches.","username":"binhn","ts":"2017-03-02T20:57:10.254Z"}
{"msg":"that's my take -- many maintainers here that can override my opinion ","username":"binhn","ts":"2017-03-02T20:57:56.822Z"}
{"msg":"well we should not be cutting a new branch either - I assume you mean tag and build images?","username":"mastersingh24","ts":"2017-03-02T21:00:11.278Z"}
{"msg":"tag is fine when we feel the quality is there","username":"binhn","ts":"2017-03-02T21:02:11.334Z"}
{"msg":"`we were not doing vendoring but forking the code`  - so how did you find this?   it was an update of vendor unless I missed something.  Now apparently the code that got vendored was ahead of the code in fabric master at this point","username":"mastersingh24","ts":"2017-03-02T21:03:07.237Z"}
{"msg":"but how did you figure that out?","username":"mastersingh24","ts":"2017-03-02T21:03:16.600Z"}
{"msg":"(meaning the bccsp in fabric-ca was behind the bccsp code in fabric master)","username":"mastersingh24","ts":"2017-03-02T21:04:10.408Z"}
{"msg":"it's the other way around:  this cr contains code not in fabric bccsp, which we have decided to leave out of \"beta\" ","username":"binhn","ts":"2017-03-02T21:08:41.624Z"}
{"msg":"no - I get that is the case -","username":"mastersingh24","ts":"2017-03-02T21:09:36.968Z"}
{"msg":"but the intent was to update to the same bccsp","username":"mastersingh24","ts":"2017-03-02T21:09:45.778Z"}
{"msg":"as current fabric master","username":"mastersingh24","ts":"2017-03-02T21:09:52.376Z"}
{"msg":"I guess I am wondering how you can tell that this was not the same code as in fabric master.  did you doa  file by file comparison?","username":"mastersingh24","ts":"2017-03-02T21:10:26.257Z"}
{"msg":"prior to this, bccsp in fabric-ca was downlevel from fabric mater","username":"mastersingh24","ts":"2017-03-02T21:10:45.559Z"}
{"msg":"prior to this, bccsp in fabric-ca was downlevel from fabric master","username":"mastersingh24","ts":"2017-03-02T21:10:45.559Z"}
{"msg":"so just wondering how we could have better figured this out when we reviewed it","username":"mastersingh24","ts":"2017-03-02T21:11:27.192Z"}
{"msg":"ah, i just saw functions that i know not in fabric -- just being familiar with the code","username":"binhn","ts":"2017-03-02T21:13:04.891Z"}
{"msg":"Aha! ;-)","username":"JonathanLevi","ts":"2017-03-02T21:13:13.072Z"}
{"msg":"So there are a few issues here,\n1. First: @Binhn, re: \"that's my take -- many maintainers here that can override my opinion\"","username":"JonathanLevi","ts":"2017-03-02T21:13:34.063Z"}
{"msg":"-> I agree with you. Not overriding your opinion.","username":"JonathanLevi","ts":"2017-03-02T21:13:58.646Z"}
{"msg":"2. I (can speak for myself, and so I) was under the impression that we want to have the same BCCSP version in Fabric-CA, to be aligned with the \"latest\" BCCSP that's in fabric.","username":"JonathanLevi","ts":"2017-03-02T21:14:47.096Z"}
{"msg":"3. There was a genuine mistake by the CR Author. ","username":"JonathanLevi","ts":"2017-03-02T21:15:00.141Z"}
{"msg":"[ An extra function was added to the vendor'ed that is now in Fabric-CA but it's not in Fabric. ]","username":"JonathanLevi","ts":"2017-03-02T21:15:34.888Z"}
{"msg":"Which brings me to publicly ask the following:\n\n4. Is it not important for us to have the BCCSP integrated into fabric-ca for the upcoming release?","username":"JonathanLevi","ts":"2017-03-02T21:16:27.199Z"}
{"msg":"(because that function that is now in fabric-ca, is really needed for fabric-ca... )","username":"JonathanLevi","ts":"2017-03-02T21:16:51.605Z"}
{"msg":"Which is what I was asking above:","username":"JonathanLevi","ts":"2017-03-02T21:17:15.382Z"}
{"msg":"[Here: ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Rn7yv39esXPf3u65k) @JonathanLevi ","username":"JonathanLevi","ts":"2017-03-02T21:17:24.675Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Rn7yv39esXPf3u65k","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Rn7yv39esXPf3u65k","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Therefore, I asked @binhn, whether it is acceptable to add that function now to the bccsp version of fabric [ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppb4chZdZdchQwBXB) @JonathanLevi ","username":"JonathanLevi","ts":"2017-03-02T21:18:19.608Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppb4chZdZdchQwBXB","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppb4chZdZdchQwBXB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Meaning, if we want to freeze \"fabric\", that's fine as well.","username":"JonathanLevi","ts":"2017-03-02T21:21:23.872Z"}
{"msg":"I just know that fabric-ca won't be able to use the current version that is in fabric without that change.","username":"JonathanLevi","ts":"2017-03-02T21:21:47.286Z"}
{"msg":"I just know that *fabric-ca* won't be able to use the current BCCSP version that is in *fabric* without that change.","username":"JonathanLevi","ts":"2017-03-02T21:21:47.286Z"}
{"msg":"@vpaprots said that the function is not being called, so I am not clear on what you meant by \"which is what I focused on\" ?","username":"binhn","ts":"2017-03-02T21:22:00.138Z"}
{"msg":"Oh, I'm glad you ask!","username":"JonathanLevi","ts":"2017-03-02T21:22:20.382Z"}
{"msg":"The reason for us merging the above, is for paving the way for \nhttps://gerrit.hyperledger.org/r/#/c/6727/ \"https://gerrit.hyperledger.org/r/#/c/6727\"","username":"JonathanLevi","ts":"2017-03-02T21:22:58.139Z"}
{"msg":"The reason for us merging the above, is for paving the way for \nhttps://gerrit.hyperledger.org/r/#/c/6727/ \"\n[FAB-2601] Fabric CA BCCSP integration\"","username":"JonathanLevi","ts":"2017-03-02T21:22:58.139Z"}
{"msg":"The reason for us merging the above, is for paving the way for \nhttps://gerrit.hyperledger.org/r/#/c/6727/ \"[FAB-2601] Fabric CA BCCSP integration\"","username":"JonathanLevi","ts":"2017-03-02T21:22:58.139Z"}
{"msg":"And I appreciate that it wasn't clear from the commit message.","username":"JonathanLevi","ts":"2017-03-02T21:24:24.652Z"}
{"msg":"but you can certainly integrate bccsp without that code - what specific capabilities on CA that we need that function?","username":"binhn","ts":"2017-03-02T21:25:01.625Z"}
{"msg":"At first, I honestly thought that this is just \"synchronizing\" fabric and bccsp.","username":"JonathanLevi","ts":"2017-03-02T21:25:06.786Z"}
{"msg":"At first, I honestly thought that this is just \"synchronizing\" fabric-ca with fabric's bccsp.","username":"JonathanLevi","ts":"2017-03-02T21:25:06.786Z"}
{"msg":"there are separate servers for ecerts and tcerts","username":"mastersingh24","ts":"2017-03-02T21:25:43.614Z"}
{"msg":"internally","username":"mastersingh24","ts":"2017-03-02T21:26:05.567Z"}
{"msg":"@mastersingh24 so we need GetBCCSPFromOpts for tcerts generation?","username":"binhn","ts":"2017-03-02T21:28:25.884Z"}
{"msg":"I think we can live without it for now - but longer term we do need it","username":"mastersingh24","ts":"2017-03-02T21:28:47.122Z"}
{"msg":"in any case, we should make sure that bccsp in fabric-ca and bccsp in fabric are the same","username":"mastersingh24","ts":"2017-03-02T21:29:54.898Z"}
{"msg":"so we can have Vlad submit another CR.  I actually think that function is the only difference?","username":"mastersingh24","ts":"2017-03-02T21:30:21.409Z"}
{"msg":"@binhn, @mastersingh24: I think so, it boils down to this:","username":"JonathanLevi","ts":"2017-03-02T21:33:11.627Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/6273/1..6/vendor/github.com/hyperledger/fabric/bccsp/factory/factory.go","username":"JonathanLevi","ts":"2017-03-02T21:33:12.649Z"}
{"msg":"yes, but vlad knows more on how much of an impact if any -- it sounds like it is not being called, so we can accept that into fabric or remove it from ca ","username":"binhn","ts":"2017-03-02T21:34:23.584Z"}
{"msg":"ok - let's go with the following:","username":"mastersingh24","ts":"2017-03-02T21:36:21.180Z"}
{"msg":"1) have Vlad push the change to fabric master - should only be this function","username":"mastersingh24","ts":"2017-03-02T21:36:39.033Z"}
{"msg":"2) we will revendor bccsp into fabric-ca after that so we are totally in sync","username":"mastersingh24","ts":"2017-03-02T21:37:08.856Z"}
{"msg":"BUT - given it will go into fabric anyway, I'm also OK with fabric-ca running with this for now as well and holding off on merging to fabric.  Risk is minimal on the fabric-ca side","username":"mastersingh24","ts":"2017-03-02T21:38:11.927Z"}
{"msg":":thumbsup:","username":"binhn","ts":"2017-03-02T21:38:39.157Z"}
{"msg":"@binhn: which one?","username":"JonathanLevi","ts":"2017-03-02T21:40:03.183Z"}
{"msg":"1) \"have Vlad push the change to fabric master - should only be this function\"\nMerging that function into fabric as well, so that they are both in synch right now? (after verifying with Vlad)\n\nor,\n\n2) \"fabric-ca running with this for now as well and holding off on merging to fabric\"","username":"JonathanLevi","ts":"2017-03-02T21:41:13.983Z"}
{"msg":"1) \"have Vlad push the change to fabric master - should only be this function\"\nMerging that function into fabric's BCCSP as well, so that they are both in synch right now? (after verifying with Vlad)\n\nor,\n\n2) \"fabric-ca running with this for now as well and holding off on merging to fabric\"","username":"JonathanLevi","ts":"2017-03-02T21:41:13.983Z"}
{"msg":"[FWIW, I'm fine with either resolutions. Let's do the right thing.]","username":"JonathanLevi","ts":"2017-03-02T21:42:00.861Z"}
{"msg":"BTW - you have a Mac, right?","username":"mastersingh24","ts":"2017-03-02T21:59:02.660Z"}
{"msg":"are you using the desktop RocketChat app for Mac?  I just started using it and its definitely better than there web interface","username":"mastersingh24","ts":"2017-03-02T21:59:47.756Z"}
{"msg":"Yes, the web interface (even on Safari! ;-)) is not great.","username":"JonathanLevi","ts":"2017-03-02T22:00:44.109Z"}
{"msg":"wrong channel  ;)","username":"mastersingh24","ts":"2017-03-02T22:00:53.941Z"}
{"msg":"Oh yeah, I should have mentioned: the Mac application has a bug, where it does not always update the current channel you are typing in.","username":"JonathanLevi","ts":"2017-03-02T22:01:39.049Z"}
{"msg":"Oh yeah, I should have mentioned: the Mac application has a bug, where it does not always correctly show current channel you are typing in.","username":"JonathanLevi","ts":"2017-03-02T22:01:39.049Z"}
{"msg":"Not joking.","username":"JonathanLevi","ts":"2017-03-02T22:01:41.828Z"}
{"msg":"these channels will be the death of us","username":"yacovm","ts":"2017-03-02T22:01:43.739Z"}
{"msg":"it's a bug in the web app too ","username":"yacovm","ts":"2017-03-02T22:02:22.533Z"}
{"msg":"Well, it's a good practice to have everything broadcasted on the blockchain, unencrypted ;-)","username":"JonathanLevi","ts":"2017-03-02T22:02:24.805Z"}
{"msg":"Well, is it good practice to have everything broadcasted on the blockchain, unencrypted? ;-) [rephrased]","username":"JonathanLevi","ts":"2017-03-02T22:02:24.805Z"}
{"msg":"its a good practice to use Slack  ;)","username":"mastersingh24","ts":"2017-03-02T22:10:39.650Z"}
{"msg":"to consider \n# Trivial fix, no risk\n[FAB-2455] Fix misleading log statment\n\n# Proto change, I see this as must have, as they break ABI\n[FAB-2468] configtx ChannelHeader to ChannelId\n\n# Proto change, had been held off until Readers/Writers/Admins were correctly set\n[FAB-2615] Remove Ingress/EgressPolicyNames refs\n\n# A malicious user could use this to trivially crash the system\n[FAB-2616] Fix potential crash in cauthdsl\n\n# Proto changes, these are very low risk, no ABI, only API\n[FAB-2471] Fix gossip proto style 1/3\n[FAB-2472] Fix gossip proto style 2/3\n[FAB-2473] Fix gossip proto style 3/3\n\n# Code refactoring which reduces code lines, an increases test coverage\n# Also a prereq to the configtx inspection, and needed for bugfix FAB-2552\n[FAB-2335] Move channel config to common Proposer\n[FAB-2396] Move orderer config to common Proposer\n[FAB-2397] Move org config to common Proposer\n[FAB-2477] Move application config to Proposer\n[FAB-2399] ApplicationOrg config to common Proposer\n[FAB-2526] Move consolidate config to one package\n\n# Fixes a potential crash\n[FAB-2552] Allow concurrent config proposals\n\n# Changes to enable configtx inspection\n[FAB-2511] Make configtx sequence explicit\n[FAB-2554] configtx.Manager track deserialized val\n[FAB-2574] Config parsing outside configtx.Manager\n[FAB-2577] Add JSON rendering of configResult\n[FAB-2584] configtxgen prints block config as json\n[FAB-2612] Enable configtxgen configtx inspection","username":"binhn","ts":"2017-03-03T15:18:32.347Z"}
{"msg":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","username":"bmos299","ts":"2017-03-03T15:31:43.343Z"}
{"msg":"++","username":"bmos299","ts":"2017-03-03T15:47:52.091Z"}
{"msg":"+","username":"bmos299","ts":"2017-03-03T15:47:52.427Z"}
{"msg":"++++++++++++++++++++++++","username":"bmos299","ts":"2017-03-03T15:49:48.283Z"}
{"msg":"+","username":"bmos299","ts":"2017-03-03T15:49:50.880Z"}
{"msg":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","username":"bmos299","ts":"2017-03-03T15:50:00.137Z"}
{"msg":"+","username":"bmos299","ts":"2017-03-03T15:51:32.875Z"}
{"msg":"@bmos299  - are you drinking already?","username":"mastersingh24","ts":"2017-03-03T15:56:29.676Z"}
{"msg":"It looks like a cat is on the loose in the lab","username":"yacovm","ts":"2017-03-03T16:07:38.270Z"}
{"msg":"@mastersingh24 @binhn @cbf as we roll closer to alpha, I assume we will consider creating a branch (e.g. v1.0.0-alpha) ?","username":"greg.haskins","ts":"2017-03-03T17:50:10.293Z"}
{"msg":"yes","username":"cbf","ts":"2017-03-03T17:50:23.099Z"}
{"msg":"we seem to already have JIRA entries for v1.0.0 and v1.1 so we'll need to start managing those CRs","username":"greg.haskins","ts":"2017-03-03T17:50:41.997Z"}
{"msg":"guys - are we really going to cut a branch?  I don't want to be merging fixes against an alpha branch.  so are we saying we don't fix bugs on the alpha branch?","username":"mastersingh24","ts":"2017-03-03T18:03:04.348Z"}
{"msg":"we wouldn't we just tag, set the release flag to true and publish the docker images?","username":"mastersingh24","ts":"2017-03-03T18:04:02.958Z"}
{"msg":"then we continue to work on master and do the same thing when we are ready for another release?   or - I guess I'm fine if we are not managing fixes against the alpha branch","username":"mastersingh24","ts":"2017-03-03T18:04:51.609Z"}
{"msg":"When are we cutting a branch?\nAnd if it's going to be soon can anyone take a peek at https://chat.hyperledger.org/channel/fabric-pr-review?msg=XSyPjW89A9Wvf5eHP please? ","username":"yacovm","ts":"2017-03-03T18:06:39.245Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=XSyPjW89A9Wvf5eHP","url":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=XSyPjW89A9Wvf5eHP","remote":true,"fileId":null,"fileName":null}]}
{"msg":"stop gossiping  ;)","username":"mastersingh24","ts":"2017-03-03T18:25:53.552Z"}
{"msg":"haha","username":"mastersingh24","ts":"2017-03-03T18:25:56.020Z"}
{"msg":"@mastersingh24 we dont have to, but whatever development stream will be \"alpha1\" will probably want more control over how we treat master at some point","username":"greg.haskins","ts":"2017-03-03T18:27:09.138Z"}
{"msg":"so either a branch, or discretion on merging CRs would be in order","username":"greg.haskins","ts":"2017-03-03T18:27:34.741Z"}
{"msg":"I am fine if we dont do a branch, honestly, as it wasnt managed well last time","username":"greg.haskins","ts":"2017-03-03T18:27:52.894Z"}
{"msg":"I know moving forward we'll need to do branches for releases, it was just the alpha that concerned me a bit","username":"mastersingh24","ts":"2017-03-03T18:28:11.925Z"}
{"msg":"(the whole master vs v1.0 branch was a mess for @muralisr and I to sort out)","username":"greg.haskins","ts":"2017-03-03T18:28:18.894Z"}
{"msg":"but perhaps we just do a branch","username":"mastersingh24","ts":"2017-03-03T18:28:28.441Z"}
{"msg":"so if we do do branches, i hope we automate thigns a little more so they are merged more regularly","username":"greg.haskins","ts":"2017-03-03T18:28:44.562Z"}
{"msg":"and I guess we just use our best judgement in terms of making any fixes on the initial alpha branch versus cutting an alpha2","username":"mastersingh24","ts":"2017-03-03T18:29:42.336Z"}
{"msg":"im not sure what you mean, but I would say branches and releases are distinct beasts","username":"greg.haskins","ts":"2017-03-03T18:30:14.955Z"}
{"msg":"so I wouldnt see those as othogonal operations","username":"greg.haskins","ts":"2017-03-03T18:30:33.904Z"}
{"msg":"but interelated","username":"greg.haskins","ts":"2017-03-03T18:30:48.008Z"}
{"msg":"they are except when you actually have branches that map to releases","username":"mastersingh24","ts":"2017-03-03T18:30:51.630Z"}
{"msg":"dont do that, please ;)","username":"greg.haskins","ts":"2017-03-03T18:31:14.485Z"}
{"msg":"a branch is a stream, a release is a point in time on a stream","username":"greg.haskins","ts":"2017-03-03T18:31:27.307Z"}
{"msg":"treating branches as tags can be done, but it doesnt make sense","username":"greg.haskins","ts":"2017-03-03T18:31:51.838Z"}
{"msg":"if we dont want an alpha stream, thats totally fine, but just tag the point in time and be done","username":"greg.haskins","ts":"2017-03-03T18:32:46.383Z"}
{"msg":"I like the tag option","username":"mastersingh24","ts":"2017-03-03T18:32:57.045Z"}
{"msg":"in the spirit of \"CICD\" that is the path of least friction","username":"greg.haskins","ts":"2017-03-03T18:33:29.067Z"}
{"msg":"BUT, it would require some discipline on when we take various CRs if there really is a v1.0 vs v1.1 intention","username":"greg.haskins","ts":"2017-03-03T18:33:59.071Z"}
{"msg":"I know","username":"mastersingh24","ts":"2017-03-03T18:34:09.386Z"}
{"msg":"not sure we currently have that discipline ;)","username":"greg.haskins","ts":"2017-03-03T18:34:29.759Z"}
{"msg":"but I think that's where I might distinguish between this alpha and what we do moving forward","username":"mastersingh24","ts":"2017-03-03T18:34:40.183Z"}
{"msg":"i see, and yes, i would be ok with that","username":"greg.haskins","ts":"2017-03-03T18:34:50.856Z"}
{"msg":"I see this alpha as a point in time snapshot on the way to v1.0.0","username":"mastersingh24","ts":"2017-03-03T18:34:56.795Z"}
{"msg":"snap it, keep moving","username":"greg.haskins","ts":"2017-03-03T18:35:06.399Z"}
{"msg":"@mastersingh24 anyway, I see your point and agree we could manage the alpha this way...the reason i was bringing this up is I wanted to have the general conversation about how we will manage branches in general, when the time comes","username":"greg.haskins","ts":"2017-03-03T18:58:51.118Z"}
{"msg":"I want to avoid what happened last time, as a lessons-learned kind of endeavor ;)","username":"greg.haskins","ts":"2017-03-03T18:59:11.962Z"}
{"msg":"so, perhaps its later rather than sooner, and that is a good thing as it gives us more time to plan","username":"greg.haskins","ts":"2017-03-03T18:59:37.655Z"}
{"msg":"(assuming we have branches eventually)","username":"greg.haskins","ts":"2017-03-03T18:59:49.933Z"}
{"msg":"the basic problem, as I see it, was we had several branches (v0.6, v1.0 and master) to which devs were, for the most part, focused only on one","username":"greg.haskins","ts":"2017-03-03T19:00:50.618Z"}
{"msg":"so, they would submit CRs against whatever stream was the most important to them, and be done with it","username":"greg.haskins","ts":"2017-03-03T19:01:12.237Z"}
{"msg":"this isnt to say everyone did this..there were some that we diligent about submitting CRs to all the relevant places, and I thank them for that","username":"greg.haskins","ts":"2017-03-03T19:01:52.945Z"}
{"msg":"this isnt to say everyone did this..there were some that were diligent about submitting CRs to all the relevant places, and I thank them for that","username":"greg.haskins","ts":"2017-03-03T19:01:52.945Z"}
{"msg":"but anyway, where I am going with this is: how do we reduce/eliminate human error/apathy going forward","username":"greg.haskins","ts":"2017-03-03T19:02:31.905Z"}
{"msg":"I want to avoid the 125 patch mega-merge party that @muralisr and I had to untangle last time","username":"greg.haskins","ts":"2017-03-03T19:03:18.682Z"}
{"msg":"one thought I had is minimally we could have a jenkins job that simply detects when merges are required and goes \"red\" until its fixed","username":"greg.haskins","ts":"2017-03-03T19:04:06.827Z"}
{"msg":"at least we would detect it happening and could berate^h^h^h^h^hencourage the delinquent^h^h^h^h^h^h^hdev until they submitted a fix","username":"greg.haskins","ts":"2017-03-03T19:05:05.188Z"}
{"msg":"other ideas would be some kind of automated merge process","username":"greg.haskins","ts":"2017-03-03T19:05:27.079Z"}
{"msg":"other ideas would be some kind of automated merge process that only goes red if it cant automate the merge","username":"greg.haskins","ts":"2017-03-03T19:05:27.079Z"}
{"msg":"im curious how LF has perhaps dealt with this in other projects @rjones @jwagantall ","username":"greg.haskins","ts":"2017-03-03T19:06:06.957Z"}
{"msg":"I'm with ya @greg.haskins  - and I also like the rules that some projects like Kafka have about deciding when to declare releases - e.g. when does v1.0.0-rc3 become v1.0.0  ;)","username":"mastersingh24","ts":"2017-03-03T19:18:48.714Z"}
{"msg":"@mastersingh24 I am not sure how they do it, but I am very curious","username":"greg.haskins","ts":"2017-03-03T19:19:23.038Z"}
{"msg":"if we had a really awesome UAT pipeline we could just release every time a merge ran the UAT gauntlet","username":"greg.haskins","ts":"2017-03-03T19:20:21.117Z"}
{"msg":"but I think we have a bit of work to do to get there ;)","username":"greg.haskins","ts":"2017-03-03T19:20:31.791Z"}
{"msg":"they actually \"vote\"","username":"mastersingh24","ts":"2017-03-03T19:20:39.933Z"}
{"msg":"the maintainers that is on when to declare a major release","username":"mastersingh24","ts":"2017-03-03T19:20:59.698Z"}
{"msg":"ah...we do have a degree of that, by virtue of maintainers voting on CRs and we use CRs to cut a release","username":"greg.haskins","ts":"2017-03-03T19:21:34.558Z"}
{"msg":"but I suspect you are talking about something a bit different","username":"greg.haskins","ts":"2017-03-03T19:21:40.794Z"}
{"msg":"I guess we kinda have it to a degree","username":"mastersingh24","ts":"2017-03-03T19:43:40.761Z"}
{"msg":"but as you said, we do need to add some \"maturity\" around this","username":"mastersingh24","ts":"2017-03-03T19:44:06.753Z"}
{"msg":"Has joined the channel.","username":"alexrosen","ts":"2017-03-03T20:16:00.022Z","type":"uj"}
{"msg":"I posted a proposal to create a Hyperledger Fabric Splash Page for the community. Please review.\n(https://wiki.hyperledger.org/community/proposals | https://docs.google.com/document/d/1lU37T90VvWAB2tK1Bvhj99IvfVm2MD8NJk96aqI5z64/edit#)","username":"alexrosen","ts":"2017-03-03T20:20:21.838Z"}
{"msg":"@cbf are proposals supposed to be posted to the tsc channel? see above ^^","username":"weeds","ts":"2017-03-03T21:05:02.753Z"}
{"msg":"no, that is just fabric","username":"cbf","ts":"2017-03-03T21:05:30.561Z"}
{"msg":"and frankly it should just be a gerrit changeset to fabric repo","username":"cbf","ts":"2017-03-03T21:05:49.515Z"}
{"msg":"we don't want to create a new repo unnecesarily","username":"cbf","ts":"2017-03-03T21:05:59.767Z"}
{"msg":"Has joined the channel.","username":"rrader","ts":"2017-03-04T12:59:19.432Z","type":"uj"}
{"msg":"Error creating connection to peer address https://github.com/IBM-Blockchain/fabric-images/issues/25","username":"rrader","ts":"2017-03-04T12:59:36.008Z"}
{"msg":"&quot;Internal&quot; discussions amongst the maintainers of Hyperledger Fabric","username":"JonathanLevi","ts":"2017-03-04T14:07:30.062Z","type":"room_changed_topic"}
{"msg":"&quot;Internal&quot; discussions amongst the maintainers of Hyperledger Fabric. BTW: please use #fabric-pr-review for pull request&#39;s (PR) reviews","username":"JonathanLevi","ts":"2017-03-04T14:09:37.478Z","type":"room_changed_topic"}
{"msg":"Has joined the channel.","username":"WeDoIoE","ts":"2017-03-07T00:17:10.768Z","type":"uj"}
{"msg":"All, please @ tag (me) next time the *master* branch is broken.","username":"JonathanLevi","ts":"2017-03-08T11:14:02.691Z"}
{"msg":"All, please @ tag (me and others here) next time the *master* branch is broken/does not compile. It is important enough.","username":"JonathanLevi","ts":"2017-03-08T11:14:02.691Z"}
{"msg":"well, one need to discover it's broken first","username":"C0rWin","ts":"2017-03-08T11:14:47.506Z"}
{"msg":"@JonathanLevi in theory, the -merge jobs do this for you automatically...its purely a function of whether someone notices that they are red","username":"greg.haskins","ts":"2017-03-08T13:25:42.454Z"}
{"msg":"to that point, we could probably do a better job of notifications","username":"greg.haskins","ts":"2017-03-08T13:26:04.408Z"}
{"msg":"We should auto-revert breaking merges, IMO","username":"JonathanLevi","ts":"2017-03-08T14:33:02.991Z"}
{"msg":"at the very least, we should halt subsequent merges if they are not rebased against HEAD and work","username":"greg.haskins","ts":"2017-03-08T15:14:12.322Z"}
{"msg":"but I like that idea @JonathanLevi...i wonder if gerrit can handle that","username":"greg.haskins","ts":"2017-03-08T15:15:01.134Z"}
{"msg":"just bounce it back into an open status","username":"greg.haskins","ts":"2017-03-08T15:15:13.152Z"}
{"msg":"it would all need to be done carefully however...for instance, what if other merges had gone in before the -merge job detects it","username":"greg.haskins","ts":"2017-03-08T15:16:06.272Z"}
{"msg":"i think this could all be solved with perhaps another tier in the repo","username":"greg.haskins","ts":"2017-03-08T15:17:40.672Z"}
{"msg":"today we have gerrit->gh","username":"greg.haskins","ts":"2017-03-08T15:17:53.264Z"}
{"msg":"I wonder if this could be structured like gerrit-reviews -> gerrit-merges -> gh instead","username":"greg.haskins","ts":"2017-03-08T15:18:15.162Z"}
{"msg":"IOW, hitting \"submit\" submits the patch to gerrit-reviews, but it still has to pass the -merge job to get merged to gerrit-merges","username":"greg.haskins","ts":"2017-03-08T15:18:55.088Z"}
{"msg":"IOW, the second tier is another gate, but an automated one","username":"greg.haskins","ts":"2017-03-08T15:19:07.498Z"}
{"msg":"it only needs a V+1 from Jenkins to pass","username":"greg.haskins","ts":"2017-03-08T15:19:26.266Z"}
{"msg":"that automated layer could ensure that every patch has passed CI and was rebased to latest","username":"greg.haskins","ts":"2017-03-08T15:19:58.656Z"}
{"msg":"(Today we cant say that with the one tier model...patches could be submitted against some really old SHA)","username":"greg.haskins","ts":"2017-03-08T15:20:16.819Z"}
{"msg":"This is what we usually do: \n[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=QLdfpThg4otJdryWJ) @greg.haskins ","username":"JonathanLevi","ts":"2017-03-08T15:33:41.080Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=QLdfpThg4otJdryWJ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=QLdfpThg4otJdryWJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"We merge to a snapshot of HEAD, compile and run everything against that merged version...","username":"JonathanLevi","ts":"2017-03-08T15:34:21.631Z"}
{"msg":"... and only after everything is OK, we merge \"up\".","username":"JonathanLevi","ts":"2017-03-08T15:34:39.661Z"}
{"msg":"It's just a proposal, and probably not for the coming days/weeks... but it is something to keep in mind.","username":"JonathanLevi","ts":"2017-03-08T15:35:14.471Z"}
{"msg":"The gerrit -> gh will follow that \"up\" merge.","username":"JonathanLevi","ts":"2017-03-08T15:35:50.830Z"}
{"msg":"There are some cons to it, I know - e.g., that extra step may be time consuming, etc.","username":"JonathanLevi","ts":"2017-03-08T15:36:43.660Z"}
{"msg":"BUT, it will force us to have a cleaner log (for example), than what we have now.","username":"JonathanLevi","ts":"2017-03-08T15:37:13.454Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-03-08T15:37:40.185Z"}
{"msg":"Not sure if you remember our discussion a few days prior to us cutting the v0.6 dev-preview \"cut\".","username":"JonathanLevi","ts":"2017-03-08T15:38:06.957Z"}
{"msg":"About a *staging* branch, etc... where you some want to have (*the ability of an immediate deploy, using*) a master branch that is guaranteed to be clear at every single point in time.","username":"JonathanLevi","ts":"2017-03-08T15:39:21.473Z"}
{"msg":"Again, it's all a matter of requirements/priorities, but I thought I'd drop that option here for a discussion/brainstorming.","username":"JonathanLevi","ts":"2017-03-08T15:40:03.163Z"}
{"msg":"I am fine if its branches vs repos, and in fact that makes more sense...but my only request be that it should be automated","username":"greg.haskins","ts":"2017-03-08T15:43:28.494Z"}
{"msg":"Has joined the channel.","username":"Suma","ts":"2017-03-08T15:43:40.440Z","type":"uj"}
{"msg":"i.e. I see human-approval (2+2) and V+1 as the first stage, but beyond that, it should be an automated process that can kick it back to the first level if it doesnt pass","username":"greg.haskins","ts":"2017-03-08T15:44:23.081Z"}
{"msg":"Yes, certainly automated. Auto-snapshotted, auto-tested, auto-upmerged or auto-auto-rejected ;-)","username":"JonathanLevi","ts":"2017-03-08T15:55:18.893Z"}
{"msg":"We can discuss options. I'm trying to also be pragmatic (and not too academic), it's just that it really takes a long cycle for a build cycle... so when we \"up merge\" now, sometimes people do not wait (say, late at night) for the results.","username":"JonathanLevi","ts":"2017-03-08T15:56:36.941Z"}
{"msg":"We can discuss options. I'm trying to also be pragmatic (and not too academic), it's just that it really takes a long time to complete a build cycle... so when we \"up merge\" now, sometimes people do not wait (say, late at night) for the results.","username":"JonathanLevi","ts":"2017-03-08T15:56:36.941Z"}
{"msg":"Automated and super deterministic.","username":"JonathanLevi","ts":"2017-03-08T15:57:02.178Z"}
{"msg":"Yes, I agree.  @yacovm what happened to that effort to parallelize the unit-tests?","username":"greg.haskins","ts":"2017-03-08T17:32:23.558Z"}
{"msg":"IIRC, it showed promise (~20 minute runs IIRC)","username":"greg.haskins","ts":"2017-03-08T17:32:35.601Z"}
{"msg":"well, I wanted to test it more thoroughly and then got swamped with gossip work. \nDo you want to continue from where I left?","username":"yacovm","ts":"2017-03-08T17:34:54.909Z"}
{"msg":"well, I wanted to test it more thoroughly and then got swamped with gossip work. \nDo you want to continue from where I left? @greg.haskins ","username":"yacovm","ts":"2017-03-08T17:34:54.909Z"}
{"msg":"well, I wanted to test it more thoroughly and then got swamped with gossip work. ","username":"yacovm","ts":"2017-03-08T17:34:54.909Z"}
{"msg":"the commit is still there https://gerrit.hyperledger.org/r/#/c/5549/","username":"yacovm","ts":"2017-03-08T17:35:24.140Z"}
{"msg":"the commit is still there https://gerrit.hyperledger.org/r/#/c/5549/\nI got swamped by gossip work so couldn't complete it","username":"yacovm","ts":"2017-03-08T17:35:24.140Z"}
{"msg":"@yacovm ty","username":"greg.haskins","ts":"2017-03-08T17:51:53.429Z"}
{"msg":"cross-posted from #tsc: I am wondering about next steps for the [Go SDK proposal]","username":"troyronda","ts":"2017-03-08T22:37:37.577Z"}
{"msg":"The proposed alpha content is on the Hyperledger wiki  https://wiki.hyperledger.org/projects/proposedv1alphacontent\nI'd like you to help review and discuss here.  \n\nWe also need to decide whether to branch or just tag the master branches of all related repos (sdk, ca, fabric). Branching would allow us to fix any serious bugs (if we want to), but otherwise, all testing and defect resolution will be on the master branch.","username":"binhn","ts":"2017-03-09T18:26:41.573Z"}
{"msg":"@mastersingh24 @yacovm @C0rWin @binhn I'm trying out the tls support in https://gerrit.hyperledger.org/r/#/c/7075\n```peer3      | 2017-03-09 18:10:14.200 UTC [msp] DeserializeIdentity -> INFO 00f Obtaining identity\npeer3      | 2017-03-09 18:10:14.200 UTC [msp] Validate -> INFO 010 MSP Org2MSP validating identity\npeer3      | panic: runtime error: invalid memory address or nil pointer dereference\npeer3      | [signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x932a7b]\npeer3      | \npeer3      | goroutine 1 [running]:\npeer3      | panic(0xc26f00, 0xc420014050)\npeer3      | \t/opt/go/src/runtime/panic.go:500 +0x1a1\npeer3      | github.com/hyperledger/fabric/gossip/integration.newConfig(0xc420218db0, 0xf, 0x0, 0x0, 0xc4201d0be0, 0x1, 0x1, 0xc4202a38c0)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/integration/integration.go:43 +0x61b\npeer3      | github.com/hyperledger/fabric/gossip/integration.NewGossipComponent(0xc4201ba900, 0x300, 0x300, 0xc420218db0, 0xf, 0xc420088870, 0x12f1ca0, 0x133e720, 0x1300ba0, 0xc4201cfa40, ...)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/integration/integration.go:75 +0xa1\npeer3      | github.com/hyperledger/fabric/gossip/service.InitGossipServiceCustomDeliveryFactory.func1()\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:138 +0x65f\npeer3      | sync.(*Once).Do(0x133e7d0, 0xc42018b680)\npeer3      | \t/opt/go/src/sync/once.go:44 +0xdb\npeer3      | github.com/hyperledger/fabric/gossip/service.InitGossipServiceCustomDeliveryFactory(0xc4201ba900, 0x300, 0x300, 0xc420218db0, 0xf, 0xc420088870, 0x12f1ba0, 0x133e720, 0x1300ba0, 0xc4201cfa40, ...)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:149 +0xb9\npeer3      | github.com/hyperledger/fabric/gossip/service.InitGossipService(0xc4201ba900, 0x300, 0x300, 0xc420218db0, 0xf, 0xc420088870, 0x1300ba0, 0xc4201cfa40, 0xc4201d0be0, 0x1, ...)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:106 +0xd7\npeer3      | github.com/hyperledger/fabric/peer/node.serve(0xc420235ab0, 0x0, 0x1, 0x0, 0x0)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:202 +0x633\npeer3      | github.com/hyperledger/fabric/peer/node.glob..func1(0x12e8440, 0xc420235ab0, 0x0, 0x1, 0x0, 0x0)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:80 +0x3f\npeer3      | github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x12e8440, 0xc420235a90, 0x1, 0x1, 0x12e8440, 0xc420235a90)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234\npeer3      | github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x12e8cc0, 0xf, 0xc420012055, 0x7)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367\npeer3      | github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x12e8cc0, 0x57, 0xc420012055)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b\npeer3      | main.main()\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:111 +0x52d\n```","username":"jimthematrix","ts":"2017-03-09T18:28:46.709Z"}
{"msg":"@mastersingh24 @yacovm @C0rWin @binhn I'm trying out the tls support in https://gerrit.hyperledger.org/r/#/c/7075 so i can build the sdk support, the peers are crashing like below:\n\n```peer3      | 2017-03-09 18:10:14.200 UTC [msp] DeserializeIdentity -> INFO 00f Obtaining identity\npeer3      | 2017-03-09 18:10:14.200 UTC [msp] Validate -> INFO 010 MSP Org2MSP validating identity\npeer3      | panic: runtime error: invalid memory address or nil pointer dereference\npeer3      | [signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x932a7b]\npeer3      | \npeer3      | goroutine 1 [running]:\npeer3      | panic(0xc26f00, 0xc420014050)\npeer3      | \t/opt/go/src/runtime/panic.go:500 +0x1a1\npeer3      | github.com/hyperledger/fabric/gossip/integration.newConfig(0xc420218db0, 0xf, 0x0, 0x0, 0xc4201d0be0, 0x1, 0x1, 0xc4202a38c0)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/integration/integration.go:43 +0x61b\npeer3      | github.com/hyperledger/fabric/gossip/integration.NewGossipComponent(0xc4201ba900, 0x300, 0x300, 0xc420218db0, 0xf, 0xc420088870, 0x12f1ca0, 0x133e720, 0x1300ba0, 0xc4201cfa40, ...)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/integration/integration.go:75 +0xa1\npeer3      | github.com/hyperledger/fabric/gossip/service.InitGossipServiceCustomDeliveryFactory.func1()\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:138 +0x65f\npeer3      | sync.(*Once).Do(0x133e7d0, 0xc42018b680)\npeer3      | \t/opt/go/src/sync/once.go:44 +0xdb\npeer3      | github.com/hyperledger/fabric/gossip/service.InitGossipServiceCustomDeliveryFactory(0xc4201ba900, 0x300, 0x300, 0xc420218db0, 0xf, 0xc420088870, 0x12f1ba0, 0x133e720, 0x1300ba0, 0xc4201cfa40, ...)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:149 +0xb9\npeer3      | github.com/hyperledger/fabric/gossip/service.InitGossipService(0xc4201ba900, 0x300, 0x300, 0xc420218db0, 0xf, 0xc420088870, 0x1300ba0, 0xc4201cfa40, 0xc4201d0be0, 0x1, ...)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:106 +0xd7\npeer3      | github.com/hyperledger/fabric/peer/node.serve(0xc420235ab0, 0x0, 0x1, 0x0, 0x0)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:202 +0x633\npeer3      | github.com/hyperledger/fabric/peer/node.glob..func1(0x12e8440, 0xc420235ab0, 0x0, 0x1, 0x0, 0x0)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/peer/node/start.go:80 +0x3f\npeer3      | github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0x12e8440, 0xc420235a90, 0x1, 0x1, 0x12e8440, 0xc420235a90)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234\npeer3      | github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x12e8cc0, 0xf, 0xc420012055, 0x7)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367\npeer3      | github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x12e8cc0, 0x57, 0xc420012055)\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b\npeer3      | main.main()\npeer3      | \t/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:111 +0x52d\n```","username":"jimthematrix","ts":"2017-03-09T18:28:46.709Z"}
{"msg":"this is how i configure each peer:","username":"jimthematrix","ts":"2017-03-09T18:29:25.805Z"}
{"msg":"```peer0:\n    container_name: peer0\n    image: hyperledger/fabric-peer\n    environment:\n      - CORE_PEER_ADDRESSAUTODETECT=true\n      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock\n      - CORE_PEER_NETWORKID=peer0\n      - CORE_PEER_GOSSIP_ORGLEADER=true\n      - CORE_NEXT=true\n      - CORE_PEER_ENDORSER_ENABLED=true\n      - CORE_PEER_ID=peer0\n      - CORE_PEER_PROFILE_ENABLED=true\n      - CORE_PEER_LOCALMSPID=Org1MSP\n      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/configtx/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/\n      - CORE_PEER_TLS_ENABLED=true\n      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls-config/Org1-server1-key.pem\n      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls-config/Org1-server1-cert.pem\n      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls-config/caroots/Org1-cert.pem\n    working_dir: /opt/gopath/src/github.com/hyperledger/fabric\n    command: peer node start --peer-defaultchain=false\n    ports:\n      - 7051:7051\n      - 7053:7053\n    volumes:\n        - /var/run/:/host/var/run/\n        - ./:/etc/hyperledger/configtx\n        - ../config/tls:/etc/hyperledger/tls-config\n    depends_on:\n      - orderer```","username":"jimthematrix","ts":"2017-03-09T18:29:41.951Z"}
{"msg":"@jimthematrix thanks -- looking","username":"binhn","ts":"2017-03-09T18:44:31.089Z"}
{"msg":"Jim i'm not at home but maybe the tls cert wasnt loaded correctly?","username":"yacovm","ts":"2017-03-09T18:44:31.913Z"}
{"msg":"Yeah, it comes down to the line where it tries to load the certificate ```\t*cert, err = tls.LoadX509KeyPair(viper.GetString(\"peer.tls.cert.file\"), viper.GetString(\"peer.tls.key.file\"))```","username":"C0rWin","ts":"2017-03-09T18:53:40.109Z"}
{"msg":"Yeah, it comes down to the line where it tries to load the certificate: ","username":"C0rWin","ts":"2017-03-09T18:53:40.109Z"}
{"msg":"```\t*cert, err = tls.LoadX509KeyPair(viper.GetString(\"peer.tls.cert.file\"), viper.GetString(\"peer.tls.key.file\"))```","username":"C0rWin","ts":"2017-03-09T18:53:51.370Z"}
{"msg":"wondering what is the value for ```\"peer.tls.cert.file\"```","username":"C0rWin","ts":"2017-03-09T18:54:08.702Z"}
{"msg":"wondering what is the value for `\"peer.tls.cert.file\"`","username":"C0rWin","ts":"2017-03-09T18:54:08.702Z"}
{"msg":"wondering what is the value for `\"peer.tls.cert.file\"`?","username":"C0rWin","ts":"2017-03-09T18:54:08.702Z"}
{"msg":"it's PEM encoded cert, like below:\n```-----BEGIN CERTIFICATE-----\nMIIB/DCCAaGgAwIBAgIRANHBGVHQ24Z7DyTeCJy0hkAwCgYIKoZIzj0EAwIwWDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xDTALBgNVBAoTBE9yZzExDTALBgNVBAMTBE9yZzEwHhcNMTcwMzA5\nMTIxODQwWhcNMjcwMzA3MTIxODQwWjBlMQswCQYDVQQGEwJVUzETMBEGA1UECBMK\nQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEVMBMGA1UEChMMT3Jn\nMS1zZXJ2ZXIxMRIwEAYDVQQDEwlsb2NhbGhvc3QwWTATBgcqhkjOPQIBBggqhkjO\nPQMBBwNCAAQK2y+RWueR/DA1azaTAOCWg2V5OQvaV/Z5w5eM0pnxFNigvL2M2587\nK9TyIko/q/FSugFcRlpwqluOfRNrS/pgoz8wPTAOBgNVHQ8BAf8EBAMCBaAwHQYD\nVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwCgYIKoZI\nzj0EAwIDSQAwRgIhAOCcZX387r7wcIhGjugCa30FLfNt+JuzVmI1u6mQlyAhAiEA\nhHaqckAlaGrf2RZ22JfuruIeBFspvynLo/R8wnWUgTU=\n-----END CERTIFICATE-----\n```","username":"jimthematrix","ts":"2017-03-09T18:54:54.067Z"}
{"msg":"@jimthematrix thanks, will try it out","username":"C0rWin","ts":"2017-03-09T18:55:16.724Z"}
{"msg":"ok","username":"jimthematrix","ts":"2017-03-09T18:55:30.825Z"}
{"msg":"and here's the corresponding private key:\n```-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIFs7jdTFvAvefiEmo/l12AxECeajntSHWIEBWITL4TbloAoGCCqGSM49\nAwEHoUQDQgAECtsvkVrnkfwwNWs2kwDgloNleTkL2lf2ecOXjNKZ8RTYoLy9jNuf\nOyvU8iJKP6vxUroBXEZacKpbjn0Ta0v6YA==\n-----END EC PRIVATE KEY-----\n```","username":"jimthematrix","ts":"2017-03-09T18:55:58.702Z"}
{"msg":"@C0rWin we should insert more debug log before the panic","username":"binhn","ts":"2017-03-09T18:57:27.381Z"}
{"msg":"@binhn sure.","username":"C0rWin","ts":"2017-03-09T19:07:32.535Z"}
{"msg":"@jimthematrix going to take a look on this","username":"C0rWin","ts":"2017-03-09T19:07:43.599Z"}
{"msg":"@jimthematrix @binh, here is the fix https://gerrit.hyperledger.org/r/#/c/7083/ for above problem","username":"C0rWin","ts":"2017-03-09T19:31:26.601Z"}
{"msg":"@jimthematrix @binh , here is the fix https://gerrit.hyperledger.org/r/#/c/7083/ for above problem","username":"C0rWin","ts":"2017-03-09T19:31:26.601Z"}
{"msg":"@jimthematrix @binhn , here is the fix https://gerrit.hyperledger.org/r/#/c/7083/ for above problem","username":"C0rWin","ts":"2017-03-09T19:31:26.601Z"}
{"msg":"Can we add a test for it?","username":"JonathanLevi","ts":"2017-03-09T20:06:15.018Z"}
{"msg":"(I'll merge the fix for the NPE, of course)","username":"JonathanLevi","ts":"2017-03-09T20:06:30.363Z"}
{"msg":"@C0rWin great, let me give it a try","username":"jimthematrix","ts":"2017-03-09T20:09:00.385Z"}
{"msg":"@C0rWin: Merged.","username":"JonathanLevi","ts":"2017-03-09T20:51:18.129Z"}
{"msg":"The following fabric-ca change sets still need review.   Thanks","username":"smithbk","ts":"2017-03-09T23:17:18.096Z"}
{"msg":"1) https://gerrit.hyperledger.org/r/6921\n2) https://gerrit.hyperledger.org/r/6943","username":"smithbk","ts":"2017-03-09T23:17:20.846Z"}
{"msg":"Has joined the channel.","username":"kuangchao","ts":"2017-03-10T02:38:28.899Z","type":"uj"}
{"msg":"@smithbk I added 1 little comment to the first","username":"hgabre","ts":"2017-03-10T10:14:10.583Z"}
{"msg":"but generally OK","username":"hgabre","ts":"2017-03-10T10:14:13.380Z"}
{"msg":"@smithbk: please use the #fabric-pr-review channel... and stop reviewing your own CRs.","username":"JonathanLevi","ts":"2017-03-10T10:56:32.637Z"}
{"msg":"@smithbk: Sorry to be repeating myself, repeatedly: please use the #fabric-pr-review channel for PRs... and stop reviewing CRs that have your own code/you are an author of.","username":"JonathanLevi","ts":"2017-03-10T10:59:38.388Z"}
{"msg":"re `We also need to decide whether to branch or just tag the master branches of all related repos (sdk, ca, fabric). Branching would allow us to fix any serious bugs (if we want to), but otherwise, all testing and defect resolution will be on the master branch.`\n\nI saw some discussion between @greg.haskins and @mastersingh24 seem to prefer tag on master rather than branch. I am fine with that and certainly less work for developers, who might have to submit a CR in 2 branches instead of 1. \n\nAny thoughts from others?","username":"binhn","ts":"2017-03-10T13:33:49.904Z"}
{"msg":"I think tagging is best idea in light of previous events (that convergence branch)","username":"yacovm","ts":"2017-03-10T13:49:27.765Z"}
{"msg":"trying to add node sdk support for tls, getting the following error when talking to the peers:\n```E0310 10:06:24.292485000 123145329672192 ssl_transport_security.c:947] Handshake failed with fatal error SSL_ERROR_SSL: error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure.```","username":"jimthematrix","ts":"2017-03-10T15:41:26.189Z"}
{"msg":"does anybody know what the error is saying? I couldn't find a way to turn on the handshake trace (grpc_trace=true doesn't give you that)","username":"jimthematrix","ts":"2017-03-10T15:42:57.407Z"}
{"msg":"Can the peers do TLS v3? ","username":"yacovm","ts":"2017-03-10T15:43:08.753Z"}
{"msg":"that's what i'm wondering, why are they talking in sslv3 at all?","username":"jimthematrix","ts":"2017-03-10T15:43:28.141Z"}
{"msg":"no idea, but I'd check if our *old* vendor folder even has TLS 1.3","username":"yacovm","ts":"2017-03-10T15:43:53.039Z"}
{"msg":"but I guess that TLS 1.3 client should support a 1.2 server","username":"yacovm","ts":"2017-03-10T15:44:08.589Z"}
{"msg":"Has joined the channel.","username":"JatinderBali","ts":"2017-03-10T15:44:44.374Z","type":"uj"}
{"msg":"note that the above error is from trying to connect to the event stream, @binhn @muralisr @mastersingh24 @jeffgarratt has that (event producer) been tested with TLS?","username":"jimthematrix","ts":"2017-03-10T16:58:18.209Z"}
{"msg":"@jiu","username":"jeffgarratt","ts":"2017-03-10T16:58:50.869Z"}
{"msg":"@jimthematrix I have not yet connected events ","username":"jeffgarratt","ts":"2017-03-10T16:58:50.869Z"}
{"msg":"in behave","username":"jeffgarratt","ts":"2017-03-10T16:59:08.946Z"}
{"msg":"@jimthematrix the events grpc uses the same TLS setup as peer","username":"muralisr","ts":"2017-03-10T17:03:43.351Z"}
{"msg":"but no, has not been tested","username":"muralisr","ts":"2017-03-10T17:03:57.225Z"}
{"msg":"but if the connection to the peer worked, I'd expect the same setup to work for events too....","username":"muralisr","ts":"2017-03-10T17:04:24.071Z"}
{"msg":"will try as soon as I can ...","username":"muralisr","ts":"2017-03-10T17:04:57.673Z"}
{"msg":"ok cool, that's what I'd expected, just double checking, I'll continue to dig into the client code about that...","username":"jimthematrix","ts":"2017-03-10T17:13:54.782Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=79uvmiBoeQLmBo36h) @binhn I think you always can create a branch from a tag if you decided later you want to provided fixes ","username":"rickr","ts":"2017-03-10T17:22:47.320Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=79uvmiBoeQLmBo36h","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=79uvmiBoeQLmBo36h","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I think we should tag what we release, yes. (as in \"a pointer in time\").","username":"JonathanLevi","ts":"2017-03-10T18:04:26.705Z"}
{"msg":"We many end up though, with needing to create branches in the future.","username":"JonathanLevi","ts":"2017-03-10T18:04:58.877Z"}
{"msg":"We many end up, though, needing to create branches in the future.","username":"JonathanLevi","ts":"2017-03-10T18:04:58.877Z"}
{"msg":"In this point in time, we were all trying to avoid working with too many versions on the code in parallel, which is why we push so much work into *master*... ","username":"JonathanLevi","ts":"2017-03-10T18:06:04.718Z"}
{"msg":"At this point in time, we were all trying to avoid working with too many versions on the code in parallel, which is why we push so much work into *master*... ","username":"JonathanLevi","ts":"2017-03-10T18:06:04.718Z"}
{"msg":"But say once people deploy v1.0 and then we will have a v1.2 that has some new features/API changes, etc.","username":"JonathanLevi","ts":"2017-03-10T18:06:36.828Z"}
{"msg":"But say once people deploy v1.0 and then we will have a v1.2 (branch/version in development) that has some new features/API changes, etc.","username":"JonathanLevi","ts":"2017-03-10T18:06:36.828Z"}
{"msg":"Then we need to patch/fix/update v1.0 to (heaven forbid! :) v1.0.1, v1.0.2 or so...","username":"JonathanLevi","ts":"2017-03-10T18:07:13.593Z"}
{"msg":"Then, for example, should we need to patch/fix/update v1.0 and call/version it as (heaven forbid! :) v1.0.1, v1.0.2 or so...","username":"JonathanLevi","ts":"2017-03-10T18:07:13.593Z"}
{"msg":"Then, for example, should we need to patch/fix/update v1.0 and call/version/mark these as [heaven forbid! :)] `v1.0.1`, `v1.0.2` or so...","username":"JonathanLevi","ts":"2017-03-10T18:07:13.593Z"}
{"msg":"... these patches/updates/bug-fixes/improvements, may not be relevant on that v1.2 code base (which is where I envision us branching).","username":"JonathanLevi","ts":"2017-03-10T18:08:06.511Z"}
{"msg":"... these patches/updates/bug-fixes/improvements, may not be relevant to that v1.2 code-base (which is where I envision us branching).","username":"JonathanLevi","ts":"2017-03-10T18:08:06.511Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-03-10T18:08:07.760Z"}
{"msg":"Long story short `+2 for me for tagging` (v1.0-alpha, and subsequent related versions), at least until the next formal `release`.","username":"JonathanLevi","ts":"2017-03-10T18:09:01.521Z"}
{"msg":"Long story short `+2 for me for tagging` (v1.0-alpha, and subsequent related versions), at least until the/our next formal `release`.","username":"JonathanLevi","ts":"2017-03-10T18:09:01.521Z"}
{"msg":"Long story short, I agree with @binhn: `+2 for me for tagging` (v1.0-alpha, and subsequent related versions), at least until the/our next formal `release`.","username":"JonathanLevi","ts":"2017-03-10T18:09:01.521Z"}
{"msg":"@muralisr @jeffgarratt @binhn are you guys testing orderer with tls enabled? i didn't think that's enabled yet right? (pretty evident from orderer/main.go: line 73-77)","username":"jimthematrix","ts":"2017-03-10T18:13:58.418Z"}
{"msg":"however when orderer is not TLS enabled, getting this error in the peer logs:\n```peer0      | 2017-03-10 17:55:47.446 UTC [deliveryClient] NewDeliverService -> ERRO 031 Cannot dial to orderer:7050, because of grpc: transport credentials are set for an insecure connection (grpc.WithTransportCredentials() and grpc.WithInsecure() are both called)```","username":"jimthematrix","ts":"2017-03-10T18:14:47.885Z"}
{"msg":"ah that's a easy to fix @jimthematrix ","username":"yacovm","ts":"2017-03-10T18:17:15.084Z"}
{"msg":"https://github.com/hyperledger/fabric/blob/master/core/deliverservice/deliveryclient.go#L112","username":"yacovm","ts":"2017-03-10T18:17:37.390Z"}
{"msg":"Just remove the `grpc.WithInsecure()` ","username":"yacovm","ts":"2017-03-10T18:17:56.530Z"}
{"msg":"also it is interesting that we do this ","username":"muralisr","ts":"2017-03-10T18:19:48.979Z"}
{"msg":"```\t\tif comm.TLSEnabled() {\n\t\t\tdialOpts = append(dialOpts, grpc.WithTransportCredentials(comm.InitTLSForPeer()))\n\t\t} else {\n\t\t\tdialOpts = append(dialOpts, grpc.WithInsecure())\n\t\t}\n```","username":"muralisr","ts":"2017-03-10T18:19:59.676Z"}
{"msg":"is this logic correct though?","username":"jimthematrix","ts":"2017-03-10T18:21:00.200Z"}
{"msg":"ie, basically says \"orderer is enabled for peer if and only if peer is enabled for TLS\"","username":"muralisr","ts":"2017-03-10T18:21:14.941Z"}
{"msg":"comm.TLSEnabled() is for the peer server","username":"jimthematrix","ts":"2017-03-10T18:21:15.374Z"}
{"msg":"but this is the client to the ordering service","username":"jimthematrix","ts":"2017-03-10T18:21:25.103Z"}
{"msg":"yeah it could be more fine grained I agree","username":"yacovm","ts":"2017-03-10T18:21:41.918Z"}
{"msg":"but that will fix your bug, no?","username":"yacovm","ts":"2017-03-10T18:21:47.393Z"}
{"msg":"i don't think it'll fix my bug","username":"jimthematrix","ts":"2017-03-10T18:22:07.652Z"}
{"msg":":-)","username":"JonathanLevi","ts":"2017-03-10T18:22:13.269Z"}
{"msg":"comm.TLSEnabled() will always return true","username":"jimthematrix","ts":"2017-03-10T18:22:22.998Z"}
{"msg":"on the peer that has tls enabled","username":"jimthematrix","ts":"2017-03-10T18:22:28.670Z"}
{"msg":"so it can't talk to the ordering service","username":"jimthematrix","ts":"2017-03-10T18:22:38.848Z"}
{"msg":"actually","username":"jimthematrix","ts":"2017-03-10T18:23:26.839Z"}
{"msg":"the problem, as I see is that you try to use a gRPC connection with transport credentials, but that slice has already `withInsecure`","username":"yacovm","ts":"2017-03-10T18:23:28.300Z"}
{"msg":"i think you meant to remove it from the line above","username":"jimthematrix","ts":"2017-03-10T18:23:34.184Z"}
{"msg":"so it's a contradiction","username":"yacovm","ts":"2017-03-10T18:23:37.540Z"}
{"msg":"yeah that's what I said","username":"yacovm","ts":"2017-03-10T18:23:40.858Z"}
{"msg":"```\t\tdialOpts := []grpc.DialOption{grpc.WithInsecure(), grpc.WithTimeout(3 * time.Second), grpc.WithBlock()}\n```","username":"jimthematrix","ts":"2017-03-10T18:23:55.222Z"}
{"msg":"yep","username":"yacovm","ts":"2017-03-10T18:24:00.008Z"}
{"msg":"ok that makes sense","username":"jimthematrix","ts":"2017-03-10T18:24:02.593Z"}
{"msg":"You can try it: https://gerrit.hyperledger.org/r/#/c/7123/","username":"yacovm","ts":"2017-03-10T18:24:46.866Z"}
{"msg":"if that works I'll add a test when I get back (gotta go)","username":"yacovm","ts":"2017-03-10T18:25:18.041Z"}
{"msg":"so there's still a fundamental logic problem, as mentioned above, `comm.TLSEnabled()` doesn't tell you if the orderer is tls enabled","username":"jimthematrix","ts":"2017-03-10T18:31:07.445Z"}
{"msg":"so the dial options are still wrong","username":"jimthematrix","ts":"2017-03-10T18:31:17.016Z"}
{"msg":"The idea (i believe was that if the peer uses tls so does the orderer)","username":"yacovm","ts":"2017-03-10T18:32:37.776Z"}
{"msg":"The idea (i believe was) that if the peer uses tls so does the orderer","username":"yacovm","ts":"2017-03-10T18:32:37.776Z"}
{"msg":"i think that's reasonable but it also means we need to enable tls on the orderer at the same time","username":"jimthematrix","ts":"2017-03-10T18:35:46.457Z"}
{"msg":"let me try that","username":"jimthematrix","ts":"2017-03-10T18:36:03.582Z"}
{"msg":"i don't think it'll work though: orderer/main.go: 73-77\n```\t// Create GRPC server - return if an error occurs\n\tsecureConfig := comm.SecureServerConfig{\n\t\tUseTLS: conf.General.TLS.Enabled,\n\t}\n\tgrpcServer, err := comm.NewGRPCServerFromListener(lis, secureConfig)\n```","username":"jimthematrix","ts":"2017-03-10T18:37:29.268Z"}
{"msg":"it crashes complaining that the server key and certs are missing","username":"jimthematrix","ts":"2017-03-10T18:37:50.794Z"}
{"msg":"@binhn @yacovm @mastersingh24 @muralisr  we need to decide what to do for the alpha","username":"jimthematrix","ts":"2017-03-10T18:52:54.882Z"}
{"msg":"my suggestion is something like this:\n\n```--- a/core/deliverservice/deliveryclient.go\n+++ b/core/deliverservice/deliveryclient.go\n@@ -106,9 +106,9 @@ func NewDeliverService(gossip blocksprovider.GossipServiceAdapter, endpoints []s\n        for _, idx := range indices {\n                logger.Infof(\"Creating delivery service to get blocks from the ordering service, %s\", endpoints[idx])\n \n-               dialOpts := []grpc.DialOption{grpc.WithInsecure(), grpc.WithTimeout(3 * time.Second), grpc.WithBlock()}\n+               dialOpts := []grpc.DialOption{grpc.WithTimeout(3 * time.Second), grpc.WithBlock()}\n \n-               if comm.TLSEnabled() {\n+               if false {\n                        dialOpts = append(dialOpts, grpc.WithTransportCredentials(comm.InitTLSForPeer()))\n                } else {\n                        dialOpts = append(dialOpts, grpc.WithInsecure())\n```","username":"jimthematrix","ts":"2017-03-10T18:53:23.165Z"}
{"msg":"to get around the issue for now","username":"jimthematrix","ts":"2017-03-10T18:53:43.858Z"}
{"msg":"aka 1) keep orderer tls-disabled 2) deliver service always assume the orderer is not tls enabled","username":"jimthematrix","ts":"2017-03-10T18:54:20.084Z"}
{"msg":"unless @jyellick thinks the orderer can be tls enabled in the next couple of hours (and tested)","username":"jimthematrix","ts":"2017-03-10T18:54:59.333Z"}
{"msg":"May I ask what is the issue with enabling TLS on the orderer?","username":"kostas","ts":"2017-03-10T18:56:55.056Z"}
{"msg":"@jimthematrix The orderer is using all the same code as the peer for TLS ( @mastersingh24 's TLS server), I see you describe a crash, but that seems to me like misconfiguration, that it cannot find the TLS certs","username":"jyellick","ts":"2017-03-10T18:57:26.676Z"}
{"msg":"(@jimthematrix: This is your config file for the orderer. https://github.com/hyperledger/fabric/blob/master/orderer/orderer.yaml#L26)","username":"kostas","ts":"2017-03-10T18:59:11.473Z"}
{"msg":"@kostas @jyellick i used the orderer.yaml as reference to add env variables to the docker compose","username":"jimthematrix","ts":"2017-03-10T19:03:25.046Z"}
{"msg":"but i think the grpcserver code that Gari added used different var paths (thus the crash)","username":"jimthematrix","ts":"2017-03-10T19:03:55.511Z"}
{"msg":"will investigate a bit more again","username":"jimthematrix","ts":"2017-03-10T19:04:05.906Z"}
{"msg":"there are two issues ...(1) we can have TLS enabled for both or for neither ... other two combinations are not possible. (comm.TLSEnabled() basically says its enabled for both) and (2) need to use comm.NewClientConnectionWithAddress instead of dial directly","username":"muralisr","ts":"2017-03-10T19:04:14.594Z"}
{"msg":"@jimthematrix Could you outline how you are trying to test? I would be happy to try to reproduce and help debug","username":"jyellick","ts":"2017-03-10T19:06:02.967Z"}
{"msg":"```      - ORDERER_GENERAL_TLS_ENABLED=true\n      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/tls-config/Org1-server1-key.pem\n      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/tls-config/Org1-server1-cert.pem\n      - ORDERER_GENERAL_TLS_ROOTCAs=/etc/hyperledger/tls-config/caroots.pem\n```","username":"jimthematrix","ts":"2017-03-10T19:07:25.494Z"}
{"msg":"Is this the orderer docker image? What commit are you trying this as?","username":"jyellick","ts":"2017-03-10T19:07:56.994Z"}
{"msg":"Is this the orderer docker image? What commit are you trying this at?","username":"jyellick","ts":"2017-03-10T19:07:56.994Z"}
{"msg":"I think I pulled last night","username":"jimthematrix","ts":"2017-03-10T19:09:17.585Z"}
{"msg":"key and cert are from the core/comm/testdata folder, caroots.pem is Org1-cert and Or2-cert concatenated","username":"jimthematrix","ts":"2017-03-10T19:10:42.776Z"}
{"msg":"if I used these env var names instead then the orderer doesn't crash:\n```      - ORDERER_PEER_TLS_ENABLED=true\n      - ORDERER_PEER_TLS_KEY_FILE=/etc/hyperledger/tls-config/Org1-server1-key.pem\n      - ORDERER_PEER_TLS_CERT_FILE=/etc/hyperledger/tls-config/Org1-server1-cert.pem\n      - ORDERER_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls-config/caroots/Org1-cert.pem\n```","username":"jimthematrix","ts":"2017-03-10T19:11:58.718Z"}
{"msg":"again due to Gari's code using a different var hierarchy than what's described in orderer.yaml","username":"jimthematrix","ts":"2017-03-10T19:12:24.825Z"}
{"msg":"Ah, I see now, let me see if I can put a quick fix together","username":"jyellick","ts":"2017-03-10T19:15:16.555Z"}
{"msg":"@jimthematrix I did a very quick hack to appropriately set the `SecureServerConfig` stuff, but @sanchezl is the one who implemented the yaml decode hooks for the cert stuff, so I am passing it off to him to test.","username":"jyellick","ts":"2017-03-10T19:55:44.731Z"}
{"msg":"The yaml hooks he wrote are actually pretty neat because it allows us to specify cert literals or file paths, and the config gets populated in the right way in both cases without two code paths.","username":"jyellick","ts":"2017-03-10T19:56:33.617Z"}
{"msg":"sounds good. i've got local hacks so i'm not blocked, but battled with this error when submitting from node sdk:\n```Handshake failed with fatal error SSL_ERROR_SSL: error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number```","username":"jimthematrix","ts":"2017-03-10T20:00:02.838Z"}
{"msg":"i'm pretty sure i'm forcing tls v1.2 on both sides but still can't get past this when contacting the orderer","username":"jimthematrix","ts":"2017-03-10T20:00:42.709Z"}
{"msg":"(as an aside, @jimthematrix are you having issue with events client as well ?)","username":"muralisr","ts":"2017-03-10T20:01:18.781Z"}
{"msg":" http://gerrit.hyperledger.org/r/7129 <- this is the hack to get it working, @sanchezl will verify the fix, and post correct parameters here","username":"jyellick","ts":"2017-03-10T20:02:21.103Z"}
{"msg":"@jimthematrix i saw in @muralisr 's test, he sets this on peer CORE_PEER_PKI_TLS_SERVERHOSTOVERRIDE=dummy, but i don't see that variable on orderer.yaml","username":"binhn","ts":"2017-03-10T20:45:57.549Z"}
{"msg":"It seems that through some interaction, the peer config parsing is being triggered when running the orderer, that is why the other overrides are working.","username":"jyellick","ts":"2017-03-10T20:47:55.015Z"}
{"msg":"@jyellick will try as well, do I need to a patch on orderer to test ?","username":"muralisr","ts":"2017-03-10T21:15:02.566Z"}
{"msg":"7129 above fixes the variable conventions, though it can apparently can be hacked around with the peer vars according to @jimthematrix ","username":"jyellick","ts":"2017-03-10T21:16:08.183Z"}
{"msg":"ok","username":"muralisr","ts":"2017-03-10T21:20:19.392Z"}
{"msg":"let me try","username":"muralisr","ts":"2017-03-10T21:20:32.222Z"}
{"msg":"@muralisr Do keep in mind, to reference a file for those orderer vars, you must use a sub-tag `file`, @sanchezl should hopefully have a working configuration he can post here shortly","username":"jyellick","ts":"2017-03-10T21:23:24.436Z"}
{"msg":"thanks Jason.. will do the needful ","username":"muralisr","ts":"2017-03-10T21:24:25.867Z"}
{"msg":"2 CR's to cherrypick and test TLS:  https://gerrit.hyperledger.org/r/#/c/7127/ and https://gerrit.hyperledger.org/r/#/c/7133/ (note the flag in core.yaml `skipHandshake: true`","username":"binhn","ts":"2017-03-10T21:52:58.270Z"}
{"msg":"@jimthematrix , @jyellick , @muralisr The latest patch set for change http://gerrit.hyperledger.org/r/7129 should ensure that the TLS configuration get read when appending `_FILE` to the environment variables in order to read the values from a file. e.g.:\n```\nORDERER_GENERAL_TLS_PRIVATEKEY_FILE=/etc/hyperledger/tls-config/Org1-server1-key.pem\nORDERER_GENERAL_TLS_CERTIFICATE_FILE=/etc/hyperledger/tls-config/Org1-server1-cert.pem\nORDERER_GENERAL_TLS_ROOTCAS_FILE=/etc/hyperledger/tls-config/caroots.pem\netc...\n```","username":"sanchezl","ts":"2017-03-10T23:00:12.235Z"}
{"msg":"@jimthematrix , @jyellick , @muralisr The latest patch set for change http://gerrit.hyperledger.org/r/7129 should ensure that the TLS configuration is read when appending `_FILE` to the environment variables in order to read the values from a file. e.g.:\n```\nORDERER_GENERAL_TLS_PRIVATEKEY_FILE=/etc/hyperledger/tls-config/Org1-server1-key.pem\nORDERER_GENERAL_TLS_CERTIFICATE_FILE=/etc/hyperledger/tls-config/Org1-server1-cert.pem\nORDERER_GENERAL_TLS_ROOTCAS_FILE=/etc/hyperledger/tls-config/caroots.pem\netc...\n```","username":"sanchezl","ts":"2017-03-10T23:00:12.235Z"}
{"msg":"Has joined the channel.","username":"mychewcents","ts":"2017-03-15T12:29:26.746Z","type":"uj"}
{"msg":"---","username":"JonathanLevi","ts":"2017-03-15T17:00:05.699Z"}
{"msg":"Shall we announce a CODE FREEZE widely?","username":"JonathanLevi","ts":"2017-03-15T17:00:12.078Z"}
{"msg":"@greg.haskins  waiting for 2 more small Cr's to go through then we tackle https://jira.hyperledger.org/browse/FAB-2764 ","username":"binhn","ts":"2017-03-15T17:40:43.417Z"}
{"msg":"we were talking about tagging the master or branching, whichever is fine ","username":"binhn","ts":"2017-03-15T17:41:35.943Z"}
{"msg":"question on tagging a new release:\n1) the first CR changes the makefile to `BASE_VERSION   = 1.0-alpha` and `IS_RELEASE     = true`\n2) the second CR changes the makefile to `BASE_VERSION   = 1.0` and `IS_RELEASE     = false`\nis that correct?","username":"binhn","ts":"2017-03-15T19:01:26.933Z"}
{"msg":"@binhn off the phone...correct","username":"greg.haskins","ts":"2017-03-15T19:04:20.994Z"}
{"msg":"the first component is the release commits, as you have indicated above","username":"greg.haskins","ts":"2017-03-15T19:04:46.951Z"}
{"msg":"they should go back to back (i.e.merged together) so that there are no gaps where mulltiple commits have IS_RELEASE=true","username":"greg.haskins","ts":"2017-03-15T19:05:15.910Z"}
{"msg":"(e.g. if you merged the first and then a week later merged the second)","username":"greg.haskins","ts":"2017-03-15T19:05:26.886Z"}
{"msg":"the second aspect is, once these CRs are merged, I can push a tag against the commit-id of the IS_RELEASE=true...this tag will of course tag it in gerrit/gh, but it also serves to kick jenkins to build/push the release out to dockerhub","username":"greg.haskins","ts":"2017-03-15T19:06:16.591Z"}
{"msg":"the last component is deciding if a branch is needed","username":"greg.haskins","ts":"2017-03-15T19:06:34.428Z"}
{"msg":"iff we want to create a one-off (meaning there is not likely to be a follow up release based on the first), we can opt to simply do this against HEAD without a branch","username":"greg.haskins","ts":"2017-03-15T19:07:21.327Z"}
{"msg":"BUT, if future patches are anticipated, OR if the tag is against something in the past (i.e. not HEAD), we should also create a branch point from the IS_RELEASE CR","username":"greg.haskins","ts":"2017-03-15T19:08:01.481Z"}
{"msg":"that above sums it up","username":"greg.haskins","ts":"2017-03-15T19:08:11.782Z"}
{"msg":"that about sums it up","username":"greg.haskins","ts":"2017-03-15T19:08:11.782Z"}
{"msg":"@greg.haskins thanks -- creating them now\nThe label of the first CR is \"Release 1.0-alpha\"","username":"binhn","ts":"2017-03-15T19:08:29.028Z"}
{"msg":"cool...usually I name the second one \"preparing for XX release\" where \"XX\" is whatever would make a best guess to the next release ID","username":"greg.haskins","ts":"2017-03-15T19:09:11.440Z"}
{"msg":"i think we can create a branch later if we need to patch, right?","username":"binhn","ts":"2017-03-15T19:09:13.961Z"}
{"msg":"yes, we can branch off the release CR at any time","username":"greg.haskins","ts":"2017-03-15T19:09:27.302Z"}
{"msg":"ok, let's do that then","username":"binhn","ts":"2017-03-15T19:09:42.938Z"}
{"msg":"the only time you should really create a branch first is if you want to release a past CR","username":"greg.haskins","ts":"2017-03-15T19:09:44.196Z"}
{"msg":"sorry, the only time you are _forced_ to create a branch first","username":"greg.haskins","ts":"2017-03-15T19:09:59.782Z"}
{"msg":"ok","username":"binhn","ts":"2017-03-15T19:10:30.687Z"}
{"msg":"do you anticipate this is the one/only alpha release?","username":"greg.haskins","ts":"2017-03-15T19:11:42.932Z"}
{"msg":"if not, I suggest a sub version id, like \"1.0-alpha-1\"","username":"greg.haskins","ts":"2017-03-15T19:12:01.130Z"}
{"msg":"yes, it'll be the only alpha release","username":"binhn","ts":"2017-03-15T19:13:48.370Z"}
{"msg":"i like your confidence ;)","username":"greg.haskins","ts":"2017-03-15T19:18:20.908Z"}
{"msg":":fingers_crossed:","username":"binhn","ts":"2017-03-15T19:33:16.312Z"}
{"msg":"Please approve these CR's tagging for alpha release:\nrelease 1.0-alpha  https://gerrit.hyperledger.org/r/#/c/7241/\nrelease 1.0 https://gerrit.hyperledger.org/r/#/c/7243/","username":"binhn","ts":"2017-03-15T20:23:54.783Z"}
{"msg":"@greg.haskins @mastersingh24 @muralisr @JonathanLevi ","username":"binhn","ts":"2017-03-15T20:24:38.817Z"}
{"msg":"@binhn  - can we use 3 digit version - 1.0.0-alpha and 1.0.0?","username":"mastersingh24","ts":"2017-03-15T20:59:09.728Z"}
{"msg":"sure, let me push a patch","username":"binhn","ts":"2017-03-15T21:02:27.571Z"}
{"msg":"thx","username":"mastersingh24","ts":"2017-03-15T21:02:31.919Z"}
{"msg":"@mastersingh24 done","username":"binhn","ts":"2017-03-15T21:09:53.402Z"}
{"msg":"@greg.haskins we don't have the same procedure for other fabric repos, like fabric-ca and fabric-sdk,  so i think we should just manually tag them with 1.0.0-alpha,  right?","username":"binhn","ts":"2017-03-15T21:11:04.315Z"}
{"msg":"+2'd","username":"mastersingh24","ts":"2017-03-15T21:12:57.545Z"}
{"msg":"i don't seem to have authority to create tags on other repos. \nsomeone can help tag fabric-ca and fabric-skd-node with \"1.0.0-alpha\"","username":"binhn","ts":"2017-03-15T21:53:09.539Z"}
{"msg":"@binhn we cant/shouldnt tag until the CR is merged","username":"greg.haskins","ts":"2017-03-15T22:08:44.775Z"}
{"msg":"what are you trying to tag?","username":"greg.haskins","ts":"2017-03-15T22:08:54.090Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=hAnoJJ8aLTnXJWocX) @binhn at least fabric-ca has the same mechanism","username":"greg.haskins","ts":"2017-03-15T22:10:09.217Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=hAnoJJ8aLTnXJWocX","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=hAnoJJ8aLTnXJWocX","remote":true,"fileId":null,"fileName":null}]}
{"msg":"i think for sdk, we should follow the same basic practice but I think the version number would be configured in the package.json rather than a makefile","username":"greg.haskins","ts":"2017-03-15T22:10:35.627Z"}
{"msg":"to summarize: both fabric and fabric-ca should use the \"two CRs against IS_RELEASE in the Makefile approach\"","username":"greg.haskins","ts":"2017-03-15T22:11:53.527Z"}
{"msg":"sdk should also have a two CR process, but the difference is it would be against updating the version number in package.json(s)","username":"greg.haskins","ts":"2017-03-15T22:12:21.959Z"}
{"msg":"@binhn we should confirm with @jimthematrix but I think the SDK process needs two files updated","username":"greg.haskins","ts":"2017-03-15T22:15:27.418Z"}
{"msg":"https://github.com/hyperledger/fabric-sdk-node/blob/3afcb0aee1826f21c000f5226e74ef309f73be73/fabric-client/package.json#L3","username":"greg.haskins","ts":"2017-03-15T22:15:29.822Z"}
{"msg":"https://github.com/hyperledger/fabric-sdk-node/blob/3afcb0aee1826f21c000f5226e74ef309f73be73/fabric-ca-client/package.json#L3","username":"greg.haskins","ts":"2017-03-15T22:15:49.215Z"}
{"msg":"those should be changed to \"1.0.0-alpha\" in the first CR, and then something like \"1.0.0-snapshot\" in the second","username":"greg.haskins","ts":"2017-03-15T22:16:20.355Z"}
{"msg":"(there is no \"IS_RELEASE\" analogy in the sdk build, so the snapshot tag needs to be explicit)","username":"greg.haskins","ts":"2017-03-15T22:16:54.287Z"}
{"msg":"@mastersingh24 @greg.haskins @binhn we haven't declared an alpha yet have we? ","username":"dave.enyeart","ts":"2017-03-15T22:19:41.182Z"}
{"msg":"we just found that the instructions don't account for the recent TLS changes","username":"dave.enyeart","ts":"2017-03-15T22:19:53.913Z"}
{"msg":"@dave.enyeart apparently, though I wasnt involved in the decision, I am just assisting in the process","username":"greg.haskins","ts":"2017-03-15T22:20:17.325Z"}
{"msg":"apparently we declared an alpha? or not yet?","username":"dave.enyeart","ts":"2017-03-15T22:20:44.751Z"}
{"msg":"apparently we declared one","username":"greg.haskins","ts":"2017-03-15T22:20:53.765Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/7241/","username":"greg.haskins","ts":"2017-03-15T22:21:09.656Z"}
{"msg":"thats the proposed fabric release, I think fabric-ca and sdk are still pending","username":"greg.haskins","ts":"2017-03-15T22:21:22.323Z"}
{"msg":"Shall we update the title?","username":"JonathanLevi","ts":"2017-03-15T22:24:21.742Z"}
{"msg":"I'm not so worried about being able to make doc updates - I feel those are going to be a work in progress anyway over the next couple of weeks as people actually start using the images","username":"mastersingh24","ts":"2017-03-15T22:44:58.479Z"}
{"msg":"I think doc updates post release is fine too","username":"greg.haskins","ts":"2017-03-15T22:51:02.836Z"}
{"msg":"I agree. I think we are also good with `fabric-ca`","username":"JonathanLevi","ts":"2017-03-15T22:51:46.645Z"}
{"msg":"(In the meantime, I have asked around, just in case - but things look good)","username":"JonathanLevi","ts":"2017-03-15T22:52:25.361Z"}
{"msg":"@greg.haskins @binhn @mastersingh24 I drafted an automatically triggered release process similar to what fabric uses in this JIRA task: https://jira.hyperledger.org/browse/FAB-2802","username":"jimthematrix","ts":"2017-03-16T00:03:05.057Z"}
{"msg":"Has joined the channel.","username":"AdnanC","ts":"2017-03-16T00:16:52.203Z","type":"uj"}
{"msg":"as far as creating the tag, are we waiting for something?","username":"jimthematrix","ts":"2017-03-16T00:20:30.286Z"}
{"msg":"@jimthematrix normally I would say we are waiting for the CR pair that tickles the is-release property as in your JIRA","username":"greg.haskins","ts":"2017-03-16T00:23:47.213Z"}
{"msg":"btw: the flag itself might not be strictly necessary if you want to emulate fabric/fabric-ca...the flag in those contexts is more about auto-managing the version than it is about the actual release","username":"greg.haskins","ts":"2017-03-16T00:24:53.344Z"}
{"msg":"the release process is actually triggered by pushing a git tag","username":"greg.haskins","ts":"2017-03-16T00:25:07.315Z"}
{"msg":"(because we add -snapshot-$gitsha to the version if its not a release)","username":"greg.haskins","ts":"2017-03-16T00:25:54.368Z"}
{"msg":"if you dont have that opportunity in nodejs, you might just want to manage it manually in the package.json by adding a \"-snapshot\" suffix ","username":"greg.haskins","ts":"2017-03-16T00:26:59.264Z"}
{"msg":"then sdk release process would just be submit an un-suffixed version CR as release, + a re-suffixed+bumped CR","username":"greg.haskins","ts":"2017-03-16T00:27:52.247Z"}
{"msg":"_we add -snapshot-$gitsha to the version if its not a release_, is the -snapshot-$gitsha tracked in a file?","username":"jimthematrix","ts":"2017-03-16T00:30:07.756Z"}
{"msg":"not sure what you mean","username":"greg.haskins","ts":"2017-03-16T00:30:25.130Z"}
{"msg":"we synthesize it based on your environment: https://github.com/hyperledger/fabric/blob/14055d70d9593e99295c7846076fc9dcfb1e052e/Makefile#L42","username":"greg.haskins","ts":"2017-03-16T00:31:05.776Z"}
{"msg":"essentially its formed by Makefile::IS_RELEASE=false and `git rev-parse`","username":"greg.haskins","ts":"2017-03-16T00:31:40.864Z"}
{"msg":"i see","username":"jimthematrix","ts":"2017-03-16T00:32:11.574Z"}
{"msg":"for lack of a better option, I still thinking just manually augmenting the version with \"-snapshot\" except for when cutting a release is not a bad idea","username":"greg.haskins","ts":"2017-03-16T00:34:06.278Z"}
{"msg":"its better than allowing multiple builds emit with the same tag (as it does today)","username":"greg.haskins","ts":"2017-03-16T00:34:42.073Z"}
{"msg":"(IMO)","username":"greg.haskins","ts":"2017-03-16T00:35:04.895Z"}
{"msg":"agree, i'll revise the proposal","username":"jimthematrix","ts":"2017-03-16T00:38:08.486Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-2802 (revised, @greg.haskins )","username":"jimthematrix","ts":"2017-03-16T00:57:35.967Z"}
{"msg":"looks good","username":"greg.haskins","ts":"2017-03-16T01:01:21.915Z"}
{"msg":"you might want to consider tagging as part of the flow:  e.g. you have two basic options as I see it","username":"greg.haskins","ts":"2017-03-16T01:02:06.696Z"}
{"msg":"1) follow what fabric does and trigger on the tag push, not on the contents of the repo","username":"greg.haskins","ts":"2017-03-16T01:02:32.858Z"}
{"msg":"2) alternatively, still process the repo, but add the ability to have the CI generate a tag when it passes","username":"greg.haskins","ts":"2017-03-16T01:02:54.551Z"}
{"msg":"the most important part, ultimately, is that there is a tag on the release one way or the other","username":"greg.haskins","ts":"2017-03-16T01:03:13.022Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/7251/  fix for the end2end instructions to account for required TLS flags. Is it too late to review and merge? ","username":"AdnanC","ts":"2017-03-16T01:47:20.897Z"}
{"msg":"People has began to look at the document and started using it, including CouchDB instructions. It'd be helpful to them.","username":"AdnanC","ts":"2017-03-16T01:47:55.700Z"}
{"msg":"@AdnanC  - 2 things - I don't think there are issues updating the readme - but frankly why are we not including this in the readthedocs as well?  (which are likely going to need to be updated)","username":"mastersingh24","ts":"2017-03-16T09:56:03.843Z"}
{"msg":"@mastersingh24 yes, there is a separate changeset by Nick waiting for review that does that (taking this doc and including it in readthedocs)","username":"AdnanC","ts":"2017-03-16T12:20:50.475Z"}
{"msg":"@greg.haskins I felt sick last night and this morning is terrible... so i think we should merge 1.0.0-alpha to kick off the process ","username":"binhn","ts":"2017-03-16T12:44:29.315Z"}
{"msg":"@binhn its critical to merge both CRs together","username":"greg.haskins","ts":"2017-03-16T12:44:59.191Z"}
{"msg":"so, if we fix up the other, and the other maintainers agree its the right call, they can go in","username":"greg.haskins","ts":"2017-03-16T12:45:19.046Z"}
{"msg":"(also, sorry you are not feeling well)","username":"greg.haskins","ts":"2017-03-16T12:45:48.736Z"}
{"msg":"thanks -- \"if we fix up the other\" meaning fabric-ca and sdk ?","username":"binhn","ts":"2017-03-16T12:46:10.584Z"}
{"msg":"no, i mean 7241/7243 must go as a set","username":"greg.haskins","ts":"2017-03-16T12:46:30.544Z"}
{"msg":"(but yes, it would make sense to also release ca/sdk too)","username":"greg.haskins","ts":"2017-03-16T12:46:45.629Z"}
{"msg":"I just want to avoid the situation where we have 7241 merge without 7243, else we end up with a potential for confusion","username":"greg.haskins","ts":"2017-03-16T12:47:18.918Z"}
{"msg":"I just want to avoid the situation where we have 7241 merged without 7243, else we end up with a potential for confusion","username":"greg.haskins","ts":"2017-03-16T12:47:18.918Z"}
{"msg":"when its ready, and I have no opinion one way or the other, both should be committed in one fell swoop ","username":"greg.haskins","ts":"2017-03-16T12:48:24.554Z"}
{"msg":"ok, makes sense\n\nyesterday, i thought that since we don't have the same process yet on ca and sdk, we could just tag them, and work on the process after, but it looks like Jim has started on sdk","username":"binhn","ts":"2017-03-16T12:49:06.992Z"}
{"msg":"i dont think that is true","username":"greg.haskins","ts":"2017-03-16T12:49:26.035Z"}
{"msg":"fabric-ca uses the exact mechanism as fabric afaict, and I think we can do it on sdk as well","username":"greg.haskins","ts":"2017-03-16T12:49:46.893Z"}
{"msg":"just slightly different for sdk","username":"greg.haskins","ts":"2017-03-16T12:49:59.873Z"}
{"msg":"sdk doesnt have \"IS_RELEASE\" but the same dual-CR+tag approach should work","username":"greg.haskins","ts":"2017-03-16T12:50:19.590Z"}
{"msg":"what about fabric-ca?  could we just copy the process from fabric over","username":"binhn","ts":"2017-03-16T12:50:57.362Z"}
{"msg":"what might not exist for ca/sdk is the CI push of the image","username":"greg.haskins","ts":"2017-03-16T12:51:07.328Z"}
{"msg":"fabric-ca def has the IS_RELEASE logic","username":"greg.haskins","ts":"2017-03-16T12:51:21.249Z"}
{"msg":"ok, i 'll ask Ramesh about the ci push of the image ","username":"binhn","ts":"2017-03-16T12:52:22.221Z"}
{"msg":"I can stage the CRs for the other two repos if you'd like","username":"greg.haskins","ts":"2017-03-16T12:53:23.754Z"}
{"msg":"yes please do","username":"binhn","ts":"2017-03-16T12:54:43.022Z"}
{"msg":"i didn't something wrong yesterday;  i merged alpha CR and 1.0.0 is in conflict that i have to rebase;  i thought i created them on top of each other","username":"binhn","ts":"2017-03-16T12:55:42.436Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/7265/","username":"greg.haskins","ts":"2017-03-16T12:59:04.784Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/7269/","username":"greg.haskins","ts":"2017-03-16T13:04:46.109Z"}
{"msg":"@binhn it would appear that you refreshed 7241 without also refreshing 7243, should be easy to fix","username":"greg.haskins","ts":"2017-03-16T13:05:25.120Z"}
{"msg":"@jimthematrix @JonathanLevi @smithbk note CRs above ^^^^","username":"greg.haskins","ts":"2017-03-16T13:06:10.336Z"}
{"msg":"notably the stacks at 7265 and 7269","username":"greg.haskins","ts":"2017-03-16T13:06:30.794Z"}
{"msg":"Yup...","username":"JonathanLevi","ts":"2017-03-16T13:06:32.281Z"}
{"msg":"Yup... so do we want to change that title of https://gerrit.hyperledger.org/r/#/c/7243 ?","username":"JonathanLevi","ts":"2017-03-16T13:06:32.281Z"}
{"msg":"Yup... so do we want to change that title of https://gerrit.hyperledger.org/r/#/c/7243 ? Rather than calling it the full-blown Release?\n\nLast thing I/we need is somebody writing up a wrong blog about the right project, just at the wrong time :D","username":"JonathanLevi","ts":"2017-03-16T13:06:32.281Z"}
{"msg":"Yup... so do we want to change that title of https://gerrit.hyperledger.org/r/#/c/7243 ? Rather than calling it the full-blown Release?\n\nLast thing I/we need is somebody writing up a `wrong` blog about the `right` project, just at the `wrong` time :D","username":"JonathanLevi","ts":"2017-03-16T13:06:32.281Z"}
{"msg":"Yup... so do we want to change that title of https://gerrit.hyperledger.org/r/#/c/7243 ? Rather than calling it the full-blown Release?\n\nLast thing I/we need is somebody writing up an `inaccurate blog` about the `right project`, just at the `wrong time` :D","username":"JonathanLevi","ts":"2017-03-16T13:06:32.281Z"}
{"msg":"Yup... so do we want to change that title of https://gerrit.hyperledger.org/r/#/c/7243 ? Rather than calling it the full-blown Release?\n\nLast thing I/we need is somebody writing up an `inaccurate blog` post about the `right project`, just at the `wrong time` :D","username":"JonathanLevi","ts":"2017-03-16T13:06:32.281Z"}
{"msg":"Yup... so do we want to change that title of https://gerrit.hyperledger.org/r/#/c/7243 ? Rather than calling it the full-blown Release?\n\nLast thing I/we need is somebody writing up an `inaccurate blog post` about the `right project`, just at the `wrong time` :D","username":"JonathanLevi","ts":"2017-03-16T13:06:32.281Z"}
{"msg":"Working under the assumption that we will have a post-alpha Release.","username":"JonathanLevi","ts":"2017-03-16T13:13:13.262Z"}
{"msg":"Working under the assumption that we will have a follow up with a non-alpha Release ^^^^.","username":"JonathanLevi","ts":"2017-03-16T13:13:13.262Z"}
{"msg":"@greg.haskins thanks for creating the two CRs for node sdk, look right to me. we don't have the CI updated to handle the trigger yet ( discussed with @rameshthoomu last night about this and he'll work on that, but don't believe it's in place yet)","username":"jimthematrix","ts":"2017-03-16T13:17:15.553Z"}
{"msg":"@greg.haskins I got a weird error when pushing my rebase, so new CR for fabric to reset the release https://gerrit.hyperledger.org/r/#/c/7271/","username":"binhn","ts":"2017-03-16T13:17:34.090Z"}
{"msg":"Has joined the channel.","username":"timblankers","ts":"2017-03-16T13:17:48.334Z","type":"uj"}
{"msg":"I suggest giving Ramesh a few hours to work this out so sdk release might lag behind fabric for a little bit","username":"jimthematrix","ts":"2017-03-16T13:17:50.086Z"}
{"msg":"Has joined the channel.","username":"antoniovassell","ts":"2017-03-16T13:18:17.150Z","type":"uj"}
{"msg":"@binhn Don't we want to call it Release 1.0.0-alpha in https://gerrit.hyperledger.org/r/#/c/7271 ?","username":"JonathanLevi","ts":"2017-03-16T13:19:57.664Z"}
{"msg":"@binhn Don't you/we want to call it Release 1.0.0-alpha in https://gerrit.hyperledger.org/r/#/c/7271 ?","username":"JonathanLevi","ts":"2017-03-16T13:19:57.664Z"}
{"msg":"(no need to restart the build, of course)","username":"JonathanLevi","ts":"2017-03-16T13:20:21.842Z"}
{"msg":"(no need to restart the build, of course - just the title/Commit Msg)","username":"JonathanLevi","ts":"2017-03-16T13:20:21.842Z"}
{"msg":"@JonathanLevi no since this is a follow on to 7241, so bump the base_version","username":"binhn","ts":"2017-03-16T13:21:45.913Z"}
{"msg":"assuming 1.0.0 after alpha","username":"binhn","ts":"2017-03-16T13:22:09.677Z"}
{"msg":"Has joined the channel.","username":"mrkiouak","ts":"2017-03-16T13:29:29.261Z","type":"uj"}
{"msg":"Has joined the channel.","username":"davidkel","ts":"2017-03-16T13:33:12.993Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rikmoedt","ts":"2017-03-16T13:34:07.327Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vriffier","ts":"2017-03-16T13:42:09.580Z","type":"uj"}
{"msg":"@mastersingh24 @binhn not sure what happened, but the first CRs were merged without the second","username":"greg.haskins","ts":"2017-03-16T13:47:04.730Z"}
{"msg":"please fix this by either merging the second CR or reverting the first","username":"greg.haskins","ts":"2017-03-16T13:47:22.837Z"}
{"msg":"(otherwise all commits that go in between the two will have IS_RELEASE=true set","username":"greg.haskins","ts":"2017-03-16T13:47:42.520Z"}
{"msg":"also, please halt merging anything else until the above is addressed","username":"greg.haskins","ts":"2017-03-16T13:48:10.237Z"}
{"msg":"did we actually create a build - i.e. publish images?","username":"mastersingh24","ts":"2017-03-16T13:50:23.721Z"}
{"msg":"@greg.haskins  - you gave https://gerrit.hyperledger.org/r/#/c/7271/  a -1  ","username":"mastersingh24","ts":"2017-03-16T13:51:00.741Z"}
{"msg":"ok - I edited https://gerrit.hyperledger.org/r/#/c/7271/2","username":"mastersingh24","ts":"2017-03-16T13:52:41.381Z"}
{"msg":"the name needs to be changed...cool","username":"greg.haskins","ts":"2017-03-16T13:52:47.339Z"}
{"msg":"but now I can't approve  ;)","username":"mastersingh24","ts":"2017-03-16T13:52:59.162Z"}
{"msg":"generally what I would suggest is for these releases: commit the top-level as a stack","username":"greg.haskins","ts":"2017-03-16T13:53:10.874Z"}
{"msg":"makes sense","username":"mastersingh24","ts":"2017-03-16T13:53:39.679Z"}
{"msg":"@JonathanLevi  - can you approve https://gerrit.hyperledger.org/r/#/c/7271/2 along with @greg.haskins ","username":"mastersingh24","ts":"2017-03-16T13:53:58.732Z"}
{"msg":"then we should be on track","username":"mastersingh24","ts":"2017-03-16T13:54:04.802Z"}
{"msg":"Shall I merge?","username":"JonathanLevi","ts":"2017-03-16T13:54:45.875Z"}
{"msg":"I'm happy with it.","username":"JonathanLevi","ts":"2017-03-16T13:54:57.706Z"}
{"msg":"Has joined the channel.","username":"asadhayat","ts":"2017-03-16T13:55:07.929Z","type":"uj"}
{"msg":"@mastersingh24: done","username":"JonathanLevi","ts":"2017-03-16T13:55:54.033Z"}
{"msg":"I will push the tag for fabric.git, which should trigger the dockerhub push","username":"greg.haskins","ts":"2017-03-16T13:56:45.280Z"}
{"msg":"https://github.com/hyperledger/fabric/releases/tag/v1.0.0-alpha","username":"greg.haskins","ts":"2017-03-16T14:05:40.451Z"}
{"msg":"https://jenkins.hyperledger.org/job/fabric-app-image-release-docker-x86_64/","username":"greg.haskins","ts":"2017-03-16T14:06:54.717Z"}
{"msg":"@greg.haskins I added an additional step in the sdk's release process (https://jira.hyperledger.org/browse/FAB-2802) for tagging, to be done at the very end manually. Ideally it should be done by the CI (like you said in option 2) but it'll require the CI account to be a maintainer/admin. so it can always be improved later.","username":"jimthematrix","ts":"2017-03-16T14:16:09.575Z"}
{"msg":"@greg.haskins CI failed to push images to dockerhub.. ","username":"rameshthoomu","ts":"2017-03-16T15:04:53.902Z"}
{"msg":"seems dockerhub credentials issue.. ","username":"rameshthoomu","ts":"2017-03-16T15:05:27.292Z"}
{"msg":"@rameshthoomu ok, ill leave it to you to sort that out...the tag is pushed so just work from that","username":"greg.haskins","ts":"2017-03-16T16:25:32.944Z"}
{"msg":"sure we are working on it..","username":"rameshthoomu","ts":"2017-03-16T16:26:46.253Z"}
{"msg":"ty","username":"greg.haskins","ts":"2017-03-16T16:26:50.161Z"}
{"msg":"could someone approve these release CRs  for fabric-ca  \nhttps://gerrit.hyperledger.org/r/#/c/7263/\nhttps://gerrit.hyperledger.org/r/#/c/7265/","username":"binhn","ts":"2017-03-16T18:08:43.451Z"}
{"msg":"@JonathanLevi @mastersingh24 @muralisr @jyellick @jimthematrix  ","username":"binhn","ts":"2017-03-16T18:09:26.780Z"}
{"msg":"is fabric-ca even set to trigger a publish off of this type of commit?","username":"mastersingh24","ts":"2017-03-16T18:13:18.633Z"}
{"msg":"@binhn +2-ed but did not submit, pending Gari's question","username":"jyellick","ts":"2017-03-16T18:17:47.664Z"}
{"msg":"@mastersingh24 @rameshthoomu is working on the ci push so we need the CRs to mark the location to build and push ","username":"binhn","ts":"2017-03-16T18:21:44.912Z"}
{"msg":"so he'll trigger it manually but pulling a commit level?","username":"mastersingh24","ts":"2017-03-16T18:23:24.575Z"}
{"msg":"since clearly merging this will not trigger it as this point","username":"mastersingh24","ts":"2017-03-16T18:23:40.068Z"}
{"msg":"ok - I merged both of them","username":"mastersingh24","ts":"2017-03-16T18:24:22.959Z"}
{"msg":"And I have reviewed them ;-)","username":"JonathanLevi","ts":"2017-03-16T18:25:10.737Z"}
{"msg":"@mastersingh24 yes, thanks","username":"binhn","ts":"2017-03-16T18:25:59.963Z"}
{"msg":"@mastersingh24 @binhn Are we creating v1.0.0-alpha tag  for fabric-ca repo?","username":"rameshthoomu","ts":"2017-03-16T18:37:52.344Z"}
{"msg":"yes, 7263 is to do that","username":"binhn","ts":"2017-03-16T18:38:34.235Z"}
{"msg":"@binhn I suspect he means the literal git-tag...ill create that now since 726[35] has been merged","username":"greg.haskins","ts":"2017-03-16T18:39:37.214Z"}
{"msg":"@greg.haskins ah, thanks ","username":"binhn","ts":"2017-03-16T18:41:00.474Z"}
{"msg":"done","username":"greg.haskins","ts":"2017-03-16T18:41:57.216Z"}
{"msg":"https://github.com/hyperledger/fabric-ca/releases/tag/v1.0.0-alpha","username":"greg.haskins","ts":"2017-03-16T18:42:52.203Z"}
{"msg":"Thanks @greg.haskins ","username":"rameshthoomu","ts":"2017-03-16T18:56:34.893Z"}
{"msg":"CI job triggered..","username":"rameshthoomu","ts":"2017-03-16T18:56:50.341Z"}
{"msg":"will update once images are published ","username":"rameshthoomu","ts":"2017-03-16T18:57:08.562Z"}
{"msg":"v1.0.0-alpha has been tagged in fabric-sdk-node","username":"jimthematrix","ts":"2017-03-16T19:35:12.427Z"}
{"msg":"now there's a v1.0-alpha branch that I created back in Feb for the SF hackfest. should I delete it to avoid confusion?","username":"jimthematrix","ts":"2017-03-16T19:35:52.431Z"}
{"msg":"All, published v1.0.0-alpha images to hyperledger dockerhub account","username":"rameshthoomu","ts":"2017-03-16T19:36:10.030Z"}
{"msg":"@rameshthoomu yes, let's remove that v1.0-alpha branch","username":"binhn","ts":"2017-03-16T19:38:24.440Z"}
{"msg":"@rameshthoomu  - anyone tried the e2ecli with the images?","username":"mastersingh24","ts":"2017-03-16T21:06:37.950Z"}
{"msg":"will test now.. working on npm module publish.. ","username":"rameshthoomu","ts":"2017-03-16T21:07:19.314Z"}
{"msg":"will update here in some time.. ","username":"rameshthoomu","ts":"2017-03-16T21:07:25.450Z"}
{"msg":"@mastersingh24 : Tested e2e (CLI) with TLS and couchdb ... It all worked as expected","username":"rameshthoomu","ts":"2017-03-16T21:39:45.414Z"}
{"msg":"testing node (e2e) and Java (e2e) .. will update status once done.. ","username":"rameshthoomu","ts":"2017-03-16T21:40:55.603Z"}
{"msg":"@mastersingh24 tested e2e using published images on latest fabric-sdk-node and fabric-sdk-java commits.. ","username":"rameshthoomu","ts":"2017-03-16T23:15:49.876Z"}
{"msg":"it's all working as expected.. ","username":"rameshthoomu","ts":"2017-03-16T23:15:56.905Z"}
{"msg":"posted commit levels and image references in #fabric-ci channel","username":"rameshthoomu","ts":"2017-03-16T23:16:16.059Z"}
{"msg":"Has joined the channel.","username":"RahulBagaria","ts":"2017-03-17T04:02:39.926Z","type":"uj"}
{"msg":"@rjones @cbf - do we have any place to host html-based sites?   the fabric-node-sdk currently generates some very nice HTML documentation, but we have not where that we know of to host it.   Here's what it look like using git pages:   https://mastersingh24.github.io/fabric-sdk-node/index.html","username":"mastersingh24","ts":"2017-03-17T11:05:22.633Z"}
{"msg":"nexus?","username":"cbf","ts":"2017-03-17T11:06:23.125Z"}
{"msg":"I figured out how to generate markdown compatible with readthedocs - but it's not as sexy -  http://singh-docs.readthedocs.io/en/latest/ca","username":"mastersingh24","ts":"2017-03-17T11:07:05.846Z"}
{"msg":"either that or stand up ngnix on the lf cloud hosting","username":"cbf","ts":"2017-03-17T11:07:22.722Z"}
{"msg":"could host html or md via github pages","username":"cbf","ts":"2017-03-17T11:07:53.019Z"}
{"msg":"I imagine we'll want to do the same thing for the Javadoc as well","username":"mastersingh24","ts":"2017-03-17T11:13:18.248Z"}
{"msg":"we don't have anything in general. I have a request to stand up an S3 bucket for the slack log export. I suspect I could ask IT to make this a canned item where we can publish static documents more regularly. As cbf noted we could also publish to nexus2 after some jiggling","username":"rjones","ts":"2017-03-17T11:29:16.527Z"}
{"msg":"_notes @rjones is still on leave and is not really here :)_","username":"rjones","ts":"2017-03-17T11:29:32.093Z"}
{"msg":"please be sure that all change requests have JIRA references, please","username":"cbf","ts":"2017-03-17T12:50:08.200Z"}
{"msg":"_hides from @cbf _","username":"greg.haskins","ts":"2017-03-17T13:59:52.137Z"}
{"msg":";-)","username":"cbf","ts":"2017-03-17T14:00:03.127Z"}
{"msg":"@rjones (or your deputy while you are on vacation) can we get the web server for hosting docs soon? i totally hate the readthedocs styling and i think it'll be a pity not to use great styling provided by tools like jsdoc3 (for instance this: jimthematrix.github.io), with the added benefit that it allows content written in jsdoc syntax and .md syntax all be integrated via the @tutorial support in jsdoc","username":"jimthematrix","ts":"2017-03-17T16:03:28.496Z"}
{"msg":"@rjones (or your deputy while you are on vacation) can we get the web server for hosting docs soon? i totally hate the readthedocs styling and i think it'll be a pity not to use great styling provided by tools like jsdoc3 (for instance this: jimthematrix.github.io), with the added benefit that it allows content written in jsdoc syntax and .md syntax all be integrated via the _at_tutorial support in jsdoc","username":"jimthematrix","ts":"2017-03-17T16:03:28.496Z"}
{"msg":"@rjones (or your deputy while you are on vacation) can we get the web server for hosting docs soon? i totally hate the readthedocs styling and i think it'll be a pity not to use great styling provided by tools like jsdoc3 (for instance this: jimthematrix.github.io), with the added benefit that it allows content written in jsdoc syntax and .md syntax all be integrated via the @tutorial tutorial support in jsdoc","username":"jimthematrix","ts":"2017-03-17T16:03:28.496Z"}
{"msg":"@jimthematrix yes... we can work on that.. I will bring this with Ry so that we can talk to IT about all the needs we have for this server","username":"jwagantall","ts":"2017-03-17T21:42:01.119Z"}
{"msg":"@jwagantall  - unless there's a better option / suggestion, it might be nice if we had a `hyperledger.github.io` git pages.  Basically we just need some from the hyperledger github organization to create a repository name `hyperledger.github.io`  and then we can publish the carious docs to sub-folders as required  ;)   that would be my suggestion","username":"mastersingh24","ts":"2017-03-17T22:12:20.979Z"}
{"msg":"@mastersingh24 I started to do that once but was pulled back as that apparently needs TSC approval.","username":"rjones","ts":"2017-03-17T22:13:00.889Z"}
{"msg":"I'm not for or against it (well, compared to setting up other hosting, I'm for it) but just letting you know the bar is a little higher than I expected","username":"rjones","ts":"2017-03-17T22:13:40.274Z"}
{"msg":"@rjones (who's really not here) - yeah - I can believe that.  But if we just need TSC approval and no one vehemently disagrees with the approach, should we come up with a proposal?","username":"mastersingh24","ts":"2017-03-17T22:24:13.453Z"}
{"msg":"@mastersingh24 sure. would this be a superset of the fabric documentation reorg?","username":"rjones","ts":"2017-03-17T23:28:42.296Z"}
{"msg":"Yeah - I believe so","username":"mastersingh24","ts":"2017-03-17T23:39:39.495Z"}
{"msg":"@rjones @mastersingh24 I have to admit not to really see why such a thing would need TSC approval, but if that is the case I would expect this to be easily done","username":"lehors","ts":"2017-03-19T17:29:10.868Z"}
{"msg":"@lehors perhaps I mis-remember. @rameshthoomu asked me to enable this some time ago and it was shot down.","username":"rjones","ts":"2017-03-19T22:48:21.576Z"}
{"msg":"Has joined the channel.","username":"mgk","ts":"2017-03-22T13:13:43.314Z","type":"uj"}
{"msg":"hi, I am trying to registrar v0.6, and I am getting this\n\nvp0_1 | 19:44:48.855 [rest] Register -> INFO 02c REST client login...\nvp0_1 | 19:44:48.856 [rest] Register -> INFO 02d Local data store for client loginToken: /var/hyperledger/production/client/\nvp0_1 | 19:44:48.856 [rest] Register -> INFO 02e Logging in user 'test_vp0' on REST interface...\nvp0_1 | 19:44:48.856 [crypto] RegisterClient -> INFO 02f Registering client [test_vp0] with name [test_vp0]...\nvp0_1 | 19:44:48.866 [crypto] Errorf -> ERRO 030 [client.test_vp0] Failed invoking CreateCertficatePair [rpc error: code = 2 desc = Identity or token does not match.].\nvp0_1 | 19:44:48.866 [crypto] Errorf -> ERRO 031 [client.test_vp0] Failed getting enrollment certificate [id=test_vp0]: [rpc error: code = 2 desc = Identity or token does not match.]\nvp0_1 | 19:44:48.866 [crypto] Errorf -> ERRO 032 [client.test_vp0] Failed retrieving enrollment data [rpc error: code = 2 desc = Identity or token does not match.].\nvp0_1 | 19:44:48.866 [crypto] Errorf -> ERRO 033 [client.test_vp0] Failed registering node crypto engine [rpc error: code = 2 desc = Identity or token does not match.].\nvp0_1 | 19:44:48.867 [crypto] Errorf -> ERRO 034 [client.test_vp0] Failed registering client [test_vp0]: [rpc error: code = 2 desc = Identity or token does not match.]\nvp0_1 | 19:44:48.867 [crypto] RegisterClient -> ERRO 035 Failed registering client [test_vp0] with name [test_vp0] [rpc error: code = 2 desc = Identity or token does not match.].\nvp0_1 | 19:44:48.867 [rest] Register -> ERRO 036 Error on client login: rpc error: code = 2 desc = Identity or token does not match.\n\ncan someone say why I can't registrar?","username":"rrader","ts":"2017-03-22T19:58:47.183Z"}
{"msg":"Hello @rrader, this is not the right channel I am afraid. Please can you try any of #fabric-ca, #fabric-dev, #fabric-questions, ... ?","username":"JonathanLevi","ts":"2017-03-23T01:06:49.300Z"}
{"msg":"Hello @rrader, this is not the right channel I am afraid. Please can you try any of #fabric-ca, #fabric-dev-env, #fabric-questions, ... ?","username":"JonathanLevi","ts":"2017-03-23T01:06:49.300Z"}
{"msg":"Has joined the channel.","username":"matanyahu","ts":"2017-03-23T10:57:53.675Z","type":"uj"}
{"msg":"@rjones @mastersingh24 etc I think that a hyperledger.github.io page would be good, but it should just have links to other stuff, and we need to probably assign maintainers from all the top level projects to ensure that the content remains neutral etc","username":"cbf","ts":"2017-03-23T16:30:26.296Z"}
{"msg":"In JIRA can we add a blocked to the workflow so that shows up as it's status ?","username":"rickr","ts":"2017-03-23T23:28:53.070Z"}
{"msg":"You can specify that an issue is blocked by another issue","username":"yacovm","ts":"2017-03-23T23:35:13.626Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=F9wimBGREg7ioSEnY) Sure but it that doesn't show up in the report status ","username":"rickr","ts":"2017-03-24T12:06:18.003Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=F9wimBGREg7ioSEnY","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=F9wimBGREg7ioSEnY","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[One thing we were hoping to solve by using git pages was to be able to host HTML docs content like those generated by jsdoc and I'd assume javadoc as well ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Xs45ytuzwQ34Thmrh) @cbf ","username":"mastersingh24","ts":"2017-03-24T14:19:13.544Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Xs45ytuzwQ34Thmrh","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Xs45ytuzwQ34Thmrh","remote":true,"fileId":null,"fileName":null}]}
{"msg":"so does anyone here know anything about https://nexus.hyperledger.org   and what/how we can use it to host files, etc?   I am think about how to host binaries, maybe versioned samples, etc","username":"mastersingh24","ts":"2017-03-25T15:21:47.672Z"}
{"msg":"@mastersingh24 https://nexus.hyperledger.org/ will primarily be for hosting log files. https://nexus3.hyperledger.org/ is for publishing artifacts. @rameshthoomu has done work on publishing, for instance, docker images.","username":"rjones","ts":"2017-03-25T21:06:16.697Z"}
{"msg":"@mastersingh24 nexus will primarily be for hosting log files. https://nexus3.hyperledger.org/ is for publishing artifacts. @rameshthoomu has done work on publishing, for instance, docker images.","username":"rjones","ts":"2017-03-25T21:06:16.697Z"}
{"msg":"ah - cool.  thanks @rjones ","username":"mastersingh24","ts":"2017-03-25T23:36:35.069Z"}
{"msg":"@mastersingh24 to answer your unasked question - timing. We couldn't get nexus.h.o upgraded to nexus 3 fast enough, and nexus 3 had a bug that prevented anonymous log serving, so we couldn't just replace nexus 2 with nexus 3. The plan is to eventually move logshipping to nexus 3 and use DNS trickery to retire nexus2, but that's a q3 or q4 thing. logs.h.o is a DNS alias, but we haven't discussed making for instance a docker.h.o alias for example.","username":"rjones","ts":"2017-03-26T05:31:14.082Z"}
{"msg":"thanks @rjones .  we are now at a point where publishing binary and file artifacts seems like the best path in terms of consumability (rather than telling standard users to clone repos and compile code when they simply want to use it) .  So that's why I've been so laser focused  ;)","username":"mastersingh24","ts":"2017-03-26T10:58:24.858Z"}
{"msg":"seems reasonable. I know Ramesh had some docs in the hopper about how to pull the docker images from us; don't know if they're merged yet","username":"rjones","ts":"2017-03-26T10:59:25.343Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/7381/","username":"rjones","ts":"2017-03-26T10:59:54.408Z"}
{"msg":"OK, I was right, https://gerrit.hyperledger.org/r/#/c/7381/ is the change with the script. It still requires cloning the repo, though","username":"rjones","ts":"2017-03-26T11:01:52.063Z"}
{"msg":"am I the only one seeing test failures with anything based on https://gerrit.hyperledger.org/r/#/c/6795/ or later?","username":"mastersingh24","ts":"2017-03-26T13:32:21.190Z"}
{"msg":"@mastersingh24 rebased CR https://gerrit.hyperledger.org/r/#/c/7405/ for several times recently didn't experienced test failures ","username":"C0rWin","ts":"2017-03-26T13:59:43.751Z"}
{"msg":"@mastersingh24 @rjones we shouldn't (IMO) be encouraging end users to be d/l images from Nexus - should be focusing them on dockerhub - Nexus images are by definition unstable until we release them","username":"cbf","ts":"2017-03-26T17:01:02.690Z"}
{"msg":"not Docker images","username":"mastersingh24","ts":"2017-03-26T18:48:12.489Z"}
{"msg":"command line binaries - e.g. configtxgen, peer cli, compose files, etc","username":"mastersingh24","ts":"2017-03-26T18:48:35.747Z"}
{"msg":"we need a place to publish tested, certified binaries and artifacts which we can link to from our documentation","username":"mastersingh24","ts":"2017-03-26T18:49:09.798Z"}
{"msg":"we can't be telling users to clone github and build tools and we will be changing / updating versions, etc","username":"mastersingh24","ts":"2017-03-26T18:49:36.153Z"}
{"msg":"take a look at the new getting started","username":"mastersingh24","ts":"2017-03-26T18:49:48.758Z"}
{"msg":"the doc is fine EXCEPT we require people to still build tools from the repo","username":"mastersingh24","ts":"2017-03-26T18:50:05.078Z"}
{"msg":"that's unacceptable and non-consumable for someone who simply wants to use fabric","username":"mastersingh24","ts":"2017-03-26T18:50:30.669Z"}
{"msg":"esp. as ongoing dev. would make such command line binaries out of sync with the dependent, pre-built  peer, orderer images... all dependent binraries could be  put in one of the images","username":"muralisr","ts":"2017-03-26T20:54:39.669Z"}
{"msg":"ok agree on binaries, but we should just expose tarballs on release page for various platforms","username":"cbf","ts":"2017-03-26T21:13:45.612Z"}
{"msg":"the end user should not be directly exposed to the source object store","username":"cbf","ts":"2017-03-26T21:14:26.226Z"}
{"msg":"I have no opinion on this. Ramesh checked in a change (a script) for people external to the CI system to download docker from nexus.","username":"rjones","ts":"2017-03-26T22:22:39.365Z"}
{"msg":"Do we now have on docker hub or elsewhere where all users can pull specific commit levels of the Fabric/ca from ?  ","username":"rickr","ts":"2017-03-26T22:29:27.908Z"}
{"msg":"https://hub.docker.com/r/hyperledger/fabric-ca/tags/ says \"I don't think so\"","username":"rjones","ts":"2017-03-26T22:32:11.411Z"}
{"msg":"@rickr  - are you asking about internal (e.g. people doing development of SDKs like yourself)?","username":"mastersingh24","ts":"2017-03-26T22:35:02.672Z"}
{"msg":"normal users should not need to pull images by commit level","username":"mastersingh24","ts":"2017-03-26T22:35:19.260Z"}
{"msg":"@rameshthoomu  definitely publishes non-release type images somewhere I believe","username":"mastersingh24","ts":"2017-03-26T22:36:12.973Z"}
{"msg":"nope all ...  right now we still have in our README.md how to build the fabric/ca  to use with the HLJSDK  :(   It be so nice to just have a DC file that would just pull it down ","username":"rickr","ts":"2017-03-26T22:37:03.261Z"}
{"msg":"why doesn't the JSDK work with the 1.0.0-alpha images?","username":"mastersingh24","ts":"2017-03-26T22:55:53.700Z"}
{"msg":"that's what we are telling people to pull down in general","username":"mastersingh24","ts":"2017-03-26T22:56:07.799Z"}
{"msg":"(really I do know why)","username":"mastersingh24","ts":"2017-03-26T22:56:39.118Z"}
{"msg":"We probably do now and should just do that.  But going forward the _latest_ may not always  be compatible (and that's been the case at times for both SDKs :) )   For me the _ideal_ case for those wanting  to be on the bleeding edge would after and SDK  passes FIT e2e  publish docker hub fabric/ca docker images with tag hlXjdk_snapshot and publish the sdk to npm/maven repos'   ","username":"rickr","ts":"2017-03-27T01:20:58.591Z"}
{"msg":"I agree with you @rickr  that we should have a \"bleeding\" edge release stream which includes both Docker images and the various SDKs and tools","username":"mastersingh24","ts":"2017-03-27T09:26:28.861Z"}
{"msg":"Has joined the channel.","username":"cgrecu","ts":"2017-03-27T13:45:09.181Z","type":"uj"}
{"msg":"Good morning! (sorry I'm the last to wake up, timezone-wise)","username":"JonathanLevi","ts":"2017-03-27T16:00:52.801Z"}
{"msg":"We should probably start working out an integration plan for all those items we put on hold close to the *v1.0.0-alpha* cut.","username":"JonathanLevi","ts":"2017-03-27T16:01:37.283Z"}
{"msg":"We should probably start working out an integration plan for all those items we put on hold close to the `v1.0.0-alpha` cut.","username":"JonathanLevi","ts":"2017-03-27T16:01:37.283Z"}
{"msg":"We should probably start working out an integration plan for all those items we put on hold close to the `v1.0-alpha` cut.","username":"JonathanLevi","ts":"2017-03-27T16:01:37.283Z"}
{"msg":"It was good to have that \"soft\" code-freeze/feature-freeze, but I bet that most of us here are getting direct requests for things that we could not have merged in March.","username":"JonathanLevi","ts":"2017-03-27T16:02:48.627Z"}
{"msg":"----\nWhile also giving people enough time to report issues against the current `v1.0-alpha` baseline.","username":"JonathanLevi","ts":"2017-03-27T16:03:43.854Z"}
{"msg":"you mean report *and fix* right? ;)","username":"yacovm","ts":"2017-03-27T16:05:34.279Z"}
{"msg":"Right. But at this point, just getting people reporting issues, will be a bit step (data-point/input) that will allow us to see where we stand... and plan accordingly.","username":"JonathanLevi","ts":"2017-03-27T16:06:55.006Z"}
{"msg":"Right. But at this point, just/even getting people reporting issues, will be a big step (data-point/input) that will allow us to see where we stand... and plan accordingly.","username":"JonathanLevi","ts":"2017-03-27T16:06:55.006Z"}
{"msg":"There is a lot that's going on these days. A few projects porting to fabric-1.0, etc. We should (plan to) accommodate these.","username":"JonathanLevi","ts":"2017-03-27T16:07:46.150Z"}
{"msg":"But that's true. If we have some severe issues that we are aware of, in 1.0-alpha, we should prioritize their *fix* over introducing more (new/promised) features.","username":"JonathanLevi","ts":"2017-03-27T16:08:35.865Z"}
{"msg":"But that's true. If we have some severe issues that we are aware of (/or become aware of), in 1.0-alpha, we should prioritize their *fix* over introducing more (new/promised) features.","username":"JonathanLevi","ts":"2017-03-27T16:08:35.865Z"}
{"msg":"But that's true. If we have some severe issues that we are aware of (/or become aware of), in 1.0-alpha, we should prioritize their *fix* over introducing more (new/promised) features.","username":"JonathanLevi","ts":"2017-03-27T16:09:34.231Z"}
{"msg":"cd ..","username":"greg.haskins","ts":"2017-03-28T11:47:52.116Z"}
{"msg":"@rickr @mastersingh24 @rjones @mrkiouak regarding above conversation about ca:latest","username":"greg.haskins","ts":"2017-03-28T13:56:36.888Z"}
{"msg":"we should probably unify things: the :latest tag is not applied consistently and I am of the opinion we should just drop it from the places that have it","username":"greg.haskins","ts":"2017-03-28T13:57:13.173Z"}
{"msg":"it currently is, at best, false advertising, since its not actually the latest but v0.6","username":"greg.haskins","ts":"2017-03-28T13:57:39.525Z"}
{"msg":"it was left at the time of the v0.6 release to deal with shotcomings in client-toolings","username":"greg.haskins","ts":"2017-03-28T13:57:59.576Z"}
{"msg":"if for some reason people feel strongly it needs to stay, we should at least a) move it forward so it actually is latest and b) apply it consistently across all of the repos","username":"greg.haskins","ts":"2017-03-28T13:58:38.374Z"}
{"msg":"@rjones @cbf unless anyone objects, I suggest we take the temporary conservative approach of moving the :latest tag to all x86-v1.0.0-alpha","username":"greg.haskins","ts":"2017-03-28T14:06:27.020Z"}
{"msg":"we can decide whether to remove it after broader discussion","username":"greg.haskins","ts":"2017-03-28T14:06:48.655Z"}
{"msg":"@cbf what is the status of that work to get the multi-arch support in docker in genera?","username":"greg.haskins","ts":"2017-03-28T14:07:17.829Z"}
{"msg":"hmm","username":"cbf","ts":"2017-03-28T14:07:20.413Z"}
{"msg":"anyone playing with v0.6 will be disrupted","username":"cbf","ts":"2017-03-28T14:09:39.990Z"}
{"msg":"we should pre-announce and warn ppl on chat and email","username":"cbf","ts":"2017-03-28T14:10:27.656Z"}
{"msg":"i hadnt thought of that, good point","username":"greg.haskins","ts":"2017-03-28T14:46:21.925Z"}
{"msg":"not sure anyone is, or at least, is relying on :latest for that though","username":"greg.haskins","ts":"2017-03-28T14:46:38.786Z"}
{"msg":"generally speaking, if you are relying on :latest you should expect it to move from time to time ;)","username":"greg.haskins","ts":"2017-03-28T14:47:09.455Z"}
{"msg":"certainly the x86-v1.0.0-alpha bits are more widespread than the v0.6 ones","username":"rjones","ts":"2017-03-28T14:50:56.194Z"}
{"msg":"certainly the x86-v1.0.0-alpha bits are more widespread within dockerhub than the v0.6 ones","username":"rjones","ts":"2017-03-28T14:50:56.194Z"}
{"msg":"Here is a list of items that didn't make the Alpha release, notice we've moved proposed items to the right on the roadmap. Please provide any feedback. There is no new content, this is stabilization, testing, clean up of existing items. I will update FAB-37 with this information as well. ","username":"markparz","ts":"2017-03-28T17:11:14.318Z"}
{"msg":"See Fab-37 list of items that didn't make the Alpha release, notice we've moved proposed items to the right on the roadmap. Please provide any feedback. There is no new content, this is stabilization, testing, clean up of existing items. I will update FAB-37 with this information as well. ","username":"markparz","ts":"2017-03-28T17:11:14.318Z"}
{"msg":"Just a heads up: if you own a Mac do not install the latest Xcode update or you will be unable to build/run/test your Go code locally.","username":"kostas","ts":"2017-03-29T01:07:34.399Z"}
{"msg":"","username":"kostas","ts":"2017-03-29T01:07:41.147Z","attachments":[{"title":"File Uploaded: Screen Shot 2017-03-28 at 21.03.13.png","title_link":"/file-upload/5fde3Zwga9DJCjcHm/Screen Shot 2017-03-28 at 21.03.13.png","image_url":"/file-upload/5fde3Zwga9DJCjcHm/Screen Shot 2017-03-28 at 21.03.13.png","image_type":"image/png","image_size":62966,"url":"/file-upload/5fde3Zwga9DJCjcHm/Screen Shot 2017-03-28 at 21.03.13.png","remote":false,"fileId":"5fde3Zwga9DJCjcHm"}]}
{"msg":"See https://github.com/golang/go/issues/19734 for a description of the problem and workarounds.","username":"kostas","ts":"2017-03-29T01:08:19.977Z"}
{"msg":"See https://github.com/golang/go/issues/19734 for a description of the problem and workarounds. (Either downgrade Xcode to 8.2 or run everything with `-ldflags -s`.)","username":"kostas","ts":"2017-03-29T01:08:19.977Z"}
{"msg":"@kostas ty for the heads up","username":"greg.haskins","ts":"2017-03-29T01:14:49.955Z"}
{"msg":"@markparz should we maybe re-lable pluggable crypto to application crypto library?","username":"weeds","ts":"2017-03-29T01:23:43.058Z"}
{"msg":"I think that was for clean up but will revisit","username":"markparz","ts":"2017-03-29T01:26:19.650Z"}
{"msg":"@kostas I was literally installing today and it was taking so long I cancelled ... you saved me!","username":"markparz","ts":"2017-03-29T01:27:25.189Z"}
{"msg":"[who owns the content of the hyperledger dockerhub org page? ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=pGiPY3Jbpdutr3h6o) @greg.haskins ","username":"mastersingh24","ts":"2017-03-29T10:46:24.139Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=pGiPY3Jbpdutr3h6o","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=pGiPY3Jbpdutr3h6o","remote":true,"fileId":null,"fileName":null}]}
{"msg":"we really need to get some better material there and/or point people to readthedocs from there (well first we need to make sue readthedocs is updated, but if I just go to the hyperledger dockerhub repos today, it tells me nothing)","username":"mastersingh24","ts":"2017-03-29T10:47:59.818Z"}
{"msg":"@mastersingh24 I believe LF/@ry","username":"greg.haskins","ts":"2017-03-29T11:28:40.324Z"}
{"msg":"@mastersingh24 @greg.haskins I can edit it, please tell me what to put where","username":"rjones","ts":"2017-03-29T15:41:36.051Z"}
{"msg":"great.  thx @rjones - we'll work up something and get back to you","username":"mastersingh24","ts":"2017-03-29T15:52:40.685Z"}
{"msg":"Has joined the channel.","username":"aybekbuka","ts":"2017-03-30T03:30:31.394Z","type":"uj"}
{"msg":"@rjones  Seeing a chopped off menu in gerrit due to top banners ","username":"rickr","ts":"2017-03-30T20:16:23.902Z"}
{"msg":"","username":"rickr","ts":"2017-03-30T20:16:48.061Z","attachments":[{"title":"File Uploaded: Clipboard","title_link":"/file-upload/97tBLDJvNcdHimK5X/Clipboard","image_url":"/file-upload/97tBLDJvNcdHimK5X/Clipboard","image_type":"image/png","image_size":135945,"url":"/file-upload/97tBLDJvNcdHimK5X/Clipboard","remote":false,"fileId":"97tBLDJvNcdHimK5X"}]}
{"msg":"browser?","username":"rjones","ts":"2017-03-30T20:18:34.269Z"}
{"msg":"FF","username":"rickr","ts":"2017-03-30T20:18:48.928Z"}
{"msg":"also, let's take this to #ci-pipeline ","username":"rjones","ts":"2017-03-30T20:19:01.135Z"}
{"msg":"sure","username":"rickr","ts":"2017-03-30T20:19:09.777Z"}
{"msg":"hmmm FF was fine for me, only chrome had chopped off header","username":"cbf","ts":"2017-03-31T11:06:49.806Z"}
{"msg":"It looks like v1.0.0-alpha been quite popular, so next month we are moving into code hardening (security, performance, hygiene) and documentation. I am thinking about wrapping up around April 21st and publishing a beta image by May 1st. Depending on defect rate, we could look at end of May 1.0 release or sometime in June.  Around the beta time, we want to branch 1.0.0 to keep on quality work but open up the master branch for new work post 1.0.  Thoughts?","username":"binhn","ts":"2017-03-31T15:37:45.202Z"}
{"msg":"@channel ^^^","username":"binhn","ts":"2017-03-31T15:38:30.453Z"}
{"msg":"@binh so, I presume that this means no new functionality? Or, is there a process for having the maintainers agree on any new function before it is added/merged?","username":"cbf","ts":"2017-03-31T15:49:31.165Z"}
{"msg":"seems to me that the exclusive focus should be on running current and new tests, fixing bugs, lather, rinse, repeat","username":"cbf","ts":"2017-03-31T15:50:13.024Z"}
{"msg":"@cbf - there are a few things which were not completed (e.g. channel config transactions, buttoning up chaincode packaging and lifecycle (e.g. upgrade) and a few security items related to chaincode). ","username":"mastersingh24","ts":"2017-03-31T16:00:36.494Z"}
{"msg":"@cbf @mastersingh24 right, these and known code hardening items are in sprint 15 on jira","username":"binhn","ts":"2017-03-31T16:20:01.854Z"}
{"msg":"we need to clearly mark and maintainers need to check against that list","username":"cbf","ts":"2017-03-31T17:24:17.735Z"}
{"msg":"hi there, has Windows been officially dropped from the supported platforms?","username":"lehors","ts":"2017-03-31T18:32:40.816Z"}
{"msg":"it seems like no effort is still being made to keep vagrant working anymore","username":"lehors","ts":"2017-03-31T18:33:35.385Z"}
{"msg":"I saw Chris's suggesting to drop the vagrant section from the getting started doc","username":"lehors","ts":"2017-03-31T18:34:05.163Z"}
{"msg":"and on trying I just found that we have some code that makes installing a chaincode fail on vagrant","username":"lehors","ts":"2017-03-31T18:34:28.455Z"}
{"msg":"I don't think this should be something that gets decided based on personal preference","username":"lehors","ts":"2017-03-31T18:34:58.183Z"}
{"msg":"and I haven't seen any discussion on dropping vagrant support","username":"lehors","ts":"2017-03-31T18:35:19.736Z"}
{"msg":"@lehors + 1","username":"VipinB","ts":"2017-03-31T18:36:10.980Z"}
{"msg":"if you run vagrant a windows host, there is an issue related to file `x` (executable) permissions that the peer cli doesn't like. \nIt's because the $GOPATH is on a shared folder.\nThe solution is to create a directory on somewhere else, i.e `/tmp/src/` and then do `export GOPATH=/tmp:$GOPATH` and put the chaincode there.","username":"yacovm","ts":"2017-03-31T18:39:19.809Z"}
{"msg":"if you run vagrant on a windows host, there is an issue related to file `x` (executable) permissions that the peer cli doesn't like. \nIt's because the $GOPATH is on a shared folder.\nThe solution is to create a directory on somewhere else, i.e `/tmp/src/` and then do `export GOPATH=/tmp:$GOPATH` and put the chaincode there.","username":"yacovm","ts":"2017-03-31T18:39:19.809Z"}
{"msg":"yes, that's one solution","username":"lehors","ts":"2017-03-31T18:40:13.012Z"}
{"msg":"but it means 'getting started' doesn't work on windows+vagrant","username":"lehors","ts":"2017-03-31T18:40:42.406Z"}
{"msg":"this sucks","username":"lehors","ts":"2017-03-31T18:41:40.222Z"}
{"msg":"`and on trying I just found that we have some code that makes installing a chaincode fail on vagrant` @lehors what did you run into ? ","username":"muralisr","ts":"2017-03-31T18:47:40.793Z"}
{"msg":"vagrant exposes all windows files with filemode 777","username":"lehors","ts":"2017-03-31T18:48:11.802Z"}
{"msg":"that was what I was typing :-)","username":"muralisr","ts":"2017-03-31T18:48:22.420Z"}
{"msg":"I see people once a while get that error ...I remember @rameshthoomu was struggling with that a while back","username":"muralisr","ts":"2017-03-31T18:49:19.637Z"}
{"msg":"@rameshthoomu do you remember what the resolution was please ?","username":"muralisr","ts":"2017-03-31T18:49:36.823Z"}
{"msg":"there seems to be 2 workarounds: 1) patch the code to remove the test, 2) install a chaincode that's not in a shared folder in vagrant so that it can be given the expect filemode","username":"lehors","ts":"2017-03-31T18:50:41.567Z"}
{"msg":"ok","username":"muralisr","ts":"2017-03-31T18:50:55.772Z"}
{"msg":"neither is really satisfying","username":"lehors","ts":"2017-03-31T18:51:07.697Z"}
{"msg":"chmod was overridden by vagrant ?","username":"muralisr","ts":"2017-03-31T18:51:12.874Z"}
{"msg":"more like it has no effect","username":"yacovm","ts":"2017-03-31T18:51:23.071Z"}
{"msg":"yes, that's a known problem with vagrant","username":"lehors","ts":"2017-03-31T18:51:27.872Z"}
{"msg":"all files are exposed as 777 and there is no way to change that","username":"lehors","ts":"2017-03-31T18:51:44.026Z"}
{"msg":"@muralisr still struggling with the same error.. I tried few attempts but getting the same error..  ","username":"rameshthoomu","ts":"2017-03-31T18:53:00.211Z"}
{"msg":"rebooting help at all ?","username":"muralisr","ts":"2017-03-31T18:53:13.088Z"}
{"msg":"Hi guys, not sure why but I'm a bit under the weather. Maybe all these flashlights from InterConnect.","username":"JonathanLevi","ts":"2017-03-31T19:05:16.646Z"}
{"msg":":-)","username":"JonathanLevi","ts":"2017-03-31T19:05:19.689Z"}
{"msg":"So I have a workaround for that vagrant issue @rameshthoomu, @lehors - but it's really not that pretty.","username":"JonathanLevi","ts":"2017-03-31T19:05:58.995Z"}
{"msg":"We had to end up editing the vagrant file manually...","username":"JonathanLevi","ts":"2017-03-31T19:06:26.985Z"}
{"msg":"Like adding hese lines to vagrant file after the line: config.vm.synced_folder \"..\", \"/opt/gopath/src/github.com/hyperledger/fabric\":\nconfig.vm.synced_folder \"../examples\", \"/opt/gopath/src/github.com/hyperledger/fabric/examples\", mount_options: [\"dmode=777\", \"fmode=666\"]","username":"JonathanLevi","ts":"2017-03-31T19:06:50.370Z"}
{"msg":"Like adding these lines to vagrant file after the line: config.vm.synced_folder \"..\", \"/opt/gopath/src/github.com/hyperledger/fabric\":\nconfig.vm.synced_folder \"../examples\", \"/opt/gopath/src/github.com/hyperledger/fabric/examples\", mount_options: [\"dmode=777\", \"fmode=666\"]","username":"JonathanLevi","ts":"2017-03-31T19:06:50.370Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-03-31T19:06:58.202Z"}
{"msg":"I think it's horrible, but that's the only way it has worked for us...","username":"JonathanLevi","ts":"2017-03-31T19:07:25.652Z"}
{"msg":"ah","username":"lehors","ts":"2017-03-31T19:07:32.376Z"}
{"msg":"that's easier than doing a local copy to /tmp","username":"lehors","ts":"2017-03-31T19:07:45.569Z"}
{"msg":"Yeah, you see what I mean, right?","username":"JonathanLevi","ts":"2017-03-31T19:07:48.323Z"}
{"msg":"which has to be done within the cli container","username":"lehors","ts":"2017-03-31T19:07:56.008Z"}
{"msg":"totally","username":"lehors","ts":"2017-03-31T19:08:06.069Z"}
{"msg":"Oh, of course ;-) that wasn't an option.","username":"JonathanLevi","ts":"2017-03-31T19:08:12.532Z"}
{"msg":"that's a better workaround","username":"lehors","ts":"2017-03-31T19:08:13.225Z"}
{"msg":"I will try that now","username":"lehors","ts":"2017-03-31T19:08:57.664Z"}
{"msg":"sorry to hear about your condition, hope you get better soon!","username":"lehors","ts":"2017-03-31T19:09:10.963Z"}
{"msg":"Nope, that's fine. Just apologizing for now being online earlier.","username":"JonathanLevi","ts":"2017-03-31T19:09:32.504Z"}
{"msg":"Nope, that's fine. Just/mainly apologizing for not being online earlier.","username":"JonathanLevi","ts":"2017-03-31T19:09:32.504Z"}
{"msg":"Now as for @Binhn's question... I have been meaning to bring that up.","username":"JonathanLevi","ts":"2017-03-31T19:09:54.506Z"}
{"msg":"------------\nNow as for @Binhn's question... I have been meaning to bring that up.","username":"JonathanLevi","ts":"2017-03-31T19:09:54.506Z"}
{"msg":"We really need to have a \"freeze\" step in the process.","username":"JonathanLevi","ts":"2017-03-31T19:10:18.835Z"}
{"msg":"I know I'm going on and on about it... but an API freeze, feature freeze, and code freeze (where we allow only show-stoppers in....), will really let us get a clear picture of where we stand.","username":"JonathanLevi","ts":"2017-03-31T19:11:16.815Z"}
{"msg":"I know I'm going on and on about it... but an *API freeze, feature freeze*, and *code freeze* (where we allow only show-stoppers in....), will really let us get a clear picture of where we stand.","username":"JonathanLevi","ts":"2017-03-31T19:11:16.815Z"}
{"msg":"I know I'm going on and on about it... but an *API freeze, feature freeze*, and *code freeze* (where we allow only show-stoppers in....), will really let us get a clear picture of where we stand.","username":"JonathanLevi","ts":"2017-03-31T19:11:16.815Z"}
{"msg":"I know that we were very busy during Feb/March, pre the alpha tag... but I think that we should really plan for it now.","username":"JonathanLevi","ts":"2017-03-31T19:12:02.897Z"}
{"msg":"I know that we were very busy during Feb/March, prior to the alpha tag... but I think that we should really plan for it now.","username":"JonathanLevi","ts":"2017-03-31T19:12:02.897Z"}
{"msg":"and we should plan to have the doc in sync (at least a minimum) as part of the freeze","username":"lehors","ts":"2017-03-31T19:12:46.573Z"}
{"msg":"releasing like we just did with the getting started doc completely outdated is not good","username":"lehors","ts":"2017-03-31T19:13:04.959Z"}
{"msg":"Yes, I agree - we can incorporate a few lessons learned - for the next round, really.","username":"JonathanLevi","ts":"2017-03-31T19:20:02.197Z"}
{"msg":"we ought to - it's one thing to screw up it's another to repeat the same mistakes","username":"lehors","ts":"2017-03-31T19:22:20.645Z"}
{"msg":"yeay, your vagrant trick works! good to know","username":"lehors","ts":"2017-03-31T19:23:17.420Z"}
{"msg":"I'm happy to push this fix...","username":"JonathanLevi","ts":"2017-03-31T19:23:55.633Z"}
{"msg":"btw, there is a new problem with the latest version of vagrant: 1.9.3","username":"lehors","ts":"2017-03-31T19:24:13.064Z"}
{"msg":"beware","username":"lehors","ts":"2017-03-31T19:24:21.186Z"}
{"msg":"The thing is, I'm not using vagrant at all. We have a client that runs these, and wanted to run the alpha in parallel...","username":"JonathanLevi","ts":"2017-03-31T19:24:56.311Z"}
{"msg":"well, that's the thing, some people will want/need to use vagrant","username":"lehors","ts":"2017-03-31T19:25:30.425Z"}
{"msg":"This is how we got into it. All I know is that I should probably never update my good ol' vagrant ;-)","username":"JonathanLevi","ts":"2017-03-31T19:25:30.577Z"}
{"msg":"Yes, exactly. I know. Especially, btw, as the documentation \"recommended\" it.","username":"JonathanLevi","ts":"2017-03-31T19:25:54.557Z"}
{"msg":"used to","username":"lehors","ts":"2017-03-31T19:26:11.828Z"}
{"msg":"I think it's still there in some placed (that's why we had to \"fix\" this)","username":"JonathanLevi","ts":"2017-03-31T19:26:35.441Z"}
{"msg":"the alternative is to make everything compile and work on Windows natively","username":"lehors","ts":"2017-03-31T19:26:55.601Z"}
{"msg":"fabric-ca does","username":"lehors","ts":"2017-03-31T19:27:05.491Z"}
{"msg":"I haven't tried in a while to do the same with fabric but when I tried before it was really ugly","username":"lehors","ts":"2017-03-31T19:27:38.057Z"}
{"msg":"Honestly, I would rather have us building/running/deploying natively.","username":"JonathanLevi","ts":"2017-03-31T19:27:54.093Z"}
{"msg":"you'd think with go it's doable but we have a lot of external dependencies that don't","username":"lehors","ts":"2017-03-31T19:28:50.643Z"}
{"msg":"that's the problem","username":"lehors","ts":"2017-03-31T19:28:59.121Z"}
{"msg":"You know, we talked about it the other day last week, even on the \"z\"s... it makes so much more sense to me, that if someone is buying/investing in such a system...they should certainly (I believe) work natively.","username":"JonathanLevi","ts":"2017-03-31T19:29:52.933Z"}
{"msg":"Yes, it comes with a bag of ... . I know.","username":"JonathanLevi","ts":"2017-03-31T19:30:10.058Z"}
{"msg":"But hopefully we should stabilize things, in terms of external dependencies, as time goes by - one hopes?","username":"JonathanLevi","ts":"2017-03-31T19:30:43.831Z"}
{"msg":"We were/things were a lot more volatile back in the good ol' 0.5 days... I recall ;-)","username":"JonathanLevi","ts":"2017-03-31T19:31:08.995Z"}
{"msg":"If people would like (or have no objection), we can explore building a few \"native\" binaries as part of the process.","username":"JonathanLevi","ts":"2017-03-31T19:31:58.367Z"}
{"msg":"*Maybe not during every CI round* though! ;-)","username":"JonathanLevi","ts":"2017-03-31T19:32:14.906Z"}
{"msg":"right :)","username":"lehors","ts":"2017-03-31T19:34:30.095Z"}
{"msg":"all maintainers: https://docs.google.com/document/d/1sAsa389InUieQ0DsnVaw9qsPAWoJKZeUwBVf6R2dCD4/edit?usp=sharing","username":"greg.haskins","ts":"2017-03-31T20:22:35.393Z"}
{"msg":"in talking with @cbf, thought this \"live document\" might make the most sense to frame the conversation about how to approach managing the v1.0 release","username":"greg.haskins","ts":"2017-03-31T20:23:16.685Z"}
{"msg":"let me know what you think, or better yet, make some edits!","username":"greg.haskins","ts":"2017-03-31T20:23:32.790Z"}
{"msg":"@greg.haskins thanks for kicking that off! @mastersingh24 @binhn @JonathanLevi  @muralisr @jyellick @hgabre @TamasBlummer @sheehan @jimthematrix please weigh in ^^","username":"cbf","ts":"2017-03-31T23:20:58.229Z"}
{"msg":"[ https://github.com/docker/docker/tree/master/project](https://chat.hyperledger.org/channel/fabric-maintainers?msg=hcGEsYPGcvcAvXNRf) @cbf ","username":"mastersingh24","ts":"2017-04-01T11:21:35.081Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=hcGEsYPGcvcAvXNRf","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=hcGEsYPGcvcAvXNRf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I like the Docker strategy  ;)","username":"mastersingh24","ts":"2017-04-01T11:21:50.221Z"}
{"msg":"ALSO - I think I have some type of limited admin access to JIRA, but things would be MUCH better if we had fields like \"target release\" available as well as always showed \"fixed version\" etc","username":"mastersingh24","ts":"2017-04-01T11:47:45.912Z"}
{"msg":"of course we would need to actually use these fields","username":"mastersingh24","ts":"2017-04-01T11:48:07.429Z"}
{"msg":"@mastersingh24 we could use the Label field for that \"1.0.0-beta\", \"1.0.0\"","username":"binhn","ts":"2017-04-01T14:24:50.447Z"}
{"msg":"sure - we just need to be consistent - the field \"fixed version\" does exist as well","username":"mastersingh24","ts":"2017-04-01T14:25:53.443Z"}
{"msg":"I'm ok with using labels as long as they are applied consistently","username":"mastersingh24","ts":"2017-04-01T14:26:12.947Z"}
{"msg":"but frankly JIRA should have a better way to handle these things with a little customization","username":"mastersingh24","ts":"2017-04-01T14:26:32.566Z"}
{"msg":"it looks like i can change the \"Fix Version/s:\" field","username":"binhn","ts":"2017-04-01T14:47:18.956Z"}
{"msg":"Maybe the name is bad but why do need something other than `Fix Version`  ?","username":"rickr","ts":"2017-04-01T14:59:46.917Z"}
{"msg":"I've been on projects were bug tracking endup with dozens of labels tags severity  et al  at the end of the day few could tell the state of releases and branches .  _which maybe was the goal_ :)  ","username":"rickr","ts":"2017-04-01T15:02:20.369Z"}
{"msg":"Fix Version is probably fine - I would have preferred having a \"Target Version\" and then you use \"Fix Version\" when it is complete, but I suppose a combination of \"Done\" and \"Fix Version\" would suffice","username":"mastersingh24","ts":"2017-04-01T15:41:08.273Z"}
{"msg":"FWIW - I've been using \"Fix Version\"","username":"mastersingh24","ts":"2017-04-01T15:41:18.764Z"}
{"msg":"there is version and fix version, IIRC... Clayton worked with Ry to add and I think I might be able to as well... None of us is JIRA maven","username":"cbf","ts":"2017-04-01T18:29:59.056Z"}
{"msg":"we have \"affected version\" for bugs and then \"fix version\" for most other types (hopefully for all)","username":"mastersingh24","ts":"2017-04-01T18:54:51.097Z"}
{"msg":"we have not done a consistent job of using them in the past, but \"fix version\" seems to be set to \"1.0.0*\" for many items which is good","username":"mastersingh24","ts":"2017-04-01T18:55:43.446Z"}
{"msg":"Has joined the channel.","username":"mihaig","ts":"2017-04-03T09:21:22.174Z","type":"uj"}
{"msg":"agreed... I just closed all of the FixVersion: WONTFIX that were for v0.6 issues ","username":"cbf","ts":"2017-04-03T15:52:57.866Z"}
{"msg":"but now we still have a bunch of issues tagged with FixVersion: v0.6 that I believe we should triage to determine valid for 1.0-alpha, and if not, should be closed as WONTFIX","username":"cbf","ts":"2017-04-03T15:53:55.938Z"}
{"msg":"(I actually think that FixVersion should just be versions and WONTFIX should be a state == DONE","username":"cbf","ts":"2017-04-03T15:54:28.766Z"}
{"msg":"Yes, I agree. FixVersion should be the \"target\" version against which the feature/story/bug is opened/resolved. WONTFIX is the state for things we agree to not fix.","username":"JonathanLevi","ts":"2017-04-03T15:59:01.779Z"}
{"msg":"Yes, I agree. *FixVersion* should be the \"target\" version against which the feature/story/bug is opened/resolved. *WONTFIX* is the state for things we agree to not fix.","username":"JonathanLevi","ts":"2017-04-03T15:59:01.779Z"}
{"msg":"Verification is failing today due to a merge this morning of changeset that conflicted with another recent merge: https://gerrit.hyperledger.org/r/#/c/7191/\nI'm trying to fix in https://gerrit.hyperledger.org/r/#/c/7653, but Verification failed due to Gossip tests","username":"dave.enyeart","ts":"2017-04-03T16:15:32.661Z"}
{"msg":"@yacovm  Any idea why Gossip tests fail? ","username":"dave.enyeart","ts":"2017-04-03T16:16:15.820Z"}
{"msg":"Yeah","username":"yacovm","ts":"2017-04-03T16:18:45.525Z"}
{"msg":"```\n15:35:25 unit-tests_1  | fatal error: concurrent map read and map write\n15:35:25 unit-tests_1  | \n15:35:25 unit-tests_1  | goroutine 17962 [running]:\n15:35:25 unit-tests_1  | runtime.throw(0x9fe207, 0x21)\n```\nIt's because we have a test that sets viper properties, and gossip reads viper properties, and viper isn't thread safe","username":"yacovm","ts":"2017-04-03T16:19:25.413Z"}
{"msg":"```\n15:35:25 unit-tests_1  | fatal error: concurrent map read and map write\n15:35:25 unit-tests_1  | \n15:35:25 unit-tests_1  | goroutine 17962 [running]:\n15:35:25 unit-tests_1  | runtime.throw(0x9fe207, 0x21)\n```\nIt's because we have a test that sets viper properties,  and gossip reads viper properties, and other tests in that suite run concurrently, and viper isn't thread safe","username":"yacovm","ts":"2017-04-03T16:19:25.413Z"}
{"msg":"ok, so my reverify should resolve it","username":"dave.enyeart","ts":"2017-04-03T16:19:39.791Z"}
{"msg":"yeah. it's a pretty rare case","username":"yacovm","ts":"2017-04-03T16:19:48.214Z"}
{"msg":"Almost never happens","username":"yacovm","ts":"2017-04-03T16:19:52.764Z"}
{"msg":"This changeset fixes the CI verification errors that we've seen today: https://gerrit.hyperledger.org/r/#/c/7653/","username":"dave.enyeart","ts":"2017-04-03T17:35:07.585Z"}
{"msg":"Thanks for merging quickly!","username":"dave.enyeart","ts":"2017-04-03T17:54:44.145Z"}
{"msg":"Has joined the channel.","username":"JasonD","ts":"2017-04-04T02:58:46.126Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pd93","ts":"2017-04-04T08:40:51.840Z","type":"uj"}
{"msg":"Has joined the channel.","username":"aguchi","ts":"2017-04-04T23:55:24.516Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ryokawajp","ts":"2017-04-05T01:16:06.573Z","type":"uj"}
{"msg":"please weigh in on the following: https://jira.hyperledger.org/browse/FAB-2999","username":"greg.haskins","ts":"2017-04-07T13:17:47.307Z"}
{"msg":"I've fielded many confused new users who download the project and do \"make\" only to be surprised","username":"greg.haskins","ts":"2017-04-07T13:18:16.632Z"}
{"msg":"for instance, their system isnt configured to do native builds (missing deps, like libtool), or the behave tests fail","username":"greg.haskins","ts":"2017-04-07T13:18:46.205Z"}
{"msg":"what i am suggesting is we structure the documentation and \"default\" mode to basically do the docker oriented flow (e.g. \"make docker\" is the default","username":"greg.haskins","ts":"2017-04-07T13:19:21.086Z"}
{"msg":"we can bury the vagrant stuff in some advanced part of the doc","username":"greg.haskins","ts":"2017-04-07T13:19:35.531Z"}
{"msg":"IOW: \"Getting started\" should be boiled down to \"install make git golang docker && make","username":"greg.haskins","ts":"2017-04-07T13:20:19.851Z"}
{"msg":"thoughts?","username":"greg.haskins","ts":"2017-04-07T13:20:26.804Z"}
{"msg":"this is all part of the broader effort in https://jira.hyperledger.org/browse/FAB-1185","username":"greg.haskins","ts":"2017-04-07T13:20:59.774Z"}
{"msg":"Just a side comment on Vagrant.  I hope we don't give on supporting it .. as much as I didn't like it initially, working down stream I have often needed to _quickly_bounce back a forth  between different version of the fabric/ca  and Vagrant seems the easiest way for that.","username":"rickr","ts":"2017-04-07T15:13:30.748Z"}
{"msg":"@rickr the intent is not to give up on vagrant...rather, just to recognize that the conditions that precipitated the need for a baseimage have since passed and we can maintain it as a more traditional \"os-distro + provisioner\" script","username":"greg.haskins","ts":"2017-04-07T16:16:26.890Z"}
{"msg":"that, and I think we could use clarity for users on \"getting started\", and I think the docker flow presents fewer hurdles","username":"greg.haskins","ts":"2017-04-07T16:17:03.330Z"}
{"msg":"so, therefore, I suggest we simplify the guides/defaults","username":"greg.haskins","ts":"2017-04-07T16:17:17.191Z"}
{"msg":"right now, I think we have too much or \"you can do this, OR this, OR this, OR this, OR this\"","username":"greg.haskins","ts":"2017-04-07T16:17:37.422Z"}
{"msg":"I suggest we simplify that to just \"do this\" from a \"getting started\" perspective, and then have a section on how to use vagrant as an alternative option","username":"greg.haskins","ts":"2017-04-07T16:18:33.006Z"}
{"msg":"@rickr that said, note that I have a vested interest in keeping vagrant alive myself...my primary workstation is a 2009 MacPro tower, incapable of running docker-for-mac","username":"greg.haskins","ts":"2017-04-07T16:28:21.219Z"}
{"msg":"so I rely on vagrant devenv day to day","username":"greg.haskins","ts":"2017-04-07T16:28:27.863Z"}
{"msg":"(docker-for-mac requires 2011+ macs on account of design decisions made at the hypervisor level","username":"greg.haskins","ts":"2017-04-07T16:29:02.937Z"}
{"msg":"bottom line: dont worry... just want to streamline (both onboarding new users, as well as myself...(maintaining the vagrant baseimage by hand is a PITA)","username":"greg.haskins","ts":"2017-04-07T16:29:58.370Z"}
{"msg":"Even though I am aware of some maintainers who swore to never use vagrant! I have a strong feeling that I should never upgrade that good ol' vagrant installation that I set up back in the day. Just in case ;-)","username":"JonathanLevi","ts":"2017-04-07T16:46:11.382Z"}
{"msg":"( Even though I am aware of some maintainers who swore to never use vagrant! ) I have a strong feeling that I should never upgrade that good ol' vagrant installation that I set up back in the day. Just in case ;-)","username":"JonathanLevi","ts":"2017-04-07T16:46:11.382Z"}
{"msg":"( Even though I am aware of some maintainers who swore to never use vagrant! ) I have a strong feeling that I, too,  should never upgrade or remove that good ol' vagrant installation that I set up back in the day. Just in case ;-)","username":"JonathanLevi","ts":"2017-04-07T16:46:11.382Z"}
{"msg":"But a smooth(er) docker based set-up might indeed be very useful on some of the \"key\" supported platforms.","username":"JonathanLevi","ts":"2017-04-07T16:47:24.743Z"}
{"msg":"Has joined the channel.","username":"rbuysse","ts":"2017-04-07T17:23:28.462Z","type":"uj"}
{"msg":"@cbf @mastersingh24 @binhn is it known that the e2e scripts do not appear to work on the latest tree?","username":"greg.haskins","ts":"2017-04-07T21:48:36.593Z"}
{"msg":"They do","username":"yacovm","ts":"2017-04-07T22:36:54.372Z"}
{"msg":"perhaps I should ask a different way: how are people testing these days?","username":"greg.haskins","ts":"2017-04-08T01:55:01.556Z"}
{"msg":"i tried to stand up a test only to have it fall over in what I assume is a lack of channel configuration","username":"greg.haskins","ts":"2017-04-08T01:55:28.470Z"}
{"msg":"therefore, I was hoping to use the e2e_cli flow to stand up an environment that is bootstrapped with genesis+channel","username":"greg.haskins","ts":"2017-04-08T01:55:56.391Z"}
{"msg":"however, e2e falls flat on its face","username":"greg.haskins","ts":"2017-04-08T01:56:04.279Z"}
{"msg":"so not dead in the water","username":"greg.haskins","ts":"2017-04-08T01:56:09.505Z"}
{"msg":"so now dead in the water","username":"greg.haskins","ts":"2017-04-08T01:56:09.505Z"}
{"msg":"fyi - CI scripts are now setup for the Go SDK.","username":"troyronda","ts":"2017-04-08T02:52:17.899Z"}
{"msg":"Greg, e2e works for me these days and today.... ","username":"yacovm","ts":"2017-04-08T07:03:01.099Z"}
{"msg":"Greg, e2e works for me these days and yesterday.... ","username":"yacovm","ts":"2017-04-08T07:03:01.099Z"}
{"msg":"@greg.haskins : e2e works fine for me too without vagrant :-)","username":"matanyahu","ts":"2017-04-08T19:07:13.556Z"}
{"msg":"@matanyahu @yacovm I get this: https://jira.hyperledger.org/browse/FAB-3042","username":"greg.haskins","ts":"2017-04-08T19:34:35.174Z"}
{"msg":"this happens regardless of whether I use the scripts to download the 1.0.0-alpha images, or build the images from source","username":"greg.haskins","ts":"2017-04-08T19:35:21.545Z"}
{"msg":"```\nError connecting: rpc error: code = 14 desc = grpc: RPC failed fast due to transport failure\nError: rpc error: code = 14 desc = grpc: RPC failed fast due to transport failure\n```\nThis usually happens because of TLS... ","username":"yacovm","ts":"2017-04-08T19:36:04.783Z"}
{"msg":"are the peers behaving well? what do their docker logs say?","username":"yacovm","ts":"2017-04-08T19:36:30.562Z"}
{"msg":"not sure, the e2e buries them","username":"greg.haskins","ts":"2017-04-08T19:39:04.457Z"}
{"msg":"ill have to look, standby","username":"greg.haskins","ts":"2017-04-08T19:39:08.838Z"}
{"msg":"heres one of the peers","username":"greg.haskins","ts":"2017-04-08T19:47:43.311Z"}
{"msg":"https://pastebin.com/gCK2biWd","username":"greg.haskins","ts":"2017-04-08T19:47:43.808Z"}
{"msg":"this was with running HEAD","username":"greg.haskins","ts":"2017-04-08T19:47:50.874Z"}
{"msg":"I didnt capture the log with alpha, but I can","username":"greg.haskins","ts":"2017-04-08T19:47:59.047Z"}
{"msg":"Has left the channel.","username":"mychewcents","ts":"2017-04-09T12:08:45.608Z","type":"ul"}
{"msg":"@here as we are approaching v1.0, one of the things we want to be able to do is provide automated (as much as possible) release notes. We've been a little lax in policing commit messages for JIRA items. This needs to be more ruthlessly enforced not only for the release notes, but also so that we can check the JIRA to be sure that there's agreement that it should be included in the release (now and going forward from here) ","username":"cbf","ts":"2017-04-10T13:13:03.045Z"}
{"msg":"I am tempted to see if we cannot make this an automated check as part of the git-review scripting","username":"cbf","ts":"2017-04-10T13:13:36.469Z"}
{"msg":"i am all for this @cbf, but one question about your comment above: does this predicate the use of git-review, or is this something that could be done on the gerrit backend?","username":"greg.haskins","ts":"2017-04-10T13:14:23.094Z"}
{"msg":"i ask because, I dont use git-review","username":"greg.haskins","ts":"2017-04-10T13:14:30.300Z"}
{"msg":"im old-school ;)","username":"greg.haskins","ts":"2017-04-10T13:14:37.464Z"}
{"msg":"however, in the interim, please be sure that all CRs that are +2ed have in the title of the commit message a link to the corresponding JIRA item either naked 'e.g. FAB-nnnn' or in brackets 'e.g. [FAB-nnnn]'. Thanks","username":"cbf","ts":"2017-04-10T13:15:01.033Z"}
{"msg":"I can explore the back end","username":"cbf","ts":"2017-04-10T13:15:18.806Z"}
{"msg":"git hooks would work fine...i just dont use the git-review tooling","username":"greg.haskins","ts":"2017-04-10T13:15:57.189Z"}
{"msg":"@greg.haskins note that I also discovered that JIRA will compile release notes","username":"cbf","ts":"2017-04-10T13:16:09.791Z"}
{"msg":"so we have a few options","username":"cbf","ts":"2017-04-10T13:16:14.919Z"}
{"msg":"oh, nice","username":"greg.haskins","ts":"2017-04-10T13:16:19.397Z"}
{"msg":"So a few steps, maybe, from the end to the beginning:\n1. Gerrit CR has a JIRA ticket\n2. JIRA ticket has the requirements + (Fix, or otherwise) version \n3. Such JIRA tickets (say for 1.0-release) will be approved* somehow","username":"JonathanLevi","ts":"2017-04-10T13:17:33.482Z"}
{"msg":"(by somehow, I mean, process/step is yet TBD...)","username":"JonathanLevi","ts":"2017-04-10T13:18:06.148Z"}
{"msg":"(by somehow, I mean, process/step is yet TBD...). Does this make sense?","username":"JonathanLevi","ts":"2017-04-10T13:18:06.148Z"}
{"msg":"@here also, on CRs that are > 300 LOC, we really need to start being a bit more ruthless as well... it simply isn't acceptable practice as it increases the blast radius of a change and obviously take longer to review properly","username":"cbf","ts":"2017-04-10T13:18:17.774Z"}
{"msg":"Does this make sense?","username":"JonathanLevi","ts":"2017-04-10T13:18:19.938Z"}
{"msg":"@JonathanLevi +1","username":"cbf","ts":"2017-04-10T13:18:44.727Z"}
{"msg":"on CR size, there can obviously be exceptions","username":"cbf","ts":"2017-04-10T13:19:23.016Z"}
{"msg":"yes, I agree with this...small atomic changesets please unless there is some technical reason","username":"greg.haskins","ts":"2017-04-10T13:19:41.835Z"}
{"msg":"but they should be exceptional - not just whining that it is too much work to decompose a change","username":"cbf","ts":"2017-04-10T13:19:48.758Z"}
{"msg":"Of course! It is more a general guideline. [ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=WnJPhGYgLkSEhP9ow) @cbf ","username":"JonathanLevi","ts":"2017-04-10T13:19:49.161Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WnJPhGYgLkSEhP9ow","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WnJPhGYgLkSEhP9ow","remote":true,"fileId":null,"fileName":null}]}
{"msg":"for instance, protobuf recompilation or tree refactor might blow out LOC but being atomic is more important","username":"greg.haskins","ts":"2017-04-10T13:20:19.769Z"}
{"msg":"+1","username":"cbf","ts":"2017-04-10T13:20:27.471Z"}
{"msg":"It feels like we should be worried about the two ends of the spectrum. Too big/large will really increase the blast radius. Way too granular, with 20 dependencies.... will be at least as bad.","username":"JonathanLevi","ts":"2017-04-10T13:21:14.729Z"}
{"msg":"im not sure how the git-review flow works, but I use stgit back from when I used to do kernel work...it makes it very easy to manage a stack of small changes","username":"greg.haskins","ts":"2017-04-10T13:21:25.093Z"}
{"msg":"@greg.haskins: the *pb* is a `great` example for an exception. I completely agree.","username":"JonathanLevi","ts":"2017-04-10T13:21:47.572Z"}
{"msg":"@JonathanLevi if done right, i dont think the small-atomic series is hard to manage","username":"greg.haskins","ts":"2017-04-10T13:22:07.666Z"}
{"msg":"ive been doing it for years","username":"greg.haskins","ts":"2017-04-10T13:22:12.794Z"}
{"msg":"its never a case that you have deps all over the place..its always linear","username":"greg.haskins","ts":"2017-04-10T13:22:36.977Z"}
{"msg":"As long as we can underline the `if done right`... I am with you.","username":"JonathanLevi","ts":"2017-04-10T13:22:38.201Z"}
{"msg":"hehe, yes","username":"greg.haskins","ts":"2017-04-10T13:22:43.659Z"}
{"msg":"the most important thing, imo, is to develop the code this way","username":"greg.haskins","ts":"2017-04-10T13:23:07.137Z"}
{"msg":"dont create a megapatch and then try to break it up","username":"greg.haskins","ts":"2017-04-10T13:23:16.072Z"}
{"msg":"Don't know if you guys saw what happened last week in fabric-ca... where we ended up with a huge dependency trail, that was not really linear and actually added more overhead.","username":"JonathanLevi","ts":"2017-04-10T13:23:33.544Z"}
{"msg":"@greg.haskins: I also think that it's easier to also \"think\" this way.","username":"JonathanLevi","ts":"2017-04-10T13:23:56.985Z"}
{"msg":"right","username":"greg.haskins","ts":"2017-04-10T13:24:06.573Z"}
{"msg":"Step1, test, merge","username":"JonathanLevi","ts":"2017-04-10T13:24:10.001Z"}
{"msg":"Step2, test, merge","username":"JonathanLevi","ts":"2017-04-10T13:24:14.148Z"}
{"msg":"Etc.","username":"JonathanLevi","ts":"2017-04-10T13:24:15.280Z"}
{"msg":"it doesnt even have to be gated on \"merge\"","username":"greg.haskins","ts":"2017-04-10T13:24:37.045Z"}
{"msg":"Utilizing (what we used-to-call) the \"overnight\" testing... of the integration as well.","username":"JonathanLevi","ts":"2017-04-10T13:24:40.618Z"}
{"msg":"this is my tree for example","username":"greg.haskins","ts":"2017-04-10T13:24:46.974Z"}
{"msg":"```$ stg series\n- minimize-thirdparty-containers\n- fab-1185-remove-reliance-on\n- fab-2865-set-the-chaincode\n- fab-2984-use-testenv-for-cli\n- fab-2493-package-up-golang\n- add-support-for-docker_ns\n- chaincode-proto-overhaul\n- disable-devmode-in-compose\n- converge-deployment-spec\n- upgrade-to-chaincode-v0-10-3\n- consolidate-ccenv\n- fab-678-pull-missing-images\n- do-not-commit\n- version-2-compose```","username":"greg.haskins","ts":"2017-04-10T13:25:01.147Z"}
{"msg":"I love the `do-not-commit` ! ;-)","username":"JonathanLevi","ts":"2017-04-10T13:25:17.667Z"}
{"msg":"so the first 5 are patches I am currently upstreaming....the othes arent ready yet","username":"greg.haskins","ts":"2017-04-10T13:25:22.300Z"}
{"msg":"Nice, yes, I see.","username":"JonathanLevi","ts":"2017-04-10T13:25:38.567Z"}
{"msg":"so at any given point in time, I might have 5-15 patches in queue, but I might be only actively proposing 2-5 of them on gerrit","username":"greg.haskins","ts":"2017-04-10T13:25:57.457Z"}
{"msg":"heh, yeah, thats usually where I add my debug hacks","username":"greg.haskins","ts":"2017-04-10T13:26:21.839Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=PBD27BQvzsa9Guy7C) @JonathanLevi  heh, yeah, thats usually where I add my debug hacks","username":"greg.haskins","ts":"2017-04-10T13:26:21.839Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=PBD27BQvzsa9Guy7C","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=PBD27BQvzsa9Guy7C","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Yes, the more sophisticated *.gitignore* ;-)","username":"JonathanLevi","ts":"2017-04-10T13:27:44.036Z"}
{"msg":"anyway, the main point is: I am always working in a patch stream and then pushing the ones that are ready...not doing a bunch of work and then trying to break it up for review/inclusion","username":"greg.haskins","ts":"2017-04-10T13:28:02.239Z"}
{"msg":"i would advocate this as a sane way to achieve the end result @cbf is looking for","username":"greg.haskins","ts":"2017-04-10T13:28:43.762Z"}
{"msg":"I agree, but I'm not (yet) entirely sure how we should express/formulate this.","username":"JonathanLevi","ts":"2017-04-10T13:29:26.266Z"}
{"msg":"I will show you an example of what I mean.","username":"JonathanLevi","ts":"2017-04-10T13:29:36.130Z"}
{"msg":"same here","username":"greg.haskins","ts":"2017-04-10T13:29:38.515Z"}
{"msg":"","username":"JonathanLevi","ts":"2017-04-10T13:29:47.098Z","attachments":[{"title":"File Uploaded: 2017-04-10_Anonymized_Gerrit.png","title_link":"/file-upload/6za5s4FCwcNvxbbmX/2017-04-10_Anonymized_Gerrit.png","image_url":"/file-upload/6za5s4FCwcNvxbbmX/2017-04-10_Anonymized_Gerrit.png","image_type":"image/png","image_size":130952,"url":"/file-upload/6za5s4FCwcNvxbbmX/2017-04-10_Anonymized_Gerrit.png","remote":false,"fileId":"6za5s4FCwcNvxbbmX"}]}
{"msg":"(of course, this is not fully anonymized.... but the point here, is *not* to bash the submitter)","username":"JonathanLevi","ts":"2017-04-10T13:30:17.722Z"}
{"msg":"(of course, this is not fully anonymized.... but the point here, is *not* to bash the submitter - but rather to think about how we express the guidelines, so that it is clearer to committers/submitters)","username":"JonathanLevi","ts":"2017-04-10T13:30:17.722Z"}
{"msg":"This started as a very large CR, that Chris wanted broken down.","username":"JonathanLevi","ts":"2017-04-10T13:30:40.963Z"}
{"msg":"It is broken down.... but ended up being much more work, for the reviewers (and the committers)","username":"JonathanLevi","ts":"2017-04-10T13:31:11.511Z"}
{"msg":"It is broken down (to very/too many small CRs) and ended up being much more work, for the reviewers (and the committer, probably)","username":"JonathanLevi","ts":"2017-04-10T13:31:11.511Z"}
{"msg":"i dont know the details here, but im guessing part of the problem that this is not really a logical series of small atomic changes, but rather a retroactive split of one very large atomic change","username":"greg.haskins","ts":"2017-04-10T13:31:16.335Z"}
{"msg":"EXACTLY.","username":"JonathanLevi","ts":"2017-04-10T13:31:27.807Z"}
{"msg":"That's why I put the \"merge\" step there.","username":"JonathanLevi","ts":"2017-04-10T13:31:38.497Z"}
{"msg":"so they should not have been submitted as a stack","username":"cbf","ts":"2017-04-10T13:31:42.762Z"}
{"msg":"and it comes back to: dont try to retroactive splot","username":"greg.haskins","ts":"2017-04-10T13:31:47.592Z"}
{"msg":"split","username":"greg.haskins","ts":"2017-04-10T13:31:52.807Z"}
{"msg":"if a bug fix is independent, submit independently","username":"cbf","ts":"2017-04-10T13:31:55.682Z"}
{"msg":"exactly","username":"greg.haskins","ts":"2017-04-10T13:32:02.373Z"}
{"msg":"not rocket science","username":"cbf","ts":"2017-04-10T13:32:09.215Z"}
{"msg":"Yup, they should have been split into the groups/buckets of dependencies... ","username":"JonathanLevi","ts":"2017-04-10T13:32:10.618Z"}
{"msg":"i really dont like it described as \"dependencies\" though..it implies a graph","username":"greg.haskins","ts":"2017-04-10T13:32:40.792Z"}
{"msg":"@cbf, I agree. Maximize independencies, while keeping the size reasonable.","username":"JonathanLevi","ts":"2017-04-10T13:32:45.947Z"}
{"msg":"@cbf, I agree. Maximize independencies (minimize dependencies - or however we want to \"term\" this), while keeping the size reasonable.","username":"JonathanLevi","ts":"2017-04-10T13:32:45.947Z"}
{"msg":"if done right, its linear","username":"greg.haskins","ts":"2017-04-10T13:32:51.422Z"}
{"msg":"If done right - it's linear.","username":"JonathanLevi","ts":"2017-04-10T13:33:00.994Z"}
{"msg":"and btw: this isnt to imply I get the granularity right every single time...i often have to go back and tease out a small part that should be done on its own","username":"greg.haskins","ts":"2017-04-10T13:33:51.676Z"}
{"msg":"but the main point is: tease out independent changes early","username":"greg.haskins","ts":"2017-04-10T13:34:08.232Z"}
{"msg":"develop it as a series from the beginning","username":"greg.haskins","ts":"2017-04-10T13:34:22.450Z"}
{"msg":"then, I think everything else naturally falls into place in a manner that @cbf is looking for","username":"greg.haskins","ts":"2017-04-10T13:34:41.746Z"}
{"msg":"the criteria I apply is: if someone randomly git-bisected to this patch, would the tree make sense (and would it build, pass tests, etc)","username":"greg.haskins","ts":"2017-04-10T13:35:36.675Z"}
{"msg":"So, here is one thing that is consistent with the way you @cbf, @greg.haskins (and also @mastersingh24, @jyellick, ...) think and work (and I'm trying to give you a \"by-stander\" perspective...):","username":"JonathanLevi","ts":"2017-04-10T13:39:54.658Z"}
{"msg":"*You get the requirements-analysis step right*","username":"JonathanLevi","ts":"2017-04-10T13:40:13.942Z"}
{"msg":"I believe that this is actually the key.","username":"JonathanLevi","ts":"2017-04-10T13:40:27.401Z"}
{"msg":"When you know what the \"feature\" should do, and really understand it - it is a lot easier to model it, and break it down to parts - that you can develop and apply as a series...","username":"JonathanLevi","ts":"2017-04-10T13:41:25.455Z"}
{"msg":"... while not forgetting \"where you want to be\".","username":"JonathanLevi","ts":"2017-04-10T13:41:41.431Z"}
{"msg":"That is, whether it is 2 patchsets or 5.... it is clear, even without all the implementation details in advance: *what the thing should do*.","username":"JonathanLevi","ts":"2017-04-10T13:42:41.578Z"}
{"msg":"If this step is done right, then indeed, things fall into place.","username":"JonathanLevi","ts":"2017-04-10T13:43:04.795Z"}
{"msg":"If you start with \"Oh, I need to change the config file\"","username":"JonathanLevi","ts":"2017-04-10T13:43:19.836Z"}
{"msg":"If you/one/someone starts with only \n- \"Oh, I need to change the config file\", `adding it, will solve everything`.\n- Easy, *git commit, git push*.\n- \"OMG, forgot to open a JIRA ticket\". Damn it!\n   Open ticket: \"[FAB-1111] Add xParam to config file\"\n   Desc: `adding it, will solve everything.`","username":"JonathanLevi","ts":"2017-04-10T13:43:19.836Z"}
{"msg":"\"Maybe I should add this parameter, xParam\"","username":"JonathanLevi","ts":"2017-04-10T13:43:42.309Z"}
{"msg":"\"oh, sorry, the SDK does not have that value\"","username":"JonathanLevi","ts":"2017-04-10T13:43:57.932Z"}
{"msg":"\"right, as small patch, to have the SDK calling it with a default value\"","username":"JonathanLevi","ts":"2017-04-10T13:44:15.847Z"}
{"msg":"\"OMG, Gossip needed the other value\", please can we merge this","username":"JonathanLevi","ts":"2017-04-10T13:44:31.616Z"}
{"msg":"Hold on, BCCSP now needs some MSP that is respects that xParam...","username":"JonathanLevi","ts":"2017-04-10T13:44:55.787Z"}
{"msg":"Hold on, BCCSP now needs some value that the MSP should have now that that xParam value was set to \"XYZ\".","username":"JonathanLevi","ts":"2017-04-10T13:44:55.787Z"}
{"msg":"....","username":"JonathanLevi","ts":"2017-04-10T13:44:59.672Z"}
{"msg":"And the whole workflow is getting these circular dependencies with patches over patches, that are very difficult to coherently review.","username":"JonathanLevi","ts":"2017-04-10T13:45:38.207Z"}
{"msg":"---\nWhich brings me to suggest that we have more of the discussions at the JIRA ticket (stage/step/realm), and help ourselves/contributors agree/disagree/discuss at a much earlier stage, before we even get to the code/gerrit submission(s)/reviews.","username":"JonathanLevi","ts":"2017-04-10T13:47:30.686Z"}
{"msg":"---\nWhich brings me to suggest that we should have more of the discussions at the JIRA ticket (stage/step/realm), and help ourselves/contributors agree/disagree/discuss at a much earlier stage, before we even get to the code/gerrit submission(s)/reviews.","username":"JonathanLevi","ts":"2017-04-10T13:47:55.277Z"}
{"msg":"This way, I believe that we can also *help* others to work closer to the way you @greg.haskins (and @cbf) suggest/recommend.","username":"JonathanLevi","ts":"2017-04-10T13:48:22.600Z"}
{"msg":"Sorry if this is a longer version of `+1` ;-) but I'm trying to (also) think-out-loud about what cause these symptoms that we are trying to help avoiding...","username":"JonathanLevi","ts":"2017-04-10T13:49:38.408Z"}
{"msg":"Sorry if this is a longer version of `+1` ;-) but I'm trying to (also) think-out-loud about what causes these symptoms that we are trying to help avoiding... such as them HUGE CRs, less granular, so that people indeed, *tease out independent changes early*...","username":"JonathanLevi","ts":"2017-04-10T13:49:38.408Z"}
{"msg":"Sorry if this is a longer version of `+1` ;-) but I'm trying to (also) think-out-loud about what causes these symptoms that we are trying to help avoiding... such as them HUGE CRs that are less granular, so that people indeed, *tease out independent changes early*...","username":"JonathanLevi","ts":"2017-04-10T13:49:38.408Z"}
{"msg":"Has joined the channel.","username":"aso","ts":"2017-04-10T13:55:56.247Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zian","ts":"2017-04-10T13:59:25.965Z","type":"uj"}
{"msg":"I certainly think that we need more maintainer control over JIRA","username":"cbf","ts":"2017-04-10T14:04:52.923Z"}
{"msg":"we could start with Epics and aside from bug fixes, stories should relate to an Epic etc","username":"cbf","ts":"2017-04-10T14:05:31.088Z"}
{"msg":"Yes, I'm down for it too. It will be a bit more work/head-ache in the short-term (cleaning it up first, etc.)... but it's probably well worth it, in the longer run.","username":"JonathanLevi","ts":"2017-04-10T14:37:10.384Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Jm2Z9nXjE8Lre4bHP) @cbf I would love to devolve control of JIRA to maintainers","username":"rjones","ts":"2017-04-10T15:12:23.211Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Jm2Z9nXjE8Lre4bHP","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Jm2Z9nXjE8Lre4bHP","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@JonathanLevi the cleanup has been on-going for a number of days","username":"cbf","ts":"2017-04-10T16:11:34.483Z"}
{"msg":"still much to be done","username":"cbf","ts":"2017-04-10T16:11:43.181Z"}
{"msg":"and we are (IMNSHO) no closer to \"these stories must be completed for us to declare code-complete for v1.0\"","username":"cbf","ts":"2017-04-10T16:12:15.514Z"}
{"msg":"so, @JonathanLevi @mastersingh24 @greg.haskins @sheehan @binhn @jimthematrix @yacovm @jyellick @hgabre @muralisr @tamas Gari and I feel strongly that we should not be merging new function until we settle the release process. Bug fixes and additional tests are fine. Optimization is not a bug fix","username":"cbf","ts":"2017-04-10T18:46:45.498Z"}
{"msg":"there are very few items in flight and we will try to identify which JIRAs they are so we can carefully track","username":"cbf","ts":"2017-04-10T18:47:19.143Z"}
{"msg":"some stablization would be welcome","username":"greg.haskins","ts":"2017-04-10T18:47:27.432Z"}
{"msg":"amen","username":"cbf","ts":"2017-04-10T18:47:32.026Z"}
{"msg":"we can discuss creating a release branch (as we have been in the google doc) but let's hold off until we know what we have","username":"cbf","ts":"2017-04-10T18:48:15.402Z"}
{"msg":"and sort out the process (eg do we merge fixes to master or release nd then cherrypick?","username":"cbf","ts":"2017-04-10T18:48:41.328Z"}
{"msg":"this guidance applies to fabric, fabric-ca, and fabric-sdk-node ","username":"cbf","ts":"2017-04-10T18:50:39.246Z"}
{"msg":"we need to get a few more in otherwise things are not operational, including cc install packaging, config update, and ACL -- these have been submitted and in various state of review","username":"binhn","ts":"2017-04-10T19:04:00.066Z"}
{"msg":"we need the config stuff for sure","username":"mastersingh24","ts":"2017-04-10T19:08:34.303Z"}
{"msg":"Has joined the channel.","username":"vdods","ts":"2017-04-10T19:32:33.918Z","type":"uj"}
{"msg":"I think whatever approach we adopt, cherry-pick should be an exception not a rule","username":"greg.haskins","ts":"2017-04-10T20:22:27.153Z"}
{"msg":"e.g. either we dont branch until we cut 1.0, or we branch 1.0 and automate merges from 1.0 to master","username":"greg.haskins","ts":"2017-04-10T20:23:17.107Z"}
{"msg":"cherry-pick would only be used when something that was targeted at master but deemed in retrospect as appropriate for 1.0","username":"greg.haskins","ts":"2017-04-10T20:23:46.924Z"}
{"msg":"but this should be rare","username":"greg.haskins","ts":"2017-04-10T20:23:54.511Z"}
{"msg":"Has joined the channel.","username":"shanlusun","ts":"2017-04-11T02:23:30.129Z","type":"uj"}
{"msg":"Has joined the channel.","username":"baohua","ts":"2017-04-11T07:11:28.383Z","type":"uj"}
{"msg":"@here I sent a lengthy email on the release approach discussion to the hyperledger-fabric list - please weigh in","username":"cbf","ts":"2017-04-11T15:45:32.103Z"}
{"msg":"https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-April/000725.html","username":"JonathanLevi","ts":"2017-04-11T18:05:05.539Z"}
{"msg":"Here is that email, FWIW: https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-April/000725.html","username":"JonathanLevi","ts":"2017-04-11T18:05:05.539Z"}
{"msg":"thx","username":"cbf","ts":"2017-04-11T19:13:31.064Z"}
{"msg":"Has joined the channel.","username":"Lin-YiTang","ts":"2017-04-11T21:18:27.651Z","type":"uj"}
{"msg":"fyi- we invited people to join our scrum today and took notes on fabric-peer-endorser-comitter channel","username":"weeds","ts":"2017-04-12T14:25:54.470Z"}
{"msg":"Has joined the channel.","username":"kelvinzhong","ts":"2017-04-13T08:27:34.736Z","type":"uj"}
{"msg":"Hello fella maintainers,\nWe really need to make a call regarding whether we should cut another branch soon. Please see my questions here:\nhttps://chat.hyperledger.org/channel/fabric-release?msg=AbTncx9op7ie7K95t\n, until here: \nhttps://chat.hyperledger.org/channel/fabric-release?msg=FJkzZtjpJDDXkyuej","username":"JonathanLevi","ts":"2017-04-14T18:19:58.132Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=AbTncx9op7ie7K95t","url":"https://chat.hyperledger.org/channel/fabric-release?msg=AbTncx9op7ie7K95t","remote":true,"fileId":null,"fileName":null},{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=FJkzZtjpJDDXkyuej","url":"https://chat.hyperledger.org/channel/fabric-release?msg=FJkzZtjpJDDXkyuej","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I wanted to collect all the feedback from Troy and see who else may be interested in focusing on the next fabric version, with features that are not part of `fabric 1.0` in the coming weeks.","username":"JonathanLevi","ts":"2017-04-14T18:21:59.560Z"}
{"msg":"While I know that @binhn suggested to hold off the `2 branches` work for 2 weeks - I feel that if no maintainer objects - we should all work on `master` in the coming `4` weeks actually.","username":"JonathanLevi","ts":"2017-04-14T18:23:26.741Z"}
{"msg":"While I know that @binhn suggested to hold off the `2 branches` work for 2 weeks (that was during Sprint 16) - I feel that if no maintainer objects - we should all work on `master` in the coming `4` weeks actually.","username":"JonathanLevi","ts":"2017-04-14T18:23:26.741Z"}
{"msg":"While I know that @binhn suggested to hold off the `2 branches` work at least for 2 weeks (that was during Sprint 16) - I feel that if no maintainer objects - we should all work on `master` in the coming `4` (if not `6`) weeks actually.","username":"JonathanLevi","ts":"2017-04-14T18:23:26.741Z"}
{"msg":"We can of course vote - but as it stands, no for 2 weeks, I haven't heard/read any maintainer (so far) that suggested working in parallel on 1.0 and 1.1 (in the coming, say 4-6 weeks).","username":"JonathanLevi","ts":"2017-04-14T18:24:41.034Z"}
{"msg":"We can of course vote - but as it stands, now for about 2 weeks, I haven't heard/read any maintainer (so far) that suggested working in parallel on 1.0 and 1.1 (in the coming, say 4-6 weeks).","username":"JonathanLevi","ts":"2017-04-14T18:24:41.034Z"}
{"msg":"I can't tell if we are all simply traumatized from the issues we had with the `0.6` -> `1.0` work... or whether each of us is aware of enough issues and work that is still needed in `1.0`, for it to serve as a better `baseline for 1.1`.","username":"JonathanLevi","ts":"2017-04-14T18:26:34.725Z"}
{"msg":"My guess is probably the latter, but please chime in if you know anyone else *who else wants/needs/plans on working on features that he believes should be part of `fabric 1.1` and not part of `fabric 1.0` in the coming 4-6 weeks?*","username":"JonathanLevi","ts":"2017-04-14T18:27:55.768Z"}
{"msg":"My guess is probably the latter, but please chime in if you know *who else wants/needs/plans on working on features that he believes should be part of `fabric 1.1` and not part of `fabric 1.0` in the coming 4-6 weeks?*","username":"JonathanLevi","ts":"2017-04-14T18:27:55.768Z"}
{"msg":"My guess is probably the latter, but please chime in if you know *who else wants/needs/plans on working on features that he believes should be part of `fabric 1.1` and not part of `fabric 1.0` in the coming 4-6 weeks?*","username":"JonathanLevi","ts":"2017-04-14T18:28:43.482Z"}
{"msg":"We really need to make a call regarding whether we should cut another branch soon. Please see my questions here:\nhttps://chat.hyperledger.org/channel/fabric-release?msg=AbTncx9op7ie7K95t","username":"JonathanLevi","ts":"2017-04-14T18:32:34.593Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=AbTncx9op7ie7K95t","url":"https://chat.hyperledger.org/channel/fabric-release?msg=AbTncx9op7ie7K95t","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://chat.hyperledger.org/channel/fabric-release?msg=FJkzZtjpJDDXkyuej","username":"JonathanLevi","ts":"2017-04-14T18:32:43.597Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=FJkzZtjpJDDXkyuej","url":"https://chat.hyperledger.org/channel/fabric-release?msg=FJkzZtjpJDDXkyuej","remote":true,"fileId":null,"fileName":null}]}
{"msg":"my take is, while there is plenty of interesting things to consider beyond 1.0, having the system be stable and usable is far more important (to me and my team) right now","username":"greg.haskins","ts":"2017-04-14T19:48:58.039Z"}
{"msg":"so, i would love to focus on exciting new stuff, but if 1.0 doesnt become viable for deployment none of that will matter","username":"greg.haskins","ts":"2017-04-14T19:49:40.222Z"}
{"msg":"therefore my energy will be focused on 1.0","username":"greg.haskins","ts":"2017-04-14T19:50:32.788Z"}
{"msg":"if I may add one thing @greg.haskins ... `stable and usable` - usable includes doc and examples","username":"muralisr","ts":"2017-04-14T23:44:15.399Z"}
{"msg":"Yep, I agree","username":"greg.haskins","ts":"2017-04-14T23:45:56.705Z"}
{"msg":"and tests passing","username":"greg.haskins","ts":"2017-04-14T23:46:06.343Z"}
{"msg":"and tests passing","username":"muralisr","ts":"2017-04-14T23:50:29.567Z"}
{"msg":"@JonathanLevi my pref is 2 weeks at a time;  and toward the end of the second week, we know whether we're there or not to decide on branch. I agreed with @greg.haskins @cbf @many-others to focus on 1.0 ","username":"binhn","ts":"2017-04-15T14:39:35.197Z"}
{"msg":"we are doing peer scrum right now and took notes on fabric-peer-endorser-committer channel... there is one deicision to be made relative to Java SDK","username":"weeds","ts":"2017-04-17T14:11:14.407Z"}
{"msg":"that Jim will post here","username":"weeds","ts":"2017-04-17T14:11:19.544Z"}
{"msg":"Has joined the channel.","username":"mffrench","ts":"2017-04-17T16:32:30.002Z","type":"uj"}
{"msg":"Hi there,\nI'd like to add the configtxgen binary inside peer and orderer containers (I can push some code to review on gerrit for that). So this is a small improvement request which seems to me too small to be treated through the fabric requirements pipeline (requirements-wg) and I was thinking this could be considered like a bug - ie: I can open directly a JIRA ticket for it. Can someone tell me a little more when we have to follow the fabric requirements pipeline and when we can open a direct JIRA ticket ?","username":"mffrench","ts":"2017-04-17T16:39:51.477Z"}
{"msg":"Hello Mathilde! ;-) It's not really the right channel for it. #fabric is probably better. Please open a ticket at jira.hyperledger.org, and we (the maintainers, but no just) can (and will) look into it... ","username":"JonathanLevi","ts":"2017-04-17T17:33:22.290Z"}
{"msg":"Hello Mathilde! ;-) It's not really the right channel for it. #fabric is probably better. Please open a ticket at jira.hyperledger.org, and we (the maintainers, but not just/only) can (and will) look into it... ","username":"JonathanLevi","ts":"2017-04-17T17:33:22.290Z"}
{"msg":"Hello Mathilde! ;-) This not really the right channel for it. #fabric is probably better. But sure, please can you open a ticket at jira.hyperledger.org with more details, and we (the maintainers, but not just/only) can (and will) look into it... ","username":"JonathanLevi","ts":"2017-04-17T17:33:22.290Z"}
{"msg":"While we are working on hardening/solidifying the 1.0 release, if it is a bug - then we may include it.","username":"JonathanLevi","ts":"2017-04-17T17:34:09.941Z"}
{"msg":"I don't think it's a request that is too small to be included. We're talking about changing the docker image of the peer and the ordering service","username":"yacovm","ts":"2017-04-17T17:37:02.485Z"}
{"msg":"While we are working on hardening/solidifying the 1.0 release, if it is a bug - then we may include it - whether it will get into 1.0 or 1.1 - contributions are really welcome, so thanks in advance!","username":"JonathanLevi","ts":"2017-04-17T17:37:18.952Z"}
{"msg":"While we are working on hardening/solidifying the 1.0 release, if it is a bug - then we may include/merge it even now. That said, whether it will get into 1.0 or 1.1 in one form or another  - contributions are really welcome, so thanks in advance! (no commitment but will be happy to assist with the \"leg work\", prioritization, discussions, etc.) @mffrench","username":"JonathanLevi","ts":"2017-04-17T17:37:18.952Z"}
{"msg":"Hello @JonathanLevi , thank you for this answer... :)","username":"mffrench","ts":"2017-04-17T19:01:53.008Z"}
{"msg":"Hi, could one take a look at this one? https://gerrit.hyperledger.org/r/#/c/6279/","username":"elli-androulaki","ts":"2017-04-18T19:14:45.484Z"}
{"msg":"@elli-androulaki please ask in #fabric-pr-review thank you :)","username":"rjones","ts":"2017-04-18T19:17:11.973Z"}
{"msg":"Oops, will do. Thanks!","username":"elli-androulaki","ts":"2017-04-18T19:18:25.528Z"}
{"msg":"Has joined the channel.","username":"dhuseby","ts":"2017-04-18T20:23:36.270Z","type":"uj"}
{"msg":"is anyone working on cryptogen atm?","username":"greg.haskins","ts":"2017-04-18T20:33:16.327Z"}
{"msg":"ive found a problem and I think I understand what the solution is, but I dont want to duplicate efforts","username":"greg.haskins","ts":"2017-04-18T20:33:40.011Z"}
{"msg":"please note that we will have scrum call at 9:30 AM EST 1-888-426-6840 / 33682113) ","username":"weeds","ts":"2017-04-19T13:01:44.165Z"}
{"msg":"I think in the call people wanted to go through JIRa items the thought needed to get into release as an FYI where maintainers may have comments","username":"weeds","ts":"2017-04-19T13:02:02.845Z"}
{"msg":"for awareness- there may need to be some comments on what I posted on peer-endorser-comitter- but highlighted mastersing24 name at those points since could not get all maintainers out fast in my typing","username":"weeds","ts":"2017-04-19T14:37:05.258Z"}
{"msg":"so places where i pust mastersingh24 name may need comments from maintainers","username":"weeds","ts":"2017-04-19T14:40:45.063Z"}
{"msg":"@mastersingh24 @jyellick @sheehan @tamas @hgabre @muralisr @binhn @JonathanLevi @greg.haskins @yacovm @jimthematrix https://gerrit.hyperledger.org/r/#/c/8235/","username":"cbf","ts":"2017-04-19T15:25:38.073Z"}
{"msg":"I've nominated @kostas to be Fabric maintainer","username":"cbf","ts":"2017-04-19T15:25:54.187Z"}
{"msg":"@cbf, may you take another look at this one ? https://gerrit.hyperledger.org/r/#/c/7853/ @aso seems to have addressed your comment!","username":"elli-androulaki","ts":"2017-04-19T15:47:01.132Z"}
{"msg":"@cbf, may you take another look at this one ? https://gerrit.hyperledger.org/r/#/c/7853/ @aso seems to have addressed your comment! Thanks","username":"elli-androulaki","ts":"2017-04-19T15:47:01.132Z"}
{"msg":"hi folks, I noticed the post from golang 1.7 refresh \"go1.7.5 (released 2017/01/26) includes fixes to the compiler, runtime, and the crypto/x509 and time packages.\" that seems important for us, especially crypto/x509","username":"binhn","ts":"2017-04-19T17:46:36.735Z"}
{"msg":"I propose we update our golang version to 1.7.5","username":"binhn","ts":"2017-04-19T17:46:59.979Z"}
{"msg":"@binhn fine by me...if someone can push a CR to baseimage, ill include it with the next drop","username":"greg.haskins","ts":"2017-04-19T19:01:08.774Z"}
{"msg":"@greg.haskins i don't remember what needs to be changed?  i did a search and found devenv/setup.sh is already at 1.7.5","username":"binhn","ts":"2017-04-19T19:06:33.909Z"}
{"msg":"and vagrantfile is `Vagrant.require_version \">= 1.7.4\"`","username":"binhn","ts":"2017-04-19T19:07:20.744Z"}
{"msg":"note that vagrantfile version is unrelated","username":"greg.haskins","ts":"2017-04-19T19:08:05.657Z"}
{"msg":"Has joined the channel.","username":"tkuhrt","ts":"2017-04-19T19:09:01.526Z","type":"uj"}
{"msg":"this is what is used in  baseos/baseimage: https://github.com/hyperledger/fabric-baseimage/blob/master/scripts/common/setup.sh#L31","username":"greg.haskins","ts":"2017-04-19T19:09:02.033Z"}
{"msg":"which ultimately is what is used in anything in docker (including chaincode)","username":"greg.haskins","ts":"2017-04-19T19:09:29.410Z"}
{"msg":"BTW: How do we feel with Go 1.8?","username":"JonathanLevi","ts":"2017-04-19T19:55:18.341Z"}
{"msg":"BTW: How do we feel wrt Go 1.8?","username":"JonathanLevi","ts":"2017-04-19T19:55:18.341Z"}
{"msg":"We still have a few months until the end of June...","username":"JonathanLevi","ts":"2017-04-19T19:55:47.376Z"}
{"msg":"@greg.haskins ok, i'll submit a CR","username":"binhn","ts":"2017-04-19T20:32:55.926Z"}
{"msg":"@JonathanLevi i haven't read up the changes on 1.8, but i know 1 thing that we want to exploit is the pluggable module ","username":"binhn","ts":"2017-04-19T20:33:49.239Z"}
{"msg":"What about vendor folders of gRPC implementation and protobuf ? ours are pretty old from what I know","username":"yacovm","ts":"2017-04-19T20:35:34.598Z"}
{"msg":"@JonathanLevi IIRC, there was a compatibility issue with go 1.8","username":"greg.haskins","ts":"2017-04-19T20:36:23.239Z"}
{"msg":"1.8.1 is out","username":"kostas","ts":"2017-04-19T20:36:52.059Z"}
{"msg":"1.8.1 is out FYI","username":"kostas","ts":"2017-04-19T20:36:52.059Z"}
{"msg":"someone tried it ( @yacovm ?) and there were errors","username":"greg.haskins","ts":"2017-04-19T20:36:53.283Z"}
{"msg":"congrats @kostas!","username":"cbf","ts":"2017-04-19T21:02:42.279Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/8235/","username":"cbf","ts":"2017-04-19T21:02:44.538Z"}
{"msg":"@greg.haskins  what do you mean?","username":"yacovm","ts":"2017-04-19T21:04:24.931Z"}
{"msg":"someone tried upgrading golang to v1.8 and fabric had issues compiling with it","username":"greg.haskins","ts":"2017-04-19T21:06:10.543Z"}
{"msg":"@yacovm someone tried upgrading golang to v1.8 and fabric had issues compiling with it","username":"greg.haskins","ts":"2017-04-19T21:06:10.543Z"}
{"msg":"i thought it might have been you, but maybe not","username":"greg.haskins","ts":"2017-04-19T21:06:16.153Z"}
{"msg":"@kostas perhaps?","username":"greg.haskins","ts":"2017-04-19T21:06:23.507Z"}
{"msg":"no, I tried upgrading the gRPC version but ran into problems and didn't have time to resolve them","username":"yacovm","ts":"2017-04-19T21:07:32.398Z"}
{"msg":"@cbf: Thank you!","username":"kostas","ts":"2017-04-19T21:29:19.424Z"}
{"msg":"@greg.haskins: Go 1.8 wouldn't play nicely out of the box for those of us on a Mac w/ anything Go-related, not Fabric in particular (see: https://chat.hyperledger.org/channel/fabric-maintainers?msg=u37mzqpRLEg6BpYau). But 1.8.1 takes care of that.","username":"kostas","ts":"2017-04-19T21:29:25.240Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=u37mzqpRLEg6BpYau","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=u37mzqpRLEg6BpYau","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@kostas ah, ok","username":"greg.haskins","ts":"2017-04-19T21:29:44.434Z"}
{"msg":"thats good news","username":"greg.haskins","ts":"2017-04-19T21:29:46.335Z"}
{"msg":"there are also tests that fail under Go 1.8 - they once again changed how strict they are about checking certificates for usage extensions and other things (and changed some of the errors)","username":"mastersingh24","ts":"2017-04-19T21:49:37.973Z"}
{"msg":"folks -   https://gerrit.hyperledger.org/r/#/c/8301/    - clearly I missed this in JIRA as part of the sprint, but I gave it a -2 because I don't think we should be doing this now (or maybe ever).  But wanted to throw this out to see what others think","username":"mastersingh24","ts":"2017-04-20T13:09:18.668Z"}
{"msg":"So, what is the benefit of customizable hash function?","username":"yacovm","ts":"2017-04-20T13:12:30.765Z"}
{"msg":"the ONLY benefit I see for the internal stuff is if there was some standard change or government industry requirement","username":"mastersingh24","ts":"2017-04-20T13:18:44.486Z"}
{"msg":"I just think adding yet another config option to an already complex beast spells trouble","username":"mastersingh24","ts":"2017-04-20T13:19:24.971Z"}
{"msg":"but - if there is such a requirement, IMO then we need to have a hardcoded *constant( in the code for that, and then we can simply use that","username":"yacovm","ts":"2017-04-20T13:23:29.802Z"}
{"msg":"but - if there is such a requirement, IMO then we need to have a hardcoded *constant*  in the code for that, and then we can simply use that","username":"yacovm","ts":"2017-04-20T13:23:29.802Z"}
{"msg":"but specifying such stuff in a configuration file - might make it that clients would change that and then no hash verification would work","username":"yacovm","ts":"2017-04-20T13:24:16.727Z"}
{"msg":"but specifying such stuff in a configuration file - might make it that clients would change that and then no hash verification would work (across peers)","username":"yacovm","ts":"2017-04-20T13:24:16.727Z"}
{"msg":"I agree. Let's see/address if & when such requirement comes up.","username":"JonathanLevi","ts":"2017-04-20T15:59:20.885Z"}
{"msg":"I believe that simplified configurations, especially for the crypto/integration, should be a/our priority these days (, or, coming weeks, to be more precise).","username":"JonathanLevi","ts":"2017-04-20T16:00:07.782Z"}
{"msg":"In general, I believe that simplified configurations, especially for the crypto/integration, should be a/our priority these days (, or, coming weeks, to be more precise). My 2 cents.","username":"JonathanLevi","ts":"2017-04-20T16:00:07.782Z"}
{"msg":"The problem is that if you use a different hash there is no way of knowing that someone else uses a different hash because I don't think we write the hash algo anywhere, do we?","username":"yacovm","ts":"2017-04-20T16:03:01.198Z"}
{"msg":"The problem is that if you use a different hash there is no way of knowing that someone else uses a different hash because I don't think we write the hash algo anywhere (in the signatures that are sent), do we?","username":"yacovm","ts":"2017-04-20T16:03:01.198Z"}
{"msg":"Sorry to post here, but I'm not getting any action in fabric-pr-review.  Need to highlight the concern to the maintainers:","username":"dave.enyeart","ts":"2017-04-20T16:10:32.432Z"}
{"msg":"Still need reviews for these aging ledger items. They have been out there for review for a couple weeks. They have been peer reviewed, under the recommended lines of code, tested end-to-end, and rebased to ensure they are still valid. Please help!\nhttps://gerrit.hyperledger.org/r/#/c/7687 Switch QueryResult to protobuf to enable java chaincode\nhttps://gerrit.hyperledger.org/r/#/c/7787 Switch gob encoding to enable java chaincode\nhttps://gerrit.hyperledger.org/r/#/c/7255 Fix chaincode result set paging\nhttps://gerrit.hyperledger.org/r/#/c/7099 Provide CouchDB default config (security)\nhttps://gerrit.hyperledger.org/r/#/c/6793 Benchmark test framework for ledger (large… but it’s a test harness not production code)\nhttps://gerrit.hyperledger.org/r/#/c/7975 Create CouchDB system databases\nhttps://gerrit.hyperledger.org/r/#/c/8139 History enablement in core.yaml","username":"dave.enyeart","ts":"2017-04-20T16:10:42.194Z"}
{"msg":"Thank you @dave.enyeart, we'll (jointly) try to unblock you today...","username":"JonathanLevi","ts":"2017-04-20T16:14:01.918Z"}
{"msg":"thx much!","username":"dave.enyeart","ts":"2017-04-20T16:14:10.684Z"}
{"msg":"@yacovm: Yes, that would be a big change... ","username":"JonathanLevi","ts":"2017-04-20T16:15:01.114Z"}
{"msg":"end-to-end is currently broken due to access control in system chaincode doing its job \nhttps://gerrit.hyperledger.org/r/#/c/8343\nCan anyone please merge?","username":"yacovm","ts":"2017-04-21T07:57:08.547Z"}
{"msg":"@jimthematrix I guess that also effects the node-sdk tests (are they passing now? I don't remember what is the status of them).\nShould we change the PEM material there too, or are they already admins?","username":"yacovm","ts":"2017-04-21T08:11:36.662Z"}
{"msg":"The e2e_cli joins a channel by iterating over all peer numbers from 0 to 3.\nThe patch that @adc pushed made all 4 peers org admins.\nI think it's better to have only 2 peers admins and have the script only use join channel with admin of org0 and admin of org1 *while at the same time* using invoke/query with other peer signing identities, in order to be sure that we do not use *over privileged* credentials when we don't need to (because this can mask bugs related to policies)\nWhat do you think?","username":"yacovm","ts":"2017-04-21T11:01:32.672Z"}
{"msg":"The e2e_cli joins a channel by iterating over all peer numbers from 0 to 3.\nThe patch that @adc pushed made all 4 peers org admins (otherwise, the e2e fails)\nI think it's better to have only 2 peers admins and have the script only use join channel with admin of org0 and admin of org1 *while at the same time* using invoke/query with other peer signing identities, in order to be sure that we do not use *over privileged* credentials when we don't need to (because this can mask bugs related to policies)\nWhat do you think?","username":"yacovm","ts":"2017-04-21T11:01:32.672Z"}
{"msg":"it makes sense to me. This will require then to have the signing keys of the administrator available ","username":"adc","ts":"2017-04-21T12:04:34.706Z"}
{"msg":"no, it won't. All I'm saying is to fine-grain the usage of peer signing identities - use only admin signing identity for \"privileged\" operations, and use non-admin peer signing identities for other","username":"yacovm","ts":"2017-04-21T12:10:23.404Z"}
{"msg":"I have two comments","username":"greg.haskins","ts":"2017-04-21T12:11:35.805Z"}
{"msg":"1) perhaps this should be modeled similarly to how cryptogen handles it:  that is, make an independent Admin credential that is separate from the peers and use that","username":"greg.haskins","ts":"2017-04-21T12:12:36.410Z"}
{"msg":"2) This system of granting entitlements via local directory hierarchy strikes me as an odd design","username":"greg.haskins","ts":"2017-04-21T12:13:24.314Z"}
{"msg":"for instance, how is  this expected to be managed over time w.r.t. provision/deprovision","username":"greg.haskins","ts":"2017-04-21T12:13:59.316Z"}
{"msg":"what strikes me as particularly odd is that its in the context of \"member services\" to begin with.  Shouldn't those entitlements be managed in-band to the MSP system (such as an x509 attribute and CRL mechanism)?","username":"greg.haskins","ts":"2017-04-21T12:15:18.605Z"}
{"msg":"can anyone speak to the rationale there?","username":"greg.haskins","ts":"2017-04-21T12:15:38.251Z"}
{"msg":"1) Yeah, that's a much better idea. Ideally we should do this. The only reason I proposed it, is that the peers in the org are \"symmetrical\" in all other aspects than the MSP material.\n2) Of course. The idea is- operations that are \"bootstrap\"-related, you need to trust your administrator.\nYou trust your administrator because you have its certificate in your local config on your file system, because you trust your file system.\nNow, after the bootstrap \"permissions\" have been set, you have extended ones (channel related) that they are defined by the entities that are considered privileged by your bootstrap permissions","username":"yacovm","ts":"2017-04-21T12:17:32.501Z"}
{"msg":"ok, if its a bootstrapping, this makes sense","username":"greg.haskins","ts":"2017-04-21T12:18:10.966Z"}
{"msg":"thank you for the explaination","username":"greg.haskins","ts":"2017-04-21T12:18:15.834Z"}
{"msg":"Now, this https://gerrit.hyperledger.org/r/#/c/8273/ explains it all very well, this whole setup","username":"yacovm","ts":"2017-04-21T12:18:16.585Z"}
{"msg":"I was afraid I was going to have to manage .pem distribution to the cluster","username":"greg.haskins","ts":"2017-04-21T12:18:54.835Z"}
{"msg":"I'll give you an example","username":"yacovm","ts":"2017-04-21T12:18:59.124Z"}
{"msg":"when you install a CC you touch the peer's file system","username":"yacovm","ts":"2017-04-21T12:19:14.256Z"}
{"msg":"For this you need (if I recall) org admin privileges.\nBut when you install- you set the instantiation policy  ","username":"yacovm","ts":"2017-04-21T12:20:46.764Z"}
{"msg":"and in the instantiation of the CC you set the endorsement policy","username":"yacovm","ts":"2017-04-21T12:20:59.087Z"}
{"msg":"so basically every \"step\" that requires AC defines the AC of the next \"step\"","username":"yacovm","ts":"2017-04-21T12:21:23.035Z"}
{"msg":"Now, regarding `.pem` files- the tough part is only to collect them all in order to make a new channel","username":"yacovm","ts":"2017-04-21T12:22:06.093Z"}
{"msg":"but you only need, for example- to collect the PEMs of the root CAs of the orgs","username":"yacovm","ts":"2017-04-21T12:22:20.391Z"}
{"msg":"not of the peers (gossip disseminates it for you ;) )","username":"yacovm","ts":"2017-04-21T12:22:26.744Z"}
{"msg":"the bootstrap through instantiate makes sense","username":"greg.haskins","ts":"2017-04-21T12:22:28.787Z"}
{"msg":"well, wait, it sounds like you are saying two different things","username":"greg.haskins","ts":"2017-04-21T12:23:05.852Z"}
{"msg":"why?","username":"yacovm","ts":"2017-04-21T12:23:11.123Z"}
{"msg":"is \"admincert\" an admin identity or a CA with authority to sign admin identities","username":"greg.haskins","ts":"2017-04-21T12:23:50.742Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=efLBedF6dwyNXfXqD) @yacovm in reference to","username":"greg.haskins","ts":"2017-04-21T12:24:32.579Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=efLBedF6dwyNXfXqD","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=efLBedF6dwyNXfXqD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"admin cert is a cert that the root CA signed it, + it is found in the file system of the peer in a folder that \"just admin certs are there\"","username":"yacovm","ts":"2017-04-21T12:24:33.456Z"}
{"msg":"ah but Greg, this is for channel creation","username":"yacovm","ts":"2017-04-21T12:24:52.174Z"}
{"msg":"admin cert is something intra-organizational","username":"yacovm","ts":"2017-04-21T12:25:00.996Z"}
{"msg":"im confused about your statements above....\"tough part is only to collect them all in order to make a new channel\" and \"you only need, for example- to collect the PEMs of the root CAs\"","username":"greg.haskins","ts":"2017-04-21T12:25:41.194Z"}
{"msg":"it sounded like you were saying you only needed to manage the rootca.pems","username":"greg.haskins","ts":"2017-04-21T12:26:02.362Z"}
{"msg":"so, if you're orgA and you want to create a channel with you *and* orgB, you need orgB's root CA certs","username":"yacovm","ts":"2017-04-21T12:26:26.744Z"}
{"msg":"but I took your earlier statement that I needed to grant a specific identity (or identities) channel-creation entitlements by putting them in admincerts","username":"greg.haskins","ts":"2017-04-21T12:26:33.252Z"}
{"msg":"there is no going around it","username":"yacovm","ts":"2017-04-21T12:26:34.617Z"}
{"msg":"I understand the rootca requirement","username":"greg.haskins","ts":"2017-04-21T12:26:49.475Z"}
{"msg":"whats not clear is whether admincerts is a trust-root or identity","username":"greg.haskins","ts":"2017-04-21T12:27:17.325Z"}
{"msg":"ah, so it's an identity ","username":"yacovm","ts":"2017-04-21T12:27:35.044Z"}
{"msg":"I'll give you an example","username":"yacovm","ts":"2017-04-21T12:27:41.814Z"}
{"msg":"https://github.com/hyperledger/fabric/tree/master/examples/e2e_cli/crypto/peer/peer0/localMspConfig\nThe certs in the `admincerts` define the admins. They are of course signed by the root CA that their certs are in `cacerts`.","username":"yacovm","ts":"2017-04-21T12:28:35.214Z"}
{"msg":"ok, so cacerts establishes the trust-roots, and admincerts grants identities rooted in cacerts the privilege of channel-creation","username":"greg.haskins","ts":"2017-04-21T12:29:51.079Z"}
{"msg":"I'd say not channel creation but channel join-ing","username":"yacovm","ts":"2017-04-21T12:30:45.962Z"}
{"msg":"since a peer doesn't create the channel, but the ordering service.","username":"yacovm","ts":"2017-04-21T12:30:54.041Z"}
{"msg":"ah, right","username":"greg.haskins","ts":"2017-04-21T12:30:59.738Z"}
{"msg":"i assume theres a similar \"admincert\" type bootstrap for the orderer w.r.t. channel creation?","username":"greg.haskins","ts":"2017-04-21T12:31:20.448Z"}
{"msg":"it's a bit more complex than that, because the peer is bootstrapped to a single org, while the OS is \"bootstrapped\" already to know all orgs.\nhttps://github.com/hyperledger/fabric/blob/master/common/configtx/tool/configtx.yaml defines the organizations, and it also needs the root CA certs.","username":"yacovm","ts":"2017-04-21T12:33:11.469Z"}
{"msg":"it's a bit more complex than that, because the peer is bootstrapped to a single org, while the OS is \"bootstrapped\" already to know all orgs.\nhttps://github.com/hyperledger/fabric/blob/master/common/configtx/tool/configtx.yaml can be used to generate a \"block\" that defines the organizations, and it also needs the root CA certs.","username":"yacovm","ts":"2017-04-21T12:33:11.469Z"}
{"msg":"how is per-channel granularity handled?","username":"greg.haskins","ts":"2017-04-21T12:33:33.175Z"}
{"msg":"for instance, say I have Org1 and Org2 that want to join a channel Chan1","username":"greg.haskins","ts":"2017-04-21T12:33:55.428Z"}
{"msg":"wdym?","username":"yacovm","ts":"2017-04-21T12:33:56.393Z"}
{"msg":"so i have org1.pem and org2.pem in cacerts","username":"greg.haskins","ts":"2017-04-21T12:34:22.451Z"}
{"msg":"ah you have to get the root CA certs of both orgs, and have 1 of them mix them together and serve that to the OS","username":"yacovm","ts":"2017-04-21T12:34:33.827Z"}
{"msg":"and the latter returns you a block","username":"yacovm","ts":"2017-04-21T12:34:39.524Z"}
{"msg":"and I have admin-org1.pem and admin-org2.pem in admincerts","username":"greg.haskins","ts":"2017-04-21T12:34:43.997Z"}
{"msg":"which you give each of the peers :/ ","username":"yacovm","ts":"2017-04-21T12:34:45.338Z"}
{"msg":"in the future we hopefully have a less complex mechanism","username":"yacovm","ts":"2017-04-21T12:34:58.711Z"}
{"msg":"an \"identity channel\"","username":"yacovm","ts":"2017-04-21T12:35:10.980Z"}
{"msg":"so you'll just need to specify the orgs instead of having their PEM or something like that","username":"yacovm","ts":"2017-04-21T12:35:24.657Z"}
{"msg":"hear me out","username":"greg.haskins","ts":"2017-04-21T12:35:38.614Z"}
{"msg":"im confused about one thing","username":"greg.haskins","ts":"2017-04-21T12:35:48.292Z"}
{"msg":"what defines the group that allowed to join a channel?","username":"greg.haskins","ts":"2017-04-21T12:36:08.599Z"}
{"msg":"thats what not clear","username":"greg.haskins","ts":"2017-04-21T12:36:14.532Z"}
{"msg":"the channel creator!","username":"yacovm","ts":"2017-04-21T12:36:20.376Z"}
{"msg":"ah, the orgs in the configtx","username":"greg.haskins","ts":"2017-04-21T12:36:47.734Z"}
{"msg":"if you collect a certain set of root CA certs, the channel's \"name\" is then owned by these orgs","username":"yacovm","ts":"2017-04-21T12:36:54.154Z"}
{"msg":"ok, so someone sets up org1+org2 and generates a genesis block, fires it through the OS, and now we have group established for the channel","username":"greg.haskins","ts":"2017-04-21T12:38:06.853Z"}
{"msg":"next, an admin (as defined by valid certs in admincerts) on Org1 needs to join org1 to the channel","username":"greg.haskins","ts":"2017-04-21T12:38:31.668Z"}
{"msg":"likewise for org2","username":"greg.haskins","ts":"2017-04-21T12:38:36.528Z"}
{"msg":"almost- it fires a transaction that makes the OS create the block ;)","username":"yacovm","ts":"2017-04-21T12:38:47.352Z"}
{"msg":"right, ok","username":"greg.haskins","ts":"2017-04-21T12:39:02.663Z"}
{"msg":"and yeah exactly as you said after that","username":"yacovm","ts":"2017-04-21T12:39:18.191Z"}
{"msg":"ok, got it","username":"greg.haskins","ts":"2017-04-21T12:39:27.597Z"}
{"msg":"i assume that only the anchor-peer needs to be told to join?","username":"greg.haskins","ts":"2017-04-21T12:39:46.191Z"}
{"msg":"the others will learn via gossip?","username":"greg.haskins","ts":"2017-04-21T12:39:55.383Z"}
{"msg":"no. all peers you want","username":"yacovm","ts":"2017-04-21T12:39:57.020Z"}
{"msg":"i mean intra-org?","username":"greg.haskins","ts":"2017-04-21T12:40:07.719Z"}
{"msg":"the anchor peers are just endpoints for peers from different orgs to find each other","username":"yacovm","ts":"2017-04-21T12:40:13.733Z"}
{"msg":"so I have to do \"peer channel join\" for each peer?","username":"greg.haskins","ts":"2017-04-21T12:40:26.768Z"}
{"msg":"also intra-org you need manually to have peers join a channel","username":"yacovm","ts":"2017-04-21T12:40:40.930Z"}
{"msg":"ok, i just studied e2e, it does look like each peer is explicitly joined","username":"greg.haskins","ts":"2017-04-21T12:42:26.090Z"}
{"msg":"i think I understand now, thank you for the details","username":"greg.haskins","ts":"2017-04-21T12:42:42.391Z"}
{"msg":"np","username":"yacovm","ts":"2017-04-21T12:42:45.723Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=6AMwiiEm477pRhPDw) @greg.haskins golang 1.8 didn't work with cryptogen, had to upgrade to 1.8.1 to make that work. other than that I've been using 1.8 for a long time and haven't had any issues","username":"jimthematrix","ts":"2017-04-21T13:55:16.147Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6AMwiiEm477pRhPDw","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6AMwiiEm477pRhPDw","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@jimthematrix thats good news","username":"greg.haskins","ts":"2017-04-21T13:59:39.644Z"}
{"msg":"would like to look at ubuntu 17.04, golang 1.8, protobuf 3.2, etc, after the release","username":"greg.haskins","ts":"2017-04-21T14:00:06.175Z"}
{"msg":"(basically a sweep of all deps)","username":"greg.haskins","ts":"2017-04-21T14:00:26.729Z"}
{"msg":"(one debate would be, do we want to only use Ubuntu LTS","username":"greg.haskins","ts":"2017-04-21T14:00:49.048Z"}
{"msg":"Latest master (tip: `441b3085`) failing again?","username":"kostas","ts":"2017-04-21T15:34:45.255Z"}
{"msg":"`github.com/hyperledger/fabric/core/chaincode` fails with a panic.","username":"kostas","ts":"2017-04-21T15:34:59.175Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=HkLQdomv6vjdWsKJQ) I had thought at some point, there was also the ideas of limiting which peers listened to the ordering service. Is this also the anchor peers?","username":"troyronda","ts":"2017-04-21T15:39:27.979Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=HkLQdomv6vjdWsKJQ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=HkLQdomv6vjdWsKJQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@kostas in CI ?","username":"muralisr","ts":"2017-04-21T15:44:52.669Z"}
{"msg":"if local... do you have log or stack trace handy ?","username":"muralisr","ts":"2017-04-21T15:45:15.728Z"}
{"msg":"@muralisr: Locally. Tried twice. Here you go: https://gist.github.com/kchristidis/4d0073ef4a9c4fd8a22bb47796002a85","username":"kostas","ts":"2017-04-21T15:55:32.640Z"}
{"msg":"@troyronda: That would be the leader peer, see last paragraph here: https://github.com/hyperledger/fabric/blob/3181e78c3ecf4d5d7f3745d34906f44e8f3436f6/docs/source/gossip.rst#gossip-protocol","username":"kostas","ts":"2017-04-21T15:56:16.941Z"}
{"msg":"thans","username":"muralisr","ts":"2017-04-21T15:57:31.400Z"}
{"msg":"thanks","username":"muralisr","ts":"2017-04-21T15:57:31.400Z"}
{"msg":"@kostas - ah cool, thanks. are the leader peers configured similar to anchor peers then?","username":"troyronda","ts":"2017-04-21T15:57:32.760Z"}
{"msg":"@kostas - ah cool, thanks.","username":"troyronda","ts":"2017-04-21T15:57:32.760Z"}
{"msg":"","username":"muralisr","ts":"2017-04-21T15:58:11.432Z","attachments":[{"title":"File Uploaded: Clipboard","title_link":"/file-upload/EDaEaEPAg9PtPRJHZ/Clipboard","image_url":"/file-upload/EDaEaEPAg9PtPRJHZ/Clipboard","image_type":"image/png","image_size":191540,"url":"/file-upload/EDaEaEPAg9PtPRJHZ/Clipboard","remote":false,"fileId":"EDaEaEPAg9PtPRJHZ"}]}
{"msg":"the map chaincode crashed","username":"muralisr","ts":"2017-04-21T15:59:15.669Z"}
{"msg":"@dave.enyeart any ideas ? this is in the \"map\" chaincode when executing TestQueries (I wouldnt expect timing so would expect to see this in CI too...)","username":"muralisr","ts":"2017-04-21T16:01:32.313Z"}
{"msg":"@muralisr I will investigate","username":"dave.enyeart","ts":"2017-04-21T16:04:06.715Z"}
{"msg":"@muralisr I investigated - haven't been able to reproduce on latest master.","username":"dave.enyeart","ts":"2017-04-21T16:04:06.715Z"}
{"msg":"Yup, Dave, please do not post here.","username":"JonathanLevi","ts":"2017-04-21T18:35:45.888Z"}
{"msg":"(point taken)","username":"JonathanLevi","ts":"2017-04-21T18:35:49.730Z"}
{"msg":"@dave.enyeart: Please post these on #fabric-pr-review first... we do not wish to make \"escalating to this channel\" a habit... (or yours or others). Thank you.","username":"JonathanLevi","ts":"2017-04-21T18:41:55.156Z"}
{"msg":"(Hope you understand)","username":"JonathanLevi","ts":"2017-04-21T18:42:07.407Z"}
{"msg":"(hope you'd understand where we are coming from)","username":"JonathanLevi","ts":"2017-04-21T18:42:26.837Z"}
{"msg":"Indeed, I give it at least a week before escalating here :)","username":"dave.enyeart","ts":"2017-04-21T18:42:57.697Z"}
{"msg":"I'm sorry it takes time to merge 6+ issues at this stage, during a code freeze, with a few maintainers being away, etc.\nWe did merge all the of the list you asked for yesterday (https://chat.hyperledger.org/channel/fabric-pr-review?msg=pEct4mwzYbibyv6MK) other than one that I have temporarily veto'ed due to some (minor) licensing. Still, this is not the right channel for escalating. Thanks.","username":"JonathanLevi","ts":"2017-04-21T20:40:10.865Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=pEct4mwzYbibyv6MK","url":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=pEct4mwzYbibyv6MK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"____\nThere are many ongoing discussions these days, mostly around what gets into 1.0, planning and ETAs. Please, everyone who reads this channel, the release and the iterations over the mailing lists - please take note of it.","username":"JonathanLevi","ts":"2017-04-21T20:41:32.401Z"}
{"msg":"____\nAs some of you have noticed the (several) ongoing discussions these days around what gets into 1.0, planning and ETAs. Please, everyone who reads this channel, the #fabric-release one and the various threads/iterations over the mailing lists - please take note that some of the PRs/CRs take a bit longer to \"auto-merge\" as we are working out on solidifying the \"strategy\" first.","username":"JonathanLevi","ts":"2017-04-21T20:47:29.512Z"}
{"msg":"[This is not really a note to the maintainers - but for those who still read this channel]","username":"JonathanLevi","ts":"2017-04-21T20:47:53.621Z"}
{"msg":"so how do we want to deal with https://gerrit.hyperledger.org/r/#/c/8311/  ?  I think it's actually a good (and important) change, but it conflicts with 17 other change sets","username":"mastersingh24","ts":"2017-04-22T14:38:40.004Z"}
{"msg":"we should also get this one from @greg.haskins https://gerrit.hyperledger.org/r/#/c/7963/  (hopefully it's just a rebase)","username":"mastersingh24","ts":"2017-04-22T14:39:24.849Z"}
{"msg":"There is no escaping death, income tax, and costumizable per package logging levels for fabric","username":"yacovm","ts":"2017-04-22T15:08:00.535Z"}
{"msg":"I thought I paid all of my taxes on April 18  :(","username":"mastersingh24","ts":"2017-04-22T17:46:16.656Z"}
{"msg":"I hear ya","username":"mastersingh24","ts":"2017-04-22T17:46:38.942Z"}
{"msg":"I'm giving https://gerrit.hyperledger.org/r/#/c/8311/ a +2   ","username":"mastersingh24","ts":"2017-04-22T17:47:13.946Z"}
{"msg":"hmmm","username":"yacovm","ts":"2017-04-22T17:52:56.948Z"}
{"msg":"I'm a bit afraid","username":"yacovm","ts":"2017-04-22T17:52:59.810Z"}
{"msg":"I pulled the change set and seems like gossip's logging is set to INFO in the tests","username":"yacovm","ts":"2017-04-22T17:53:24.321Z"}
{"msg":"I pulled the change set and seems like gossip's logging is set to INFO in the tests (I think that before the change it was on WARN)","username":"yacovm","ts":"2017-04-22T17:53:24.321Z"}
{"msg":"but at the same time it passed CI so I guess it's not too verbose for CI","username":"yacovm","ts":"2017-04-22T17:54:12.440Z"}
{"msg":"@mastersingh24 agree ...given the breadth of changes better get in https://gerrit.hyperledger.org/r/#/c/7963 first or it would lead to perpetual rebases .. so just like https://gerrit.hyperledger.org/r/#/c/8311 better get 7963 in and others can rebase IMO","username":"muralisr","ts":"2017-04-23T00:59:32.331Z"}
{"msg":"@greg.haskins @mastersingh24 we should coordinate getting https://gerrit.hyperledger.org/r/#/c/7963/ merged... it will need a rebase and almost immediate review/merge so we don't succumb to another merge conflict. I think it has been reviewed to death, suggest that we rebase, not wait for Jenkins and just +2 and merge... What say ye?","username":"cbf","ts":"2017-04-23T15:17:24.421Z"}
{"msg":"@cbf sounds good to me:  I am mobile and won't be at a computer until tonight at the earliest.  However if the gerrit rebate is enough, I support this","username":"greg.haskins","ts":"2017-04-23T16:06:30.386Z"}
{"msg":"We should expect the following:  some number of other patches will go naturally into \"Merge conflict\" and require explicit action","username":"greg.haskins","ts":"2017-04-23T16:07:27.818Z"}
{"msg":"let's aim for tomorrow ","username":"cbf","ts":"2017-04-23T16:07:31.038Z"}
{"msg":"Others will need a rebase but this won't be apparent if they are just merged ","username":"greg.haskins","ts":"2017-04-23T16:08:01.222Z"}
{"msg":"So we should ideally rebase any outstanding CRs a","username":"greg.haskins","ts":"2017-04-23T16:08:28.278Z"}
{"msg":"that are not in conflict status to be sure","username":"greg.haskins","ts":"2017-04-23T16:08:48.065Z"}
{"msg":"Or just deal with the CI fallout","username":"greg.haskins","ts":"2017-04-23T16:09:00.257Z"}
{"msg":"It's typically a one liner fix, but FYI ","username":"greg.haskins","ts":"2017-04-23T16:09:23.362Z"}
{"msg":"This is the typical conflict: https://gerrit.hyperledger.org/r/#/c/7963/18/core/committer/txvalidator/txvalidator_test.go","username":"greg.haskins","ts":"2017-04-23T16:10:29.615Z"}
{"msg":"People have been adding those calls like mad this week.","username":"greg.haskins","ts":"2017-04-23T16:10:58.236Z"}
{"msg":"Tomorrow works for me.  ","username":"greg.haskins","ts":"2017-04-23T16:11:45.516Z"}
{"msg":"I think this will go smoothest if we can coordinate a merge freeze window for an hour or so","username":"greg.haskins","ts":"2017-04-23T16:12:34.005Z"}
{"msg":"@greg.haskins hi, your latest commit 8ce1073 is referring to a missing file `/bin/true`","username":"jojocheung","ts":"2017-04-24T07:14:40.014Z"}
{"msg":"@jojocheung what platform are you running?","username":"greg.haskins","ts":"2017-04-24T12:29:21.442Z"}
{"msg":"Mac","username":"jojocheung","ts":"2017-04-24T12:32:33.694Z"}
{"msg":"@jojocheung indeed...i see that too...i developed it in vagrant/linux","username":"greg.haskins","ts":"2017-04-24T12:35:57.547Z"}
{"msg":"pls file JIRA and assign to me","username":"greg.haskins","ts":"2017-04-24T12:36:04.441Z"}
{"msg":"looks like its /usr/bin/true on OSX","username":"greg.haskins","ts":"2017-04-24T12:36:46.383Z"}
{"msg":"for the time being, you can edit it to that locally to unblock you","username":"greg.haskins","ts":"2017-04-24T12:37:11.391Z"}
{"msg":"hi @greg.haskins - is that you rebasing all the CRs in the pipeline?","username":"cbf","ts":"2017-04-24T13:43:54.818Z"}
{"msg":"yeah, or a select number","username":"greg.haskins","ts":"2017-04-24T13:44:08.863Z"}
{"msg":"did I mess something up?","username":"greg.haskins","ts":"2017-04-24T13:44:17.770Z"}
{"msg":"basically any that were in a V+1 and not Merge Conflict, I rebased to ensure they were built against CR 7963","username":"greg.haskins","ts":"2017-04-24T13:45:05.551Z"}
{"msg":"(otherwise we had the risk that we wouldnt see their conflict until after merge, because of how gerrit works","username":"greg.haskins","ts":"2017-04-24T13:45:25.500Z"}
{"msg":"no, did your patch get merged then?","username":"cbf","ts":"2017-04-24T13:45:27.520Z"}
{"msg":"yeah, it looks like someone did over night","username":"greg.haskins","ts":"2017-04-24T13:45:41.436Z"}
{"msg":"let me look","username":"greg.haskins","ts":"2017-04-24T13:45:44.645Z"}
{"msg":"it was @JonathanLevi and @muralisr ","username":"greg.haskins","ts":"2017-04-24T13:46:11.765Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/7963/","username":"greg.haskins","ts":"2017-04-24T13:46:13.397Z"}
{"msg":"I had rebased before going to bed","username":"greg.haskins","ts":"2017-04-24T13:46:23.789Z"}
{"msg":"ok cool","username":"cbf","ts":"2017-04-24T13:48:44.975Z"}
{"msg":"thanks for the rebasing then","username":"cbf","ts":"2017-04-24T13:48:50.537Z"}
{"msg":"I just broke out the branching model proposal into its own document: https://goo.gl/H3M8XN","username":"dhuseby","ts":"2017-04-24T17:45:08.518Z"}
{"msg":"it now has pictures too : )","username":"dhuseby","ts":"2017-04-24T17:45:13.311Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=4bLrJPdK4RX5LLJZ9) @greg.haskins Sure thanks!","username":"jojocheung","ts":"2017-04-25T01:25:37.901Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4bLrJPdK4RX5LLJZ9","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4bLrJPdK4RX5LLJZ9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"\nHello fellow maintainers,\n\nJust a quick heads-up, as some of us are working in different time-zones.\n\nSo Chris Ferris and I, Jonathan, had an open session at the DC Hackfest at 3pm today (https://docs.google.com/document/d/1rz1HsUwqIesSgj1fvKWTaNHuYKl7320iGpAX2l2NqBA)  regarding *Hyperledger Fabric 1.0 Release Status, Plan, Upcoming Schedule*, which was mostly around how do we go from here: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104 to a 1.0 Release. I bet you have all seen Sharon's (@weeds) nots on the #fabric channel.\n\nIn addition to all of the things said/discussed, one of topics/suggestion that came up was *how shall we prioritize, deal with show stoppers, coordinate better, etc.* - which naturally lead to a discussion around having a designated *Release Manager*.\n\nThere are several ways to go about it, but two initial points:\n- I (personally suggested), that we should probably have 2 such Release Managers - or at least more than one.\n- Another suggestion/discussion was that we actually have a rotation, so that several maintainers can share the privilege along with the burden/responsibility that comes with it vs. having the Release Manager(s) selected from now until the 1.0 release.\n\nEither way, the maintainers should have a saying about this, and especially given the significance/importance of the 1.0 release - we should probably officially vote over it.\n\nI’m going to post this on the #fabric channel tomorrow (Tuesday), which is where we left it (https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk) - however, before doing so, I wanted to initially run it here, and quickly see whether there is any strong objection anyone is vehemently opposed to the *Release Manager* idea - or whether there is more input/feedback, before I put together the first (short) draft proposal for the vote.\n\nGood night (/morning), J","username":"JonathanLevi","ts":"2017-04-25T04:02:56.674Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","url":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"\nHello fellow maintainers,\nJust a quick heads-up, as some of us are working in different time-zones.","username":"JonathanLevi","ts":"2017-04-25T04:03:36.598Z"}
{"msg":"So Chris Ferris and I, Jonathan, had an open session at the DC Hackfest at 3pm today (https://docs.google.com/document/d/1rz1HsUwqIesSgj1fvKWTaNHuYKl7320iGpAX2l2NqBA)  regarding *Hyperledger Fabric 1.0 Release Status, Plan, Upcoming Schedule*, which was mostly around how do we go from here: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104 to a 1.0 Release. I bet you have all seen Sharon's (@weeds) nots on the #fabric channel.","username":"JonathanLevi","ts":"2017-04-25T04:03:43.672Z"}
{"msg":"So Chris Ferris and I, Jonathan, had an open session at the DC Hackfest at 3pm today (https://docs.google.com/document/d/1rz1HsUwqIesSgj1fvKWTaNHuYKl7320iGpAX2l2NqBA)  regarding *Hyperledger Fabric 1.0 Release Status, Plan, Upcoming Schedule*, which was mostly around how do we go from here: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104 to a 1.0 Release. I bet you have all seen Sharon's (@weeds) notes on the #fabric channel.","username":"JonathanLevi","ts":"2017-04-25T04:03:43.672Z"}
{"msg":"In addition to all of the things said/discussed, one of topics/suggestion that came up was *how shall we prioritize, deal with show stoppers, coordinate better, etc.* - which naturally lead to a discussion around having a designated *Release Manager*.","username":"JonathanLevi","ts":"2017-04-25T04:03:53.701Z"}
{"msg":"There are several ways to go about it, but two initial points:\n- I (personally suggested), that we should probably have 2 such Release Managers - or at least more than one.\n- Another suggestion/discussion was that we actually have a rotation, so that several maintainers can share the privilege along with the burden/responsibility that comes with it vs. having the Release Manager(s) selected from now until the 1.0 release.","username":"JonathanLevi","ts":"2017-04-25T04:04:01.511Z"}
{"msg":"There are several ways to go about it, but two initial points:\n- I (personally) suggested, that we should probably have 2 such Release Managers - or at least more than one.\n- Another suggestion/discussion was that we actually have a rotation, so that several maintainers can share the privilege along with the burden/responsibility that comes with it vs. having the Release Manager(s) selected from now until the 1.0 release.","username":"JonathanLevi","ts":"2017-04-25T04:04:01.511Z"}
{"msg":"There are several ways to go about it, but two initial points:\n- I (personally) suggested, that we should probably have 2 such Release Managers - or at least more than one.\n- Another suggestion/point was that we actually have a rotation, so that several maintainers can share the privilege along with the burden/responsibility that comes with it vs. having the Release Manager(s) selected from now until the 1.0 release.","username":"JonathanLevi","ts":"2017-04-25T04:04:01.511Z"}
{"msg":"Either way, the maintainers should have a saying about this, and especially given the significance/importance of the 1.0 release - we should probably officially vote over it.","username":"JonathanLevi","ts":"2017-04-25T04:04:11.684Z"}
{"msg":"Either way, the maintainers should have a saying about this, and especially given the significance/importance of the 1.0 release - we should probably officially vote on it.","username":"JonathanLevi","ts":"2017-04-25T04:04:11.684Z"}
{"msg":"I’m going to post this on the #fabric channel tomorrow (Tuesday), which is where we left it (https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk) - however, before doing so, I wanted to initially run it here, and quickly see whether there is any strong objection anyone is vehemently opposed to the *Release Manager* idea - or whether there is more input/feedback, before I put together the first (short) draft proposal for the vote.","username":"JonathanLevi","ts":"2017-04-25T04:04:19.595Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","url":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"\nGood night (/morning), J","username":"JonathanLevi","ts":"2017-04-25T04:04:26.441Z"}
{"msg":"I’m going to post this on the #fabric channel tomorrow (Tuesday), which is where we left it (https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk) today.","username":"JonathanLevi","ts":"2017-04-25T04:07:44.074Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","url":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"However, before doing so, I wanted to initially run it here, and quickly see whether there is any strong objection anyone is vehemently opposed to the *Release Manager* idea - or whether there is more input/feedback, before I put together the first (short) draft proposal for the vote.","username":"JonathanLevi","ts":"2017-04-25T04:08:06.849Z"}
{"msg":"However, before doing so, I wanted to initially run it here, and quickly see whether there is any strong objection [or if] anyone is vehemently opposed to the *Release Manager* idea - or whether there is more input/feedback, before I put together the first (short) draft proposal for the vote.","username":"JonathanLevi","ts":"2017-04-25T04:08:06.849Z"}
{"msg":"I’m going to post this here and on the  #fabric, #fabric-release channels tomorrow (Tuesday), and support it via email to the project mailing list...  which is exactly where we left it (https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk) today, at the end of the session. FYI.","username":"JonathanLevi","ts":"2017-04-25T04:11:21.861Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","url":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I’m going to post this here and on the  #fabric, #fabric-release channels tomorrow (Tuesday), and support it via email to the project's mailing list...  which is exactly where we left it (https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk) today, at the end of the session. FYI.","username":"JonathanLevi","ts":"2017-04-25T04:11:21.861Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","url":"https://chat.hyperledger.org/channel/fabric?msg=knKg5bBWj5pPD6TLk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ :thumbsup:](https://chat.hyperledger.org/channel/fabric-maintainers?msg=8iFmvjuyp8gbECPvz) @JonathanLevi ","username":"mastersingh24","ts":"2017-04-25T16:08:32.205Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=8iFmvjuyp8gbECPvz","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=8iFmvjuyp8gbECPvz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I've just added two new maintainer nominations for @smithbk and @dave.enyeart ","username":"cbf","ts":"2017-04-25T17:48:17.839Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/8517/","username":"cbf","ts":"2017-04-25T17:48:28.059Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/8519/","username":"cbf","ts":"2017-04-25T17:48:42.744Z"}
{"msg":"congrats to @smithbk and @dave.enyeart on being the latest Fabric maintainers","username":"cbf","ts":"2017-04-26T11:30:29.652Z"}
{"msg":"thanks everyone :-)","username":"smithbk","ts":"2017-04-26T11:31:51.414Z"}
{"msg":"looking forward to it!","username":"dave.enyeart","ts":"2017-04-26T11:54:22.512Z"}
{"msg":"scrum call starting- we will go to fabric-peer-endorser-comitter","username":"weeds","ts":"2017-04-26T13:32:58.527Z"}
{"msg":"@rjones Ry- can we get the permissions for Keith Smith and Dave as maintainers so they can start +2ing?  I think they tried already this morning and it's not quite working yet.  Thanks!  (see above from cbf)","username":"weeds","ts":"2017-04-26T14:36:29.664Z"}
{"msg":"scrum concluded, but again all notes are sitting in fabric-peer-endorser-comitter","username":"weeds","ts":"2017-04-26T14:36:47.260Z"}
{"msg":"@mastersingh24 @binhn I have a question on what to do with https://gerrit.hyperledger.org/r/#/c/8263/ (NodeSDK - update channel), so the configtxgen tool as it stands now seems to be only for developers to get started ( @kostas @jyellick correct me if wrong ) because it:\n- only generates default policies (Readers - any memebers, Writers - any members, Admins - any admins, \"AcceptAllPolicy\")\n- doesn't allow custom policies to be defined\n- doesn't enable a workflow to members to sign over the config_update content and include their signatures inside the ConfigUpdateEnvelop to send for update\n\nwhereas with 8263 (which builds on the create channel support that's already in node SDK), you can:\n- build channel update raw bytes: `client.buildChannelConfigUpdate()`\n- (for each member org to) sign the new channel config: `client.signChannelConfig()`\n- sign and submit the channel update: `client.updateChannel()`","username":"jimthematrix","ts":"2017-04-26T15:34:16.035Z"}
{"msg":"@mastersingh24 @binhn I have a question on what to do with https://gerrit.hyperledger.org/r/#/c/8263/ (NodeSDK - update channel), so the configtxgen tool as it stands now seems to be only for developers to get started ( @kostas @jyellick correct me if wrong ) because it:\n- only generates default policies (Readers - any memebers, Writers - any members, Admins - any admins, \"AcceptAllPolicy\")\n- doesn't allow custom policies to be defined\n- doesn't enable a workflow to members to sign over the config_update content and include their signatures inside the ConfigUpdateEnvelop to send for update\n\nwhereas with 8263 (which builds on the create channel support that's already in node SDK), you can:\n- build channel update raw bytes: `client.buildChannelConfigUpdate()`\n- (for each member org to) sign the new channel config: `client.signChannelConfig()`\n- collect those signatures and integrate them into a ConfigUpdateEnvelop, then sign and submit the channel update: `client.updateChannel()`","username":"jimthematrix","ts":"2017-04-26T15:34:16.035Z"}
{"msg":"will the list of pending CRs from Jason related to this area address the above issues without 8263?","username":"jimthematrix","ts":"2017-04-26T15:38:00.590Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=4QNgaFfSsBTiLbsx6) @weeds done","username":"rjones","ts":"2017-04-26T16:19:39.775Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4QNgaFfSsBTiLbsx6","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4QNgaFfSsBTiLbsx6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf @weeds in the future please add me as a reviewer to the changeset for maintainer nominations so I get email automagically when the merge happens :)","username":"rjones","ts":"2017-04-26T16:20:24.427Z"}
{"msg":"@jimthematrix None of these issues are addressed by the pending changeset stack.","username":"kostas","ts":"2017-04-26T16:26:59.161Z"}
{"msg":"---\n\nFellow maintainers... got stuck in DC last night due to the weather/ground hold in NYC.\n\n\nTo simplify the above discussion regarding the release, I suggest we use this doc to track and list who would like to put his name down as a *Release Manager*, for now, for Fabric 1.0. If we see that nobody comes forward, we will just \"roll a dice, or 3 in our case\" ;-)","username":"JonathanLevi","ts":"2017-04-26T16:38:39.949Z"}
{"msg":"If there are too many, we can have a \"lead\" RM and possibly 2 helpers... just keep in mind that it is a big commitment and responsibility - which is why I still believe we should have a few (or at least more than one).","username":"JonathanLevi","ts":"2017-04-26T16:39:01.261Z"}
{"msg":"https://docs.google.com/a/hacera.com/document/d/1Vvo4GwGe3G2BA14czPVAk2b89OWfbdQG91SYMbjBwyY/edit?usp=sharing","username":"JonathanLevi","ts":"2017-04-26T16:39:16.152Z"}
{"msg":"Please kindly authenticate yourself so that we have a better auditing. Whatever we come up with, I'll work to also put on the wiki.","username":"JonathanLevi","ts":"2017-04-26T16:40:08.444Z"}
{"msg":"Please kindly authenticate yourself so that we have a better auditing trail. Whatever we come up with, I'll work to also put on the wiki.","username":"JonathanLevi","ts":"2017-04-26T16:40:08.444Z"}
{"msg":"Note: please do not worry about the \"ordering\", this is not a first-comes first-served. We are simply collecting some data ;-)","username":"JonathanLevi","ts":"2017-04-26T16:40:46.624Z"}
{"msg":"Note: please do not worry about the \"ordering\", this is not a first-comes first-served. We are simply collecting some data to enable a decision/see where we stand on this. Thanks.","username":"JonathanLevi","ts":"2017-04-26T16:42:45.537Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=mpFdiF9mm4WDb7Zy4) @kostas thanks for confirming that, then I think we'll need to merge 8263 (once it gets past build errors) because we already allow customers to have full control on the channel configuration during creation via the node SDK, but then they will not be able to update it unless 1) configtxgen is updated or 2) 8263 gets merged","username":"jimthematrix","ts":"2017-04-26T16:48:06.279Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=mpFdiF9mm4WDb7Zy4","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=mpFdiF9mm4WDb7Zy4","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@jimthematrix Roger that. /cc @binhn ","username":"kostas","ts":"2017-04-26T16:48:43.365Z"}
{"msg":"@jimthematrix: Has 8263 been tested against this stack https://gerrit.hyperledger.org/r/#/c/7315/?","username":"kostas","ts":"2017-04-26T16:57:56.282Z"}
{"msg":"Has joined the channel.","username":"gabrielpsilva","ts":"2017-04-26T17:30:13.290Z","type":"uj"}
{"msg":"For new maintainers like @smithbk and myself, are there some merge guidelines we should know about? Tips, best practices, etc?  Take for instance /8255.  It has two +2 already.  Is there a reason it is not merged?","username":"dave.enyeart","ts":"2017-04-26T18:16:53.008Z"}
{"msg":"Because it's based on other CRs that were not +2ed","username":"yacovm","ts":"2017-04-26T18:19:27.422Z"}
{"msg":"So gerrit is not smart enough to tell me that?  I have to go look at all of them?","username":"dave.enyeart","ts":"2017-04-26T18:19:45.958Z"}
{"msg":"but I think the whole chain can now be batch-merged","username":"yacovm","ts":"2017-04-26T18:19:47.100Z"}
{"msg":"it does, it's just that now you don't see it","username":"yacovm","ts":"2017-04-26T18:20:02.972Z"}
{"msg":"usually the \"submit along with parents\" is grayed out","username":"yacovm","ts":"2017-04-26T18:20:12.792Z"}
{"msg":"now it's blue (ready)","username":"yacovm","ts":"2017-04-26T18:20:21.800Z"}
{"msg":"ok, so if \"submit along with parents\" is enabled it is free game to merge","username":"dave.enyeart","ts":"2017-04-26T18:20:26.847Z"}
{"msg":"@dave.enyeart 8255 is part of a stack and none of the previous changesets have been merged either FWIW. If the question is, why isn't the first changeset of that stack (also two +2's) merged, it's because we're waiting for 8513 to be merged.","username":"kostas","ts":"2017-04-26T18:20:27.182Z"}
{"msg":"Our intention would have probably been clearer if we had +1'd, instead of +2'd.","username":"kostas","ts":"2017-04-26T18:21:17.147Z"}
{"msg":"I think you have the wrong number kostas","username":"yacovm","ts":"2017-04-26T18:21:23.228Z"}
{"msg":"8513 ?","username":"yacovm","ts":"2017-04-26T18:21:25.139Z"}
{"msg":"Yes.","username":"kostas","ts":"2017-04-26T18:21:48.416Z"}
{"msg":"Per what we discussed on the call today.","username":"kostas","ts":"2017-04-26T18:21:55.529Z"}
{"msg":"`[FAB-3324] - Upgrade Getting Started` ?","username":"yacovm","ts":"2017-04-26T18:21:57.906Z"}
{"msg":"that's 8513","username":"yacovm","ts":"2017-04-26T18:22:03.051Z"}
{"msg":"Yes.","username":"kostas","ts":"2017-04-26T18:22:11.028Z"}
{"msg":"ok.","username":"yacovm","ts":"2017-04-26T18:22:38.358Z"}
{"msg":"you can simply put it on top of them","username":"yacovm","ts":"2017-04-26T18:22:43.974Z"}
{"msg":"and then cascading-merge everything, no?","username":"yacovm","ts":"2017-04-26T18:22:52.515Z"}
{"msg":"the effect is the same, since it's an RST","username":"yacovm","ts":"2017-04-26T18:22:59.552Z"}
{"msg":"there is no code dependency","username":"yacovm","ts":"2017-04-26T18:23:03.767Z"}
{"msg":"so technically /8255 could be merged now, we just made a decision to hold it out for doc?","username":"dave.enyeart","ts":"2017-04-26T18:23:41.116Z"}
{"msg":"I am aware, but if we put it at the bottom of the stack (because of the reasons explained in the call today -- it needs to go in first), we will be triggering CI builds yet again on the 10 or so changesets sitting on top.","username":"kostas","ts":"2017-04-26T18:24:01.595Z"}
{"msg":"@dave.enyeart: Yes.","username":"kostas","ts":"2017-04-26T18:24:30.748Z"}
{"msg":"As I noted in the call, the doc is irrelevant and doesn't cover the changes that will go in anyway, but per @binhn's comment, we need to move a doc that no longer instructs the users to git clone. (Otherwise, they'll have to deal with the consortium concept, etc.)","username":"kostas","ts":"2017-04-26T18:26:00.927Z"}
{"msg":"As I noted in the call, the doc is irrelevant and doesn't cover the changes that will go in anyway, but per @binhn's comment, we need to switch to a doc that no longer instructs the users to git clone. (Otherwise, they'll have to deal with the consortium concept, etc.)","username":"kostas","ts":"2017-04-26T18:26:00.927Z"}
{"msg":"Next stupid question - can we trust the Rebase button? Will it fail if there are conflicts that cant be resolved?  Or is it always recommended to download, rebase, re-push?","username":"dave.enyeart","ts":"2017-04-26T18:31:03.572Z"}
{"msg":"You mean, does the rebase button do an authentic rebase?","username":"yacovm","ts":"2017-04-26T18:31:43.669Z"}
{"msg":"right","username":"dave.enyeart","ts":"2017-04-26T18:31:48.719Z"}
{"msg":"well I think it does because you many times look at the diffs between change sets","username":"yacovm","ts":"2017-04-26T18:32:04.711Z"}
{"msg":"and you can then see that in the diff, the new code from master was \"added\"","username":"yacovm","ts":"2017-04-26T18:32:24.749Z"}
{"msg":"i've always been scared of it since i didnt know how it would handle conflicts","username":"dave.enyeart","ts":"2017-04-26T18:32:26.070Z"}
{"msg":"ah if there will be a conflict","username":"yacovm","ts":"2017-04-26T18:32:39.035Z"}
{"msg":"it will be red with \"merge conflict\" and the rebase wouldn't be possible","username":"yacovm","ts":"2017-04-26T18:32:49.601Z"}
{"msg":"@rjones trusts the Rebase button IIRC, but I don't :)","username":"kostas","ts":"2017-04-26T18:32:57.437Z"}
{"msg":"But it's only a change set, who cares if it falls?","username":"yacovm","ts":"2017-04-26T18:32:59.868Z"}
{"msg":"it's not the master","username":"yacovm","ts":"2017-04-26T18:33:05.795Z"}
{"msg":"on the contrary - if you rebase and the change set crashes CI, that's good because you have found out that the change set cannot be trusted","username":"yacovm","ts":"2017-04-26T18:33:45.927Z"}
{"msg":"i assume the etiquette is to not rebase other's stuff without asking them?  Rebasing on behalf of my squad members would be ok but probably not other squad's CRs?","username":"dave.enyeart","ts":"2017-04-26T18:34:33.013Z"}
{"msg":"^^ I would suggest so.","username":"kostas","ts":"2017-04-26T18:34:55.041Z"}
{"msg":"depends. If the rebase erases a +1 then yes","username":"yacovm","ts":"2017-04-26T18:35:08.554Z"}
{"msg":"otherwise if it has -1 from jenkins","username":"yacovm","ts":"2017-04-26T18:35:13.998Z"}
{"msg":"where is the problem?","username":"yacovm","ts":"2017-04-26T18:35:18.123Z"}
{"msg":"@dave.enyeart @kostas I put a -2 on the base CR, but since it has 2 +2s, the button is enabled.  We are waiting for Nick to finish up the doc @nickgaski https://gerrit.hyperledger.org/r/#/c/8513","username":"binhn","ts":"2017-04-26T18:35:20.372Z"}
{"msg":"Has joined the channel.","username":"nickgaski","ts":"2017-04-26T18:35:20.481Z","type":"uj"}
{"msg":"ok thanks everyone.  let me know if there are more 'lessons learned' from maintainers","username":"dave.enyeart","ts":"2017-04-26T18:35:59.510Z"}
{"msg":"also if the rebase erases a +2 then don't :)","username":"yacovm","ts":"2017-04-26T18:36:00.130Z"}
{"msg":"these are hard to come by","username":"yacovm","ts":"2017-04-26T18:36:07.794Z"}
{"msg":"i've learned that already","username":"dave.enyeart","ts":"2017-04-26T18:36:16.466Z"}
{"msg":"Especially for gossip code :(","username":"yacovm","ts":"2017-04-26T18:36:18.987Z"}
{"msg":"BTW, for now I will focus maintainer duty on ledger area, but feel free to ping me if you think there are others I should look at","username":"dave.enyeart","ts":"2017-04-26T18:37:06.002Z"}
{"msg":"it is pushed","username":"nickgaski","ts":"2017-04-26T18:38:07.582Z"}
{"msg":"regarding the release manager discussion above, https://chat.hyperledger.org/channel/fabric-maintainers?msg=uWLicRfiwRa79WhYk I thought that for v1.0.0 that @JonathanLevi and I were sort of volunteered ;-)","username":"cbf","ts":"2017-04-26T18:38:10.203Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=uWLicRfiwRa79WhYk","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=uWLicRfiwRa79WhYk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I will +2 that one :)","username":"dave.enyeart","ts":"2017-04-26T18:38:34.366Z"}
{"msg":";-)","username":"cbf","ts":"2017-04-26T18:38:48.090Z"}
{"msg":"makes sense to me","username":"yacovm","ts":"2017-04-26T18:40:25.952Z"}
{"msg":"@dave.enyeart: *I considered you a friend...*","username":"JonathanLevi","ts":"2017-04-26T19:17:16.418Z"}
{"msg":"@cbf: Yes, that's also the impression I had - which is why I rushed to share the privilege here ;-)","username":"JonathanLevi","ts":"2017-04-26T19:17:58.635Z"}
{"msg":"@JonathanLevi  I considered you Release Manager material.  Feel free to share some burden if not title. :)","username":"dave.enyeart","ts":"2017-04-26T19:19:27.486Z"}
{"msg":"@dave.enyeart I think that the burden sharing is across all the maintainers but thanks!","username":"cbf","ts":"2017-04-26T19:27:33.999Z"}
{"msg":"we have a ton of work to get through","username":"cbf","ts":"2017-04-26T19:27:46.672Z"}
{"msg":"@binhn https://gerrit.hyperledger.org/r/#/c/8263 verified properly locally, I added \"+2\" and \"+1 verified\", so it's ready to merge","username":"jimthematrix","ts":"2017-04-26T19:28:27.474Z"}
{"msg":"...if we can't wait for the latest build to finish","username":"jimthematrix","ts":"2017-04-26T19:28:48.027Z"}
{"msg":"@jimthematrix greatly appreciate ","username":"binhn","ts":"2017-04-26T19:29:51.692Z"}
{"msg":"Jonathan release manager?  congrats @JonathanLevi  +100","username":"binhn","ts":"2017-04-26T19:31:03.579Z"}
{"msg":"just succeeded in the build (https://jenkins.hyperledger.org/job/fabric-sdk-node-verify-x86_64/904):\n```19:30:57 1..765\n19:30:57 # tests 765\n19:30:57 # pass  765\n19:30:57 \n19:30:57 # ok","username":"jimthematrix","ts":"2017-04-26T19:31:54.429Z"}
{"msg":"jim, you need someone to merge?","username":"cbf","ts":"2017-04-26T19:32:18.727Z"}
{"msg":"@jimthematrix ^^","username":"cbf","ts":"2017-04-26T19:33:01.269Z"}
{"msg":"because it is ready to submit","username":"cbf","ts":"2017-04-26T19:33:09.537Z"}
{"msg":"just wondering why you didn't push the button","username":"cbf","ts":"2017-04-26T19:33:18.421Z"}
{"msg":"note that I overrode the \"+1\" myself","username":"jimthematrix","ts":"2017-04-26T19:33:29.377Z"}
{"msg":"I see that ","username":"cbf","ts":"2017-04-26T19:33:36.021Z"}
{"msg":"the x86 build finished successfully","username":"jimthematrix","ts":"2017-04-26T19:33:36.077Z"}
{"msg":"but s390 hasn't started","username":"jimthematrix","ts":"2017-04-26T19:33:41.373Z"}
{"msg":"@cbf don't merge, i need to merge some other CRs","username":"binhn","ts":"2017-04-26T19:33:45.038Z"}
{"msg":"i don't think we need to hold for that","username":"jimthematrix","ts":"2017-04-26T19:33:48.092Z"}
{"msg":"I won't touch ","username":"cbf","ts":"2017-04-26T19:34:09.891Z"}
{"msg":"@binhn \"that\" means waiting for s390 build","username":"jimthematrix","ts":"2017-04-26T19:34:12.086Z"}
{"msg":"our messages crossed ;-)","username":"jimthematrix","ts":"2017-04-26T19:34:21.487Z"}
{"msg":"but while I may sound like a broken record - please let's stop submitting 1k LOC patches - pretty please","username":"cbf","ts":"2017-04-26T19:35:30.624Z"}
{"msg":"@cbf I have 1 that is a lot but that's just because everything there is unit tests. You guys did want 85% CC https://gerrit.hyperledger.org/r/#/c/8495/","username":"yacovm","ts":"2017-04-26T19:40:19.198Z"}
{"msg":"@cbf we definitely need to get better at it, I let this one slide because it's got 75% test code in it","username":"jimthematrix","ts":"2017-04-26T19:41:45.270Z"}
{"msg":"it does have lots of tests, and that is goodness, but tests can be contributed piecemeal too;-)","username":"cbf","ts":"2017-04-26T19:43:10.741Z"}
{"msg":"agreed, will stress this with the squad again","username":"jimthematrix","ts":"2017-04-26T19:43:55.878Z"}
{"msg":"all: I would like to propose @harrijk be considered as a maintainer for the fabric-baseimage project.....John has been helping me out curating that image for about as long as I can remember: providing patches, reviews, access to hardware, running tests, etc.  He is more than competent, helpful, friendly, and perhaps most importantly, patient since I am sometimes slow getting around to attending to baseimage tasks.  On that front, I could really use his help ;)","username":"greg.haskins","ts":"2017-04-27T01:55:12.851Z"}
{"msg":"im not quite sure what an official proposal would look like here since the current MAINTAINERS.md indicates its currently governed by the broader fabric maintainership","username":"greg.haskins","ts":"2017-04-27T01:55:53.311Z"}
{"msg":"but I wanted to throw it out there","username":"greg.haskins","ts":"2017-04-27T01:55:58.631Z"}
{"msg":"I should also mention, he has been a liason for the P/Z architecture support, and really should have -2 veto power for changes there just as much as I do","username":"greg.haskins","ts":"2017-04-27T01:57:56.379Z"}
{"msg":"BTW: https://gerrit.hyperledger.org/r/#/c/8615/","username":"JonathanLevi","ts":"2017-04-27T04:10:56.241Z"}
{"msg":"Does end to end work for you guys?","username":"yacovm","ts":"2017-04-27T09:39:14.254Z"}
{"msg":"I think the ordering service shuts down upon startup","username":"yacovm","ts":"2017-04-27T09:39:25.844Z"}
{"msg":"due to configuration","username":"yacovm","ts":"2017-04-27T09:39:29.843Z"}
{"msg":"`2017-04-27 09:38:59.197 UTC [orderer/multichain] newLedgerResources -> CRIT 041 Error creating configtx manager and handlers: Error creating group Consortiums: Disallowed channel group: Consortiums\n`","username":"yacovm","ts":"2017-04-27T09:39:44.008Z"}
{"msg":"`2017-04-27 09:38:59.197 UTC [orderer/multichain] newLedgerResources -> CRIT 041 Error creating configtx manager and handlers: Error creating group Consortiums: Disallowed channel group: Consortiums`","username":"yacovm","ts":"2017-04-27T09:39:44.008Z"}
{"msg":"Has joined the channel.","username":"marek.dapps","ts":"2017-04-27T10:18:25.998Z","type":"uj"}
{"msg":"Andbody know why Verifications aren't getting kicked off the last 10 hours?","username":"dave.enyeart","ts":"2017-04-27T11:06:46.546Z"}
{"msg":"I pinged ramesh on #fabric-ci as well","username":"dave.enyeart","ts":"2017-04-27T11:07:09.272Z"}
{"msg":"I pinged ramesh and ry on #fabric-ci as well","username":"dave.enyeart","ts":"2017-04-27T11:07:09.272Z"}
{"msg":"verifications have resumed.","username":"dave.enyeart","ts":"2017-04-27T13:59:15.258Z"}
{"msg":"next question - for gerrit CRs where we have decided to defer to 1.1, I assume we should 'abandon', put the link in Jira, and then recover them when we start working on 1.1?","username":"dave.enyeart","ts":"2017-04-27T14:00:17.285Z"}
{"msg":"congrats @C0rWin on becoming the latest maintainer!","username":"cbf","ts":"2017-04-27T15:17:39.011Z"}
{"msg":":beers: :metal:","username":"C0rWin","ts":"2017-04-27T15:18:59.989Z"}
{"msg":"@C0rWin you've been added to LDAP. You should have your +2 now :)","username":"rjones","ts":"2017-04-27T16:15:42.212Z"}
{"msg":"Going back to @yacovm's question above, can someone confirm whether it works for them? It does here at this tip:","username":"kostas","ts":"2017-04-27T17:03:32.933Z"}
{"msg":"Going back to @yacovm's question above, can someone confirm whether the end-to-end works for them? It does here at this tip:","username":"kostas","ts":"2017-04-27T17:03:32.933Z"}
{"msg":"`it lg | head -n1\n*   ca3a1a2c - (HEAD -> master, origin/master, origin/HEAD) Merge \"Nominate Artem Barger as a Fabric maintainer\" (2 hours ago) <Christopher Ferris>`","username":"kostas","ts":"2017-04-27T17:03:35.393Z"}
{"msg":"```git lg | head -n1\n*   ca3a1a2c - (HEAD -> master, origin/master, origin/HEAD) Merge \"Nominate Artem Barger as a Fabric maintainer\" (2 hours ago) <Christopher Ferris>```","username":"kostas","ts":"2017-04-27T17:03:35.393Z"}
{"msg":"But I had bumped into issues a couple of days ago, and I'm curious to see if Yacov is hitting those as well here. So, if someone can run the E2E on the latest master, let us know.","username":"kostas","ts":"2017-04-27T17:04:36.194Z"}
{"msg":"What are you talking about, the thing i said in consensus?","username":"yacovm","ts":"2017-04-27T17:05:30.823Z"}
{"msg":"The thing you wrote 10 lines above: https://chat.hyperledger.org/channel/fabric-maintainers?msg=F9zwKBa2yYz3JDvAs","username":"kostas","ts":"2017-04-27T17:05:52.869Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=F9zwKBa2yYz3JDvAs","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=F9zwKBa2yYz3JDvAs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Ah ","username":"yacovm","ts":"2017-04-27T17:06:03.175Z"}
{"msg":"(Updated the message as well.)","username":"kostas","ts":"2017-04-27T17:06:09.959Z"}
{"msg":"Has joined the channel.","username":"HubertYoung","ts":"2017-04-27T17:09:11.743Z","type":"uj"}
{"msg":"@kostas ok looks like it works now (or also before?)","username":"yacovm","ts":"2017-04-27T19:48:38.769Z"}
{"msg":"@yacovm I think it must have been working all along, based on my own tests last night on a bunch of intermediate commit levels.","username":"kostas","ts":"2017-04-27T19:49:40.012Z"}
{"msg":"But there is something odd going on with the `sampleconfig.tar.bz` file not updated at all times, can reproduce this deterministically yet.","username":"kostas","ts":"2017-04-27T19:50:11.094Z"}
{"msg":"But there is something odd going on with the `sampleconfig.tar.bz2` file not updated at all times, can reproduce this deterministically yet.","username":"kostas","ts":"2017-04-27T19:50:11.094Z"}
{"msg":"But there is something odd going on with the `sampleconfig.tar.bz2` file not updated at all times, can't reproduce this deterministically yet.","username":"kostas","ts":"2017-04-27T19:50:11.094Z"}
{"msg":"So if you bump into more issues, let me know.","username":"kostas","ts":"2017-04-27T19:50:22.392Z"}
{"msg":"Can anyone help me figure out the right regular expression that will alert me whenever a changeset is added that touches anything on the `fabric/orderer` path?","username":"kostas","ts":"2017-04-27T19:50:22.392Z"}
{"msg":"hello dear maintainers :-)","username":"lehors","ts":"2017-04-27T21:45:01.991Z"}
{"msg":"Hello dear Arnaud :-)","username":"JonathanLevi","ts":"2017-04-27T21:45:44.732Z"}
{"msg":"are you guys aware that our doc claims that you will review submitted bugs within 24h??","username":"lehors","ts":"2017-04-27T21:45:57.672Z"}
{"msg":"http://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#reporting-bugs","username":"lehors","ts":"2017-04-27T21:46:02.510Z"}
{"msg":"\"One of the project’s maintainers should respond to your issue within 24 hours. If not, please bump the issue with a comment and request that it be reviewed.\"","username":"lehors","ts":"2017-04-27T21:46:31.081Z"}
{"msg":"isn't that setting the bar a bit high? :)","username":"lehors","ts":"2017-04-27T21:46:41.767Z"}
{"msg":"Yes, it is high. But to be fair, some of us are/were trying to prioritize tickets/items from \"newcommers\".","username":"JonathanLevi","ts":"2017-04-27T21:52:33.690Z"}
{"msg":"It is achievable while a bit high, though. Would you rather not have the 24 indication?","username":"JonathanLevi","ts":"2017-04-27T21:53:53.784Z"}
{"msg":"It is achievable while a bit high, though. Would you rather not have the 24 hours indication?","username":"JonathanLevi","ts":"2017-04-27T21:53:53.784Z"}
{"msg":"I mean, 14 days is a bit on the long side, I would have thought ;-)","username":"JonathanLevi","ts":"2017-04-27T21:55:16.266Z"}
{"msg":":)","username":"lehors","ts":"2017-04-27T21:58:48.902Z"}
{"msg":"it is your ass that's on the line so if you guys are fine with it it's all right with me :)","username":"lehors","ts":"2017-04-27T21:59:21.063Z"}
{"msg":"I can rephrase it to something that's a bit more PC...","username":"JonathanLevi","ts":"2017-04-27T22:01:17.997Z"}
{"msg":"be my guest ;-)","username":"lehors","ts":"2017-04-27T22:02:08.292Z"}
{"msg":"\"We strive to respond to ... within ..., however, during ... we may experience ... \"...","username":"JonathanLevi","ts":"2017-04-27T22:02:54.867Z"}
{"msg":"oh, I thought you meant my statement LOL","username":"lehors","ts":"2017-04-27T22:03:11.001Z"}
{"msg":"Or something along these lines. Good point ","username":"JonathanLevi","ts":"2017-04-27T22:03:19.048Z"}
{"msg":"yeah, that would probably set a more reasonable expectation","username":"lehors","ts":"2017-04-27T22:03:38.279Z"}
{"msg":"I thought you said my statement wasn't PC, and I was going to say that with Gari in the project that's not something I fear ;-)","username":"lehors","ts":"2017-04-27T22:04:55.996Z"}
{"msg":"No, I have given up on trying to paint your statements in a PC or even remotely compliant form of speech - especially not close to incidents relating to vagrant on Windows!","username":"JonathanLevi","ts":"2017-04-27T22:06:26.744Z"}
{"msg":"I am afraid ;-)","username":"JonathanLevi","ts":"2017-04-27T22:06:32.981Z"}
{"msg":"lol","username":"lehors","ts":"2017-04-27T22:06:50.145Z"}
{"msg":"We just take the raw form/message, and update our docs accordingly ;-)","username":"JonathanLevi","ts":"2017-04-27T22:07:04.924Z"}
{"msg":"Ha ha.","username":"JonathanLevi","ts":"2017-04-27T22:07:11.830Z"}
{"msg":"SGTM! ;-)","username":"lehors","ts":"2017-04-27T22:07:31.798Z"}
{"msg":"all right, bedtime for me","username":"lehors","ts":"2017-04-27T22:08:00.543Z"}
{"msg":"take care","username":"lehors","ts":"2017-04-27T22:08:02.520Z"}
{"msg":"GN","username":"JonathanLevi","ts":"2017-04-27T22:08:11.966Z"}
{"msg":"Has joined the channel.","username":"mskim","ts":"2017-04-28T07:28:02.076Z","type":"uj"}
{"msg":"[You are on my list now @lehors  ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=cM2XB47jfYZsEMksd) @lehors ","username":"mastersingh24","ts":"2017-04-28T11:57:52.449Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=cM2XB47jfYZsEMksd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=cM2XB47jfYZsEMksd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[:zzz: ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=zwdoqvgvtc6N2SzeX) @lehors ","username":"mastersingh24","ts":"2017-04-28T11:58:19.572Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=zwdoqvgvtc6N2SzeX","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=zwdoqvgvtc6N2SzeX","remote":true,"fileId":null,"fileName":null}]}
{"msg":":-)","username":"lehors","ts":"2017-04-28T11:59:50.416Z"}
{"msg":"@jimthematrix  and I were chatting. We currently have many docker-compose.yaml files in many directories (fabric, fabric-ca, fabric-sdk-*).  This can cause confusion as there are point in time considerations, configuration considerations, and env var consideratoins, etc.  Should we establish some type of naming convention to communicate which docker-compose is being used?  For example, docker-compose-V1-node.yaml, or docker-compose-V1-fabric-e2e_cli.yaml.   ","username":"bmos299","ts":"2017-04-28T14:02:48.114Z"}
{"msg":"But, you can derive the context from the directory they reside in, and from their name, no?","username":"yacovm","ts":"2017-04-28T14:04:35.169Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ABkgFBRgpFwYRNzfb) @yacovm yes, but sometimes we don't know this information and if the name is self-explanatory, it eliminates the need to ask questions for SRE's moving forward, especially if an docker-compose in a given directory has changed and someone is using an older version of the docker-compose itself.","username":"bmos299","ts":"2017-04-28T15:41:54.927Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ABkgFBRgpFwYRNzfb","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ABkgFBRgpFwYRNzfb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Looking at this screen here:","username":"kostas","ts":"2017-04-28T16:18:12.453Z"}
{"msg":"@here I have need to release a hotfix for node SDK alpha","username":"jimthematrix","ts":"2017-04-28T16:18:40.586Z"}
{"msg":"I think the only way to make it work is first create a branch based on the alpha tag","username":"jimthematrix","ts":"2017-04-28T16:18:57.796Z"}
{"msg":"I'm going to call it `v1.0.0-alpha.hotfix`","username":"jimthematrix","ts":"2017-04-28T16:19:07.983Z"}
{"msg":"@jimthematrix thats correct","username":"greg.haskins","ts":"2017-04-28T16:19:14.002Z"}
{"msg":"does that sound right to everybody?","username":"jimthematrix","ts":"2017-04-28T16:19:17.341Z"}
{"msg":"well, hold on","username":"greg.haskins","ts":"2017-04-28T16:19:17.970Z"}
{"msg":"the branch itself doesnt need to be version specific per se, and I dont advise this","username":"greg.haskins","ts":"2017-04-28T16:19:34.501Z"}
{"msg":"i'm listening ;-)","username":"jimthematrix","ts":"2017-04-28T16:19:35.979Z"}
{"msg":"so we can re-use it right?","username":"jimthematrix","ts":"2017-04-28T16:19:58.138Z"}
{"msg":"make it \"stream oriented\"....iow, name the branch after the stream that it represents","username":"greg.haskins","ts":"2017-04-28T16:20:05.039Z"}
{"msg":"in this case, it sounds like its a general alpha stream","username":"greg.haskins","ts":"2017-04-28T16:20:16.808Z"}
{"msg":"what would be the \"stream\"?","username":"jimthematrix","ts":"2017-04-28T16:20:55.169Z"}
{"msg":"since we already named the alpha \"1.0.0-alpha\", a stream of subsequent releases might be \"1.0.0-alpha.x\"","username":"greg.haskins","ts":"2017-04-28T16:21:02.412Z"}
{"msg":"ah","username":"jimthematrix","ts":"2017-04-28T16:21:13.814Z"}
{"msg":"was going to call it `v1.0.0-alpha.1`","username":"jimthematrix","ts":"2017-04-28T16:21:24.793Z"}
{"msg":"and we can tag the new one 1.0.0-alpha.1 or .2 or something","username":"greg.haskins","ts":"2017-04-28T16:21:28.144Z"}
{"msg":"ok so we are thinking the same then","username":"jimthematrix","ts":"2017-04-28T16:21:44.363Z"}
{"msg":"suggest branch -> \".x\" and release \".1\" or \".2\"","username":"greg.haskins","ts":"2017-04-28T16:21:54.216Z"}
{"msg":"y","username":"greg.haskins","ts":"2017-04-28T16:21:59.679Z"}
{"msg":"so `v1.0.0-alpha.1` it is then","username":"jimthematrix","ts":"2017-04-28T16:22:08.494Z"}
{"msg":"for the tag, right?","username":"greg.haskins","ts":"2017-04-28T16:22:18.831Z"}
{"msg":"for the branch, i would literally name it with \".x\"","username":"greg.haskins","ts":"2017-04-28T16:22:36.200Z"}
{"msg":"oh you mean literally the branch is `v1.0.0-alpha.x`","username":"jimthematrix","ts":"2017-04-28T16:22:40.329Z"}
{"msg":"because you dont know if you will need .2","username":"greg.haskins","ts":"2017-04-28T16:22:43.478Z"}
{"msg":"yes","username":"greg.haskins","ts":"2017-04-28T16:22:45.416Z"}
{"msg":"got it, that makes sense, so we can re-use it for all hotfixes on alpha","username":"jimthematrix","ts":"2017-04-28T16:23:13.589Z"}
{"msg":"thats just my opinion, but its how ive always done it","username":"greg.haskins","ts":"2017-04-28T16:23:19.749Z"}
{"msg":"will do","username":"jimthematrix","ts":"2017-04-28T16:23:26.428Z"}
{"msg":"right...the notion being we cant really predict if we will need .2, .3, etc","username":"greg.haskins","ts":"2017-04-28T16:23:35.983Z"}
{"msg":"and why muddy up the namespace","username":"greg.haskins","ts":"2017-04-28T16:23:42.171Z"}
{"msg":"you sound very authoritative so... ;-)","username":"jimthematrix","ts":"2017-04-28T16:23:43.534Z"}
{"msg":"if my kids only agreed ;)","username":"greg.haskins","ts":"2017-04-28T16:24:19.429Z"}
{"msg":"@lehors @JonathanLevi it says *should* and that's how it SHOULD be... and it also says: \"if not, bump the issue\" - we could change that to suggest that they post to a chat channel if it is important","username":"cbf","ts":"2017-04-28T16:41:44.449Z"}
{"msg":"I don't see it as a bar - I see it as an aspirational goal that we SHOULD be striving towards","username":"cbf","ts":"2017-04-28T16:42:03.973Z"}
{"msg":"I know it says should, but it sets an expectation, especially with the following note on bumping, that seems unrealistic to me. If you think you can live up to it that's fine with me though.","username":"lehors","ts":"2017-04-28T16:46:56.120Z"}
{"msg":"I don't think so","username":"cbf","ts":"2017-04-28T17:04:09.910Z"}
{"msg":"Has anyone figured out the right regular expression so that we get notified when a changeset that touches component \"foo\" (say `fabric/orderer/*`) is uploaded?","username":"kostas","ts":"2017-04-28T17:20:05.758Z"}
{"msg":"","username":"kostas","ts":"2017-04-28T17:20:14.235Z","attachments":[{"title":"File Uploaded: Screen Shot 2017-04-28 at 12.16.51.png","title_link":"/file-upload/Sif7mB5GE27E8bS5X/Screen Shot 2017-04-28 at 12.16.51.png","image_url":"/file-upload/Sif7mB5GE27E8bS5X/Screen Shot 2017-04-28 at 12.16.51.png","image_type":"image/png","image_size":51498,"url":"/file-upload/Sif7mB5GE27E8bS5X/Screen Shot 2017-04-28 at 12.16.51.png","remote":false,"fileId":"Sif7mB5GE27E8bS5X"}]}
{"msg":"I'm looking at this screen in Gerrit ^^","username":"kostas","ts":"2017-04-28T17:20:23.810Z"}
{"msg":"Has joined the channel.","username":"yahtoo","ts":"2017-04-30T07:41:03.687Z","type":"uj"}
{"msg":"@kostas - looks like `project:fabric file:\"^protos/.*\"` works in the normal search bar so you might want to try `file:\"^protos/.*\"` for Only If","username":"mastersingh24","ts":"2017-04-30T20:15:06.738Z"}
{"msg":"Has joined the channel.","username":"sideshowbarker","ts":"2017-05-01T08:25:45.376Z","type":"uj"}
{"msg":"Howdy. At https://github.com/hyperledger/fabric/blob/master/docs/source/getting_startedv2.rst#curl-the-artifacts-and-binaries the docs say to do this:","username":"sideshowbarker","ts":"2017-05-01T08:27:34.864Z"}
{"msg":"`curl -L https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-verify-x86_64_1/5/release.tar.gz -o release.tar.gz 2> /dev/null;  tar -xvf release.tar.gz`","username":"sideshowbarker","ts":"2017-05-01T08:27:53.575Z"}
{"msg":"but `https://logs.hyperledger.org/sandbox/vex-yul-hyp-jenkins-2/fabric-verify-x86_64_1/5/release.tar.gz` is 404","username":"sideshowbarker","ts":"2017-05-01T08:28:10.698Z"}
{"msg":"in fact the whole `https://logs.hyperledger.org/sandbox/` directory seems to be empty","username":"sideshowbarker","ts":"2017-05-01T08:28:42.215Z"}
{"msg":"and seems to be the same in the upstream sources https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=blob;f=docs/source/getting_startedv2.rst;h=2e6dcb7d195fd22c813cc1fcf32b0d573f5e52a4;hb=refs/heads/master#l44","username":"sideshowbarker","ts":"2017-05-01T08:30:55.737Z"}
{"msg":"@sideshowbarker could please write this message in the #fabric  channel and not here? This isn't the right place for this ;)","username":"yacovm","ts":"2017-05-01T08:37:31.225Z"}
{"msg":"@sideshowbarker could please write this message in the #fabric or #fabric-quality   channel and not here? This isn't the right place for this ;)","username":"yacovm","ts":"2017-05-01T08:37:31.225Z"}
{"msg":"@yacovm OK yeah I posted also in #fabric already but the reason I posted here was I subsequently read https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#reporting-bugs","username":"sideshowbarker","ts":"2017-05-01T08:43:34.049Z"}
{"msg":"which explicitly mentions posting to this channel for bug reports","username":"sideshowbarker","ts":"2017-05-01T08:44:19.374Z"}
{"msg":"@JonathanLevi :arrow_double_up: ","username":"yacovm","ts":"2017-05-01T08:44:23.310Z"}
{"msg":"understood, @sideshowbarker ","username":"yacovm","ts":"2017-05-01T08:44:38.317Z"}
{"msg":"cheers & thanks, will follow up on #fabric ","username":"sideshowbarker","ts":"2017-05-01T08:45:16.767Z"}
{"msg":"@sideshowbarker, @yacovm: great timing. I'll also update that page accordingly.","username":"JonathanLevi","ts":"2017-05-01T08:45:36.216Z"}
{"msg":"(thanks & good night)","username":"JonathanLevi","ts":"2017-05-01T08:45:51.288Z"}
{"msg":"I have two topics: the new consortium stuff, and ABI breakage","username":"greg.haskins","ts":"2017-05-01T12:31:44.412Z"}
{"msg":"consortium first: is there a design overview somewhere? ","username":"greg.haskins","ts":"2017-05-01T12:32:38.796Z"}
{"msg":"I am finding the configtx.yaml relationships confusing","username":"greg.haskins","ts":"2017-05-01T12:32:57.382Z"}
{"msg":"ABI breakage: we need a plan for 1.0 to ensure we have a cohesive and stable offering for at least some period of time (e.g. 1.x will not break compatibility) across all relative facilities (SDKs, shims, grpcs/protos, databases, etc)","username":"greg.haskins","ts":"2017-05-01T12:35:18.797Z"}
{"msg":"Trying to do anything on top of 1.0 right now is, to be frank...horrible.  I'm constantly trying to bring my applications up to date with the latest ABI to only find the target has moved again.....I understand why, we are trying to get 1.0 \"right\" and this is fine, and ABI breakage is to be expected","username":"greg.haskins","ts":"2017-05-01T12:36:57.148Z"}
{"msg":"but we also need to make sure this _stops_ after 1.0 ships, at least for some clearly communicated period of time","username":"greg.haskins","ts":"2017-05-01T12:37:22.668Z"}
{"msg":"if I am frustrated, think about how new users feel","username":"greg.haskins","ts":"2017-05-01T12:38:07.148Z"}
{"msg":"so, I wanted to brainstorm on what kind of policies and governance we will put in place to help with this","username":"greg.haskins","ts":"2017-05-01T12:43:45.734Z"}
{"msg":"@greg.haskins  - it was unfortunate that the merging of the final orderer config features broke things - but that should be it as far as I'm concerned  (other than issues which come up trying to use it)","username":"mastersingh24","ts":"2017-05-01T12:58:45.500Z"}
{"msg":"I just want to coordinate a few things surrounding this","username":"greg.haskins","ts":"2017-05-01T12:59:42.300Z"}
{"msg":"1) that we are all on the same page as far as the what/when of breaking changes","username":"greg.haskins","ts":"2017-05-01T13:00:12.886Z"}
{"msg":"2) that we decide how we can govern it going forward (just careful code reviews, CI integration, etc)","username":"greg.haskins","ts":"2017-05-01T13:00:42.346Z"}
{"msg":"@mastersingh24 do you understand how the new consortium stuff is supposed to work, though?","username":"greg.haskins","ts":"2017-05-01T13:02:37.168Z"}
{"msg":"im a little confused about the orderer/genesis vs the peer/channel relationship","username":"greg.haskins","ts":"2017-05-01T13:03:13.664Z"}
{"msg":"FYI peer scrum will start at 9:30 EST (1-888-426-6840 / 33682113)- I will post notes as usual in the fabric-peer-endorser-comitter channel","username":"weeds","ts":"2017-05-01T13:05:54.207Z"}
{"msg":"can anyone at least tell me what this error means: ","username":"greg.haskins","ts":"2017-05-01T13:45:46.784Z"}
{"msg":"```2017-05-01 13:31:13.931 UTC [orderer/common/broadcast] Handle -> WARN 1ac Rejecting CONFIG_UPDATE because: Error authorizing update: Error validating DeltaSet: Policy for [Groups] /Channel/Application not satisfied: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining```","username":"greg.haskins","ts":"2017-05-01T13:45:52.528Z"}
{"msg":"what is a sub-policy?  and how do I define one?","username":"greg.haskins","ts":"2017-05-01T13:46:13.936Z"}
{"msg":"@greg.haskins: I can help, but the explanation may be a long one. I'll take this to #fabric. There is a document explaining the consortiums concept BTW, in `source/configtx.rst`.","username":"kostas","ts":"2017-05-01T15:08:07.464Z"}
{"msg":"@kostas ty, I saw that, but it wasnt easy to follow particularly w.r.t. driving configuration with configtx.yaml","username":"greg.haskins","ts":"2017-05-01T15:08:52.772Z"}
{"msg":"Oh I'm with you on that one.","username":"kostas","ts":"2017-05-01T15:09:15.188Z"}
{"msg":"@mastersingh24 pointed me down a path which I am exploring right now","username":"greg.haskins","ts":"2017-05-01T15:09:29.828Z"}
{"msg":"I think the issue is one of permissions...(e.g. my channel-create is getting rejected for lack of permission","username":"greg.haskins","ts":"2017-05-01T15:10:00.641Z"}
{"msg":"investigating, it looks like my genesis block is messed up","username":"greg.haskins","ts":"2017-05-01T15:10:12.215Z"}
{"msg":"not sure why yet","username":"greg.haskins","ts":"2017-05-01T15:10:15.594Z"}
{"msg":"it appears that both my OrdererMSP and PeerMSP have the same CA ","username":"greg.haskins","ts":"2017-05-01T15:10:41.546Z"}
{"msg":"@kostas im guessing that this is related to the fact that the genesis block is formed with only access to the OrdererMSP","username":"greg.haskins","ts":"2017-05-01T15:15:54.487Z"}
{"msg":"how should I be generating this so that the proper MSP are accessible and included?","username":"greg.haskins","ts":"2017-05-01T15:16:10.624Z"}
{"msg":"(and I just noticed you wanted to switch to #fabric ","username":"greg.haskins","ts":"2017-05-01T15:17:07.927Z"}
{"msg":"we can continue there","username":"greg.haskins","ts":"2017-05-01T15:17:11.825Z"}
{"msg":"(No worries, typing the response here.)","username":"kostas","ts":"2017-05-01T15:17:19.868Z"}
{"msg":"Has joined the channel.","username":"bmkor","ts":"2017-05-01T16:35:13.674Z","type":"uj"}
{"msg":"We had a good discussion on some tests we need to add to CI- we posted a lot of good information in fabric- quality","username":"weeds","ts":"2017-05-01T20:41:08.343Z"}
{"msg":"these are system test harness code and some system type testing we can run for version 1.0 for Hypyerledger-Fabric","username":"weeds","ts":"2017-05-01T20:41:51.299Z"}
{"msg":"FYI- The unit-test-coverage enhancement related CRs of the crypto squad are the following ones (elli sent to me in a note- so just adding here as fyi)\n8709 - [FAB-3485] improve test coverage for msp\n8707 - [FAB-3441] bccsp/sw AES test coverage\n8629 - [FAB-3441] bccsp/signer test coverage\n8701 - [FAB-3441] bccsp/sw test coverage\n8703 - [FAB-3485] improve test coverage for msp/mgmt","username":"weeds","ts":"2017-05-01T22:57:18.616Z"}
{"msg":"Has joined the channel.","username":"MartinC","ts":"2017-05-02T14:26:22.235Z","type":"uj"}
{"msg":"Hi folks, last week I posted to the mailing list and to #fabric-sdk about some work a colleague and I are doing on a REST API for Fabric for FAB-156. I was asked to post here as well to ensure you all were aware of it and have the opportunity to influence the design.","username":"MartinC","ts":"2017-05-02T14:30:23.875Z"}
{"msg":"The design can be found here https://docs.google.com/document/d/1Kafw06IwtBbKFrUm8Hnwk8XYW7SyuqVbWad5VrPmvb8/edit?usp=sharing\nWe are looking for feedback from the community on our design so far, to ensure that it meets your requirements. At this point validation of the use cases we have identified and feedback on the style of REST endpoints we are proposing would help us to refine the design. Please make your comments in the Google doc or ask us questions on rocketchat. Thanks","username":"MartinC","ts":"2017-05-02T14:30:57.592Z"}
{"msg":"@MartinC: Not sure who asked you to post this in this channel (which is for \"internal\" discussions amongst the maintainers...etc.), but thanks. ","username":"JonathanLevi","ts":"2017-05-02T17:00:46.618Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=smSuMJYxXpmfHwaEq) @greg.haskins: I am with you, 100%.","username":"JonathanLevi","ts":"2017-05-02T17:01:42.204Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=smSuMJYxXpmfHwaEq","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=smSuMJYxXpmfHwaEq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I really think we need to `stop` (yes, `stop`) and stabilize.","username":"JonathanLevi","ts":"2017-05-02T17:03:01.921Z"}
{"msg":"We can probably \"aim low\" and simply work to get a good getting started guide (which Nick has and is putting together) and making sure that any new user can follow.","username":"JonathanLevi","ts":"2017-05-02T17:04:07.444Z"}
{"msg":"We can probably \"aim low\" and simply work to get a good getting started guide (which Nick has and is putting together) and work to make sure that any new user can follow.","username":"JonathanLevi","ts":"2017-05-02T17:04:07.444Z"}
{"msg":"We really need to fix the build, the e2e, and probably have a few days of just \"fixing\" what's not working for new users, and merge things that stabilize the build - e.g,., unit- and integration-tests.","username":"JonathanLevi","ts":"2017-05-02T17:05:15.611Z"}
{"msg":"@JonathanLevi yep","username":"greg.haskins","ts":"2017-05-02T17:10:51.698Z"}
{"msg":"We really have too many moving parts. It is a little bit \"out of control\".","username":"JonathanLevi","ts":"2017-05-02T17:11:15.253Z"}
{"msg":"I also think we need to stop using \"rogue URLs\" in the guides","username":"greg.haskins","ts":"2017-05-02T17:11:24.216Z"}
{"msg":"I understand why they were used, and I am not pointing fingers","username":"greg.haskins","ts":"2017-05-02T17:11:43.878Z"}
{"msg":"but things in the getting started guide need to have just as much release-engineering scrutiny as any other release or we risk creating a fragile offering, at least from the perspective of someone trying to follow it","username":"greg.haskins","ts":"2017-05-02T17:12:37.630Z"}
{"msg":"Yes, let alone that it is a terrible \"first impression\"","username":"JonathanLevi","ts":"2017-05-02T17:13:24.828Z"}
{"msg":"this means minimally stable URLs, semver (or semver-like) versioning, and, ideally, release approval by whatever governance is appropriate","username":"greg.haskins","ts":"2017-05-02T17:13:51.230Z"}
{"msg":"... it also creates so much work, where users/others report bugs/issues/ask for support - where the least we can do is making sure that the basic worked (& works!)","username":"JonathanLevi","ts":"2017-05-02T17:14:12.563Z"}
{"msg":"in my mind, the pain point is really \"we dont want users to need to build the code\", but until we have a release, thats really the only option","username":"greg.haskins","ts":"2017-05-02T17:14:59.832Z"}
{"msg":"if we have a release, then we have a release, and make it a first class one with release engineering principles applied, and then use that one","username":"greg.haskins","ts":"2017-05-02T17:15:30.142Z"}
{"msg":"Right, sure.","username":"JonathanLevi","ts":"2017-05-02T17:15:41.984Z"}
{"msg":"But at the moment, when they try to build it, and we have issues with, for example: `FABRIC_CFG_PATH` ...","username":"JonathanLevi","ts":"2017-05-02T17:16:09.782Z"}
{"msg":"... it does not look good, to say the least.","username":"JonathanLevi","ts":"2017-05-02T17:16:22.691Z"}
{"msg":"when you say \"build it\", do you mean buildign from source, or following the getting-started guide ?","username":"greg.haskins","ts":"2017-05-02T17:16:51.368Z"}
{"msg":"(I agree, any snag is a black eye)...","username":"greg.haskins","ts":"2017-05-02T17:17:06.162Z"}
{"msg":"now I just want to understand which issue you are referring to","username":"greg.haskins","ts":"2017-05-02T17:17:17.987Z"}
{"msg":"\"Not pointing fingers\"... but even the basic configuration does not always work.","username":"JonathanLevi","ts":"2017-05-02T17:17:46.526Z"}
{"msg":"(This particular case, came up from the getting started guide)","username":"JonathanLevi","ts":"2017-05-02T17:18:06.270Z"}
{"msg":"But only yesterday, the `master` branch was broken.","username":"JonathanLevi","ts":"2017-05-02T17:18:27.064Z"}
{"msg":"ok...I know I have new team members who were trying to follow the guide and it wasnt working","username":"greg.haskins","ts":"2017-05-02T17:18:38.370Z"}
{"msg":"Currently, the `e2e` tests fail, etc.","username":"JonathanLevi","ts":"2017-05-02T17:18:42.641Z"}
{"msg":"I think we need a few days (or, say a week), just to stabilize the current state.","username":"JonathanLevi","ts":"2017-05-02T17:19:07.428Z"}
{"msg":"yeah, agree","username":"greg.haskins","ts":"2017-05-02T17:19:23.106Z"}
{"msg":"[Sorry I'm not mincing words. We are not in a good \"state\"]","username":"JonathanLevi","ts":"2017-05-02T17:19:30.773Z"}
{"msg":"I see more risk in merging new stuff at this point, and would rather hold off merging new-super-fancy-cool stuff until we can stabilize and get another stable \"tagged\" version.","username":"JonathanLevi","ts":"2017-05-02T17:21:17.849Z"}
{"msg":"@binhn @mastersingh24 @cbf, ... WDYT ?","username":"JonathanLevi","ts":"2017-05-02T17:21:55.610Z"}
{"msg":"(We did mention it last week in DC, that we wanted another tag. Maybe we work to get it even next week, if we stop merging so much, say for a week?)","username":"JonathanLevi","ts":"2017-05-02T17:22:43.128Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=savaPPy2DmxWDk2vL) ","username":"JonathanLevi","ts":"2017-05-02T17:22:58.984Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=savaPPy2DmxWDk2vL","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=savaPPy2DmxWDk2vL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"so what was the issue with FABRIC_CFG_PATH ?","username":"greg.haskins","ts":"2017-05-02T17:29:01.071Z"}
{"msg":"@JonathanLevi: so what was the issue with FABRIC_CFG_PATH ?","username":"greg.haskins","ts":"2017-05-02T17:29:01.071Z"}
{"msg":"I wrote the basic patch that added that, but it went in over a week ago IIRC so I wouldnt have expected a breakage in master yesterday","username":"greg.haskins","ts":"2017-05-02T17:29:33.553Z"}
{"msg":"I think Nick has updated/fixed it here: https://gerrit.hyperledger.org/r/#/c/8591","username":"JonathanLevi","ts":"2017-05-02T17:36:03.871Z"}
{"msg":"Yea, we just need ^^ merged","username":"markparz","ts":"2017-05-02T17:59:05.285Z"}
{"msg":"the URL was changed... we can change locations and such in the future, but let's just get the e2e working again quickly","username":"markparz","ts":"2017-05-02T17:59:51.867Z"}
{"msg":"Agree with all above-- I think it would really help the community.","username":"weeds","ts":"2017-05-02T19:24:46.577Z"}
{"msg":"---\nBTW: As an aside, @rjones has informed me that `[ci skip] is removed and until someone re-implements it, [ci skip] won't be back`","username":"JonathanLevi","ts":"2017-05-02T19:28:15.865Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-05-02T19:28:52.359Z"}
{"msg":"I think that implementing it in the unit test script is pretty easy - just go a `git show` and grep for the pattern.","username":"yacovm","ts":"2017-05-02T19:29:34.262Z"}
{"msg":"the downside is - the environment is still built","username":"yacovm","ts":"2017-05-02T19:30:00.643Z"}
{"msg":"the downside is - the environment is still built.\nBut even back then- jenkins would've spin up a VM anyway, just to be \"self-aborted\"","username":"yacovm","ts":"2017-05-02T19:30:00.643Z"}
{"msg":"+1000 on @JonathanLevi and @greg.haskins dialog","username":"cbf","ts":"2017-05-02T20:21:15.818Z"}
{"msg":"---\nBTW: Do we see any issue with getting this merged https://gerrit.hyperledger.org/r/#/c/8591 (given the follow-ups that Greg has asked for, of course) ? I've `+2`'ed it, but I may have missed something. Thanks.","username":"JonathanLevi","ts":"2017-05-03T01:23:02.297Z"}
{"msg":"---\nAnd... thank you Chris for the above.","username":"JonathanLevi","ts":"2017-05-03T01:23:56.483Z"}
{"msg":"@rameshthoomu @bmoss209 Team- wanted you aware that Ramesh/Barry agreed to have a daily run in the morning EST time and post the results of the build/CI tests every day whether they fail/pass on the fabric-ci channel (typically they had only posted when they passed. When they are failures- they have been opening \"highest\" bugs).  I think this should help everyone  with a bit more clarity.  Meanwhile. @Ratnakar  is working to get us to a single set of compose scripts/docker image that we can utilize in the CI so our results are more consistent when we run all the tests- he's comparing what he's done with what Greg Haskins has done to see if he missed anything.  Once that is done, @rameshtoomu will include in the daily run.","username":"weeds","ts":"2017-05-03T11:23:27.903Z"}
{"msg":"Has joined the channel.","username":"Ratnakar","ts":"2017-05-03T11:23:27.992Z","type":"uj"}
{"msg":"if there is any input on this- please let Ramesh/Barry or Ratnakar know.  Thanks!","username":"weeds","ts":"2017-05-03T11:24:01.808Z"}
{"msg":"@weeds Was this supposed to be posted in the fabric-maintainers channel?","username":"JonathanLevi","ts":"2017-05-03T12:24:01.914Z"}
{"msg":"[ I have posted it in #fabric-quality https://chat.hyperledger.org/channel/fabric-quality?msg=QXD3uorpW8ywEKgGy ]","username":"JonathanLevi","ts":"2017-05-03T12:25:37.654Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-quality?msg=QXD3uorpW8ywEKgGy","url":"https://chat.hyperledger.org/channel/fabric-quality?msg=QXD3uorpW8ywEKgGy","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ I have posted it in #fabric-quality ]","username":"JonathanLevi","ts":"2017-05-03T12:25:53.148Z"}
{"msg":"I should think the maintainers consider whether or not the build breaks when approving CRs. There are reason to break builds and approve a CR, but there are also obviously reasons to wait on approving until after a break will be avoided. Speaking as a consumer of the project, more consistency and clarity in what constitutes latest, and what constitutes latest working (inc. cross project e.g. node-sdk to fabric) is *greatly* needed.","username":"mrkiouak","ts":"2017-05-03T13:13:34.895Z"}
{"msg":"@mrkiouak, first and foremost, I completely agree with you. In fact, gerrit does not allow us to submit/merge CRs where the build is breaking.","username":"JonathanLevi","ts":"2017-05-03T13:16:10.056Z"}
{"msg":"@mrkiouak, first and foremost, `I completely agree with you`. In fact, gerrit does not allow us to submit/merge CRs where the build is breaking.","username":"JonathanLevi","ts":"2017-05-03T13:16:10.056Z"}
{"msg":"@mrkiouak, first and foremost, `I completely agree with you.\n\nIn fact, gerrit does not allow us to submit/merge CRs if the build is broken/tests did not pass.","username":"JonathanLevi","ts":"2017-05-03T13:16:10.056Z"}
{"msg":"@mrkiouak, first and foremost, `I completely agree with you`.\n\nIn fact, gerrit does not allow us to submit/merge CRs if the build is broken/tests did not pass.","username":"JonathanLevi","ts":"2017-05-03T13:16:10.056Z"}
{"msg":"That said, we have a few (known!) issues that we are currently working on. One of them is better coverage. We don't have good coverage.","username":"JonathanLevi","ts":"2017-05-03T13:16:55.342Z"}
{"msg":"That said, we have a few (known!) issues that we are currently working on. One of them is better coverage. We don't have *good test coverage*.","username":"JonathanLevi","ts":"2017-05-03T13:16:55.342Z"}
{"msg":"That said, we have a few (known!) issues that we are currently working on. One of them is better coverage. We don't have *good test coverage*... so, given that, code compiling + tests passing is `a necessary but not sufficient` criteria.","username":"JonathanLevi","ts":"2017-05-03T13:16:55.342Z"}
{"msg":"That said, we have a few (known!) issues that we are currently working on. One of them is better coverage. We don't have *good test coverage*... so, given that, code compiling + tests passing is *a necessary but not sufficient* criteria.","username":"JonathanLevi","ts":"2017-05-03T13:16:55.342Z"}
{"msg":"(Please kindly note that I haven't used *enough*, for a reason. In the past, we had some threshold for test coverage, but that wasn't sufficient, at all)","username":"JonathanLevi","ts":"2017-05-03T13:18:45.244Z"}
{"msg":"(Please note that I haven't used *enough*, for a reason. In the past, we had some threshold for test coverage, but that wasn't sufficient, at all)","username":"JonathanLevi","ts":"2017-05-03T13:18:45.244Z"}
{"msg":"As for the second part of you paragraph, the things we should probably push to improve is much better *communication*, especially when it comes to \"breaking\" changes, such as what we had here with the configuration...","username":"JonathanLevi","ts":"2017-05-03T13:19:54.521Z"}
{"msg":"Along with, a more well-defined policy (that will be well-communicated), but first, we need to have that policy/guidelines, e.g., for merges.","username":"JonathanLevi","ts":"2017-05-03T13:20:54.820Z"}
{"msg":"Along with, a `well-defined policy` (that will be well-communicated), but first, we need to have that policy/guidelines, e.g., for merges [where we highlight when we are working under `feature freeze`, `API freeze`, `merge freeze`,  ... etc.]","username":"JonathanLevi","ts":"2017-05-03T13:20:54.820Z"}
{"msg":"Now as for your final sentence, regarding consistency and clarity regarding what's the \"latest\", there are 2 things \"in the making\":\n","username":"JonathanLevi","ts":"2017-05-03T13:23:41.704Z"}
{"msg":"Now as for your final sentence, regarding consistency and clarity regarding what's the `latest`, there are 2 things \"in the making\":\n","username":"JonathanLevi","ts":"2017-05-03T13:23:41.704Z"}
{"msg":"Now wrt your final sentence, regarding consistency and clarity regarding what's the `latest`, there are 2 things \"in the making\":\n","username":"JonathanLevi","ts":"2017-05-03T13:23:41.704Z"}
{"msg":"1) We are about to change  [subject to a quick vote] our branching strategy... that is, we are going to have an `always-building` `master` branch, and release/tag branches that branch off it.","username":"JonathanLevi","ts":"2017-05-03T13:24:03.391Z"}
{"msg":"2) We are considering another tag next week, that will align / make \"ends meet\", especially WRT \"cross project\"/\"sub project\" versionnining","username":"JonathanLevi","ts":"2017-05-03T13:25:23.470Z"}
{"msg":"2) We are considering another `tagged` release, early next week, that will align / make \"ends meet\", especially WRT \"cross project\"/\"sub project\" versionining","username":"JonathanLevi","ts":"2017-05-03T13:25:23.470Z"}
{"msg":"Pardon my long answer, but I didn't want to simply reply with \"I agree\" ;-)","username":"JonathanLevi","ts":"2017-05-03T13:27:14.706Z"}
{"msg":"Pardon my long answer, but I didn't want to simply reply with `I completely agree with you` ;-)","username":"JonathanLevi","ts":"2017-05-03T13:27:14.706Z"}
{"msg":"I'm going to send out an email to the entire list with the above, as I am under the impressions that there are more people that are in agreement with what you wrote above.","username":"JonathanLevi","ts":"2017-05-03T13:28:10.662Z"}
{"msg":"N.B. Please kindly note, though, to be fair to others, that while `probably not as well communicated as it could have been', that we were aware/informed that some merges will put the SDKs a bit behind, and the Node SDK has just caught up with them recent config changes. This does not take away from how much I'm in agreement with you, though.","username":"JonathanLevi","ts":"2017-05-03T13:31:29.873Z"}
{"msg":"____\nN.B. Please kindly note, though, to be fair to others, that while *probably not as well communicated as it could have been*, that we were aware/informed that some merges will put the SDKs a bit behind (while Node SDK has just caught up with them recent config changes).\n\nThis does not take away from how much I'm in agreement with you, though!","username":"JonathanLevi","ts":"2017-05-03T13:31:29.873Z"}
{"msg":"+++ on Jonathan's comment.","username":"weeds","ts":"2017-05-03T14:54:03.240Z"}
{"msg":"I think @mrkiouak and @JonathanLevi are talking about two slightly different points above","username":"greg.haskins","ts":"2017-05-03T16:51:58.159Z"}
{"msg":"Please go ahead Greg.","username":"JonathanLevi","ts":"2017-05-03T16:52:17.860Z"}
{"msg":"[We did end up with a relatively follow up chat, but I think we should discuss all matters relevant]","username":"JonathanLevi","ts":"2017-05-03T16:53:09.625Z"}
{"msg":"point 1) ABI breakages: these may or may not be something that show up as a CI failure, but impact users...better automation around integration testing may help identify when this happens accidentally...we may also know ahead of time that this is the case and are making an educated decision to merge it anyway","username":"greg.haskins","ts":"2017-05-03T16:53:20.174Z"}
{"msg":"point 2) gerrit allowing us to merge CRs which fail tests...we have psuedo coverage here, but its not perfect","username":"greg.haskins","ts":"2017-05-03T16:54:08.752Z"}
{"msg":"for instance, we employ what I would classify as a \"single tier\" system","username":"greg.haskins","ts":"2017-05-03T16:54:31.897Z"}
{"msg":"that is, someone submits a CR,  CI verifies that CR in a vacuum....and if approved, its merged into the final tree","username":"greg.haskins","ts":"2017-05-03T16:55:07.213Z"}
{"msg":"most of the time, the -verify check and -merge check align, but they dont always","username":"greg.haskins","ts":"2017-05-03T16:55:33.083Z"}
{"msg":"(for instance, if something else was merged after the CR was sumitted but before it was merged, its conflict may not be detected until we run -merge job","username":"greg.haskins","ts":"2017-05-03T16:56:02.606Z"}
{"msg":"to address point 2, I think we should design/build what I would classify as a multi-tiered pipeline","username":"greg.haskins","ts":"2017-05-03T16:56:49.975Z"}
{"msg":"that is, the gerrit front end is the human approval and front-line -verify pipe-stage","username":"greg.haskins","ts":"2017-05-03T16:57:17.834Z"}
{"msg":"once approved through gerrit, it may move on to a subsequent stage (effectively what we do with -merge today), with the difference being it only shows up in master after it passes that stage","username":"greg.haskins","ts":"2017-05-03T16:58:13.504Z"}
{"msg":"so \"gerrit submit\" becomes more like \"human approved for merge consideration\" rather than \"merge it and pray\" like we have today","username":"greg.haskins","ts":"2017-05-03T16:58:56.803Z"}
{"msg":"I think there are two basic short comings w.r.t. point 2","username":"greg.haskins","ts":"2017-05-03T17:00:05.316Z"}
{"msg":"we have no way to keep those bad merges out of the HEAD, and we have a poor notification system when those bad merges occur","username":"greg.haskins","ts":"2017-05-03T17:00:37.638Z"}
{"msg":"today, it just shows up as a V-1 in the CR after the merge...which is fine if you happen to look back at gerrit or happen to have a better email filter than I do and notice it","username":"greg.haskins","ts":"2017-05-03T17:01:11.931Z"}
{"msg":"but what would be better (IMO) is a big giant red FAIL on a jenkins dashboard with appropriate notices going out, as well as the ability to prevent it from being promoted to HEAD","username":"greg.haskins","ts":"2017-05-03T17:02:11.596Z"}
{"msg":"thats all @JonathanLevi , im done","username":"greg.haskins","ts":"2017-05-03T17:02:26.738Z"}
{"msg":"Ha ha, thanks ;-)","username":"JonathanLevi","ts":"2017-05-03T17:03:03.727Z"}
{"msg":"A few things then: I really wanted (and still want) to put an *API freeze* state.","username":"JonathanLevi","ts":"2017-05-03T17:03:53.804Z"}
{"msg":"If you recall, this included the config and ABI (in \"my world\")","username":"JonathanLevi","ts":"2017-05-03T17:04:13.759Z"}
{"msg":"yep, i agree","username":"greg.haskins","ts":"2017-05-03T17:04:21.806Z"}
{"msg":"This is to me, a good measure (or some indication) of stability.","username":"JonathanLevi","ts":"2017-05-03T17:04:34.916Z"}
{"msg":"lets call it more general: compatibility freeze or ABI freeze","username":"greg.haskins","ts":"2017-05-03T17:04:48.070Z"}
{"msg":"it would include anything that impacts disparate components ability to communicate","username":"greg.haskins","ts":"2017-05-03T17:05:06.326Z"}
{"msg":"config files, wire protocols, APIs, etc","username":"greg.haskins","ts":"2017-05-03T17:05:14.334Z"}
{"msg":"Fine with me. I can adapt to that term *ABI freeze*... no problem.","username":"JonathanLevi","ts":"2017-05-03T17:05:37.104Z"}
{"msg":"Second, we can still allow a change in extreme cases, when such a \"freeze\" is broken... but it will require us to make a lot of \"noise\" around it, from testing, to release notes and close to 1.0 (and definitely after it)... to start thinking about *deprecation procedure*... (e.g., support both APIs for 2 versions, etc.)","username":"JonathanLevi","ts":"2017-05-03T17:07:16.607Z"}
{"msg":"Second, we can still allow a change in extreme cases, when such a \"freeze\" is broken... but it will require us to make a lot of \"noise\" around it, from testing, to release notes and close to 1.0 (and definitely after it)... to start thinking about an *API change and/or deprecation procedure*... (e.g., support both APIs for 2 versions, etc.)","username":"JonathanLevi","ts":"2017-05-03T17:07:16.607Z"}
{"msg":"There is something you overlook here @JonathanLevi and that is - access control change has a very similar effect on what you describe.","username":"yacovm","ts":"2017-05-03T17:08:10.750Z"}
{"msg":"There is something you overlook here @JonathanLevi and that is - access control change sets have a very similar effect on what you describe.","username":"yacovm","ts":"2017-05-03T17:08:10.750Z"}
{"msg":"I think in earlier steps, it can be \"decide+noise\" and longer term it needs to be a deterministic policy","username":"greg.haskins","ts":"2017-05-03T17:08:31.244Z"}
{"msg":"You can \"break the build\" with introducing an AC enforcement without changing anything in the API/ABI","username":"yacovm","ts":"2017-05-03T17:08:48.443Z"}
{"msg":"Yes, I agree Greg. I don't want to suggest/employ it \"too soon\".","username":"JonathanLevi","ts":"2017-05-03T17:08:49.860Z"}
{"msg":"for example, golang community is fairly strict about ABI compatibility across 1.x","username":"greg.haskins","ts":"2017-05-03T17:08:53.464Z"}
{"msg":"at some point, we will need to offer some kind of guarantee as well (1.x, 1.0.x, whatever)","username":"greg.haskins","ts":"2017-05-03T17:09:27.702Z"}
{"msg":"Yacov, a broken build is completely out of question (in this scenario). We are talking about a passing build, while \"under the radar\" the ABI changes and we don't notify thers.","username":"JonathanLevi","ts":"2017-05-03T17:09:31.769Z"}
{"msg":"Yes, Greg. I agree. To be honest, this stuff really costs a lot (financially), let's alone the nerves, sleepless nights and hairloss, in my case.","username":"JonathanLevi","ts":"2017-05-03T17:10:24.937Z"}
{"msg":":-)","username":"JonathanLevi","ts":"2017-05-03T17:10:35.670Z"}
{"msg":"It affects so many of us, who build stuff on top of fabric... and such changes make it hard/difficult for all of us to meet deadlines and set up plans/budgets, etc.","username":"JonathanLevi","ts":"2017-05-03T17:11:26.462Z"}
{"msg":"the downside to the notion of a freeze is it tends to precipitate the exact opposite leading up to the freeze ;)","username":"greg.haskins","ts":"2017-05-03T17:11:47.341Z"}
{"msg":"which is where we find ourselves now, i think","username":"greg.haskins","ts":"2017-05-03T17:11:57.315Z"}
{"msg":"(\"quick get $X in!\"","username":"greg.haskins","ts":"2017-05-03T17:12:08.902Z"}
{"msg":"Yes, a \"merge-merge-merge\" kind of freeze ;-)","username":"JonathanLevi","ts":"2017-05-03T17:12:36.031Z"}
{"msg":"but I agree....ive been slogging through one breaking change after another for months now, and I am still not caught up","username":"greg.haskins","ts":"2017-05-03T17:13:18.812Z"}
{"msg":"How can we help? What do you suggest we do better? I want us to start converging.","username":"JonathanLevi","ts":"2017-05-03T17:13:57.881Z"}
{"msg":"UX spiraled down for me starting with CR5555 back in Feb and I still havent recovered","username":"greg.haskins","ts":"2017-05-03T17:14:02.556Z"}
{"msg":"I'm really happy to \"close the gate\" for a while, and just stabilize, really.","username":"JonathanLevi","ts":"2017-05-03T17:14:13.179Z"}
{"msg":"I don't see it as a set-back. It will pay off.","username":"JonathanLevi","ts":"2017-05-03T17:14:23.321Z"}
{"msg":"I agree, and I know why its happening","username":"greg.haskins","ts":"2017-05-03T17:14:36.865Z"}
{"msg":"There is more risk now, with so many moving parts...","username":"JonathanLevi","ts":"2017-05-03T17:14:41.542Z"}
{"msg":"my bigger concern isnt so much what happened between v0.6 and now, but what will happen once v1.0 is cut","username":"greg.haskins","ts":"2017-05-03T17:15:01.556Z"}
{"msg":".. while at the same time, we get a lot *less feedback*, as people are giving up trying.","username":"JonathanLevi","ts":"2017-05-03T17:15:09.991Z"}
{"msg":"e.g. will we have the sufficient discipline, policy, and monitoring to ensure that all stops, as appropriate","username":"greg.haskins","ts":"2017-05-03T17:15:34.467Z"}
{"msg":"So many people write to me (personally) and ask me, \"so, shall we get back to farbic now, is it better?\"","username":"JonathanLevi","ts":"2017-05-03T17:15:44.519Z"}
{"msg":"I think both: \n1. From now to 1.0\n2. From 1.0 onwards (even 1.0 - 1.1.0 and 1.2.0 ... with 1.0.3 and 1.1.2)","username":"JonathanLevi","ts":"2017-05-03T17:16:40.105Z"}
{"msg":"I think both: \n1. From now to 1.0\n2. From 1.0 onwards (even 1.0.0 - 1.1.0 and 1.2.0 ... with 1.0.3 and 1.1.2)","username":"JonathanLevi","ts":"2017-05-03T17:16:40.105Z"}
{"msg":"Imagine us branching without a strong enough API...","username":"JonathanLevi","ts":"2017-05-03T17:17:04.771Z"}
{"msg":"Or policy","username":"JonathanLevi","ts":"2017-05-03T17:17:09.263Z"}
{"msg":"(Assume we suddenly \"ace\" the *discipline* part)","username":"JonathanLevi","ts":"2017-05-03T17:17:33.075Z"}
{"msg":"---\nHere's a \"bomb\": do we really not need API versioning?","username":"JonathanLevi","ts":"2017-05-03T17:18:34.291Z"}
{"msg":"[I know you are going to jump ;-)]","username":"JonathanLevi","ts":"2017-05-03T17:18:43.704Z"}
{"msg":"We know we really need it.... when do we get it in? Where do we test? etc.","username":"JonathanLevi","ts":"2017-05-03T17:19:06.359Z"}
{"msg":"can you clarify what you mean?  because that can be interpreted different ways","username":"greg.haskins","ts":"2017-05-03T17:19:16.298Z"}
{"msg":"Assume we expose stuff in version 1.0","username":"JonathanLevi","ts":"2017-05-03T17:19:32.082Z"}
{"msg":"And one starts consuming it. And you have a cluster (or network) with different versions installed.","username":"JonathanLevi","ts":"2017-05-03T17:20:01.463Z"}
{"msg":"1. How do you know that? ;-)","username":"JonathanLevi","ts":"2017-05-03T17:20:12.305Z"}
{"msg":"2. What do we support (backward/foward)","username":"JonathanLevi","ts":"2017-05-03T17:20:22.333Z"}
{"msg":"2. What do we support (backward/forward)","username":"JonathanLevi","ts":"2017-05-03T17:20:22.333Z"}
{"msg":"Can be peers/orderers and/or any given function","username":"JonathanLevi","ts":"2017-05-03T17:20:43.961Z"}
{"msg":"Provided/consumed.","username":"JonathanLevi","ts":"2017-05-03T17:20:53.834Z"}
{"msg":"so in this case, it sounds like we are talking about protobuf/grpc/wireprotocol kinds of detail","username":"greg.haskins","ts":"2017-05-03T17:20:58.341Z"}
{"msg":"Say tomorrow, we have an urgent patch, creating a v1.0.1","username":"JonathanLevi","ts":"2017-05-03T17:21:25.510Z"}
{"msg":"Or REST API, or anything really. But yes, gRPC is a good example","username":"JonathanLevi","ts":"2017-05-03T17:21:49.702Z"}
{"msg":"I think we need to think about how we can stabilize the API, in that sense too.","username":"JonathanLevi","ts":"2017-05-03T17:22:25.973Z"}
{"msg":"i think the notion of compatibility is going to get really complex in a network like this (for instance, chaincode/shim/golang, peer/orderer, etc, etc, but lets ignore that for a minute","username":"greg.haskins","ts":"2017-05-03T17:22:35.032Z"}
{"msg":"As part of the convergence.","username":"JonathanLevi","ts":"2017-05-03T17:22:39.590Z"}
{"msg":"Sure, go on.","username":"JonathanLevi","ts":"2017-05-03T17:22:45.433Z"}
{"msg":"lets just talk about general wire-protocol compatiblity between say, peer v1.0.0 and v1.0.1","username":"greg.haskins","ts":"2017-05-03T17:22:57.821Z"}
{"msg":"at that level of the conversation, the way I have designed any protocol of that nature could be describe as having the following traits","username":"greg.haskins","ts":"2017-05-03T17:23:44.020Z"}
{"msg":"Yup. That's the first thing that sprang to mind when you mentioned \"what will happen once v1.0 is cut\"","username":"JonathanLevi","ts":"2017-05-03T17:23:47.949Z"}
{"msg":"1) some kind of version/magic combo negotiated at the core of the protocol....incongruence with version/magic means the protocol is incompatible","username":"greg.haskins","ts":"2017-05-03T17:24:34.039Z"}
{"msg":"2) some kind of backwards/forwards compatibility mechanism (such as protobufs) for the basic transport","username":"greg.haskins","ts":"2017-05-03T17:25:10.157Z"}
{"msg":"and 3) never ever ever change(1) unless you really have no other choice","username":"greg.haskins","ts":"2017-05-03T17:25:22.136Z"}
{"msg":"so, assuming v1.0.0 -> v1.0.1 could be handled in a protobuf like manner (extending the message fields, etc), that would be the default modus operandi ","username":"greg.haskins","ts":"2017-05-03T17:26:26.951Z"}
{"msg":"and if for whatever extreme circumstances might preclude this from being possible/advised, bump the version/magic and at least rest assured that you will have a nice deterministic response to a heterogenous network","username":"greg.haskins","ts":"2017-05-03T17:27:32.391Z"}
{"msg":"(as opposed to whatever madness may ensue if you just allow the incongruence to go undetected and result in hard to diagnose failures)","username":"greg.haskins","ts":"2017-05-03T17:28:16.135Z"}
{"msg":"for rest, this might simply mean all apis are rooted under a versioned path, like /api/v1, /api/v2, etc","username":"greg.haskins","ts":"2017-05-03T17:29:01.726Z"}
{"msg":"for protobufs, I tend to build a \"message Negotiate\" object that is negotiated as part of a handshake, etc","username":"greg.haskins","ts":"2017-05-03T17:29:30.916Z"}
{"msg":"@JonathanLevi EOM","username":"greg.haskins","ts":"2017-05-03T17:30:10.876Z"}
{"msg":"I'm with you with the preference for 2), the REST API with the rooted version and the msg negotiate. ","username":"JonathanLevi","ts":"2017-05-03T17:31:36.700Z"}
{"msg":"I don't know how much of this is already done, documented and tested, to be honest... for us to feel comfortable that we can cut a *beta* with a frozen API as early as next week.","username":"JonathanLevi","ts":"2017-05-03T17:32:24.368Z"}
{"msg":"That's my main concern. I don't want to declare \"success\" to early and then end up in a mess. The `alpha` tag was not that bad, but it became very clear that we need some \"freeze\" phase, for collecting input/feedback.","username":"JonathanLevi","ts":"2017-05-03T17:33:21.541Z"}
{"msg":"That's my main concern. I don't want to declare \"success\" to early and then end up in a mess. The *1.0.0-alpha* tag was OK/not that bad, but it became very clear that we need some \"freeze\" phase, for collecting input/feedback.","username":"JonathanLevi","ts":"2017-05-03T17:33:21.541Z"}
{"msg":"We merged a lot very close to that tag.","username":"JonathanLevi","ts":"2017-05-03T17:34:15.599Z"}
{"msg":"yes, same that is happening now","username":"greg.haskins","ts":"2017-05-03T17:34:50.428Z"}
{"msg":"Yes, exactly - and I would like us to slow down somehow, in order to converge... ","username":"JonathanLevi","ts":"2017-05-03T17:35:04.463Z"}
{"msg":"I feel that the API/ABI freeze is really key.","username":"JonathanLevi","ts":"2017-05-03T17:35:15.621Z"}
{"msg":"personally, i dont see harm in snapping -alpha2","username":"greg.haskins","ts":"2017-05-03T17:35:22.511Z"}
{"msg":"and yes, collectively strategizing/agreeing on what goes in next, with a mind on convergence/stability","username":"greg.haskins","ts":"2017-05-03T17:35:55.791Z"}
{"msg":"Let's do this...","username":"JonathanLevi","ts":"2017-05-03T17:49:35.726Z"}
{"msg":"I'm with you. How about we do this:","username":"JonathanLevi","ts":"2017-05-03T17:49:35.726Z"}
{"msg":"I will try to collect all/most of the feedback, and we will work towards a `1.0.0-alpha-stable`... ","username":"JonathanLevi","ts":"2017-05-03T17:50:06.898Z"}
{"msg":"Even early next week.","username":"JonathanLevi","ts":"2017-05-03T17:50:14.405Z"}
{"msg":"I don't really mind the name of the tag. I have just heard about some objections to alpha2 last week. Honestly, no tag/name will keep me up at night - I have 0 preferences.","username":"JonathanLevi","ts":"2017-05-03T17:50:52.222Z"}
{"msg":"I would rather us declare a `beta` though, when we all feel that that the API/ABI is a lot more stable.","username":"JonathanLevi","ts":"2017-05-03T17:51:19.614Z"}
{"msg":"I just want to add my 2 cents that I agree api should be stable prior to calling it a beta","username":"mrkiouak","ts":"2017-05-03T17:51:44.395Z"}
{"msg":"That first step, will allow us to 'align\" everything, \"quickly\".","username":"JonathanLevi","ts":"2017-05-03T17:51:46.491Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yuDdd2eWXmwThciuN) Thank you Matt.","username":"JonathanLevi","ts":"2017-05-03T17:52:00.899Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yuDdd2eWXmwThciuN","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yuDdd2eWXmwThciuN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Yes, I am really trying to follow \"conventions\", as much as possible.","username":"JonathanLevi","ts":"2017-05-03T17:52:23.244Z"}
{"msg":"We have pushed in so much between the alpha and today... that we could all use a soft \"rebase\"","username":"JonathanLevi","ts":"2017-05-03T17:53:02.477Z"}
{"msg":"Even at the cost of merging \"less\" [with G-d's help! ;-)] for a few days.","username":"JonathanLevi","ts":"2017-05-03T17:53:30.357Z"}
{"msg":"In a way, it's amazing how merging less is more difficult than the other way around - but I think we should really be disciplined and push for it.","username":"JonathanLevi","ts":"2017-05-03T17:54:09.487Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-05-03T17:58:21.411Z"}
{"msg":"I dont really understand the rationale against \"alpha2\" unless its simply because its felt we are ready for the next step (beta)","username":"greg.haskins","ts":"2017-05-03T17:59:16.823Z"}
{"msg":"what I would discourage in general, however, is something that paints us in a corner (making subsequent releases hard) or something that needs explaination","username":"greg.haskins","ts":"2017-05-03T18:00:09.281Z"}
{"msg":"It was something around some pre-agreed naming that people have discussed. I agree - I don't feel like we are *beta-ready*","username":"JonathanLevi","ts":"2017-05-03T18:00:27.933Z"}
{"msg":"e.g. \"alpha-stable\" is kind of the former....what if something isnt right and we need to hotfix it","username":"greg.haskins","ts":"2017-05-03T18:00:38.335Z"}
{"msg":"I hear you. We still plan on a beta, RC1 and RC2. I'm fine with other name suggestions.","username":"JonathanLevi","ts":"2017-05-03T18:01:17.700Z"}
{"msg":"(I can speak/type for myself)","username":"JonathanLevi","ts":"2017-05-03T18:01:33.257Z"}
{"msg":"im fine with the notion of pre-agreed tags (rcX, beta, alpha, etc) but I see absolutely nothing wrong with version qualifying them either","username":"greg.haskins","ts":"2017-05-03T18:02:15.078Z"}
{"msg":"e.g. alpha, alpha2, whatever...just like rc1 rc2","username":"greg.haskins","ts":"2017-05-03T18:02:30.325Z"}
{"msg":"i think its a bit presumptuous to assume you'll absolutely, positively, never need to hotfix it either","username":"greg.haskins","ts":"2017-05-03T18:03:00.967Z"}
{"msg":"my experience is the opposite ;)","username":"greg.haskins","ts":"2017-05-03T18:03:14.225Z"}
{"msg":"I'll try to come up with something less *stable* then... OK ;-)","username":"JonathanLevi","ts":"2017-05-03T18:03:42.303Z"}
{"msg":"BTW: I have to head out (but others, please chime in), in the meantime, just to quickly bring it up here, are there any objection to this proposed new branching model from @dhuseby (\"Coach Dave\") ?\n\nhttps://docs.google.com/document/d/1Lb-TjMTdG9wEG1QlkjxyWN2FYeWYLaUGdpEUdV8-hEw/edit","username":"JonathanLevi","ts":"2017-05-03T18:03:46.496Z"}
{"msg":"theres nothing wrong with the model...its pretty much the way ive run most projects ive worked on...but I would point out that we need some retooling of the CI process to make that successful","username":"greg.haskins","ts":"2017-05-03T18:05:27.272Z"}
{"msg":"without that, that model will work poorly","username":"greg.haskins","ts":"2017-05-03T18:05:50.158Z"}
{"msg":"alpha2 is fine I guess","username":"cbf","ts":"2017-05-03T18:19:54.842Z"}
{"msg":"So as I/we don't hear/read any objections to this, I am going to compose a quick/formal email and pass it around...\n\n[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=xDzYihPM7bR4C3zGq) ","username":"JonathanLevi","ts":"2017-05-03T23:02:10.304Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=xDzYihPM7bR4C3zGq","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=xDzYihPM7bR4C3zGq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"We really need to get cracking on this, if we proceed to work towards an *alpha-working* or so tag - next week.","username":"JonathanLevi","ts":"2017-05-03T23:02:57.997Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-05-03T23:32:13.175Z"}
{"msg":"---\nAmigos, I'm breaking the above to a few steps. Let's start with this: https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-May/000833.html please?","username":"JonathanLevi","ts":"2017-05-03T23:32:57.151Z"}
{"msg":"Lets please backburner the branching discussion until 1.0 is cut...I suspect its actually a big deal to implement the changes to CI and I dont think we can afford the distraction","username":"greg.haskins","ts":"2017-05-03T23:44:51.767Z"}
{"msg":"for now, KISS...we have one branch and stablize it","username":"greg.haskins","ts":"2017-05-03T23:45:05.008Z"}
{"msg":"for now, KISS...we have one branch and stabilize it","username":"greg.haskins","ts":"2017-05-03T23:45:05.008Z"}
{"msg":"Regarding semantic versioning, I pulled the following from semver.org:\n```Example: 1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0-rc.1 < 1.0.0.```","username":"tkuhrt","ts":"2017-05-04T00:24:12.118Z"}
{"msg":"Regarding the branches, would it be difficult to create the `master` branch from the previous `1.0.0-alpha` tag and make the `current master` branch the new `dev` branch?  This would allow us to move to the branch strategy suggested by @dhuseby while still allowing stabilization.","username":"tkuhrt","ts":"2017-05-04T00:26:46.250Z"}
{"msg":"It's not difficult. The thing is that a lot of stuff has been merged between that *1.0.0-alpha* and the current *master*.","username":"JonathanLevi","ts":"2017-05-04T01:02:53.404Z"}
{"msg":"But even with that in mind, we can probably \"split\" to develop and master, within a day or two... say, by the end of the week - I believe.","username":"JonathanLevi","ts":"2017-05-04T01:03:34.374Z"}
{"msg":"Initially, we can simply just \"clone\" the CI jobs to run on both, parallel.","username":"JonathanLevi","ts":"2017-05-04T01:04:18.005Z"}
{"msg":"(Being super pragmatic here)","username":"JonathanLevi","ts":"2017-05-04T01:04:32.396Z"}
{"msg":"So that it gives others time to get the right pipeline/workflow between *develop* and *master*... and the \"up/down merging\" steps.","username":"JonathanLevi","ts":"2017-05-04T01:05:17.494Z"}
{"msg":"The current *master* looks a lot better after the recent changes/last few days (including the Node SDK stuff, and other fixes). ","username":"JonathanLevi","ts":"2017-05-04T01:06:19.311Z"}
{"msg":"The current *master* looks a lot better after the recent changes/last few days (off the top of my head: it now includes the Node SDK stuff, and other fixes/features TLS, org, genesis block, configs... and a few older ones for Vagrant fixes, input validations/tests)... but again, we really need to test more, etc.","username":"JonathanLevi","ts":"2017-05-04T01:09:29.191Z"}
{"msg":"Thoughts? [@mastersingh24, @cbf, @binhn, others, ...]\nIt will not be the \"full shebang\" with the auto-reverting CI, etc... but it will give us some separation.","username":"JonathanLevi","ts":"2017-05-04T01:11:01.997Z"}
{"msg":"Thoughts? [ @mastersingh24, @cbf, @binhn, @yacov, @jimthematrix , others, ...?]\nIt will not be the \"full shebang\" with the auto-reverting CI, etc... but it will give us some separation.","username":"JonathanLevi","ts":"2017-05-04T01:11:01.997Z"}
{"msg":"Thoughts? [ @mastersingh24, @cbf, @binhn, @yacovm , @jimthematrix , others, ...?]\nIt will not be the \"full shebang\" with the auto-reverting CI, etc... but it will give us some separation.","username":"JonathanLevi","ts":"2017-05-04T01:11:51.620Z"}
{"msg":"---\nBTW: *1.0.0-alpha.1* sounds good to me as well...","username":"JonathanLevi","ts":"2017-05-04T01:13:04.085Z"}
{"msg":"(which also gives us room for .2, .3, if push comes to shove]","username":"JonathanLevi","ts":"2017-05-04T01:13:42.867Z"}
{"msg":"@JonathanLevi @greg.haskins enlightening discussions above, thanks for typing it out your thoughts, I agree with an `alpha2` release but have a slight suggestion to the concrete naming: instead of `1.0.0-alpha.1`, `1.0.0-alpha.2` etc., let's call it `1.0.0-alpha2`, `1.0.0-alpha3` etc.","username":"jimthematrix","ts":"2017-05-04T02:08:04.929Z"}
{"msg":"@JonathanLevi @greg.haskins enlightening discussions above, thanks for typing out your thoughts, I agree with an `alpha2` release but have a slight suggestion to the concrete naming: instead of `1.0.0-alpha.1`, `1.0.0-alpha.2` etc., let's call it `1.0.0-alpha2`, `1.0.0-alpha3` etc.","username":"jimthematrix","ts":"2017-05-04T02:08:04.929Z"}
{"msg":"this allows us to put out hotfixes to each alpha releases, by using the `.n` suffix","username":"jimthematrix","ts":"2017-05-04T02:08:43.558Z"}
{"msg":"because by semver syntax: \n```1.0.0-alpha < 1.0.0-alpha.1 <1.0.0-alpha1 < 1.0.0-alpha1.1 < 1.0.0-alpha2 ...```","username":"jimthematrix","ts":"2017-05-04T02:10:30.367Z"}
{"msg":"node SDK already released a hotfix to 1.0.0-alpha release, and is called 1.0.0-alpha.1","username":"jimthematrix","ts":"2017-05-04T02:11:09.793Z"}
{"msg":"it was due to `grpc` update breaking backward compatibility","username":"jimthematrix","ts":"2017-05-04T02:11:28.579Z"}
{"msg":"of course the hotfixes should be reserved to only those absolutely critical and really easy fixes (easy as in time consumption so time is not taken away from hardening the main release stream)","username":"jimthematrix","ts":"2017-05-04T02:17:38.511Z"}
{"msg":"same for beta and rc: `1.0.0-beta`, `1.0.0-beta2`, `1.0.0-rc`, `1.0.0-rc2`, etc","username":"jimthematrix","ts":"2017-05-04T02:20:55.835Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=soJRvFEsk45cSYuyW) @jimthematrix Actually this is exactly what I was suggesting","username":"greg.haskins","ts":"2017-05-04T02:21:03.881Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=soJRvFEsk45cSYuyW","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=soJRvFEsk45cSYuyW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"first release, -alpha2, hotfixes -alpha2.x","username":"greg.haskins","ts":"2017-05-04T02:21:30.115Z"}
{"msg":"also agree, aim to not need them","username":"greg.haskins","ts":"2017-05-04T02:21:43.393Z"}
{"msg":"i just like to plan ahead, just in case","username":"greg.haskins","ts":"2017-05-04T02:21:54.791Z"}
{"msg":"totally, need to plan ahead, to allow us the room for possible need, considering our track record so far ;-)","username":"jimthematrix","ts":"2017-05-04T02:22:51.851Z"}
{"msg":"it was nothing specific to our project, I think its just a fact of software engineering","username":"greg.haskins","ts":"2017-05-04T02:23:41.716Z"}
{"msg":"it's release engineering best practice","username":"jimthematrix","ts":"2017-05-04T02:24:30.148Z"}
{"msg":"but you can see the phenomenon on almost any project","username":"greg.haskins","ts":"2017-05-04T02:24:37.490Z"}
{"msg":"so let's make use of it","username":"jimthematrix","ts":"2017-05-04T02:24:45.151Z"}
{"msg":"heres chaintool's most recent history: https://github.com/hyperledger/fabric-chaintool/releases","username":"greg.haskins","ts":"2017-05-04T02:24:47.362Z"}
{"msg":"most cuts tend to have 0-2 hotfixes","username":"greg.haskins","ts":"2017-05-04T02:25:03.497Z"}
{"msg":"depending on your release strategy, you could have many more...my main point is 0-2 \"oops\" i think is minimal","username":"greg.haskins","ts":"2017-05-04T02:25:55.925Z"}
{"msg":"so why not leave room for them","username":"greg.haskins","ts":"2017-05-04T02:26:01.757Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=BSR7v3jwqWsE5qBjR) @JonathanLevi Please dont do this","username":"greg.haskins","ts":"2017-05-04T02:28:43.284Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=BSR7v3jwqWsE5qBjR","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=BSR7v3jwqWsE5qBjR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"its not that the branching is hard, its the pipeline to manage the branches from going out of sync that worries me","username":"greg.haskins","ts":"2017-05-04T02:29:12.654Z"}
{"msg":"I still have PTSD from trying to straighten out the mess we had with v0.6 and 1.0","username":"greg.haskins","ts":"2017-05-04T02:29:38.428Z"}
{"msg":"I still have PTSD from trying to straighten out the mess we had between v0.6 and 1.0","username":"greg.haskins","ts":"2017-05-04T02:29:38.428Z"}
{"msg":"I would argue getting the pipeline \"right\" must come first, before we cut over to the model, and I would also argue that having that pipeline distraction _now_ is bad timing","username":"greg.haskins","ts":"2017-05-04T02:30:33.016Z"}
{"msg":"I think one of the fundamental problems is that model proposed is antithetical to how gerrit operates","username":"greg.haskins","ts":"2017-05-04T02:31:30.641Z"}
{"msg":"gerrit likes to be CR/patch oriented, not branch oriented","username":"greg.haskins","ts":"2017-05-04T02:31:51.526Z"}
{"msg":"My main concerns are that we need things to remain truly continuously integrated (in whatever makes sense for the context) and that we don't leave merging to humans","username":"greg.haskins","ts":"2017-05-04T02:35:24.334Z"}
{"msg":"I think we've already proven that on a project of this type/size, you'll get inconsistent results at best if left to humans","username":"greg.haskins","ts":"2017-05-04T02:36:49.220Z"}
{"msg":"vM.m.p-alphaN.h seems quite reasonable to me","username":"cbf","ts":"2017-05-04T10:01:11.169Z"}
{"msg":"I agree we need to get the pipeline in place, fortunately, I have someone who will be able to help joining us shortly.","username":"cbf","ts":"2017-05-04T10:02:21.060Z"}
{"msg":"Ha ha. Good morning - feels like we have still have the PTSD symptoms...!","username":"JonathanLevi","ts":"2017-05-04T10:56:32.686Z"}
{"msg":":-) Sounds good. Let's adopt that then. Seems like most of us support that...","username":"JonathanLevi","ts":"2017-05-04T10:57:09.898Z"}
{"msg":":-) Sounds good. Let's adopt that [naming scheme] then. Seems like most of us support that...","username":"JonathanLevi","ts":"2017-05-04T10:57:09.898Z"}
{"msg":":-) Sounds good. Let's adopt that [naming scheme] then. Seems like most of us support that notion...","username":"JonathanLevi","ts":"2017-05-04T10:57:09.898Z"}
{"msg":":-) Sounds good. Let's adopt that [naming scheme] then. Seems like most of us support that notion... - will formalize it a little bit to check that we are all in agreement. Again, I do/did not mind how we call it, as long as we don't claim that it's *beta* (yet).","username":"JonathanLevi","ts":"2017-05-04T10:57:09.898Z"}
{"msg":"I'll also try to find out how much work is required for the CI retooling, and what can be the minimal though sufficient enough work that we can accomplish within a few days.","username":"JonathanLevi","ts":"2017-05-04T10:58:26.733Z"}
{"msg":"I agree with Greg. We should not trust *them humans* ;-) ","username":"JonathanLevi","ts":"2017-05-04T10:58:55.152Z"}
{"msg":"More seriously, the more manual work we do, the less we automate, the more inconsistent, by \"design\", things may (and will) be.","username":"JonathanLevi","ts":"2017-05-04T11:00:01.151Z"}
{"msg":"Has joined the channel.","username":"himansri","ts":"2017-05-04T11:32:53.870Z","type":"uj"}
{"msg":"@binhn please make sure you take note of comments here up above- realize you are still recovering","username":"weeds","ts":"2017-05-04T12:03:18.799Z"}
{"msg":"Sharon, *all the maintainers* are going to have a vote over these.\n\nI am/we are just trying to gather/collect what we can agree on first (e.g., the naming, the parts of branching/steps, and today I would like to really define the upcoming \"freeze\" until we are stable...).","username":"JonathanLevi","ts":"2017-05-04T12:16:17.244Z"}
{"msg":"FWIW - I think that the next \"cut\" should be tagger as \"beta\" and not \"alpha.N\"","username":"mastersingh24","ts":"2017-05-04T12:22:50.459Z"}
{"msg":"++ Jonathan-","username":"weeds","ts":"2017-05-04T12:25:09.158Z"}
{"msg":"@mastersingh24 Are we happy to freeze API/ABI very soon? Do you feel we are ready?","username":"JonathanLevi","ts":"2017-05-04T12:29:02.241Z"}
{"msg":"(really asking)","username":"JonathanLevi","ts":"2017-05-04T12:29:43.228Z"}
{"msg":"At some point, we will have to \"veto\" changes... ","username":"JonathanLevi","ts":"2017-05-04T12:30:04.558Z"}
{"msg":"Well we should be ready - I guess we won't know if we need to change anything until more people start using it but I am not currently aware of any planned changes","username":"mastersingh24","ts":"2017-05-04T12:30:10.352Z"}
{"msg":"Meaning we should only change something if we really screwed up or missed soemthing at this point.  I don't know of any planned changes to existing APIs","username":"mastersingh24","ts":"2017-05-04T12:30:53.885Z"}
{"msg":"Yes, what we \"softly\" defined as \"show stoppers\" (without which we can't ship)","username":"JonathanLevi","ts":"2017-05-04T12:31:22.444Z"}
{"msg":"I could see that we might need to ADD some to make some configuration(s) easier, but again we'll need to get feedback","username":"mastersingh24","ts":"2017-05-04T12:31:25.103Z"}
{"msg":"and those MUST NOT break existing ABI/API","username":"mastersingh24","ts":"2017-05-04T12:31:42.934Z"}
{"msg":"I am going to try to tackle working with the SDK against the latest fabric/ca with full security on, etc.","username":"greg.haskins","ts":"2017-05-04T12:50:34.578Z"}
{"msg":"I suspect there will be some awkwardness w.r.t. configuring an SDK client to use all the certs, etc....we will have to decide to fix or live with it","username":"greg.haskins","ts":"2017-05-04T12:51:31.386Z"}
{"msg":"that would be the most obvious ABI change i can think of","username":"greg.haskins","ts":"2017-05-04T12:53:42.139Z"}
{"msg":"Let's all give it a day (or two) ?","username":"JonathanLevi","ts":"2017-05-04T12:54:01.951Z"}
{"msg":"Declaring an *ABI freeze* will really be a huge (and super welcome!) step...","username":"JonathanLevi","ts":"2017-05-04T12:55:16.502Z"}
{"msg":"I just don't want to do it too early (and definitely not too late/not do it for one reason or another). Ref: \"making noise when we need to break it/if we must\" above.","username":"JonathanLevi","ts":"2017-05-04T12:59:16.893Z"}
{"msg":"i suspect we may need to consider (probably for 1.1 at this point) some kind of \"channel discovery\" protocol","username":"greg.haskins","ts":"2017-05-04T13:05:46.746Z"}
{"msg":"perhaps its as simple as GetChannelConfig(name string) -> channel.tx","username":"greg.haskins","ts":"2017-05-04T13:06:31.203Z"}
{"msg":"it seems to be that requiring the SDK clients to know all the peers and all the orderers will be both awkward and fragile","username":"greg.haskins","ts":"2017-05-04T13:07:14.685Z"}
{"msg":"(unless we already have that?)","username":"greg.haskins","ts":"2017-05-04T13:07:59.615Z"}
{"msg":"there 's api to get channels, but the caller must have access","username":"binhn","ts":"2017-05-04T13:10:56.496Z"}
{"msg":"Greg I have deja-vu :)","username":"yacovm","ts":"2017-05-04T13:11:36.064Z"}
{"msg":"I remember we discussed this in this channel in the past","username":"yacovm","ts":"2017-05-04T13:11:52.370Z"}
{"msg":"I remember we discussed this in this channel in the past with regard to \"know all the peers\"","username":"yacovm","ts":"2017-05-04T13:11:52.370Z"}
{"msg":"look at lscc","username":"binhn","ts":"2017-05-04T13:12:03.740Z"}
{"msg":"look at cscc  https://github.com/hyperledger/fabric/blob/master/core/scc/cscc/configure.go#L134","username":"binhn","ts":"2017-05-04T13:12:03.740Z"}
{"msg":"sorry to be the party pooper but I don't think the SDKs are ready for API freeze yet. @mastersingh24 @JonathanLevi @greg.haskins @cbf @binhn ","username":"jimthematrix","ts":"2017-05-04T14:19:22.547Z"}
{"msg":"it'd like to propose for fabric and fabric-ca to be declared as `beta` but node and java SDK to be `alpha2`","username":"jimthematrix","ts":"2017-05-04T14:20:06.828Z"}
{"msg":"both SDKs need some time to review the API designs and I already know there are places we'd like to adjust so they make more sense","username":"jimthematrix","ts":"2017-05-04T14:20:45.148Z"}
{"msg":"we have been swamped by trying to keep up with fabric and fabric-ca (breaking) changes and haven't got a chance to really sweep the APIs for bad designs","username":"jimthematrix","ts":"2017-05-04T14:22:25.684Z"}
{"msg":"nothing is ready for beta","username":"cbf","ts":"2017-05-04T15:42:35.327Z"}
{"msg":"I think that the SDKs can continue to evolve, but we need to put something out that people can work with now","username":"cbf","ts":"2017-05-04T15:43:13.139Z"}
{"msg":"so SDK needs to catch up to recent changes?","username":"cbf","ts":"2017-05-04T15:43:35.734Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=sWMAR4yanrxjt35z9) @greg.haskins the SDKs (node and java at least) attempt to support this from chain.initialize() so that you only need to tell it where one of the orderers is and it'll discover all the information relevant to that channel. although as far as peers are concerned, the only possibly useful information in the channel config is `AnchorPeers` which are optional and don't necessary completely overlap with the `endorser` peers. but the ability is there as an option if the network setup supports it","username":"jimthematrix","ts":"2017-05-04T15:46:18.262Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=sWMAR4yanrxjt35z9","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=sWMAR4yanrxjt35z9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf we've basically caught up as of yesterday so are now focusing on tying up a few loose ends (some are affecting APIs) and starting to address critical bugs","username":"jimthematrix","ts":"2017-05-04T15:49:37.399Z"}
{"msg":"in the meanwhile I'm also trying to review the APIs and I'm almost 100% sure there will need to be API adjustments in both node and Java","username":"jimthematrix","ts":"2017-05-04T15:50:16.285Z"}
{"msg":"@jimthematrix that is great news","username":"greg.haskins","ts":"2017-05-04T15:56:57.389Z"}
{"msg":"do you have a working example?","username":"greg.haskins","ts":"2017-05-04T15:57:02.450Z"}
{"msg":"i mean, a best-practices example?  the e2e isnt well suited to demonstrating to users how to write a client","username":"greg.haskins","ts":"2017-05-04T15:57:29.914Z"}
{"msg":"and in any case, last I looked, it was still structured around very explicit configuration of the orderers/peers","username":"greg.haskins","ts":"2017-05-04T15:58:05.433Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=qACisWwtMtvQbF5kC)  Jim, no need to apologize, we are all just trying to get in synch.","username":"JonathanLevi","ts":"2017-05-04T16:58:06.856Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qACisWwtMtvQbF5kC","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qACisWwtMtvQbF5kC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=qACisWwtMtvQbF5kC)  Jim, no need to apologize ;-), we are all just trying to get in synch... get a realistic status.","username":"JonathanLevi","ts":"2017-05-04T16:58:06.856Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qACisWwtMtvQbF5kC","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qACisWwtMtvQbF5kC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Let's align everything. No point in different tags for different (sub-projects).","username":"JonathanLevi","ts":"2017-05-04T16:58:17.192Z"}
{"msg":"Let's align everything. No point in different tags for different (sub-) projects... I would rather wait:","username":"JonathanLevi","ts":"2017-05-04T16:58:17.192Z"}
{"msg":"Since/as we would like to help others provide us with more feedback... we should make it really simple to work against a unified tag/version... and report issues with/against it.","username":"JonathanLevi","ts":"2017-05-04T17:01:08.354Z"}
{"msg":"so just to be clear, I do support putting another release out (early) next week which I think is a higher priority than getting all sub-projects aligned. so I already know node and Java SDK will be `alpha2` for that. but if for fabric and fabric-ca we believe it's already ABI frozen then it should be called `beta` with the benefit of encouraging early adopters to start banging hard on it, which I think they would hesitate to do on an alpha","username":"jimthematrix","ts":"2017-05-04T17:13:18.819Z"}
{"msg":"might I remind maintainers that when they submit a CR for merge, that they please also update the corresponding JIRA accordingly. Not all transition to Done, so read carefully. However, right now, the JIRA items are not closed automatically","username":"cbf","ts":"2017-05-04T17:31:01.630Z"}
{"msg":"as for the release, I'd like it sooner rather than next week. Tomorrow if possible","username":"cbf","ts":"2017-05-04T17:31:53.211Z"}
{"msg":"@jimthematrix you are hinting that you won't be ready then?","username":"cbf","ts":"2017-05-04T17:32:19.604Z"}
{"msg":"node SDK can have a cut tomorrow. but java SDK won't likely be ready. Rick spent the last 4 days recovering from all the breaking changes and https://gerrit.hyperledger.org/r/#/c/8471/ is being reviewed (it's huge but it's one of those that has to contain all the necessary changes to get green again)","username":"jimthematrix","ts":"2017-05-04T17:35:56.854Z"}
{"msg":"Has joined the channel.","username":"Nishi","ts":"2017-05-04T17:46:03.542Z","type":"uj"}
{"msg":"I am happy to focus *all efforts* these coming days and go for an 'alpha2' across all project, so that we that we have a working baseline.","username":"JonathanLevi","ts":"2017-05-04T17:50:27.133Z"}
{"msg":"I am happy to focus *all efforts* these coming days and go for an 'alpha2' across all project, so that we that we have a working baseline.","username":"JonathanLevi","ts":"2017-05-04T17:50:27.133Z"}
{"msg":"I am happy to focus *all efforts* (that is, not merging any else until we get there) these coming days and go for an 'alpha2' across all project, so that we that we have a working baseline.","username":"JonathanLevi","ts":"2017-05-04T17:50:27.133Z"}
{"msg":"I am happy to focus *all efforts* (that is, not merging anything else until we get there) these coming days and go for a *1.0.0-alpha2* tag across all (sub-) projects, so that we that we have a working baseline.","username":"JonathanLevi","ts":"2017-05-04T17:50:27.133Z"}
{"msg":"Who can provide an estimate for the Java SDK readiness? (Again, estimate, ballpark, ...)","username":"JonathanLevi","ts":"2017-05-04T17:51:10.567Z"}
{"msg":"FWIW, I asked the IBM team for a list of CRs that were MUST HAVE for an alpha2... still have not seen that","username":"cbf","ts":"2017-05-04T19:34:44.454Z"}
{"msg":"@here https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-May/000842.html","username":"cbf","ts":"2017-05-04T21:49:55.620Z"}
{"msg":"I just posted to the mailing list a draft set of exit criteria for a release ","username":"cbf","ts":"2017-05-04T21:50:11.096Z"}
{"msg":"please flame away","username":"cbf","ts":"2017-05-04T21:50:20.085Z"}
{"msg":"I have had input from @JonathanLevi and @mastersingh24 but would welcome suggested improvements (or tell me I am full of it)","username":"cbf","ts":"2017-05-04T21:51:05.487Z"}
{"msg":"@dhuseby @tkuhrt ^^","username":"cbf","ts":"2017-05-04T21:51:38.151Z"}
{"msg":"Dave, if you have specific static or dynamic scanning requirements, it would help to be explicit about those","username":"cbf","ts":"2017-05-04T21:52:18.808Z"}
{"msg":"This is not a channel for me to chime in , but I thought let me put my 2 cents. Dynamic scan does not fall into the development activities bucket. For static scan , we have very limited support. There is no tool in the market which does static scan of Go source code and same is applicable to Node js as well. We can scan Node js code as client side javascript . Not sure how much effective that would be.","username":"ashutosh_kumar","ts":"2017-05-05T02:07:19.248Z"}
{"msg":"@cbf I suppose samples are included under ``` documentation sufficient to ensure that users/operators have clear\nguidance on how to get started and how to configure and operate. The\noperational aspects need to be correct and independently user tested,```  ? would it make sense to have an explicit samples to go with the doc ?","username":"muralisr","ts":"2017-05-05T11:39:20.358Z"}
{"msg":"@cbf I suppose samples are included under  ```documentation sufficient to ensure that users/operators have clear\nguidance on how to get started and how to configure and operate. The\noperational aspects need to be correct and independently user tested```  ? would it make sense to have an explicit samples to go with the doc ?","username":"muralisr","ts":"2017-05-05T11:39:20.358Z"}
{"msg":"@muralisr I think that falls under documentation, yes","username":"cbf","ts":"2017-05-05T11:46:17.017Z"}
{"msg":"Ok.  good sample is worth a ton of doc right.. hence the suggestion to explicitly look out for those in submissions, but  yes, they are \"doc\" in the end","username":"muralisr","ts":"2017-05-05T11:51:30.977Z"}
{"msg":"and its hard to enforce \"samples\" I suppose","username":"muralisr","ts":"2017-05-05T11:52:07.268Z"}
{"msg":"y","username":"cbf","ts":"2017-05-05T12:32:30.784Z"}
{"msg":"@greg.haskins thoughts?","username":"cbf","ts":"2017-05-05T12:32:51.410Z"}
{"msg":"@greg.haskins thoughts on the exit criteria email?","username":"cbf","ts":"2017-05-05T12:32:51.410Z"}
{"msg":"reviewing","username":"greg.haskins","ts":"2017-05-05T12:33:25.069Z"}
{"msg":"@cbf are you tasking about your exit criteria, or @muralisr's comment on samples?","username":"greg.haskins","ts":"2017-05-05T12:34:04.651Z"}
{"msg":"@cbf are you asking about your exit criteria, or @muralisr's comment on samples?","username":"greg.haskins","ts":"2017-05-05T12:34:04.651Z"}
{"msg":"email generally and any of the comments","username":"cbf","ts":"2017-05-05T12:34:47.328Z"}
{"msg":"@here and of course, anyone else - would like to nail this down today","username":"cbf","ts":"2017-05-05T12:35:47.776Z"}
{"msg":"FWIW @cbf, I like  it a lot overall... especially after @mastersingh24 comment on \"intent\"","username":"muralisr","ts":"2017-05-05T12:37:22.329Z"}
{"msg":"```- produce releases which solve real use cases \n- produce releases which can be easily consumed by new and old users alike\n- the developers feel confident that their code does what it says it does / is supposed to do\n- releases which can confidently be used in production scenarios```","username":"muralisr","ts":"2017-05-05T12:37:26.250Z"}
{"msg":"yes, I will add that when we publish for sure","username":"cbf","ts":"2017-05-05T12:37:48.620Z"}
{"msg":"overall I thought the list looked good...really my only concern would be not with the merit of the line items, but our ability to execute on them in the short term as a gate to the release","username":"greg.haskins","ts":"2017-05-05T12:37:55.542Z"}
{"msg":"my only (perhaps naive) question is ... how easy is it to enforce this ","username":"muralisr","ts":"2017-05-05T12:37:57.963Z"}
{"msg":"for instance, security scans...do we have this capability?","username":"greg.haskins","ts":"2017-05-05T12:38:07.692Z"}
{"msg":"@greg.haskins IBM does these for our offerings, and I am working with Dave H on LF side of things, to nail down tools and/or services we should be using","username":"cbf","ts":"2017-05-05T12:39:36.378Z"}
{"msg":"(sorry to jump in @greg.haskins ...but let me amend that last comment.... how do make sure to enforce it in a natural non process-heavy way)... ","username":"muralisr","ts":"2017-05-05T12:39:54.557Z"}
{"msg":"the thing missing from IBM's tools is golang static security scanning","username":"cbf","ts":"2017-05-05T12:40:09.939Z"}
{"msg":"so I am researching what is available","username":"cbf","ts":"2017-05-05T12:40:16.795Z"}
{"msg":"@muralisr enforcement is US - the maintainers","username":"cbf","ts":"2017-05-05T12:40:45.545Z"}
{"msg":"right @cbf ... will read again and think about that aspect. but again, fwiw, my +1","username":"muralisr","ts":"2017-05-05T12:42:17.471Z"}
{"msg":"@cbf What about load and performance testing?","username":"smithbk","ts":"2017-05-05T13:14:08.142Z"}
{"msg":"I think that scale and performance testing, and long-running and chaotic testing are also important long term. It is likely these will get done. I think that the question comes down to - if push comes to shove, are those required or nice to have at this point. At some point, it will be important we don't regress in scale and performance (eg v1.1) but I wonder if we want to include that now","username":"cbf","ts":"2017-05-05T13:58:32.010Z"}
{"msg":"welcome other's input","username":"cbf","ts":"2017-05-05T13:58:36.926Z"}
{"msg":"In all fairness, we do not have baseline numbers/performance results.","username":"JonathanLevi","ts":"2017-05-05T14:33:58.722Z"}
{"msg":"So other than things that are obviously prohibitive... it is really important to get the right functionality out.","username":"JonathanLevi","ts":"2017-05-05T14:34:35.924Z"}
{"msg":"The correct functionality and good test coverage, at this point, seem to me the priority.","username":"JonathanLevi","ts":"2017-05-05T14:35:13.354Z"}
{"msg":"@cbf I have a setup that has been running for months and I opened some bugs that are related to things that can only be discovered when the peers run for a long period of time such as file descriptor leakage, and also: https://jira.hyperledger.org/browse/FAB-3525 \nw.r.t performance I'm also (slowly but surely) building something that enables to measure the gossip network performance (block dissemination metrics) ","username":"yacovm","ts":"2017-05-05T14:36:06.644Z"}
{"msg":"@yacovm, do you think you will be able to produce numbers that we should be use to define the exit criteria 1.0 (at this point) ?","username":"JonathanLevi","ts":"2017-05-05T14:37:12.221Z"}
{"msg":"@yacovm, do you think you will be able to produce numbers that we should use to define the exit criteria 1.0 (at this point) ?","username":"JonathanLevi","ts":"2017-05-05T14:37:12.221Z"}
{"msg":"Depends when ;)","username":"yacovm","ts":"2017-05-05T14:37:23.116Z"}
{"msg":"note that Scott and Dongming are also working on transferring their performance test framework to Fabric","username":"cbf","ts":"2017-05-05T14:37:53.956Z"}
{"msg":"But the biggest problem I see w.r.t performance is that the model itself is very dependent on transactions having different RWsets due to MVCC.\nIn order to achieve high throughput of total transactions you'll need to lie to yourself and have a bizarre test that updates lots of keys but not the same ones.","username":"yacovm","ts":"2017-05-05T14:38:19.514Z"}
{"msg":"But the biggest problem I see w.r.t performance is that the validation model itself is very dependent on transactions having different RWsets due to MVCC.\nIn order to achieve high throughput of total transactions you'll need to lie to yourself and have a bizarre test that updates lots of keys but not the same ones.","username":"yacovm","ts":"2017-05-05T14:38:19.514Z"}
{"msg":"Yes and there are a few more measures that being defined this days (e.g., the new wg from last week...)","username":"JonathanLevi","ts":"2017-05-05T14:38:30.984Z"}
{"msg":"again, I don't at all disagree that this is important or useful, just not a requirement for v1.0 necessarily if we want to deliver in < 2 months","username":"cbf","ts":"2017-05-05T14:39:09.435Z"}
{"msg":"My take is that setting these up as a strict criteria (with very well defined software + hardware specifications)... is dangerous.","username":"JonathanLevi","ts":"2017-05-05T14:39:38.273Z"}
{"msg":"This bit *In all fairness, we do not have baseline numbers/performance results.* from above.","username":"JonathanLevi","ts":"2017-05-05T14:40:31.004Z"}
{"msg":"We can should definitely look at these (I can tell you that in HACERA we definitely measure a lot of our performance on top of fabric)... but I would be very cautious regarding setting a hard/strict perf. requirement right now.","username":"JonathanLevi","ts":"2017-05-05T14:41:24.676Z"}
{"msg":"This includes loads, size/shape of clusters, etc. A lot of things are very new here. While careful with words, I'm also being realistic.","username":"JonathanLevi","ts":"2017-05-05T14:42:15.548Z"}
{"msg":"https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-May/000863.html","username":"greg.haskins","ts":"2017-05-05T15:00:06.584Z"}
{"msg":"Interesting paper on fuzz testing in Communications of the ACM. It is very practical with tools to generate ASNs and use ASN to generate fuzz tests to probe weaknesses of MongoDB (in particular); but this can be generalized to test any platform or interface. The title is \"MongoDB's JavaScript Fuzzer\" In Communications Of the ACM 05-2017, maybe this will help with setting up test frameworks for Fabric/Iroha/STL. Maybe you guys already have such frameworks and would like to expand-iterate on those.","username":"VipinB","ts":"2017-05-05T21:19:10.707Z"}
{"msg":"Copied from tsc channel to this","username":"VipinB","ts":"2017-05-05T21:19:25.534Z"}
{"msg":"Thanks @VipinB. FYI, our main frameworks for testing fabric (other than Golang's unit-test framework, Ginkgo/Gomega...) is a BDD framework (Behave) integration tests suites, and other tests that are using the SDKs.","username":"JonathanLevi","ts":"2017-05-05T21:56:36.207Z"}
{"msg":"Thanks @VipinB.\n\nFYI, our main frameworks for testing fabric (other than Golang's unit-test framework, Ginkgo/Gomega...) is a BDD framework (Behave) integration tests suite, and other tests that are using the SDKs.","username":"JonathanLevi","ts":"2017-05-05T21:57:07.956Z"}
{"msg":"Thanks @VipinB \n\nFYI, our main frameworks for testing fabric (other than Golang's unit-test framework, Ginkgo/Gomega...) is a BDD framework (Behave) integration tests suite, and other tests that are using the SDKs.","username":"JonathanLevi","ts":"2017-05-05T21:57:07.956Z"}
{"msg":"@VipinB ^^^","username":"JonathanLevi","ts":"2017-05-05T22:49:10.116Z"}
{"msg":"so, what is this I heard about no tcerts in 1.0?","username":"greg.haskins","ts":"2017-05-06T02:00:32.632Z"}
{"msg":"@lehors ^^^","username":"greg.haskins","ts":"2017-05-06T02:01:08.595Z"}
{"msg":"is that accurate?","username":"greg.haskins","ts":"2017-05-06T02:01:30.534Z"}
{"msg":"if so, what is the signature mechanism that replaced it?","username":"greg.haskins","ts":"2017-05-06T02:02:39.612Z"}
{"msg":"@greg.haskins you heard right","username":"yacovm","ts":"2017-05-06T08:08:03.099Z"}
{"msg":"@yacovm we are signing with something though, right (ecerts, perhaps)?","username":"greg.haskins","ts":"2017-05-06T12:30:32.244Z"}
{"msg":"or do we have no signatures at all?","username":"greg.haskins","ts":"2017-05-06T12:30:46.220Z"}
{"msg":"yeah","username":"yacovm","ts":"2017-05-06T12:58:11.581Z"}
{"msg":"the proposal is signed @greg.haskins ","username":"yacovm","ts":"2017-05-06T12:58:20.325Z"}
{"msg":"@yacovm ok, good..  I can live with ecert signature.  Having no signature at all would be a deal breaker ;)  Thanks for clarifying ","username":"greg.haskins","ts":"2017-05-06T13:00:29.218Z"}
{"msg":"We do check access control with the signature:\n```\nfunc (e *Endorser) checkACL(signedProp *pb.SignedProposal, chdr *common.ChannelHeader, shdr *common.SignatureHeader, hdrext *pb.ChaincodeHeaderExtension) error {\n\treturn e.policyChecker.CheckPolicy(chdr.ChannelId, policies.ChannelApplicationWriters, signedProp)\n}\n``` ","username":"yacovm","ts":"2017-05-06T13:02:04.778Z"}
{"msg":"We do check access control with the signature:\n\n```\nfunc (e *Endorser) checkACL(signedProp *pb.SignedProposal, chdr *common.ChannelHeader, shdr *common.SignatureHeader, hdrext *pb.ChaincodeHeaderExtension) error {\n\treturn e.policyChecker.CheckPolicy(chdr.ChannelId, policies.ChannelApplicationWriters, signedProp)\n}\n``` ","username":"yacovm","ts":"2017-05-06T13:02:04.778Z"}
{"msg":"We do check access control with the signature:\n\n```\nfunc (e *Endorser) checkACL(signedProp *pb.SignedProposal, chdr *common.ChannelHeader, shdr *common.SignatureHeader, hdrext *pb.ChaincodeHeaderExtension) error {\n\treturn e.policyChecker.CheckPolicy(chdr.ChannelId, policies.ChannelApplicationWriters, signedProp)\n}\n```","username":"yacovm","ts":"2017-05-06T13:02:04.778Z"}
{"msg":"@here https://wiki.hyperledger.org/projects/fabric/release_exit_criteria draft with feedback incorporated added to wiki","username":"cbf","ts":"2017-05-06T16:15:02.968Z"}
{"msg":"Wait, why don't we use the TCert to sign ?","username":"JonathanLevi","ts":"2017-05-08T11:41:25.556Z"}
{"msg":"I guess because it's not implemented","username":"yacovm","ts":"2017-05-08T11:43:30.905Z"}
{"msg":"@here Announcement: We hold a quick scrum call on Monday, Wednesday, Friday for Hyperledger-Fabric. The dial in for today at 9:30 EST is 1-888-426-6840 with passcode 33682113. We review what has passed or failed out of the daily build from CI, the highest priority bugs that must be addressed, CR's that need special attention from maintainers, unit test coverage, and serviceability. Also at the end of the call, developers sometimes talk about additional technical questions that should be addressed to stabilizing release where interlock needs to occur.  We also try to take notes as best we can in the fabric-peer-endorser-comitter channel for those that are not able to attend or are in a geographical location that is not a good time for them to dial in. ","username":"weeds","ts":"2017-05-08T12:17:24.317Z"}
{"msg":"I have something very important to discuss.\nThe full details are in the JIRA item below.\nhttps://jira.hyperledger.org/browse/FAB-3359\nThe short version is: \n1) In gossip we have a handshake that associates a TLS connection with a peer's identity.\nIn the past a security-related binding between the TLS session and the identity of the peer that used TLS-Unique (a TLS session binding)\n2) After a while it was decided to ditch that and to rely and mutual TLS since it's more safe (more bytes in the hash of a cert than in the TLS-Unique bytes)\n3) when TLS was introduced (but without mutual) I had to add a flag that overrides the check in case the client peer doesn't send the certificate (since no mutual TLS) otherwise gossip would be broken.\nAnd since then we always use SKIP_HANDSHALE=true in all the docker-compose files....\n3) It's almost time for V1.0 to be released and mutual TLS isn't going to happen anytime soon.\n4) Therefore I conclude that we *must* go back to the past implementation of the handshake.\nThe change that is requires is only to change 1 method (the handshake method) and its corresponding unit test + add a field to the protobuff message.\nOpinions are welcome: @mastersingh24 @C0rWin @elli-androulaki ","username":"yacovm","ts":"2017-05-08T13:13:04.283Z"}
{"msg":"Has joined the channel.","username":"zupan","ts":"2017-05-08T13:45:33.576Z","type":"uj"}
{"msg":"I don't understand the challenges with mutual auth.  Anyone know why we can't just enable that?","username":"greg.haskins","ts":"2017-05-08T18:49:11.249Z"}
{"msg":"[We struggle enough with getting people comfortable with one way TLS ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58) @greg.haskins ","username":"mastersingh24","ts":"2017-05-08T18:59:54.124Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Although I don't have an issue doing it for the official v1.0.0 release - requires a few changes in the core/comm package (since the version of grpc we use does not provide access to the auth info - aka client cert  :( )","username":"mastersingh24","ts":"2017-05-08T19:00:46.150Z"}
{"msg":"To be clear, I am primarily thinking of p2p","username":"greg.haskins","ts":"2017-05-08T19:16:58.223Z"}
{"msg":"Mutual auth for p2p is generally no more complex than standard TLS since the PKI covers the full mesh anyway","username":"greg.haskins","ts":"2017-05-08T19:17:52.998Z"}
{"msg":"If we want to stick with one way TLS at the edge, that's fine","username":"greg.haskins","ts":"2017-05-08T19:19:08.911Z"}
{"msg":"Yeah but Gari has a point-we have so many users that complain they cant connect with tls. What will happen if we introduce also that now they need to configure the client certs too and they will be the same(?) Certs? ","username":"yacovm","ts":"2017-05-08T19:20:16.109Z"}
{"msg":"I am on the fence here but i twll you that we have to change *somerhing* ","username":"yacovm","ts":"2017-05-08T19:20:42.563Z"}
{"msg":"I suppose we should clarify terms.  For the p2p I am thinking of, we already have the certs ","username":"greg.haskins","ts":"2017-05-08T19:21:13.100Z"}
{"msg":"(On mobile. Exxcuse typos)","username":"yacovm","ts":"2017-05-08T19:21:20.465Z"}
{"msg":"(Same)","username":"greg.haskins","ts":"2017-05-08T19:21:28.765Z"}
{"msg":"Generally speaking you can build a mutual auth peer-to-peer mesh with one key pair per node","username":"greg.haskins","ts":"2017-05-08T19:22:27.522Z"}
{"msg":"It's just a matter of config","username":"greg.haskins","ts":"2017-05-08T19:22:48.218Z"}
{"msg":"So there wouldn't be any extra cents.  Peers already have them for one way ","username":"greg.haskins","ts":"2017-05-08T19:23:26.681Z"}
{"msg":"Config is the hardest part of using fabric :expressionless:","username":"yacovm","ts":"2017-05-08T19:24:33.114Z"}
{"msg":"Agreed.  What I meant specifically though is the code configuration of the socket, not client facing per se","username":"greg.haskins","ts":"2017-05-08T19:36:36.527Z"}
{"msg":"I've pulled the latest master (tip: 8f4b6a96 - (HEAD -> master, origin/master, origin/HEAD) Merge \"[FAB-3258] fwk test chaincode functionality Part2\" (58 minutes ago) and it seems that the E2E CLI test is broken.","username":"kostas","ts":"2017-05-08T19:39:21.125Z"}
{"msg":"I've pulled the latest master (tip: `8f4b6a96 - (HEAD -> master, origin/master, origin/HEAD) Merge \"[FAB-3258] fwk test chaincode functionality Part2\" (58 minutes ago)`) and it seems that the E2E CLI test is broken.","username":"kostas","ts":"2017-05-08T19:39:21.125Z"}
{"msg":"Two quick questions:","username":"kostas","ts":"2017-05-08T19:39:24.953Z"}
{"msg":"1. Are we aware of this","username":"kostas","ts":"2017-05-08T19:39:30.236Z"}
{"msg":"2. Why did we merge the breaking change to begin with","username":"kostas","ts":"2017-05-08T19:39:50.881Z"}
{"msg":"@kostas that CR passed both e2e cli and UT (look for \"=============E2E TEST PASSED==========\" in the CI console for the CR)","username":"muralisr","ts":"2017-05-08T19:47:58.899Z"}
{"msg":"@kostas  - https://gerrit.hyperledger.org/r/#/c/9103/","username":"mastersingh24","ts":"2017-05-08T19:50:46.087Z"}
{"msg":"@muralisr: As far as I can tell, CI reports an E2E failure on this CR: https://gerrit.hyperledger.org/r/#/c/9045/","username":"kostas","ts":"2017-05-08T19:55:06.453Z"}
{"msg":"it does... but if you dig in, you should see","username":"muralisr","ts":"2017-05-08T19:56:22.230Z"}
{"msg":"=============E2E TEST PASSED==========","username":"muralisr","ts":"2017-05-08T19:56:23.271Z"}
{"msg":"so he E2E CLI passed but other e2e failed","username":"muralisr","ts":"2017-05-08T19:56:41.107Z"}
{"msg":"so the E2E CLI passed but other e2e failed","username":"muralisr","ts":"2017-05-08T19:56:41.107Z"}
{"msg":"git fetch ssh://kchristidis@gerrit.hyperledger.org:29418/fabric refs/changes/03/9103/1 && git checkout FETCH_HEAD","username":"kostas","ts":"2017-05-08T19:57:11.746Z"}
{"msg":"https://jenkins.hyperledger.org/job/fabric-merge-end-2-end-x86_64/447/console","username":"kostas","ts":"2017-05-08T19:57:21.640Z"}
{"msg":"Am I looking at the wrong place? I'm grepping for that string and come up empty.","username":"kostas","ts":"2017-05-08T19:57:34.509Z"}
{"msg":"click on \"full log\" on top of page","username":"muralisr","ts":"2017-05-08T19:57:52.198Z"}
{"msg":"and search for \"E2E TEST PASSED\"","username":"muralisr","ts":"2017-05-08T19:58:04.885Z"}
{"msg":"I do not see a \"full log\" option.","username":"kostas","ts":"2017-05-08T19:58:48.464Z"}
{"msg":"looks like this in my browser","username":"muralisr","ts":"2017-05-08T19:59:24.286Z"}
{"msg":"","username":"muralisr","ts":"2017-05-08T19:59:43.442Z","attachments":[{"title":"File Uploaded: Clipboard","title_link":"/file-upload/RQiKMJPcwkm9Q3kTB/Clipboard","image_url":"/file-upload/RQiKMJPcwkm9Q3kTB/Clipboard","image_type":"image/png","image_size":79562,"url":"/file-upload/RQiKMJPcwkm9Q3kTB/Clipboard","remote":false,"fileId":"RQiKMJPcwkm9Q3kTB"}]}
{"msg":"(Got it now, thank you.)","username":"kostas","ts":"2017-05-08T20:01:37.343Z"}
{"msg":"sure thing","username":"muralisr","ts":"2017-05-08T20:01:47.364Z"}
{"msg":"[OK - so I added some comments to https://jira.hyperledger.org/browse/FAB-3359  but the TLDR is that I think we should go with Yacov's proposal to use both tls-unique and client certificates for p2p with gossip ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58) @greg.haskins ","username":"mastersingh24","ts":"2017-05-08T22:46:29.419Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[OK - so I added some comments to https://jira.hyperledger.org/browse/FAB-3359  but the TLDR is that I think we should go with Yacov's proposal to use both tls-unique and client certificates for p2p with gossip.  If we pick one, I'd go with mutual TLS ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58) @greg.haskins ","username":"mastersingh24","ts":"2017-05-08T22:46:29.419Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[OK - so I added some comments to https://jira.hyperledger.org/browse/FAB-3359  but the TLDR is that I think we should go with  client certificates for p2p with gossip. ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58) @greg.haskins ","username":"mastersingh24","ts":"2017-05-08T22:46:29.419Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yzS6NnpcuDN62iJ58","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Please add your votes / dissents / comments to the JIRA","username":"mastersingh24","ts":"2017-05-08T22:46:50.209Z"}
{"msg":"@mastersingh24 You guys obviously have a handle on the issues between tls-unique and proxy considerations.  However, one thing that didn't make sense to me was your comment \"having the peer(s) use their MSP signing cert as their client certificate\"","username":"greg.haskins","ts":"2017-05-09T01:18:02.933Z"}
{"msg":"why wouldnt you simply use the same TLS keys for both client and server?","username":"greg.haskins","ts":"2017-05-09T01:18:27.675Z"}
{"msg":"thats how I've always built mesh applications","username":"greg.haskins","ts":"2017-05-09T01:18:58.184Z"}
{"msg":"to be clear: i am referring to roles on one node","username":"greg.haskins","ts":"2017-05-09T01:19:19.041Z"}
{"msg":"not two nodes: that would be dumb, heh","username":"greg.haskins","ts":"2017-05-09T01:19:26.919Z"}
{"msg":"meaning, why can you simply use the TLS .crt/.key material that is configured for _receiving_ connections also for your outbound connections?","username":"greg.haskins","ts":"2017-05-09T01:20:32.986Z"}
{"msg":"meaning, why can't you simply use the TLS .crt/.key material that is configured for _receiving_ connections also for your outbound connections?","username":"greg.haskins","ts":"2017-05-09T01:20:32.986Z"}
{"msg":"I dont really know the internal peer/gossip topology, so perhaps that has something to do with it","username":"greg.haskins","ts":"2017-05-09T01:22:41.445Z"}
{"msg":"my assumption is these things form a mesh-like structure, but perhaps it looks different","username":"greg.haskins","ts":"2017-05-09T01:23:01.274Z"}
{"msg":"[actually we should be able to do that and I probably should have written that ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=CEgQ7e7aZMDNvronY) @greg.haskins ","username":"mastersingh24","ts":"2017-05-09T07:03:14.647Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=CEgQ7e7aZMDNvronY","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=CEgQ7e7aZMDNvronY","remote":true,"fileId":null,"fileName":null}]}
{"msg":"And that's pretty much how I was doing things in some of the peer tests already","username":"mastersingh24","ts":"2017-05-09T07:04:25.998Z"}
{"msg":"If you have an org A you'll have to configure the TLS cert pool of the reverse proxy of orgA to accept TLS certs of other orgs (i.e org B) up-front, right? (I don't think nghttpx understand config blocks)","username":"yacovm","ts":"2017-05-09T07:10:27.833Z"}
{"msg":"@mastersingh24  If you have an org A you'll have to configure the TLS cert pool of the reverse proxy of orgA to accept TLS certs of other orgs (i.e org B ) up-front, right? (I don't think nghttpx understand config blocks)","username":"yacovm","ts":"2017-05-09T07:10:27.833Z"}
{"msg":"@mastersingh24  If you have an org A you'll have to configure the TLS cert pool of the reverse proxy of orgA to accept TLS certs of other orgs (i.e org B ) up-front, right? (I don't think nghttpx understands config blocks)","username":"yacovm","ts":"2017-05-09T07:10:27.833Z"}
{"msg":"Also- since we'll have mutual TLS - so if a peer from orgA \"dials\" to orgB, then orgB's reverse proxy would need to share the cert and private key with the peer in orgA no?","username":"yacovm","ts":"2017-05-09T07:12:06.094Z"}
{"msg":"Also- since we'll have mutual TLS - so if a peer from orgA \"dials\" to orgB, then orgB's reverse proxy would need to share the cert and private key with the peer in orgB  he is proxying to no?","username":"yacovm","ts":"2017-05-09T07:12:06.094Z"}
{"msg":"Another question - this is for TLS proxy-ing, but what about termination? I thought that in termination the peers don't even see TLS? How would that work?","username":"yacovm","ts":"2017-05-09T07:13:26.030Z"}
{"msg":"[ OrgB's reverse proxy would need to have a cert issued by the CA in OrgB's MSP but the proxy and the peer need not share the same key/cert pair ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=zvhyYihbKefSjWfPd) @yacovm ","username":"mastersingh24","ts":"2017-05-09T07:21:22.446Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=zvhyYihbKefSjWfPd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=zvhyYihbKefSjWfPd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"But we'll need to write all of this up and try it out","username":"mastersingh24","ts":"2017-05-09T07:21:54.112Z"}
{"msg":"The trust issue will be tricky for reverse proxies","username":"mastersingh24","ts":"2017-05-09T07:22:06.603Z"}
{"msg":"Hmm so for that you'll need to add support in the code to make the certificate of the initiating peer to be passed to the responding peer via HTTP headers?","username":"yacovm","ts":"2017-05-09T07:22:18.171Z"}
{"msg":"and vice-versa? ","username":"yacovm","ts":"2017-05-09T07:22:38.720Z"}
{"msg":"because the gossip code signs the message that contains the cert hash","username":"yacovm","ts":"2017-05-09T07:22:52.818Z"}
{"msg":"If we terminate TLS at the proxy, we'll have to pass the client cert to the peer via a header","username":"mastersingh24","ts":"2017-05-09T07:23:00.268Z"}
{"msg":"If we use SSL/TLS bridging (common for load balancers) which operates at layer 2/3, then the proxy actually does not need any crypto material as termination would happen at the peer","username":"mastersingh24","ts":"2017-05-09T07:23:45.251Z"}
{"msg":"But anything at Layer 4 or above would be termination","username":"mastersingh24","ts":"2017-05-09T07:24:09.206Z"}
{"msg":"A true reverse proxy is Layer 7 so that's the case we will have to deal with in terms of describing how to get it working  ","username":"mastersingh24","ts":"2017-05-09T07:24:51.394Z"}
{"msg":"I also don't understand why can't the customers always use passthrough? (just TCP forwarding?)","username":"yacovm","ts":"2017-05-09T07:30:08.868Z"}
{"msg":"Depends on what you are trying to achieve.  For example, in the Bluemix service for v0.6, we actually used reverse proxies to do host header based routing - which meant we needed to terminate at the proxy","username":"mastersingh24","ts":"2017-05-09T07:34:58.256Z"}
{"msg":">  If we use SSL/TLS bridging (common for load balancers) which operates at layer 2/3, then the proxy actually does not need any crypto material as termination would happen at the peer \nSo the client connects to the proxy server and it decrypts and then re-encrypts the traffic, but on the receiver peer side it expects the TLS cert of the initiator peer, but instead it would see the TLS cert of the proxy? \nOr should we write (in the future) in the code that we may accept that the cert would appear in the headers?","username":"yacovm","ts":"2017-05-09T07:35:00.665Z"}
{"msg":"> we actually used reverse proxies to do host header based routing - which meant we needed to terminate at the proxy \nAh right, gorouter","username":"yacovm","ts":"2017-05-09T07:35:26.101Z"}
{"msg":"```\nOr should we write (in the future) in the code that we may accept that the cert would appear in the headers?\n```\nYeah - this is what I meant","username":"mastersingh24","ts":"2017-05-09T07:35:36.123Z"}
{"msg":"understood","username":"yacovm","ts":"2017-05-09T07:35:42.268Z"}
{"msg":"Yeah - gorouter from cf","username":"mastersingh24","ts":"2017-05-09T07:35:44.758Z"}
{"msg":"thanks ","username":"yacovm","ts":"2017-05-09T07:35:45.148Z"}
{"msg":"BTW, as an aside, SSL/TLS is considered a layer 5 or 6 (subject to the interpretation of a Session in the original OSI).","username":"JonathanLevi","ts":"2017-05-09T07:39:24.519Z"}
{"msg":"It certainly sits on top of TCP/IP which is considered layer 4 by itself... (which is why BMX needed the rev-proxy ...).","username":"JonathanLevi","ts":"2017-05-09T07:40:34.857Z"}
{"msg":"Once the secure socket / secure transport is established, the handshake is completed and there is less room to maneuver...","username":"JonathanLevi","ts":"2017-05-09T07:41:43.811Z"}
{"msg":"----","username":"JonathanLevi","ts":"2017-05-09T07:46:03.334Z"}
{"msg":"I suspect I misinterpret SSL/TLS bridging?","username":"JonathanLevi","ts":"2017-05-09T07:46:32.387Z"}
{"msg":"Are we talking about a VPN/tunneling? A Cisco-like routing with their \"Deep Packet Insp.\"?","username":"JonathanLevi","ts":"2017-05-09T07:47:38.923Z"}
{"msg":"No, I think it's just to decrypt your TLS traffic, perform some access control, and then re-encrypt it and pass it to the server peer","username":"yacovm","ts":"2017-05-09T07:55:23.514Z"}
{"msg":"Has joined the channel.","username":"rock_martin","ts":"2017-05-09T10:27:50.386Z","type":"uj"}
{"msg":"","username":"rock_martin","ts":"2017-05-09T11:31:04.993Z","attachments":[{"title":"File Uploaded: Screenshot_20170509_153144.png","title_link":"/file-upload/yWNyTpXFJkytp8Z2z/Screenshot_20170509_153144.png","image_url":"/file-upload/yWNyTpXFJkytp8Z2z/Screenshot_20170509_153144.png","image_type":"image/png","image_size":132776,"url":"/file-upload/yWNyTpXFJkytp8Z2z/Screenshot_20170509_153144.png","remote":false,"fileId":"yWNyTpXFJkytp8Z2z"}]}
{"msg":"In typical enterprise customer scenario ,you do TLS bridging where TLS is terminated at reverse proxy and another TLS session starts from Reverse Proxy to back end. So , from client perspective , the mutual auth TLS terminates at reverse proxy. I think , we should design TLS mutual auth , the way it is being usually implemented. Providing customization over top of it does not seems to be required.","username":"ashutosh_kumar","ts":"2017-05-09T12:42:53.540Z"}
{"msg":"Do we have a documented process that specifies how the maintainers and the +2/-2 works for pull requests?","username":"tkuhrt","ts":"2017-05-09T18:42:04.535Z"}
{"msg":"Hi Tracy, I believe this document (which could use updating), while mentioning maintainers and links to Gerrit is focused a lot more on contribution from users... ","username":"JonathanLevi","ts":"2017-05-09T19:00:23.964Z"}
{"msg":"https://github.com/hyperledger/fabric/blob/master/docs/source/CONTRIBUTING.rst","username":"JonathanLevi","ts":"2017-05-09T19:00:29.746Z"}
{"msg":"In the sense that it explains the PR process, with links/info regarding Gerrit, but we could probably elaborate a lot more regarding the 2 +2 requirement, etc\n","username":"JonathanLevi","ts":"2017-05-09T19:02:47.343Z"}
{"msg":"@tkuhrt ","username":"JonathanLevi","ts":"2017-05-09T19:03:15.973Z"}
{"msg":"@JonathanLevi : I found that, and I didn't see any real details about how a contribution gets approved.  That is what drove my question.  I was under the impression that each PR requires two +2 requirements, but I saw one today that was merged with only a single +2.","username":"tkuhrt","ts":"2017-05-09T19:17:38.709Z"}
{"msg":"@JonathanLevi : I found that, and I didn't see any real details about how a contribution gets approved.  That is what drove my question.  I was under the impression that each PR requires two +2 before being merged, but I saw one today that was merged with only a single +2.","username":"tkuhrt","ts":"2017-05-09T19:17:38.709Z"}
{"msg":"@tkuhrt so in node SDK we merge with only 1","username":"yacovm","ts":"2017-05-09T19:19:25.231Z"}
{"msg":"in fabric with 2","username":"yacovm","ts":"2017-05-09T19:19:34.556Z"}
{"msg":"Ah...that is confusing.  :)","username":"tkuhrt","ts":"2017-05-09T19:19:45.520Z"}
{"msg":"Is the system set up to recognize the difference for the different repositories?","username":"tkuhrt","ts":"2017-05-09T19:20:30.130Z"}
{"msg":"also in java SDK","username":"yacovm","ts":"2017-05-09T19:20:34.552Z"}
{"msg":"also in java SDK (only 1)","username":"yacovm","ts":"2017-05-09T19:20:34.552Z"}
{"msg":"yes","username":"yacovm","ts":"2017-05-09T19:20:44.100Z"}
{"msg":"Okay...thanks, @yacovm.","username":"tkuhrt","ts":"2017-05-09T19:20:58.103Z"}
{"msg":"np. Also in fabric-ca we need 2 +2, for celli is 1 +2","username":"yacovm","ts":"2017-05-09T19:21:28.369Z"}
{"msg":"np. Also in fabric-ca we need 2 +2, for cello is 1 +2","username":"yacovm","ts":"2017-05-09T19:21:28.369Z"}
{"msg":"Wow...okay.  Is there a way for me to find out the rules from looking at Gerrit?","username":"tkuhrt","ts":"2017-05-09T19:22:06.907Z"}
{"msg":"yeah that's what I did for java and for cello","username":"yacovm","ts":"2017-05-09T19:23:10.006Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/q/status:merged","username":"yacovm","ts":"2017-05-09T19:23:27.036Z"}
{"msg":"now you can just open by project and see","username":"yacovm","ts":"2017-05-09T19:23:39.500Z"}
{"msg":"@tkuhrt not directly. You could check out each project, then checkout meta/config and look at rules.pl http://www.lowlevelmanager.com/2012/09/modify-submit-type-for-gerrit-project.html","username":"rjones","ts":"2017-05-09T19:23:48.175Z"}
{"msg":"Thanks, @rjones ","username":"tkuhrt","ts":"2017-05-09T19:24:48.937Z"}
{"msg":"thought worth noting ..... all 3 CI jobs pass with https://gerrit.hyperledger.org/r/#/c/9153","username":"muralisr","ts":"2017-05-09T21:29:06.789Z"}
{"msg":"","username":"muralisr","ts":"2017-05-09T21:29:25.677Z","attachments":[{"title":"File Uploaded: Clipboard","title_link":"/file-upload/jkueZPLaHTq5ieZF8/Clipboard","image_url":"/file-upload/jkueZPLaHTq5ieZF8/Clipboard","image_type":"image/png","image_size":50142,"url":"/file-upload/jkueZPLaHTq5ieZF8/Clipboard","remote":false,"fileId":"jkueZPLaHTq5ieZF8"}]}
{"msg":"@muralisr: thanks (& merged)","username":"JonathanLevi","ts":"2017-05-09T23:27:36.419Z"}
{"msg":"Scrum meeting will start at 9:30AM EST (in 25 minutes). Following is the dial in which is the same that we sent out in the Hyperledger e-mail where we announced this will occur every Monday, Wednesday, and Friday: (1-888-426-6840 / 33682113). We will be posting notes on the fabric-peer-endorser-committer channel . Thank you","username":"weeds","ts":"2017-05-10T13:07:53.541Z"}
{"msg":"Has joined the channel.","username":"bkvellanki","ts":"2017-05-10T14:23:48.418Z","type":"uj"}
{"msg":"@here, please see my comment on https://jira.hyperledger.org/browse/FAB-3040","username":"cbf","ts":"2017-05-10T16:23:02.429Z"}
{"msg":"we need to wrap this up","username":"cbf","ts":"2017-05-10T16:23:09.945Z"}
{"msg":"https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-May/000925.html","username":"greg.haskins","ts":"2017-05-10T17:25:02.430Z"}
{"msg":"hi all, i wonder is that possible to range query of the blockchain, as currently we only have chain.queryBlockByNumber(), but sometimes we might need to go through all the block sequentially to check all data, and query only one block at a time is too inefficient for that","username":"kelvinzhong","ts":"2017-05-11T06:16:18.467Z"}
{"msg":"@kelvinzhong copied the above to fabric-ledger channel","username":"muralisr","ts":"2017-05-11T12:09:19.107Z"}
{"msg":"@maintainers ( @greg.haskins @bmos299 @muralisr @jimthematrix @JonathanLevi @rjones @cbf )\nIn fabric repo, we have /test directory containing all integration tests that pulling in fabric-ca, fabric-sdk to compose the various testing environments.  This is all working fine, but looking at the containment of repos, Barry @bmos299 and I thought we should move /test to its own repo -- fabric-test -- rather than burying it in fabric repo.  Thoughts?","username":"binhn","ts":"2017-05-11T14:09:51.488Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Q9WpaStPRvbe2Pueo) You asked this in the #fabric-sdk-java  I suggested opening up a JIRA","username":"rickr","ts":"2017-05-11T14:10:17.171Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Q9WpaStPRvbe2Pueo","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Q9WpaStPRvbe2Pueo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Let's not use this channel for ^^^","username":"JonathanLevi","ts":"2017-05-11T14:11:11.275Z"}
{"msg":"@binhn @bmos299 I think post alpha2 that would make sense","username":"cbf","ts":"2017-05-11T14:11:17.740Z"}
{"msg":"@kelvinzhong ^^^","username":"JonathanLevi","ts":"2017-05-11T14:11:21.738Z"}
{"msg":"however, let's not make churn at this delicate moment","username":"cbf","ts":"2017-05-11T14:11:39.006Z"}
{"msg":"@cbf agreed to wait after alpha - thanks","username":"binhn","ts":"2017-05-11T14:12:48.331Z"}
{"msg":"@binhn agree with moving integration tests to their own repo, but would suggest calling it \"fabric-integration\" so it's clear all the unit tests still reside in fabric itself and this separate one is just for cross-component tests (aka integration)","username":"jimthematrix","ts":"2017-05-11T14:46:39.490Z"}
{"msg":"@binhn @cbf disagree - are any of the integration tests independent of the fabric repo? if not, I would leave it alone. Having to always check out _yet another repo_ to run integration tests seems non-optimal.","username":"rjones","ts":"2017-05-11T15:42:02.791Z"}
{"msg":"@rjones yeah, agreed not optimal from operation, but my thought was on organization: the integration tests are pulling code from other repos (fabric-ca, fabric-node-sdk, fabric-java-sdk) into fabric base, which wouldn't seem right to me.  \n\nFabric-ca is an independent CA implementation even though we prefix it with fabric-, it has no run-time dependencies on fabric.  Fabric-*-sdk are built for fabric and does depend on fabric for operations.","username":"binhn","ts":"2017-05-11T16:11:05.995Z"}
{"msg":"@rjones im thinking if the test uses the cli we would leave in the /fabric/test folder.  if it uses the sdk we move to the new fabric-integration repo.  ....and i will say, i'd like to wait as we are totally heads down on creating test scenarios, getting the tools working and plugging into the CI","username":"bmos299","ts":"2017-05-11T16:23:27.147Z"}
{"msg":"@bmos299 agreed with waiting","username":"rjones","ts":"2017-05-11T16:23:48.194Z"}
{"msg":"@rjones what do you mean \"check out\"? you mean if you are a developer you need to have another repo clone locally to run the tests? ","username":"cbf","ts":"2017-05-11T17:20:38.593Z"}
{"msg":"yes.","username":"rjones","ts":"2017-05-11T17:20:57.225Z"}
{"msg":"boo hoo?","username":"cbf","ts":"2017-05-11T17:21:04.444Z"}
{"msg":";-)","username":"cbf","ts":"2017-05-11T17:21:09.074Z"}
{"msg":"if they depend on fabric, I don't see the point unless they'll have a distinct maintainer list.","username":"rjones","ts":"2017-05-11T17:21:30.568Z"}
{"msg":"in all seriousness, the intention for this would be to test against build artifacts (dockerhub or nexus hosted) ","username":"cbf","ts":"2017-05-11T17:22:05.726Z"}
{"msg":"ah, this makes much more sense. Objection withdrawn","username":"rjones","ts":"2017-05-11T17:22:31.483Z"}
{"msg":"it would have dependencies on fabric, fabric-sdk-*, fabric-ca, and whatever comes next","username":"cbf","ts":"2017-05-11T17:22:33.360Z"}
{"msg":"hence @jimthematrix suggestion 'fabric-integration' makes total sense","username":"cbf","ts":"2017-05-11T17:23:16.091Z"}
{"msg":"@here https://gerrit.hyperledger.org/r/#/c/9267/ <- proposal for how we will handle feature/enhancement proposals - please review and +1 if maintainer ... let's see if we can get 5 or more +1s to merge","username":"cbf","ts":"2017-05-12T00:53:10.152Z"}
{"msg":"@here I would suggest that until we cut the alpha2 branch, that we ONY merge the three remaining items proposed in the comment to FAB-3040","username":"cbf","ts":"2017-05-12T11:35:44.703Z"}
{"msg":"Please do not submit any CRs until we have sorted things out","username":"cbf","ts":"2017-05-12T11:36:20.529Z"}
{"msg":"@cbf @JonathanLevi I was a little confused by FAB-3040.  Seems like the intent of FAB-3040 was for 1.0 GA master plan / checklist, but we are now using it for alpha2 items.  Should we split it into two work items to make it more clear for everybody?","username":"dave.enyeart","ts":"2017-05-12T13:44:24.342Z"}
{"msg":"@dave.enyeart just focus on the blockers please","username":"cbf","ts":"2017-05-12T13:44:58.366Z"}
{"msg":"yes, confusing but ignore 1.0 for now","username":"cbf","ts":"2017-05-12T13:45:08.399Z"}
{"msg":"blockers was what we were targeting for alpha2","username":"cbf","ts":"2017-05-12T13:45:19.364Z"}
{"msg":"the discussion is currently happening in #fabric-release ","username":"cbf","ts":"2017-05-12T13:45:40.864Z"}
{"msg":"ok, just seemed a separate work item would be warranted for alpha2","username":"dave.enyeart","ts":"2017-05-12T13:45:42.628Z"}
{"msg":"I created one","username":"cbf","ts":"2017-05-12T13:45:53.060Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-3891","username":"cbf","ts":"2017-05-12T13:46:05.176Z"}
{"msg":"cool","username":"dave.enyeart","ts":"2017-05-12T13:46:10.849Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-release?msg=3NKJEcXdfxaFoPTRi","username":"JonathanLevi","ts":"2017-05-12T14:21:18.886Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=3NKJEcXdfxaFoPTRi","url":"https://chat.hyperledger.org/channel/fabric-release?msg=3NKJEcXdfxaFoPTRi","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Any objections to getting these merged?\n\n\n\nhttps://jira.hyperledger.org/browse/FAB-3737 \ngenerate changelog for v1.0.0-alpha2 \nhttps://gerrit.hyperledger.org/r/#/c/9167\n\nhttps://jira.hyperledger.org/browse/FAB-3218 \nSync Java/Golang ChaincodeStub interface\nhttps://gerrit.hyperledger.org/r/#/c/8529\n\nhttps://jira.hyperledger.org/browse/FAB-3850 \ndon't allow Java CC access for alpha2 as its not quite usable yet.\nhttps://gerrit.hyperledger.org/r/#/c/9245","username":"JonathanLevi","ts":"2017-05-12T14:21:32.135Z"}
{"msg":"Any objections to getting these merged?\n\nhttps://jira.hyperledger.org/browse/FAB-3737 \ngenerate changelog for v1.0.0-alpha2 \nhttps://gerrit.hyperledger.org/r/#/c/9167\n\nhttps://jira.hyperledger.org/browse/FAB-3218 \nSync Java/Golang ChaincodeStub interface\nhttps://gerrit.hyperledger.org/r/#/c/8529\n\nhttps://jira.hyperledger.org/browse/FAB-3850 \ndon't allow Java CC access for alpha2 as its not quite usable yet.\nhttps://gerrit.hyperledger.org/r/#/c/9245","username":"JonathanLevi","ts":"2017-05-12T14:21:32.135Z"}
{"msg":"I just want Greg to look at https://gerrit.hyperledger.org/r/#/c/9167/","username":"cbf","ts":"2017-05-12T14:23:16.049Z"}
{"msg":"Hi all - a fabric feature proposal has been posted - Private Channel Data. Please see https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-May/000949.html for more information. Feedback welcome!","username":"troyronda","ts":"2017-05-12T20:37:20.460Z"}
{"msg":"thx","username":"cbf","ts":"2017-05-12T20:48:37.377Z"}
{"msg":"Just to be clear, we are still in *CODE FREEZE*. No merging of anything other than stuff that is in agreement (in writing), until we have the release published and we declare otherwise.","username":"JonathanLevi","ts":"2017-05-14T18:44:50.487Z"}
{"msg":"maintainers: I request that you review this JIRA for consideration for 1.0: https://jira.hyperledger.org/browse/FAB-3118","username":"greg.haskins","ts":"2017-05-15T18:43:40.453Z"}
{"msg":"without it, it will not be possible to support fabric for use with most docker orchestration engines","username":"greg.haskins","ts":"2017-05-15T18:44:07.152Z"}
{"msg":"(not to mention, it makes the system much more awkward to use, even when a workaround is possible","username":"greg.haskins","ts":"2017-05-15T18:44:41.961Z"}
{"msg":"also, we should talk about the mechanics/rules of such a proposal","username":"greg.haskins","ts":"2017-05-15T19:28:28.868Z"}
{"msg":"for instance: use the JIRA vote? how many votes needed? etc","username":"greg.haskins","ts":"2017-05-15T19:28:41.724Z"}
{"msg":"@greg.haskins isn't this sort of a bug fix?","username":"yacovm","ts":"2017-05-15T19:32:36.899Z"}
{"msg":"This is a fix as a result of someone encountering an issue and having to do a workaround","username":"yacovm","ts":"2017-05-15T19:33:15.013Z"}
{"msg":"It is def a bug fix...however, by my understanding, we want to have scrutiny over what does or doesnt go in to the tree right now","username":"greg.haskins","ts":"2017-05-15T19:38:24.403Z"}
{"msg":"i understand some things are clearly a new feature, and some things are clearly a bug fix (such as this) but theres also the question of risk/reward/severity, etc","username":"greg.haskins","ts":"2017-05-15T19:38:58.581Z"}
{"msg":"but to your point, perhaps this isnt the best example to give the \"lets discuss and decide\" policy a workout","username":"greg.haskins","ts":"2017-05-15T19:40:21.127Z"}
{"msg":"1) I have to say that I cannot say if we can instead publish a workaround because I'm not a typical user of the project and therefore I do not know how people approach to install their *fabric-dev-env* for their use cases.\nI know that not all bugs are going to be fixed for v1.0 and some will have workarounds publishes instead.\n2) I guess another thing to consider for this and in general is - given a bug fix, how confident are we that merging it doesn't break anything. ","username":"yacovm","ts":"2017-05-15T20:00:28.992Z"}
{"msg":"could one of the maintainers please remove jobbuilder from https://gerrit.hyperledger.org/r/#/c/8887 ?","username":"lehors","ts":"2017-05-15T20:11:48.312Z"}
{"msg":"I didn't have [ci-skip] in my initial push and it triggered the build, and does so everytime I patched my CR - it's no big deal but I feel bad wasting CPU...","username":"lehors","ts":"2017-05-15T20:13:08.597Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=xmWBofSQD72SW6Jpd) @lehors done","username":"C0rWin","ts":"2017-05-15T20:13:47.751Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=xmWBofSQD72SW6Jpd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=xmWBofSQD72SW6Jpd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"thanks! :)","username":"lehors","ts":"2017-05-15T20:13:56.096Z"}
{"msg":"yw, let's stop C02 pollution ","username":"C0rWin","ts":"2017-05-15T20:14:50.128Z"}
{"msg":"wait, it's still there?","username":"lehors","ts":"2017-05-15T20:15:59.917Z"}
{"msg":"do I have my [ci-skip] in the wrong place?","username":"lehors","ts":"2017-05-15T20:16:44.294Z"}
{"msg":"I thought it was anywhere","username":"lehors","ts":"2017-05-15T20:16:49.525Z"}
{"msg":"I'm confused now :(","username":"lehors","ts":"2017-05-15T20:17:35.053Z"}
{"msg":"I do not think that [ci-skip] works anymore","username":"C0rWin","ts":"2017-05-15T20:18:44.432Z"}
{"msg":"oh","username":"lehors","ts":"2017-05-15T20:18:52.972Z"}
{"msg":"just removed jobbuild second time, but it appears again","username":"C0rWin","ts":"2017-05-15T20:19:27.715Z"}
{"msg":"Even if it works, it spawns a new VM anyway. \nskip-ci works by having jenkins spin a new VM, read the commit message from the env var, and then abort the build.","username":"yacovm","ts":"2017-05-15T20:19:37.691Z"}
{"msg":"so I am not sure it's doable :/","username":"C0rWin","ts":"2017-05-15T20:19:39.411Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=q8pDbZqpWdvobBuZP) @yacovm such a waste","username":"C0rWin","ts":"2017-05-15T20:20:01.943Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=q8pDbZqpWdvobBuZP","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=q8pDbZqpWdvobBuZP","remote":true,"fileId":null,"fileName":null}]}
{"msg":"oh well","username":"lehors","ts":"2017-05-15T20:20:54.355Z"}
{"msg":"need to do more work to be greener :)","username":"C0rWin","ts":"2017-05-15T20:21:23.145Z"}
{"msg":"yeah :)","username":"lehors","ts":"2017-05-15T20:21:45.976Z"}
{"msg":"of course we could do worse and be working on bitcoin ;-)","username":"lehors","ts":"2017-05-15T20:22:14.188Z"}
{"msg":"@lehors ci-skip was removed because the plugin is broken","username":"rjones","ts":"2017-05-15T20:28:32.606Z"}
{"msg":"ok, good to know.","username":"lehors","ts":"2017-05-15T20:29:29.161Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=SRf9HaiqFJdJdgaky) @yacovm With the caveat that \"only a fool is certain\", I am comfortable with the risk/reward ratio on this one","username":"greg.haskins","ts":"2017-05-15T20:58:08.247Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=SRf9HaiqFJdJdgaky","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=SRf9HaiqFJdJdgaky","remote":true,"fileId":null,"fileName":null}]}
{"msg":"The reason I added (2) is that we have areas in the project that are seriously lacking in not only code coverage but in ability to write comprehensive and scenario-based unit tests, and on the other hand we have areas where it's possible to create custom made scenarios/flows in tests and this *should* be a part of the decision whether to merge something or not.\nI wasn't referring to whether one feels confident with his change set :)","username":"yacovm","ts":"2017-05-15T21:02:40.162Z"}
{"msg":"The reason I added (2) is that we have areas in the project that are seriously lacking in not only code coverage but in ability to write comprehensive and scenario-based unit tests, and on the other hand we have areas where it's possible to create custom made scenarios/flows in tests and this *should* be a part of the decision whether to merge something or not at the end-game.\nI wasn't referring to whether one feels confident with his change set :)","username":"yacovm","ts":"2017-05-15T21:02:40.162Z"}
{"msg":"The reason I added (2) is that we have areas in the project that are seriously lacking in not only code coverage but in ability to write comprehensive and scenario-based unit tests (*core/container/* is such an area), and on the other hand we have areas where it's possible to create custom made scenarios/flows in tests and this *should* be a part of the decision whether to merge something or not at the end-game.\nI wasn't referring to whether one feels confident with his change set :)","username":"yacovm","ts":"2017-05-15T21:02:40.162Z"}
{"msg":"The reason I added (2) is that we have areas in the project that are seriously lacking in not only code coverage but in ability to write comprehensive and scenario-based unit tests ( *core/container/* is such an area), and on the other hand we have areas where it's possible to create custom made scenarios/flows in tests and this *should* be a part of the decision whether to merge something or not at the end-game.\nI wasn't referring to whether one feels confident with his change set :)","username":"yacovm","ts":"2017-05-15T21:02:40.162Z"}
{"msg":"@lehors [ci skip] has been disabled","username":"cbf","ts":"2017-05-16T00:50:07.849Z"}
{"msg":"the plugin was broken and caused more trouble than it was worth","username":"cbf","ts":"2017-05-16T00:50:22.487Z"}
{"msg":"it even triggered a moratorium on new plugins that aren't in the catalog","username":"cbf","ts":"2017-05-16T00:50:45.521Z"}
{"msg":"and supported","username":"cbf","ts":"2017-05-16T00:50:50.330Z"}
{"msg":"@here so, what can be merged is bug fixes, new or improved tests, and documentation improvements","username":"cbf","ts":"2017-05-16T00:51:47.821Z"}
{"msg":"please when reviewing ensure that those things that are ostensibly bugs are in-fact bugs","username":"cbf","ts":"2017-05-16T00:52:15.488Z"}
{"msg":"we should not be condoning enhanement by bug fix","username":"cbf","ts":"2017-05-16T00:52:31.761Z"}
{"msg":"we should not be condoning enhancement by bug fix","username":"cbf","ts":"2017-05-16T00:52:31.761Z"}
{"msg":"changes to code to support tests should be considered, but let's not let new code creep in under the radar, please","username":"cbf","ts":"2017-05-16T00:53:20.496Z"}
{"msg":"also, addressing static analysis findings should be considered bug fixes","username":"cbf","ts":"2017-05-16T00:53:55.998Z"}
{"msg":"that's my $0.02 - happy to entertain discussion on this","username":"cbf","ts":"2017-05-16T00:54:26.504Z"}
{"msg":"@JonathanLevi ^^","username":"cbf","ts":"2017-05-16T00:54:42.202Z"}
{"msg":"_*let's not let new code creep in under the radar,*_ +2","username":"jimthematrix","ts":"2017-05-16T02:01:46.625Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=wj7FDgHL2ALv62wK2) Good morning (and back to this):","username":"JonathanLevi","ts":"2017-05-16T10:21:31.543Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=wj7FDgHL2ALv62wK2","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=wj7FDgHL2ALv62wK2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"How do people feel about voting, indeed, in this sense: https://www.apache.org/foundation/voting.html","username":"JonathanLevi","ts":"2017-05-16T10:21:55.400Z"}
{"msg":"People, as in, fellow maintainers (, free speech AND free beer)","username":"JonathanLevi","ts":"2017-05-16T10:22:48.196Z"}
{"msg":"We don't want to rock the boat, and converge to a release... while at the same time, we don't want an unnecessary backlog of Good Things (tm) that are indeed welcome (such as the *test converage*, *logging* and the rest of *service-ability* and *tooling*).","username":"JonathanLevi","ts":"2017-05-16T10:24:16.262Z"}
{"msg":"I think that in order to make progress decisions need to be taken","username":"C0rWin","ts":"2017-05-16T10:27:05.367Z"}
{"msg":"IMO, the voting is very good way to converge with the quorum on certain direction","username":"C0rWin","ts":"2017-05-16T10:27:40.486Z"}
{"msg":"rather than waiting some will make executive decision","username":"C0rWin","ts":"2017-05-16T10:27:57.997Z"}
{"msg":"rather than waiting someone will make executive decision","username":"C0rWin","ts":"2017-05-16T10:27:57.997Z"}
{"msg":"Just to note that we (yes, we) are the maintainers - we should make the decisions. What I'm trying to do, is to make us have the right information, in order to help us make the *right decisions*.","username":"JonathanLevi","ts":"2017-05-16T10:29:04.846Z"}
{"msg":"Even though I have been blocking a few CRs in a row, while we are working out the release), I don't see the *Release Manager* role as a dictator. Benevolent, or otherwise ;-).","username":"JonathanLevi","ts":"2017-05-16T10:30:08.792Z"}
{"msg":"so in given moment in time, how we should make decision of whenever to merge or not incoming changes?","username":"C0rWin","ts":"2017-05-16T10:31:15.386Z"}
{"msg":"currently we keep queueing CR's  ","username":"C0rWin","ts":"2017-05-16T10:31:35.858Z"}
{"msg":"which, IMO, will lead us into merge hell at some point","username":"C0rWin","ts":"2017-05-16T10:31:52.586Z"}
{"msg":"That's why I suggest to take action (and vote). Answering Greg's question from above.","username":"JonathanLevi","ts":"2017-05-16T10:42:52.647Z"}
{"msg":"It may be easier to have a set of things that are clearly good to merge (such as \"tests\")","username":"JonathanLevi","ts":"2017-05-16T10:43:27.099Z"}
{"msg":"So that we don't need to vote on every move. I'm open to suggestions.","username":"JonathanLevi","ts":"2017-05-16T10:43:49.350Z"}
{"msg":"Either end of the spectrum (making it so difficult to get anything merged, or the \"merge-fest\" [you read it first here! ;-)] ) is not right.","username":"JonathanLevi","ts":"2017-05-16T10:45:41.580Z"}
{"msg":"Documentation, bug-fixes (but really bug-fixes, not a re-work of expected behaviour that results in adding 9 more features, as a fix), tests...","username":"JonathanLevi","ts":"2017-05-16T10:46:26.026Z"}
{"msg":"These should really be straight-forward to merge. Would we agree?","username":"JonathanLevi","ts":"2017-05-16T10:46:47.094Z"}
{"msg":"(again, we need judgement... I don't want a 50 page contract, with (re-)definitions of what's a feature, what's a test, etc.)","username":"JonathanLevi","ts":"2017-05-16T10:47:38.423Z"}
{"msg":"More suggestions/feedback/input... ?","username":"JonathanLevi","ts":"2017-05-16T10:48:49.084Z"}
{"msg":"(& thank you @C0rWin, of course. I agree.)","username":"JonathanLevi","ts":"2017-05-16T10:49:09.438Z"}
{"msg":"I think we can divide change sets into 3 groups:\n1) Change sets that don't touch production code, that no voting is needed for them.\n2) Change sets that touch production code and are critical bugs fixes and their solution isn't complex - that's not very well defined but I don't think we should wait for a vote on a critical bug fix.\n3) The rest - we need voting at this point, the question is how and how much. I guess that we can vote in JIRA explicitly ","username":"yacovm","ts":"2017-05-16T10:50:27.095Z"}
{"msg":"We also should not be getting into merge hell (other than the annoying rebase when required).  UT improvements should not be crossing boundaries - if they are we have problems.  I can see that for some bug fixes there MAY be collisions due to the tangled nature of some of the code, but again I would hope it is rare.\n\nHopefully every component owner has prioritized bugs for their component(s) in JIRA?\n\n(Also - I feel like people think this is some type of race - hopefully that is not the case)","username":"mastersingh24","ts":"2017-05-16T10:55:01.387Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/9267/ I've addressed the feedback on the proposal. Please +1 and when we have 5 it can be merged thanks","username":"cbf","ts":"2017-05-16T11:19:50.316Z"}
{"msg":"Agree with @mastersingh24 UT improvements should be (for the most part) limited to _test.go files and they should not be crossing boundaries.","username":"cbf","ts":"2017-05-16T11:25:03.198Z"}
{"msg":"Let's not have premature optimization of a problem we don't know we have. Worrying about \"merge hell\" is definitely premature","username":"cbf","ts":"2017-05-16T11:25:45.030Z"}
{"msg":"as for fixes, I agree with Yacov's assessment and classification","username":"cbf","ts":"2017-05-16T11:26:05.842Z"}
{"msg":"I think that we should define a sprint and for those JIRAs that fall into category 3 in @yacovm classification, we should be voting on adding to the current sprint","username":"cbf","ts":"2017-05-16T11:27:26.815Z"}
{"msg":"we could have a twice-weekly assessment and maybe a label that we use to query those JIRAs that need assessment by maintainers","username":"cbf","ts":"2017-05-16T11:28:26.779Z"}
{"msg":"thoughts?","username":"cbf","ts":"2017-05-16T11:29:56.141Z"}
{"msg":"then, any JIRA in the current sprint is permitted to be merged, others need to be voted on and either added to the sprint or deferred ","username":"cbf","ts":"2017-05-16T11:30:39.623Z"}
{"msg":"I've just posted in #fabric-release that Getting Started instructions are broken.  Please review the fixes mentioned there.","username":"dave.enyeart","ts":"2017-05-16T11:54:12.141Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=74ACXa6Zq8mofDLSu) @cbf I feel, that at least 80% of JIRA items created ad-hoc","username":"C0rWin","ts":"2017-05-16T12:10:49.414Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=74ACXa6Zq8mofDLSu","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=74ACXa6Zq8mofDLSu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Perhaps until V1 is out we can just do it once a day","username":"yacovm","ts":"2017-05-16T12:13:37.718Z"}
{"msg":"twice a week is IMO a too low frequency","username":"yacovm","ts":"2017-05-16T12:13:50.751Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=4uwZiM7X8SSzn56yY) @yacovm sounds reasonable","username":"C0rWin","ts":"2017-05-16T12:14:09.044Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4uwZiM7X8SSzn56yY","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4uwZiM7X8SSzn56yY","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@yacovm @C0rWin I do it every day now;-) that works for me, I suppose","username":"cbf","ts":"2017-05-16T12:22:37.635Z"}
{"msg":"can you, please , share the query you are using to browse the JIRA and how I can find issues or be certain that given CR is fine to go?","username":"C0rWin","ts":"2017-05-16T12:24:25.892Z"}
{"msg":"I'm going through the logs of the past few days and feel like I'm missing something.","username":"kostas","ts":"2017-05-16T13:26:35.042Z"}
{"msg":"What has changed over the mode that we have been running on for the past month or so? With the exception of the consortium/config-related changes that introduced new functionality, haven't we just been merging bug fixes / tests / doc changes / polish+harderning changes all this time?","username":"kostas","ts":"2017-05-16T13:26:41.822Z"}
{"msg":"so, the craziness attendant to cutting alpha2 disrupted the thread on the release exit criteria - I would like to finalize this @here and now...","username":"cbf","ts":"2017-05-16T13:34:06.496Z"}
{"msg":"https://wiki.hyperledger.org/projects/fabric/release_exit_criteria","username":"cbf","ts":"2017-05-16T13:34:07.745Z"}
{"msg":"please respond here TODAY with +2 or -1 on what I have published","username":"cbf","ts":"2017-05-16T13:34:50.985Z"}
{"msg":"thanks","username":"cbf","ts":"2017-05-16T13:34:53.349Z"}
{"msg":"@kostas yes, that has been a bit of an unwritten state of affairs","username":"cbf","ts":"2017-05-16T13:40:44.409Z"}
{"msg":"want to make it more clear and a process for how we address borderline cases","username":"cbf","ts":"2017-05-16T13:41:07.446Z"}
{"msg":"I have seen some fixes that were not bugs but enhancements","username":"cbf","ts":"2017-05-16T13:41:38.507Z"}
{"msg":"We are basically (also) trying to check our \"readiness\"... if we really feel that our APIs are solid and really final, after enough usage/testing... then we'll proceed. It is a lot more difficult to do it under the \"merging deluge\" we had a few weeks ago...","username":"JonathanLevi","ts":"2017-05-16T14:09:36.507Z"}
{"msg":"+1","username":"cbf","ts":"2017-05-16T14:12:23.458Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=tsq6WJTauSWWsbTkr) @cbf @muralisr @binhn @jyellick @kostas @JonathanLevi @greg.haskins @mastersingh24 @yacovm @C0rWin @dave.enyeart @jimthematrix @hgabre @TamasBlummer please weigh in on the release exit criteria","username":"cbf","ts":"2017-05-16T14:26:36.509Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=tsq6WJTauSWWsbTkr","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=tsq6WJTauSWWsbTkr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://wiki.hyperledger.org/projects/fabric/release_exit_criteria","username":"cbf","ts":"2017-05-16T14:26:56.902Z"}
{"msg":"@cbf there was discussion on `that there have been security scans (static and dynamic), code audit and penetration testing with all significant findings reported in JIRA,` ... I got the impression this could be a big one ? has this been finalized yet ?","username":"muralisr","ts":"2017-05-16T14:29:47.660Z"}
{"msg":"@cbf I think that release exit should be gradual, e.g.  RM need declare release candidate -> code freeze -> compliance with exit criteria. Hence it probably worth splitting exit criteria into two phases: RC and GA.","username":"C0rWin","ts":"2017-05-16T14:32:03.237Z"}
{"msg":">  no open bugs that affect security of the system that cannot be mitigated by workaround,\n>  all open bugs that affect security have workarounds published in release notes,\nThese can be combined into 1 bullet (no open bugs that affect security unless a workaround has been published)","username":"yacovm","ts":"2017-05-16T14:33:25.974Z"}
{"msg":"@C0rWin yes, of course, that is not what this is about... this is about when is it ready for 1.0 (and beyond)","username":"cbf","ts":"2017-05-16T14:34:36.698Z"}
{"msg":"@cbf crypto export scan must be complete too","username":"dhuseby","ts":"2017-05-16T14:35:00.354Z"}
{"msg":"I have somebody already working on that","username":"dhuseby","ts":"2017-05-16T14:35:05.767Z"}
{"msg":"let me follow up with them today","username":"dhuseby","ts":"2017-05-16T14:35:10.513Z"}
{"msg":"@dhuseby please add to the wiki then if missing","username":"cbf","ts":"2017-05-16T14:35:20.698Z"}
{"msg":"otherwise the exit criteria look good","username":"dhuseby","ts":"2017-05-16T14:35:28.718Z"}
{"msg":"I don't think you need to specify that incoming bug counts are declining for 3 weeks","username":"dhuseby","ts":"2017-05-16T14:35:47.256Z"}
{"msg":"that's not really a sign of readiness IMO","username":"dhuseby","ts":"2017-05-16T14:36:10.645Z"}
{"msg":"because you can have 15 new bugs on week 1, 10 on week 2, and 5 on week 3, but on week 4 you could find 1 security critical bug that should hold up the whole release","username":"dhuseby","ts":"2017-05-16T14:36:48.672Z"}
{"msg":"BTW: `critical` (== `show stopper`). Even a 0.5 x critical is a LOT. That is, we won't release with it.","username":"JonathanLevi","ts":"2017-05-16T14:37:43.962Z"}
{"msg":"(without it getting fixed)","username":"JonathanLevi","ts":"2017-05-16T14:37:52.862Z"}
{"msg":"Release criteria looks good to me","username":"jyellick","ts":"2017-05-16T14:40:08.010Z"}
{"msg":"@dhuseby yes, but the sev1 critical bug would disqualify anyway","username":"cbf","ts":"2017-05-16T14:40:43.071Z"}
{"msg":"sure, I guess, I just don't see new vs resolved declining for 3 weeks as a useful metric for anything","username":"dhuseby","ts":"2017-05-16T14:41:06.898Z"}
{"msg":"and it is gamable","username":"dhuseby","ts":"2017-05-16T14:41:15.947Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=o7hEyZW2KW7cBpSZu) (sorry, that's what I meant above, yes)","username":"JonathanLevi","ts":"2017-05-16T14:42:01.573Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=o7hEyZW2KW7cBpSZu","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=o7hEyZW2KW7cBpSZu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"actually, someone asked that it be tweaked to indicate post a RC","username":"cbf","ts":"2017-05-16T14:42:06.719Z"}
{"msg":"you don't want to publish a RC that meets all criteria and for which new bugs are coming in","username":"cbf","ts":"2017-05-16T14:42:44.907Z"}
{"msg":"maybe 3 weeks too long... don't know","username":"cbf","ts":"2017-05-16T14:42:55.037Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=JoihQ8a6jTsWLPuQ3) @cbf got it, then it's fine with me","username":"C0rWin","ts":"2017-05-16T14:43:11.406Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=JoihQ8a6jTsWLPuQ3","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=JoihQ8a6jTsWLPuQ3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"we haven't got enough experience to determine","username":"cbf","ts":"2017-05-16T14:43:14.696Z"}
{"msg":"why not? RC are release candidates no?  Publishing one should spark a new round of bug reporting.","username":"dhuseby","ts":"2017-05-16T14:43:29.860Z"}
{"msg":"maybe we just say that there is a minimum time for a RC to be public before we make it a formal release","username":"cbf","ts":"2017-05-16T14:43:49.113Z"}
{"msg":"that sounds like better criteria","username":"dhuseby","ts":"2017-05-16T14:43:59.836Z"}
{"msg":"yes","username":"cbf","ts":"2017-05-16T14:44:01.390Z"}
{"msg":"because aren't we going to release when it is ready?","username":"dhuseby","ts":"2017-05-16T14:44:06.572Z"}
{"msg":"that's how open source works","username":"dhuseby","ts":"2017-05-16T14:44:13.236Z"}
{"msg":"yes","username":"cbf","ts":"2017-05-16T14:44:15.058Z"}
{"msg":"@dhuseby \"a release candidate will have been published for a minimum of two weeks\"","username":"cbf","ts":"2017-05-16T14:45:36.814Z"}
{"msg":"ok?","username":"cbf","ts":"2017-05-16T14:45:38.821Z"}
{"msg":"actually, \"the preceding release candidate will have been published for a minimum of two weeks\"","username":"cbf","ts":"2017-05-16T14:46:10.812Z"}
{"msg":"@cbf except for my question on what the process for security scans will be and is formalized, looks good to me","username":"muralisr","ts":"2017-05-16T14:48:29.658Z"}
{"msg":"the above could just be my ignorance of course ","username":"muralisr","ts":"2017-05-16T14:48:46.393Z"}
{"msg":"Has left the channel.","username":"vdods","ts":"2017-05-16T16:45:53.507Z","type":"ul"}
{"msg":"@muralisr @dhuseby is working on the security scans... we DO need details and plan, etc. IBM also runs such scans and we can see what we can share that makes sense (some will be more about our web interface than the actual fabric code)","username":"cbf","ts":"2017-05-16T18:32:21.568Z"}
{"msg":"There are also a couple of JIRAs looking to add static scans to CI","username":"cbf","ts":"2017-05-16T18:32:39.820Z"}
{"msg":"@cbf I have reached out to Softvision to ask about them doing security audits for us.  I also have contacts at Rapid7, though I think they do pen testing more that code audits.","username":"dhuseby","ts":"2017-05-16T18:33:31.747Z"}
{"msg":"right now I'm focusing on just the crypto export compliance stuff","username":"dhuseby","ts":"2017-05-16T18:33:49.397Z"}
{"msg":"we do need both, no?","username":"cbf","ts":"2017-05-16T18:33:52.741Z"}
{"msg":"I think we do","username":"dhuseby","ts":"2017-05-16T18:34:00.096Z"}
{"msg":"CII requires it for each major release.","username":"dhuseby","ts":"2017-05-16T18:34:10.759Z"}
{"msg":"can you please edit the wiki accordingly?","username":"cbf","ts":"2017-05-16T18:34:12.623Z"}
{"msg":"I think the language is something like \"a security code audit for each major release\"","username":"dhuseby","ts":"2017-05-16T18:34:25.313Z"}
{"msg":"but I take that to mean both static and dynamic analysis and penetration","username":"dhuseby","ts":"2017-05-16T18:34:35.463Z"}
{"msg":"@cbf where in the wiki specifically?","username":"dhuseby","ts":"2017-05-16T18:34:48.402Z"}
{"msg":"the exit criteria?","username":"dhuseby","ts":"2017-05-16T18:34:54.144Z"}
{"msg":"https://wiki.hyperledger.org/projects/fabric/release_exit_criteria","username":"cbf","ts":"2017-05-16T18:35:10.004Z"}
{"msg":"also, I've been meaning to ask you about the companies IBM usually uses for security audits and pen testing","username":"dhuseby","ts":"2017-05-16T18:35:18.833Z"}
{"msg":"@cbf roger, yes, i'll edit","username":"dhuseby","ts":"2017-05-16T18:35:30.030Z"}
{"msg":"pen testing we source to our security group","username":"cbf","ts":"2017-05-16T18:35:39.452Z"}
{"msg":"security scans are also run in-house - @weeds may have details","username":"cbf","ts":"2017-05-16T18:36:38.135Z"}
{"msg":"again, this would be against the deployed code, and most of the coverage pertains to the Web UI and any externally exposed APIs","username":"cbf","ts":"2017-05-16T18:37:17.631Z"}
{"msg":"@markparz actually Mark has been chasing some of this, given he's worked this in past.  He is not in today, but hopefully tomorrow he can share some details","username":"weeds","ts":"2017-05-16T18:50:57.022Z"}
{"msg":"it would be good to understand what companies/runs we need to do specifically, given i know there are long lead times for some of the security work (things like pen testing are not always easy)","username":"weeds","ts":"2017-05-16T18:52:01.663Z"}
{"msg":"---\nBring out the gimp ( that is, *let's get some UTs merged! * )","username":"JonathanLevi","ts":"2017-05-16T19:00:50.917Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-05-16T19:01:05.222Z"}
{"msg":"[ so tempted to post a link to the gimp - but I'm sure it violates the code of conduct](https://chat.hyperledger.org/channel/fabric-maintainers?msg=5RLAEN9c8aEfdH9q5) @JonathanLevi ","username":"mastersingh24","ts":"2017-05-16T20:38:25.023Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=5RLAEN9c8aEfdH9q5","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=5RLAEN9c8aEfdH9q5","remote":true,"fileId":null,"fileName":null}]}
{"msg":"the exit criteria looks good to me","username":"jimthematrix","ts":"2017-05-16T20:40:53.080Z"}
{"msg":"A license scan has been run for all projects approaching 1.0. For the fabric* repositories, I have the output from our license scan. How would the Fabric maintainers like to receive this information? I can add a link to the results here or I can put them  on the mailing list.  Changes will be required to meet licensing requirements. ","username":"tkuhrt","ts":"2017-05-16T23:10:05.773Z"}
{"msg":"Even a JIRA ticket with an output will do.","username":"JonathanLevi","ts":"2017-05-16T23:51:21.149Z"}
{"msg":"@tkuhrt: we can make it a task that needs addressing, and add it to FAB-3040... (thank you)","username":"JonathanLevi","ts":"2017-05-16T23:52:05.520Z"}
{"msg":"We will certainly prioritize licensing!","username":"JonathanLevi","ts":"2017-05-16T23:52:58.451Z"}
{"msg":"Thanks, Jonathan.  I have added https://jira.hyperledger.org/browse/FAB-3963 to cover licensing ","username":"tkuhrt","ts":"2017-05-17T00:26:43.954Z"}
{"msg":"Please let me know if you have questions","username":"tkuhrt","ts":"2017-05-17T00:26:56.482Z"}
{"msg":"holy smoke","username":"lehors","ts":"2017-05-17T11:12:24.772Z"}
{"msg":"wait, something isn't quite right with those results","username":"lehors","ts":"2017-05-17T11:15:47.068Z"}
{"msg":"it's listing files like: fabric-test-resources/.git/config as not having a license","username":"lehors","ts":"2017-05-17T11:16:50.556Z"}
{"msg":"fabric-test-resources/.git/HEAD","username":"lehors","ts":"2017-05-17T11:17:07.356Z"}
{"msg":"surely we are not expected to have licenses in those files, right?","username":"lehors","ts":"2017-05-17T11:18:36.307Z"}
{"msg":"@tkuhrt it looks like some cleanup needs to be done here","username":"lehors","ts":"2017-05-17T11:18:50.682Z"}
{"msg":"and then there are files that were generated like fabric/bddtests/peer/admin_pb2.py","username":"lehors","ts":"2017-05-17T11:20:41.468Z"}
{"msg":"so, between the vendoring and these it's not surprising the numbers are so large","username":"lehors","ts":"2017-05-17T11:22:42.555Z"}
{"msg":"(Good morning)","username":"JonathanLevi","ts":"2017-05-17T11:24:43.692Z"}
{"msg":"We also don't add license info/header to the shell scripts","username":"JonathanLevi","ts":"2017-05-17T11:25:23.725Z"}
{"msg":"we don't","username":"yacovm","ts":"2017-05-17T11:26:12.609Z"}
{"msg":"@tkuhrt \"Ideally, the repositories should not include any dependencies, but rather the build process should make sure to pull the latest version of any dependencies\".  I assume you were largely noting the vendored dependencies in the golang code?  Normally I would agree with you, but note that this _is_ how you officially use dependencies in golang.","username":"greg.haskins","ts":"2017-05-17T11:56:42.612Z"}
{"msg":"In my opinion, the golang architects completely screwed up the dependency system, and vendoring was added in the aftermath to deal with it around go v1.6 timeframe...but it is what it is, and we have to deal with it","username":"greg.haskins","ts":"2017-05-17T11:58:22.807Z"}
{"msg":"@JonathanLevi  Beyond bringing out the gimp and getting UTs merged (grinning still at that) Can we also get some help to get what scottz and bmoss posted in pr channel-- we are trying to get that  automated system test going, but stuff does need to get checked in to really do it right-- Thanks!","username":"weeds","ts":"2017-05-17T13:00:38.997Z"}
{"msg":"(pr review channel that is)","username":"weeds","ts":"2017-05-17T13:01:10.625Z"}
{"msg":"@here I'll take an AI to work with Tracy and Brian on the vendored bits. I agree with Arnaud that we need to exclude noise like git metadata files and generated content such as protobuf files.","username":"cbf","ts":"2017-05-17T13:09:31.773Z"}
{"msg":"@cbf first pass through I took that as \"ill set up artificial intelligence to work on .... vendored bits\"","username":"greg.haskins","ts":"2017-05-17T13:11:18.492Z"}
{"msg":"seemed a bit extreme, but also interesting ;)","username":"greg.haskins","ts":"2017-05-17T13:11:53.453Z"}
{"msg":"Why do we check in generated files?","username":"tkuhrt","ts":"2017-05-17T13:31:26.441Z"}
{"msg":"I was under the impression that \"go get ./..\" pulls in dependencies before a build. ","username":"tkuhrt","ts":"2017-05-17T13:32:59.839Z"}
{"msg":"All script files are considered code and will need license information included","username":"tkuhrt","ts":"2017-05-17T13:36:17.392Z"}
{"msg":"Found this article on dependencies:  https://blog.gopheracademy.com/advent-2016/saga-go-dependency-management/. Looks like their is an alpha version of the dep tool that will remove the requirement of the vendor directory. ","username":"tkuhrt","ts":"2017-05-17T13:50:22.718Z"}
{"msg":"dear maintainers, I just attended the fabric scrum call and there is confusion as to whether alpha2 is really cut yet or not","username":"lehors","ts":"2017-05-17T13:55:53.016Z"}
{"msg":"will you guys post an announcement to the fabric mailing list when it is?","username":"lehors","ts":"2017-05-17T13:56:23.141Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=fYgu9qS8Xrusg6Syr","username":"yacovm","ts":"2017-05-17T14:00:23.512Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=fYgu9qS8Xrusg6Syr","url":"https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=fYgu9qS8Xrusg6Syr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@here: We are still waiting on some final updates in order to announce the release. We improved things since the \"tag\", but we are still waiting for the Getting Started guide update. Otherwise, we are going to get so many complaints and questions.","username":"JonathanLevi","ts":"2017-05-17T14:04:31.413Z"}
{"msg":"@here: We are still waiting on some final updates in order to announce the release. We improved things since the \"tag\", but we are still waiting for the *Getting Started* guide update. Otherwise, we are going to get so many complaints and questions.","username":"JonathanLevi","ts":"2017-05-17T14:04:31.413Z"}
{"msg":"Otherwise, unless we find anything else (in the coming hours,...) that is out of sync, we'll be good to go.","username":"JonathanLevi","ts":"2017-05-17T14:05:08.271Z"}
{"msg":"sounds reasonable but beware that this kind of situation is very confusing","username":"lehors","ts":"2017-05-17T14:05:35.330Z"}
{"msg":"(And an email, indeed, will be sent out to announce)","username":"JonathanLevi","ts":"2017-05-17T14:05:37.454Z"}
{"msg":"people see the images on dockerhub and the tag on github","username":"lehors","ts":"2017-05-17T14:05:54.136Z"}
{"msg":"yet it's not announced","username":"lehors","ts":"2017-05-17T14:06:03.031Z"}
{"msg":"@lehors: I appreciate it. I'm more concerned with people not able to follow the basic Getting Started (step by step)","username":"JonathanLevi","ts":"2017-05-17T14:06:11.765Z"}
{"msg":"I agree with you, between the two I think you're making the right choice","username":"lehors","ts":"2017-05-17T14:06:35.819Z"}
{"msg":"but this brings up again the question of \"where does one find what the status is\"","username":"lehors","ts":"2017-05-17T14:06:58.917Z"}
{"msg":"The sooner we fix the last bits (and @lehors, I did merge the file paht corrections, etc. last night).... the better.","username":"JonathanLevi","ts":"2017-05-17T14:07:07.087Z"}
{"msg":"Just to say, that we were actually surprised too. Otherwise, we would have \"tagged\" right after that fix. ","username":"JonathanLevi","ts":"2017-05-17T14:08:01.160Z"}
{"msg":"@lehors FAB-3040","username":"cbf","ts":"2017-05-17T14:08:30.628Z"}
{"msg":"Yup, we also have it in the wiki.","username":"JonathanLevi","ts":"2017-05-17T14:08:45.469Z"}
{"msg":"We are really working to make the \"status\" of everything a lot easier to find. (More) feedback welcome.","username":"JonathanLevi","ts":"2017-05-17T14:09:09.536Z"}
{"msg":"We are really working to make the \"status\" of everything a lot easier to find. (More) feedback/suggestions regarding how to improve it more/better are aways welcome.","username":"JonathanLevi","ts":"2017-05-17T14:09:09.536Z"}
{"msg":"we obviously can do more and better about keeping JIRA current, but that is where to look... the more we have people looking there, the more eyeballs and arms on keeping it current","username":"cbf","ts":"2017-05-17T14:09:28.535Z"}
{"msg":"@JonathanLevi @greg.haskins @cbf @mastersingh24  I believe the next step for Getting Started is to push the Getting Started materials to nexus.  This change has been in review: https://gerrit.hyperledger.org/r/#/c/8939/ https://jira.hyperledger.org/browse/FAB-2986.  Greg, Chris, and Gari each have comments in there.  I think we need you guys to clarify your comments and decide if the comments can be deferred for next time around, so that we dont hold up alpha2 announce further.","username":"dave.enyeart","ts":"2017-05-17T14:10:08.033Z"}
{"msg":"sounds good but where is what Jonathan just said here about the status on that JIRA??","username":"lehors","ts":"2017-05-17T14:10:28.541Z"}
{"msg":"why are we still using FAB-3040 (intended for 1.0 GA release) work item to manage alpha2 release work items? ","username":"dave.enyeart","ts":"2017-05-17T14:12:50.598Z"}
{"msg":"Last time I mentioned this, @cbf pointed us to a alpha2 work item, but it didnt have much content (and i cant find it now)","username":"dave.enyeart","ts":"2017-05-17T14:13:32.661Z"}
{"msg":"I think we really need to have one Jira item as an umbrella for each 'release'","username":"dave.enyeart","ts":"2017-05-17T14:14:00.337Z"}
{"msg":"I think we really need to have one Jira item as an umbrella per each 'release'","username":"dave.enyeart","ts":"2017-05-17T14:14:00.337Z"}
{"msg":"then to lehors point, we can point people to that Jira item which would have a summary of status","username":"dave.enyeart","ts":"2017-05-17T14:15:06.717Z"}
{"msg":"then to lehors point, we can point people to that Jira item which would have a summary of status for that 'release' e.g. alpha2","username":"dave.enyeart","ts":"2017-05-17T14:15:06.717Z"}
{"msg":"Please note that we do need people to fill in the right information in JIRA in order for the \"filtering\" to work/make sense.","username":"JonathanLevi","ts":"2017-05-17T14:15:42.033Z"}
{"msg":"I/we have been trying to amend and correct a lot of them...and posted the guidelines on the wiki... but for example:","username":"JonathanLevi","ts":"2017-05-17T14:16:10.337Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-3947?jql=project%20%3D%20FAB%20AND%20fixVersion%20%3D%20v1.0.0-alpha2","username":"JonathanLevi","ts":"2017-05-17T14:16:11.834Z"}
{"msg":"(If you click on the `alpha2` tag, this is what you should see)","username":"JonathanLevi","ts":"2017-05-17T14:16:30.274Z"}
{"msg":"I believe that it will help if all of us (maintainers) will try to make sure that the *Fix Version/s* and *Affects Version/s* are up to date.","username":"JonathanLevi","ts":"2017-05-17T14:17:35.603Z"}
{"msg":"Well, speaking of --","username":"kostas","ts":"2017-05-17T14:17:56.731Z"}
{"msg":"> the JIRA item is complete in its description of the problem and the resolution, and is appropriately labeled, categorized and identifies the current release in Affects Version/s and the pending release in Fix Version/s","username":"kostas","ts":"2017-05-17T14:17:59.662Z"}
{"msg":"Source: https://wiki.hyperledger.org/projects/fabric/release_exit_criteria","username":"kostas","ts":"2017-05-17T14:18:05.962Z"}
{"msg":"Exactly ! Thank you @kostas ","username":"JonathanLevi","ts":"2017-05-17T14:18:17.010Z"}
{"msg":"yeah...","username":"lehors","ts":"2017-05-17T14:18:51.538Z"}
{"msg":"Actually I have a question :slight_smile: All the JIRAs that we're working on now? How do we know what the right \"fix version\" value is? alpha-3? beta-1?","username":"kostas","ts":"2017-05-17T14:18:59.049Z"}
{"msg":"Actually I have a question :slight_smile: All the JIRAs that we're working on now -- how do we know what the right \"fix version\" value is? alpha-3? beta-1?","username":"kostas","ts":"2017-05-17T14:18:59.049Z"}
{"msg":"I'd assume the fix version can be set when you finish the item?","username":"yacovm","ts":"2017-05-17T14:19:21.684Z"}
{"msg":"and it's merged?","username":"yacovm","ts":"2017-05-17T14:19:25.920Z"}
{"msg":"For now, whatever is not for `v1.0.0-alpha2` is set to be `v1.0.0`","username":"JonathanLevi","ts":"2017-05-17T14:19:34.745Z"}
{"msg":"@yacov: Even then, how do you know whether next version is going to be alpha-3 or beta-1?","username":"kostas","ts":"2017-05-17T14:19:50.543Z"}
{"msg":"@yacovm: Even then, how do you know whether next version is going to be alpha-3 or beta-1?","username":"kostas","ts":"2017-05-17T14:19:50.543Z"}
{"msg":"v1","username":"yacovm","ts":"2017-05-17T14:19:58.346Z"}
{"msg":"Got it.","username":"kostas","ts":"2017-05-17T14:20:12.078Z"}
{"msg":"When we are going to work on the next known milestone, and we agree on whether it is `v1.0.0-beta` or `v1.0.0-alpha3`... we will update accordingly, what should be in the upcoming release.","username":"JonathanLevi","ts":"2017-05-17T14:20:35.496Z"}
{"msg":"Again (as always), opinions and suggestions welcome. ","username":"JonathanLevi","ts":"2017-05-17T14:20:52.157Z"}
{"msg":"So we'll need to go back to the items that were set as \"fix version = v1\" and update them accordingly?","username":"kostas","ts":"2017-05-17T14:21:08.267Z"}
{"msg":"I hope that we will be able to clear all of FAB-3040 before the next \"cut\".","username":"JonathanLevi","ts":"2017-05-17T14:21:34.297Z"}
{"msg":"@kostas you don't, but there is nothing else we can use to track atm","username":"cbf","ts":"2017-05-17T14:21:52.909Z"}
{"msg":"it can be changed when actually completed, or when something gets kicked down the road","username":"cbf","ts":"2017-05-17T14:22:14.862Z"}
{"msg":"@kostas fixVersion v1.0.0 is fine for now","username":"cbf","ts":"2017-05-17T14:22:58.910Z"}
{"msg":"As I said, \"when it's actually completed\" doesn't quite make sense, because we may still not now what the next release is.","username":"kostas","ts":"2017-05-17T14:22:59.825Z"}
{"msg":"The v1 fix version rule works though.","username":"kostas","ts":"2017-05-17T14:23:12.167Z"}
{"msg":"@cbf when and where can we talk about the 2 items - 3715 and 3359 ?\nI think they are (2) (critical security bugs) but I'd like to see them added to 3040 if that's possible","username":"yacovm","ts":"2017-05-17T14:23:42.460Z"}
{"msg":"@cbf @JonathanLevi  when and where can we talk about the 2 items - 3715 and 3359 ?\nI think they are (2) (critical security bugs) but I'd like to see them added to 3040 if that's possible","username":"yacovm","ts":"2017-05-17T14:23:42.460Z"}
{"msg":"Back to Dave's point: https://chat.hyperledger.org/channel/fabric-maintainers?msg=3m7GmgpYorhMaf7rQ","username":"kostas","ts":"2017-05-17T14:24:37.232Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=3m7GmgpYorhMaf7rQ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=3m7GmgpYorhMaf7rQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Wouldn't it be prudent to create a new epic for the next release (name TBD), and link all newly completed items against it?","username":"kostas","ts":"2017-05-17T14:25:10.796Z"}
{"msg":"Wouldn't it be prudent to create a new epic for the next release (name TBD) _now_, and link all newly completed items against it?","username":"kostas","ts":"2017-05-17T14:25:10.796Z"}
{"msg":"Then when we decide that the next release is, say, beta-1, we just update the epic name and we have that good to go.","username":"kostas","ts":"2017-05-17T14:25:33.962Z"}
{"msg":"@kostas possibly but let's please not change horses - we have an epic and we are tracking stuff there","username":"cbf","ts":"2017-05-17T14:26:44.411Z"}
{"msg":"for now, we should just be fixing bugs, adding tests and improving docs","username":"cbf","ts":"2017-05-17T14:27:05.573Z"}
{"msg":"We are really trying to simplify matters. It a New Thing(tm), so that people can easily find them.","username":"JonathanLevi","ts":"2017-05-17T14:27:31.272Z"}
{"msg":"we have a policy for tracking things that need more review","username":"cbf","ts":"2017-05-17T14:27:34.298Z"}
{"msg":"see bottom of release exit criteria page","username":"cbf","ts":"2017-05-17T14:27:44.465Z"}
{"msg":"@cbf: Roger, and these are the kind of work items I'm talking about. What I still haven't figured out is: do we link all 1.0.0 (incl. alpha-2) related items against the 3040 epic? I thought that was the case, but Dave asked a few days back and he was told that we should be using the alpha-2 epic for this?","username":"kostas","ts":"2017-05-17T14:29:35.219Z"}
{"msg":"So, do we have one mega 1.0 epic where every JIRA from every pre-1.0 cut gets linked, or not?","username":"kostas","ts":"2017-05-17T14:30:10.261Z"}
{"msg":"I don't have a hard stand on this, and I can roll either way.","username":"kostas","ts":"2017-05-17T14:30:19.563Z"}
{"msg":"I don't have a hard stand on this, and I can roll either way. But I'm getting slightly mixed signals on what we want to do.","username":"kostas","ts":"2017-05-17T14:30:19.563Z"}
{"msg":"Wait, alpha2 epic? I thought we are using 3040?","username":"yacovm","ts":"2017-05-17T14:30:38.381Z"}
{"msg":"Let me try to find the convo.","username":"kostas","ts":"2017-05-17T14:31:14.357Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ij46WkWp6nBmr3Fby and https://chat.hyperledger.org/channel/fabric-maintainers?msg=c4H8CTG8CGfz8thP2 and the response below","username":"kostas","ts":"2017-05-17T14:32:25.944Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ij46WkWp6nBmr3Fby","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ij46WkWp6nBmr3Fby","remote":true,"fileId":null,"fileName":null},{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=c4H8CTG8CGfz8thP2","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=c4H8CTG8CGfz8thP2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@kostas no, I don't think so... it made sense when we were coming down to the wire to track blockers","username":"cbf","ts":"2017-05-17T14:32:47.433Z"}
{"msg":"not sure we need to do that throughout","username":"cbf","ts":"2017-05-17T14:33:11.693Z"}
{"msg":"Got it, so just to confirm: link any completed JIRA from now on against 3040? (Until we cut 1.0)","username":"kostas","ts":"2017-05-17T14:33:48.434Z"}
{"msg":"no, no need to","username":"cbf","ts":"2017-05-17T14:35:47.669Z"}
{"msg":"we can track what has merged and what was completed","username":"cbf","ts":"2017-05-17T14:36:10.762Z"}
{"msg":"I think that the only time we need to track something is if it MUST be in the next release","username":"cbf","ts":"2017-05-17T14:36:31.153Z"}
{"msg":"can we get back to what we need to tactically do this morning in order to unleash alpha2. I believe the next step for Getting Started is to push the Getting Started materials to nexus. This would be a tarball including /example/e2e_cli, configtxgen, cryptogen. This change has been in review: https://gerrit.hyperledger.org/r/#/c/8939 https://jira.hyperledger.org/browse/FAB-2986. @cbf can you review/approve that one this morning?","username":"dave.enyeart","ts":"2017-05-17T14:38:59.857Z"}
{"msg":"Then, after that is done, Nick will update Getting Started with the links to nexus and docker images, so that people can start working through Getting Started without having to make images","username":"dave.enyeart","ts":"2017-05-17T14:39:33.225Z"}
{"msg":"I did, but mu issues was just technical nit","username":"cbf","ts":"2017-05-17T14:39:38.363Z"}
{"msg":"and I cannot merge stuff there anyway","username":"cbf","ts":"2017-05-17T14:39:53.817Z"}
{"msg":"all that jenkins stuff is greek to me","username":"cbf","ts":"2017-05-17T14:40:03.408Z"}
{"msg":"@dave.enyeart  - I had a question on 8939 - let me see if it was answered","username":"mastersingh24","ts":"2017-05-17T14:40:26.383Z"}
{"msg":"It's 100% unclear to me exactly what we are publishing and where it's going","username":"mastersingh24","ts":"2017-05-17T14:41:03.927Z"}
{"msg":"@rameshthoomu Please clarify Gari's questions on 8939","username":"dave.enyeart","ts":"2017-05-17T14:41:29.131Z"}
{"msg":"I know which tools, etc - but no idea what the link(s) look like, etc.\nI also wanted to have a separate tarball per platform and it was a bit unclear if that is the case","username":"mastersingh24","ts":"2017-05-17T14:41:48.161Z"}
{"msg":"ok understood Gari.  Do you want to work through those questions with Ramesh here, in fabric-release, or in 8939?","username":"dave.enyeart","ts":"2017-05-17T14:42:26.373Z"}
{"msg":"Doesn't matter to me  ;)","username":"mastersingh24","ts":"2017-05-17T14:42:54.054Z"}
{"msg":"fabric-release might be more appropriate?","username":"mastersingh24","ts":"2017-05-17T14:43:04.956Z"}
{"msg":"@mastersingh24 in production will post tarball per platform here https://nexus.hyperledger.org/content/repositories/releases/","username":"rameshthoomu","ts":"2017-05-17T14:43:12.314Z"}
{"msg":"agreed, let's switch over there","username":"dave.enyeart","ts":"2017-05-17T14:43:14.063Z"}
{"msg":"but will post the final link once I trigger the job.. ","username":"rameshthoomu","ts":"2017-05-17T14:43:42.703Z"}
{"msg":"i mentioned gari and ramesh on #fabric-release to continue over there...","username":"dave.enyeart","ts":"2017-05-17T14:44:59.989Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=EKgenTJHtfeP7uT6G) @tkuhrt In the early days, we didnt have a makefile and thus third-party compilation phases were hard to integrate","username":"greg.haskins","ts":"2017-05-17T15:28:33.883Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EKgenTJHtfeP7uT6G","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EKgenTJHtfeP7uT6G","remote":true,"fileId":null,"fileName":null}]}
{"msg":"we could conceivably move to a JIT model now that we do have a makefile, but theres always the added complexity of build dependencies, etc, that you need to worry about","username":"greg.haskins","ts":"2017-05-17T15:29:08.929Z"}
{"msg":"i think with our $(DRUN) facilities, it could be managed, so we can think about doing this again","username":"greg.haskins","ts":"2017-05-17T15:29:29.807Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=iAaWYXDzAn79HAFvf) @tkuhrt The problem with go-get is that it will generally pull HEAD of the dependency, not a specific version.  There is a third-party solution at gopkg.in that adds a partial solution to the problem, but its not 100% reliable or available.  The official mechanism for controlling versions is the vendoring system, at least to my knowledge","username":"greg.haskins","ts":"2017-05-17T15:32:29.896Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=iAaWYXDzAn79HAFvf","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=iAaWYXDzAn79HAFvf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=dKokMCQ4e8TphsuAK) @JonathanLevi I have absolutely no problem cutting \"alpha2.1\" is that is appropriate..","username":"greg.haskins","ts":"2017-05-17T15:33:41.141Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=dKokMCQ4e8TphsuAK","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=dKokMCQ4e8TphsuAK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=7JXfFMpLGvsmdGjcW) @tkuhrt I just remembered a different issue","username":"greg.haskins","ts":"2017-05-17T15:34:32.546Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=7JXfFMpLGvsmdGjcW","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=7JXfFMpLGvsmdGjcW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"we have to check in golang specific generated files because of how golang works","username":"greg.haskins","ts":"2017-05-17T15:34:48.447Z"}
{"msg":"@here I plan on putting out some draft UT guidelines, but for starters, I offer http://artofunittesting.com/definition-of-a-unit-test/","username":"cbf","ts":"2017-05-17T20:27:52.684Z"}
{"msg":"one of the things that frustrates me is the fact that many of our unit tests aren't. They are integration tests. They have a requirement of some external process running, or some special setup.","username":"cbf","ts":"2017-05-17T20:28:37.947Z"}
{"msg":"a unit test needs to be self-contained ","username":"cbf","ts":"2017-05-17T20:28:53.331Z"}
{"msg":"for Golang, one should be able to run 'go test' in any folder and have it run the unit tests successfully","username":"cbf","ts":"2017-05-17T20:29:20.817Z"}
{"msg":"I should be able to place a watch on a folder whle I am developing and have the tests run automagically every time I change a file","username":"cbf","ts":"2017-05-17T20:29:44.733Z"}
{"msg":"@cbf `They are integration tests.` - I cringe (the chaincode tests) :-) ... ","username":"muralisr","ts":"2017-05-17T20:29:49.348Z"}
{"msg":"YOU! I'm looking at YOU @muralisr  (j/k)","username":"cbf","ts":"2017-05-17T20:30:09.523Z"}
{"msg":";-)","username":"cbf","ts":"2017-05-17T20:30:14.167Z"}
{"msg":"but do take a peek at https://gerrit.hyperledger.org/r/#/c/9395/ the shim side of it ","username":"muralisr","ts":"2017-05-17T20:30:24.007Z"}
{"msg":"I know :-)","username":"muralisr","ts":"2017-05-17T20:30:26.142Z"}
{"msg":"reason I mention that is this","username":"muralisr","ts":"2017-05-17T20:30:33.187Z"}
{"msg":"the work there can directly influence the peer side also","username":"muralisr","ts":"2017-05-17T20:30:44.249Z"}
{"msg":"so we could remove the executetransaction_test.go and replace with proper UT using the same approach ","username":"muralisr","ts":"2017-05-17T20:31:11.115Z"}
{"msg":"one thing I am thinking of is having an environment variable that we can check to run some \"unit tests\" when we are running integration testing","username":"cbf","ts":"2017-05-17T20:31:42.591Z"}
{"msg":"or maybe in CI generally","username":"cbf","ts":"2017-05-17T20:31:50.547Z"}
{"msg":"right","username":"muralisr","ts":"2017-05-17T20:31:52.941Z"}
{"msg":"we may also want to have tests run only as smoke tests","username":"cbf","ts":"2017-05-17T20:32:08.667Z"}
{"msg":"these \"integ. tests\" are valuable in their own right (IMO anyway) ...and will be good to run periodically somehow","username":"muralisr","ts":"2017-05-17T20:32:27.830Z"}
{"msg":"of course","username":"cbf","ts":"2017-05-17T20:32:38.588Z"}
{"msg":"not saying these are not valuable","username":"cbf","ts":"2017-05-17T20:32:46.040Z"}
{"msg":"completely agree there, but as unit tests they are less valuable","username":"cbf","ts":"2017-05-17T20:33:04.010Z"}
{"msg":"no, right..I didn't mean that you did","username":"muralisr","ts":"2017-05-17T20:33:05.153Z"}
{"msg":"they take too long, for starters","username":"cbf","ts":"2017-05-17T20:33:09.154Z"}
{"msg":"agreed","username":"muralisr","ts":"2017-05-17T20:33:15.137Z"}
{"msg":"they have served their purpose, and time to fix","username":"muralisr","ts":"2017-05-17T20:33:27.492Z"}
{"msg":"totally agree","username":"muralisr","ts":"2017-05-17T20:33:33.419Z"}
{"msg":"I really think I might be able to replace them with UT using the same approach as https://gerrit.hyperledger.org/r/#/c/9395/ ...","username":"muralisr","ts":"2017-05-17T20:34:13.202Z"}
{"msg":"just need to get to it","username":"muralisr","ts":"2017-05-17T20:34:17.051Z"}
{"msg":"going to place a hit on @muralisr for dropping 1k patches","username":"cbf","ts":"2017-05-17T20:34:45.782Z"}
{"msg":";-)","username":"cbf","ts":"2017-05-17T20:34:49.502Z"}
{"msg":"but first, I'll get that @mastersingh24 guy","username":"cbf","ts":"2017-05-17T20:35:03.289Z"}
{"msg":"whoa ...\tcore/chaincode/shim/shim_test.go is the big one","username":"muralisr","ts":"2017-05-17T20:35:27.102Z"}
{"msg":"its all test","username":"muralisr","ts":"2017-05-17T20:35:30.322Z"}
{"msg":"one of the beuty of that UT is how little the core has changed","username":"muralisr","ts":"2017-05-17T20:35:51.881Z"}
{"msg":"","username":"muralisr","ts":"2017-05-17T20:36:56.983Z","attachments":[{"title":"File Uploaded: Clipboard - May 17, 2017 4:37 PM","title_link":"/file-upload/rJjCrcEGTAp7ENP8d/Clipboard - May 17, 2017 4:37 PM","image_url":"/file-upload/rJjCrcEGTAp7ENP8d/Clipboard - May 17, 2017 4:37 PM","image_type":"image/png","image_size":13270,"url":"/file-upload/rJjCrcEGTAp7ENP8d/Clipboard - May 17, 2017 4:37 PM","remote":false,"fileId":"rJjCrcEGTAp7ENP8d","fileName":"Clipboard - May 17, 2017 4:37 PM"}]}
{"msg":"thats the only code change","username":"muralisr","ts":"2017-05-17T20:37:05.773Z"}
{"msg":"bless you @muralisr ! ","username":"cbf","ts":"2017-05-17T20:37:18.840Z"}
{"msg":"coverage: 70.3% of statements\nok  \tgithub.com/hyperledger/fabric/core/chaincode/shim\t3.061s","username":"cbf","ts":"2017-05-17T20:37:19.923Z"}
{"msg":":-)","username":"muralisr","ts":"2017-05-17T20:37:26.789Z"}
{"msg":"if I may say so, feel quite good about that work","username":"muralisr","ts":"2017-05-17T20:37:44.148Z"}
{"msg":"well done","username":"cbf","ts":"2017-05-17T20:37:51.453Z"}
{"msg":"people are trying =-)... ","username":"weeds","ts":"2017-05-17T20:40:55.592Z"}
{"msg":"on another positive note: I successfully got my \"alpha2 challenge\" client working today with full e2e with security/tls enabled","username":"greg.haskins","ts":"2017-05-18T00:25:51.629Z"}
{"msg":"and on another positive note, it was the fastest txn convergence I have ever observed, even with 4 peers and security enabled","username":"greg.haskins","ts":"2017-05-18T00:26:30.845Z"}
{"msg":"(faster than what I was used to on v0.6 and earlier prototypes of v1.0 before I was working with full clusters","username":"greg.haskins","ts":"2017-05-18T00:26:55.214Z"}
{"msg":"ill push an update later","username":"greg.haskins","ts":"2017-05-18T00:27:11.019Z"}
{"msg":"still waiting for anyone else to join me with a PR though, hint hint","username":"greg.haskins","ts":"2017-05-18T00:27:30.261Z"}
{"msg":"so, what is the consensus for the process in which we decide to accept CRs right now @here ","username":"greg.haskins","ts":"2017-05-18T01:40:46.070Z"}
{"msg":"for instance: https://gerrit.hyperledger.org/r/#/c/8889/ @cbf ","username":"greg.haskins","ts":"2017-05-18T01:40:56.902Z"}
{"msg":"CR 8889 touches .go code, so unclear on how to proceed ","username":"greg.haskins","ts":"2017-05-18T01:41:21.866Z"}
{"msg":"`Logger` interface definition aside (which seems a bit too drastic and was caught in review), as far as I can tell (1) no new functionality was added, and (2) the refactoring in the `*.go` files was driven by the need to cover the code better via unit tests. It's a good opportunity for me to double-check as well, but these kind of edits should not be discouraged.","username":"kostas","ts":"2017-05-18T11:53:02.427Z"}
{"msg":"`Logger` interface definition aside (which seems a bit too drastic and was caught in review), as far as I can tell (1) no new functionality was added, and (2) the refactoring in the `*.go` files was driven by the need to cover the code better via unit tests. It's a good opportunity for me to double-check as well, but these kind of edits should not be discouraged. @greg.haskins @cbf ","username":"kostas","ts":"2017-05-18T11:53:02.427Z"}
{"msg":"`Logger` interface definition aside (which seems a bit too drastic and was caught in review), as far as I can tell (1) no new functionality was added, and (2) the refactoring in a non-test file was driven by the need to cover the code better via unit tests. It's a good opportunity for me to double-check as well, but these kind of edits should not be discouraged. @greg.haskins @cbf ","username":"kostas","ts":"2017-05-18T11:53:02.427Z"}
{"msg":"`Logger` interface definition aside (which seems a bit too drastic and was caught in review), as far as I can tell (1) no new functionality was added, and (2) the refactoring in a non-test file was driven by the need to cover the code better via unit tests. It's a good opportunity for me to double-check as well, but and yes, it'd be ideal if we could avoid them, but these kind of edits should not be forbidden. @greg.haskins @cbf ","username":"kostas","ts":"2017-05-18T11:53:02.427Z"}
{"msg":"`Logger` interface definition aside (which seems a bit too drastic and was caught in review), as far as I can tell (1) no new functionality was added, and (2) the refactoring in a non-test file was driven by the need to cover the code better via unit tests. It's a good opportunity for me to double-check as well, and yes it'd be ideal if we could avoid them, but these kind of edits should not be forbidden. @greg.haskins @cbf ","username":"kostas","ts":"2017-05-18T11:53:02.427Z"}
{"msg":"that was my take","username":"cbf","ts":"2017-05-18T11:56:40.809Z"}
{"msg":"we should ask others","username":"cbf","ts":"2017-05-18T11:56:55.103Z"}
{"msg":"@greg.haskins `still waiting for anyone else to join me with a PR though, hint hint` ... hint taken up ... plan for by monday :-)","username":"muralisr","ts":"2017-05-18T12:05:03.843Z"}
{"msg":"@JonathanLevi you ok with https://gerrit.hyperledger.org/r/#/c/9199/16? I asked about this earlier. There is new code, but as Yacov explained it was needed to fix the bug. https://jira.hyperledger.org/browse/FAB-3109 this is one of the issues that is affecting CI. Suggest it be merged.","username":"cbf","ts":"2017-05-18T20:12:30.199Z"}
{"msg":"Yes, I honestly don't mind the 200 LOC of production code, considering the fix + the tests in adds. Risk-wise, it makes sense. Give me a mo.","username":"JonathanLevi","ts":"2017-05-18T20:14:19.527Z"}
{"msg":"Merged. Risk-return, I meant ;-)","username":"JonathanLevi","ts":"2017-05-18T20:18:04.859Z"}
{"msg":"Merged. Risk-return-wise, I meant ;-)","username":"JonathanLevi","ts":"2017-05-18T20:18:04.859Z"}
{"msg":"a quick question on UT for examples/ ","username":"muralisr","ts":"2017-05-19T15:11:57.514Z"}
{"msg":"","username":"muralisr","ts":"2017-05-19T15:12:01.869Z","attachments":[{"title":"File Uploaded: Clipboard - May 19, 2017 11:12 AM","title_link":"/file-upload/ibXcjzMs4nqoxzP4Q/Clipboard - May 19, 2017 11:12 AM","image_url":"/file-upload/ibXcjzMs4nqoxzP4Q/Clipboard - May 19, 2017 11:12 AM","image_type":"image/png","image_size":212147,"url":"/file-upload/ibXcjzMs4nqoxzP4Q/Clipboard - May 19, 2017 11:12 AM","remote":false,"fileId":"ibXcjzMs4nqoxzP4Q","fileName":"Clipboard - May 19, 2017 11:12 AM"}]}
{"msg":"do we need to count these against UT coverage ? I'd say not... but what does everyone think ?","username":"muralisr","ts":"2017-05-19T15:13:11.254Z"}
{"msg":"I concur","username":"yacovm","ts":"2017-05-19T16:15:12.129Z"}
{"msg":"Likewise. I agree with you @muralisr.","username":"JonathanLevi","ts":"2017-05-19T17:03:24.643Z"}
{"msg":"Hi, regarding this \nhttps://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=Sj9XDkR2gedne98dk\n\nCrypto squad's test coverage is already above 85%. We have no pending CRs associated to increasing test coverage in crypto components. \nCrypto related packages UT coverage  is listed below:\n\n```\n15:10:21 unit-tests_1  | ?   \tgithub.com/hyperledger/fabric/bccsp\t[no test files]\n15:10:29 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/factory\t0.044s\tcoverage: 87.3% of statements\n15:10:30 unit-tests_1  | ?   \tgithub.com/hyperledger/fabric/bccsp/mocks\t[no test files]\n15:12:42 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/pkcs11\t127.159s\tcoverage: 61.4% of statements\n15:12:44 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/signer\t0.069s\tcoverage: 100.0% of statements\n15:14:06 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/sw\t77.711s\tcoverage: 90.1% of statements\n15:14:06 unit-tests_1  | ?   \tgithub.com/hyperledger/fabric/bccsp/sw/mocks\t[no test files]\n15:14:08 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/utils\t0.133s\tcoverage: 87.0% of statements\n```\ngithub.com/hyperledger/fabric/bccsp/pkcs11 package is related to HSM work. @vpaprots is working on refactoring it (related CR https://gerrit.hyperledger.org/r/#/c/9441/), but tests for the refactored code would need to be added by @vpaprots afterwards.\n\nSo far, @yacovm pointed out we should work on increasing test coverage for github.com/hyperledger/fabric/bccsp (the code there is very simple but we can still work on covering it). Would you have any other comment for crypto UT coverage so far?","username":"elli-androulaki","ts":"2017-05-19T17:40:39.170Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=Sj9XDkR2gedne98dk","url":"https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=Sj9XDkR2gedne98dk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"crypto is probably the most crucial area to have bug free","username":"cbf","ts":"2017-05-19T17:55:34.497Z"}
{"msg":"what is holding us back from going further?","username":"cbf","ts":"2017-05-19T17:55:46.750Z"}
{"msg":"85 is not a goal, it is a guideline","username":"cbf","ts":"2017-05-19T17:55:54.796Z"}
{"msg":"@mastersingh24 what say you?","username":"cbf","ts":"2017-05-19T17:56:11.633Z"}
{"msg":"They are above 85%\n```\n08:59:02 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/msp\t0.143s\tcoverage: 85.6% of statements\n08:59:19 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/msp/mgmt\t0.059s\tcoverage: 87.8% of statements\n15:10:29 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/factory\t0.044s\tcoverage: 87.3% of statements\n15:12:44 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/signer\t0.069s\tcoverage: 100.0% of statements\n15:14:06 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/sw\t77.711s\tcoverage: 90.1% of statements\n```\nI think that there are parts of fabric that are just as important as crypto because they hold all the access control, i.e\n`github.com/hyperledger/fabric/core/endorser\t75.808s\tcoverage: 77.4% of statements`\nand `github.com/hyperledger/fabric/core/scc/vscc\t0.107s\tcoverage: 85.7% of statements` \n","username":"yacovm","ts":"2017-05-19T18:11:09.589Z"}
{"msg":"They are above 85%\n```\n08:59:02 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/msp\t0.143s\tcoverage: 85.6% of statements\n08:59:19 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/msp/mgmt\t0.059s\tcoverage: 87.8% of statements\n15:10:29 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/factory\t0.044s\tcoverage: 87.3% of statements\n15:12:44 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/signer\t0.069s\tcoverage: 100.0% of statements\n15:14:06 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/sw\t77.711s\tcoverage: 90.1% of statements\n```\nI think that there are parts of fabric that are just as important as crypto because they hold all the access control, i.e `github.com/hyperledger/fabric/core/endorser\t75.808s\tcoverage: 77.4% of statements`\nand `github.com/hyperledger/fabric/core/scc/vscc\t0.107s\tcoverage: 85.7% of statements` \n","username":"yacovm","ts":"2017-05-19T18:11:09.589Z"}
{"msg":"They are above 85% except the `bccsp` package which has no tests, but it is only interfaces and accessor methods\n```\n08:59:02 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/msp\t0.143s\tcoverage: 85.6% of statements\n08:59:19 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/msp/mgmt\t0.059s\tcoverage: 87.8% of statements\n15:10:29 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/factory\t0.044s\tcoverage: 87.3% of statements\n15:12:44 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/signer\t0.069s\tcoverage: 100.0% of statements\n15:14:06 unit-tests_1  | ok  \tgithub.com/hyperledger/fabric/bccsp/sw\t77.711s\tcoverage: 90.1% of statements\n```\nI think that there are parts of fabric that are just as important as crypto because they hold all the access control, i.e `github.com/hyperledger/fabric/core/endorser\t75.808s\tcoverage: 77.4% of statements`\nand `github.com/hyperledger/fabric/core/scc/vscc\t0.107s\tcoverage: 85.7% of statements` \n","username":"yacovm","ts":"2017-05-19T18:11:09.589Z"}
{"msg":"I will be getting `github.com/hyperledger/fabric/bccsp/pkcs11` up (well, @harrijk will be doing bulk of that, trying to spread some HSM knowledge), but @adc @elli-androulaki can we get the rest from you please?","username":"vpaprots","ts":"2017-05-19T18:11:56.456Z"}
{"msg":"I will be getting `github.com/hyperledger/fabric/bccsp/pkcs11` up (well, @harrijk will be doing bulk of that, trying to spread some HSM knowledge), but @adc @elli-androulaki can we get the rest of bccsp from you please?","username":"vpaprots","ts":"2017-05-19T18:11:56.456Z"}
{"msg":"@cbf @mastersingh24 Murali posted question up above indicating that we might not need to tackle examples for UT- seems like Yacov/Jonathan-- are you ok with this?  Do we need to post a proposal on this or is it ok to just agree across maintainers?","username":"weeds","ts":"2017-05-19T18:23:47.819Z"}
{"msg":"BTW: We can/should move the non-maintainers discussions regarding the release exist-criteria, release quality thresholds to the #fabric-release or so.","username":"JonathanLevi","ts":"2017-05-19T18:29:31.533Z"}
{"msg":"BTW: We can/should move the non-maintainers discussions regarding the release exit-criteria, release quality thresholds to the #fabric-release or so... (especially as many do not write on this channel...)","username":"JonathanLevi","ts":"2017-05-19T18:29:31.533Z"}
{"msg":"BTW: We can/should move the non-maintainers' discussions regarding the release exit-criteria, release quality thresholds to the #fabric-release or so... (especially as many do not write on this channel...)","username":"JonathanLevi","ts":"2017-05-19T18:29:31.533Z"}
{"msg":"UT coverage that matters is production code - examples don't fall into that category - but that does not mean that they should NOT have UT - they should","username":"cbf","ts":"2017-05-19T18:37:25.549Z"}
{"msg":"especially if they are supposed to be real examples for our users","username":"cbf","ts":"2017-05-19T18:37:46.851Z"}
{"msg":"@cbf just posted following on the fabric-peer-endorser-committer channel","username":"muralisr","ts":"2017-05-19T20:32:44.496Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=4rJFNn8vKEAEjEJ4m","username":"muralisr","ts":"2017-05-19T20:32:46.773Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=4rJFNn8vKEAEjEJ4m","url":"https://chat.hyperledger.org/channel/fabric-peer-endorser-committer?msg=4rJFNn8vKEAEjEJ4m","remote":true,"fileId":null,"fileName":null}]}
{"msg":"we could add examples to the sub-tasks there once the main ones get completed","username":"muralisr","ts":"2017-05-19T20:33:31.146Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2017-05-19T20:41:13.648Z","type":"ul"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=5oaevRcnRaBAxRDjL) @muralisr FAB-4058 (sub-task of 4046), looks like an overkill, there nothing testable in there. :)","username":"C0rWin","ts":"2017-05-19T21:23:38.114Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=5oaevRcnRaBAxRDjL","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=5oaevRcnRaBAxRDjL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"ah indeed :-)","username":"muralisr","ts":"2017-05-19T23:41:31.610Z"}
{"msg":"feel free to assign to yourself and close ;-)","username":"muralisr","ts":"2017-05-19T23:41:52.334Z"}
{"msg":"@here, this is bad, the getting started doesn't work","username":"lehors","ts":"2017-05-20T16:40:52.417Z"}
{"msg":"@cbf @mastersingh24 see https://chat.hyperledger.org/channel/fabric?msg=HFugez8GyQ5S5xKTS","username":"lehors","ts":"2017-05-20T16:51:20.753Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric?msg=HFugez8GyQ5S5xKTS","url":"https://chat.hyperledger.org/channel/fabric?msg=HFugez8GyQ5S5xKTS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"somebody needs to fix this stuff by uploading the latest tar balls in the right places","username":"lehors","ts":"2017-05-20T16:51:37.025Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/9619/ - URGENT","username":"nickgaski","ts":"2017-05-20T17:50:01.553Z"}
{"msg":"See #fabric-release ","username":"lehors","ts":"2017-05-20T18:11:38.014Z"}
{"msg":"this is likely because they are being uploaded to log storage and that rotates","username":"cbf","ts":"2017-05-20T19:08:49.949Z"}
{"msg":"@rameshthoomu this needs to be fixed please","username":"cbf","ts":"2017-05-20T19:09:03.353Z"}
{"msg":"@rjones @jwagantall ","username":"cbf","ts":"2017-05-20T19:09:23.000Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2017-05-20T19:09:23.063Z","type":"uj"}
{"msg":"Done","username":"rameshthoomu","ts":"2017-05-20T19:09:30.650Z"}
{"msg":"ok","username":"cbf","ts":"2017-05-20T19:09:34.689Z"}
{"msg":"I have pushed to release url","username":"rameshthoomu","ts":"2017-05-20T19:09:43.439Z"}
{"msg":"Nick is updating bootstrap script once basic testing is done","username":"rameshthoomu","ts":"2017-05-20T19:10:18.780Z"}
{"msg":"do we have something in place to keep the content fresh? do we know the timing of the log rotation?","username":"cbf","ts":"2017-05-20T19:10:35.185Z"}
{"msg":"can we disable during Consensus?","username":"cbf","ts":"2017-05-20T19:10:43.127Z"}
{"msg":"Now seems we are good because I have pushed to release URL. Will check with ry on log rotation.. we have to keep content in release URL forever or atleast few months ","username":"rameshthoomu","ts":"2017-05-20T19:13:08.619Z"}
{"msg":"it is pushed","username":"nickgaski","ts":"2017-05-20T19:41:21.741Z"}
{"msg":"@cbf the log urls are ephemeral and were never supposed to be used like this for exactly this reason. Anything that points to https://logs.hyp... that _isn't jenkins_ will break","username":"rjones","ts":"2017-05-20T22:35:35.944Z"}
{"msg":"@rjones yes, I know, but as I said to @jwagantall the whole 'use maven' thing was a) misguided and b) not working after multiple repeated attempts... there is no reason we cannot just use the object store for raw storage and move on","username":"cbf","ts":"2017-05-21T12:23:59.285Z"}
{"msg":"Not sure who's managing JIRA (@cbf?), but let's move v1.00-alpha2 to the \"Released versions\" section.","username":"kostas","ts":"2017-05-21T12:33:03.466Z"}
{"msg":"","username":"kostas","ts":"2017-05-21T12:33:50.181Z","attachments":[{"title":"File Uploaded: Screen Shot 2017-05-21 at 08.30.21.png","title_link":"/file-upload/4ZTE4i9gubadNtiSN/Screen Shot 2017-05-21 at 08.30.21.png","image_url":"/file-upload/4ZTE4i9gubadNtiSN/Screen Shot 2017-05-21 at 08.30.21.png","image_type":"image/png","image_size":11846,"url":"/file-upload/4ZTE4i9gubadNtiSN/Screen Shot 2017-05-21 at 08.30.21.png","remote":false,"fileId":"4ZTE4i9gubadNtiSN","fileName":"Screen Shot 2017-05-21 at 08.30.21.png"}]}
{"msg":"@kostas - done - \nhttps://jira.hyperledger.org/projects/FAB?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released","username":"mastersingh24","ts":"2017-05-21T14:21:50.006Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=EY59tjKbDhovaKskG) @cbf As one of the people who suggested it, I take responsibility if there were problems with that method...but I am not sure where the problem was but I suspect it was the approach","username":"greg.haskins","ts":"2017-05-21T15:08:32.152Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EY59tjKbDhovaKskG","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EY59tjKbDhovaKskG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"To be clear, I was suggesting that we use the deploy-file plugin: http://maven.apache.org/plugins/maven-deploy-plugin/usage.html","username":"greg.haskins","ts":"2017-05-21T15:08:51.922Z"}
{"msg":"I didnt get the impression that was the approach that was tried...but if it was and it wasnt practical...apologies for the rat hole","username":"greg.haskins","ts":"2017-05-21T15:09:16.092Z"}
{"msg":"heres a basic example","username":"greg.haskins","ts":"2017-05-21T15:30:27.610Z"}
{"msg":"```$ mvn install:install-file -Dfile=release.tar.gz -DgroupId=org.hyperledger -DartifactId=fabric -Dversion=1.0.0-alpha2 -Dpackaging=tgz\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building Maven Stub Project (No POM) 1\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install-file (default-cli) @ standalone-pom ---\n[INFO] Installing /home/ghaskins/sandbox/git/chaintool/examples/example02/client/release.tar.gz to /home/ghaskins/.m2/repository/org/hyperledger/fabric/1.0.0-alpha2/fabric-1.0.0-alpha2.tgz\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 0.663 s\n[INFO] Finished at: 2017-05-21T11:29:51-04:00\n[INFO] Final Memory: 6M/153M\n[INFO] ------------------------------------------------------------------------```","username":"greg.haskins","ts":"2017-05-21T15:30:32.956Z"}
{"msg":"this took \"release.tar.gz\" and surfaced it as a maven coordinate under org/hyperledger/fabric/1.0.0-alpha2","username":"greg.haskins","ts":"2017-05-21T15:31:05.850Z"}
{"msg":"(note that install-file and deploy-file are related...where the former only installs to the local ~/.m2 repo and deploy installs to nexus","username":"greg.haskins","ts":"2017-05-21T15:32:16.722Z"}
{"msg":"in any case, it should result in the raw artifact being accessible in the repo","username":"greg.haskins","ts":"2017-05-21T15:32:38.188Z"}
{"msg":"in this case: org/hyperledger/fabric/1.0.0-alpha2/fabric-1.0.0-alpha2.tgz","username":"greg.haskins","ts":"2017-05-21T15:32:59.468Z"}
{"msg":"note that there is no need for a pom.xml in the project itself","username":"greg.haskins","ts":"2017-05-21T15:35:30.442Z"}
{"msg":"this can be driven strictly as an adjunct CI script","username":"greg.haskins","ts":"2017-05-21T15:35:43.682Z"}
{"msg":"somehow, it morphed into something else, then. I think that it had to do with the fact that someone at LF was insisting that there be a staging deploy of the unsigned tarball so that it could be signed and published after the fact (manually, because there is no HSM to store the keys, apparently). ","username":"cbf","ts":"2017-05-22T11:13:34.794Z"}
{"msg":"@greg.haskins ^^","username":"cbf","ts":"2017-05-22T11:13:41.936Z"}
{"msg":"I suggested last week that we take necessary steps to publish the file as you described, and we can work on some sort of intermediated signing step afterwards.","username":"cbf","ts":"2017-05-22T11:14:47.044Z"}
{"msg":"Frankly, I don't see how manually signing assures anyone that the bits have not been tampered;-)","username":"cbf","ts":"2017-05-22T11:15:13.444Z"}
{"msg":"right, it really doesn't afaict","username":"greg.haskins","ts":"2017-05-22T12:17:04.830Z"}
{"msg":"in my mind, the only thing you really need to do is have the build pipeline sign in","username":"greg.haskins","ts":"2017-05-22T12:17:29.830Z"}
{"msg":"in my mind, the only thing you really need to do is have the build pipeline sign them","username":"greg.haskins","ts":"2017-05-22T12:17:29.830Z"}
{"msg":"e.g. if the artifacts were signed by jenkins@hyperledger.org, or whatever, that achieves the maximum purpose","username":"greg.haskins","ts":"2017-05-22T12:18:13.251Z"}
{"msg":"(and that can wait post alpha2 ;)","username":"greg.haskins","ts":"2017-05-22T12:18:58.668Z"}
{"msg":"at this stage,  a stable URL is far more important","username":"greg.haskins","ts":"2017-05-22T12:19:26.167Z"}
{"msg":"@cbf I think this is similar to deploy:deploy-file except includes GPG signatures: http://maven.apache.org/plugins/maven-gpg-plugin/sign-and-deploy-file-mojo.html","username":"greg.haskins","ts":"2017-05-22T12:22:48.357Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=aD6fE5SdjsAAocStN) @greg.haskins exactly","username":"cbf","ts":"2017-05-22T12:23:27.264Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aD6fE5SdjsAAocStN","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aD6fE5SdjsAAocStN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf I digress...apologies if the \"misguided\" comment was directed at me.  I only aim to help but am not infallible ","username":"greg.haskins","ts":"2017-05-22T12:26:43.255Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=7DnWx94b4YPwRwHxW) @rameshthoomu @rjones @jwagantall was this approach tried but failed?","username":"greg.haskins","ts":"2017-05-22T12:30:03.282Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=7DnWx94b4YPwRwHxW","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=7DnWx94b4YPwRwHxW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@greg.haskins we have used  deploy:deploy-file plug in to push to nexus..","username":"rameshthoomu","ts":"2017-05-22T13:23:17.344Z"}
{"msg":"@here, from now on I suggest we do not announce new releases on Friday unless people are around that weekend and committed to keep an eye on RC for cries for help from the community","username":"lehors","ts":"2017-05-22T13:44:23.215Z"}
{"msg":"Has joined the channel.","username":"dolanor","ts":"2017-05-22T15:17:26.311Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=P66F2Hkfifxhwv6Pq) @rameshthoomu I guess I do not understand how one could use deploy-file and end up with an unversioned artifact in an ephemeral respository","username":"greg.haskins","ts":"2017-05-22T15:34:34.672Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=P66F2Hkfifxhwv6Pq","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=P66F2Hkfifxhwv6Pq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"in my experience, that always pushed a stable coordinate to a stable repo","username":"greg.haskins","ts":"2017-05-22T15:34:46.576Z"}
{"msg":"there must be some use of it that I am not aware of","username":"greg.haskins","ts":"2017-05-22T15:35:05.971Z"}
{"msg":"published 1.0.0-alpha2 as a version to these binaries? also, we have a script which does this task https://gerrit.hyperledger.org/r/#/c/8939/38/jjb/fabric/include-raw-fabric-push-fabric-binaries.sh","username":"rameshthoomu","ts":"2017-05-22T15:41:50.191Z"}
{"msg":"hmm, looks fine..so what was the problem","username":"greg.haskins","ts":"2017-05-22T15:43:02.470Z"}
{"msg":"I don't see any problem now.. ","username":"rameshthoomu","ts":"2017-05-22T15:43:24.556Z"}
{"msg":"im confused","username":"greg.haskins","ts":"2017-05-22T15:44:32.719Z"}
{"msg":"lol","username":"cbf","ts":"2017-05-22T15:46:05.680Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=EY59tjKbDhovaKskG) @rameshthoomu I was responding to this","username":"greg.haskins","ts":"2017-05-22T15:46:24.619Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EY59tjKbDhovaKskG","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EY59tjKbDhovaKskG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"it sounded like that was not working and was believed to be untenable ","username":"greg.haskins","ts":"2017-05-22T15:46:53.777Z"}
{"msg":"is that the case, or is it working now/","username":"greg.haskins","ts":"2017-05-22T15:47:17.197Z"}
{"msg":"?","username":"greg.haskins","ts":"2017-05-22T15:47:18.350Z"}
{"msg":"@greg.haskins sorry if i am just catching up to your questions... the reason why we were having issues is becuase fabric is not fully a maven repo and hence it doesnt have all artifacts recognized as maven targets... we tried to get help from the devs but it is not an easy task and probably not suitable for fabric...  so we decided to use the plugin that just does a simple push of the tarball that contains the built artifacts","username":"jwagantall","ts":"2017-05-22T15:52:05.265Z"}
{"msg":"@jwagantall understood, and no apologies necessary..im just trying to understand what problem there is","username":"greg.haskins","ts":"2017-05-22T15:53:00.469Z"}
{"msg":"to be clear: I fully support (and even suggested) that this should be a \"deploy-file\" scenario...as you pointed out, fabric is not a maven-managed project (nor do I think it should become one","username":"greg.haskins","ts":"2017-05-22T15:53:42.193Z"}
{"msg":"Initially we have used `mvn deploy` plugin to publish artificats from CI  to nexus and we are able to publish to logs/snapshots/releases URL's later @jwagantall suggested we should not use this plugin and  use `mvn staging deploy` plugin to push artifacts and we consistently failed to do that due some environment settings in sandbox. ","username":"rameshthoomu","ts":"2017-05-22T15:55:00.874Z"}
{"msg":"if we have the scenario where something like \"cryptogen\" wants to be surfaced to users to download, using nexus to surface it should be a natural way to do it with good release engineering practices, like versioned URLs","username":"greg.haskins","ts":"2017-05-22T15:55:04.277Z"}
{"msg":"We finally come up with using `mvn deploy:deploy-file` plugin (without pom.xml) and successfully published artifacts to nexus.. ","username":"rameshthoomu","ts":"2017-05-22T15:55:43.507Z"}
{"msg":"I am not familiar with the staging plugin, but of everthing I do understand, this is a deploy-file use case","username":"greg.haskins","ts":"2017-05-22T15:56:32.199Z"}
{"msg":"and it should be a straightforward one at that","username":"greg.haskins","ts":"2017-05-22T15:56:55.836Z"}
{"msg":"right @greg.haskins, the staging benefit of using maven2 is just suitable for fully maven repos which is not our case. That's what I was able to  fully learn last week, so we should be good with the current approach we followed.. ","username":"jwagantall","ts":"2017-05-22T15:58:03.541Z"}
{"msg":"ok","username":"greg.haskins","ts":"2017-05-22T15:58:19.761Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=JtizsZbqnoWoWTjpp) @greg.haskins +2","username":"cbf","ts":"2017-05-22T16:09:38.790Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=JtizsZbqnoWoWTjpp","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=JtizsZbqnoWoWTjpp","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@here https://gerrit.hyperledger.org/r/#/c/7741/14 needs agreement by maintainers to be merged... it LGTM but I would like 2-3 other maintainers to concur given the amount of code changed","username":"cbf","ts":"2017-05-22T16:57:54.643Z"}
{"msg":"I've created a query that can be used to find the FABs that need to be agreed upon by maintainers","username":"cbf","ts":"2017-05-22T20:10:17.713Z"}
{"msg":"https://jira.hyperledger.org/issues/?filter=10616","username":"cbf","ts":"2017-05-22T20:10:19.097Z"}
{"msg":"@rjones very low priority but `WIP_fabric_v1` `fabric_v1` branches of JSDK are dead and never went anywhere. Just to keep things clean can we delete them in GIT repo?  I've deleted them from gerrit but that I guess doesn't sync.","username":"rickr","ts":"2017-05-22T22:35:51.669Z"}
{"msg":"@here just spoke to the legal folk at LF... they are encouraging projects to use the SPDX short identifier form of license header as it is easier to automate etc","username":"cbf","ts":"2017-05-23T14:38:28.388Z"}
{"msg":"details here https://spdx.org/sites/cpstandard/files/pages/files/using_spdx_license_list_short_identifiers.pdf","username":"cbf","ts":"2017-05-23T14:38:34.018Z"}
{"msg":"I've reverted my changesets accordingly https://gerrit.hyperledger.org/r/#/c/9673/","username":"cbf","ts":"2017-05-23T14:39:23.561Z"}
{"msg":"and updated the guidance","username":"cbf","ts":"2017-05-23T14:39:30.421Z"}
{"msg":"please check license headers for this new form... I will address all files without a header, but we should start asking devs to make the change to the short form when they change source","username":"cbf","ts":"2017-05-23T14:40:22.162Z"}
{"msg":"Won't it cause conflicts though?","username":"yacovm","ts":"2017-05-23T14:40:56.639Z"}
{"msg":"if 2 people change the same file and both update the license header","username":"yacovm","ts":"2017-05-23T14:41:12.226Z"}
{"msg":"@yacovm better to do that as we go to reduce merge conflicts","username":"binhn","ts":"2017-05-23T15:03:13.831Z"}
{"msg":"@yacovm @cbf @binhn I would think this type of change is highly conducive to automated find+replace...it might make sense to just tackle as many of them this way as possible to reduce merge conflicts and general codebase inconsistency","username":"greg.haskins","ts":"2017-05-23T15:36:20.709Z"}
{"msg":"e.g. the .go files all probably have the same pattern","username":"greg.haskins","ts":"2017-05-23T15:36:40.891Z"}
{"msg":"You mean - we should have a change set that only changes the license right?","username":"yacovm","ts":"2017-05-23T15:36:52.059Z"}
{"msg":"@yacovm exactly","username":"greg.haskins","ts":"2017-05-23T15:37:00.899Z"}
{"msg":"This is where I was getting at :)","username":"yacovm","ts":"2017-05-23T15:37:07.194Z"}
{"msg":"at least in groups (e.g. all .go files, all .sh files, etc)","username":"greg.haskins","ts":"2017-05-23T15:37:23.113Z"}
{"msg":"yeah","username":"yacovm","ts":"2017-05-23T15:37:29.712Z"}
{"msg":"if someone doesnt tackle all patterns","username":"greg.haskins","ts":"2017-05-23T15:37:32.429Z"}
{"msg":"problem is with the merge conflicts of this massive cr","username":"binhn","ts":"2017-05-23T15:38:38.108Z"}
{"msg":"we would need to coordinate","username":"binhn","ts":"2017-05-23T15:38:52.119Z"}
{"msg":"well if we do it as Greg said we won't have because it's going to be different lines","username":"yacovm","ts":"2017-05-23T15:38:59.263Z"}
{"msg":"and stop merging until this big one is in","username":"binhn","ts":"2017-05-23T15:39:11.509Z"}
{"msg":"the contention is line-based, rather than file based","username":"yacovm","ts":"2017-05-23T15:39:14.758Z"}
{"msg":"git doesn't work that well in my experience -- maybe we'd be lucky with this one","username":"binhn","ts":"2017-05-23T15:40:40.730Z"}
{"msg":"I'd say the problem is something else","username":"yacovm","ts":"2017-05-23T15:40:44.162Z"}
{"msg":"you can't cover added files in pending CRs ;)","username":"yacovm","ts":"2017-05-23T15:40:52.987Z"}
{"msg":"Why isn't such a change the very last thing we tackle before we cut 1.0.0?","username":"kostas","ts":"2017-05-23T15:56:08.730Z"}
{"msg":"@kostas yeah, my thought too","username":"binhn","ts":"2017-05-23T15:57:03.663Z"}
{"msg":"@greg.haskins sure, it could be... but whenever you have these large changes, there can be hell to pay in terms of merge conflicts with existing CRs","username":"cbf","ts":"2017-05-23T16:12:06.710Z"}
{"msg":"what I have already submitted is bad enough (though these did not have anything to replace)","username":"cbf","ts":"2017-05-23T16:12:26.243Z"}
{"msg":"@yacovm even if last thing, still leaves any in-progress CRs needing to be rebased","username":"cbf","ts":"2017-05-23T16:13:09.832Z"}
{"msg":"it is not urgent","username":"cbf","ts":"2017-05-23T16:13:17.889Z"}
{"msg":"getting files with NO LICENSE HEADER is important","username":"cbf","ts":"2017-05-23T16:13:32.828Z"}
{"msg":"but changing to SPDX could be a gradual change","username":"cbf","ts":"2017-05-23T16:13:41.495Z"}
{"msg":"@cbf fair point...though I suspect that the nature of the change would have smaller likelihood of git-conflicts than typical","username":"greg.haskins","ts":"2017-05-23T16:15:58.773Z"}
{"msg":"e.g. only CRs which happened to change either the license comment or the first few lines of the file would conflict, and I doubt there would be many of those","username":"greg.haskins","ts":"2017-05-23T16:16:50.155Z"}
{"msg":"IOW, git is pretty good at sorting this out as long as you are > +- 3 lines away from a competing change","username":"greg.haskins","ts":"2017-05-23T16:18:24.583Z"}
{"msg":"in the end, agree its not high priority","username":"greg.haskins","ts":"2017-05-23T16:19:00.086Z"}
{"msg":"@here https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104#Filter-Results/10517 I added a gadget to the dashboard that lists the issues we need to agree on","username":"cbf","ts":"2017-05-23T19:46:35.714Z"}
{"msg":"we had intended to \"meet\" daily... that isn't working out since Consensus but we should not let these fester long","username":"cbf","ts":"2017-05-23T19:47:02.762Z"}
{"msg":"suggest we just vote for issues we are OKAY with (and their CR)","username":"cbf","ts":"2017-05-23T19:47:24.838Z"}
{"msg":"@cbf would like to add https://jira.hyperledger.org/browse/FAB-3618 to that list please","username":"muralisr","ts":"2017-05-23T19:56:59.318Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=hXXTiRvykZxirNqRu) @cbf I didn't know about these standard identifiers but that's a very nice development.","username":"lehors","ts":"2017-05-23T19:57:02.249Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=hXXTiRvykZxirNqRu","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=hXXTiRvykZxirNqRu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I guess @vpaprots  would like to add https://jira.hyperledger.org/browse/FAB-3968 to the list @cbf ","username":"yacovm","ts":"2017-05-23T20:03:54.444Z"}
{"msg":"@yacovm just add 'review-needed' label to the issue","username":"cbf","ts":"2017-05-23T20:09:32.925Z"}
{"msg":"I tried","username":"yacovm","ts":"2017-05-23T20:09:42.737Z"}
{"msg":"you cannot edit?","username":"cbf","ts":"2017-05-23T20:09:55.364Z"}
{"msg":"ah nvm forget it","username":"yacovm","ts":"2017-05-23T20:10:30.180Z"}
{"msg":"I thought it was a tag, not a label","username":"yacovm","ts":"2017-05-23T20:10:53.153Z"}
{"msg":"Has left the channel.","username":"baohua","ts":"2017-05-24T14:11:19.951Z","type":"ul"}
{"msg":"as a gentle reminder to maintainers and anyone else creating defects in JIRA, please complete the affectedVersion and assign fixVersion to either 1.0.0 or Future if it can be deferred","username":"cbf","ts":"2017-05-25T13:33:49.020Z"}
{"msg":"@here ^^","username":"cbf","ts":"2017-05-25T13:33:55.532Z"}
{"msg":"ah, what is 1.1 for?","username":"lehors","ts":"2017-05-25T13:34:39.681Z"}
{"msg":"or that","username":"cbf","ts":"2017-05-25T13:59:56.399Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/9441/ has 4 votes so far. Should we start reviewing it?","username":"yacovm","ts":"2017-05-25T14:23:04.651Z"}
{"msg":"@cbf For the configtx tool stuff I've been working on (FAB-1678) I'm finally ready to start exposing the function via a REST api.  It seems that https://github.com/gorilla/mux is a popular option for REST support.\n\n1.  It is BSD3 licensed, is this okay?\n2.  Assuming 1678 is approved to go into v1, is adding a new vendored package going to cause problems?","username":"jyellick","ts":"2017-05-25T14:30:50.303Z"}
{"msg":"I want to have a group review on this large CR containing integration tests https://gerrit.hyperledger.org/r/#/c/9261/ [FAB-3559] Performance Traffic Engine.  The author will walk through major modules and playback, then I want to make decision on merge it or not. I am thinking 10am EST Wed. 5/31. I need at least @jimthematrix @muralisr @kostas @smithbk @C0rWin  to cover all key components of fabric. Let me know if the date time works for you. All are welcome of course. ","username":"binhn","ts":"2017-05-25T14:58:46.199Z"}
{"msg":"BSD shouldn't cause an issue","username":"cbf","ts":"2017-05-25T15:30:21.165Z"}
{"msg":"@jyellick ^^","username":"cbf","ts":"2017-05-25T15:30:31.959Z"}
{"msg":"@binhn let's not hold this up another week. Suggest it just be merged so that the team can begin the process of getting it into CI.","username":"cbf","ts":"2017-05-25T15:32:35.149Z"}
{"msg":"we can always make changes","username":"cbf","ts":"2017-05-25T15:32:48.240Z"}
{"msg":"good idea -- we can do that, and still hold the review next week so that folks comment","username":"binhn","ts":"2017-05-25T15:34:31.235Z"}
{"msg":"+1","username":"cbf","ts":"2017-05-25T15:54:51.766Z"}
{"msg":"@cbf could you merge please https://gerrit.hyperledger.org/r/#/c/9261/","username":"binhn","ts":"2017-05-25T16:16:35.475Z"}
{"msg":"just merged, (FYI @rameshthoomu @dongming )","username":"jimthematrix","ts":"2017-05-25T16:24:55.453Z"}
{"msg":"Has joined the channel.","username":"dongming","ts":"2017-05-25T16:24:55.587Z","type":"uj"}
{"msg":"thx","username":"dongming","ts":"2017-05-25T19:09:39.251Z"}
{"msg":"@here So, I am wondering- is this a good idea that we can shutdown a peer remotely without access control checks via `peer node stop`? Shouldn't we prevent this?","username":"yacovm","ts":"2017-05-25T20:12:12.602Z"}
{"msg":"@here So, I am wondering- is this a good idea that we can shutdown a peer remotely without access control checks via `peer node stop`? (because we can) Shouldn't we prevent this?","username":"yacovm","ts":"2017-05-25T20:12:12.602Z"}
{"msg":"Has left the channel.","username":"rbuysse","ts":"2017-05-25T20:12:27.306Z","type":"ul"}
{"msg":"https://github.com/hyperledger/fabric/blob/master/core/admin.go#L57-L66","username":"yacovm","ts":"2017-05-25T20:15:13.633Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=bz2NatGbQZLk8aE44) @yacovm wondering why somebody would like to shutdown peer remotely. ","username":"C0rWin","ts":"2017-05-25T21:33:25.891Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=bz2NatGbQZLk8aE44","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=bz2NatGbQZLk8aE44","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I think it should be disabled","username":"C0rWin","ts":"2017-05-25T21:33:48.833Z"}
{"msg":"I think that it can be very useful for adversaries though, no?","username":"yacovm","ts":"2017-05-25T21:33:53.253Z"}
{"msg":"if someone would like to take peer down, has to login and kill it","username":"C0rWin","ts":"2017-05-25T21:34:07.445Z"}
{"msg":"I think that the best thing is to subscribe to an OS signal such as SIGTERM and them gracefully shutdown","username":"yacovm","ts":"2017-05-25T21:35:12.745Z"}
{"msg":"yes, but at any case, I would vote to remove/disable the ability of stopping the peer via gRPC w/o any ACL","username":"C0rWin","ts":"2017-05-25T21:36:26.578Z"}
{"msg":"Yeah we probably need to deprecate that *v0.5* \"feature\"","username":"yacovm","ts":"2017-05-25T21:38:27.821Z"}
{"msg":"@binhn  @cbf  @mastersingh24  :top:  ","username":"yacovm","ts":"2017-05-25T22:14:56.654Z"}
{"msg":"if someone gets access to docker - it's all over","username":"cbf","ts":"2017-05-25T22:18:30.700Z"}
{"msg":"do we use this for operational management?","username":"cbf","ts":"2017-05-25T22:18:51.214Z"}
{"msg":"well currently you don't need access to docker to stop the peer","username":"yacovm","ts":"2017-05-25T22:22:39.819Z"}
{"msg":"you can shut it down from another continent","username":"yacovm","ts":"2017-05-25T22:22:48.525Z"}
{"msg":"via a gRPC call","username":"yacovm","ts":"2017-05-25T22:22:53.319Z"}
{"msg":"all you need is a peer IP","username":"C0rWin","ts":"2017-05-25T22:24:32.500Z"}
{"msg":"Exactly. and the admin server thing isn't even running on a different ports... it runs on 7051 as the rest of the peer API (events is 7053 by default)","username":"yacovm","ts":"2017-05-25T22:25:29.462Z"}
{"msg":"Exactly. and the admin service isn't even running on a different ports... it runs on 7051 as the rest of the peer API (events is 7053 by default)","username":"yacovm","ts":"2017-05-25T22:25:29.462Z"}
{"msg":"One could sunset entire peer cluster with this ","username":"C0rWin","ts":"2017-05-25T22:27:57.099Z"}
{"msg":"going to open JIRA and suggest CR to deprecate it","username":"C0rWin","ts":"2017-05-25T22:28:21.506Z"}
{"msg":"another gentle reminder that we agreed to review the set of review-needed items, daily https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104#Filter-Results/10517","username":"cbf","ts":"2017-05-26T00:34:39.629Z"}
{"msg":"@here ^^","username":"cbf","ts":"2017-05-26T00:34:46.612Z"}
{"msg":"@cbf - are people supposed to be using the \"vote for this issue\" (as well as any comments) to indicate approval?","username":"mastersingh24","ts":"2017-05-26T09:06:14.970Z"}
{"msg":"yep","username":"cbf","ts":"2017-05-26T11:13:21.963Z"}
{"msg":"I've been voting or leaving a negative comment","username":"cbf","ts":"2017-05-26T11:14:01.116Z"}
{"msg":"cool - that's what I did","username":"mastersingh24","ts":"2017-05-26T11:20:40.209Z"}
{"msg":"Has joined the channel.","username":"bmalavan","ts":"2017-05-27T15:46:29.826Z","type":"uj"}
{"msg":"posting here as well as this needs some careful review:   https://gerrit.hyperledger.org/r/#/c/9861/","username":"mastersingh24","ts":"2017-05-27T20:42:46.232Z"}
{"msg":"Is there a max recv/send msg size for the client too?","username":"yacovm","ts":"2017-05-27T20:59:16.626Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/9861/  (upgrade grpc-go ) should be ready for hopefully a final review","username":"mastersingh24","ts":"2017-05-28T18:14:50.271Z"}
{"msg":"@here as I'm looking at the Makefile - is there a reason we build the kafka, zookeeper and couchdb images as a function of Fabric? Could they not be built as a function of fabric-baseimage? Seems to me that they will change relatively infrequently - or, maybe just pull them out as independent builds and leverage tagged images for fabric etc","username":"cbf","ts":"2017-05-29T00:06:58.099Z"}
{"msg":"thoughts? ","username":"cbf","ts":"2017-05-29T00:07:02.368Z"}
{"msg":"can maintainers take a look at https://jira.hyperledger.org/browse/FAB-3948  please (pretty!!!). need this resolved so I can proceed with similar work on the chaincode side","username":"muralisr","ts":"2017-05-29T00:11:56.570Z"}
{"msg":"the corresponding CR https://gerrit.hyperledger.org/r/#/c/9645/ ","username":"muralisr","ts":"2017-05-29T00:12:17.373Z"}
{"msg":"it expands upon previously merged shim side UT by adding KEEPALIVE messages for more coverage and reorgs errors","username":"muralisr","ts":"2017-05-29T00:13:18.089Z"}
{"msg":"it expands upon previously merged shim side UT by adding KEEPALIVE messages in the mock for more coverage and reorgs errors","username":"muralisr","ts":"2017-05-29T00:13:18.089Z"}
{"msg":"should be fairly straightforward","username":"muralisr","ts":"2017-05-29T00:13:39.908Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=AxPGGgkX2MBm6MEfA) @cbf I have the exact same thought...wondering if we should perhaps have a fabric-thirdparty.git that can capture those plus openldap from fabric-ca","username":"greg.haskins","ts":"2017-05-29T01:24:37.280Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=AxPGGgkX2MBm6MEfA","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=AxPGGgkX2MBm6MEfA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"also suggest we adopt a versioning scheme for them that looks something like $UPSTREAM-$OURS","username":"greg.haskins","ts":"2017-05-29T01:25:17.682Z"}
{"msg":"e.g. for zookeeper v3.4.9, we could have something like hyperledger/zookeeper:x86_64-3.4.9-1","username":"greg.haskins","ts":"2017-05-29T01:26:22.134Z"}
{"msg":"and bump to -2, -3, as appropriate","username":"greg.haskins","ts":"2017-05-29T01:27:56.752Z"}
{"msg":"(alternative to fabric-thirdparty is reuse something like fabric-baseimage...but I suggest a different repo because we currently have 1:1 with baseimage releases","username":"greg.haskins","ts":"2017-05-29T01:29:17.078Z"}
{"msg":"I am thinking fabric-thirdparty wont really update on the same schedule","username":"greg.haskins","ts":"2017-05-29T01:29:38.899Z"}
{"msg":"@here interesting, Windows downloads outnumber mac https://goo.gl/#analytics/goo.gl/NIKLiU/all_time","username":"cbf","ts":"2017-05-29T12:32:19.786Z"}
{"msg":"ah!","username":"lehors","ts":"2017-05-29T12:32:39.838Z"}
{"msg":"who said we shouldn't ignore Windows users? ;-)","username":"lehors","ts":"2017-05-29T12:33:01.035Z"}
{"msg":"@here https://jira.hyperledger.org/browse/FAB-4166 has met the threshold and has been approved for inclusion in 1.0 @C0rWin ","username":"cbf","ts":"2017-05-29T17:38:22.445Z"}
{"msg":"@cbf thanks, Chris. I have addressed @muralisr comment as well and disabled start function as no one actually uses it. I can revert this and keep disabling stop only.","username":"C0rWin","ts":"2017-05-29T17:41:27.876Z"}
{"msg":"(Addressing your comment in JIRA)","username":"C0rWin","ts":"2017-05-29T17:42:11.796Z"}
{"msg":"@C0rWin my concern/comment applied to a suggestion that the whole admin function be refactored/removed. I think we're trying to make as little change as possible given where we are. Every one agreed that it was a security issue to have remote stop. ","username":"cbf","ts":"2017-05-29T17:46:10.401Z"}
{"msg":"Well, removing start make sense for me since no one actually used it","username":"C0rWin","ts":"2017-05-29T17:47:06.107Z"}
{"msg":"So if you think I need to take care of stop only","username":"C0rWin","ts":"2017-05-29T17:47:34.497Z"}
{"msg":"I will revert back to it","username":"C0rWin","ts":"2017-05-29T17:47:46.566Z"}
{"msg":"how do you know no one uses it?","username":"cbf","ts":"2017-05-29T17:48:14.377Z"}
{"msg":"Well, how can you start peer via grpc?","username":"C0rWin","ts":"2017-05-29T17:48:42.472Z"}
{"msg":"To start peer via grpc you have to have peer up and running, also used static analysis to find that only place making use of it is admin test","username":"C0rWin","ts":"2017-05-29T17:49:47.584Z"}
{"msg":"@yacovm  https://jira.hyperledger.org/browse/FAB-4085 has also met the criteria to be merged","username":"cbf","ts":"2017-05-29T17:57:04.148Z"}
{"msg":"also this one https://jira.hyperledger.org/browse/FAB-4078","username":"cbf","ts":"2017-05-29T17:58:19.479Z"}
{"msg":"@C0rWin https://jira.hyperledger.org/browse/FAB-4003 seems borderline in terms of the criteria for adding the item to the review-needed list.  ","username":"cbf","ts":"2017-05-29T18:03:38.137Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-4002 needs one more vote - there have been no negative comments thus far","username":"cbf","ts":"2017-05-29T18:05:08.606Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-3993 needs 2 more votes and has no negative comments","username":"cbf","ts":"2017-05-29T18:05:58.785Z"}
{"msg":"@cbf who uses the sample client in the latter FAB?","username":"yacovm","ts":"2017-05-29T18:07:15.785Z"}
{"msg":"the guy who submitted the patch;-)","username":"cbf","ts":"2017-05-29T18:08:11.220Z"}
{"msg":"so we have a merged toy client that only 1 person uses?","username":"yacovm","ts":"2017-05-29T18:08:59.122Z"}
{"msg":"so we have a merged toy client that only 1 person uses? :rolling_eyes: ","username":"yacovm","ts":"2017-05-29T18:08:59.122Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-3709 has also been approved for merging in 1.0","username":"cbf","ts":"2017-05-29T18:12:42.362Z"}
{"msg":"RE: FAB-3993 -- The sample clients have been pretty useful when it comes to quick orderer testing. I also know that Barry's team was looking into writing something like this, which is why I encouraged Ben to submit it when he told me about it. This is a low priority changeset, outside of the hot path.","username":"kostas","ts":"2017-05-29T20:35:52.785Z"}
{"msg":"RE: https://jira.hyperledger.org/browse/FAB-4002   - https://gerrit.hyperledger.org/r/#/c/9861/ is ready and waiting  ;)","username":"mastersingh24","ts":"2017-05-29T22:21:03.522Z"}
{"msg":"@here ideally we need 1 more vote for 4002 above","username":"cbf","ts":"2017-05-29T23:13:48.370Z"}
{"msg":"@cbf I was pulling early versions of 9861 and testing","username":"muralisr","ts":"2017-05-29T23:17:23.532Z"}
{"msg":"let me do that once more with latest and check it out ?","username":"muralisr","ts":"2017-05-29T23:17:49.254Z"}
{"msg":"kk thx","username":"cbf","ts":"2017-05-29T23:17:55.669Z"}
{"msg":"Hi, may i kindly ask that you place your vote for this one ? \nhttps://jira.hyperledger.org/browse/FAB-3742\n","username":"elli-androulaki","ts":"2017-05-30T05:58:06.777Z"}
{"msg":"And also for this one? ","username":"elli-androulaki","ts":"2017-05-30T06:31:59.003Z"}
{"msg":"And also for this one? \nhttps://jira.hyperledger.org/browse/FAB-3888","username":"elli-androulaki","ts":"2017-05-30T06:31:59.003Z"}
{"msg":"And also for this one? \nhttps://jira.hyperledger.org/browse/FAB-3888 Thanks!","username":"elli-androulaki","ts":"2017-05-30T06:31:59.003Z"}
{"msg":"And also for this one? \nhttps://jira.hyperledger.org/browse/FAB-3888 (It blocks https://gerrit.hyperledger.org/r/#/c/9275/ from getting merged). Thanks!","username":"elli-androulaki","ts":"2017-05-30T06:31:59.003Z"}
{"msg":"@elli-androulaki , I think it was decided to vote whether incorporation of error handling is for V1.0 or not, in [1].\nI don't think we ever did... @cbf  ?  Should we vote on this to avoid confusion?\n\n[1] \nhttps://chat.hyperledger.org/channel/fabric?msg=jHEBo8S5xBaJSkxp6\n","username":"yacovm","ts":"2017-05-30T07:24:56.092Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric?msg=jHEBo8S5xBaJSkxp6","url":"https://chat.hyperledger.org/channel/fabric?msg=jHEBo8S5xBaJSkxp6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@yacovm thanks for pointing that out. So this one should also be voted for/against:\n https://gerrit.hyperledger.org/r/#/c/9279 (titled [FAB-3540] Error Handling in bccsp/signer)","username":"elli-androulaki","ts":"2017-05-30T07:38:13.475Z"}
{"msg":"well @JonathanLevi said \"Removed my veto (-2) on that CR. Sure, we can re-consider it as part of daily review tomorrow. Thanks.\" ","username":"yacovm","ts":"2017-05-30T07:38:59.481Z"}
{"msg":"Whenever that happens I guess we would","username":"yacovm","ts":"2017-05-30T07:39:09.464Z"}
{"msg":"Has left the channel.","username":"bmkor","ts":"2017-05-30T10:57:45.396Z","type":"ul"}
{"msg":"Folks - I added https://jira.hyperledger.org/browse/FAB-2493   to the review list this weekend.  Please have a look.  IMNSHO we need to do this one","username":"mastersingh24","ts":"2017-05-30T12:33:14.656Z"}
{"msg":"@mastersingh24 voted +1 above given the usability impact","username":"muralisr","ts":"2017-05-30T12:50:59.542Z"}
{"msg":"@here https://jira.hyperledger.org/browse/FAB-4212 this is still WIP but began documenting what needs to be done for v1.0.0-beta - please feel free to suggest in comments what other tasks or blockers you feel need to be added","username":"cbf","ts":"2017-05-30T14:57:59.975Z"}
{"msg":"thanks @cbf, it will surely be easier to track beta using a dedicated jira work item.  there are other release tasks that I proposed in https://docs.google.com/document/d/1mPTMjXG_b-mgZd2_EUN9W-82ez0PrWoxIiPgcAAABwE/edit.  Do you want to capture some of those in jira, or want me to add them?  @mastersingh24 is also reviewing that list and is adding his perspective.","username":"dave.enyeart","ts":"2017-05-30T15:03:26.064Z"}
{"msg":"thanks @cbf, it will surely be easier to track beta using a dedicated jira work item.  there are other release tasks that I proposed in https://docs.google.com/document/d/1mPTMjXG_b-mgZd2_EUN9W-82ez0PrWoxIiPgcAAABwE/edit.  Do you want to capture some of those in jira, or want me to add them?  @mastersingh24 is also reviewing that list and is adding his perspective, so we can wait for his comments before adding.","username":"dave.enyeart","ts":"2017-05-30T15:03:26.064Z"}
{"msg":"let's add thoughts in comments for now","username":"cbf","ts":"2017-05-30T15:09:32.744Z"}
{"msg":"guys I need to bring up a debate that I and another maintainer are having regarding what kind of changes are allowed in the SDKs, so the other maintainers can weigh in. I have always operated under the assumption that the SDKs, being on the tail end of the chain of reactions with the rapid changes in the fabric and fabric-ca, should be allowed a \"grace period\" after the backend APIs are frozen, to do necessary house-cleaning mainly to review API designs, making adjustments so they would \"totally makes sense\". We have not been able to do that previously given the crazy daily churns where every day the SDKs got broken in some new ways. as a result we have some rather embarrassing API inconsistencies that reflects badly on the fabric as a whole. see https://jira.hyperledger.org/browse/FAB-2991 and https://jira.hyperledger.org/browse/FAB-4131 for examples.","username":"jimthematrix","ts":"2017-05-30T19:34:05.920Z"}
{"msg":"I'd like to propose that API changes in the SDKs should still be allowed until beta","username":"jimthematrix","ts":"2017-05-30T19:34:56.045Z"}
{"msg":"note that the kind of changes I'm looking for are not net new capabilities, even for FAB-4131 which may look large and complicated, it's mainly refactoring some tried-and-true code snippets and re-arrange them to make the API easier to follow and reason about","username":"jimthematrix","ts":"2017-05-30T19:38:05.992Z"}
{"msg":"if you agree with my proposal, please add a :thumbsup: above","username":"jimthematrix","ts":"2017-05-30T19:39:15.627Z"}
{"msg":"@C0rWin @binhn @cbf @dave.enyeart @mastersingh24 @greg.haskins @jyellick @JonathanLevi @smithbk @kostas @muralisr @yacovm ^^^","username":"jimthematrix","ts":"2017-05-30T19:41:40.026Z"}
{"msg":"I think that there is some motivation to \"get it right\" at this point, because we will (or at least, should) be stuck with it for the support window of 1.0 once that is cut.  That said, I can say first hand as someone who's apps were continuously broken because of this kind of activity that it should not be taken lightly","username":"greg.haskins","ts":"2017-05-30T19:47:01.122Z"}
{"msg":"so my question really is: how is this any different than any other issue that should be decided on whether to allow?","username":"greg.haskins","ts":"2017-05-30T19:47:27.245Z"}
{"msg":"and one aside: because of the pain-points to users, it should be clearly communicated (minimally in the release notes, probably each time it happens to the ML, etc)","username":"greg.haskins","ts":"2017-05-30T19:48:11.544Z"}
{"msg":"so, i would say, if there is a proposal for an improvement, it should be documented in a standard way (describe the impact to accept and not accept) and voted on, just like any other issue that comes up","username":"greg.haskins","ts":"2017-05-30T19:49:27.726Z"}
{"msg":"_*how is this any different than any other issue that should be decided on whether to allow*_ - agree that's the only question that matters at this point, I'd say the SDKs are \"leaf nodes\" and don't impact other components, and also the changes are not net new capabilities (untested code) but either re-arranging existing code or eliminating APIs that don't make sense any longer (e.g Chain.primaryPeer())","username":"jimthematrix","ts":"2017-05-30T19:51:36.361Z"}
{"msg":"well, i would be careful with that thinking though","username":"greg.haskins","ts":"2017-05-30T19:52:09.206Z"}
{"msg":"if I have an app that looks like clientapp -> sdk -> [peer, orderer, ca], its not really \"leaf\"","username":"greg.haskins","ts":"2017-05-30T19:52:38.319Z"}
{"msg":"its an integral part of the stack, and breaking its ABI hurts me just as much as any other component","username":"greg.haskins","ts":"2017-05-30T19:52:53.941Z"}
{"msg":"but that said, I dont see a proposal to change here as any different from any other proposal","username":"greg.haskins","ts":"2017-05-30T19:53:27.371Z"}
{"msg":"understood and agree, but up till now \"breaking its ABI hurts me\" has been the norm right?","username":"jimthematrix","ts":"2017-05-30T19:53:32.768Z"}
{"msg":"it should be understoood and decided on ","username":"greg.haskins","ts":"2017-05-30T19:53:35.641Z"}
{"msg":"this is the last chance for the SDKs to put a stop to it (as the backend APIs has finalize settled down)","username":"jimthematrix","ts":"2017-05-30T19:54:12.344Z"}
{"msg":"this is the last chance for the SDKs to put a stop to it (as the backend APIs has finally settled down)","username":"jimthematrix","ts":"2017-05-30T19:54:12.344Z"}
{"msg":"i agree with that","username":"greg.haskins","ts":"2017-05-30T19:54:20.528Z"}
{"msg":"if its going to change, this is the time to change it","username":"greg.haskins","ts":"2017-05-30T19:54:40.653Z"}
{"msg":"after 1.0, the barrier should be infinitely higher","username":"greg.haskins","ts":"2017-05-30T19:55:04.753Z"}
{"msg":"to be clear, i am not saying we should introduce breaking changes willy nilly either...im just saying, they should be proposed and decided on, not blindly accepted or blindly rejected","username":"greg.haskins","ts":"2017-05-30T19:56:11.801Z"}
{"msg":"if there is something that clearly improves the UX at the expense of alpha2 compat, lets talk about it","username":"greg.haskins","ts":"2017-05-30T19:57:19.130Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-2991 and https://jira.hyperledger.org/browse/FAB-4131 are the outstanding ones at the moment","username":"jimthematrix","ts":"2017-05-30T20:02:28.868Z"}
{"msg":"One of the most important objectives of a 1.0 release is to get the client APIs 'right', meaning they are consistent, make sense for developers for years to come, and set a good precedent for future APIs. And one of the most important objectives of an alpha release is to gather community feedback to help get it right.  Therefore, where alpha experience has shown us that some APIs are 'wrong', I agree that the right time to change them would be before a 1.0 beta release.  ","username":"dave.enyeart","ts":"2017-05-30T20:37:44.718Z"}
{"msg":"I also agree that it is not black and white, and each change should be voted on like any other change. ","username":"dave.enyeart","ts":"2017-05-30T20:37:53.617Z"}
{"msg":"I also agree that it is not black and white, and not an license to make changes - each change should be well explained including risk of not doing it, and voted on by maintainers like any other change. ","username":"dave.enyeart","ts":"2017-05-30T20:37:53.617Z"}
{"msg":"@jimthematrix For each change, I suggest you mention if the change could be made later or not.  That is, if the change came in 1.1, would it impact client applications.","username":"dave.enyeart","ts":"2017-05-30T20:38:34.910Z"}
{"msg":"@jimthematrix For each change, I suggest you mention if the change could be made later or not.  That is, if the change came in 1.1, would it impact client applications that were written against 1.0.","username":"dave.enyeart","ts":"2017-05-30T20:38:34.910Z"}
{"msg":"@jimthematrix For each change, I suggest you mention if the change could be made later or not.  That is, if the change came in 1.1, would it impact client applications that were written against 1.0. And clearly explain the risk of not doing it, so that maintainers can effectively balance the risk of doing it vs the risk of not doing it.","username":"dave.enyeart","ts":"2017-05-30T20:38:34.910Z"}
{"msg":"I have voted for the former, but not the latter, until you can add that aspect","username":"dave.enyeart","ts":"2017-05-30T20:40:17.109Z"}
{"msg":"good suggestion, will give it some thought","username":"jimthematrix","ts":"2017-05-30T20:40:44.754Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-4131 updated in response to your suggestion @dave.enyeart ","username":"jimthematrix","ts":"2017-05-30T20:59:52.179Z"}
{"msg":"@jimthematrix I +1ed FAB-2991 - are there others like this one?  we should also consider annoying naming like getX vs queryX, setX vs X, delete/delX vs removeX, etc. ","username":"binhn","ts":"2017-05-30T21:03:55.382Z"}
{"msg":"@jimthematrix since I am the one you had the argument with, I will weigh in and say that we simply cannot deliver a release if we are still making changes - full stop","username":"cbf","ts":"2017-05-30T23:38:40.128Z"}
{"msg":"we have a bunch of defects that we need to clean up and having the sdk continue to evolve makes fixing bugs a moving target","username":"cbf","ts":"2017-05-30T23:39:10.992Z"}
{"msg":"the time for API changes ended about 6 weeks ago when we published aplha","username":"cbf","ts":"2017-05-30T23:40:01.573Z"}
{"msg":"how are we going to write documentation if the SDK is a moving target?","username":"cbf","ts":"2017-05-30T23:40:51.051Z"}
{"msg":"how are we going to stabilize the samples? ","username":"cbf","ts":"2017-05-30T23:41:11.918Z"}
{"msg":"The sdk only stopped having to react to breaking changes after alpha2. Since then we've been focusing on API reviews along with fixing defects, and responding to community feedback.","username":"jimthematrix","ts":"2017-05-31T00:23:50.601Z"}
{"msg":"i've also started reviewing API docs and writing tutorials. I'd say the few adjustments pending will not impact the docs effort much.","username":"jimthematrix","ts":"2017-05-31T00:28:22.723Z"}
{"msg":"And as I try to point out above, while I agree with your statements above on and abstract level, these specific changes should be considered \"safe\", because they are not net new code, but they have significant impact on the overall perception of the API quality","username":"jimthematrix","ts":"2017-05-31T00:34:41.986Z"}
{"msg":"A quick question: How come https://jira.hyperledger.org/browse/FAB-2991 surfaces up just now?","username":"JonathanLevi","ts":"2017-05-31T02:35:13.487Z"}
{"msg":"It was opened/created on *04/Apr/17 8:29 PM* (like 2 months, minus a week).","username":"JonathanLevi","ts":"2017-05-31T02:36:08.721Z"}
{"msg":"Just/mainly trying to understand how we have ended up with this, a few days before we are about to officially lock the API.","username":"JonathanLevi","ts":"2017-05-31T02:37:28.697Z"}
{"msg":"Just to say in advance, that on one hand, of course we would like a better (unified) API... while at the same time, we should remember that the longer we delay any milestone of Fabric 1.0, the further away the Fabric 1.0 gets, and of course, the longer we will need to wait for 1.1, 1.2, etc...","username":"JonathanLevi","ts":"2017-05-31T02:39:24.176Z"}
{"msg":"At the same time, we should strive to release an API that we are comfortable with - which bring me back to the question \"what happened between 04-Apr-2017 and 30-May-2017 ?\" And please pardon my date & time convention ;-)","username":"JonathanLevi","ts":"2017-05-31T02:40:49.970Z"}
{"msg":"At the same time, we should strive to release an API that we are comfortable with - which bring me back to the question \"what happened between 04-Apr-2017 and 30-May-2017 ?\" And please pardon my date & time convention ;-)\n\nFor some/more context: https://jira.hyperledger.org/browse/FAB-4212","username":"JonathanLevi","ts":"2017-05-31T02:40:49.970Z"}
{"msg":"Wow I sooner deliver end of the year then to be stuck with an API that's bad forever.  ","username":"rickr","ts":"2017-05-31T03:39:08.199Z"}
{"msg":"Once we declare 1.0 they'll be stacks of stack built on top of this if it's successful.  Changing then and will never hear the end of the screams. ","username":"rickr","ts":"2017-05-31T03:42:49.165Z"}
{"msg":"Once we declare 1.0 they'll be stacks of stack built on top of this if it's successful.  Changing then and we'll never hear the end of the screams. ","username":"rickr","ts":"2017-05-31T03:42:49.165Z"}
{"msg":"The SDKs spent well over 5 months putting a lot if not most of the effort reacting ( and yes we did some screaming too) to changes in the Fabric.  Now the the Fabric is happy and it's all must come to a stop?   Sorry if you didn't get a chance to really cleanup  the APIs  you've got.  ","username":"rickr","ts":"2017-05-31T03:53:33.919Z"}
{"msg":"a coherent client api is critical, as is time to market. we can't be taken seriously without both. let's try not to be dogmatic on either side - asserting date trumps all, or api correctness trumps all, is not very constructive. let's be pragmatic on a case by case basis, by having the sdk team explain each proposed change, maintainers vote on it, and move on accordingly. As @greg.haskins previously mentioned, the existing review-needed process should be able to handle this. As a next step, could the SDK teams enumerate the list of proposed changes, as a list of distinct review-needed jira items? Ideally by end of day wednesday?","username":"dave.enyeart","ts":"2017-05-31T04:06:38.253Z"}
{"msg":"Thank you Dave. Jim:","username":"JonathanLevi","ts":"2017-05-31T05:07:00.297Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ybD87AokeKg6HJHAD","username":"JonathanLevi","ts":"2017-05-31T05:07:04.188Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ybD87AokeKg6HJHAD","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ybD87AokeKg6HJHAD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"First, I think that we should *all* take a (few) deep breath(s) and calm down.","username":"JonathanLevi","ts":"2017-05-31T05:23:40.719Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.","username":"JonathanLevi","ts":"2017-05-31T05:23:40.719Z"}
{"msg":"Second, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.","username":"JonathanLevi","ts":"2017-05-31T05:23:43.414Z"}
{"msg":"Third, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor portrays the correct message. To be clear, there is no \"we, the SDKs\" vs. \"we, the good looking Fabric\".","username":"JonathanLevi","ts":"2017-05-31T05:25:23.564Z"}
{"msg":"Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.","username":"JonathanLevi","ts":"2017-05-31T05:27:06.795Z"}
{"msg":"Fourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion.","username":"JonathanLevi","ts":"2017-05-31T05:28:13.107Z"}
{"msg":"Without it, and with the precise information about it - it is difficult for me to form an opinion.","username":"JonathanLevi","ts":"2017-05-31T05:28:40.360Z"}
{"msg":"I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.","username":"JonathanLevi","ts":"2017-05-31T05:29:48.372Z"}
{"msg":"If anything, it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry some more API changes.","username":"JonathanLevi","ts":"2017-05-31T05:31:09.330Z"}
{"msg":"If anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.","username":"JonathanLevi","ts":"2017-05-31T05:31:09.330Z"}
{"msg":"So again, despite the pressure from all direction (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and how do we go from here, objectively.","username":"JonathanLevi","ts":"2017-05-31T05:32:22.229Z"}
{"msg":"___\nSo again, despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and how do we go from here, objectively.","username":"JonathanLevi","ts":"2017-05-31T05:32:22.229Z"}
{"msg":"___\nSo again, despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.","username":"JonathanLevi","ts":"2017-05-31T05:32:22.229Z"}
{"msg":"I can find people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them.","username":"JonathanLevi","ts":"2017-05-31T05:33:33.927Z"}
{"msg":"As the famous saying goes: \"Screamers will scream\". Or does it not go like that?! ;-)","username":"JonathanLevi","ts":"2017-05-31T05:34:18.212Z"}
{"msg":"Again, let's all get some sleep (where applicable), collect the information needed, and evaluate what's the best way to handle this.","username":"JonathanLevi","ts":"2017-05-31T05:34:55.746Z"}
{"msg":"---\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:35:00.676Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.\n\nSecond, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.\n\nThird, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor portrays the correct message. To be clear, there is no \"we, the SDKs\" vs. \"we, the good looking Fabric\".  Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.\n\nFourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion. Without it, and with the precise information about it - it is difficult for me (and probably for others) to form an opinion.\n\n---\nNow, I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.\n\nBut if anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.\n---\nSo again, despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.\n\nI can find people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them.\nAs the famous saying goes: *Screamers will scream*. Or is it not how the original thing goes?! 😉\n\n---\n\nAgain, please let's all get some sleep (where applicable, or a nice morning coffee), collect the information needed, and evaluate what's the best way to handle this.\n\n---\n\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:49:25.163Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.\n\nSecond, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.\n\nThird, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor portrays the correct message. To be clear, there is no \"we, the SDKs\" vs. \"we, the good looking Fabric\". Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.\n\nFourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion. Without it, and with the precise information about it - it is difficult for me (and probably for others) to form an opinion.\n---\nNow, I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.\n\nBut if anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.\n---\nSo again, despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.\n\nI can find people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them.\nAs the famous saying goes: *Screamers will scream*. Or is it not how the original thing goes?! 😉\n---\nAgain, please let's all get some sleep (where applicable, or a nice morning coffee), collect the information needed, and evaluate what's the best way to handle this.\n---\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:49:57.399Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.\n\nSecond, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.\n\nThird, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor portrays the correct message. To be clear, there is no \"we, the SDKs\" vs. \"we, the good looking Fabric\". Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.\n\nFourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion. Without it, and w/o the full picture - it is difficult for me (and probably for others) to form an opinion or reach a conclusion.\n---\nNow, I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.\n\nBut if anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.\n---\nSo again, despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.\n\nI can find people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them.\nAs the famous saying goes: *Screamers will scream*. Or is it not how the original thing goes?! 😉\n---\nAgain, please let's all get some sleep (where applicable, or a nice morning coffee), collect the information needed, and evaluate what's the best way to handle this.\n---\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:49:57.399Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.\n\nSecond, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.\n\nThird, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor conveys the correct message. To be clear, there is *no* \"we, the SDKs\" vs. \"we, the good looking Fabric\". Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.\n\nFourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion. Without it, and w/o the full picture - it is difficult for me (and probably for others) to form an opinion or reach a conclusion.\n---\nNow, I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.\n\nBut if anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.\n---\nSo again, despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.\n\nI can find people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them.\nAs the famous saying goes: *Screamers will scream*. Or is it not how the original thing goes?! 😉\n---\nAgain, please let's all get some sleep (where applicable, or a nice morning coffee), collect the information needed, and evaluate what's the best way to handle this.\n---\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:49:57.399Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.\n\nSecond, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.\n\nThird, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor conveys the correct message. To be clear, there is *no* \" *we, the SDKs* \" vs. \" *we, the good looking Fabric* \". Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.\n\nFourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion. Without it, and w/o the full picture - it is difficult for me (and probably for others) to form an opinion or reach a conclusion.\n---\nNow, I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.\n\nBut if anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.\n---\nSo again, despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.\n\nI can find people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them.\nAs the famous saying goes: *Screamers will scream*. Or is it not how the original thing goes?! 😉\n---\nAgain, please let's all get some sleep (where applicable, or a nice morning coffee), collect the information needed, and evaluate what's the best way to handle this.\n---\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:49:57.399Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.\n\nSecond, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.\n\nThird, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor conveys the correct message. To be clear, there is *no* \" *we, the SDKs* \" vs. \" *we, the good looking Fabric* \". Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.\n\nFourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion. Without it, and w/o the full picture - it is difficult for me (and probably for others) to form an opinion or reach a conclusion.\n---\nNow, I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.\n\nBut if anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.\n---\nSo despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.\n\nI can find people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them.\nAs the famous saying goes: *Screamers will scream*. Or is it not how the original thing goes?! 😉\n---\nAgain, please let's all get some sleep (where applicable, or a nice morning coffee), collect the information needed, and evaluate what's the best way to handle this.\n---\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:49:57.399Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.\n\nSecond, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.\n\nThird, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor conveys the correct message. To be clear, there is *no* \" *we, the SDKs* \" vs. \" *we, the good looking Fabric* \". Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.\n\nFourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion. Without it, and w/o the full picture - it is difficult for me (and probably for others) to form an opinion or reach a conclusion.\n---\nNow, I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.\n\nBut if anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.\n---\nSo despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.\n\nLast, I/we can find a long list of people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them. As the famous saying goes: *Screamers will scream*. Or is it not how the original thing goes?! 😉\n---\nAgain, more seriously: we don't need more \"camps\" and more \"sides\" here... there is only one *we*. Please let's all get some sleep (where applicable, or a nice morning coffee), collect the information needed, and evaluate what's the best way to handle this. \n---\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:49:57.399Z"}
{"msg":"First, I think/believe we should *all* take a (few) deep breath(s) and calm down.\n\nSecond, if anyone here got the impression that I am jumping to conclusions too quickly, then please re-read what I wrote above. I tried to explain both sides of the equation: the implications of not locking the API sooner/postponing the next milestone further vs. cutting a beta version with an API that we are not happy with.\n\nThird, trying to color the situation/discussion/argument as a \"fabric\" vs. \"the SDKs\" neither helps nor conveys the correct message. To be clear, there is *no* \" *we, the SDKs* \" vs. \" *we, the good looking Fabric* \". Mind you, if anything, then us making the SDKs the preferred API, front-, client-, or dev-facing entry to the world, makes it a key component that we *all* rely on.\n\nFourth, I/we need more information regarding what happened and why, along with the implications of the API improvement tasks that are at the heart of the discussion. Without it, and w/o the full picture - it is difficult for me (and probably for others) to form an opinion or reach a conclusion.\n---\nNow, I do appreciate that making so many (last minute) changes to fabric, required a lot of changes to the SDK(s), work that was delivered under a lot of pressure.\n\nBut if anything, please take a quick look at https://jira.hyperledger.org/browse/FAB-4212 , and see that it took me just a few minutes to conclude this morning, for example, that we should hold off cutting a *v1.0.0-beta* while more tooling work is still in progress, just for the off-chance that it might carry/require some more API changes.\n---\nSo despite the pressure from all directions (and just to mention that we are under immense pressure to release a Fabric 1.0), let's again, calm down, and evaluate where we stand and where do we go/how do we proceed from here, objectively.\n\nLast, I/we can find a long list of people that will \"scream\", whether we cut a beta without the API changes to the SDKs, or whether we do wait for them. As the famous saying goes: *Screamers will scream*. Or is it not how the original thing goes?! 😉\n---\nAgain, more seriously: we don't need more \"camps\" and more \"sides\" here... *AFAIC, there is only one we*. Please let's all get some sleep (where applicable, or a nice morning coffee), collect the information needed, and evaluate what's the best way to handle this. \n---\nGood night.","username":"JonathanLevi","ts":"2017-05-31T05:49:57.399Z"}
{"msg":"Hi all.\nPlease take a look at this JIRA issue that is related to migration from v1.0 to v1.x.\nIt deals with the fact that we don't do time-based certificate validation in v1.0 but in v1.1 we will do.\nhttps://jira.hyperledger.org/browse/FAB-4203 ","username":"yacovm","ts":"2017-05-31T09:26:46.841Z"}
{"msg":"WOW!   That's all I have to say.  My assessment:  we dance around the issue(s) / goals and try to fit them into neat little boxes.  @JonathanLevi  - you asked for facts / information and @dave.enyeart you are correct in stating that we should use the \"review\" process that we have in place.  More or less agree on both points.\n\nLet me state some facts:\n\n1) It should come as no surprise to anyone that there are still a few proposed changes to the SDK(s) in terms of external facing API.  @jimthematrix was very clear about this when the alpha2 was cut and as a matter of fact he even stated that as a reason for not calling alpha2 a beta\n\n2) BUT ....  @jimthematrix did not do a great job of outlining the JIRA items which needed to be addressed and we did not have a clear list of things for \"job done\" for the SDKs - meaning there is only so much time and we do need a finite list of things else we'll never be done.  Of course part of this is that not everyone is involved with using the SDKs on a daily basis and everyone does not track all the work being done.  So no fault(s) here - just a fact.\n\n3) @JonathanLevi  @cbf  - You both ask why these things come up now - it's really quite simple - the SDK teams spent / spend all their time catching up with fabric changes (mainly all of the security stuff which really had a major impact on their efforts) and therefore it is only now that anyone can look at the actual APIs rather than just trying to keep the SDKs working\n\nSo what do we do:\n\n- As @dave.enyeart said, let's get the list of proposed improvements for the SDKs established.  This includes all of them - not just the Node SDKs - ASAP - i.e TODAY\n\n- Vote on the list (as per usual process) although honestly I think we do need to have the main SDK developers and users weigh in the most","username":"mastersingh24","ts":"2017-05-31T09:35:22.872Z"}
{"msg":"Last point:   next release (e.g. beta, RC, whatever).   PLEASE PLEASE PLEASE - let's not get into the same crisis mode we did putting out alpha2.  It did not go well IMHO.  @JonathanLevi @cbf - you are our release managers - I see that there is a JIRA entry, but we really need to also make sure that we do go through a checklist to ensure everything is in place and in sync.\n\nOnce we cut a BETA and/or RC - there can be NO external facing changes to existing APIs at that point.  This includes all components.\n\nI will also state that we try to follow a process, but then we still rush everything at the end.  Not sure why that keeps happening but we should be able to do better this time around","username":"mastersingh24","ts":"2017-05-31T09:38:52.954Z"}
{"msg":"[ https://jira.hyperledger.org/browse/FAB-4203?focusedCommentId=24742&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-24742](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Ts8f6pY88z7qrPeKR) @yacovm @muralisr ","username":"mastersingh24","ts":"2017-05-31T10:37:52.410Z"}
{"msg":"[https://jira.hyperledger.org/browse/FAB-4203?focusedCommentId=24742&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-24742 ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Ts8f6pY88z7qrPeKR) @yacovm ","username":"mastersingh24","ts":"2017-05-31T10:40:01.998Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Ts8f6pY88z7qrPeKR","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Ts8f6pY88z7qrPeKR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@muralisr  ^^^^^","username":"mastersingh24","ts":"2017-05-31T10:40:11.249Z"}
{"msg":"hmm but Gari the code that is related to time-based certificate is not in the VSCC","username":"yacovm","ts":"2017-05-31T10:44:19.044Z"}
{"msg":"but rather deep inside the `mspimpl.go`","username":"yacovm","ts":"2017-05-31T10:44:28.847Z"}
{"msg":"but rather deep inside in  the `mspimpl.go`","username":"yacovm","ts":"2017-05-31T10:44:28.847Z"}
{"msg":"so it's global in the peer and not per VSCC","username":"yacovm","ts":"2017-05-31T10:44:56.098Z"}
{"msg":"I answered in the JIRA item","username":"yacovm","ts":"2017-05-31T10:47:09.337Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=TZJbK6jFGEYhbRqvJ) @JonathanLevi +2","username":"cbf","ts":"2017-05-31T11:20:05.975Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TZJbK6jFGEYhbRqvJ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TZJbK6jFGEYhbRqvJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=6gRJtNKLSJK8f5LeX) @mastersingh24 agree we need to go through a checklist... that is what I have been trying to establish as part of FAB-4212 - and have expressly invited people to weigh in and advocate for the CRs that MUST BE LANDED, just as we did so successfully (not) for alpha2. ","username":"cbf","ts":"2017-05-31T11:23:49.388Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6gRJtNKLSJK8f5LeX","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6gRJtNKLSJK8f5LeX","remote":true,"fileId":null,"fileName":null}]}
{"msg":"What I want to have us do is review these COLLECTIVELY. Thoroughly. To test manually and automated and agree we are done. That cannot be \"well, SDK can keep changing while we do this, right?\" ","username":"cbf","ts":"2017-05-31T11:25:29.605Z"}
{"msg":"IFF we are to add function to the SDK, then IMNSHO we need to be adding the barest minimum to achieve MVP. We cannot keep pushing out to get perfection. We can add function post 1.0.0 just as for the main Fabric code. We can limit the scope of 1.1 (which we should do, regardless) and deliver 1.1 in say 3 months. ","username":"cbf","ts":"2017-05-31T11:27:37.736Z"}
{"msg":"Or, we can muddle along seeking perfection while the world moves on past us.","username":"cbf","ts":"2017-05-31T11:28:05.957Z"}
{"msg":"As has been said above, @jimthematrix is not talking about adding new function or muddling along.  He's talking about fixing a limited number of incoherent aspects of the sdk api, and making them coherent. A client API is not something that can simply be changed in 1.1.  It needs to be coherent in 1.0.  Why is it incoherent? Because it grew organically during a fast-paced project in response to fabric changes.  Let's pause and give Jim the benefit of proposing (today) the (limited) set of specific changes he thinks are required for MVP.","username":"dave.enyeart","ts":"2017-05-31T12:06:49.141Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=efi4C3eBwsowBdZAv) @rickr @JonathanLevi the \"grace period\" I'm talking about is I'm asking for one release after the fabric/fabric-ca APIs finally settled down (which in reality is alpha2, not alpha), because the SDKs have been spending all the bandwidth keeping up with the backend and chasing breaks. FAB-2991 is really simple changes (for that matter so is FAB-4131) but we didn't feel comfortable doing it before alpha2 because changes in the backend could impact our decision","username":"jimthematrix","ts":"2017-05-31T12:22:49.824Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=efi4C3eBwsowBdZAv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=efi4C3eBwsowBdZAv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=efi4C3eBwsowBdZAv) @JonathanLevi the \"grace period\" I'm talking about is I'm asking for one release after the fabric/fabric-ca APIs finally settled down (which in reality is alpha2, not alpha), because the SDKs have been spending all the bandwidth keeping up with the backend and chasing breaks. FAB-2991 is really simple changes (for that matter so is FAB-4131) but we didn't feel comfortable doing it before alpha2 because changes in the backend could impact our decision. @rickr 's comment well summarize the reason","username":"jimthematrix","ts":"2017-05-31T12:22:49.824Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=efi4C3eBwsowBdZAv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=efi4C3eBwsowBdZAv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@dave.enyeart  @mastersingh24 @cbf @JonathanLevi @rickr  thanks for weighing in on the discussion, wow I felt that was a fantastic thread of discussions and we were converging on many fronts. ","username":"jimthematrix","ts":"2017-05-31T12:49:02.257Z"}
{"msg":"Rick and I will do another pass through the SDKs code today and make sure all remaining changes will be recorded in JIRA items and tagged for review. we have done a pass and I don't believe we have more than FAB-2991 and 4131 but will do another pass to make sure","username":"jimthematrix","ts":"2017-05-31T12:51:24.155Z"}
{"msg":"@jimthematrix I also think one key question i do have for you- for any of these changes- are the JUST for the SDK- or are there fundamental changes that must go into the core fabric?  I think that is very important to understand.","username":"weeds","ts":"2017-05-31T12:53:40.629Z"}
{"msg":"@jimthematrix I also think one key question i do have for you- for any of these changes- are they JUST for the SDK- or are there fundamental changes that must go into the core fabric?  I think that is very important to understand.","username":"weeds","ts":"2017-05-31T12:53:40.629Z"}
{"msg":"@cbf @JonathanLevi I like the fact we are putting what we need to do in the JIRA, but I also feel some of the \"steps\" are repeated processes (obviously we need to automate)... but I think you as release managers are pulling together a big checklist at least that we have to do every round.  I'm wondering ultimately if we need a wiki of here is the checklist so future release managers won't miss things that we may have done in previous alpha... yes, we would still use JIRA to track the specifics, but I wonder if that might help in the future?","username":"weeds","ts":"2017-05-31T12:55:20.189Z"}
{"msg":"@cbf @JonathanLevi For cutting the beta release (or release candidate,etc,.),  I like the fact we are putting what we need to do in the JIRA, but I also feel some of the \"steps\" are repeated processes (obviously we need to automate)... but I think you as release managers are pulling together a big checklist at least that we have to do every round.  I'm wondering ultimately if we need a wiki of here is the checklist so future release managers won't miss things that we may have done in previous alpha... yes, we would still use JIRA to track the specifics, but I wonder if that might help in the future?","username":"weeds","ts":"2017-05-31T12:55:20.189Z"}
{"msg":"this is for cutting alpha, cutting alpha 2, cutting beta,etc,..","username":"weeds","ts":"2017-05-31T12:55:34.645Z"}
{"msg":"I also wonder if it may help other projects","username":"weeds","ts":"2017-05-31T12:55:40.489Z"}
{"msg":"@weeds a wiki is not what we need","username":"cbf","ts":"2017-05-31T12:59:35.811Z"}
{"msg":"we cannot fragment our approach","username":"cbf","ts":"2017-05-31T12:59:54.012Z"}
{"msg":"Maintainers please give https://jira.hyperledger.org/browse/FAB-2991 and https://jira.hyperledger.org/browse/FAB-4131 another look and cast your votes. and thanks for those who have already voted","username":"jimthematrix","ts":"2017-05-31T13:04:03.248Z"}
{"msg":"@cbf I responded to your question in he comment to 4131 (and thanks for the concerns)","username":"jimthematrix","ts":"2017-05-31T13:04:58.171Z"}
{"msg":"as for the whole SDK kerfuffle, it certainly feels like creep to me. The SDK changes have not been isolated fixes. https://jira.hyperledger.org/browse/FAB-4131 is a case in point. The CR actually goes beyond the scope of the enhancement. The description actually makes the case that the change could be introduced post 1.0. So, why would we make a change that affects over 600 LOC in the SDK code at this point, when it COULD be introduced after?","username":"cbf","ts":"2017-05-31T13:05:15.370Z"}
{"msg":"note that the change also does not include the documentation changes necessary to inform the user as to how to leverage the feature, etc","username":"cbf","ts":"2017-05-31T13:06:07.620Z"}
{"msg":"IMO, we need to take a cue from @JonathanLevi and take a breath. We all want the best for Fabric, no doubt. However, we need to all consider the whole, not just parts. We also need to make tough decisions about when it is soup. We could noodle on this for the next year and not release in an effort to make it perfect. However, we need to recognize that nothing is perfect and we need to be willing to accept that we will get TONS of user feedback that will result in changes as Fabric evolves from 1.0 to 1.1 and beyond. ","username":"cbf","ts":"2017-05-31T13:11:49.102Z"}
{"msg":"Further, unless we succumb to throwing in the kitchen sink (as we sort of did for 1.0, you must admit) we should be able to get a 1.1 out quickly, to address the most pressing new features, and to improve the SDK experience.","username":"cbf","ts":"2017-05-31T13:12:53.919Z"}
{"msg":"So, what is the best way to get the software in user's hands? Get the release out and start working on the feedback. Deliver incremental improvement constantly and quickly. It's been almost a year since 0.6. We should not be thinking it will be another year for 1.1, so we should not be bent out of shape if something doesn't make the cut. ","username":"cbf","ts":"2017-05-31T13:15:37.904Z"}
{"msg":"Further, our subsequent releases will need strive for backwards compatibility of clients, so that application code need not be refactored except in extreme cases.","username":"cbf","ts":"2017-05-31T13:16:31.277Z"}
{"msg":"@here https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104#Filter-Results/10517 I added # votes to the dashboard gadget","username":"cbf","ts":"2017-05-31T15:58:35.700Z"}
{"msg":"@cbf- i went into your link and this is the error i got: The filter configured for this gadget could not be retrieved. Please verify it is still valid on the issue navigator.","username":"weeds","ts":"2017-05-31T16:12:58.234Z"}
{"msg":"@cbf i went into look at your link and this is the error i got: The filter configured for this gadget could not be retrieved. Please verify it is still valid on the issue navigator.","username":"weeds","ts":"2017-05-31T16:12:58.234Z"}
{"msg":"can you see it here https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104#","username":"cbf","ts":"2017-05-31T16:18:59.971Z"}
{"msg":"second tier of gadgets on the left","username":"cbf","ts":"2017-05-31T16:19:11.797Z"}
{"msg":"@cbf yes that works","username":"weeds","ts":"2017-05-31T17:07:36.566Z"}
{"msg":"wait no- that does not work- same message","username":"weeds","ts":"2017-05-31T17:07:51.266Z"}
{"msg":"here is error right above the bubble chart- The filter configured for this gadget could not be retrieved. Please verify it is still valid on the issue navigator.","username":"weeds","ts":"2017-05-31T17:08:11.257Z"}
{"msg":"huh","username":"cbf","ts":"2017-05-31T17:10:23.051Z"}
{"msg":"","username":"JonathanLevi","ts":"2017-05-31T17:10:53.695Z","attachments":[{"title":"File Uploaded: 2017-05-31_JIRA's_10104.png","title_link":"/file-upload/e7L88xTCZF97gzZSX/2017-05-31_JIRA's_10104.png","image_url":"/file-upload/e7L88xTCZF97gzZSX/2017-05-31_JIRA's_10104.png","image_type":"image/png","image_size":309276,"url":"/file-upload/e7L88xTCZF97gzZSX/2017-05-31_JIRA's_10104.png","remote":false,"fileId":"e7L88xTCZF97gzZSX","fileName":"2017-05-31_JIRA's_10104.png"}]}
{"msg":"Just took a look in a browser that is not logged on to JIRA - there is only one \"Gadget\" that needs (re)configuration, I believe. The rest seems fine.","username":"JonathanLevi","ts":"2017-05-31T17:12:16.325Z"}
{"msg":"OK, I have a repro: Just took a look from a browser that is not logged on to JIRA - there is only one \"Gadget\" that needs (re)configuration, I believe. The rest seems fine.","username":"JonathanLevi","ts":"2017-05-31T17:12:16.325Z"}
{"msg":"weird, someone changed visibility from public to the set of maintainers","username":"cbf","ts":"2017-05-31T17:12:19.149Z"}
{"msg":"should work now","username":"cbf","ts":"2017-05-31T17:12:32.096Z"}
{"msg":"Indeed. Now it works even when I'm not logged in. @weeds ?","username":"JonathanLevi","ts":"2017-05-31T17:13:04.948Z"}
{"msg":"so tiresome https://jira.hyperledger.org/browse/FAB-3618?focusedCommentId=24817&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-24817","username":"cbf","ts":"2017-05-31T17:36:05.334Z"}
{"msg":"You'll see this during the \"review-needed\" rounds, but I might as well bring it up here: https://jira.hyperledger.org/browse/FAB-4121?focusedCommentId=24824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-24824","username":"kostas","ts":"2017-05-31T17:56:48.260Z"}
{"msg":"TL;DR the critical bug in https://jira.hyperledger.org/browse/FAB-4136 may need some `orderer.yaml` changes, so review and consensus will be needed","username":"kostas","ts":"2017-05-31T17:57:34.916Z"}
{"msg":"Open to workarounds, and we can be flexible (as long as we're willing to pay the necessary price). Let's discuss this in FAB-4121.","username":"kostas","ts":"2017-05-31T17:58:58.106Z"}
{"msg":"@cbf works now-- i have a problem with JIRA right now that i'm getting Ry to help with unfortunately- which explains why i saw it differently","username":"weeds","ts":"2017-05-31T18:53:05.005Z"}
{"msg":"I reviewed the beta work items identified by @cbf in https://jira.hyperledger.org/browse/FAB-4212 - great start on a beta blocking list and checklist. I compared notes with @mastersingh24 relative to what else is needed for beta.  Where there is work required to modify/finalize release artifacts, I've added 'release artifact' work items to the blocking list.  These are things that needed to be discussed in Jira, picked up or assigned, and worked asap, in preparation for an upcoming beta (we could decide to defer a few until RC1, but that would not be ideal and should be an explicit decision).  I've also added several subtasks to the release 'checklist' for the actual beta delivery.","username":"dave.enyeart","ts":"2017-05-31T18:57:16.841Z"}
{"msg":"The Jira list supersedes the Google document that I had started: https://docs.google.com/document/d/1mPTMjXG_b-mgZd2_EUN9W-82ez0PrWoxIiPgcAAABwE/edit#","username":"dave.enyeart","ts":"2017-05-31T18:57:45.999Z"}
{"msg":"@dave.enyeart thanks!","username":"cbf","ts":"2017-05-31T19:06:03.520Z"}
{"msg":"one of the issues is also deciding on a release notes format","username":"cbf","ts":"2017-05-31T19:06:17.915Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-3054?focusedCommentId=24842&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-24842","username":"cbf","ts":"2017-05-31T19:06:19.422Z"}
{"msg":"for each of the 'release artifacts' in the blocking list - do you think we should tag with review-needed in order to stimulate some maintainer discussion in each jira item?","username":"dave.enyeart","ts":"2017-05-31T19:07:23.654Z"}
{"msg":"Dave, this is great. Thanks. Please let's use clickable URLs ?","username":"JonathanLevi","ts":"2017-05-31T19:11:38.582Z"}
{"msg":"One option is to group some of these in JIRA indeed, so that each sub-task/item's will auto-update...","username":"JonathanLevi","ts":"2017-05-31T19:12:18.310Z"}
{"msg":"One option is to group some of these in JIRA indeed, so that each sub-task/item's will be auto-updated...","username":"JonathanLevi","ts":"2017-05-31T19:12:18.310Z"}
{"msg":"@cbf by the way- this is something Clayton and I noticed.  If you are not logged into JIRA, the numbers on your dashboard are different (something I ran into first thin in the AM yesterday and had not realized i was not logged in yet)... if you want to try this out yourself- look at fabric 1.0 open bugs chart in the lower left corner: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104","username":"weeds","ts":"2017-05-31T19:14:30.349Z"}
{"msg":"@cbf by the way- this is something Clayton and I noticed.  If you are not logged into JIRA, the numbers on your dashboard are different (something I ran into first thing in the AM yesterday and had not realized i was not logged in yet)... if you want to try this out yourself- look at fabric 1.0 open bugs chart in the lower left corner: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104","username":"weeds","ts":"2017-05-31T19:14:30.349Z"}
{"msg":"-----","username":"JonathanLevi","ts":"2017-05-31T19:17:01.673Z"}
{"msg":"How many people here believe that we are ready to cut a *beta* in a day or two?","username":"JonathanLevi","ts":"2017-05-31T19:17:20.369Z"}
{"msg":"Not me.","username":"kostas","ts":"2017-05-31T19:17:27.179Z"}
{"msg":"Do we have to have Beta or could we go to release candidate? this has not been clear to me","username":"weeds","ts":"2017-05-31T19:17:49.238Z"}
{"msg":"We need to lock APIs.","username":"JonathanLevi","ts":"2017-05-31T19:18:02.276Z"}
{"msg":"However we call it.","username":"JonathanLevi","ts":"2017-05-31T19:18:12.083Z"}
{"msg":"what's an API?","username":"mastersingh24","ts":"2017-05-31T19:18:12.258Z"}
{"msg":"Oh no. Not again ;-)","username":"JonathanLevi","ts":"2017-05-31T19:18:23.620Z"}
{"msg":"Is that some marketing term?","username":"mastersingh24","ts":"2017-05-31T19:18:28.029Z"}
{"msg":"API/ABI and configs.","username":"JonathanLevi","ts":"2017-05-31T19:18:33.405Z"}
{"msg":"API, ABI OH MY  ;)   (ok I'm done now)","username":"mastersingh24","ts":"2017-05-31T19:18:53.542Z"}
{"msg":"for your clicking pleasure - here are the release artifacts that I think we need to finalize prior to beta:","username":"dave.enyeart","ts":"2017-05-31T19:18:56.441Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-4267 Release artifacts - Finalize release binaries build, distribution, installation approach (for non-Docker artifacts)\nhttps://jira.hyperledger.org/browse/FAB-4269 Release artifacts - Finalize e2e sample approach\nhttps://jira.hyperledger.org/browse/FAB-4270 Release artifacts - Finalize docker compose approach\nhttps://jira.hyperledger.org/browse/FAB-4271 Release artifacts - Finalize fabric-client and fabric-ca-client node sdk approach for publishing to NPM\nhttps://jira.hyperledger.org/browse/FAB-4272 Release artifacts - Finalize fabric-sdk-java distribution approach\nhttps://jira.hyperledger.org/browse/FAB-4273 Release artifacts - Finalize nexus release location, structure, and download approach\nhttps://jira.hyperledger.org/browse/FAB-4275 Release artifacts - Automated test to download/test release artifacts across platforms\n","username":"dave.enyeart","ts":"2017-05-31T19:18:57.940Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-4267 Release artifacts - Finalize release binaries build, distribution, installation approach (for non-Docker artifacts)\nhttps://jira.hyperledger.org/browse/FAB-4269 Release artifacts - Finalize e2e sample approach and artifacts\nhttps://jira.hyperledger.org/browse/FAB-4270 Release artifacts - Finalize docker compose approach and artifacts\nhttps://jira.hyperledger.org/browse/FAB-4271 Release artifacts - Finalize fabric-client and fabric-ca-client node sdk approach for publishing to NPM\nhttps://jira.hyperledger.org/browse/FAB-4272 Release artifacts - Finalize fabric-sdk-java distribution approach\nhttps://jira.hyperledger.org/browse/FAB-4273 Release artifacts - Finalize nexus release location, structure, and download approach\nhttps://jira.hyperledger.org/browse/FAB-4275 Release artifacts - Automated test to download/test release artifacts across platforms\n","username":"dave.enyeart","ts":"2017-05-31T19:18:57.940Z"}
{"msg":"API gravity, is a measure of how heavy or light a petroleum liquid is compared to water.","username":"weeds","ts":"2017-05-31T19:19:45.482Z"}
{"msg":"ha ha","username":"weeds","ts":"2017-05-31T19:19:53.585Z"}
{"msg":"i feel that the petroleum is quite heavy right  now","username":"weeds","ts":"2017-05-31T19:20:07.095Z"}
{"msg":"i feel that the petroleum is quite heavy right  now. I couldn't resist.","username":"weeds","ts":"2017-05-31T19:20:07.095Z"}
{"msg":"I did not include the actual fabric docker images and publishing to dockerhub, as I think that is pretty well figured out, but if people think there is more to do there, then we can create a 'release artifact' jira item for that as well","username":"dave.enyeart","ts":"2017-05-31T19:21:43.833Z"}
{"msg":"OK. Dave, let's add *all* of these to the google doc. We should try to get people assigned to each and an ETA.","username":"JonathanLevi","ts":"2017-05-31T19:22:13.969Z"}
{"msg":"in my mind, the google doc was for initial brainstorming, and i've now encoded into jira for discussion and execution going forward","username":"dave.enyeart","ts":"2017-05-31T19:22:58.758Z"}
{"msg":"OK. My take is:\n1) We are clearly not ready for a beta\n2) We have a set of milestones that we have committed to.\n3) We may need to re-review some of these, when we have ETAs, add them up and see what is a must.","username":"JonathanLevi","ts":"2017-05-31T19:23:50.820Z"}
{"msg":"As an aside, we should really have *one source* of information/status. It's difficult to follow and get the actual status / latest state of affairs.","username":"JonathanLevi","ts":"2017-05-31T19:24:50.697Z"}
{"msg":"And of of course, thanks a lot for your help @dave.enyeart.","username":"JonathanLevi","ts":"2017-05-31T19:25:08.903Z"}
{"msg":"I think FAB-4212 is the *one source* for beta status.  It has a list of blockers (including my items above), as well as a list of subtasks for actual execution/checklist.","username":"dave.enyeart","ts":"2017-05-31T19:26:29.444Z"}
{"msg":"I think FAB-4212 is the *one source* for beta status.  It has a list of blockers (including my items above), as well as a list of subtasks for actual beta delivery execution/checklist.","username":"dave.enyeart","ts":"2017-05-31T19:26:29.444Z"}
{"msg":"Has joined the channel.","username":"fbenhamo","ts":"2017-05-31T19:27:59.242Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Jgictwj4EgvBd4vow) As you all know, I'm not a good marketing person ;-)","username":"JonathanLevi","ts":"2017-05-31T19:39:26.531Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Jgictwj4EgvBd4vow","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Jgictwj4EgvBd4vow","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@dave.enyeart Added your doc to https://jira.hyperledger.org/browse/FAB-4212, thanks.","username":"JonathanLevi","ts":"2017-05-31T19:43:32.984Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ELnErLNZMmfMfTCKT) @weeds I don't think we can or should go directly to RC TBH","username":"cbf","ts":"2017-05-31T19:47:52.624Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ELnErLNZMmfMfTCKT","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ELnErLNZMmfMfTCKT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"FWIW, I do not think we should overload review-needed - it has a specific purpose","username":"cbf","ts":"2017-05-31T19:54:31.150Z"}
{"msg":"@cbf so do we need 2 weeks between beta and release candidate? that was not really outlined in the exit criteria- I know we need release candidate and then cut to release with 2 weeks in between at minimum along with exit criteria achieved","username":"weeds","ts":"2017-05-31T20:06:17.135Z"}
{"msg":"I know that some people don't always like me saying it, but *in general*, I'd rather cut \"features\" than *testing time* including giving enough time to provide us with (early) feedback.","username":"JonathanLevi","ts":"2017-05-31T20:10:53.532Z"}
{"msg":"One way \"out\" is to release a super solid RC1, which may prove to everybody that *this version of fabric is SO, SO good... come on, let's ship it already*.","username":"JonathanLevi","ts":"2017-05-31T20:11:59.793Z"}
{"msg":"I don't believe anyone here will ask us not to have a GA/cut, if we can collect enough good feedback, regarding the maturity and the readiness of the latest, say *rc1* cut.","username":"JonathanLevi","ts":"2017-05-31T20:13:04.279Z"}
{"msg":"For getting there, I believe that we'd need a lot of discipline and very open/transparent communication - especially when we have issues (that we are aware of).","username":"JonathanLevi","ts":"2017-05-31T20:13:49.491Z"}
{"msg":"----\nBTW: @dave.enyeart , as an aside, I have \"upgraded\" your (temporary) brainstorm document so that we have the option to re-use it, going forward. Hope I didn't butcher the formatting too much.","username":"JonathanLevi","ts":"2017-05-31T20:14:42.221Z"}
{"msg":"https://docs.google.com/document/d/1mPTMjXG_b-mgZd2_EUN9W-82ez0PrWoxIiPgcAAABwE/edit?usp=sharing","username":"JonathanLevi","ts":"2017-05-31T20:14:49.094Z"}
{"msg":"I agree @jonathanLevi there is nothing like having people stand up \"using\" the product and saying it's good-- so ++  ","username":"weeds","ts":"2017-05-31T20:15:51.752Z"}
{"msg":"I agree @JonathanLevi there is nothing like having people stand up \"using\" the product and saying it's good-- so ++  ","username":"weeds","ts":"2017-05-31T20:15:51.752Z"}
{"msg":"Yup. At the same time, I am trying to find out if we could simply have yet another \"cut\" sooner/-ish... rather than in mid June (if my ability to add ETAs is still working)","username":"JonathanLevi","ts":"2017-05-31T20:17:12.410Z"}
{"msg":"ok","username":"weeds","ts":"2017-05-31T20:17:58.877Z"}
{"msg":"BTW: I do believe that the more (often) we release, the better we'd all get at it....","username":"JonathanLevi","ts":"2017-05-31T20:18:15.915Z"}
{"msg":"And once we get really good at it, I'd propose to open a new \"#drama\" channel, to remind us all of the good ol' days ;-)","username":"JonathanLevi","ts":"2017-05-31T20:19:06.096Z"}
{"msg":"chuckling","username":"weeds","ts":"2017-05-31T20:43:45.192Z"}
{"msg":"also- if i were to really highlight the biggest risk areas- in my opinion of course it would be:","username":"weeds","ts":"2017-05-31T20:43:59.435Z"}
{"msg":"defect backlog- but more in the areas of peer and consensus (the consensus bugs are usually very painful to fix)","username":"weeds","ts":"2017-05-31T20:44:35.328Z"}
{"msg":"what results may come out of thte system test going on (ie performance, scale, concurrency, long run,etc,.)","username":"weeds","ts":"2017-05-31T20:44:58.822Z"}
{"msg":"the results of the pen testing-- which i don't think has started (chris is supposed to be prodding linux foundation on that)","username":"weeds","ts":"2017-05-31T20:45:33.634Z"}
{"msg":"pen testing can \"sometimes\" find some nasty bugs","username":"weeds","ts":"2017-05-31T20:45:41.316Z"}
{"msg":"there is the whole list of things- but this is where I worry the most... i am driving team internally on the defects hard btw","username":"weeds","ts":"2017-05-31T20:46:01.123Z"}
{"msg":"but telling them highest, high... and being careful not to add features (although you see sometimes there is a line they don't all get)","username":"weeds","ts":"2017-05-31T20:46:22.327Z"}
{"msg":"just created https://jira.hyperledger.org/browse/FAB-4283 and tagged `review-needed` to follow up from this morning's discussions. that'll be all for node SDK. not so much API changes as removing unimplemented methods or unneeded methods/properties.","username":"jimthematrix","ts":"2017-05-31T20:55:03.001Z"}
{"msg":"for Java SDK nothing planned at the moment, but under the cover it's at a different state (as in \"we don't know if any would be needed until we get more feedback from usage\")","username":"jimthematrix","ts":"2017-05-31T20:56:43.484Z"}
{"msg":"for Java SDK nothing planned at the moment beyond cleanup of unused code, but under the cover it's at a different state (as in \"we don't know if any API changes would be needed until we get more feedback from usage\")","username":"jimthematrix","ts":"2017-05-31T20:56:43.484Z"}
{"msg":"Thank you @jimthematrix . Do we have a rough estimate as for how much more work will be required (assuming we don't find anything new/given what we know today) for the Node SDK ?","username":"JonathanLevi","ts":"2017-05-31T20:59:04.244Z"}
{"msg":"Is it a matter of days ?","username":"JonathanLevi","ts":"2017-05-31T20:59:27.099Z"}
{"msg":"( *not* trying to apply any pressure, or hint at anything. An ETA will help with planning, more than anything)","username":"JonathanLevi","ts":"2017-05-31T21:00:08.198Z"}
{"msg":"outstanding work include https://jira.hyperledger.org/browse/FAB-2787, and the two that are in review list","username":"jimthematrix","ts":"2017-05-31T21:00:23.456Z"}
{"msg":"should be a matter of a day or two","username":"jimthematrix","ts":"2017-05-31T21:00:46.998Z"}
{"msg":"Got you. Thanks !","username":"JonathanLevi","ts":"2017-05-31T21:01:52.044Z"}
{"msg":"also https://jira.hyperledger.org/browse/FAB-4226, still in a day or two","username":"jimthematrix","ts":"2017-05-31T21:02:26.170Z"}
{"msg":"(sample app upgrade)","username":"jimthematrix","ts":"2017-05-31T21:02:34.651Z"}
{"msg":"One of my tasks in the coming days should probably to \"let you guys work\" rather than participate in all these \"dramatic\" discussions.","username":"JonathanLevi","ts":"2017-05-31T21:03:08.920Z"}
{"msg":"One of my tasks in the coming days should probably be to try and \"let you guys work\" rather than participate in all these \"dramatic\" discussions ;-)","username":"JonathanLevi","ts":"2017-05-31T21:03:40.773Z"}
{"msg":"Let's see how it goes. Thanks again.","username":"JonathanLevi","ts":"2017-05-31T21:04:02.982Z"}
{"msg":"Just to quickly say, that if we can really push some of these out (for review), we may work on a \"cut\" next week. The idea is not to apply more pressure, but rather to check that our process is getting better.","username":"JonathanLevi","ts":"2017-05-31T21:05:25.139Z"}
{"msg":"I will formulate some of the opinions/views that are shared with me. One of which, is that we should simply start thinking/working on regular/frequent \"builds\".","username":"JonathanLevi","ts":"2017-05-31T21:06:12.620Z"}
{"msg":"I will formulate/combine some of the opinions/views that are/were shared with me and others, on several occasions. One of which, is that we should simply start thinking/working on regular/frequent \"builds\".","username":"JonathanLevi","ts":"2017-05-31T21:06:12.620Z"}
{"msg":"[UPDATED:] I will formulate/formalize/combine some of the opinions/views that are/were shared with me and others, on several occasions. One of which, is that we should simply start thinking/working on regular/frequent \"builds\".","username":"JonathanLevi","ts":"2017-05-31T21:06:12.620Z"}
{"msg":"So that we have a \"train\", leaving, say, every X weeks. Whatever is onboard, is getting released, whatever's not there - will not be part of it.","username":"JonathanLevi","ts":"2017-05-31T21:07:01.875Z"}
{"msg":"This way, we should all be clear about \"what's coming\" and when. Again, more about this later. For now, let's just all see where we stand.","username":"JonathanLevi","ts":"2017-05-31T21:07:43.755Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=96T6fzw6nKnntfh5Q) @JonathanLevi this has been my point all along... cut a release every 2 weeks","username":"cbf","ts":"2017-05-31T21:25:37.275Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=96T6fzw6nKnntfh5Q","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=96T6fzw6nKnntfh5Q","remote":true,"fileId":null,"fileName":null}]}
{"msg":"get the practice","username":"cbf","ts":"2017-05-31T21:25:44.307Z"}
{"msg":"+1 for frequent releases","username":"greg.haskins","ts":"2017-05-31T21:58:06.496Z"}
{"msg":"It should be painless, so if it's not, doing them more often will help get us there","username":"greg.haskins","ts":"2017-05-31T21:59:11.249Z"}
{"msg":"no pain no gain","username":"mastersingh24","ts":"2017-05-31T22:16:29.365Z"}
{"msg":"I gotta stop living in the 80's","username":"mastersingh24","ts":"2017-05-31T22:16:47.326Z"}
{"msg":"Hold on, we didn't have Win32 in the 80's ! ;-)","username":"JonathanLevi","ts":"2017-05-31T22:20:30.525Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=T92897iyPhK3QSzHd) Yes, that's true. Same for @greg.haskins and some others (maintainers, or just good ol' timers ;-)).","username":"JonathanLevi","ts":"2017-05-31T22:22:17.316Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=T92897iyPhK3QSzHd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=T92897iyPhK3QSzHd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"___\n@cbf: [ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=T92897iyPhK3QSzHd) Yes, that's true. Same for @greg.haskins and some others (maintainers, or just good ol' timers ;-)).","username":"JonathanLevi","ts":"2017-05-31T22:22:17.316Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=T92897iyPhK3QSzHd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=T92897iyPhK3QSzHd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"There was DOS . can't we get this all running in 640K ? ","username":"rickr","ts":"2017-05-31T23:25:45.915Z"}
{"msg":"So, I am just catching up with this channel since Consensus.  I noticed that @cbf mentioned that we should use SPDX for license identifiers.  This is true; however, we should not change any existing files that already have the license information in the header. This is from the folks at The Linux Foundation.  Not sure if I am too late, but if you have not already made the change of existing license text to SPDX, please don't.","username":"tkuhrt","ts":"2017-05-31T23:44:13.857Z"}
{"msg":"@tkuhrt I think the short answer is, the vast majority are still unmodified...but that said, do you have an understanding the the rationale?","username":"greg.haskins","ts":"2017-06-01T01:24:12.858Z"}
{"msg":"it strikes me as beneficial to convert for the sake of conformance testing in the linter task, and I can't imaging why it would matter otherwise","username":"greg.haskins","ts":"2017-06-01T01:24:59.838Z"}
{"msg":"it strikes me as beneficial to convert for the sake of conformance testing in the linter task, and I can't imagine why it would matter otherwise","username":"greg.haskins","ts":"2017-06-01T01:24:59.838Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=X77skmSDxf6s5E3iR) @tkuhrt why? We will have to undo a bunch.","username":"cbf","ts":"2017-06-01T09:45:37.638Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=X77skmSDxf6s5E3iR","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=X77skmSDxf6s5E3iR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Could somebody remind me what the criteria is for a passed Verification?","username":"dave.enyeart","ts":"2017-06-01T10:51:30.738Z"}
{"msg":"Looking at: https://gerrit.hyperledger.org/r/#/c/9287/","username":"dave.enyeart","ts":"2017-06-01T10:51:38.248Z"}
{"msg":"verify for x86_64 and z both passed. only verify for behave failed. This results in a -1 Verification.","username":"dave.enyeart","ts":"2017-06-01T10:52:32.217Z"}
{"msg":"The behave failures have nothing to do with the change.  Can I (as a maintainer) override the -1 Verification manually in these cases?","username":"dave.enyeart","ts":"2017-06-01T10:53:10.452Z"}
{"msg":"well notice the behave succeeded before","username":"yacovm","ts":"2017-06-01T10:54:11.941Z"}
{"msg":"right?","username":"yacovm","ts":"2017-06-01T10:54:14.381Z"}
{"msg":"so it's not that your change set failed behave","username":"yacovm","ts":"2017-06-01T10:54:28.193Z"}
{"msg":"So I (as a maintainer) can use my judgement in these cases and manually change it to a +1 right?","username":"dave.enyeart","ts":"2017-06-01T10:55:34.545Z"}
{"msg":"yeah I believe so","username":"yacovm","ts":"2017-06-01T10:55:46.305Z"}
{"msg":"ok done.  this one is ready for a 2nd +2 review then: https://gerrit.hyperledger.org/r/#/c/9287","username":"dave.enyeart","ts":"2017-06-01T10:59:10.618Z"}
{"msg":"Don't forget to remove the vote of the job builder","username":"yacovm","ts":"2017-06-01T11:00:00.238Z"}
{"msg":"done","username":"dave.enyeart","ts":"2017-06-01T11:00:22.921Z"}
{"msg":"@dave.enyeart yes, you can use your best judgement and remove the jenkins vote IFF the failure is a known failure and the change is unrelated. Please don't abuse, of course. ","username":"cbf","ts":"2017-06-01T11:32:16.791Z"}
{"msg":"@dave.enyeart @cbf I would also add that a) this should be very rare, and b) it should be accompanied with a decent note on the what/where/why","username":"greg.haskins","ts":"2017-06-01T12:31:50.861Z"}
{"msg":"+1","username":"cbf","ts":"2017-06-01T12:32:03.892Z"}
{"msg":"@cbf I meant to ask- do you know if Linux team has started pen testing or when it officially starts?","username":"weeds","ts":"2017-06-01T16:10:17.577Z"}
{"msg":"Has joined the channel.","username":"sstone1","ts":"2017-06-01T16:10:55.414Z","type":"uj"}
{"msg":"no, last email (today) suggests that Dave has call with the contractor tomorrow and others are invited to join in (though I have not seen the invite)","username":"cbf","ts":"2017-06-01T17:46:01.712Z"}
{"msg":"@weeds ^^","username":"cbf","ts":"2017-06-01T17:46:10.012Z"}
{"msg":"feel free to add me- I would love to learn the process they use","username":"weeds","ts":"2017-06-01T17:48:34.498Z"}
{"msg":"Internal discussions amongst the maintainers of Hyperledger Fabric. BTW: please use #fabric-pr-review for pull request&#39;s (PR) reviews","username":"JonathanLevi","ts":"2017-06-01T18:03:10.449Z","type":"room_changed_topic"}
{"msg":"@rickr, @weeds, etc... please let's move all the \"non-internal\" discussions, comments, questions, to other channels. E.g., most of the latest topical stuff, that is not \"amongst the maintainers, by maintainers, for maintainers\", regarding the release, should take place in #fabric-release (that is widely open both to questions, discussions, comments, etc.)","username":"JonathanLevi","ts":"2017-06-01T18:05:01.553Z"}
{"msg":"I have updated the room topic above.","username":"JonathanLevi","ts":"2017-06-01T18:05:31.913Z"}
{"msg":"Internal discussions amongst the maintainers of Hyperledger Fabric. BTW: please use #fabric-pr-review for pull requests&#39; (PR) reviews, #fabric-release for release related stuff, etc.","username":"JonathanLevi","ts":"2017-06-01T18:06:13.075Z","type":"room_changed_topic"}
{"msg":"BTW? ","username":"yacovm","ts":"2017-06-01T18:11:06.806Z"}
{"msg":"maintainers, this has 4 votes https://jira.hyperledger.org/browse/FAB-3199","username":"muralisr","ts":"2017-06-01T18:19:12.673Z"}
{"msg":"and has a CR out there  https://gerrit.hyperledger.org/r/#/c/8403","username":"muralisr","ts":"2017-06-01T18:19:37.861Z"}
{"msg":"if you have not taken a look, could you please ?","username":"muralisr","ts":"2017-06-01T18:20:33.298Z"}
{"msg":"@cbf , @greg.haskins : Regarding removal of license text and replacing with SPDX short form identifiers, here is what I got from the experts at The Linux Foundation:\n* Some open source licenses are phrased such that they might not permit removing existing license text.  Just as an example, the 3-clause BSD license (https://spdx.org/licenses/BSD-3-Clause.html) has a condition that \"Redistributions of source code must *retain* the above copyright notice, this list of conditions and the following disclaimer\" (emphasis added). \n\n* Because of that - and it's something that a developer would likely want to discuss with their own legal counsel - in general our recommendation would be not to delete existing notices in third-party files.\n\n* That said, this is specific to third-party files where a different party holds the copyright.  If the developer or their employer is the copyright holder for a particular file, then they can feel free to decide whether to retain the text for their own license in the file, or whether to replace it with just the short-form SPDX identifier.\n\n* In any event, developers will not want to remove copyright notices (e.g., \"Copyright (c) 2016 XYZ Company\").  Copyright notices are related to, but separate from, the license text itself -- and copyright notices should not be stripped out of files.\n","username":"tkuhrt","ts":"2017-06-01T18:23:03.381Z"}
{"msg":"@cbf , @greg.haskins : Regarding removal of license text and replacing with SPDX short form identifiers, here is what I got from the experts at The Linux Foundation:\n- Some open source licenses are phrased such that they might not permit removing existing license text.  Just as an example, the 3-clause BSD license (https://spdx.org/licenses/BSD-3-Clause.html) has a condition that \"Redistributions of source code must *retain* the above copyright notice, this list of conditions and the following disclaimer\" (emphasis added). \n\n- Because of that - and it's something that a developer would likely want to discuss with their own legal counsel - in general our recommendation would be not to delete existing notices in third-party files.\n\n- That said, this is specific to third-party files where a different party holds the copyright.  If the developer or their employer is the copyright holder for a particular file, then they can feel free to decide whether to retain the text for their own license in the file, or whether to replace it with just the short-form SPDX identifier.\n\n- In any event, developers will not want to remove copyright notices (e.g., \"Copyright (c) 2016 XYZ Company\").  Copyright notices are related to, but separate from, the license text itself -- and copyright notices should not be stripped out of files.\n","username":"tkuhrt","ts":"2017-06-01T18:23:03.381Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz) @muralisr Added my vote to the JIRA. Artem, is this still WIP (as note in the Commit MSG) ? Thanks.","username":"JonathanLevi","ts":"2017-06-01T18:25:18.924Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz) @muralisr Added my vote to the JIRA. Artem, is this still WIP (as per the note in the Commit MSG) ? Thanks.","username":"JonathanLevi","ts":"2017-06-01T18:25:18.924Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz) @muralisr Added my vote to the JIRA. As for the CR, Artem, is this still WIP (as per the note in the Commit MSG) ? Thanks.","username":"JonathanLevi","ts":"2017-06-01T18:25:18.924Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=rQkv797FrAhXjkAAz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@C0rWin ^^^","username":"muralisr","ts":"2017-06-01T18:26:12.927Z"}
{"msg":"an easy CR https://gerrit.hyperledger.org/r/#/c/8873/ that has been languishing for a month","username":"muralisr","ts":"2017-06-01T18:41:00.368Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=vF76ZzFAakmkPMG4B) @tkuhrt I have thus far only changed the ASL licensed files we created","username":"cbf","ts":"2017-06-01T18:44:58.504Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=vF76ZzFAakmkPMG4B","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=vF76ZzFAakmkPMG4B","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I will clarify the guidance though - I get the point","username":"cbf","ts":"2017-06-01T18:45:16.185Z"}
{"msg":"and as noted, I have NOT nor was I planning on changing any 3rd party license headers","username":"cbf","ts":"2017-06-01T18:45:53.707Z"}
{"msg":"btw, we could probably do with another scan of fabric ... I still need to go through the others","username":"cbf","ts":"2017-06-01T18:46:42.500Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=MKfhvxi6pPt7zRu7f) @cbf @tkuhrt thanks for explaining...this makes sense.....I agree that we should not (nor was I planning to) change third party","username":"greg.haskins","ts":"2017-06-01T19:16:51.487Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=MKfhvxi6pPt7zRu7f","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=MKfhvxi6pPt7zRu7f","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@cbf for what its worth, you have my blessing convert any of the files to SPDX that I or my employer have copyright on.","username":"greg.haskins","ts":"2017-06-01T19:18:16.748Z"}
{"msg":"@cbf for what its worth, you have my blessing to convert any of the files to SPDX that I or my employer have copyright on.","username":"greg.haskins","ts":"2017-06-01T19:18:16.748Z"}
{"msg":"thanks","username":"cbf","ts":"2017-06-01T20:05:08.063Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=vgP4NsdaTWYbdf59M) @JonathanLevi Thanks, I've removed WIP from the title while forgot to change commit message body. Going to update it.","username":"C0rWin","ts":"2017-06-01T22:31:33.195Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=vgP4NsdaTWYbdf59M","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=vgP4NsdaTWYbdf59M","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi @jimthematrix , @C0rWin have you concluded on this one ? https://jira.hyperledger.org/browse/FAB-3888","username":"elli-androulaki","ts":"2017-06-02T00:25:38.137Z"}
{"msg":"Folks - I marked https://jira.hyperledger.org/browse/FAB-4305  as needs review just to be cautious so please take some time and have a look.   The corresponding CR is https://gerrit.hyperledger.org/r/#/c/10071/  ","username":"mastersingh24","ts":"2017-06-02T15:09:47.654Z"}
{"msg":"@mastersingh24 just posted a dumb. q on https://jira.hyperledger.org/browse/FAB-4305","username":"muralisr","ts":"2017-06-02T15:30:41.423Z"}
{"msg":"@muralisr  - answered - but basically - yeah -  we still need this - the grpc upgrade provided the feature and this exploits it","username":"mastersingh24","ts":"2017-06-02T15:47:01.931Z"}
{"msg":"thanks, @mastersingh24 ","username":"muralisr","ts":"2017-06-02T15:55:52.580Z"}
{"msg":"Is there a JIRA item for items post V1.0? ","username":"yacovm","ts":"2017-06-02T21:11:28.001Z"}
{"msg":"just set fixVersion as Future or v1.1","username":"cbf","ts":"2017-06-03T00:20:57.792Z"}
{"msg":"not sure what you mean for an item","username":"cbf","ts":"2017-06-03T00:21:09.187Z"}
{"msg":"do you mean an epic?","username":"cbf","ts":"2017-06-03T00:21:13.911Z"}
{"msg":"multiples of those I suspect","username":"cbf","ts":"2017-06-03T00:21:20.582Z"}
{"msg":"I'm asking- let's say someone wants to propose an addition to fabric for v1.1, how would he/she drive this?\nI assume open a JIRA item  + send to the mailing list, but I was wondering if there is a JIRA item that consolidates features for v1.1.","username":"yacovm","ts":"2017-06-03T07:53:07.010Z"}
{"msg":"@yacovm  - for now, if someone want's to propose something for the next release, they can use v1.1 as the fix version.  Of course we will need to go through everything marked as v1.1 or Future as we start planning the next version(s)","username":"mastersingh24","ts":"2017-06-03T09:37:49.575Z"}
{"msg":"Understood. Thanks @mastersingh24 and @cbf ","username":"yacovm","ts":"2017-06-03T10:38:04.897Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=LfTBu7yX4QSMbyGq8) @yacovm https://github.com/hyperledger/fabric/blob/master/docs/source/CONTRIBUTING.rst#making-featureenhancement-proposals","username":"cbf","ts":"2017-06-03T12:02:09.410Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=LfTBu7yX4QSMbyGq8","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=LfTBu7yX4QSMbyGq8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"ok, thanks","username":"yacovm","ts":"2017-06-03T12:04:15.158Z"}
{"msg":"we merged that a month or more ago as our process. As for collecting them up in a single JIRA, let's explore that for post 1.0. We could, I suppose, use a specific label as we did with the 'review-needed' label as the means of identifying JIRAs that are seeking support. Of course, we could also use the 'Feature' JIRA issue type as a means of tracking new or improved feature proposals and adopt a model of voting on those. In the proposal linked above, I offered \"3 or more maintainers\" as a lower threshold for embarking on new feature development. We could up the ante, but that might stifle innovation. ","username":"cbf","ts":"2017-06-03T12:06:40.034Z"}
{"msg":"another thought is we might want to have a higher threshold for API/ABI changes that break fwd/bkwd compatibility","username":"cbf","ts":"2017-06-03T12:07:52.846Z"}
{"msg":"What is the threshold for changes that unknowingly break API/ABI compatibility? ;) ","username":"yacovm","ts":"2017-06-03T12:16:06.170Z"}
{"msg":"What is the threshold for changes that unknowingly break API/ABI compatibility? ;)  x2 i guess...","username":"yacovm","ts":"2017-06-03T12:16:06.170Z"}
{"msg":"@cbf - I assume our releases will follow semantic versioning per http://semver.org ?\n\nMAJOR:MINOR:PATCH and IF we allowed incompatible / breaking API/ABI changes they would have to go in a MAJOR release?","username":"mastersingh24","ts":"2017-06-03T12:50:33.011Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=KS3TiwzRfEn5bjAz4) @yacovm We should be checking for this in a CI integration test","username":"greg.haskins","ts":"2017-06-03T13:12:37.872Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=KS3TiwzRfEn5bjAz4","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=KS3TiwzRfEn5bjAz4","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@mastersingh24 : Yes. All Hyperledger projects should follow semver.org. See https://wiki.hyperledger.org/community/release_taxonomy for details. This was agreed by TSC sometime in the past. ","username":"tkuhrt","ts":"2017-06-04T16:06:54.039Z"}
{"msg":"So... e2e is broken on master, I think. \ncommit hash `5e6b08be8dbb1a0783d3436da01d4f056ff27a85` passes but latest doesn't","username":"yacovm","ts":"2017-06-05T08:03:05.546Z"}
{"msg":"So... e2e is broken on master, I think. \ncommit hash `5e6b08be8dbb1a0783d3436da01d4f056ff27a85` passes but the next one `ae71b2f3dc5e10c8f9729418d28acff4481cd62b` breaks it:\n```\ngoroutine 1 [running]:\npanic(0x8fb1c0, 0xc420014120)\n\t/home/yacovm/OBC/go/src/runtime/panic.go:500 +0x1a1\ngithub.com/hyperledger/fabric/common/configtx/tool/localconfig.translatePaths(0xc42013f200, 0x51, 0xc420250060)\n\t/home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/localconfig/config.go:268 +0x61\ngithub.com/hyperledger/fabric/common/configtx/tool/localconfig.(*Profile).completeInitialization(0xc42024e810, 0xc42013f200, 0x51)\n\t/home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/localconfig/config.go:217 +0x13e\ngithub.com/hyperledger/fabric/common/configtx/tool/localconfig.Load(0x7fff8cdb1cfc, 0xe, 0x0)\n\t/home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/localconfig/config.go:195 +0x63f\nmain.main()\n\t/home/yacovm/OBC/shared/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/configtxgen/main.go:328 +0x4fa\n```","username":"yacovm","ts":"2017-06-05T08:03:05.546Z"}
{"msg":"I think it's because the e2e uses `release/linux-amd64/bin/cryptogen`","username":"yacovm","ts":"2017-06-05T08:08:34.367Z"}
{"msg":"I opened FAB-4360, it's because the `release/linux-amd64/bin/configtxgen` needs to be updated ","username":"yacovm","ts":"2017-06-05T08:17:11.913Z"}
{"msg":"I opened https://jira.hyperledger.org/browse/FAB-4360, it's because the `release/linux-amd64/bin/configtxgen` needs to be updated ","username":"yacovm","ts":"2017-06-05T08:17:11.913Z"}
{"msg":"When someone does `make clean` it doesn't do `release-clean` and I think that's the reason it fails","username":"yacovm","ts":"2017-06-05T08:19:10.294Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=PQGpvaRdMqRQ7H668) @tkuhrt we have been all along","username":"cbf","ts":"2017-06-05T10:46:11.732Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=PQGpvaRdMqRQ7H668","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=PQGpvaRdMqRQ7H668","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[I'll take a look at this one ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ErqtWdAPEEu54Q8uT) @yacovm ","username":"mastersingh24","ts":"2017-06-05T11:11:54.041Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ErqtWdAPEEu54Q8uT","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ErqtWdAPEEu54Q8uT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"sure","username":"yacovm","ts":"2017-06-05T11:14:46.931Z"}
{"msg":"@yacovm -  https://jira.hyperledger.org/browse/FAB-4360?focusedCommentId=25316&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-25316","username":"mastersingh24","ts":"2017-06-05T11:20:06.291Z"}
{"msg":"That's what I said Gari\nhttps://chat.hyperledger.org/channel/fabric-maintainers?msg=TtTQxWHiDazGWMhMv","username":"yacovm","ts":"2017-06-05T11:22:11.586Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TtTQxWHiDazGWMhMv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TtTQxWHiDazGWMhMv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Right - just updating the JIRA to reflect the conversation ","username":"mastersingh24","ts":"2017-06-05T11:42:07.585Z"}
{"msg":"So you'd concur that adding `release-clean` to the `clean` target will suffice?","username":"mastersingh24","ts":"2017-06-05T11:42:31.339Z"}
{"msg":"yeah","username":"yacovm","ts":"2017-06-05T11:52:14.212Z"}
{"msg":"Has joined the channel.","username":"tzipih0","ts":"2017-06-05T14:14:08.549Z","type":"uj"}
{"msg":"https://chat.hyperledger.org/channel/fabric-release?msg=YKXDWzMJJvwsXS8Zf","username":"cbf","ts":"2017-06-05T14:14:58.977Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=YKXDWzMJJvwsXS8Zf","url":"https://chat.hyperledger.org/channel/fabric-release?msg=YKXDWzMJJvwsXS8Zf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@kostas From a config tool perspective and defect perspective, I see fabric-orderer as likely ready for a Tuesday freeze with Thursday release.  What do you think from a Kafka perspective?","username":"jyellick","ts":"2017-06-05T15:03:34.912Z"}
{"msg":"The critical bug for Kafka has had an ETA of 6/9 for 4 days now, so I'm not sure why we're gunning for Thursday. I haven't seen any votes on either FAB-4121 or FAB-4184 (besides yours), so in theory even the path forward hasn't been agreed to by the maintainers. (I say \"in theory\", because I'm actually working towards these fixes nonetheless — unless someone says stop — since we don't have the luxury of time.)","username":"kostas","ts":"2017-06-05T15:10:37.275Z"}
{"msg":"The critical bug for Kafka has had an ETA of 6/9 for 4 days now, so I'm not sure why we're gunning for Thursday. I haven't seen any votes on either FAB-4121 or FAB-4184 (besides yours), so technically even the path forward hasn't been agreed on by the maintainers. (I'm actually working towards these fixes nonetheless — unless someone says stop — since we don't have the luxury of time.)","username":"kostas","ts":"2017-06-05T15:10:37.275Z"}
{"msg":"The critical bug for Kafka has had an ETA of 6/9 for 4 days now, so I'm not sure why we're gunning for Thursday. I haven't seen any votes on either ~FAB-4121~ FAB-4357 or FAB-4184 (besides yours), so technically even the path forward hasn't been agreed on by the maintainers. (I'm actually working towards these fixes nonetheless — unless someone says stop — since we don't have the luxury of time.)","username":"kostas","ts":"2017-06-05T15:10:37.275Z"}
{"msg":"So yeah, the Thursday goal seems a bit off to me. Will we try to make it? Sure. Will we make it for sure? Who knows.","username":"kostas","ts":"2017-06-05T15:12:14.333Z"}
{"msg":"Also note: https://jira.hyperledger.org/browse/FAB-4155 which requires an extension of the ChainSupport interface, and modifications in `orderer/common/deliver` and the orderer plugins.","username":"kostas","ts":"2017-06-05T15:14:12.834Z"}
{"msg":"@kostas well, we aren't going to cut a release on a friday, and if we push this to say Tuesday next week, we completely throw out any possibility of having even a RC published in June IMO. I thought that the plan B was doable by tomorrow?","username":"cbf","ts":"2017-06-05T15:18:30.055Z"}
{"msg":"I personally am less worried about the class of release (alpha/beta/rc) and more worried about the ceremony of release at this point","username":"greg.haskins","ts":"2017-06-05T15:20:14.120Z"}
{"msg":"I don't recall ever giving an ETA for tomorrow even for plan B. The plan B was that — whether we merge the Kafka refactor CR or not — we'll try to have the fix in by the end of the week.","username":"kostas","ts":"2017-06-05T15:20:15.612Z"}
{"msg":"so I would suggest perhaps alpha3 _right now_","username":"greg.haskins","ts":"2017-06-05T15:20:24.154Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Bez7iBGFdtq6EcHyS) @kostas ok I misunderstood","username":"cbf","ts":"2017-06-05T15:20:53.540Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Bez7iBGFdtq6EcHyS","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Bez7iBGFdtq6EcHyS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"and if that means we wait for @kostas fix for a beta1 early next week, i am cool with that","username":"greg.haskins","ts":"2017-06-05T15:20:54.055Z"}
{"msg":"As for the rest of your observations, I see them and FWIW I share them.","username":"kostas","ts":"2017-06-05T15:21:03.706Z"}
{"msg":"I think we could benefit from having more frequent releases until we hit GA","username":"greg.haskins","ts":"2017-06-05T15:22:11.391Z"}
{"msg":"we should have releases to ensure that we can actually do them propoerly","username":"mastersingh24","ts":"2017-06-05T15:41:44.169Z"}
{"msg":"we should have releases to ensure that we can actually do them properly - at least the most basic pieces","username":"mastersingh24","ts":"2017-06-05T15:41:44.169Z"}
{"msg":"@cbf  regarding gossip - I have FAB-3359 (Re-introduce usage of TLS-Unique in gossip handshake) that currently isn't working (trying to figure out why), no idea about ETA","username":"yacovm","ts":"2017-06-05T15:42:51.740Z"}
{"msg":"@cbf  regarding gossip - I have FAB-3359 (Re-introduce usage of TLS-Unique in gossip handshake) that currently isn't working (I mean, it's working - just preventing all peers to communicate so I guess it is working just not in the way I want it. It did work when I did the change set back then... ) (trying to figure out why), no idea about ETA","username":"yacovm","ts":"2017-06-05T15:42:51.740Z"}
{"msg":"@cbf  regarding gossip - ~  I have FAB-3359 (Re-introduce usage of TLS-Unique in gossip handshake) that currently isn't working (I mean, it's working - just preventing all peers to communicate so I guess it is working just not in the way I want it. It did work when I did the change set back then... ) (trying to figure out why), no idea about ETA ~","username":"yacovm","ts":"2017-06-05T15:42:51.740Z"}
{"msg":"@cbf  regarding gossip - ~  I have FAB-3359 (Re-introduce usage of TLS-Unique in gossip handshake) that currently isn't working (I mean, it's working - just preventing all peers to communicate so I guess it is working just not in the way I want it. It did work when I did the change set back then... ) (trying to figure out why), no idea about ETA ~\nEDIT - fixed it :) ","username":"yacovm","ts":"2017-06-05T15:42:51.740Z"}
{"msg":"Also not sure when it should be included (for what release)","username":"yacovm","ts":"2017-06-05T15:43:06.608Z"}
{"msg":"and frankly there should not be a fight at this point as to what is in / what is not in.  sure - we can debate what tag we use (alpha3 versus beta) but then we should set proper fix versions for items to the appropriate tag so we know what we feel is mandatory for any given release target","username":"mastersingh24","ts":"2017-06-05T15:43:14.032Z"}
{"msg":"We are supposed to be able to push out releases at any point - so let's try and only argue about the milestone tag if anything","username":"mastersingh24","ts":"2017-06-05T15:43:53.713Z"}
{"msg":"And lastly, we should simply do a release soon for the sake of doing a release without a mad scramble as seems to happen everytime.\n\nAnd FWIW  - I don't actually believe that every single piece can be 100% automated without same human sanity checks  ","username":"mastersingh24","ts":"2017-06-05T15:45:09.446Z"}
{"msg":"Automating a bad process just makes bad things happen faster","username":"mastersingh24","ts":"2017-06-05T15:45:24.361Z"}
{"msg":"@mastersingh24 +100","username":"cbf","ts":"2017-06-05T15:55:51.815Z"}
{"msg":"so, alpha3 then? ","username":"cbf","ts":"2017-06-05T15:56:07.961Z"}
{"msg":"I'd like beta to be 0 highest defects","username":"cbf","ts":"2017-06-05T15:56:25.041Z"}
{"msg":"+1 for alpha3, would be nice to have 0 high defects for beta","username":"muralisr","ts":"2017-06-05T16:54:27.017Z"}
{"msg":"Chris - I'd like to understand a little about requirements for alpha3 versus beta.  Is beta really a statement that we won't be changing apis?  is Kostas defect changing APIs?  where did the requirement of zero highest defects come out?  just trying to understand, or are maintainers just trying to decide that it's a new requirement to have zero?","username":"weeds","ts":"2017-06-05T17:03:36.078Z"}
{"msg":"@cbf Chris - I'd like to understand a little about requirements for alpha3 versus beta.  Is beta really a statement that we won't be changing apis?  is Kostas defect changing APIs?  where did the requirement of zero highest defects come out?  just trying to understand, or are maintainers just trying to decide that it's a new requirement to have zero?","username":"weeds","ts":"2017-06-05T17:03:36.078Z"}
{"msg":"And if we cut Alpha3- would target for beta be next week or ?  just trying to understand the \"time\" frame for these things.","username":"weeds","ts":"2017-06-05T17:04:22.146Z"}
{"msg":"or do we have to have 2 weeks between alpha3/beta? and then another 2 weeks betwen beta/release candidate? and then another 2 weeks between release candidate/ final cut of 1.0 (all dependent on defects obviously)?","username":"weeds","ts":"2017-06-05T17:17:19.596Z"}
{"msg":"@muralisr Chris said Highest defects- did you really mean high defects Murali?","username":"weeds","ts":"2017-06-05T17:18:46.866Z"}
{"msg":"@muralisr Right Murali I think this is why I really wanted Chris to chime in to provide insight, as I continue to be unclear on this.  And @kostas to see if we have a real api change if we bring in the highest defect he's working on (ie fab 4136)","username":"weeds","ts":"2017-06-05T17:18:46.866Z"}
{"msg":"so @weeds I was thinking we cut alpha3 keep testing and working the alpha3 and when the other defects (say @kostas 's ) come in, test those and do beta when ready ...basically a rolling, continuous test ","username":"muralisr","ts":"2017-06-05T17:19:19.554Z"}
{"msg":"right ...sorry, I meant whatever the criteria was","username":"muralisr","ts":"2017-06-05T17:19:38.248Z"}
{"msg":"right @weeds ...sorry, I meant whatever the criteria was","username":"muralisr","ts":"2017-06-05T17:19:38.248Z"}
{"msg":"my point being if we are going to beta on the heals of  alpha3 (basically  beta-) do we need 2 week gap between alpha3 and beta ?","username":"muralisr","ts":"2017-06-05T17:22:25.687Z"}
{"msg":"I dont have an opinion on whether there should be a mandatory time period, but I do think more frequent releases between now and GA would be a good thing","username":"greg.haskins","ts":"2017-06-05T18:04:53.323Z"}
{"msg":"they should be painless...if they are not, we should fix that...and doing more of them will shake those issues out","username":"greg.haskins","ts":"2017-06-05T18:05:15.695Z"}
{"msg":"that all said, I think another release is overdue if but the fact that I fixed a couple of important things post-alpha2","username":"greg.haskins","ts":"2017-06-05T18:05:45.465Z"}
{"msg":"that all said, I think another release is overdue if but for the fact that I fixed a couple of important things post-alpha2","username":"greg.haskins","ts":"2017-06-05T18:05:45.465Z"}
{"msg":"maintainers, please vote on the remaining 3 items please https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104\nI'd like to have a resolution for them by end of today so we can wrap them up for the beta hopefully this week","username":"binhn","ts":"2017-06-05T18:11:16.697Z"}
{"msg":"BTW: I, too, believe that there are many good reasons for releasing *v1.0.0-alpha3* in the coming days.","username":"JonathanLevi","ts":"2017-06-05T18:19:52.991Z"}
{"msg":"We should (all) really practice more frequent releases... along with an \"axe\" that says: \"No more changes. The new good stuff will get packaged and shipped in the next round.\"","username":"JonathanLevi","ts":"2017-06-05T18:21:06.975Z"}
{"msg":"Without that being interpreted as a \"bad thing\".","username":"JonathanLevi","ts":"2017-06-05T18:21:36.224Z"}
{"msg":"FYI: https://jira.hyperledger.org/browse/FAB-4212","username":"JonathanLevi","ts":"2017-06-05T18:40:12.935Z"}
{"msg":"hey guys with the relabel from beta to alpha3, are there anticipated changes that would affect SDK development?","username":"troyronda","ts":"2017-06-05T18:51:40.649Z"}
{"msg":"i think doing a release is good- I just can't tell is it really alpha3 or is it beta? and why?","username":"weeds","ts":"2017-06-05T19:06:48.320Z"}
{"msg":"this is why my question up above","username":"weeds","ts":"2017-06-05T19:07:56.354Z"}
{"msg":"[There better not be! ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=XJbAvXm83opekMMWv) @troyronda ","username":"mastersingh24","ts":"2017-06-05T19:29:02.216Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=XJbAvXm83opekMMWv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=XJbAvXm83opekMMWv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@troyronda  - the only thing I can think of is https://jira.hyperledger.org/browse/FAB-4136 which would not be a major change as it's better handling of potential issues with the orderer, kafka and channel(s)","username":"mastersingh24","ts":"2017-06-05T19:30:37.789Z"}
{"msg":"can someone merge Arnaud's https://gerrit.hyperledger.org/r/#/c/9469/ for  https://jira.hyperledger.org/browse/FAB-3906","username":"markparz","ts":"2017-06-05T19:52:52.943Z"}
{"msg":"@simsc^^ that's what you want?","username":"markparz","ts":"2017-06-05T19:53:03.399Z"}
{"msg":"sorry should be on fabric-pr-review channel (i gave you wrong channel)","username":"simsc","ts":"2017-06-05T20:14:46.518Z"}
{"msg":"i posted it there on your behalf","username":"simsc","ts":"2017-06-05T20:14:53.298Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=hd2ihxjg5dvTa2eLm) @weeds YES, Absolutely.. NO MORE API/ABI changes after beta","username":"cbf","ts":"2017-06-05T20:42:46.739Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=hd2ihxjg5dvTa2eLm","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=hd2ihxjg5dvTa2eLm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=WXEPYoypMwEYmEFuZ) @weeds assuming we could get the Kafka changes in and there was some progress on the docs/e2e work, I think beta the following week is doable","username":"cbf","ts":"2017-06-05T20:43:35.994Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WXEPYoypMwEYmEFuZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WXEPYoypMwEYmEFuZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=uHLvhPcg23fxpybYv) @weeds the release criteria only stipulate 2 weeks since last RC release for 1.0.0","username":"cbf","ts":"2017-06-05T20:44:20.258Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=uHLvhPcg23fxpybYv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=uHLvhPcg23fxpybYv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=XJbAvXm83opekMMWv) @troyronda I believe, but @jimthematrix needs to verify, that all the SDK changes are accounted for","username":"cbf","ts":"2017-06-05T20:47:44.465Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=XJbAvXm83opekMMWv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=XJbAvXm83opekMMWv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"hence there should be no SDK changes aside from bug fixes and those should not affect the API","username":"cbf","ts":"2017-06-05T20:48:13.078Z"}
{"msg":"Has joined the channel.","username":"joe-alewine","ts":"2017-06-05T20:52:12.779Z","type":"uj"}
{"msg":"@cbf So i saw on Fabric-release we plan to cut a release this week- but in your post you put alpha 3 and beta- can you clarify?","username":"weeds","ts":"2017-06-05T21:13:06.184Z"}
{"msg":"Also are we trying to cut tomorrow or end of week?","username":"weeds","ts":"2017-06-05T21:13:12.416Z"}
{"msg":"i will post this in the other channel also","username":"weeds","ts":"2017-06-05T21:15:19.288Z"}
{"msg":"We will cut a release this week - whether we call it alpha3 or beta TBD","username":"cbf","ts":"2017-06-05T21:50:50.735Z"}
{"msg":"@here have been going back and forth on the topic of \"alpha3\" or \"beta\" this week, and if alpha3 when will we cut beta?","username":"cbf","ts":"2017-06-05T22:50:32.044Z"}
{"msg":"Talking it over with a few folk, including @mastersingh24 and @JonathanLevi and @greg.haskins seems like there is broad consensus we should do frequent releases for the practice","username":"cbf","ts":"2017-06-05T22:51:23.511Z"}
{"msg":"also general concern that we aren't really at beta - we have a couple of \"highest\" defects outstanding and the docs/getting started still not ready","username":"cbf","ts":"2017-06-05T22:52:06.491Z"}
{"msg":"also general concern that we aren't really at beta - we have a couple of \"highest\" defects outstanding and the new docs/getting started still not ready","username":"cbf","ts":"2017-06-05T22:52:06.491Z"}
{"msg":"SO...","username":"cbf","ts":"2017-06-05T22:52:22.004Z"}
{"msg":"I say we cut alpha3 Thursday - with a merge freeze after tomorrow EOB lasting through Wednesday, and push the release on Thursday early, giving ourselves time to address any issues... Gerrit merging can resume after the release is cut","username":"cbf","ts":"2017-06-05T22:53:55.078Z"}
{"msg":"I propose we cut alpha3 Thursday - with a merge freeze after tomorrow EOB lasting through Wednesday, and push the release on Thursday early, giving ourselves time to address any issues... Gerrit merging can resume after the release is cut","username":"cbf","ts":"2017-06-05T22:53:55.078Z"}
{"msg":"then, I propose that we push HARD to prepare for beta NEXT Thursday with the same pattern - merge freeze Tuesday EOB through release (in both cases, excepting emergency patches agreed by 5 or more maintainers)","username":"cbf","ts":"2017-06-05T22:55:17.650Z"}
{"msg":"this means we need the kafka fixes and we need to have a reworked GS and e2e by NEXT TUESDAY","username":"cbf","ts":"2017-06-05T22:55:48.041Z"}
{"msg":"I don't think we have any must-have patches for alpha3 except the release notes and release tasks - though I think that IFF we are going to merge the Kafka test coverage (cough) CR we should do so for alpha3 so we can get some hard core testing on it","username":"cbf","ts":"2017-06-05T22:57:44.064Z"}
{"msg":"@here who's in agreement?","username":"cbf","ts":"2017-06-05T22:57:59.009Z"}
{"msg":"@cbf - works for me","username":"mastersingh24","ts":"2017-06-05T22:59:20.941Z"}
{"msg":"> reworked GS \n?","username":"yacovm","ts":"2017-06-05T23:00:36.604Z"}
{"msg":"@yacovm see @odowdaibm plan in #fabric-documentation ","username":"cbf","ts":"2017-06-05T23:01:17.431Z"}
{"msg":"Has joined the channel.","username":"odowdaibm","ts":"2017-06-05T23:01:17.632Z","type":"uj"}
{"msg":"@cbf are we going to have weekly releases?","username":"C0rWin","ts":"2017-06-05T23:08:29.101Z"}
{"msg":"we will see","username":"cbf","ts":"2017-06-05T23:08:44.255Z"}
{"msg":"we SHOULD be able to do that and maybe without the merge freeze part","username":"cbf","ts":"2017-06-05T23:09:01.269Z"}
{"msg":"do we have indication of successful release?","username":"C0rWin","ts":"2017-06-05T23:09:53.532Z"}
{"msg":"I understand why we'd better to release more frequently, I guess one obvious reason to be able to run it smoothly over time","username":"C0rWin","ts":"2017-06-05T23:11:30.562Z"}
{"msg":"but how we define successful release?","username":"C0rWin","ts":"2017-06-05T23:12:08.599Z"}
{"msg":"one that isn't broken out the gate?","username":"cbf","ts":"2017-06-05T23:19:36.449Z"}
{"msg":"@yacovm hi gimme a ping when you're next online, and we can chat - thx","username":"odowdaibm","ts":"2017-06-06T08:17:05.167Z"}
{"msg":"Has joined the channel.","username":"paapighoda","ts":"2017-06-06T10:30:56.093Z","type":"uj"}
{"msg":"[ GS = getting started  ;)](https://chat.hyperledger.org/channel/fabric-maintainers?msg=SG9cmE9cJkg6Q2jnG) @yacovm ","username":"mastersingh24","ts":"2017-06-06T11:56:04.250Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=SG9cmE9cJkg6Q2jnG","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=SG9cmE9cJkg6Q2jnG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ GS = getting started ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=SG9cmE9cJkg6Q2jnG) @yacovm ","username":"mastersingh24","ts":"2017-06-06T11:56:04.250Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=SG9cmE9cJkg6Q2jnG","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=SG9cmE9cJkg6Q2jnG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Yeah thanks, @odowdaibm already told me in PM","username":"yacovm","ts":"2017-06-06T11:56:29.544Z"}
{"msg":"It also equals \"Gari Singh\" but that project is beyond rework  ;)","username":"mastersingh24","ts":"2017-06-06T11:57:07.450Z"}
{"msg":"hehe","username":"cbf","ts":"2017-06-06T11:57:31.898Z"}
{"msg":"haha","username":"yacovm","ts":"2017-06-06T11:57:34.730Z"}
{"msg":"I've just submitted maintainer nomination for Manish Sethi:\nhttps://gerrit.hyperledger.org/r/#/c/10209/\nManish has been the principal developer of the Fabric ledger in 0.6 and 1.0 releases. Manish consistently performs deep and thorough code reviews and coaches junior members of the community. I think Manish would be a great addition.\n","username":"dave.enyeart","ts":"2017-06-06T12:32:42.738Z"}
{"msg":"I will be out of office for a couple key periods of 1.0 release.  Manish will be a wonderful steward of ledger component.","username":"dave.enyeart","ts":"2017-06-06T12:34:47.032Z"}
{"msg":"@cbf we should work out a process such that we don't have to freeze for days -- could everything be built off the release tag?","username":"binhn","ts":"2017-06-06T13:22:30.535Z"}
{"msg":"@binhn we've been there before and had a huge debate and agreed to defer post 1.0","username":"cbf","ts":"2017-06-06T13:28:31.006Z"}
{"msg":"no one said anything about freeze for days, I asked for a DAY","username":"cbf","ts":"2017-06-06T13:29:05.639Z"}
{"msg":"i don't mean another branch, but would the tag be enough to drive the scripts","username":"binhn","ts":"2017-06-06T13:30:09.365Z"}
{"msg":"that would be a change to CI","username":"cbf","ts":"2017-06-06T13:30:24.092Z"}
{"msg":"no","username":"cbf","ts":"2017-06-06T13:30:24.997Z"}
{"msg":"@nickgaski can u get with @yacovm on getting started I know u already have done a lot there too","username":"markparz","ts":"2017-06-06T13:32:04.580Z"}
{"msg":"what?","username":"yacovm","ts":"2017-06-06T13:32:51.896Z"}
{"msg":"@markparz maybe wrong channel?","username":"cbf","ts":"2017-06-06T13:32:54.953Z"}
{"msg":"I didn't do anything on GS @markparz ","username":"yacovm","ts":"2017-06-06T13:33:02.659Z"}
{"msg":"@yacovm the rework u did or r doing is that for alpha3? @nickgaski is working the component by component bring up for a new network","username":"markparz","ts":"2017-06-06T13:33:23.224Z"}
{"msg":"I am not doing anything of this kind","username":"yacovm","ts":"2017-06-06T13:33:47.699Z"}
{"msg":"I saw GS convo above","username":"markparz","ts":"2017-06-06T13:33:49.054Z"}
{"msg":"you're mistaken","username":"yacovm","ts":"2017-06-06T13:33:49.499Z"}
{"msg":"What is GS... is it Gari Singh?","username":"markparz","ts":"2017-06-06T13:34:17.343Z"}
{"msg":"Lol","username":"markparz","ts":"2017-06-06T13:34:19.460Z"}
{"msg":"Ignore then I got bad info and misread","username":"markparz","ts":"2017-06-06T13:35:07.422Z"}
{"msg":"If u aren't ","username":"markparz","ts":"2017-06-06T13:35:18.934Z"}
{"msg":"No worries","username":"markparz","ts":"2017-06-06T13:35:22.860Z"}
{"msg":"@cbf There is a field in Jira called Security Level with a value like \"Not a security issue\".  We don't seem to be able to edit this field to indicate if a bug is in fact a security issue.  For example https://jira.hyperledger.org/browse/FAB-4252","username":"dave.enyeart","ts":"2017-06-06T13:54:52.195Z"}
{"msg":"can you check on how to edit this field?","username":"dave.enyeart","ts":"2017-06-06T13:55:07.913Z"}
{"msg":"ask @rjones ","username":"cbf","ts":"2017-06-06T13:55:19.454Z"}
{"msg":"I believe it is so that when set, only a select few can see the issue","username":"cbf","ts":"2017-06-06T13:55:44.200Z"}
{"msg":"(well, I am actually positive)","username":"cbf","ts":"2017-06-06T13:55:51.135Z"}
{"msg":"how it is set and by whom I don't know","username":"cbf","ts":"2017-06-06T13:56:00.922Z"}
{"msg":"@mastersingh24 is on the security review team - maybe he can set it, but again, when/if he does, only he and a select few can see the issue","username":"cbf","ts":"2017-06-06T13:56:38.889Z"}
{"msg":"Has joined the channel.","username":"FenglianXu","ts":"2017-06-06T14:12:24.694Z","type":"uj"}
{"msg":"only 1 item left on the voting board https://jira.hyperledger.org/browse/FAB-4357 that needs 1 more vote","username":"binhn","ts":"2017-06-06T15:36:35.634Z"}
{"msg":"@dave.enyeart is 4252 a security issue? do you need to watch it?","username":"rjones","ts":"2017-06-06T18:13:42.553Z"}
{"msg":"I don't need to watch 4252, it does not require extra attention.  But it is a security related defect, and therefore we wanted to understand how to change it away from \"Not a security issue\"","username":"dave.enyeart","ts":"2017-06-06T18:29:42.903Z"}
{"msg":"@rjones  I don't need to watch 4252, it does not require extra attention.  But it is a security related defect, and therefore we wanted to understand how to change it away from \"Not a security issue\"","username":"dave.enyeart","ts":"2017-06-06T18:29:42.903Z"}
{"msg":"@dave.enyeart the person that filed it could have set that","username":"rjones","ts":"2017-06-06T18:35:12.235Z"}
{"msg":"ok, i'll ask them to update it.  for future reference, who else can update it (if the submitter does not respond)?","username":"dave.enyeart","ts":"2017-06-06T18:35:57.987Z"}
{"msg":"I think cbf and our security maven have edit permissions, I would need to look","username":"rjones","ts":"2017-06-06T18:36:35.653Z"}
{"msg":"no rush, just wanted to make sure we understood operating procedures as we enter critical 1.0 release period","username":"dave.enyeart","ts":"2017-06-06T18:37:19.163Z"}
{"msg":"i suspect security related bugs will require special attention during shutdown phase and in release notes","username":"dave.enyeart","ts":"2017-06-06T18:38:06.120Z"}
{"msg":"Hi @cbf  What is the status of Java SDK in regard to things like voting ?  It has it's own set of maintainers like GO and python SDKs so for  any voting on features changes that should be the maintainers ?  I've never voted in any Fabric  Node SDKs seeing I'm not a maintainer in those projects. ","username":"rickr","ts":"2017-06-06T19:30:22.891Z"}
{"msg":"@rickr, please don't write in this channel.","username":"JonathanLevi","ts":"2017-06-06T19:33:15.185Z"}
{"msg":"Hi @cbf  What are the rules for voting ?  I'm not a maintainer of the Fabric or Node SDK so never voted on issues there. Similarly like GO or Python SDK  I think the maintainers of those project should do the voting on issues concerning their projects  like what feature and changes should still go in.  ","username":"rickr","ts":"2017-06-06T19:42:32.654Z"}
{"msg":"BTW: Can we please this maintainers channel, as intended?","username":"JonathanLevi","ts":"2017-06-06T19:46:24.110Z"}
{"msg":"BTW: Can we please use this maintainers channel, as it is intended?","username":"JonathanLevi","ts":"2017-06-06T19:46:24.110Z"}
{"msg":"You can use the release channel, the fabric channel, or write to Chris directly.","username":"JonathanLevi","ts":"2017-06-06T19:46:36.890Z"}
{"msg":"@rickr ","username":"JonathanLevi","ts":"2017-06-06T19:46:46.386Z"}
{"msg":"@rickr, it's not the first time this is being asked.","username":"JonathanLevi","ts":"2017-06-06T19:46:46.386Z"}
{"msg":"But to answer your question: yes, the project is managed and maintained by the maintainers.","username":"JonathanLevi","ts":"2017-06-06T19:47:51.235Z"}
{"msg":"I guess that answer my questions .. Not allowed here :)","username":"rickr","ts":"2017-06-06T19:48:10.160Z"}
{"msg":"Everyone can chime in, e.g., on JIRA tickets, the (other, ahem ;-) channels","username":"JonathanLevi","ts":"2017-06-06T19:48:16.491Z"}
{"msg":"Everyone can chime in, e.g., on JIRA tickets, the (other, ahem ;-) ) channels","username":"JonathanLevi","ts":"2017-06-06T19:48:16.491Z"}
{"msg":"But at the end of the day, yes, that's correct. The project is governed by elected set of maintainers.","username":"JonathanLevi","ts":"2017-06-06T19:48:37.828Z"}
{"msg":"I don't know if people missed that, there are many cases where even the maintainers do not all agree unequivocally... in these cases we simply vote.  ","username":"JonathanLevi","ts":"2017-06-06T19:50:18.053Z"}
{"msg":"thx you've answered my question .. I apologize for the spam :flushed: ","username":"rickr","ts":"2017-06-06T19:50:21.190Z"}
{"msg":"No problem. This is not spam, it's just a \"maintainer's channel\" as advertised above. ","username":"JonathanLevi","ts":"2017-06-06T19:50:57.954Z"}
{"msg":"No problem. This is not spam, it's just that *this is the only* \"maintainer's channel\" as advertised above. ","username":"JonathanLevi","ts":"2017-06-06T19:50:57.954Z"}
{"msg":"We do have that \"governance model\" advertised in several places - on the wiki, etc.","username":"JonathanLevi","ts":"2017-06-06T19:51:31.881Z"}
{"msg":"Trying to keep this channel more of an open channel for others to read...","username":"JonathanLevi","ts":"2017-06-06T19:52:12.830Z"}
{"msg":"@here ok, so where are we? do we release a beta or alpha3 - I think that the argument that beta demonstrates progress makes some sense ","username":"cbf","ts":"2017-06-06T20:46:27.023Z"}
{"msg":"I think we still in alpha stage","username":"C0rWin","ts":"2017-06-06T20:46:56.981Z"}
{"msg":"So I've vote for alpha3 rather than beta, while IMO naming is no so important as delivered content","username":"C0rWin","ts":"2017-06-06T20:47:41.520Z"}
{"msg":"So I'd vote for alpha3 rather than beta, while IMO naming is no so important as delivered content","username":"C0rWin","ts":"2017-06-06T20:47:41.520Z"}
{"msg":"My vote is for \"beta\" because I honestly think we need to demonstrate progress and we need to be serious about moving on to release candidates and not allow further churn","username":"mastersingh24","ts":"2017-06-06T21:00:58.826Z"}
{"msg":"I know we are behind on a few things for a proper beta, but I don't think we need an alpha3","username":"mastersingh24","ts":"2017-06-06T21:01:19.500Z"}
{"msg":"I have a gut feeling, that we don't really know at what stage we are at this point.\nEvery day, new bugs are discovered.\nCan't we delay the decision for a few days?","username":"yacovm","ts":"2017-06-06T21:12:23.602Z"}
{"msg":"> My vote is for \"beta\" because I honestly think we need to demonstrate progress\nLet's say we release beta. \nHow do we show progress? What is the proof of progress?\n\nBTW - Do we have a full guide on how to deploy and customize fabric from scratch? (I honestly don't know)\nNot a guide that says: \"copy paste these commands and this would run a script that does something\"\nI mean a full, descriptive guide that after reading it, one can setup an environment on his/her own. ","username":"yacovm","ts":"2017-06-06T21:15:22.534Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=EcadLkmEfRpsmN3uS) @yacovm I would expect something shaped like a gate or a bug bar that dictates project status (alpha, beta, etc).","username":"rjones","ts":"2017-06-06T21:16:51.059Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EcadLkmEfRpsmN3uS","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EcadLkmEfRpsmN3uS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@here we can defer the decision on what we call it until tomorrow afternoon - I tend to think that at this point, calling it beta would be fine --- I have been thinking about this a lot","username":"cbf","ts":"2017-06-06T21:18:04.343Z"}
{"msg":"if we have major issues, we do another beta","username":"cbf","ts":"2017-06-06T21:18:13.897Z"}
{"msg":"we have done a good job driving down the defect count","username":"cbf","ts":"2017-06-06T21:18:30.930Z"}
{"msg":"though they are still coming in","username":"cbf","ts":"2017-06-06T21:18:37.039Z"}
{"msg":"but maybe beta will draw more people to try the current rev","username":"cbf","ts":"2017-06-06T21:18:51.160Z"}
{"msg":"wikipedia says : Beta phase generally begins when the software is feature complete but likely to contain a number of known or unknown bugs.","username":"dave.enyeart","ts":"2017-06-06T21:19:03.906Z"}
{"msg":"so i would agree with label beta","username":"dave.enyeart","ts":"2017-06-06T21:19:09.705Z"}
{"msg":"yes, and trust me, we ARE feature complete people","username":"cbf","ts":"2017-06-06T21:19:36.039Z"}
{"msg":"even if we aren't (wink wink)","username":"cbf","ts":"2017-06-06T21:19:46.719Z"}
{"msg":"so, we have @mastersingh24 @dave.enyeart @JonathanLevi @cbf for beta","username":"cbf","ts":"2017-06-06T21:21:14.300Z"}
{"msg":"@C0rWin alpha3, @yacovm on the fence","username":"cbf","ts":"2017-06-06T21:21:35.874Z"}
{"msg":"Actually I do not mind how we call it","username":"C0rWin","ts":"2017-06-06T21:22:03.633Z"}
{"msg":"Yep, exactly. I'm good both ways, just concerned that we have something, somewhere that we don't know about and we will release beta and then \"uh oh\".","username":"yacovm","ts":"2017-06-06T21:22:18.980Z"}
{"msg":"@muralisr @jyellick @kostas @binhn ?","username":"cbf","ts":"2017-06-06T21:22:31.395Z"}
{"msg":"I'm for moving into rapid and painless releases and decent content ","username":"C0rWin","ts":"2017-06-06T21:22:36.223Z"}
{"msg":"indeed me too","username":"cbf","ts":"2017-06-06T21:22:43.186Z"}
{"msg":"beta - as long as we are rolling fixes and tests","username":"muralisr","ts":"2017-06-06T21:23:23.076Z"}
{"msg":"Good both ways. Beta doesn't seem too far fetched.","username":"kostas","ts":"2017-06-06T21:23:30.986Z"}
{"msg":"@greg.haskins ?","username":"cbf","ts":"2017-06-06T21:23:32.355Z"}
{"msg":"im fine with whatever you guys decide","username":"greg.haskins","ts":"2017-06-06T21:24:13.264Z"}
{"msg":"i just want a new tag to reference","username":"greg.haskins","ts":"2017-06-06T21:24:24.133Z"}
{"msg":";-)","username":"cbf","ts":"2017-06-06T21:24:28.600Z"}
{"msg":"@jimthematrix ?","username":"cbf","ts":"2017-06-06T21:25:18.334Z"}
{"msg":"@smithbk ?","username":"cbf","ts":"2017-06-06T21:25:35.437Z"}
{"msg":"is that possible to define groups in rocket chat like in slack?","username":"C0rWin","ts":"2017-06-06T21:26:04.957Z"}
{"msg":"I really wish there was aliasing eg @maintainers","username":"cbf","ts":"2017-06-06T21:26:11.916Z"}
{"msg":"hi Chris","username":"jimthematrix","ts":"2017-06-06T21:26:24.369Z"}
{"msg":"so to say reference with @maintainers and everyone in the list will got notified?","username":"C0rWin","ts":"2017-06-06T21:26:26.389Z"}
{"msg":"need me to vote on something?","username":"jimthematrix","ts":"2017-06-06T21:26:34.574Z"}
{"msg":"alpha3 or beta?","username":"cbf","ts":"2017-06-06T21:26:43.849Z"}
{"msg":"oh i think beta to get it over with","username":"jimthematrix","ts":"2017-06-06T21:27:22.311Z"}
{"msg":"heh","username":"cbf","ts":"2017-06-06T21:27:29.663Z"}
{"msg":"we can also do beta2, beta3 if needed right?","username":"jimthematrix","ts":"2017-06-06T21:27:32.281Z"}
{"msg":"yep","username":"cbf","ts":"2017-06-06T21:27:37.187Z"}
{"msg":"i think it sends the right signal to the community","username":"jimthematrix","ts":"2017-06-06T21:28:09.217Z"}
{"msg":"have been hearing ppl anxiously waiting for a beta and jump in","username":"jimthematrix","ts":"2017-06-06T21:28:31.928Z"}
{"msg":"it'd be good for collecting better feedback if more ppl are jumping in","username":"jimthematrix","ts":"2017-06-06T21:28:54.930Z"}
{"msg":"ok, sounds like a plan","username":"cbf","ts":"2017-06-06T21:29:09.864Z"}
{"msg":"yep, beta says \"we are feature complete, please provide feedback\"","username":"dave.enyeart","ts":"2017-06-06T21:29:10.861Z"}
{"msg":"right","username":"jimthematrix","ts":"2017-06-06T21:29:41.044Z"}
{"msg":"I will need to rejigger my release notes.... @jimthematrix @smithbk @binhn please review the prose in my open CRs for alpha3 ... I'll submit new patchsets changing the name ","username":"cbf","ts":"2017-06-06T21:31:16.657Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10153/","username":"cbf","ts":"2017-06-06T21:31:44.292Z"}
{"msg":"will do","username":"jimthematrix","ts":"2017-06-06T21:31:56.379Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10157/","username":"cbf","ts":"2017-06-06T21:31:58.672Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10159/","username":"cbf","ts":"2017-06-06T21:32:02.451Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10161/","username":"cbf","ts":"2017-06-06T21:32:06.540Z"}
{"msg":"we need ppl testing and reviewing the docs etc tomorrow","username":"cbf","ts":"2017-06-06T21:32:32.816Z"}
{"msg":"that needs to be our focus","username":"cbf","ts":"2017-06-06T21:32:38.295Z"}
{"msg":"is there any code freeze involved now?","username":"C0rWin","ts":"2017-06-06T21:45:06.822Z"}
{"msg":"should we have more restrictive policies to have CRs in?","username":"C0rWin","ts":"2017-06-06T21:45:57.046Z"}
{"msg":"I thought we are continuing with the 3-types- strategy? ","username":"yacovm","ts":"2017-06-06T21:52:23.911Z"}
{"msg":"beta seems OK to me, given there may be multiple","username":"smithbk","ts":"2017-06-06T21:53:04.846Z"}
{"msg":"@smithbk is fabric-ca feature complete ? ","username":"yacovm","ts":"2017-06-06T21:54:22.898Z"}
{"msg":"I saw a very large amount of change sets there","username":"yacovm","ts":"2017-06-06T21:54:34.857Z"}
{"msg":"The churn seemed higher than fabric lately","username":"yacovm","ts":"2017-06-06T21:54:50.246Z"}
{"msg":"yes, it is feature complete","username":"smithbk","ts":"2017-06-06T21:55:20.001Z"}
{"msg":"all have been for bugs ","username":"smithbk","ts":"2017-06-06T21:56:23.434Z"}
{"msg":"@cbf small question: does the change to calling the release beta means FAB-4212 is renamed and so is FAB-4379 or do you close the former and switch to the latter?","username":"lehors","ts":"2017-06-06T22:05:18.323Z"}
{"msg":"either way some update needs to be made","username":"lehors","ts":"2017-06-06T22:05:29.723Z"}
{"msg":"yes, will be renaming that for rc1 or whatever comes next","username":"cbf","ts":"2017-06-06T22:05:41.222Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-4379 beta task updated","username":"cbf","ts":"2017-06-07T00:17:22.534Z"}
{"msg":"FAB-4212 closed","username":"cbf","ts":"2017-06-07T00:17:34.423Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10247","username":"JonathanLevi","ts":"2017-06-07T04:42:15.707Z"}
{"msg":"There is an update here to the CONTRIBUTING.rst - please can we all take a look.","username":"JonathanLevi","ts":"2017-06-07T04:42:46.787Z"}
{"msg":"(Do not want to make a big \"scene\"... but just let us know if there's an issue there, please)","username":"JonathanLevi","ts":"2017-06-07T04:43:08.610Z"}
{"msg":"hi all, during my coding of the chaincode, i found that the implementation of range query is quite not convenient for using, as the range query could not set a limitation for the return set, neither could get the return set in ascending or descending order. For most of time, we have no idea how many instance exist between the start key to end key for the range query, (e.g. if the key structure like \"user id+user transaction id\", and we need to get all user transactions, currently we could use range query start from \"user id\" to \"user id + ZZZ\", but what if the user have ten thousand of transactions? It's bad to return such a large value at one time, unless we add a counter inside the key like \"user id + counter + transaction id\", so we could get thirty transaction by query start from \"userA-00-\" to \"userA-30-\", but this is awful if we need to do that in application level!)","username":"kelvinzhong","ts":"2017-06-07T06:55:31.227Z"}
{"msg":"[ I moved this to the #fabric-ledger channel](https://chat.hyperledger.org/channel/fabric-maintainers?msg=5uYXJBKmgg75TiqSm) @kelvinzhong ","username":"mastersingh24","ts":"2017-06-07T08:45:53.043Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=5uYXJBKmgg75TiqSm","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=5uYXJBKmgg75TiqSm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@mastersingh24 many thanks~","username":"kelvinzhong","ts":"2017-06-07T08:46:33.337Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=NMtBMJeJumw8JqLmj) @JonathanLevi just moved a file to make the structure flatter - I went in to change the GS per the JIRA but there was a lot of placeholder content that just cluttered things and then there was also a lot of obsolete content ","username":"cbf","ts":"2017-06-07T09:23:51.615Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=NMtBMJeJumw8JqLmj","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=NMtBMJeJumw8JqLmj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi all. \nI think that https://gerrit.hyperledger.org/r/#/c/9087/ needs a review-needed label, what do you think?","username":"yacovm","ts":"2017-06-07T09:24:16.537Z"}
{"msg":"review-needed for mainline code... this is an example ... it needs review and careful scrutiny but not much risk to the code base","username":"cbf","ts":"2017-06-07T09:26:34.938Z"}
{"msg":"but it changes e2e @cbf ","username":"yacovm","ts":"2017-06-07T09:31:55.815Z"}
{"msg":"and we use e2e for everything","username":"yacovm","ts":"2017-06-07T09:32:01.468Z"}
{"msg":"starting from CI to QA ","username":"yacovm","ts":"2017-06-07T09:32:06.534Z"}
{"msg":"in CI it is in a different folder","username":"cbf","ts":"2017-06-07T09:32:21.033Z"}
{"msg":"so it won't be eventually copied there?","username":"yacovm","ts":"2017-06-07T09:32:48.800Z"}
{"msg":"that I don't know","username":"cbf","ts":"2017-06-07T09:32:58.401Z"}
{"msg":"all right then","username":"yacovm","ts":"2017-06-07T09:33:14.090Z"}
{"msg":"but that said, we are in merge lockdown ... i was just about to send a note ","username":"cbf","ts":"2017-06-07T09:33:36.295Z"}
{"msg":"think that there's the build failure to resolve and then the items for the release only","username":"cbf","ts":"2017-06-07T09:33:53.200Z"}
{"msg":"since when we are in a merge lockdown?","username":"yacovm","ts":"2017-06-07T09:35:01.289Z"}
{"msg":"and how can we be in a merge lockdown? We're supposed to bring the bug count in our components to 0","username":"yacovm","ts":"2017-06-07T09:35:14.270Z"}
{"msg":"[ I gave it a -2 - been meaning to do that.  It does not belong in the e2e - especially the one we use for our \"sample\" ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=pZYi9h4fFnP5gJA5d) @yacovm ","username":"mastersingh24","ts":"2017-06-07T09:43:35.084Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=pZYi9h4fFnP5gJA5d","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=pZYi9h4fFnP5gJA5d","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ I gave it a -2 - been meaning to do that.  It does not belong in the e2e - especially the one we use for our sample ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=pZYi9h4fFnP5gJA5d) @yacovm ","username":"mastersingh24","ts":"2017-06-07T09:43:35.084Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=pZYi9h4fFnP5gJA5d","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=pZYi9h4fFnP5gJA5d","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@yacovm  - we are trying to put out a release.  holding off merges for a bit should not hurt anything.  of course you can still fix bugs - they just won't be merged until we cut a release tag  ;)","username":"mastersingh24","ts":"2017-06-07T09:45:58.395Z"}
{"msg":"(as you know)","username":"mastersingh24","ts":"2017-06-07T09:46:06.005Z"}
{"msg":"@yacov just for the day to settle CI and prepare for the beta","username":"cbf","ts":"2017-06-07T09:50:57.447Z"}
{"msg":"yeah I'm ok with that. we have no more interesting/critical bugs anyway","username":"yacovm","ts":"2017-06-07T09:51:02.601Z"}
{"msg":"But what about the kafka issue?","username":"yacovm","ts":"2017-06-07T09:51:17.846Z"}
{"msg":"first things first, fix CI","username":"cbf","ts":"2017-06-07T09:51:30.498Z"}
{"msg":"sigh","username":"cbf","ts":"2017-06-07T09:51:31.964Z"}
{"msg":"@yacovm  - by Kafka, you mean this one:   https://jira.hyperledger.org/browse/FAB-4136","username":"mastersingh24","ts":"2017-06-07T09:59:30.290Z"}
{"msg":"This + the one with the 503 and failing over to another OSN when OSN is having problems","username":"yacovm","ts":"2017-06-07T10:00:14.868Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-4155","username":"mastersingh24","ts":"2017-06-07T10:00:30.010Z"}
{"msg":"On 2nd thought, it's just HA, I guess we can do a beta without it","username":"yacovm","ts":"2017-06-07T10:00:51.978Z"}
{"msg":"Indeed and most people are using Solo anyway (which should be the case since people are still in development mode anyway)","username":"mastersingh24","ts":"2017-06-07T10:01:29.593Z"}
{"msg":"@yacovm is this https://jira.hyperledger.org/browse/FAB-4155?jql=reporter%20=%20ptippett%20 a second one you referred? ","username":"C0rWin","ts":"2017-06-07T10:01:53.057Z"}
{"msg":"yeah","username":"yacovm","ts":"2017-06-07T10:02:07.243Z"}
{"msg":"@cbf - do we want this one in if it passes CI - https://gerrit.hyperledger.org/r/#/c/10239/  (the final piece in all tools being able to print version info)","username":"mastersingh24","ts":"2017-06-07T10:29:27.264Z"}
{"msg":"I've verified it locally already","username":"mastersingh24","ts":"2017-06-07T10:30:18.472Z"}
{"msg":"possibly, yes will need to get @JonathanLevi buyin","username":"cbf","ts":"2017-06-07T10:36:24.857Z"}
{"msg":"Regarding https://gerrit.hyperledger.org/r/#/c/10239 - I'm in.","username":"JonathanLevi","ts":"2017-06-07T13:14:43.344Z"}
{"msg":"+1","username":"cbf","ts":"2017-06-07T14:29:56.172Z"}
{"msg":"It looks like Manish has the required maintainer votes: https://gerrit.hyperledger.org/r/#/c/10209/ @cbf @rjones can we merge and flip the switch (assuming it doesn't interfere with other release activities that is)","username":"dave.enyeart","ts":"2017-06-07T15:02:15.869Z"}
{"msg":"Congrats @manish-sethi ","username":"weeds","ts":"2017-06-07T15:02:49.224Z"}
{"msg":"Has joined the channel.","username":"manish-sethi","ts":"2017-06-07T15:02:49.465Z","type":"uj"}
{"msg":"Thanks @weeds ","username":"manish-sethi","ts":"2017-06-07T15:03:47.632Z"}
{"msg":"Bugs reported against `configtxgen` and `configtxlator` are usually being filed against the `fabric-orderer` component.  I was thinking that these should really be being filed against `fabric-tools`, does anyone object to this?","username":"jyellick","ts":"2017-06-07T15:22:55.818Z"}
{"msg":"i think that makes sense Jason","username":"jimthematrix","ts":"2017-06-07T15:31:19.622Z"}
{"msg":"congrats @manish-sethi ","username":"jimthematrix","ts":"2017-06-07T15:43:07.603Z"}
{"msg":"Thanks @jimthematrix ","username":"manish-sethi","ts":"2017-06-07T15:47:15.455Z"}
{"msg":"@dave.enyeart once it's merged I'll edit the LDAP group","username":"rjones","ts":"2017-06-07T15:59:18.925Z"}
{"msg":"could I get one more +2 and a merge for this trivial bookkeeping change? https://gerrit.hyperledger.org/r/#/c/10293","username":"rjones","ts":"2017-06-07T20:23:59.470Z"}
{"msg":"@JonathanLevi ^ ","username":"yacovm","ts":"2017-06-07T20:26:03.583Z"}
{"msg":"thank you @manish-sethi  :)","username":"rjones","ts":"2017-06-07T20:27:18.446Z"}
{"msg":"Yes, done. @manish-sethi - welcome to the jungle ;-)","username":"JonathanLevi","ts":"2017-06-07T20:27:34.447Z"}
{"msg":"Thanks @rjones and @JonathanLevi ","username":"manish-sethi","ts":"2017-06-07T20:32:15.615Z"}
{"msg":"Has left the channel.","username":"silliman","ts":"2017-06-08T14:56:38.148Z","type":"ul"}
{"msg":"Why are there Improvements in 'review-needed'? There are no more code changes that aren't a) bug fixes or b) new tests and review-needed tag is for evaluating those that modify production code","username":"cbf","ts":"2017-06-08T23:11:31.929Z"}
{"msg":"There are ONLY to be \"Improvements\" to documentation and tests - we agreed to this","username":"cbf","ts":"2017-06-08T23:12:41.199Z"}
{"msg":"so why are there all of a sudden 3 improvements in review-needed???","username":"cbf","ts":"2017-06-08T23:12:59.428Z"}
{"msg":"@here ^^","username":"cbf","ts":"2017-06-08T23:13:04.721Z"}
{"msg":"http://hyperledger-fabric.readthedocs.io/en/latest/","username":"kelvinzhong","ts":"2017-06-09T02:19:54.447Z"}
{"msg":"seems the read the docs is broken","username":"kelvinzhong","ts":"2017-06-09T02:20:04.395Z"}
{"msg":"Agree- we need to be extremely careful ","username":"weeds","ts":"2017-06-09T07:39:48.612Z"}
{"msg":"@here merging may be resumed","username":"cbf","ts":"2017-06-09T10:20:15.925Z"}
{"msg":"Thanks Chris and Jonathan for leading the release effort- lots of hard work got put in,.. and appreciate it!","username":"weeds","ts":"2017-06-09T11:20:42.908Z"}
{"msg":"","username":"greg.haskins","ts":"2017-06-09T13:09:25.344Z","attachments":[{"title":"File Uploaded: Screen Shot 2017-06-09 at 9.08.38 AM.png","title_link":"/file-upload/X2LSBPEwDRtczMnHv/Screen Shot 2017-06-09 at 9.08.38 AM.png","image_url":"/file-upload/X2LSBPEwDRtczMnHv/Screen Shot 2017-06-09 at 9.08.38 AM.png","image_type":"image/png","image_size":133334,"url":"/file-upload/X2LSBPEwDRtczMnHv/Screen Shot 2017-06-09 at 9.08.38 AM.png","remote":false,"fileId":"X2LSBPEwDRtczMnHv","fileName":"Screen Shot 2017-06-09 at 9.08.38 AM.png"}]}
{"msg":"Im struggling to figure out how to quantify what those vulneabilities are, but they seem to originate in the base image (https://hub.docker.com/r/hyperledger/fabric-baseos/tags/) so I am guessing its an upstream ubuntu/debian issue","username":"greg.haskins","ts":"2017-06-09T13:11:12.239Z"}
{"msg":"@tkuhrt ^^^","username":"greg.haskins","ts":"2017-06-09T13:11:43.591Z"}
{"msg":"I can try rebuilding+updating baseos and pushing it to my local namespace and see if those errors go away","username":"greg.haskins","ts":"2017-06-09T13:12:32.001Z"}
{"msg":"if I had to guess, I would guess that whatever they are are not likely to actually impact us though","username":"greg.haskins","ts":"2017-06-09T13:13:13.925Z"}
{"msg":"(e.g. if base ubuntu had a known CVE in sshd, but we dont run it, does it matter?","username":"greg.haskins","ts":"2017-06-09T13:13:49.487Z"}
{"msg":"@greg.haskins : I cannot see the scan results as a non-logged in user. I will need to get @rjones to add my account (once I create one) on docker to have access to what you are seeing. Does the interface tell you more about the vulnerabilities?","username":"tkuhrt","ts":"2017-06-09T13:31:31.697Z"}
{"msg":"@tkuhrt the interface is not very forthcoming about specifics","username":"greg.haskins","ts":"2017-06-09T15:04:57.448Z"}
{"msg":"nothing is clickable, so I have no idea what its upset about..perhaps I lack sufficient permission","username":"greg.haskins","ts":"2017-06-09T15:05:14.090Z"}
{"msg":"im guessing that minimally I probably need an \"apt-get upgrade\" cycle to pull in the latest...which we should probably do (at least when IS_RELEASE=true)","username":"greg.haskins","ts":"2017-06-09T15:06:24.128Z"}
{"msg":"@cbf does this sound reasonable to you (add a os-update cycle to the build when its a release build)","username":"greg.haskins","ts":"2017-06-09T15:07:05.877Z"}
{"msg":"@greg.haskins - is this about the docker scans?","username":"mastersingh24","ts":"2017-06-09T15:34:23.342Z"}
{"msg":"You can see the details","username":"mastersingh24","ts":"2017-06-09T15:34:28.272Z"}
{"msg":"@mastersingh24 yes, and how?","username":"greg.haskins","ts":"2017-06-09T15:34:39.051Z"}
{"msg":"but they are all from the ubuntu:xenial ","username":"mastersingh24","ts":"2017-06-09T15:34:41.335Z"}
{"msg":"yeah, i figured that","username":"greg.haskins","ts":"2017-06-09T15:34:51.059Z"}
{"msg":"oh - I wonder if you do not have access","username":"mastersingh24","ts":"2017-06-09T15:34:56.605Z"}
{"msg":"but basically looking at ubuntu:xenial will answer the question","username":"mastersingh24","ts":"2017-06-09T15:35:07.951Z"}
{"msg":"I compared them","username":"mastersingh24","ts":"2017-06-09T15:35:11.391Z"}
{"msg":";)","username":"mastersingh24","ts":"2017-06-09T15:35:12.950Z"}
{"msg":"BUT, I do wonder if its \"its xenials problem, nothing we can do\", or \"its xenials problem, but apt-get upgrade fixes it\"","username":"greg.haskins","ts":"2017-06-09T15:35:27.894Z"}
{"msg":"because the latter is our problem","username":"greg.haskins","ts":"2017-06-09T15:35:35.727Z"}
{"msg":"there are some things which are definitely xenial issues","username":"mastersingh24","ts":"2017-06-09T15:35:59.549Z"}
{"msg":"and apt-upgrade does not fix them","username":"mastersingh24","ts":"2017-06-09T15:36:05.303Z"}
{"msg":"at least not yet","username":"mastersingh24","ts":"2017-06-09T15:36:12.382Z"}
{"msg":"ok, thats my primary concern","username":"greg.haskins","ts":"2017-06-09T15:36:15.092Z"}
{"msg":"(not that i am cavalier about CVEs...its just CVEs that are related to fabric processes would be actionable","username":"greg.haskins","ts":"2017-06-09T15:36:48.653Z"}
{"msg":"I honestly don't see the issue really - most of the issues are not applicable","username":"mastersingh24","ts":"2017-06-09T15:36:53.758Z"}
{"msg":"ok","username":"greg.haskins","ts":"2017-06-09T15:37:04.210Z"}
{"msg":"i was just something I saw today that I never noticed before, so figured escalation was the appropriate response","username":"greg.haskins","ts":"2017-06-09T15:37:26.758Z"}
{"msg":"if we really want to avoid any scan issues, we need to move to Alpine","username":"mastersingh24","ts":"2017-06-09T15:37:34.063Z"}
{"msg":"im all for that, if it werent for P/Z ;)","username":"greg.haskins","ts":"2017-06-09T15:37:52.434Z"}
{"msg":"I found images for P and Z, but we could also have different images anyway if we wanted?","username":"mastersingh24","ts":"2017-06-09T15:38:36.456Z"}
{"msg":"I've built Alpine images already","username":"mastersingh24","ts":"2017-06-09T15:38:56.561Z"}
{"msg":"Exactly - golang is a binary, so the peer/orderer doesn't really need anything other than the binary itself","username":"yacovm","ts":"2017-06-09T15:39:00.996Z"}
{"msg":"Exactly - golang products are a binary, so the peer/orderer doesn't really need anything other than the binary itself","username":"yacovm","ts":"2017-06-09T15:39:00.996Z"}
{"msg":"I like them ;)","username":"mastersingh24","ts":"2017-06-09T15:39:01.127Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-3831 This has 4 votes, and is a \"High\" priority defect, if anyone else would care to take a look","username":"jyellick","ts":"2017-06-09T16:03:19.806Z"}
{"msg":"I just don't understand why all the sub tasks are related to this @jyellick ","username":"yacovm","ts":"2017-06-09T16:10:13.498Z"}
{"msg":"`Fix cauthdsl potential nil pointer dereference` is a bug","username":"yacovm","ts":"2017-06-09T16:10:25.015Z"}
{"msg":"`Fix configtx manager potential nil dereference` also","username":"yacovm","ts":"2017-06-09T16:10:34.027Z"}
{"msg":"Yes, that could be elevated to bug","username":"jyellick","ts":"2017-06-09T16:10:34.455Z"}
{"msg":"No, I mean - why are they sub-tasks? Can you please describe in 1-2 sentences how (where) is the fix? I guess it's in the common/configtx no?","username":"yacovm","ts":"2017-06-09T16:11:18.477Z"}
{"msg":"and not in the configtxlator tool","username":"yacovm","ts":"2017-06-09T16:11:27.169Z"}
{"msg":"They are only subtasks because i happened to discover them via tests in `configtxlator`.  They are bugs.  I made them sub-tasks, because they are prereqs for the later subtasks","username":"jyellick","ts":"2017-06-09T16:12:32.348Z"}
{"msg":"But we can switch them from sub-task to bug, as they are independent of 3831, beyond being a blocker for it","username":"jyellick","ts":"2017-06-09T16:12:59.858Z"}
{"msg":"> Can you please describe in 1-2 sentences how (where) is the fix? I guess it's in the common/configtx no?\n\nI'm not sure what you mean, the CR is there, you can see the check and a test","username":"jyellick","ts":"2017-06-09T16:13:51.356Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10341/?","username":"yacovm","ts":"2017-06-09T16:14:51.442Z"}
{"msg":"Yes, those tests revealed those two bugs you mentioned.  So, I created separate issues for them, in case 10341 is not merged.","username":"jyellick","ts":"2017-06-09T16:16:00.644Z"}
{"msg":"well what I don't understand is - why is the sanity check in configtxlator and not in common/configtx ?","username":"yacovm","ts":"2017-06-09T16:16:32.245Z"}
{"msg":"Ah.  Because something can look 'not sane', but still be permissible.  Also, because modifying complex core production code this close to release is a bad idea, so pushing it into a tool is safer.","username":"jyellick","ts":"2017-06-09T16:18:05.809Z"}
{"msg":"yeah that's correct","username":"yacovm","ts":"2017-06-09T16:18:43.293Z"}
{"msg":"If you read the discussion in the issue, you will see the change was originally proposed for the core configtx stuff, but I pushed back because it is a complicated change in core code which is probably not appropriate for v1.  The tool option was a compromise","username":"jyellick","ts":"2017-06-09T16:18:45.719Z"}
{"msg":"ok, you got my vote","username":"yacovm","ts":"2017-06-09T16:19:40.835Z"}
{"msg":"@greg.haskins @mastersingh24 : Trying to find out more about the security vulnerabilities...I found this on the Docker Hub documentation: \"If the vulnerability is in a base layer you might not be able to correct the issue in the image. In this case, you might switch to a different version of the base layer, or you might find an equivalent, less vulnerable base layer. You might also decide that the vulnerability or exposure is acceptable.\"  It looks like you are deciding that the vulnerability or exposure is acceptable. Is that correct?  We probably want to make sure that @dhuseby takes a look at this when he gets back from vacation. ","username":"tkuhrt","ts":"2017-06-09T16:33:15.942Z"}
{"msg":"Now when we have beta - should we have an \"affected version - beta\" in JIRA?","username":"yacovm","ts":"2017-06-09T16:37:00.776Z"}
{"msg":"@tkuhrt  - Agreed - @dhuseby should take a look and worth a conversation at that point.  I don't see this as an exposure with how our images work and what is exposed.","username":"mastersingh24","ts":"2017-06-09T16:37:08.188Z"}
{"msg":"@tkuhrt  - Agreed - @dhuseby should take a look and worth a conversation at that point.  I don't see this as an exposure with how our images work and what is exposed.  In general, there are any images out there based on ubuntu:xenial and there are several debates about the scans.","username":"mastersingh24","ts":"2017-06-09T16:37:08.188Z"}
{"msg":"@yacovm  - correct","username":"mastersingh24","ts":"2017-06-09T16:37:16.223Z"}
{"msg":"We have v1.0.0-beta which would be the Affects Version and we have v1.0.0-rc1 and v1.0.0 for fix version","username":"mastersingh24","ts":"2017-06-09T16:37:57.269Z"}
{"msg":"@tkuhrt fwiw, I suspect most things in that image that might trip up a scan probably have 0 real world imact because of how we run the container","username":"greg.haskins","ts":"2017-06-09T17:37:25.601Z"}
{"msg":"not saying we shouldnt check/understand, either","username":"greg.haskins","ts":"2017-06-09T17:37:43.203Z"}
{"msg":"the gotchas would be something like libssl.so, etc, that might link into the peer process","username":"greg.haskins","ts":"2017-06-09T17:38:34.328Z"}
{"msg":"https://wiki.hyperledger.org/projects/fabric/release_process_notes?&#weekly_release_cadence_-_cbf\n @cbf \n>  ensure Daily and Weekly tests are run, force repeated CR CI passes of each repositor\n1) Do we have weekly tests? where are they and what do they do?\n2) I think we are *very* lacking in the integration tests area. \n- e2e tests that run in CI is the testing a naive green path that is like 20% of so of the real production flow.\ngolang UTs stop you from submitting a change that breaks everything but we have discovered in the last weeks numerous bugs that were only caught via:\n- QA manual tests\n- Stuff developers did and saw suspicious prints in the log files / exceptions\nIf we don't have good integration tests that:\n- Spin up a new environment from scratch\n- install everything needed\n- test non trivial stuff, i.e with killing peers, bringing up new peers, etc. etc.\n\nHow do we know that we haven't introduced new bugs in that week? ","username":"yacovm","ts":"2017-06-10T13:18:40.671Z"}
{"msg":"https://wiki.hyperledger.org/projects/fabric/release_process_notes?&#weekly_release_cadence_-_cbf\n @cbf \n>  ensure Daily and Weekly tests are run, force repeated CR CI passes of each repositor\n1) Do we have weekly tests? where are they and what do they do?\n2) I think we are *very* lacking in the integration tests area. \n- e2e tests that run in CI are testing a naive green path that is like 20% of so of the real production flow.\ngolang UTs stop you from submitting a change that breaks everything but we have discovered in the last weeks numerous bugs that were only caught via:\n- QA manual tests\n- Stuff developers did and saw suspicious prints in the log files / exceptions\nIf we don't have good integration tests that:\n- Spin up a new environment from scratch\n- install everything needed\n- test non trivial stuff, i.e with killing peers, bringing up new peers, etc. etc.\n\nHow do we know that we haven't introduced new bugs in that week? ","username":"yacovm","ts":"2017-06-10T13:18:40.671Z"}
{"msg":"https://wiki.hyperledger.org/projects/fabric/release_process_notes?&#weekly_release_cadence_-_cbf\n @cbf \n>  ensure Daily and Weekly tests are run, force repeated CR CI passes of each repositor\n1) Do we have weekly tests? where are they and what do they do?\n2) I think we are *very* lacking in the integration tests area. \n- e2e tests that run in CI are testing a naive green path that is like 20% or so of the real production flow.\ngolang UTs stop you from submitting a change that breaks everything but we have discovered in the last weeks numerous bugs that were only caught via:\n- QA manual tests\n- Stuff developers did and saw suspicious prints in the log files / exceptions\nIf we don't have good integration tests that:\n- Spin up a new environment from scratch\n- install everything needed\n- test non trivial stuff, i.e with killing peers, bringing up new peers, etc. etc.\n\nHow do we know that we haven't introduced new bugs in that week? ","username":"yacovm","ts":"2017-06-10T13:18:40.671Z"}
{"msg":"@yacovm actually sometimes I'm pleasantly surprised with the stability... running stress with couchdb, kafka, multiple peers etc. We must be doing something right. Given more scrutiny in what goes in and limiting what goes in will help maintain the trend now that the focus on UT is set. But agree with you, in that incremental work, we could also use some integ. testing focus, especially with \"feature\" submissions","username":"muralisr","ts":"2017-06-10T15:24:56.994Z"}
{"msg":"caveat - of course, the above optimistic stability statement is only w.r.t green paths.   don't about path with rand failure (network, peer/orderer outages, etc) :-)","username":"muralisr","ts":"2017-06-10T15:26:55.242Z"}
{"msg":"caveat - of course, the above optimistic stability statement is only w.r.t green paths.   don't know about path with rand failure (network, peer/orderer outages, etc) :-)","username":"muralisr","ts":"2017-06-10T15:26:55.242Z"}
{"msg":"@yacovm @muralisr there are tests but they aren't running in CI yet (I keep beating @bmos299 up about this ;-) with any luck these will be running soon. The Dailies are also not running just yet (in CI, though they are running in the IBM lab environment - again, to my disappointment). ","username":"cbf","ts":"2017-06-10T15:33:23.140Z"}
{"msg":"@cbf woohoo!","username":"muralisr","ts":"2017-06-10T15:34:36.537Z"}
{"msg":"is there a list of what scenarios these tests do?","username":"yacovm","ts":"2017-06-10T15:38:32.192Z"}
{"msg":"@cbf  is there a list of what scenarios these tests do?","username":"yacovm","ts":"2017-06-10T15:38:32.192Z"}
{"msg":"what do these tests check?","username":"yacovm","ts":"2017-06-10T15:38:37.564Z"}
{"msg":"> actually sometimes I'm pleasantly surprised with the stability... running stress with couchdb, kafka, multiple peers etc\nWhat is the blocks/second or transaction/second that these stability tests impose? ","username":"yacovm","ts":"2017-06-10T15:40:34.556Z"}
{"msg":"> Given more scrutiny in what goes in and limiting what goes in will help maintain the trend now that the focus on UT is set\nThat's not enough. I've seen changes that fixed bugs and change only 1 file (not including test files) and they were reviewed for half a day by 2 leading developers of a component and yet they introduced bugs.\nWe can't catch all bugs in CR stage, and we don't have anything that catches them in the macro level (integrations) ","username":"yacovm","ts":"2017-06-10T15:43:01.602Z"}
{"msg":"@yacovm if bugs go past component owners scrutiny - when we are limiting what goes in at the same time - then we have a problem. Its hard to replace the eyes and brains of component owners and subject experts with new \"integration tests\" (in addition to UT). Won't scale","username":"muralisr","ts":"2017-06-10T17:00:47.722Z"}
{"msg":"this has nothing to do with brains or eyes, people introduce bugs - such is life.You can't rely on good CR as a means of not introducing bugs.","username":"yacovm","ts":"2017-06-10T17:13:56.258Z"}
{"msg":"this has nothing to do with brains or eyes, people introduce bugs - such is life. You can't rely on good CR as a means of not introducing bugs.","username":"yacovm","ts":"2017-06-10T17:13:56.258Z"}
{"msg":"everyone has to know the whole system and has to keep writing integration tests for CR is not very scalable. People who review have to have a sense of integration so such bugs are minimized (right, bugs will creep in regardless...such is life indeed). I'm not saying we don't do away with integ. tests. Its just that the approach to that has to be different (from a UT for instance )","username":"muralisr","ts":"2017-06-10T18:25:46.529Z"}
{"msg":"having a different body of people than those submitting CRs doing that would be one way","username":"muralisr","ts":"2017-06-10T18:26:42.088Z"}
{"msg":"I didn't say that everyone would right integration tests for CR.\nI said that we need good, thorough integration tests in order to know we don't introduce regression if we want to do frequent releases","username":"yacovm","ts":"2017-06-10T18:45:53.753Z"}
{"msg":"I didn't say that everyone would write integration tests for CR.\nI said that we need good, thorough integration tests in order to know we don't introduce regression if we want to do frequent releases","username":"yacovm","ts":"2017-06-10T18:45:53.753Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=RiXPnPznGfifNjPwZ) @yacovm look in JIRA under the fabric-quality component","username":"cbf","ts":"2017-06-10T19:45:42.985Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=RiXPnPznGfifNjPwZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=RiXPnPznGfifNjPwZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@yacov if you ask me, having different people writing tests, whether UT or FT etc is silly - I would never run a team like that... better to have the developers writing the tests if you ask me - but of course, that means that the developers need to learn how to write tests.","username":"cbf","ts":"2017-06-10T19:47:21.129Z"}
{"msg":"@yacovm  if you ask me, having different people writing tests, whether UT or FT etc is silly - I would never run a team like that... better to have the developers writing the tests if you ask me - but of course, that means that the developers need to learn how to write tests.","username":"cbf","ts":"2017-06-10T19:47:21.129Z"}
{"msg":"Has joined the channel.","username":"Michal Malka","ts":"2017-06-12T06:36:28.169Z","type":"uj"}
{"msg":"Fellow maintainers -   https://jira.hyperledger.org/browse/FAB-3762  / https://gerrit.hyperledger.org/r/#/c/9173/3 - any reason not to push this out post v1.0.0?  ","username":"mastersingh24","ts":"2017-06-12T11:43:54.535Z"}
{"msg":"this isn't a bug IIUC so yeah, post v1.0","username":"yacovm","ts":"2017-06-12T12:10:08.341Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ) @mastersingh24 +2","username":"cbf","ts":"2017-06-12T12:49:41.248Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ) @mastersingh24 I would vote to deprecate this default chaincode name ","username":"C0rWin","ts":"2017-06-12T13:11:07.407Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ) @mastersingh24 I would vote to deprecate this default chain name ","username":"C0rWin","ts":"2017-06-12T13:11:07.407Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"You mean the default chain name ;)","username":"yacovm","ts":"2017-06-12T13:17:50.160Z"}
{"msg":"@mastersingh24 +2 the changes span too many files I think","username":"muralisr","ts":"2017-06-12T14:04:49.193Z"}
{"msg":"This one changes a few files too - but all CLI . It cleans up command reporting (haven't tested it out yet) https://jira.hyperledger.org/browse/FAB-2167 https://gerrit.hyperledger.org/r/#/c/10463/ ","username":"muralisr","ts":"2017-06-12T14:18:04.820Z"}
{"msg":"@mastersingh24 i am ok deferring it, but we need the default channel for devmode","username":"binhn","ts":"2017-06-12T14:18:15.448Z"}
{"msg":"next iteration, we should pull the default channel out of the peer code","username":"binhn","ts":"2017-06-12T14:18:56.050Z"}
{"msg":"@binhn I thought dev mode requires one to create channel too, no ?","username":"muralisr","ts":"2017-06-12T14:19:56.606Z"}
{"msg":"the example doc does take the user through a couple of channels, but i'd like the default that i don't have to do anything with channel, just install/instantiate chaincode and go,  we can pull the default channel into the cli later","username":"binhn","ts":"2017-06-12T14:21:54.690Z"}
{"msg":"ok","username":"muralisr","ts":"2017-06-12T14:23:33.230Z"}
{"msg":"I'll play with testchainid a bit too","username":"muralisr","ts":"2017-06-12T14:24:52.819Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ) +2","username":"JonathanLevi","ts":"2017-06-12T15:07:27.373Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ) \n+2 as well","username":"jyellick","ts":"2017-06-12T15:58:57.448Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=urqwSBpg8QTn2eREZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"For the release checklist, can we add this item: Mark released version as errr,  released version in JIRA?","username":"kostas","ts":"2017-06-12T18:51:47.580Z"}
{"msg":"","username":"kostas","ts":"2017-06-12T18:51:55.696Z","attachments":[{"title":"File Uploaded: Screen Shot 2017-06-12 at 14.51.10.png","title_link":"/file-upload/ebFErgiBd6mpttAqa/Screen Shot 2017-06-12 at 14.51.10.png","image_url":"/file-upload/ebFErgiBd6mpttAqa/Screen Shot 2017-06-12 at 14.51.10.png","image_type":"image/png","image_size":19590,"url":"/file-upload/ebFErgiBd6mpttAqa/Screen Shot 2017-06-12 at 14.51.10.png","remote":false,"fileId":"ebFErgiBd6mpttAqa","fileName":"Screen Shot 2017-06-12 at 14.51.10.png"}]}
{"msg":"^^ @cbf ","username":"kostas","ts":"2017-06-12T18:51:58.271Z"}
{"msg":"(If you point me to the JIRA I can add it.)","username":"kostas","ts":"2017-06-12T18:52:04.935Z"}
{"msg":"(If you point me to the JIRA issue I can add it.)","username":"kostas","ts":"2017-06-12T18:52:04.935Z"}
{"msg":"not sure what you need?","username":"cbf","ts":"2017-06-12T19:05:13.865Z"}
{"msg":"I honestly don't know how to make a version a \"released version\" ","username":"cbf","ts":"2017-06-12T19:05:46.090Z"}
{"msg":"@cbf: There is a knob/page somewhere in JIRA that allows you to mark versions as released. We had missed this step when `alpha-2` was cut, and when I requested the update here, @mastersingh24 did it.","username":"kostas","ts":"2017-06-12T19:15:01.156Z"}
{"msg":"@cbf: There is a knob/page somewhere in JIRA that allows you to mark versions as released. We had missed this step when `alpha-2` was cut, and when I requested the update here, @mastersingh24 did it, so he can elaborate on how it gets done.","username":"kostas","ts":"2017-06-12T19:15:01.156Z"}
{"msg":"I am guessing this should be another item in the release checklist.","username":"kostas","ts":"2017-06-12T19:15:14.247Z"}
{"msg":"And IIRC you maintain a JIRA with the release checklist items. I was asking for the link to that JIRA so I could add that item there.","username":"kostas","ts":"2017-06-12T19:15:50.998Z"}
{"msg":"@cbf: https://jira.hyperledger.org/projects/FAB?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased","username":"kostas","ts":"2017-06-12T19:40:35.898Z"}
{"msg":"@kostas https://jira.hyperledger.org/browse/FAB-4518","username":"cbf","ts":"2017-06-12T19:45:21.676Z"}
{"msg":"@channel - review-needed for https://jira.hyperledger.org/browse/FAB-2487","username":"manish-sethi","ts":"2017-06-13T12:09:52.097Z"}
{"msg":"so if the current implementation has a lossy transformation is means that you can effectively create a channel and it over-writes other namespaces? @manish-sethi ","username":"yacovm","ts":"2017-06-13T12:17:32.433Z"}
{"msg":"so if the current implementation has a lossy transformation is means that you can effectively create a channel with some other name that creates a conflict and it over-writes other namespaces? @manish-sethi ","username":"yacovm","ts":"2017-06-13T12:17:32.433Z"}
{"msg":"yes @yacovm ","username":"manish-sethi","ts":"2017-06-13T12:36:34.831Z"}
{"msg":"+1 then","username":"yacovm","ts":"2017-06-13T12:37:10.266Z"}
{"msg":"isn't this a bug?  what are we voting on?  are we voting whether or not to defer?","username":"mastersingh24","ts":"2017-06-13T15:22:13.230Z"}
{"msg":"I was under the impression we were voting on whether it's a bug or not","username":"yacovm","ts":"2017-06-13T15:23:29.916Z"}
{"msg":"bleeding data from one channel to another because of namespace folding ... right ? sounds severe enough to be fixed immediately ","username":"muralisr","ts":"2017-06-13T17:20:21.645Z"}
{"msg":"from a few days back","username":"muralisr","ts":"2017-06-13T17:23:22.410Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=wZtuszorAQfj6YLkb","username":"muralisr","ts":"2017-06-13T17:23:23.838Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=wZtuszorAQfj6YLkb","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=wZtuszorAQfj6YLkb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"the above has had some reviews and appears good to go... it touches the CLI side only and makes the help more user friendly","username":"muralisr","ts":"2017-06-13T17:24:12.011Z"}
{"msg":"pretty low risk and helps usability... can we get that in or do we need \"review-needed\" voting ?","username":"muralisr","ts":"2017-06-13T17:27:54.254Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=cjQPqGvZzoJeXxPhT) @muralisr +1","username":"cbf","ts":"2017-06-13T19:09:05.624Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=cjQPqGvZzoJeXxPhT","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=cjQPqGvZzoJeXxPhT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"if we can get some good solid testing I'm ok making usability improvement here","username":"cbf","ts":"2017-06-13T19:09:40.429Z"}
{"msg":"@cbf thanks much","username":"muralisr","ts":"2017-06-13T19:16:15.351Z"}
{"msg":"@JonathanLevi @cbf given the new info from @chris.elder re https://jira.hyperledger.org/browse/FAB-4243, I propose to lower priority on this defect and remove it from the required items on https://jira.hyperledger.org/browse/FAB-4518","username":"binhn","ts":"2017-06-13T20:34:23.642Z"}
{"msg":"seems reasonable","username":"cbf","ts":"2017-06-13T21:27:39.039Z"}
{"msg":"we still have 2 high/highest (one of which is a security issue) that are not build related. I am also concerned that we don't have documentation updates","username":"cbf","ts":"2017-06-13T21:29:33.581Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10121/ ( JIRA https://jira.hyperledger.org/browse/FAB-4473) was broken out of discussion in https://jira.hyperledger.org/browse/FAB-3742 . It uses chaincode-independent minimal cache while the original implementation used the entire chaincode package. Basically memory savings for large chaincodes. It is an implementation detail that does not bleed out of ccprovider package.... can we get this in please ?","username":"muralisr","ts":"2017-06-13T22:07:01.931Z"}
{"msg":"@muralisr can you describe what the cache does?","username":"greg.haskins","ts":"2017-06-14T11:57:06.799Z"}
{"msg":"I am not familiar","username":"greg.haskins","ts":"2017-06-14T11:57:13.725Z"}
{"msg":"@greg.haskins certainly","username":"muralisr","ts":"2017-06-14T11:57:30.078Z"}
{"msg":"one moment","username":"muralisr","ts":"2017-06-14T11:57:40.946Z"}
{"msg":"first let me get comments from the original cache implementation","username":"muralisr","ts":"2017-06-14T11:58:59.751Z"}
{"msg":"```        // we have the info from the fs, check that the policy\n        // matches the one on the file system if one was specified;\n        // this check is required because the admin of this peer\n        // might have specified instantiation policies for their\n        // chaincode, for example to make sure that the chaincode\n        // is only instantiated on certain channels; a malicious\n        // peer on the other hand might have created a deploy\n        // transaction that attempts to bypass the instantiation\n        // policy. This check is there to ensure that this will not\n        // happen, i.e. that the peer will refuse to invoke the\n        // chaincode under these conditions. More info on\n        // https://jira.hyperledger.org/browse/FAB-3156```","username":"muralisr","ts":"2017-06-14T11:59:04.145Z"}
{"msg":"basically every invoke needed to check for whether the chaincode that is installed on that peer is the same as the one that was instantiated ","username":"muralisr","ts":"2017-06-14T12:00:17.245Z"}
{"msg":"to do this we need to access the installed chaincode on FS","username":"muralisr","ts":"2017-06-14T12:00:58.637Z"}
{"msg":"to avoid FS access on every invoke, the first access caches the data","username":"muralisr","ts":"2017-06-14T12:01:25.523Z"}
{"msg":"the original implementation cached the entire chaincode ..the above CR just caches the the part that's needed","username":"muralisr","ts":"2017-06-14T12:02:06.040Z"}
{"msg":"the entire chaincode package?","username":"greg.haskins","ts":"2017-06-14T12:02:08.983Z"}
{"msg":"i see","username":"greg.haskins","ts":"2017-06-14T12:02:15.423Z"}
{"msg":"where is it cached?","username":"greg.haskins","ts":"2017-06-14T12:02:31.191Z"}
{"msg":"in memory?","username":"greg.haskins","ts":"2017-06-14T12:02:58.421Z"}
{"msg":"core/common/ccprovider/ccinfocache.go in memory","username":"muralisr","ts":"2017-06-14T12:03:04.441Z"}
{"msg":"actually with your minimal chaincode work, it alleviated the memory pressure considerably","username":"muralisr","ts":"2017-06-14T12:05:24.074Z"}
{"msg":"however we just don't need chaincode size in the cache equation at all","username":"muralisr","ts":"2017-06-14T12:05:52.846Z"}
{"msg":"right","username":"greg.haskins","ts":"2017-06-14T12:07:48.388Z"}
{"msg":"I still dont fully understand the function/threat-model, but this metadata reduction makes sense to me in general","username":"greg.haskins","ts":"2017-06-14T12:08:17.452Z"}
{"msg":"seems like the build is broken","username":"cbf","ts":"2017-06-14T12:19:04.133Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10577/","username":"cbf","ts":"2017-06-14T12:19:05.618Z"}
{"msg":"@greg.haskins just saw a comment from @jiangyaoguo about something I missed when I rebased","username":"muralisr","ts":"2017-06-14T12:21:39.715Z"}
{"msg":"the original code where the new cache model was used  was refactored and rebase pulled that in","username":"muralisr","ts":"2017-06-14T12:22:44.779Z"}
{"msg":"I'll have to apply my fix to that code as well","username":"muralisr","ts":"2017-06-14T12:23:09.059Z"}
{"msg":"will push the fix shortly","username":"muralisr","ts":"2017-06-14T12:23:15.996Z"}
{"msg":"@greg.haskins pushed","username":"muralisr","ts":"2017-06-14T12:45:19.808Z"}
{"msg":"Chris and I have just merged https://gerrit.hyperledger.org/r/#/c/10565/","username":"JonathanLevi","ts":"2017-06-14T15:45:50.901Z"}
{"msg":"We believe it should fix the build... but please reach out if it does not.","username":"JonathanLevi","ts":"2017-06-14T15:46:13.044Z"}
{"msg":"Worked (for Chris) locally.","username":"JonathanLevi","ts":"2017-06-14T15:46:22.765Z"}
{"msg":"Has joined the channel.","username":"leoleo","ts":"2017-06-15T13:06:14.787Z","type":"uj"}
{"msg":"@here I know every one is busy, but reminder: https://github.com/ghaskins/hyperledger-fabric-alpha2-challenge","username":"greg.haskins","ts":"2017-06-16T16:24:38.831Z"}
{"msg":"part of the point is: it shouldnt be hard","username":"greg.haskins","ts":"2017-06-16T16:24:53.753Z"}
{"msg":"if you cant crank this out in an hour or two, we are doing something wrong ;)","username":"greg.haskins","ts":"2017-06-16T16:25:09.392Z"}
{"msg":"Has joined the channel.","username":"kellyo","ts":"2017-06-16T17:31:25.850Z","type":"uj"}
{"msg":"@greg.haskins I also tried to take this up a notch with ACLs etc and have it languishing ... but not forgotten ... in the side","username":"muralisr","ts":"2017-06-16T20:51:06.139Z"}
{"msg":"but i do need to intend to complete it","username":"muralisr","ts":"2017-06-16T20:52:14.235Z"}
{"msg":"fellow maintainers, I'll be on vacation starting 6/19 until 7/10, with a significant part in China (and as such be out of reach during the EDT day time). please direct any questions and discussions regarding the node SDK to @bretharrison while I'm away. I'll make my best attempt to check rocket.chat but no guarantee on responsiveness. also as you know @mastersingh24 knows the code base pretty well too, and @greg.haskins on a significant portion so they are your other sources of truth too","username":"jimthematrix","ts":"2017-06-19T05:04:22.291Z"}
{"msg":"Has joined the channel.","username":"bretharrison","ts":"2017-06-19T05:04:22.484Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sfukazu","ts":"2017-06-19T06:35:35.383Z","type":"uj"}
{"msg":"while we're on the letting ppl know we're on vacation - I'll be off the grid 7/2-7/12 wandering around the Iceland landscape ","username":"cbf","ts":"2017-06-19T07:40:44.965Z"}
{"msg":"I will not be monitoring RC or email;-)","username":"cbf","ts":"2017-06-19T07:40:57.618Z"}
{"msg":"Has joined the channel.","username":"roj","ts":"2017-06-19T10:45:54.916Z","type":"uj"}
{"msg":"I will be out in a similar timeframe as @cbf, i think 7/1 to 7/13 or so","username":"greg.haskins","ts":"2017-06-19T12:32:32.900Z"}
{"msg":"Has joined the channel.","username":"stanacton","ts":"2017-06-19T14:16:03.073Z","type":"uj"}
{"msg":"Hello.. Newbie question here.  I hear that Java chaincode support won't be in the GA release.  How would I find out what is left to do to get it ready?  I know there's Jira, do I just search for Java tasks? Sorry to ask such a trivial question.","username":"stanacton","ts":"2017-06-19T14:19:55.230Z"}
{"msg":"@stanacton posting your question in java chaincode and will add pointers there","username":"muralisr","ts":"2017-06-19T15:01:37.917Z"}
{"msg":"@stanacton never mind...see you have already done that","username":"muralisr","ts":"2017-06-19T15:02:15.857Z"}
{"msg":"have a question on windows support: we have not been able to get much testing done on windows with node SDK at all (I had a tester spending time on it but she wasn't able to get much done), and windows-specific bugs came up from time to time, like this one https://jira.hyperledger.org/browse/FAB-4847. we also don't have a windows based CI either, which in hindsight is an oversight on my part","username":"jimthematrix","ts":"2017-06-19T15:53:55.789Z"}
{"msg":"I'm thinking the right thing to do is document that windows support is \"as-is\" or \"YMMV\", since it's a developer's platform anyway (I don't think anybody have production deployments on windows servers)","username":"jimthematrix","ts":"2017-06-19T15:55:36.713Z"}
{"msg":"I'm thinking the right thing to do is document that windows support is \"as-is\" or \"YMMV\" as a developer's platform anyway, and \"not supported\" for production deployments on windows servers)","username":"jimthematrix","ts":"2017-06-19T15:55:36.713Z"}
{"msg":"I'm thinking the right thing to do is document that windows support is \"as-is\" or \"YMMV\" as a developer's platform anyway, and \"not supported\" for production deployments on windows servers","username":"jimthematrix","ts":"2017-06-19T15:55:36.713Z"}
{"msg":"of course, this is specific to SDKs only","username":"jimthematrix","ts":"2017-06-19T15:56:24.022Z"}
{"msg":"any objections?","username":"jimthematrix","ts":"2017-06-19T15:57:49.636Z"}
{"msg":"@jimthematrix I will give it another shot but in the past when I tried I got stuck getting it running at all on my Windows 7 box :-(","username":"lehors","ts":"2017-06-19T16:02:43.232Z"}
{"msg":"I'll let you know if I get anywhere but don't count on it","username":"lehors","ts":"2017-06-19T16:03:39.751Z"}
{"msg":"I think your suggestion is totally reasonable","username":"lehors","ts":"2017-06-19T16:03:59.776Z"}
{"msg":"Thanks Arnaud ","username":"jimthematrix","ts":"2017-06-19T17:26:56.562Z"}
{"msg":"@here can we please vote or comment on https://jira.hyperledger.org/browse/FAB-4853","username":"cbf","ts":"2017-06-19T21:58:39.245Z"}
{"msg":"if we do this, I want to get it done for the release candidate","username":"cbf","ts":"2017-06-19T21:58:56.835Z"}
{"msg":"@here there was a discussion on the fabric-scrum on https://jira.hyperledger.org/browse/FAB-4751. This  deals with a hole in chaincode framework that allows an external chaincode to register and take over another chaincode's stream that's being launched.  https://gerrit.hyperledger.org/r/#/c/10747/ reduces that vulnerability by not allowing external chaincode to register in the first place (unless in devmode). With that fix in place, a attacker would have to inject an external registration in between the launch of a chaincode and its registration.\n\nOptionally for 1.0, it is proposed to reduce that risk even further by having a separate chaincode listener port for internal use  (ie, a private port that can be protected). This would not reduce ease of use for dev/test but allow the port to be internal when necessary.\n\n*Further, post 1.0, the proposal is to enhance the fix with verification over the TLS connection between the peer and the chaincode. * \n\nCan maintainers chime in on this proposal please ?","username":"muralisr","ts":"2017-06-19T23:50:50.891Z"}
{"msg":"@here there was a discussion on the fabric-scrum on https://jira.hyperledger.org/browse/FAB-4751. This  deals with a hole in chaincode framework that allows an external chaincode to register and take over another chaincode's stream that's being launched.  https://gerrit.hyperledger.org/r/#/c/10747/ reduces that vulnerability by not allowing external chaincode to register in the first place (unless in devmode). With that fix in place, a attacker would have to inject an external registration in between the launch of a chaincode and its registration.\n\nOptionally for 1.0, it is proposed to reduce that risk even further by having a separate chaincode listener port for internal use  (ie, a private port that can be protected). This would not affect ease of use for dev/test but allow the port to be internal when necessary.\n\n*Further, post 1.0, the proposal is to enhance the fix with verification over the TLS connection between the peer and the chaincode. * \n\nCan maintainers chime in on this proposal please ?","username":"muralisr","ts":"2017-06-19T23:50:50.891Z"}
{"msg":"@greg.haskins @cbf @bin","username":"muralisr","ts":"2017-06-19T23:52:04.888Z"}
{"msg":"@greg.haskins @binh @cbf @mastersingh24 ","username":"muralisr","ts":"2017-06-19T23:52:04.888Z"}
{"msg":"@greg.haskins @binhn  @cbf @mastersingh24 ","username":"muralisr","ts":"2017-06-19T23:52:04.888Z"}
{"msg":"@greg.haskins @binhn  @cbf @mastersingh24 based on your comments on the scrum and CRs would be helpful if you commented (and other maintainers of course)","username":"muralisr","ts":"2017-06-19T23:52:04.888Z"}
{"msg":"@greg.haskins @binhn  @cbf @mastersingh24 @JonathanLevi based on your comments on the scrum and CRs would be helpful if you commented (and other maintainers of course)","username":"muralisr","ts":"2017-06-19T23:52:04.888Z"}
{"msg":"I'd really like to see us get the docs and the samples merged (chaincode, first network and first app) but we need the first app code merged into the tutorial and we need eyes on the first network and chaincode tutorials","username":"cbf","ts":"2017-06-20T08:13:34.044Z"}
{"msg":"I'd also like to see https://gerrit.hyperledger.org/r/#/c/10583/ merged so that the peer binary is available for cli","username":"cbf","ts":"2017-06-20T08:14:28.088Z"}
{"msg":"we need to then verify that the binaries tarfile is being created correctly and test with the samples repo","username":"cbf","ts":"2017-06-20T08:15:34.134Z"}
{"msg":"and we should try to merge any remaining open bug fix CRs today... if we can get through that, then I think we will be ready for beta2 or rc1 depending on what defects remain","username":"cbf","ts":"2017-06-20T08:16:36.451Z"}
{"msg":"Has joined the channel.","username":"dongqi","ts":"2017-06-20T08:38:00.414Z","type":"uj"}
{"msg":"looks like 10583 is merged already","username":"weeds","ts":"2017-06-20T12:18:40.723Z"}
{"msg":"@cbf will spend time going over docs with @nickgaski help","username":"muralisr","ts":"2017-06-20T12:19:39.461Z"}
{"msg":"Hi Jim and I are the only _active maintainers_ on the Java SDK.  During his two weeks absents I'd like to submit my own code -- I will _try_ to get a least one non maintainer to do a review before submitting.  Once his return we can go back status quo.","username":"rickr","ts":"2017-06-20T13:28:15.218Z"}
{"msg":"@cbf i did ask Binh, Barry's team, Kostas, and Dave Enyeart to help on looking at some of the doc submissions","username":"weeds","ts":"2017-06-20T13:29:51.346Z"}
{"msg":"@rickr i am sure folks still remember java, me included, so we'll help","username":"binhn","ts":"2017-06-20T13:29:57.056Z"}
{"msg":"@rickr  - your proposal is good to me.  we'll try to pitch in","username":"mastersingh24","ts":"2017-06-20T13:33:14.096Z"}
{"msg":"Has joined the channel.","username":"scottz","ts":"2017-06-20T16:10:33.757Z","type":"uj"}
{"msg":"Please take a look at the updated Hyperledger-Fabric System Verification Test (SVT) report for v1.0, available @here : \nhttps://docs.google.com/spreadsheets/d/1E3-PXchMOWm6DC5xq6RN-NT2YmngKNcG_zQqW0ireY4/edit?usp=sharing\nIt shows the system test summary on first tab, plus a breakdown by \"Test Area\" in the following tabs which contain individual testcases. We even created Jira tasks to describe each testcase. This report does NOT include everything such as Unit Tests or other manual tests done by various community members, but hopefully it satisfies questions about system test coverage.","username":"scottz","ts":"2017-06-20T16:23:40.244Z"}
{"msg":"Can we please do not have *non-fabric* maintainers posting in this channel?","username":"JonathanLevi","ts":"2017-06-20T16:29:58.371Z"}
{"msg":"Do I need to kick people out? I don't understand.","username":"JonathanLevi","ts":"2017-06-20T16:30:11.388Z"}
{"msg":"Let alone using that @ *here* thing...","username":"JonathanLevi","ts":"2017-06-20T16:30:28.436Z"}
{"msg":"To be clear, *this* channel is for *these* people: \nhttps://github.com/hyperledger/fabric/blob/master/docs/source/MAINTAINERS.rst","username":"JonathanLevi","ts":"2017-06-20T16:31:15.650Z"}
{"msg":"Please, to be clear, *this* channel is for *these* people: \nhttps://github.com/hyperledger/fabric/blob/master/docs/source/MAINTAINERS.rst","username":"JonathanLevi","ts":"2017-06-20T16:31:15.650Z"}
{"msg":"Has left the channel.","username":"scottz","ts":"2017-06-20T16:44:27.080Z","type":"ul"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/10835/ ","username":"cbf","ts":"2017-06-21T20:26:14.274Z"}
{"msg":"abandoned above.... https://gerrit.hyperledger.org/r/#/c/10959 is a better CR as it highlights recent contributions","username":"muralisr","ts":"2017-06-21T20:33:49.011Z"}
{"msg":"(sorry for the confusion @cbf)","username":"muralisr","ts":"2017-06-21T20:34:03.419Z"}
{"msg":"congrats @jiangyaoguo ! welcome to the Fabric maintainers!","username":"cbf","ts":"2017-06-22T01:31:40.050Z"}
{"msg":"Thank you all. Will continue to contribute to Fabric and evangelism in china. @muralisr @cbf","username":"jiangyaoguo","ts":"2017-06-22T01:43:20.954Z"}
{"msg":"Congratulations @jiangyaoguo .  And I'm so sorry @yacovm :-)","username":"dave.enyeart","ts":"2017-06-22T02:32:02.604Z"}
{"msg":"See https://gerrit.hyperledger.org/r/#/c/10959/1/docs/source/MAINTAINERS.rst","username":"dave.enyeart","ts":"2017-06-22T02:32:06.652Z"}
{"msg":"must be a LRU cache","username":"dave.enyeart","ts":"2017-06-22T02:34:26.616Z"}
{"msg":"must be a LRU cache :-)","username":"dave.enyeart","ts":"2017-06-22T02:34:26.616Z"}
{"msg":"Thanks @dave.enyeart .  yaoguo and yacovm look similar.  @yacovm :relaxed: ","username":"jiangyaoguo","ts":"2017-06-22T02:50:23.978Z"}
{"msg":"It actually does","username":"yacovm","ts":"2017-06-22T05:22:04.304Z"}
{"msg":"No one could tell the difference :wink:","username":"yacovm","ts":"2017-06-22T05:22:28.438Z"}
{"msg":"Has left the channel.","username":"fbenhamo","ts":"2017-06-22T06:13:23.569Z","type":"ul"}
{"msg":"@dave.enyeart I like the LRU reference, nicely said. These graphs still chase me in my dreams","username":"yacovm","ts":"2017-06-22T07:20:14.177Z"}
{"msg":"@dave.enyeart I like the LRU reference, nicely said. These graphs of peer memory consumption still chase me in my dreams","username":"yacovm","ts":"2017-06-22T07:20:14.177Z"}
{"msg":"please review and merge https://gerrit.hyperledger.org/r/#/c/10993/","username":"rjones","ts":"2017-06-22T08:20:47.070Z"}
{"msg":"Has left the channel.","username":"paapighoda","ts":"2017-06-22T09:18:03.343Z","type":"ul"}
{"msg":"Folks -   https://gerrit.hyperledger.org/r/#/c/11005/   is a CR for the Java SDK - but does not actually change any code.  It enables the SDK integration tests to works with separate TLS and signing certs.  Need to get this in (as well as https://gerrit.hyperledger.org/r/10999 for the NodeSDK).   \n\nAlso - anyone have an issue with @rickr merging his own CRs for the Java SDK (only while Jim is out)?","username":"mastersingh24","ts":"2017-06-22T13:56:04.576Z"}
{"msg":"@mastersingh24 did you guys test that CA change with examples/cluster?","username":"greg.haskins","ts":"2017-06-22T13:57:47.245Z"}
{"msg":"that change looks concerning","username":"greg.haskins","ts":"2017-06-22T13:57:53.360Z"}
{"msg":"@greg.haskins  - so nothing is broken yet because I have not yet submitted a CR for https://jira.hyperledger.org/browse/FAB-4904 (although it is ready to go).   I did modify examples/e2e_cli to work as part of the CR.  Let me check on examples/cluster as well","username":"mastersingh24","ts":"2017-06-22T14:02:12.294Z"}
{"msg":"ty","username":"greg.haskins","ts":"2017-06-22T14:02:24.994Z"}
{"msg":"i havent wrapped my head around whether this will require a client change as well","username":"greg.haskins","ts":"2017-06-22T14:02:40.691Z"}
{"msg":"but for now, just ensuring examples/cluster itself doesnt break is a start","username":"greg.haskins","ts":"2017-06-22T14:03:02.882Z"}
{"msg":" https://gerrit.hyperledger.org/r/#/c/11005 looks good ran all test .. going to merge","username":"rickr","ts":"2017-06-22T14:07:35.161Z"}
{"msg":"@greg.haskins  - as far as I can tell, the client still explicitly specify the trusted certs for TLS connections","username":"mastersingh24","ts":"2017-06-22T14:46:24.083Z"}
{"msg":"But in the end, using the artifacts we generate it's pretty transparent","username":"mastersingh24","ts":"2017-06-22T14:46:42.358Z"}
{"msg":"@mastersingh24 right, but also note that examples/cluster generates a file build/client.config","username":"greg.haskins","ts":"2017-06-22T14:46:54.296Z"}
{"msg":"and I am not sure it will work with the new scheme","username":"greg.haskins","ts":"2017-06-22T14:47:03.457Z"}
{"msg":"I'll make it work for you.  Fear not my friend","username":"mastersingh24","ts":"2017-06-22T14:47:17.579Z"}
{"msg":"you are awesome","username":"greg.haskins","ts":"2017-06-22T14:47:24.512Z"}
{"msg":"ty","username":"greg.haskins","ts":"2017-06-22T14:47:25.804Z"}
{"msg":"@greg.haskins  https://gerrit.hyperledger.org/r/#/c/11021/","username":"mastersingh24","ts":"2017-06-22T19:52:04.549Z"}
{"msg":"just a few small tweaks, but the cluster example is working in the new world  ;)","username":"mastersingh24","ts":"2017-06-22T19:52:35.397Z"}
{"msg":"At fellow maintainers - we have an issue which I think I've directly / indirectly mentioned a few times","username":"mastersingh24","ts":"2017-06-22T19:53:13.686Z"}
{"msg":"With Jim Zhang out, Rick is the only active maintainer for the Java SDK","username":"mastersingh24","ts":"2017-06-22T19:53:40.094Z"}
{"msg":"And he can't merge his own changes","username":"mastersingh24","ts":"2017-06-22T19:53:47.126Z"}
{"msg":":(","username":"mastersingh24","ts":"2017-06-22T19:53:48.530Z"}
{"msg":"So we can \n\n1) Ask Ry to change this so he can merge his own code (I think it's possible)\n2) Add some of us as maintainers - I'm happy to do it and help out","username":"mastersingh24","ts":"2017-06-22T19:55:00.274Z"}
{"msg":"My vote would be for (2).  Hopefully we are at a stage where the changes should be small and easily reviewed, even for a newcomer to the codebase","username":"jyellick","ts":"2017-06-22T19:55:47.477Z"}
{"msg":"Yeah - that would be my choice as well","username":"mastersingh24","ts":"2017-06-22T19:56:57.916Z"}
{"msg":"I think that (2)","username":"yacovm","ts":"2017-06-22T20:06:39.559Z"}
{"msg":"I'm for (2) as well","username":"C0rWin","ts":"2017-06-22T20:07:19.326Z"}
{"msg":"(2) is the way you need to go","username":"rjones","ts":"2017-06-22T20:09:54.065Z"}
{"msg":"furthermore it's just NACR so you could review and +1 changes and Rick could merge them with no governance changes","username":"rjones","ts":"2017-06-22T20:10:25.431Z"}
{"msg":"holding an election to replace Jim will be outside the project's ability right now - the TSC would need to vote on that","username":"rjones","ts":"2017-06-22T20:12:09.683Z"}
{"msg":"@rjones - so Rick can merge his own changes with a +1 from someone else?","username":"mastersingh24","ts":"2017-06-22T20:28:53.474Z"}
{"msg":"or we can make it that way?","username":"mastersingh24","ts":"2017-06-22T20:29:04.082Z"}
{"msg":"@mastersingh24 if he gets one +1 he should be able to merge his changes. that's the way NACR works","username":"rjones","ts":"2017-06-22T20:34:00.429Z"}
{"msg":"What's does NACR stand for?","username":"kostas","ts":"2017-06-22T20:34:13.500Z"}
{"msg":"What does NACR stand for?","username":"kostas","ts":"2017-06-22T20:34:13.500Z"}
{"msg":"non author code review, sorry for being opaque","username":"rjones","ts":"2017-06-22T20:34:38.079Z"}
{"msg":"@rjones - sorry - but who has the ability to do \"non author code review\"?    I only had access to code review for https://gerrit.hyperledger.org/r/#/c/10945/","username":"mastersingh24","ts":"2017-06-22T20:35:54.622Z"}
{"msg":"@mastersingh24 you are correct. I guess NACR requires the other review come from a committer :(","username":"rjones","ts":"2017-06-22T20:38:17.152Z"}
{"msg":":(","username":"mastersingh24","ts":"2017-06-22T20:38:36.529Z"}
{"msg":"","username":"rjones","ts":"2017-06-22T20:45:03.066Z","attachments":[{"title":"File Uploaded: Screen Shot 2017-06-22 at 1.44.36 PM.png","title_link":"/file-upload/fEbLxSYkQAjThQnBW/Screen Shot 2017-06-22 at 1.44.36 PM.png","image_url":"/file-upload/fEbLxSYkQAjThQnBW/Screen Shot 2017-06-22 at 1.44.36 PM.png","image_type":"image/png","image_size":38287,"url":"/file-upload/fEbLxSYkQAjThQnBW/Screen Shot 2017-06-22 at 1.44.36 PM.png","remote":false,"fileId":"fEbLxSYkQAjThQnBW","fileName":"Screen Shot 2017-06-22 at 1.44.36 PM.png"}]}
{"msg":"so there are five committers, only one is unavailable.","username":"rjones","ts":"2017-06-22T20:45:24.269Z"}
{"msg":"The others seem to be no shows","username":"mastersingh24","ts":"2017-06-22T20:50:52.272Z"}
{"msg":"Last commits I see for each are:\n\n```\nMuhammad Altaf : Thu Feb 2 08:34:15 2017 +1100\nPardha Vishnumolakala : Wed Jan 4 19:08:46 2017 +0000\nSatheesh Kathamuthu : Tue Feb 14 19:40:35 2017 +0530\n```","username":"jyellick","ts":"2017-06-22T20:51:32.854Z"}
{"msg":"but they can be asked to step up or leave.","username":"rjones","ts":"2017-06-22T20:51:41.046Z"}
{"msg":"committer shouldn't be some honorary role (imho) the point isn't to collect commit bits on your linkedin cheevos list the point is to help the project","username":"rjones","ts":"2017-06-22T20:52:18.094Z"}
{"msg":"100% agree","username":"mastersingh24","ts":"2017-06-22T20:53:50.693Z"}
{"msg":"We probably should have added some other maintainers earlier","username":"mastersingh24","ts":"2017-06-22T20:54:09.464Z"}
{"msg":"they were active in the past but have basically left all the work to Rick","username":"mastersingh24","ts":"2017-06-22T20:54:26.773Z"}
{"msg":"the project has 5. hassle the 3 dropouts for some votes","username":"rjones","ts":"2017-06-22T20:54:28.944Z"}
{"msg":"Will do","username":"mastersingh24","ts":"2017-06-22T20:54:42.645Z"}
{"msg":"like, hold an election. the situation is not dire. Rick needs to nominate some active people, and get two more votes to expand the pool","username":"rjones","ts":"2017-06-22T20:55:12.307Z"}
{"msg":"I thought the governance situation was a lot worse when I was on my phone. With five committers, as long as you can find two more, you can hold an election within the rules and change everything.","username":"rjones","ts":"2017-06-22T20:55:59.129Z"}
{"msg":"or self-nominate. I think someone should nominate enough people to get an majority of active users, then ask the inactive committers to step down, but I'm a hardass","username":"rjones","ts":"2017-06-22T20:57:14.435Z"}
{"msg":"do one nomination with everyone in this channel that will commit to being active, which will amount to a sea change in control of the project","username":"rjones","ts":"2017-06-22T20:58:03.442Z"}
{"msg":"+1 this is what I suggested to Rick","username":"cbf","ts":"2017-06-22T22:42:00.979Z"}
{"msg":"I've seen others doing self commits. All I asked for was during this short piece of time to allow self commits with others doing +1 for a peer review. For better or worse I wrote probably 80% of the code there -- I honestly find it a bit insulting that I can't be trusted to the point that we need rubber stamp the approval of another maintainer. Not going to do that.","username":"rickr","ts":"2017-06-22T23:53:01.793Z"}
{"msg":"I've seen others doing self commits. All I asked for was during this short piece of time to allow self commits with others doing +1 for a peer review. For better or worse I wrote probably 80% of the code there -- I honestly find it a bit insulting that I can't be trusted to the point that we need rubber stamp the approval of another maintainer. Not going to participate in that.","username":"rickr","ts":"2017-06-22T23:53:01.793Z"}
{"msg":"I still don't understand why we are using this channel for the above.","username":"JonathanLevi","ts":"2017-06-23T00:06:48.943Z"}
{"msg":"Happy to discuss, and vote to \"change the rule\", but trying the same input against the same rule and the rule-engine is a bit...","username":"JonathanLevi","ts":"2017-06-23T00:07:39.781Z"}
{"msg":"where have you seen that on this project? it is an anti-pattern. All I am asking is that you vote in some new blood like binh or gari","username":"cbf","ts":"2017-06-23T04:27:08.891Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-release?msg=QjN8AHYrGTgS4WTCd","username":"cbf","ts":"2017-06-23T17:37:31.286Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=QjN8AHYrGTgS4WTCd","url":"https://chat.hyperledger.org/channel/fabric-release?msg=QjN8AHYrGTgS4WTCd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"In other words, announcing MERGE FREEZE *BEGIN*","username":"JonathanLevi","ts":"2017-06-23T17:49:27.496Z"}
{"msg":"MERGE FREEZE *END*","username":"JonathanLevi","ts":"2017-06-24T01:24:19.662Z"}
{"msg":"A.k.a, *what's tagged is tagged* ;-)","username":"JonathanLevi","ts":"2017-06-24T01:24:44.010Z"}
{"msg":"Back to normal.","username":"JonathanLevi","ts":"2017-06-24T01:24:53.786Z"}
{"msg":"This went relatively smooth this time didn't it?","username":"kostas","ts":"2017-06-24T07:56:45.093Z"}
{"msg":"I'd say so","username":"mastersingh24","ts":"2017-06-24T09:32:48.142Z"}
{"msg":"(so far  ;) )","username":"mastersingh24","ts":"2017-06-24T09:32:52.625Z"}
{"msg":"@cbf Given the introduction of fabric-samples /first-network, do you envision /examples/e2e_cli getting removed? I mean, for the next release candidate... ","username":"dave.enyeart","ts":"2017-06-26T15:13:42.025Z"}
{"msg":"There is a proposed update to the docker-compose for next time around, and we need to know whether to keep up dual maintenance in /examples/e2e_cli.","username":"dave.enyeart","ts":"2017-06-26T15:14:05.030Z"}
{"msg":"@dave.enyeart unlikely as it is used in a number of integration tests","username":"cbf","ts":"2017-06-26T15:14:17.470Z"}
{"msg":"we may want to move it from examples into the test directories","username":"cbf","ts":"2017-06-26T15:14:45.300Z"}
{"msg":"we should modify the e2e_cli to be part of tests and add also add a make target for it","username":"mastersingh24","ts":"2017-06-26T15:33:58.142Z"}
{"msg":"I was going to create a JIRA for it post v1.0.0","username":"mastersingh24","ts":"2017-06-26T15:34:08.962Z"}
{"msg":"+1","username":"cbf","ts":"2017-06-26T17:13:54.971Z"}
{"msg":"+1","username":"JonathanLevi","ts":"2017-06-26T17:55:56.568Z"}
{"msg":"Just for the formality, is there anyone here who has any information/data/knowledge of issues that should stop us from announcing the 1.0.0-rc1 publicly/widely?","username":"JonathanLevi","ts":"2017-06-26T17:57:11.836Z"}
{"msg":"Just to say that we are/were *pleasantly surprised* with how much smoother last version, pre-release tests went...","username":"JonathanLevi","ts":"2017-06-26T17:58:51.785Z"}
{"msg":"Just to say that we are/were *pleasantly surprised* with how much smoother last version's  pre-release tests went... ","username":"JonathanLevi","ts":"2017-06-26T17:58:51.785Z"}
{"msg":"I think we'll be helping folks by announcing it given it looks like the fabric-samples and tutorials works pretty well with rc1","username":"mastersingh24","ts":"2017-06-26T18:38:13.488Z"}
{"msg":"Off we go:","username":"JonathanLevi","ts":"2017-06-26T19:15:25.380Z"}
{"msg":"https://lists.hyperledger.org/pipermail/hyperledger-announce/2017-June/000010.html","username":"JonathanLevi","ts":"2017-06-26T19:15:26.127Z"}
{"msg":"https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-June/001246.html","username":"JonathanLevi","ts":"2017-06-26T19:15:47.537Z"}
{"msg":"Thanks everyone for all the hard work!","username":"JonathanLevi","ts":"2017-06-26T19:16:02.077Z"}
{"msg":"it maybe appropriate time for us to continue the discussion on branching or not branching for release vs dev stream as some of us are starting to look post 1.0","username":"binhn","ts":"2017-06-27T13:23:41.595Z"}
{"msg":"yes","username":"cbf","ts":"2017-06-27T13:26:29.781Z"}
{"msg":"For reference, I believe the last discussion of that topic was here: Branching Model Final Thread\nhttps://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-May/thread.html","username":"dave.enyeart","ts":"2017-06-27T13:37:31.567Z"}
{"msg":"thanks @dave.enyeart ","username":"binhn","ts":"2017-06-27T13:52:21.867Z"}
{"msg":"You may find it interesting to know that the people who build gerrit use release branches and then tags within the release branches for fix versions  ;)   https://gerrit.googlesource.com/gerrit/","username":"mastersingh24","ts":"2017-06-27T14:46:51.318Z"}
{"msg":"what did they use before the first version came out though? :thinking: ","username":"yacovm","ts":"2017-06-27T14:49:02.056Z"}
{"msg":"puzzling","username":"mastersingh24","ts":"2017-06-27T14:57:10.631Z"}
{"msg":"How did Docker use Docker to build Docker before there was Docker?","username":"mastersingh24","ts":"2017-06-27T14:57:28.299Z"}
{"msg":"https://cdn.meme.am/cache/instances/folder383/53830383.jpg","username":"mastersingh24","ts":"2017-06-27T14:59:04.595Z"}
{"msg":"it looks like we left off at 2 main branches: master and dev, where master is always production ready (tip of master is the current release); short-live feature branches merged into dev; hot-fix branches merged into master and dev. The outstanding question is whether the current CI work with this.","username":"binhn","ts":"2017-06-27T15:25:17.736Z"}
{"msg":"also will it work with gerrit or not","username":"yacovm","ts":"2017-06-27T15:31:29.768Z"}
{"msg":"we can make the default branch the release branch and master be development (meaning no change to gerrit needed, we just change GH's default branch","username":"cbf","ts":"2017-06-27T15:54:17.772Z"}
{"msg":"I would propose a master and release branch and we can tag the latest release on the release branch","username":"cbf","ts":"2017-06-27T16:05:46.119Z"}
{"msg":"I would also note that in CF we migrated from master to develop branch strategy and it was a mess for a couple months ","username":"cbf","ts":"2017-06-27T16:06:27.751Z"}
{"msg":"so release branch is \"frozen\" almost all the time and master branch is active development and features are merged to the master branch like in the last year, right?","username":"yacovm","ts":"2017-06-27T16:08:36.951Z"}
{"msg":"so release branch is \"frozen\" almost all the time and master branch is active development and features are merged to the master branch like in the last year + work with gerrit, right?","username":"yacovm","ts":"2017-06-27T16:08:36.951Z"}
{"msg":"so release branch is \"frozen\" almost all the time and master branch is active development and features are merged to the master branch like in the last year + work with gerrit, right? @cbf ","username":"yacovm","ts":"2017-06-27T16:08:36.951Z"}
{"msg":"yes, and periodically a ff merge of master into release","username":"cbf","ts":"2017-06-27T16:48:05.835Z"}
{"msg":"if the releases would be frequent I think we can pull this off","username":"yacovm","ts":"2017-06-27T17:35:59.195Z"}
{"msg":"@mastersingh24 the same way the rust programmers built the rust compiler in rust.","username":"dhuseby","ts":"2017-06-27T17:41:09.881Z"}
{"msg":"and the same way the first C compiler was written in C","username":"dhuseby","ts":"2017-06-27T17:41:20.192Z"}
{"msg":"@cbf if you make the master branch the release branch it has the nice feature of \"subscribing\" to the project on github means they will receive a notification whenever a new release merge is made","username":"dhuseby","ts":"2017-06-27T17:42:48.942Z"}
{"msg":"@cbf why was the move to a development branch a mess?","username":"dhuseby","ts":"2017-06-27T17:43:51.402Z"}
{"msg":"the argument in support of having the master branch be the development branch is that doing a git clone gives you the development branch by default","username":"dhuseby","ts":"2017-06-27T17:44:31.565Z"}
{"msg":"and merging into the release branch takes real work","username":"dhuseby","ts":"2017-06-27T17:44:38.912Z"}
{"msg":"both things that help minimize the \"oops\" factor","username":"dhuseby","ts":"2017-06-27T17:44:51.630Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=6Y2HCMzPszNQfG93R) @dhuseby Didn't we cover this ad nauseam before? ;) ","username":"greg.haskins","ts":"2017-06-27T20:07:42.618Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6Y2HCMzPszNQfG93R","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6Y2HCMzPszNQfG93R","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I would summarize it by saying gerrit in general, and the LF policies applied to gerrit in particular made it branch hostile","username":"greg.haskins","ts":"2017-06-27T20:08:31.321Z"}
{"msg":"I think this is by design, though...gerrit uses a different model from, say, gitflow style branching","username":"greg.haskins","ts":"2017-06-27T20:08:54.372Z"}
{"msg":"gerrit reminds me much more of LKML style git","username":"greg.haskins","ts":"2017-06-27T20:09:10.605Z"}
{"msg":"effectively, each CR is basically a development branch","username":"greg.haskins","ts":"2017-06-27T20:09:39.960Z"}
{"msg":"don't let GKH hear you say that, @greg.haskins ","username":"rjones","ts":"2017-06-27T20:34:56.168Z"}
{"msg":"that gerrit is like LKML?","username":"greg.haskins","ts":"2017-06-27T20:35:56.519Z"}
{"msg":"he's been on an anti-gerrit tear since forever.","username":"rjones","ts":"2017-06-27T20:37:36.657Z"}
{"msg":"ah, thats fine...I am not for nor against, just noting the similarities in the style ","username":"greg.haskins","ts":"2017-06-27T20:54:12.206Z"}
{"msg":"submitting a gerrit CR feels sort of like a web interface on the concept of a patch submitted to a ML","username":"greg.haskins","ts":"2017-06-27T20:54:33.281Z"}
{"msg":"as opposed to, say, a team with git push access, who might do a gitflow type thing with branches","username":"greg.haskins","ts":"2017-06-27T20:55:14.035Z"}
{"msg":"please vote https://jira.hyperledger.org/browse/FAB-5043","username":"cbf","ts":"2017-06-27T23:48:09.537Z"}
{"msg":"@cbf done","username":"greg.haskins","ts":"2017-06-28T00:05:16.153Z"}
{"msg":"thx","username":"cbf","ts":"2017-06-28T00:20:16.476Z"}
{"msg":"gentle reminder to please review and comment or vote on https://jira.hyperledger.org/browse/FAB-5043 to create a Homebrew tap repo for Fabric","username":"cbf","ts":"2017-06-28T13:07:07.225Z"}
{"msg":"voted","username":"binhn","ts":"2017-06-28T13:31:55.235Z"}
{"msg":"thx","username":"cbf","ts":"2017-06-28T13:32:24.085Z"}
{"msg":"re branches, it looks like we are at master and release branch, where master is the dev branch -- do we need a vote on this or we just go ahead and create the release 1.0 branch early next week?","username":"binhn","ts":"2017-06-28T13:34:53.127Z"}
{"msg":"just to document, I'll put a JIRA up to vote on ok?","username":"cbf","ts":"2017-06-28T13:35:32.649Z"}
{"msg":"sounds good, thanks @cbf ","username":"binhn","ts":"2017-06-28T13:35:53.829Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-5050","username":"cbf","ts":"2017-06-28T13:47:22.489Z"}
{"msg":"need one more for https://jira.hyperledger.org/browse/FAB-5043 please","username":"cbf","ts":"2017-06-28T15:40:38.170Z"}
{"msg":"@cbf unless you do all new feature work in feature branches and only merge new features into master once they are baked, documented, and covered with tests (i.e. ready for the next release candidate) you're never going to be able to FF merge master into release","username":"dhuseby","ts":"2017-06-28T17:32:15.855Z"}
{"msg":"if you don't use feature branches for all new feature work","username":"dhuseby","ts":"2017-06-28T17:32:24.028Z"}
{"msg":"and you FF merge master into release","username":"dhuseby","ts":"2017-06-28T17:32:28.125Z"}
{"msg":"the release branch will pick up all of the half-baked, untested features in master","username":"dhuseby","ts":"2017-06-28T17:32:46.751Z"}
{"msg":"I think that's the exact opposite of what you want","username":"dhuseby","ts":"2017-06-28T17:33:04.396Z"}
{"msg":"that's why the branching proposal I made has feature branches","username":"dhuseby","ts":"2017-06-28T17:33:19.567Z"}
{"msg":"if you don't want to do feature branches","username":"dhuseby","ts":"2017-06-28T17:33:24.779Z"}
{"msg":"then you need three main branches","username":"dhuseby","ts":"2017-06-28T17:33:31.426Z"}
{"msg":"dev, beta, release","username":"dhuseby","ts":"2017-06-28T17:33:35.836Z"}
{"msg":"all new feature work would be done on dev","username":"dhuseby","ts":"2017-06-28T17:33:46.954Z"}
{"msg":"fully baked, documented, and tested features would be cherry picked over to beta","username":"dhuseby","ts":"2017-06-28T17:34:01.347Z"}
{"msg":"beta would always be in a state of building and would only contain fully baked features that are ready for the next release candidate","username":"dhuseby","ts":"2017-06-28T17:34:22.758Z"}
{"msg":"then you can tag RC's on the beta branch, test and harden, and then FF from beta to release","username":"dhuseby","ts":"2017-06-28T17:34:43.255Z"}
{"msg":"those are the two choices","username":"dhuseby","ts":"2017-06-28T17:34:48.947Z"}
{"msg":"three branches, or two branches with feature branches","username":"dhuseby","ts":"2017-06-28T17:35:01.029Z"}
{"msg":"if you don't do one of those two things, then you will never be able to FF merge to release without release being filled with half-baked code","username":"dhuseby","ts":"2017-06-28T17:35:32.654Z"}
{"msg":"the only other option is to mandate that all half-baked code be behind a runtime switch but that brings on \"oops, forgot\" syndrome a lot harder and faster than any other approach (IMO)","username":"dhuseby","ts":"2017-06-28T17:36:12.314Z"}
{"msg":"Assuming we follow the same pattern we did for v1.  Master could be feature frozen, and stabilized for a period of time before the FF merge.  In general, it seems like we only need a feature branch if we are convinced we need to do feature development during this freeze period.","username":"jyellick","ts":"2017-06-28T17:39:48.935Z"}
{"msg":"@jyellick that's is true, but the reason for feature branches or a separate dev branch is to isolate the releasable code from the development code so that nothing half-baked--even if disabled--ever gets into a release version.  The primary reason for this is security.","username":"dhuseby","ts":"2017-06-28T17:56:05.327Z"}
{"msg":"half-baked code--even if disabled--can be the source of security vulnerabilities.","username":"dhuseby","ts":"2017-06-28T17:56:37.193Z"}
{"msg":"the end goal for high-assurance software is that *only* fully baked, fully documented, and fully tested code is ever in the released version of software.","username":"dhuseby","ts":"2017-06-28T17:57:11.986Z"}
{"msg":"For the security part I think that we can simply have a simple rule:\n- Never ever create a commit that introduces a security vulnerability","username":"yacovm","ts":"2017-06-28T18:05:10.755Z"}
{"msg":"That means - if feature X needs a security functionality / capability- it doesn't get into gerrit *at all* until the security capability is *in master*","username":"yacovm","ts":"2017-06-28T18:05:42.647Z"}
{"msg":"That means - if feature X needs a security functionality / capability- it doesn't get into gerrit *at all* until the security capability is *in master*, \nand no commits with \"// TODO: handle ACL here\" ","username":"yacovm","ts":"2017-06-28T18:05:42.647Z"}
{"msg":"I think the nightmare which is fresh in everyone's mind is when we branched a feature branch for v1 and allowed development on the stable v0.5/v0.6 in master.  Despite heroic efforts from @muralisr, @greg.haskins and others, the rate of changes in the two parallel branches was too high to keep up.  And it was turning into a full time job, simply merging from one to the other.","username":"jyellick","ts":"2017-06-28T18:07:03.836Z"}
{"msg":"From my perspective, the issue isn't that the benefits of the proposed branches aren't understood...its that the current Gerrit setup uses a different model than a traditional branch model","username":"greg.haskins","ts":"2017-06-28T20:42:58.549Z"}
{"msg":"and unless the proposal takes that into consideration, we are at the risk of repeating the hard to manage setup that existed in the v0.6->v1.0 branch timeframe","username":"greg.haskins","ts":"2017-06-28T20:43:40.337Z"}
{"msg":"there are various ways we can approach it: however, the simple approach of \"just start using branches\" won't do","username":"greg.haskins","ts":"2017-06-28T20:44:55.663Z"}
{"msg":"Has joined the channel.","username":"rezamt","ts":"2017-06-29T04:23:40.686Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Es2qu5KMgJ2mPgPoJ) ","username":"JonathanLevi","ts":"2017-06-29T14:44:07.071Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Es2qu5KMgJ2mPgPoJ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Es2qu5KMgJ2mPgPoJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@rickr - sorry, I didn't have time to deal with this last week (the release, a conference, etc.)","username":"JonathanLevi","ts":"2017-06-29T14:44:30.120Z"}
{"msg":"My 2 cents, and it may be a bit (more) general. I can just tell you how things look from my end.","username":"JonathanLevi","ts":"2017-06-29T14:45:19.126Z"}
{"msg":"You mention that you feel that you *find it a bit insulting* that XYZ ...","username":"JonathanLevi","ts":"2017-06-29T14:46:07.911Z"}
{"msg":"Now let's denote XYZ == \"you can't be trusted to the point that we need another approval of another maintainer\"","username":"JonathanLevi","ts":"2017-06-29T14:47:03.413Z"}
{"msg":"Let me start by stating the \"normal\" and \"dry\" answer (that makes me feel like a high-school teacher, but that's fine)","username":"JonathanLevi","ts":"2017-06-29T14:47:54.922Z"}
{"msg":"*The way the/our governance models works is that there are a few selected project maintainers that define the rules*, etc. The more formal version of this is posted on the wiki.","username":"JonathanLevi","ts":"2017-06-29T14:48:54.727Z"}
{"msg":"So that are two parts to these.","username":"JonathanLevi","ts":"2017-06-29T14:49:07.402Z"}
{"msg":"1. Setting the rules and guidelines, by vote.","username":"JonathanLevi","ts":"2017-06-29T14:49:25.216Z"}
{"msg":"2. Enforcing them","username":"JonathanLevi","ts":"2017-06-29T14:49:41.186Z"}
{"msg":"3. (which is more like 1.b.): Re-examine, (re-)evaluate the rules in 1, see how we perform/what are the results - amend/update as needed.","username":"JonathanLevi","ts":"2017-06-29T14:50:46.765Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-06-29T14:50:51.775Z"}
{"msg":"Now, the minute we agree on the rules, and as long as we are not at phase 1 or phase 3... we are at the \"enforcement\" phase.","username":"JonathanLevi","ts":"2017-06-29T14:51:47.891Z"}
{"msg":"So once we set the rules, I, for instance, work like a \"dry\" rule-engine.","username":"JonathanLevi","ts":"2017-06-29T14:52:18.940Z"}
{"msg":"An input is being received, I apply the set of rules over that input, and then I \"spit out\" an Approve/Reject.","username":"JonathanLevi","ts":"2017-06-29T14:52:55.112Z"}
{"msg":"It's like a predicate: *evaluate(input, rules) -> boolean*","username":"JonathanLevi","ts":"2017-06-29T14:53:17.594Z"}
{"msg":"And this is how most maintainers (should )work/operate. Some are more vocal/direct, others more passive - but we also have different personalities in this project, which I believe is a great thing.","username":"JonathanLevi","ts":"2017-06-29T14:54:33.545Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-06-29T14:54:37.213Z"}
{"msg":"Now, don't take what I'm about to type here in a negative way. It's just some feedback, from my angle.","username":"JonathanLevi","ts":"2017-06-29T14:55:33.060Z"}
{"msg":"Here are my observations","username":"JonathanLevi","ts":"2017-06-29T14:55:44.055Z"}
{"msg":"1. You care a lot about this project.","username":"JonathanLevi","ts":"2017-06-29T14:55:52.116Z"}
{"msg":"2. You contribute a lot (especially in your specific area)","username":"JonathanLevi","ts":"2017-06-29T14:56:14.750Z"}
{"msg":"3. We (or at least, I) really appreciate it.","username":"JonathanLevi","ts":"2017-06-29T14:56:26.109Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-06-29T14:56:28.079Z"}
{"msg":"Now, here is what I think we should (all) do better","username":"JonathanLevi","ts":"2017-06-29T14:56:43.372Z"}
{"msg":"Now, with that in mind, here is my other observation:","username":"JonathanLevi","ts":"2017-06-29T14:57:22.235Z"}
{"msg":"If you do not agree with some \"rule\"/\"law\"/\"agreed upon working assumption\" or \"practice\" that we apply...","username":"JonathanLevi","ts":"2017-06-29T14:57:58.916Z"}
{"msg":"... then the first thing to do, is to *strive to amend the rule*.","username":"JonathanLevi","ts":"2017-06-29T14:58:17.241Z"}
{"msg":"If *you do not agree with some \"rule\"/\"law\"/\"agreed upon working assumption\" or \"practice\"* or you believe that *\"something does not make sense\"* with some existing rule that is being enforces/applied...","username":"JonathanLevi","ts":"2017-06-29T14:59:13.027Z"}
{"msg":"... then the first thing to do, is to *strive to amend the rule*, by point it out, and trying to see if *you can convince and get the support of other maintainers first*","username":"JonathanLevi","ts":"2017-06-29T15:00:10.786Z"}
{"msg":"... so that we can work to *change the rule/law*.","username":"JonathanLevi","ts":"2017-06-29T15:00:28.531Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-06-29T15:00:32.191Z"}
{"msg":"instead, when you keep on providing the same input to the same rule-engine (without any changes to the rules), it feels like you are banging your head against the wall.","username":"JonathanLevi","ts":"2017-06-29T15:01:18.355Z"}
{"msg":"And I can clearly see how/that it frustrates you (and possibly others).","username":"JonathanLevi","ts":"2017-06-29T15:01:36.974Z"}
{"msg":"I wasn't involved with all the details that lead to your posting the above statement here.... but I can give you a very simple example.","username":"JonathanLevi","ts":"2017-06-29T15:02:11.556Z"}
{"msg":"We, the maintainers, agreed on a rule that this is going to be a maintainers only channel. Right?","username":"JonathanLevi","ts":"2017-06-29T15:02:38.563Z"}
{"msg":"It wasn't even my suggestion, but *when we have agreed upon it - and decided that this is the accepted guideline/rule/\"law\" *, then we started applying this rule.","username":"JonathanLevi","ts":"2017-06-29T15:03:42.744Z"}
{"msg":"I pointed out to you several times. Right?","username":"JonathanLevi","ts":"2017-06-29T15:04:01.237Z"}
{"msg":"But you kept posting here, and I kept remind you of the guidelines, and you kept posting here, yada yada yada.","username":"JonathanLevi","ts":"2017-06-29T15:04:30.088Z"}
{"msg":"From some of what you said, I got the impression that you believe that *the rule does not make sense* - which is totally fine!","username":"JonathanLevi","ts":"2017-06-29T15:05:20.537Z"}
{"msg":"*But, instead of keeping on posting here, I kept wondering: why are not making a formal proposal/suggestion to change that rule?*","username":"JonathanLevi","ts":"2017-06-29T15:05:58.281Z"}
{"msg":"Honestly, that's what I kept asking myself every time you posted here.","username":"JonathanLevi","ts":"2017-06-29T15:06:13.774Z"}
{"msg":"I/we were pretty busy with whatever (the release, prioritization, or whatever, right?)...","username":"JonathanLevi","ts":"2017-06-29T15:06:42.964Z"}
{"msg":"You could have easily posted the request that we should all consider that, for example, *the maintainers of the fabric SDK should be allowed to write in this channel*","username":"JonathanLevi","ts":"2017-06-29T15:07:34.180Z"}
{"msg":"... *naturally, had I seen it, I would have supported it, and would even ask others if they believe we should add the fabric Composer maintainers*, etc.","username":"JonathanLevi","ts":"2017-06-29T15:08:27.213Z"}
{"msg":"But again, I could live with the current \"rule\" and my time/priorities/head were elsewhere. So again, instead of complaining/imploding/getting increasingly-bitter about a rule/practice, first, make a case and put it forward, *way, way earlier*. That's my advice.","username":"JonathanLevi","ts":"2017-06-29T15:10:09.360Z"}
{"msg":"To be clear, I'm not suggesting that everything you propose will be accepted. For example, I would not have agreed that a few days before a release-candidate, we will allow a single person to merge changes to the master branch, and I would have explained my reasoning.","username":"JonathanLevi","ts":"2017-06-29T15:11:23.855Z"}
{"msg":"But hey, that would have been only one (Jonathan's) vote. If you make a good case and the majority approves it - then, BOOM, you have made fabric great again! (joking ;-))","username":"JonathanLevi","ts":"2017-06-29T15:12:16.872Z"}
{"msg":"I know that this governance model has some overheads, etc., but that same model would not allow us to disable a rule temporarily just because another SDK maintainer (Jim, in this case) is/was away for a week or two.","username":"JonathanLevi","ts":"2017-06-29T15:13:24.344Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-06-29T15:13:33.281Z"}
{"msg":"Anyway, I felt that I should spend enough time to relate to that post of yours here, when I have a change.","username":"JonathanLevi","ts":"2017-06-29T15:14:22.209Z"}
{"msg":"Mainly because of https://chat.hyperledger.org/channel/fabric-maintainers?msg=FoxhiD8QpjegZ88ST","username":"JonathanLevi","ts":"2017-06-29T15:14:35.247Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FoxhiD8QpjegZ88ST","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FoxhiD8QpjegZ88ST","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hope you see what I mean.","username":"JonathanLevi","ts":"2017-06-29T15:14:51.839Z"}
{"msg":"======\nOn the other topic:","username":"JonathanLevi","ts":"2017-06-29T15:18:21.133Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=znqRuEjRBBHuQucQ8) ","username":"JonathanLevi","ts":"2017-06-29T15:18:29.374Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=znqRuEjRBBHuQucQ8","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=znqRuEjRBBHuQucQ8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I tend to agree with @jyellick and @greg.haskins ","username":"JonathanLevi","ts":"2017-06-29T15:18:59.103Z"}
{"msg":"Another data point that we should not forget to take into a consideration... it is very plausible that one we \"open the gate\" and allow people to contribute to the next version (v1.1)... we are going to have several more companies/organizations/groups and individuals that have been waiting (sometimes, patiently) for us to stabilize the *master* brach (1.0, which will serve as the baseline).","username":"JonathanLevi","ts":"2017-06-29T15:19:30.398Z"}
{"msg":"There have been so many requests that we have postponed following the maintainers' agreement on not doing anything before we stabilize the master branch (for 1.0)... these did not go away.","username":"JonathanLevi","ts":"2017-06-29T15:20:41.522Z"}
{"msg":"What I'm basically saying is that we should really think the (development) branching proposal carefully.","username":"JonathanLevi","ts":"2017-06-29T15:21:27.883Z"}
{"msg":"BTW: As a reminder, if part of the suggestion/proposal will be that we want to work with a branching model that is easier on Github, much more so than in Gerrit... by all means, let's list it as part of the things we should consider.","username":"JonathanLevi","ts":"2017-06-29T15:23:26.499Z"}
{"msg":"We did put some of these \"on hold\" when we were in the \"midst of stabilizing\" the master branch, but these arguments were not forgotten...","username":"JonathanLevi","ts":"2017-06-29T15:24:16.472Z"}
{"msg":"I'm willing to take a fresh look at GitHUb, but I don't believe that it will yield the same level of support for reviews. Maybe there are add-ons we could leverage. Also, I don't believe that GH Issues are adequate, either. However, I will go into it with an open mind. Of course, I am also mindful as @JonathanLevi said that there is a lot of pent up demand and we should not slow that down any longer than we already have. ","username":"cbf","ts":"2017-06-29T16:30:06.158Z"}
{"msg":"@cbf I dont think we need to abandon gerrit per se, at least not for that reason","username":"greg.haskins","ts":"2017-06-30T11:38:58.859Z"}
{"msg":"for example: even if we switched back to GH, we would have to decide how branches are handled","username":"greg.haskins","ts":"2017-06-30T11:39:28.351Z"}
{"msg":"e.g. do we expect users to push (I doubt it)?  Would maintainers be responsible for merging development branch stuff out manually and they push?  Would we have automation to merge stuff out when it passes some criteria?","username":"greg.haskins","ts":"2017-06-30T11:41:03.935Z"}
{"msg":"and I would point out, options B and C would not be predicated on moving away from gerrit","username":"greg.haskins","ts":"2017-06-30T11:41:23.478Z"}
{"msg":"for B, we could enable the merging in gerrit again (there are a few challenges with how this works that we need to be careful of)","username":"greg.haskins","ts":"2017-06-30T11:42:07.088Z"}
{"msg":"for C, we could have that automation work against either GH or Gerrit, it wouldnt matter","username":"greg.haskins","ts":"2017-06-30T11:42:27.472Z"}
{"msg":"and all I have ever really pushed for was something like C","username":"greg.haskins","ts":"2017-06-30T11:42:49.275Z"}
{"msg":"(because B sucks ;)","username":"greg.haskins","ts":"2017-06-30T11:42:55.724Z"}
{"msg":"but in addition to C, I also said that we shouldnt cut to the branch model until C is in place","username":"greg.haskins","ts":"2017-06-30T11:43:13.901Z"}
{"msg":"with regards to ideas on what this might look like: I imagine it like a CICD pipeline where the _front_ end of the pipeline is the gerrit approval","username":"greg.haskins","ts":"2017-06-30T11:44:07.564Z"}
{"msg":"and that kicks off a process which runs the patch through a rigorous process, the end result being a merge to some \"stable\" branch","username":"greg.haskins","ts":"2017-06-30T11:45:21.134Z"}
{"msg":"so, basically, CRs are \"feature branches\" (they really are when you think about it), and some other branch (like \"master\") is your stable branch","username":"greg.haskins","ts":"2017-06-30T11:48:00.731Z"}
{"msg":"and things only move to stable via a combination of human review/approval (gerrit) and an automated test suite (jenkins)","username":"greg.haskins","ts":"2017-06-30T11:48:59.510Z"}
{"msg":"then, if we want to have a second level (to move stable to release, etc) we could just repeat that template","username":"greg.haskins","ts":"2017-06-30T11:49:40.953Z"}
{"msg":"they are, but we also have a policy of keeping CRs limited in size so that they can be reviewed","username":"cbf","ts":"2017-06-30T11:49:50.011Z"}
{"msg":"agreed","username":"greg.haskins","ts":"2017-06-30T11:49:58.308Z"}
{"msg":"and I also agree that is important","username":"greg.haskins","ts":"2017-06-30T11:50:07.280Z"}
{"msg":"a code dump of 5kLOC for a new feature would be a good long weekend of review","username":"cbf","ts":"2017-06-30T11:50:12.691Z"}
{"msg":"(and actually, kind of one of my main points","username":"greg.haskins","ts":"2017-06-30T11:50:17.078Z"}
{"msg":"if we can take anything away from the CICD concept, its that branching is the antithesis ","username":"greg.haskins","ts":"2017-06-30T11:50:49.320Z"}
{"msg":"small verifiable changes to a small stream, so you can do integration/verification","username":"greg.haskins","ts":"2017-06-30T11:51:10.875Z"}
{"msg":"I think we should start requiring feature flags for new features/function that are then developed iteratively","username":"cbf","ts":"2017-06-30T11:51:19.768Z"}
{"msg":"It's not only that. If you have 2 feature branches that have conflicts - when 1 of them is merged the other one will have lots of refactoring (sort of merge conflict resolution) to do, and that is very error prone","username":"yacovm","ts":"2017-06-30T11:51:35.994Z"}
{"msg":"In contrast- if you use the gerrit \"flow\" - you move in small steps and if there is a regression it's pretty easy to identify the problem. ","username":"yacovm","ts":"2017-06-30T11:52:37.221Z"}
{"msg":"@yacovm right, and that is always going to be the case no matter which model...so if you try to keep things as small changes with true \"continuous integration\" you can avoid the worst effects of that","username":"greg.haskins","ts":"2017-06-30T11:52:47.935Z"}
{"msg":"with merging of feature branches it's going to be very hard.","username":"yacovm","ts":"2017-06-30T11:52:48.891Z"}
{"msg":"agreed","username":"greg.haskins","ts":"2017-06-30T11:52:55.916Z"}
{"msg":"the world is moving away from big-branch-development","username":"greg.haskins","ts":"2017-06-30T11:53:06.552Z"}
{"msg":"and more to single-stream delivery","username":"greg.haskins","ts":"2017-06-30T11:53:18.333Z"}
{"msg":"right, hence why I am pushing for more and more testing beyond the UT we have","username":"cbf","ts":"2017-06-30T11:53:19.590Z"}
{"msg":"including nightly and weekly tests, destructive and long-running tests etc","username":"cbf","ts":"2017-06-30T11:53:50.621Z"}
{"msg":"so I think that Dave Huseby had a point regarding the 3 branches- (master, release and pre-release that is in between)","username":"yacovm","ts":"2017-06-30T11:53:57.961Z"}
{"msg":"I think though that it's possible to have only 2 branches","username":"yacovm","ts":"2017-06-30T11:54:05.108Z"}
{"msg":"so based on this, I do not think the gerrit model is \"bad\"...i just think we need more plumbing on the output ;)","username":"greg.haskins","ts":"2017-06-30T11:54:06.385Z"}
{"msg":"and create some branch in between","username":"yacovm","ts":"2017-06-30T11:54:10.890Z"}
{"msg":"when doing the \"shift\"","username":"yacovm","ts":"2017-06-30T11:54:16.111Z"}
{"msg":"when doing the \"shift\"","username":"yacovm","ts":"2017-06-30T11:54:16.111Z"}
{"msg":"well, yes agree... and we DO need a better process for release cutting","username":"cbf","ts":"2017-06-30T11:54:30.478Z"}
{"msg":"because currently, we cannot test a release until it is cut","username":"cbf","ts":"2017-06-30T11:54:45.330Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=MLu6hRYYN5ZkKaSwA) @cbf yeah, agree with all of that","username":"greg.haskins","ts":"2017-06-30T11:55:12.203Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=MLu6hRYYN5ZkKaSwA","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=MLu6hRYYN5ZkKaSwA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"so we need a process NOT based on a tag, but based on a commit","username":"cbf","ts":"2017-06-30T11:55:29.016Z"}
{"msg":"right","username":"greg.haskins","ts":"2017-06-30T11:55:53.179Z"}
{"msg":"I strongly agree on the plumbing. We have e2e and it's stable, right?\nI believe that we *can* get eventually to a state where we have good integration tests ","username":"yacovm","ts":"2017-06-30T11:56:00.478Z"}
{"msg":"it's just a matter of work hours","username":"yacovm","ts":"2017-06-30T11:56:04.369Z"}
{"msg":"yes","username":"cbf","ts":"2017-06-30T11:56:10.208Z"}
{"msg":"each build produces artifacts that can be reference by the build-id, and if its \"good\", then its a candidate for tagging","username":"greg.haskins","ts":"2017-06-30T11:56:24.878Z"}
{"msg":"ill just throw one more thing out there: if we did this \"right\", there would be no need to make a distinction between master and release","username":"greg.haskins","ts":"2017-06-30T11:57:42.144Z"}
{"msg":"for a sufficiently rigorous verification pipeline, each commit that passes could be considered a release...just like how a CICD pipeline promotes a deployment","username":"greg.haskins","ts":"2017-06-30T11:58:28.252Z"}
{"msg":"but in our case, a \"deployment\" is just release artifacts and a commit to a branch","username":"greg.haskins","ts":"2017-06-30T11:58:47.186Z"}
{"msg":"the rub is in the \"sufficiently rigorous verification pipeline\", which we arent there yet","username":"greg.haskins","ts":"2017-06-30T11:59:06.238Z"}
{"msg":"yes, but we are a ways off from that state of CD","username":"cbf","ts":"2017-06-30T12:00:03.780Z"}
{"msg":"agreed","username":"greg.haskins","ts":"2017-06-30T12:00:11.610Z"}
{"msg":"so, for the time being, we could take that approach but with a few tiers","username":"greg.haskins","ts":"2017-06-30T12:00:50.236Z"}
{"msg":"because there is also a certain degree of discipline about that such that there is provision for live upgrades between commits (not just releases) and a maturity of consumption that is willing and able to consume at that rate","username":"cbf","ts":"2017-06-30T12:01:56.114Z"}
{"msg":"`, there would be no need to make a distinction between master and release` - if we enforce the discipline of introduction of new features incrementally, why wouldn't we treat each new feature as a series of simple CRs that can just be pushed to master","username":"muralisr","ts":"2017-06-30T12:03:16.772Z"}
{"msg":"is it because its hard to enforce that discipline ?","username":"muralisr","ts":"2017-06-30T12:03:41.042Z"}
{"msg":"@muralisr we currently do... what we haven't done is feature flags that enable/disable the new feature","username":"cbf","ts":"2017-06-30T12:08:15.918Z"}
{"msg":"can be enabled for testing and disabled for release until it is fully baked","username":"cbf","ts":"2017-06-30T12:08:33.142Z"}
{"msg":"@cbf so basically what we are saying is till such time we do the above we need an alternate branch strategy ? (get the feeling this might have all been discussed .. :-) )","username":"muralisr","ts":"2017-06-30T12:31:41.536Z"}
{"msg":"@muralisr no, we are deliberating 2 or 3 branch strategy presently ","username":"cbf","ts":"2017-06-30T12:36:42.313Z"}
{"msg":"the proposal we agreed to uses two","username":"cbf","ts":"2017-06-30T12:36:55.725Z"}
{"msg":"master and release","username":"cbf","ts":"2017-06-30T12:37:00.131Z"}
{"msg":"@dhuseby suggests we also need pre-release branch","username":"cbf","ts":"2017-06-30T12:37:19.909Z"}
{"msg":"the point has some merit but what we were discussing is that we need to change the whole process by which we cut a release to be independent of tag anyway","username":"cbf","ts":"2017-06-30T12:38:09.944Z"}
{"msg":"a third pre-release branch might serve that need","username":"cbf","ts":"2017-06-30T12:38:20.954Z"}
{"msg":"but we could also use master for this ","username":"cbf","ts":"2017-06-30T12:38:46.516Z"}
{"msg":"what I believe, though, is that we should cut over to a two branch model soon so that we can unleash post 1.0 development again - BUT that we do that in a disciplined manner","username":"cbf","ts":"2017-06-30T12:39:55.568Z"}
{"msg":"eg breaking changes should be disallowed to be merged unless we get maintainer consensus agreement that we will release a new major release","username":"cbf","ts":"2017-06-30T12:41:01.490Z"}
{"msg":"The question is - how often do we release and do we allow code in the release branch to exist even though it's not in use?","username":"yacovm","ts":"2017-06-30T12:41:10.063Z"}
{"msg":"my preference would be release about every 3 months","username":"cbf","ts":"2017-06-30T12:41:26.013Z"}
{"msg":"i.e a squad develops feature X via merging to master a change set at a time, and this code isn't \"activated\"","username":"yacovm","ts":"2017-06-30T12:41:31.794Z"}
{"msg":"2 if we can push it","username":"cbf","ts":"2017-06-30T12:41:37.272Z"}
{"msg":"and let's say they don't make it in time to the release","username":"yacovm","ts":"2017-06-30T12:41:39.734Z"}
{"msg":"what happens to the code that's in master?","username":"yacovm","ts":"2017-06-30T12:41:45.340Z"}
{"msg":"the integration tests need to be more robust I think for that","username":"cbf","ts":"2017-06-30T12:41:50.050Z"}
{"msg":"I think as long as it's not \"activated\" it's not that bad that it's there no?","username":"yacovm","ts":"2017-06-30T12:41:57.979Z"}
{"msg":"feature flag","username":"cbf","ts":"2017-06-30T12:41:58.693Z"}
{"msg":"right","username":"cbf","ts":"2017-06-30T12:42:04.132Z"}
{"msg":"and we make clear in release notes it is NOT supported","username":"cbf","ts":"2017-06-30T12:42:18.292Z"}
{"msg":"use at your own risk","username":"cbf","ts":"2017-06-30T12:42:24.522Z"}
{"msg":"but at the same time we removed the whole sBFT code from the release","username":"yacovm","ts":"2017-06-30T12:42:35.308Z"}
{"msg":"not just the YAML annotations","username":"yacovm","ts":"2017-06-30T12:42:38.997Z"}
{"msg":"yes, we'll restore that soon","username":"cbf","ts":"2017-06-30T12:42:59.901Z"}
{"msg":"we also hard coded disabling of javacc","username":"cbf","ts":"2017-06-30T12:43:12.544Z"}
{"msg":"ok","username":"yacovm","ts":"2017-06-30T12:43:20.863Z"}
{"msg":"One problem with this would seem to be maintaining the (IMO) somewhat artificial code coverage metrics.  If we allow for not fully tested function into the release, I expect we'll see those numbers plummet.  For instance adding SBFT back in alone will have a significant effect.","username":"jyellick","ts":"2017-06-30T12:46:16.266Z"}
{"msg":"@jyellick yes, well... certainly from my POV, tests SHOULD be merged WITH code not after the fact;-)","username":"cbf","ts":"2017-06-30T12:47:17.139Z"}
{"msg":"Agreed, though that does not help us in the SBFT case, and although I realize unit test is not for integration test, a feature which isn't fully implemented necessarily may not yet be able to pass tests for that feature.  I'd much rather have a unit test which covers a real code flow than great coverage numbers which just test for existing bugs.","username":"jyellick","ts":"2017-06-30T12:52:12.698Z"}
{"msg":"@jyellick ideally, we dont have any massive commit to the code base...just a stream of small, easy to review, fully meeting quality/lint/coverage standards CRs that may or may not be \"active\" by default","username":"greg.haskins","ts":"2017-06-30T12:54:32.074Z"}
{"msg":"and ideally, for each inactive feature, a CI matrix which still tests them enabled but does not gate the release flow","username":"greg.haskins","ts":"2017-06-30T12:54:54.385Z"}
{"msg":"in that ideal, something like SBFT would be trickled in as a CR series","username":"greg.haskins","ts":"2017-06-30T12:55:23.888Z"}
{"msg":"+1 to not bring SBFT back in wholesale and instead breaking it into a CR series","username":"jyellick","ts":"2017-06-30T12:56:32.214Z"}
{"msg":"agreed that would be ideal","username":"cbf","ts":"2017-06-30T13:00:34.843Z"}
{"msg":"and of course, by definition it is a plugin and so we could construct the release such that it was excluded in the release artifacts, no?","username":"cbf","ts":"2017-06-30T13:01:43.251Z"}
{"msg":"(without removing the code)","username":"cbf","ts":"2017-06-30T13:01:55.381Z"}
{"msg":"Certainly. Would you expect this to be an automated process or a manual one?","username":"jyellick","ts":"2017-06-30T13:03:41.789Z"}
{"msg":"I know there has been some talk of moving to go 1.8.  I hear the dynamic linking is not great, but we could potentially use this to achieve that goal without resorting to dynamic code generation.","username":"jyellick","ts":"2017-06-30T13:07:42.771Z"}
{"msg":"I think like we have done with pkcs11 make it a build option","username":"cbf","ts":"2017-06-30T14:25:44.429Z"}
{"msg":"Please review and vote https://jira.hyperledger.org/browse/FAB-4542?focusedCommentId=27723&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-27723","username":"cbf","ts":"2017-06-30T19:34:30.623Z"}
{"msg":"So, I'm seeing a ton of churn in code again... the ca certs vs tls certs, plus move of examples out of some repositories--- these do not seem at all like the sorts of changes that should be happening after a release-candidate tag. I'm not a maintainer, but I'm having deja vue to February or so when the install, instantiate change was made, TLS was first introduced etc. At that time my sense was that was recognized as a necessary evil by the maintaining team in order to get the last major changes in in a run up to a v1 release. My initial sense of looking over the https://jira.hyperledger.org/browse/FAB-4626 and fabric-samples creation is that its dis-ingenuous to be marking these beta, let alone release candidates. I do not expect rcs to have this many api breakages and changes... Anyways, again I'm not a maintainer, but I hope a conversation could be had on this. I don't see any documented reference to the ca cert vs tls ca certs in getting started or first network and did not see any documentation included in the above linked issues & associated CRs at first glance. I think its critically important that fabric have the stability and associated documentation and examples to easily understand and stand up on release, and I think these sorts of changes are counter productive to this goal, particularly while announcing exit of incubation and release candidates progress.","username":"mrkiouak","ts":"2017-07-01T21:04:53.738Z"}
{"msg":"moving examples isn't churn, we did that to make them more accessible without the entire code base","username":"cbf","ts":"2017-07-01T21:49:37.610Z"}
{"msg":"one of the main foci has been improving the documentation and the initial developer experience ","username":"cbf","ts":"2017-07-01T21:51:48.806Z"}
{"msg":"if you have feedback on things we could add to the documentation to improve it, we would welcome it gladly","username":"cbf","ts":"2017-07-01T21:52:32.027Z"}
{"msg":"a client that previously used it's ca cert for tls no longer functions. the fabric/example/cluster emits a client.config that should provide all that a client needs in order to communicate with a peer (or at least, this is how the example has functioned since it was added). with the recent split of ca cerrts and tls certs, the examples from e.g. fabric-chaintool/examples (any, but example02 for sake of conversation) no longer work","username":"mrkiouak","ts":"2017-07-01T22:01:21.271Z"}
{"msg":"theres currently no client documentation (that i can find) for any of the sdks that describe how their api supports the new ca cert plus tlsca cert format","username":"mrkiouak","ts":"2017-07-01T22:01:46.436Z"}
{"msg":"i don't think its unreasonable to expect examples that are part of the core fabric repo to no longer support a given client interaction they previously have-- perhaps this is related to the fabric-samples move","username":"mrkiouak","ts":"2017-07-01T22:02:34.986Z"}
{"msg":"the addition of a startup option to use ca certs as tls cert also seems like an appropriate part of this change particularly considering its inclusion in rc stage-- this would have allowed for the, admittedly important, separation of ca certs and tls certs and corresponding management, while not breaking any existing behavior in a final beta, early rc stage.","username":"mrkiouak","ts":"2017-07-01T22:12:39.154Z"}
{"msg":"Hello @mrkiouak !\n1. Thanks for these ^^^\n2. Can we move this discussion to #fabric-release?\n3. Will you be kind enough to create/open detailed JIRA tickets?","username":"JonathanLevi","ts":"2017-07-01T22:52:38.513Z"}
{"msg":"Hi all, FYI I am on family holiday until the 17th.  Availability will be spotty at best","username":"greg.haskins","ts":"2017-07-02T13:33:21.247Z"}
{"msg":"Have a good time @greg.haskins !","username":"JonathanLevi","ts":"2017-07-02T20:41:43.653Z"}
{"msg":"Has joined the channel.","username":"alburt","ts":"2017-07-03T10:49:44.522Z","type":"uj"}
{"msg":"Has joined the channel.","username":"paapighoda","ts":"2017-07-03T15:12:48.188Z","type":"uj"}
{"msg":"@mastersingh24 https://jira.hyperledger.org/browse/FAB-5177","username":"greg.haskins","ts":"2017-07-05T02:47:33.980Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-4883","username":"greg.haskins","ts":"2017-07-05T02:49:45.632Z"}
{"msg":"@mastersingh24 Those are the issues we spoke of the other day privately","username":"greg.haskins","ts":"2017-07-05T02:50:10.381Z"}
{"msg":"@cbf @JonathanLevi ^^^ Those two need to be addressed before cutting v1.0 IMO","username":"greg.haskins","ts":"2017-07-05T02:50:35.824Z"}
{"msg":"FAB-4883 is solved here: https://gerrit.hyperledger.org/r/#/c/10967/...the WIP tag is because I wanted to clean up the comments/commit-msg","username":"greg.haskins","ts":"2017-07-05T02:53:10.090Z"}
{"msg":"FAB-5177 doesnt have a CR but the solution is simple: We just need to stop packing the shim into the ccenv (via the Makefile) and also adjust the \"peer package\" logic to not filter the shim out any more","username":"greg.haskins","ts":"2017-07-05T02:53:10.101Z"}
{"msg":"given that I am on holiday and I unfortunately/fortunately (depending on who you ask) didn't bring my work laptop with me it will be a little tough for me to crank those out","username":"greg.haskins","ts":"2017-07-05T02:54:15.998Z"}
{"msg":"i do have a little meager MacBook Air with me, currently devoid of Hyperledger tools, but ill see what I can do","username":"greg.haskins","ts":"2017-07-05T02:54:59.272Z"}
{"msg":"also, if we decide to move on 5177, ill need to update chaintool to match...though I think we can safely move on this is a point release after v1.0","username":"greg.haskins","ts":"2017-07-05T02:56:10.029Z"}
{"msg":"e.g. v1.0.1 has a chaintool update","username":"greg.haskins","ts":"2017-07-05T02:56:22.088Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=sh465rsdgcNsWpFfv) I agree.","username":"JonathanLevi","ts":"2017-07-05T09:11:44.086Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=sh465rsdgcNsWpFfv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=sh465rsdgcNsWpFfv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"---","username":"JonathanLevi","ts":"2017-07-05T09:11:45.085Z"}
{"msg":"Is the e2e test/build failing ?","username":"JonathanLevi","ts":"2017-07-05T09:11:57.200Z"}
{"msg":"https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/930/","username":"JonathanLevi","ts":"2017-07-05T09:12:24.574Z"}
{"msg":"https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/\n\nFailed Build #930 (Jul 4, 2017 7:29:33 PM) is red.","username":"JonathanLevi","ts":"2017-07-05T09:13:06.558Z"}
{"msg":"https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/\n\nFailed Build #930 (Jul 4, 2017 7:29:33 PM) (It is red since the last merge, I believe)","username":"JonathanLevi","ts":"2017-07-05T09:13:06.558Z"}
{"msg":"@cbf @JonathanLevi I would like to get https://jira.hyperledger.org/browse/FAB-5165 in. \nIt's a minimal change - just adding 8 lines and removing 20 lines and it fixes a very deep performance problem in gossip","username":"yacovm","ts":"2017-07-05T10:01:45.730Z"}
{"msg":"@cbf @JonathanLevi I would like to get https://jira.hyperledger.org/browse/FAB-5165 in. \nIt's a minimal change - just adding 8 lines and removing 20 lines and it fixes a very critical performance problem in gossip","username":"yacovm","ts":"2017-07-05T10:01:45.730Z"}
{"msg":"I agree and so does @mastersingh24. Any objections here? ","username":"JonathanLevi","ts":"2017-07-05T10:22:51.472Z"}
{"msg":"For formality, let's add a vote quickly?","username":"JonathanLevi","ts":"2017-07-05T10:23:31.075Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-5165","username":"JonathanLevi","ts":"2017-07-05T10:23:43.397Z"}
{"msg":"@JonathanLevi are you considering an RC2 after all these changes go in?","username":"sstone1","ts":"2017-07-05T10:35:09.993Z"}
{"msg":"I'm not 100% sure yet. I am actually waiting on an external security analysis report/results...","username":"JonathanLevi","ts":"2017-07-05T10:35:56.740Z"}
{"msg":"External, meaning, being carried by a third party... ","username":"JonathanLevi","ts":"2017-07-05T10:36:36.274Z"}
{"msg":"ah okay","username":"sstone1","ts":"2017-07-05T10:36:50.376Z"}
{"msg":"FAB-5177 worries me a bit - is there any impact to existing applications installing chaincode using the Node.js SDK?","username":"sstone1","ts":"2017-07-05T10:37:38.427Z"}
{"msg":"you might not know, so I'll @greg.haskins on that one ;)","username":"sstone1","ts":"2017-07-05T10:38:01.419Z"}
{"msg":"we don't vendor the shim so I'm thinking probably not, and the auto vendor magic will take care of it for us","username":"sstone1","ts":"2017-07-05T10:38:31.688Z"}
{"msg":"Yes, yes, I'm well aware of these.","username":"JonathanLevi","ts":"2017-07-05T10:38:32.723Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=FxJu7aFricdQPqxyg) ","username":"JonathanLevi","ts":"2017-07-05T10:38:39.050Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FxJu7aFricdQPqxyg","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FxJu7aFricdQPqxyg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"ah, i forget, you know everything ;)","username":"sstone1","ts":"2017-07-05T10:39:00.342Z"}
{"msg":"At least, everything that's posted here ;-)","username":"JonathanLevi","ts":"2017-07-05T10:39:12.615Z"}
{"msg":"Trying to, at the very least. Speaking of which, would you object to 5177 ?","username":"JonathanLevi","ts":"2017-07-05T10:39:51.333Z"}
{"msg":"Or would you suggest that if we merge it, we should add another milestone?","username":"JonathanLevi","ts":"2017-07-05T10:40:09.215Z"}
{"msg":"i don't object to it but it seems a big change to sneak into the 1.0 final release, which is why i wondered if you were cutting an rc2","username":"sstone1","ts":"2017-07-05T10:40:20.587Z"}
{"msg":"We should probably move these discussions to the #fabric-release channel. I first wanted to hear back from the maintainters...","username":"JonathanLevi","ts":"2017-07-05T10:40:42.172Z"}
{"msg":"OK, noted. @sstone1. ","username":"JonathanLevi","ts":"2017-07-05T10:40:57.380Z"}
{"msg":"In a line: we don't know yet whether we are going for an RC2. Trying to collect \"all\" info today and tomorrow...","username":"JonathanLevi","ts":"2017-07-05T10:41:45.712Z"}
{"msg":":+1: ok, thanks - will keep my eye out for updates","username":"sstone1","ts":"2017-07-05T10:42:00.248Z"}
{"msg":"Thank you.","username":"JonathanLevi","ts":"2017-07-05T10:42:09.993Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=8kPj8XnSkkgNEyGB6) \n@sstone1, can you pls do me a favor?","username":"JonathanLevi","ts":"2017-07-05T11:04:03.660Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=8kPj8XnSkkgNEyGB6","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=8kPj8XnSkkgNEyGB6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"depends","username":"sstone1","ts":"2017-07-05T11:04:28.200Z"}
{"msg":"Can you please post this comment of yours on the JIRA ticket?","username":"JonathanLevi","ts":"2017-07-05T11:04:32.930Z"}
{"msg":"sure","username":"sstone1","ts":"2017-07-05T11:04:35.751Z"}
{"msg":"Something along the lines of \"I would caution against getting this merged right now if we are still on track to releasing the \"ga\" version very soon, skipping the v1.0.0-rc2\"","username":"JonathanLevi","ts":"2017-07-05T11:05:37.370Z"}
{"msg":"Or something along these lines. Mind you, I have lived outside on London for so many years... these carefully worded \"reservations\" do not come as natural to me as they used to ;-)","username":"JonathanLevi","ts":"2017-07-05T11:06:17.576Z"}
{"msg":"Or something along these lines. Mind you, I have lived outside of London for so many years... these carefully worded \"reservations\" do not come as natural to me as they used to ;-)","username":"JonathanLevi","ts":"2017-07-05T11:06:17.576Z"}
{"msg":"done","username":"sstone1","ts":"2017-07-05T11:08:03.715Z"}
{"msg":"Thank you. This way, everybody can see this (voting maintainers and others). Cheers.","username":"JonathanLevi","ts":"2017-07-05T11:08:37.059Z"}
{"msg":"np","username":"sstone1","ts":"2017-07-05T11:09:10.491Z"}
{"msg":"@greg.haskins The autovendoring that's currently in place is technically not \"wrong\"...  https://gerrit.hyperledger.org/r/#/c/10967 makes it nicer but code as it stands works as well I think. Agree ?  I had added a comment to https://jira.hyperledger.org/browse/FAB-4883 with details","username":"muralisr","ts":"2017-07-05T12:14:50.473Z"}
{"msg":"@JonathanLevi @mastersingh24 ^^ just FYI... will pull  https://gerrit.hyperledger.org/r/#/c/10967 and test so we can go with that if thats what we want to do","username":"muralisr","ts":"2017-07-05T12:15:45.619Z"}
{"msg":"Is there a workaround for the vendoring issue?","username":"yacovm","ts":"2017-07-05T12:17:16.677Z"}
{"msg":"@muralisr no, CR 10967 is not cosmetic. @C0rWin pointed out an issue where a chaincode that is written under fabric/examples/chaincode would autovendor wrong","username":"greg.haskins","ts":"2017-07-05T12:37:55.576Z"}
{"msg":"it turned out the problem was more generic than fabric/examples","username":"greg.haskins","ts":"2017-07-05T12:38:16.831Z"}
{"msg":"Basically the current code assumes $pkg and $pkg/vendor should not auto-vendor","username":"greg.haskins","ts":"2017-07-05T12:39:07.809Z"}
{"msg":"The CR fixes that assumption so that the vendor folder is not assumed to be in the final $pkg/vendor location","username":"greg.haskins","ts":"2017-07-05T12:39:52.014Z"}
{"msg":"@greg.haskins I used @C0rWin chaincode under \"github.com/hyperledger/fabric/mycc\" and deployed it successfully ","username":"muralisr","ts":"2017-07-05T12:40:19.879Z"}
{"msg":"(before the fix)","username":"muralisr","ts":"2017-07-05T12:40:32.893Z"}
{"msg":"Try one with a deeper hierarchy ","username":"greg.haskins","ts":"2017-07-05T12:40:56.338Z"}
{"msg":"and also vaguely recall discussing the multiple \"vendor\" scenario ","username":"muralisr","ts":"2017-07-05T12:40:58.649Z"}
{"msg":"But try this scenario:","username":"greg.haskins","ts":"2017-07-05T12:41:37.414Z"}
{"msg":"Chaincode pkg foo/bar/baz","username":"greg.haskins","ts":"2017-07-05T12:41:56.527Z"}
{"msg":"Vendor some things in GOPATH/src/foo/vendor ","username":"greg.haskins","ts":"2017-07-05T12:42:25.525Z"}
{"msg":"What should happen is that \"foo/vendor/$dep\" remains unchanged ","username":"greg.haskins","ts":"2017-07-05T12:43:12.082Z"}
{"msg":"right","username":"muralisr","ts":"2017-07-05T12:43:32.249Z"}
{"msg":"the chaincode's original vendoring should remain ","username":"muralisr","ts":"2017-07-05T12:43:50.042Z"}
{"msg":"and it doesn't ?","username":"muralisr","ts":"2017-07-05T12:43:59.903Z"}
{"msg":"But mainline will auto vendor that was foo/bar/baz/vendor/foo/vendor/$dep","username":"greg.haskins","ts":"2017-07-05T12:44:02.560Z"}
{"msg":"This CR will fix that scenario","username":"greg.haskins","ts":"2017-07-05T12:44:27.050Z"}
{"msg":"oh wait I misunderstood","username":"muralisr","ts":"2017-07-05T12:44:30.826Z"}
{"msg":"will experiment","username":"muralisr","ts":"2017-07-05T12:44:36.018Z"}
{"msg":"I was going by @C0rWin original scenario","username":"muralisr","ts":"2017-07-05T12:44:50.295Z"}
{"msg":"The basic gist is mainline doesn't understand that golang censoring can happen at any level of the package","username":"greg.haskins","ts":"2017-07-05T12:45:30.804Z"}
{"msg":"Vendoring not censoring","username":"greg.haskins","ts":"2017-07-05T12:45:45.453Z"}
{"msg":"Autocorrect","username":"greg.haskins","ts":"2017-07-05T12:45:53.689Z"}
{"msg":":-)","username":"muralisr","ts":"2017-07-05T12:45:57.378Z"}
{"msg":" foo/bar/baz/vendor/foo/vendor/$dep would work just as well, or  wouldn't it ?","username":"muralisr","ts":"2017-07-05T12:46:49.612Z"}
{"msg":"Afaik, the only thing missing in  CR 10967 is good comments/commit messagr","username":"greg.haskins","ts":"2017-07-05T12:46:55.156Z"}
{"msg":"just that it would become chaincode's vendor","username":"muralisr","ts":"2017-07-05T12:47:14.522Z"}
{"msg":"I suspect it might, if but look strange.  But I also recall that @C0rWin found this because something was failing","username":"greg.haskins","ts":"2017-07-05T12:48:07.963Z"}
{"msg":"ok","username":"muralisr","ts":"2017-07-05T12:48:20.588Z"}
{"msg":"The more critical decision for 1.0 is the shim/no-shim decision","username":"greg.haskins","ts":"2017-07-05T12:48:51.378Z"}
{"msg":"I didn't read that it failed for him (just that it looked strange)","username":"muralisr","ts":"2017-07-05T12:49:03.812Z"}
{"msg":"I didn't read that it failed for him (just that it looked strange) ... but could be wrong about this","username":"muralisr","ts":"2017-07-05T12:49:03.812Z"}
{"msg":"but will definitely experiment","username":"muralisr","ts":"2017-07-05T12:49:09.921Z"}
{"msg":"There seem to be way too much fragility in pre-including the shim","username":"greg.haskins","ts":"2017-07-05T12:49:51.571Z"}
{"msg":"ok","username":"muralisr","ts":"2017-07-05T12:49:57.243Z"}
{"msg":"Play with the shim time stamp interface and I think you will see what I mean","username":"greg.haskins","ts":"2017-07-05T12:50:27.491Z"}
{"msg":"Isn't there a workaround for the issue, Greg?","username":"yacovm","ts":"2017-07-05T12:50:54.469Z"}
{"msg":"Iirc ","username":"greg.haskins","ts":"2017-07-05T12:50:54.968Z"}
{"msg":"@yacovm which?","username":"greg.haskins","ts":"2017-07-05T12:51:16.166Z"}
{"msg":"Can't you just put the imports according to what the shim would \"see\"","username":"yacovm","ts":"2017-07-05T12:51:29.140Z"}
{"msg":"although it doesn't compile in the IDE?","username":"yacovm","ts":"2017-07-05T12:51:34.427Z"}
{"msg":"it's stupid but won't it work?","username":"yacovm","ts":"2017-07-05T12:51:41.842Z"}
{"msg":"Not that I am aware of","username":"greg.haskins","ts":"2017-07-05T12:51:43.738Z"}
{"msg":"but if you think of it - the chaincode shim gets files in some way, right?","username":"yacovm","ts":"2017-07-05T12:52:03.404Z"}
{"msg":"Besides even if true, that's hacky.  Let's get this right before 1.0","username":"greg.haskins","ts":"2017-07-05T12:52:17.574Z"}
{"msg":"can't you \"predit\" this file structure","username":"yacovm","ts":"2017-07-05T12:52:18.514Z"}
{"msg":"and then write the CC in the way it would work when it would be compiled in the container?","username":"yacovm","ts":"2017-07-05T12:52:35.033Z"}
{"msg":"I'm not sure.  But I am of the opinion that the mechanism of pre-including the deps is fragile in general, and of less value now that we can auto vendor... therefore the more conservative step is to eliminate the feature for 1.0 and we can revisit optimization in a future release","username":"greg.haskins","ts":"2017-07-05T12:55:45.026Z"}
{"msg":"It's not just the time stamp thing.  There is a good deal of other fragility that I have seen come across my desk","username":"greg.haskins","ts":"2017-07-05T12:56:37.912Z"}
{"msg":"Therefore, the proposal would be to stop assuming the ABI at the shim/golang level (which is poorly managed) and shift to relying on the protobuf/grpc level (which was designed for this)","username":"greg.haskins","ts":"2017-07-05T12:58:16.839Z"}
{"msg":"I also think we should shift SDK thinking to only support \"peer package\" / \"chaintool package\" outputs, rather than trying to replicate the packagers","username":"greg.haskins","ts":"2017-07-05T12:59:47.402Z"}
{"msg":"Which, with auto vendoring especially, are not trivial","username":"greg.haskins","ts":"2017-07-05T13:00:09.809Z"}
{"msg":"`I also think we should shift SDK thinking to only support \"peer package\" / \"chaintool package\" outputs, rather than trying to replicate the packagers` ... agree with that (but can be done post 1.0). Will also make it easy to keep all SDKs uniform","username":"muralisr","ts":"2017-07-05T13:02:06.140Z"}
{"msg":"Agree SDK can be post release","username":"greg.haskins","ts":"2017-07-05T13:02:32.524Z"}
{"msg":"The decision to stop packaging the shim should not wait though","username":"greg.haskins","ts":"2017-07-05T13:02:56.765Z"}
{"msg":"but if we don't include the shim now we can't use the APIs (such as timestamp) it exposes","username":"muralisr","ts":"2017-07-05T13:02:58.589Z"}
{"msg":"true ?","username":"muralisr","ts":"2017-07-05T13:03:03.736Z"}
{"msg":"ie it will break existing aps","username":"muralisr","ts":"2017-07-05T13:03:19.202Z"}
{"msg":"Well, the idea would be that the auto vendor logic would package whatever version of the shim/timestamp-lib the chaincode author used","username":"greg.haskins","ts":"2017-07-05T13:04:08.941Z"}
{"msg":"Not that it couldn't be used ","username":"greg.haskins","ts":"2017-07-05T13:04:23.659Z"}
{"msg":"Right now the dep is stripped from the package with the assumption that ccenv will satisfy it","username":"greg.haskins","ts":"2017-07-05T13:05:24.220Z"}
{"msg":"Which is proving to be unreliable given the way golang, GOPATH, vendoring, and ABI differences work","username":"greg.haskins","ts":"2017-07-05T13:06:26.004Z"}
{"msg":"right","username":"muralisr","ts":"2017-07-05T13:06:32.322Z"}
{"msg":"```import (\n        \"github.com/golang/protobuf/ptypes/timestamp\"\n\n        \"github.com/hyperledger/fabric/protos/ledger/queryresult\"\n        pb \"github.com/hyperledger/fabric/protos/peer\"\n)```","username":"muralisr","ts":"2017-07-05T13:06:37.085Z"}
{"msg":"those are the deps in the interfaces","username":"muralisr","ts":"2017-07-05T13:06:53.254Z"}
{"msg":"let me make sure I understand Greg... so basically this would mean two things (1) remove ccenv and (2) change autovendoring to add those if found","username":"muralisr","ts":"2017-07-05T13:08:24.636Z"}
{"msg":"Not quite:  we still want ccenv","username":"greg.haskins","ts":"2017-07-05T13:08:55.546Z"}
{"msg":"Change would be to stop injecting the goshim.tar.gz into it, and to stop filtering the shim from the packager","username":"greg.haskins","ts":"2017-07-05T13:09:39.091Z"}
{"msg":"oops I meant remove shim from ccenv","username":"muralisr","ts":"2017-07-05T13:09:51.377Z"}
{"msg":"Right","username":"greg.haskins","ts":"2017-07-05T13:09:57.004Z"}
{"msg":"and","username":"muralisr","ts":"2017-07-05T13:10:00.299Z"}
{"msg":"```        // --------------------------------------------------------------------------------------\n        // Remove any imports that are provided by the ccenv or system\n        // --------------------------------------------------------------------------------------\n        var provided = map[string]bool{\n                \"github.com/hyperledger/fabric/core/chaincode/shim\": true,\n                \"github.com/hyperledger/fabric/protos/peer\":         true,\n        }```","username":"muralisr","ts":"2017-07-05T13:10:03.593Z"}
{"msg":"remove ^^^ as we will pick up dependencies via autovendoring","username":"muralisr","ts":"2017-07-05T13:10:21.856Z"}
{"msg":"Right.  Just remove the notion of \"provided\"","username":"greg.haskins","ts":"2017-07-05T13:10:29.126Z"}
{"msg":"Other filters like system deps should remain","username":"greg.haskins","ts":"2017-07-05T13:10:52.045Z"}
{"msg":"seems drastic at this stage... but will yield  the floor...","username":"muralisr","ts":"2017-07-05T13:11:11.715Z"}
{"msg":"I think code wise, it's simple.  Concept wise, it's more drastic yes, but so is inaction","username":"greg.haskins","ts":"2017-07-05T13:11:48.948Z"}
{"msg":"A big problem seems to be that people are not testing bigger chaincode apps as part of the CI","username":"greg.haskins","ts":"2017-07-05T13:12:25.105Z"}
{"msg":"Let's break this down to the \"common\" problem(s) that keep(s) creeping up - and they are mostly when using the \"peer chaincode package\" and \"peer chaincode install -p\" commands","username":"mastersingh24","ts":"2017-07-05T13:12:34.731Z"}
{"msg":"Let's break this down to the \"common\" problem(s) that keep(s) creeping up - and they are mostly when using the `peer chaincode package` and `peer chaincode install -p` commands","username":"mastersingh24","ts":"2017-07-05T13:12:34.731Z"}
{"msg":"So the problem is probably not as apparent to maintainers as I suspect it really is","username":"greg.haskins","ts":"2017-07-05T13:13:07.940Z"}
{"msg":"I don't see this when using the NodeSDK to package and install chaincode","username":"mastersingh24","ts":"2017-07-05T13:13:30.001Z"}
{"msg":"The problem is we made some bad decisions along the way (but let's leave those for now)","username":"mastersingh24","ts":"2017-07-05T13:13:55.371Z"}
{"msg":"I thought there was some unwritten consensus that peer cli isn't a \"production tool\" ? ","username":"yacovm","ts":"2017-07-05T13:14:14.784Z"}
{"msg":"That's interesting, but note that the SDK also doesn't auto-vendor","username":"greg.haskins","ts":"2017-07-05T13:14:16.685Z"}
{"msg":"(Yet)","username":"greg.haskins","ts":"2017-07-05T13:14:27.424Z"}
{"msg":"So not sure what that means inthis context","username":"greg.haskins","ts":"2017-07-05T13:14:50.292Z"}
{"msg":"Common issues:\n- need to use protos within chaincode (e.g. to parse the results of GetCreator() or GetHistoryForKey() )\n- use of proto Timestamp","username":"mastersingh24","ts":"2017-07-05T13:15:16.523Z"}
{"msg":"Agreed that was a poor design decision to expose proto timestamp.  Abstracting that would have mitigated here","username":"greg.haskins","ts":"2017-07-05T13:16:04.163Z"}
{"msg":"I'm missing someting...regardless of whether we use CLI or SDK, both use ccenv in the end an both would have same issues no @mastersingh24 ?","username":"muralisr","ts":"2017-07-05T13:17:14.081Z"}
{"msg":"nope","username":"mastersingh24","ts":"2017-07-05T13:17:58.585Z"}
{"msg":"gimme a sec to explain","username":"mastersingh24","ts":"2017-07-05T13:18:25.039Z"}
{"msg":"That's what's confusing me: you either have a dep and include it, or you don't.  The SDK will not help you include it but that shouldn't change whether your apps deps are satisfied in a way that compiles","username":"greg.haskins","ts":"2017-07-05T13:18:31.603Z"}
{"msg":"If simply not including the dep solves the problem, the auto vendoring sounds broken","username":"greg.haskins","ts":"2017-07-05T13:19:11.337Z"}
{"msg":"Sorry @mastersingh24 , you have the floor","username":"greg.haskins","ts":"2017-07-05T13:22:09.913Z"}
{"msg":"On mobile so easy to miss posts","username":"greg.haskins","ts":"2017-07-05T13:22:24.040Z"}
{"msg":"[ @mastersingh24 is very shy these days, isn't he? ]","username":"JonathanLevi","ts":"2017-07-05T13:22:36.585Z"}
{"msg":"@mastersingh24, pray continue...","username":"JonathanLevi","ts":"2017-07-05T13:23:05.056Z"}
{"msg":"Gotta run.  TBC","username":"greg.haskins","ts":"2017-07-05T13:25:45.322Z"}
{"msg":"OK - sorry - I am back","username":"mastersingh24","ts":"2017-07-05T13:35:18.363Z"}
{"msg":"Sorry - been testing a few things here","username":"mastersingh24","ts":"2017-07-05T14:21:16.303Z"}
{"msg":"As far as I can tell, the only package we seem to have an issue with is   `github.com/golang/protobuf/ptypes/timestamp`","username":"mastersingh24","ts":"2017-07-05T14:23:05.606Z"}
{"msg":"To be clear, what I am doing is actually \"vendoring\" all other dependencies within my chaincode package","username":"mastersingh24","ts":"2017-07-05T14:24:13.049Z"}
{"msg":"(that is - I'm not using the `peer chaincode package` to handle my dependencies for me","username":"mastersingh24","ts":"2017-07-05T14:24:39.734Z"}
{"msg":"(that is - I'm not using the `peer chaincode package` to handle my dependencies for me)","username":"mastersingh24","ts":"2017-07-05T14:24:39.734Z"}
{"msg":"In order to explicitly import and use `github.com/golang/protobuf/ptypes/timestamp`, I'm force to vendor `github.com/hyperledger/fabric/core/chaincode/shim` as well as `github.com/golang/protobuf/ptypes/timestamp`","username":"mastersingh24","ts":"2017-07-05T14:26:00.798Z"}
{"msg":"@mastersingh24 interesting.  As an experiment could you remove the \"provided\" filter from the packager and see if that vendors the shim in a similar way?","username":"greg.haskins","ts":"2017-07-05T15:32:31.365Z"}
{"msg":"sure thing","username":"mastersingh24","ts":"2017-07-05T15:37:57.885Z"}
{"msg":"I'd like to propose that we update the minimum Docker version to  `17.03.0-ce`  (basically Docker 1.13.1 with Docker's new version scheme).  The fabcar sample already requires Docker 1.13 or later, so we might as well go with `17.03.0-ce`  (ideally I'd love to prereq the newest Docker version - `17.06.0-ce` - but it might be too soon for that)","username":"mastersingh24","ts":"2017-07-05T20:18:40.565Z"}
{"msg":"Not sure if maybe we should open up a JIRA for a formal vote, but sounds reasonable to me","username":"jyellick","ts":"2017-07-05T20:22:20.919Z"}
{"msg":"We should - was just being lazy and checking here first before opening one up  ;)","username":"mastersingh24","ts":"2017-07-05T20:29:42.455Z"}
{"msg":"Has left the channel.","username":"MartinC","ts":"2017-07-06T12:09:51.968Z","type":"ul"}
{"msg":"Has joined the channel.","username":"shimos","ts":"2017-07-06T16:24:36.272Z","type":"uj"}
{"msg":"Hello, we have some pressing issue here: https://jira.hyperledger.org/browse/FAB-5188","username":"JonathanLevi","ts":"2017-07-06T20:25:43.862Z"}
{"msg":"Just to draw some attention. No panic, but suggestions welcome.","username":"JonathanLevi","ts":"2017-07-06T20:26:05.626Z"}
{"msg":"@jimthematrix are you around?","username":"JonathanLevi","ts":"2017-07-07T03:28:34.821Z"}
{"msg":"Jim doesn't get back until Monday","username":"weeds","ts":"2017-07-07T08:45:57.489Z"}
{"msg":"If there is an SDK item you want us to look at I can ask Brett- let me know","username":"weeds","ts":"2017-07-07T08:46:17.778Z"}
{"msg":"We are good. We have contained the situation.","username":"JonathanLevi","ts":"2017-07-07T12:45:34.002Z"}
{"msg":"@here: How does everybody feel about this? https://jira.hyperledger.org/browse/FAB-5177\nLet's agree on the right course of action, if others want to join the discussion/exchanges there, please .","username":"JonathanLevi","ts":"2017-07-07T13:09:00.352Z"}
{"msg":"Added my comment to the JIRA on testing @muralisr and I did yesterday","username":"mastersingh24","ts":"2017-07-07T13:09:37.022Z"}
{"msg":"Needless to say, I think we are good to go without it","username":"mastersingh24","ts":"2017-07-07T13:09:48.326Z"}
{"msg":"+1 @mastersingh24 @JonathanLevi ... I did make progress with `assuming they are broken, see if stuffing a vendored shim into the package solves the problem despite the dep being available in the ccenv.` comment from @greg.haskins to make sure if we really wanted to override the shim by vendoring it in the chaincode on top of ccenv","username":"muralisr","ts":"2017-07-07T13:14:47.599Z"}
{"msg":"+1 @mastersingh24 @JonathanLevi ... I did make progress with `assuming they are broken, see if stuffing a vendored shim into the package solves the problem despite the dep being available in the ccenv.` comment from @greg.haskins in FAB-5177 to make sure if we really wanted to override the shim by vendoring it in the chaincode on top of ccenv","username":"muralisr","ts":"2017-07-07T13:14:47.599Z"}
{"msg":"I did not complete it (got distracted) but got far enough to know that push come to shove we can do that","username":"muralisr","ts":"2017-07-07T13:15:07.792Z"}
{"msg":"I tested the above several times","username":"mastersingh24","ts":"2017-07-07T13:21:21.208Z"}
{"msg":"@muralisr if you're on the beach now, have fun...  it sounds like you asserted that we can vendor the stuff that's already in ccenv, so i don't think we have a problem except documenting it.  ","username":"binhn","ts":"2017-07-07T13:22:04.984Z"}
{"msg":"@binhn not yet but shortly leaving ..","username":"muralisr","ts":"2017-07-07T13:23:24.954Z"}
{"msg":"And so far, the only reason to vendor the shim is if you are deadset on doing the following:\n\nvar ts *timestamp.Timestamp\nts, _ = stub.GetTxTimestamp()\n\n(which there is no reason to do BTW)","username":"mastersingh24","ts":"2017-07-07T13:23:28.801Z"}
{"msg":"right, you could do `ts, _ := stub.GetTxTimestamp()` if you want to use the type used by shim","username":"muralisr","ts":"2017-07-07T13:24:26.031Z"}
{"msg":"@mastersingh24 could you comment on fab-5177 the instruction that @nickgaski should take to document","username":"binhn","ts":"2017-07-07T13:24:50.872Z"}
{"msg":"also `please, please don't put chaincode under fabric/`","username":"muralisr","ts":"2017-07-07T13:25:58.829Z"}
{"msg":"The question is whether or not we want to \"recommend\" that people vendor the shim or not","username":"mastersingh24","ts":"2017-07-07T13:26:00.516Z"}
{"msg":"Right","username":"mastersingh24","ts":"2017-07-07T13:26:06.387Z"}
{"msg":"is it true or not that we should only vendor the shim if we use timestamp as above?","username":"binhn","ts":"2017-07-07T13:27:15.683Z"}
{"msg":"For now, other than that case, I have not found any other reason to vendor it","username":"mastersingh24","ts":"2017-07-07T13:27:38.674Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=CNFzECyP73ero89Mh) @muralisr you might have project vedored protobuf and you chaincode is a part of this project, resides in one of the folders","username":"C0rWin","ts":"2017-07-07T13:27:45.044Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=CNFzECyP73ero89Mh","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=CNFzECyP73ero89Mh","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I used BCCSP, proto, msp, etc","username":"mastersingh24","ts":"2017-07-07T13:27:47.294Z"}
{"msg":"ok, i think we know what to document at this point -- do we need to UT to complete 5177?","username":"binhn","ts":"2017-07-07T13:31:02.146Z"}
{"msg":"@mastersingh24 @greg.haskins @muralisr @C0rWin @JonathanLevi \nI added the summary in fab-5177, so if nothing else, we'll proceed with document","username":"binhn","ts":"2017-07-07T14:31:40.926Z"}
{"msg":"So is this the last one:    https://gerrit.hyperledger.org/r/#/c/11437","username":"mastersingh24","ts":"2017-07-07T15:16:20.178Z"}
{"msg":"This was a good catch by the test team.  There is a real risk of replay without the fix.","username":"jyellick","ts":"2017-07-07T15:18:02.583Z"}
{"msg":"Right","username":"mastersingh24","ts":"2017-07-07T15:38:57.289Z"}
{"msg":"@here we all agree on merging https://gerrit.hyperledger.org/r/#/c/11437 right? ","username":"yacovm","ts":"2017-07-07T16:40:10.453Z"}
{"msg":"As the submitter, not sure my vote counts, but obviously I believe its inclusion is necessary.","username":"jyellick","ts":"2017-07-07T16:40:52.033Z"}
{"msg":"Question for the maintainers...will there be another RC? My understanding of good practice is that the only difference between an RC and the final version is the version number (From Karl Fogel https://www.boundless.com/users/280030/textbooks/1st-study/packaging-releasing-and-daily-development-7/testing-and-releasing-52/candidate-releases-195-14372/ : \"that is, the only difference between the last candidate release and the real release is the removal of the qualifier from the version number.\"","username":"tkuhrt","ts":"2017-07-07T16:54:24.251Z"}
{"msg":"@tkuhrt This channel is for discussions amonst the maintainers of fabric.  Please use #fabric-release for release related questions.","username":"jyellick","ts":"2017-07-07T17:23:42.023Z"}
{"msg":"Dear fellow maintainers,\n\n1. I would like to declare a *CODE_FREEZE* (at least over the weekend, but) potentially longer/until a further announcement. If anyone has any objections, please let me know ASAP... but I would really like us all to get into that mindset of \"this codebase is getting close to becoming the real deal\".\n\n2. In addition I will schedule a meeting with all of us maintainers on Monday (most likely at 10am EST), to discuss where we stand and also consider/take into an account the above question from (Tracy) @tkuhrt . We should be ready by Monday to make a final call on whether we work on another release-candidate *rc2*, or move ahead with the .\n\n3. I have been getting flooded recently with a lot of direct messages. From requests asking whether something is a \"bug\", \"feature\" or an \"improvement\", all the way to people reporting to me a few potential show stoppers that we have managed to tackle.\nStill, should anything come up, please either write here \"@ tagging\" me, write to me directly or email me (jonathan@hacera.com) - when in doubt, just reach out - I would rather have more information, than less.\n\nThank you, Jonathan","username":"JonathanLevi","ts":"2017-07-07T19:50:27.417Z"}
{"msg":"Dear fellow maintainers,\n\n1. I would like to declare a *CODE_FREEZE* (at least over the weekend, but) potentially longer/until a further announcement. If anyone has any objections, please let me know ASAP... but I would really like us all to get into that mindset of \"this codebase is getting close to becoming the real deal\".\n\n2. In addition I will schedule a meeting with all of us maintainers on Monday (most likely at 10am EST), to discuss where we stand and also consider/take into an account the above question from (Tracy) @tkuhrt . We should be ready by Monday to make a final call on whether we work on another release-candidate *1.0.0-rc2*, or move ahead with *1.0.0*\n\n3. I have been getting flooded recently with a lot of direct messages. From requests asking whether something is a \"bug\", \"feature\" or an \"improvement\", all the way to people reporting to me a few potential show stoppers that we have managed to tackle.\nStill, should anything come up, please either write here \"@ tagging\" me, write to me directly or email me (jonathan@hacera.com) - when in doubt, just reach out - I would rather have more information, than less.\n\nThank you, Jonathan","username":"JonathanLevi","ts":"2017-07-07T19:50:27.417Z"}
{"msg":"Dear fellow maintainers,\n\n1. I would like to declare a *CODE_FREEZE* (at least over the weekend, but) potentially longer/until a further announcement. If anyone has any objections, please let me know ASAP... but I would really like us all to get into that mindset of \"this codebase is getting close to becoming the real deal\".\n\n2. In addition I will schedule a meeting with all of us maintainers on Monday (most likely at 10am EST), to discuss where we stand and also consider/take into an account the above question from (Tracy) @tkuhrt . We should be ready by Monday to make a final call on whether we work on another release-candidate *1.0.0-rc2*, or go ahead with *1.0.0*\n\n3. I have been getting flooded recently with a lot of direct messages. From requests asking whether something is a \"bug\", \"feature\" or an \"improvement\", all the way to people reporting to me a few potential show stoppers that we have managed to tackle.\nStill, should anything come up, please either write here \"@ tagging\" me, write to me directly or email me (jonathan@hacera.com) - when in doubt, just reach out - I would rather have more information, than less.\n\nThank you, Jonathan","username":"JonathanLevi","ts":"2017-07-07T19:50:27.417Z"}
{"msg":"I agree with the issue @tkuhrt raised...if there were more merges since -rc1, we should probably have an -rc2, and only a -ga when no more merges occur","username":"greg.haskins","ts":"2017-07-09T12:38:32.552Z"}
{"msg":"I also think we should not ignore my warning in FAB-5177.  Don't let release pressure obscure thinking here, please, as getting the ABI right is important.","username":"greg.haskins","ts":"2017-07-09T12:40:30.003Z"}
{"msg":"@greg.haskins just added a comment to FAB-5177 with an alternative.... what do you think ?","username":"muralisr","ts":"2017-07-09T13:56:52.036Z"}
{"msg":"Has joined the channel.","username":"HuangLijun","ts":"2017-07-10T02:41:17.646Z","type":"uj"}
{"msg":"I think we need to look at WHAT was changed... I have been MIA but weren't the changes largely doc test or samples only?","username":"cbf","ts":"2017-07-10T09:33:52.252Z"}
{"msg":"if we fixed core code gor defects, maybe a rc2 is warranted. but have we made core changes/fixes?","username":"cbf","ts":"2017-07-10T09:34:42.247Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11429/\nhttps://gerrit.hyperledger.org/r/#/c/10967/\nhttps://gerrit.hyperledger.org/r/#/c/11437/","username":"C0rWin","ts":"2017-07-10T10:26:38.068Z"}
{"msg":"These was some fixes which related to core at some level, not sure whenever they could be counted as severe to propose rc2. @cbf ","username":"C0rWin","ts":"2017-07-10T10:28:24.798Z"}
{"msg":"the 10am EST call today should be very interesting. That's for sure.","username":"JonathanLevi","ts":"2017-07-10T10:54:58.930Z"}
{"msg":"Have the details for the 10am EST call been sent out?","username":"kostas","ts":"2017-07-10T11:29:17.884Z"}
{"msg":"I would not dream of sending it out without copying you @kostas ! ;-)","username":"JonathanLevi","ts":"2017-07-10T11:55:49.875Z"}
{"msg":"[Finalizing the time, now that people are waking up in the East Cost. It may end up being at 11am... I will inform everybody]","username":"JonathanLevi","ts":"2017-07-10T11:56:24.196Z"}
{"msg":"Ah gotcha, thank you.","username":"kostas","ts":"2017-07-10T11:58:36.145Z"}
{"msg":"@JonathanLevi I am still on vacation this week and wont make the call","username":"greg.haskins","ts":"2017-07-10T12:36:55.905Z"}
{"msg":"@greg.haskins, oh no! ;-) Actually, I envy you. Fair enough. ","username":"JonathanLevi","ts":"2017-07-10T12:41:13.527Z"}
{"msg":"Greg, we may end up needing to vote.","username":"JonathanLevi","ts":"2017-07-10T12:41:25.609Z"}
{"msg":"understood","username":"greg.haskins","ts":"2017-07-10T12:41:38.175Z"}
{"msg":"I can instead put things in writing and we'll allow everybody to opine and vote.","username":"JonathanLevi","ts":"2017-07-10T12:41:55.629Z"}
{"msg":"fwiw, I still think we are making a potential mistake not considering 5177","username":"greg.haskins","ts":"2017-07-10T12:42:00.027Z"}
{"msg":"Yes, that's what I want us all to vote on.","username":"JonathanLevi","ts":"2017-07-10T12:42:15.840Z"}
{"msg":"ok, that would be good","username":"greg.haskins","ts":"2017-07-10T12:42:17.470Z"}
{"msg":"We have 2 things. Considering RC2 (Tracy's proposal from Friday)...","username":"JonathanLevi","ts":"2017-07-10T12:43:49.819Z"}
{"msg":"We have 2 things. \n1. Considering RC2 (Tracy's proposal from Friday)...","username":"JonathanLevi","ts":"2017-07-10T12:43:49.819Z"}
{"msg":"Also in the context of what has actually changed, the ramifications/risk.","username":"JonathanLevi","ts":"2017-07-10T12:44:16.222Z"}
{"msg":"And the second item is indeed your proposal/request to include 5177 (or a flavor of it) in 1.0.","username":"JonathanLevi","ts":"2017-07-10T12:44:50.072Z"}
{"msg":"@greg.haskins @JonathanLevi  I've been thinking about 5177 ...was thinking of responding to Gregs last comment","username":"muralisr","ts":"2017-07-10T12:45:09.062Z"}
{"msg":"do you want to wait for that or do we have enough info to vote ?","username":"muralisr","ts":"2017-07-10T12:59:37.559Z"}
{"msg":"@muralisr please contribute your comment","username":"greg.haskins","ts":"2017-07-10T13:12:37.140Z"}
{"msg":"FYI, I've queued: https://gerrit.hyperledger.org/r/#/c/11471/ and https://gerrit.hyperledger.org/r/#/c/11445/ related to the conversation","username":"greg.haskins","ts":"2017-07-10T13:13:02.892Z"}
{"msg":"11445 currently fails because the e2e would need to be adapted to include the shim","username":"greg.haskins","ts":"2017-07-10T13:13:27.798Z"}
{"msg":"but given my vacation, i have not had a chance to dig into that one","username":"greg.haskins","ts":"2017-07-10T13:13:38.181Z"}
{"msg":"but they are queued should a decision be made should someone want to run with it","username":"greg.haskins","ts":"2017-07-10T13:14:04.462Z"}
{"msg":"typing up the comment @greg.haskins ","username":"muralisr","ts":"2017-07-10T13:14:35.820Z"}
{"msg":"I have a question regarding the CC packaging. So before https://gerrit.hyperledger.org/r/#/c/6991/ was merged - what did the `ccenv` contain? Did it contain the shim? \nDid we have this problem we have now?","username":"yacovm","ts":"2017-07-10T13:21:55.748Z"}
{"msg":"@greg.haskins @muralisr ^","username":"yacovm","ts":"2017-07-10T13:27:35.040Z"}
{"msg":"Had the shim for a long time.  6991 didn't change that or introduce the problem. 6991 simply makes it easier to swallow if we remove the shim","username":"greg.haskins","ts":"2017-07-10T13:33:29.775Z"}
{"msg":"Since it hides the need that include in manually","username":"greg.haskins","ts":"2017-07-10T13:33:53.254Z"}
{"msg":"@greg.haskins might as well talk here as we are all here... (plus on cell so having a hard time with posts)","username":"muralisr","ts":"2017-07-10T13:39:27.287Z"}
{"msg":"OK, several people have written to me directly regarding the (un)availability to hop on a quick call.","username":"JonathanLevi","ts":"2017-07-10T13:58:00.746Z"}
{"msg":"OK, several people have written to me directly regarding their (un)availability/inability to hop on a quick call - some are overworked, others are on vacations.","username":"JonathanLevi","ts":"2017-07-10T13:58:00.746Z"}
{"msg":"So I'm not scheduling a call for 10am, but you will hear back from me (aka, \"I will be back\" ;-))","username":"JonathanLevi","ts":"2017-07-10T13:58:50.924Z"}
{"msg":"Has joined the channel.","username":"albrandt","ts":"2017-07-10T18:50:52.277Z","type":"uj"}
{"msg":"Can somebody take a look at: https://gerrit.hyperledger.org/r/#/c/11473","username":"JonathanLevi","ts":"2017-07-11T11:18:45.157Z"}
{"msg":"And https://gerrit.hyperledger.org/r/#/c/11447 as well please.","username":"JonathanLevi","ts":"2017-07-11T11:19:21.593Z"}
{"msg":"@rameshthoomu, please close them JIRAs","username":"JonathanLevi","ts":"2017-07-11T12:03:32.447Z"}
{"msg":"on it","username":"rameshthoomu","ts":"2017-07-11T12:03:42.119Z"}
{"msg":"done","username":"rameshthoomu","ts":"2017-07-11T12:06:27.776Z"}
{"msg":"Fellow maintainers, please can you take a close look at:","username":"JonathanLevi","ts":"2017-07-11T13:01:05.026Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11523/1/CHANGELOG.md","username":"JonathanLevi","ts":"2017-07-11T13:01:06.005Z"}
{"msg":"@JonathanLevi on a related note: spoke with Brian/Gari/Sharon yesterday regarding FAB-5177","username":"greg.haskins","ts":"2017-07-11T13:10:20.137Z"}
{"msg":"I'll try to summarize the agreement: its probably an important issue to fix (TBD by maintainers) but we wont block the release over it","username":"greg.haskins","ts":"2017-07-11T13:10:55.121Z"}
{"msg":"rather, lets add the issue to the ERRATA/Release-notes and make it a priority to fix ASAP (e.g. v1.0.1","username":"greg.haskins","ts":"2017-07-11T13:11:17.941Z"}
{"msg":"because we are noting it in the ERRATA, if an ABI breakage is required, we are covered","username":"greg.haskins","ts":"2017-07-11T13:11:40.047Z"}
{"msg":"that said, Gari and I agree that we can likely fix it without breakage","username":"greg.haskins","ts":"2017-07-11T13:11:53.285Z"}
{"msg":"@mastersingh24 anything to add?","username":"greg.haskins","ts":"2017-07-11T13:12:09.395Z"}
{"msg":"@JonathanLevi the changelog looks good to me","username":"binhn","ts":"2017-07-11T13:20:02.343Z"}
{"msg":"@greg.haskins, here we go: https://gerrit.hyperledger.org/r/#/c/11523/1/docs/source/releases.rst","username":"JonathanLevi","ts":"2017-07-11T13:23:29.001Z"}
{"msg":"(that's from Gari, who is out for about an hour)","username":"JonathanLevi","ts":"2017-07-11T13:23:47.845Z"}
{"msg":"(I completely agree - that's from Gari, who is out for about an hour)","username":"JonathanLevi","ts":"2017-07-11T13:23:47.845Z"}
{"msg":"Can I have your blessings there?","username":"JonathanLevi","ts":"2017-07-11T13:24:02.181Z"}
{"msg":"I suggest that in addition to that, we also mention that we reserve the right to change the ccenv in the future, yada yada yada","username":"greg.haskins","ts":"2017-07-11T13:29:19.514Z"}
{"msg":"and perhaps mention the 5177 issue or something","username":"greg.haskins","ts":"2017-07-11T13:29:37.066Z"}
{"msg":"that would give the coverage that Brian mentioned","username":"greg.haskins","ts":"2017-07-11T13:29:44.950Z"}
{"msg":"have to run..","username":"greg.haskins","ts":"2017-07-11T13:30:03.855Z"}
{"msg":"OK, let me do these two things:\n1. mention \"that we reserve the right to change the ccenv in the future\"\n2. include the 5177","username":"JonathanLevi","ts":"2017-07-11T13:30:17.285Z"}
{"msg":"Cool?","username":"JonathanLevi","ts":"2017-07-11T13:30:23.877Z"}
{"msg":"I'm back for a bit","username":"mastersingh24","ts":"2017-07-11T14:13:09.057Z"}
{"msg":"I'll update the CR - forgot a file as well","username":"mastersingh24","ts":"2017-07-11T14:13:20.849Z"}
{"msg":"@JonathanLevi on releases.rst, should we mentioned the remaining bugs ?","username":"binhn","ts":"2017-07-11T14:13:21.461Z"}
{"msg":"@JonathanLevi on releases.rst, should we mentioned the known remaining bugs ?","username":"binhn","ts":"2017-07-11T14:13:21.461Z"}
{"msg":"Please take a look, I just pushed: https://gerrit.hyperledger.org/r/#/c/11523/","username":"JonathanLevi","ts":"2017-07-11T14:13:45.900Z"}
{"msg":"ah -ok","username":"mastersingh24","ts":"2017-07-11T14:13:51.320Z"}
{"msg":"release_notes/v1.0.0.txt","username":"mastersingh24","ts":"2017-07-11T14:17:14.992Z"}
{"msg":"Yup","username":"JonathanLevi","ts":"2017-07-11T14:19:04.102Z"}
{"msg":"@binhn, @muralisr Care to take a/nother/quick look at https://gerrit.hyperledger.org/r/#/c/11523","username":"JonathanLevi","ts":"2017-07-11T14:19:47.661Z"}
{"msg":"on it","username":"binhn","ts":"2017-07-11T14:20:09.061Z"}
{"msg":"And then please https://gerrit.hyperledger.org/r/#/c/11529/","username":"mastersingh24","ts":"2017-07-11T14:24:54.717Z"}
{"msg":"Actually, would be good to approve both and submit 11529 (whose parent is 11523)","username":"mastersingh24","ts":"2017-07-11T14:25:16.539Z"}
{"msg":"Yes, please","username":"JonathanLevi","ts":"2017-07-11T14:25:25.441Z"}
{"msg":"Then we are nice and clean","username":"mastersingh24","ts":"2017-07-11T14:25:25.474Z"}
{"msg":"Not worried at all about known bugs (that are \"not functional\"... at least by looking at the list we currently have)","username":"JonathanLevi","ts":"2017-07-11T14:25:54.070Z"}
{"msg":"Honestly, even calling out 5177 as a Known Issue was only to appease Greg","username":"mastersingh24","ts":"2017-07-11T14:27:10.442Z"}
{"msg":"Honestly, even calling out 5177 as a Known Issue was only to appease Greg  ;)","username":"mastersingh24","ts":"2017-07-11T14:27:10.442Z"}
{"msg":"Kids, not now! ;-)","username":"JonathanLevi","ts":"2017-07-11T14:27:30.326Z"}
{"msg":"Just checking on Greg!","username":"mastersingh24","ts":"2017-07-11T14:27:31.300Z"}
{"msg":"We need another +2","username":"JonathanLevi","ts":"2017-07-11T14:27:36.606Z"}
{"msg":"Seeing if he is paying attention","username":"mastersingh24","ts":"2017-07-11T14:27:39.357Z"}
{"msg":"No - I like the new text for 5177 in the release notes - we are now covered well","username":"mastersingh24","ts":"2017-07-11T14:27:59.259Z"}
{"msg":"So Greg already gave his green light (officially) above... should I include the changes he requested.","username":"JonathanLevi","ts":"2017-07-11T14:28:01.282Z"}
{"msg":"Ah - cool","username":"mastersingh24","ts":"2017-07-11T14:28:12.935Z"}
{"msg":"Yes, added at his behest, really.","username":"JonathanLevi","ts":"2017-07-11T14:28:14.923Z"}
{"msg":"Missed that piece - but the changes make sense to me","username":"mastersingh24","ts":"2017-07-11T14:28:23.455Z"}
{"msg":"@mastersingh24 please see above: https://chat.hyperledger.org/channel/fabric-maintainers?msg=6Ydhw7AkhSMkE4uZA","username":"JonathanLevi","ts":"2017-07-11T14:28:31.396Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6Ydhw7AkhSMkE4uZA","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6Ydhw7AkhSMkE4uZA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Yeah - that was a good call","username":"mastersingh24","ts":"2017-07-11T14:28:42.922Z"}
{"msg":"I agree. Another maintainer, please. Gari and I cannot touch the release notes.","username":"JonathanLevi","ts":"2017-07-11T14:29:01.008Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=h9cG5LXwMcYFRPxiB) ","username":"JonathanLevi","ts":"2017-07-11T14:29:10.747Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=h9cG5LXwMcYFRPxiB","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=h9cG5LXwMcYFRPxiB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=MTPRNwxSxm6W4gtpJ) ","username":"JonathanLevi","ts":"2017-07-11T14:29:22.016Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=MTPRNwxSxm6W4gtpJ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=MTPRNwxSxm6W4gtpJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Ah, can do","username":"jyellick","ts":"2017-07-11T14:29:37.491Z"}
{"msg":"Thank you @jyellick ","username":"JonathanLevi","ts":"2017-07-11T14:29:50.390Z"}
{"msg":"This is a lesson learned which Greg always reminds us to do - submit the release equals true and set it back to false back to back","username":"mastersingh24","ts":"2017-07-11T14:30:01.544Z"}
{"msg":"Yup","username":"JonathanLevi","ts":"2017-07-11T14:30:46.160Z"}
{"msg":"SO let's surprise him by actually doing it!","username":"mastersingh24","ts":"2017-07-11T14:31:09.788Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11529/ can be merged - it as 2 +2","username":"mastersingh24","ts":"2017-07-11T14:31:40.104Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11529/ can be merged - it has 2 +2","username":"mastersingh24","ts":"2017-07-11T14:31:40.104Z"}
{"msg":"OK, yeah, we *should indeed* make him proud ;-)","username":"JonathanLevi","ts":"2017-07-11T14:31:41.484Z"}
{"msg":"We need another thing from binhn.","username":"JonathanLevi","ts":"2017-07-11T14:31:51.686Z"}
{"msg":"\nFAB-4844 fabric-ca-client enroll doesn't store msp/intermediatecerts\nFAB-5048 \"package.json\" of fabric-client does not include some necessary modules\nFAB-5177 peer/ccenv should not include the shim\nFAB-5246 gossip rejects join channel unless used with leader election","username":"JonathanLevi","ts":"2017-07-11T14:31:55.786Z"}
{"msg":"????","username":"mastersingh24","ts":"2017-07-11T14:32:24.800Z"}
{"msg":"4844 and 5048 are not fabric","username":"mastersingh24","ts":"2017-07-11T14:32:35.421Z"}
{"msg":"I assume for the 1.0.0 release we are following the Jira task and the subtasks mentioned: https://jira.hyperledger.org/browse/FAB-5065","username":"dave.enyeart","ts":"2017-07-11T14:44:44.832Z"}
{"msg":"adding a couple of note-worthy known bugs to the release notes  https://gerrit.hyperledger.org/r/#/c/11531/","username":"binhn","ts":"2017-07-11T14:45:23.157Z"}
{"msg":"ah, just saw gari's msg above, 4844 is not fabric","username":"binhn","ts":"2017-07-11T14:46:12.538Z"}
{"msg":"pushing another one","username":"binhn","ts":"2017-07-11T14:46:18.259Z"}
{"msg":"Gents, please","username":"JonathanLevi","ts":"2017-07-11T14:48:57.006Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11535/","username":"JonathanLevi","ts":"2017-07-11T14:48:57.838Z"}
{"msg":"uh","username":"simsc","ts":"2017-07-11T14:49:29.483Z"}
{"msg":"@dave.enyeart of course we are. We need to quickly prioritize the sub-projects and release notes.","username":"JonathanLevi","ts":"2017-07-11T14:49:43.702Z"}
{"msg":"@smithbk Here?","username":"JonathanLevi","ts":"2017-07-11T14:53:48.213Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11531","username":"binhn","ts":"2017-07-11T14:53:57.341Z"}
{"msg":"release note changes","username":"binhn","ts":"2017-07-11T14:54:10.593Z"}
{"msg":"shouldn't we tag the 1.0.0 release BEFORE incrementing the makefiles to 1.0.1?","username":"dave.enyeart","ts":"2017-07-11T15:01:29.171Z"}
{"msg":"i dont understand why https://gerrit.hyperledger.org/r/#/c/11529/ (increment to 1.0.1) was merged prior to tagging 1.0.0","username":"dave.enyeart","ts":"2017-07-11T15:02:30.500Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11523/3 Was submitted with it?","username":"jyellick","ts":"2017-07-11T15:03:05.554Z"}
{"msg":"I guess when we tag doesn't matter, as long as we tag the commit that changed the makefiles to 1.0.0","username":"dave.enyeart","ts":"2017-07-11T15:06:49.851Z"}
{"msg":"where are we?  tagged?","username":"binhn","ts":"2017-07-11T15:07:01.002Z"}
{"msg":"Fabric is done","username":"rameshthoomu","ts":"2017-07-11T15:07:17.377Z"}
{"msg":"Release jobs are triggered","username":"rameshthoomu","ts":"2017-07-11T15:07:22.737Z"}
{"msg":"ok, so my cr on release notes won't get in then","username":"binhn","ts":"2017-07-11T15:08:07.955Z"}
{"msg":"+2'ed https://gerrit.hyperledger.org/r/#/c/11535","username":"smithbk","ts":"2017-07-11T15:10:08.218Z"}
{"msg":"I see tag v1.0.0 is created on wrong commit number","username":"rameshthoomu","ts":"2017-07-11T15:14:30.501Z"}
{"msg":"It should be on `commit# b17afeb` not on latest `commit # e50ca0c `","username":"rameshthoomu","ts":"2017-07-11T15:15:17.947Z"}
{"msg":"It should be on `commit# e4b4704` not on latest `commit # e50ca0c `","username":"rameshthoomu","ts":"2017-07-11T15:15:17.947Z"}
{"msg":"exactly my point previously... we should increment makefile to 1.0.0, tag it, and then increment makefile to 1.0.1","username":"dave.enyeart","ts":"2017-07-11T15:16:26.619Z"}
{"msg":"is it possible to delete a tag and retag it?","username":"dave.enyeart","ts":"2017-07-11T15:16:50.809Z"}
{"msg":"fabric images are messed up with version ","username":"rameshthoomu","ts":"2017-07-11T15:19:23.781Z"}
{"msg":"Yes!","username":"JonathanLevi","ts":"2017-07-11T15:26:43.614Z"}
{"msg":"Tell me about it.","username":"JonathanLevi","ts":"2017-07-11T15:26:47.849Z"}
{"msg":"I think we have to delete the existing `v1.0.0` tag and go back to `commit # b17afeb` (1.0.0 release CR Commit) and then publish the v1.0.0 tag again","username":"rameshthoomu","ts":"2017-07-11T15:28:32.425Z"}
{"msg":"FYI: I stopped fabric x86 and power release CI jobs after seeing pushing the wrong version.. So only s390x docker images version is messed up now.. . Will ask @rjones or @jwagantall to delete these `s390x-1.0.1-snapshot-e50ca0c` images from docker hub.. ","username":"rameshthoomu","ts":"2017-07-11T15:30:32.929Z"}
{"msg":"Stop!","username":"JonathanLevi","ts":"2017-07-11T15:36:59.466Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=eurs2QmcMoPRzFhit) ","username":"JonathanLevi","ts":"2017-07-11T16:08:00.169Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=eurs2QmcMoPRzFhit","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=eurs2QmcMoPRzFhit","remote":true,"fileId":null,"fileName":null}]}
{"msg":"The correct commit level is *e4b4704*","username":"JonathanLevi","ts":"2017-07-11T16:08:27.632Z"}
{"msg":"yes that's the right commit number","username":"rameshthoomu","ts":"2017-07-11T16:09:10.530Z"}
{"msg":":-)","username":"JonathanLevi","ts":"2017-07-11T16:10:33.415Z"}
{"msg":"@mastersingh24 want to make sure I don't step on your toes: https://jira.hyperledger.org/browse/FAB-5068 was assigned to you but I just grabbed it to handle it, as well as https://jira.hyperledger.org/browse/FAB-5072","username":"jimthematrix","ts":"2017-07-11T16:28:52.010Z"}
{"msg":"Come on","username":"JonathanLevi","ts":"2017-07-11T16:37:59.981Z"}
{"msg":"If I'm asking anyone to do something, please just do it.","username":"JonathanLevi","ts":"2017-07-11T16:38:08.685Z"}
{"msg":"@jimthematrix please go ahead","username":"JonathanLevi","ts":"2017-07-11T16:38:35.079Z"}
{"msg":"@dave.enyeart please can you take a look at https://gerrit.hyperledger.org/r/#/c/11543/","username":"JonathanLevi","ts":"2017-07-11T16:39:37.679Z"}
{"msg":"@here ","username":"JonathanLevi","ts":"2017-07-11T16:41:11.914Z"}
{"msg":"looking","username":"dave.enyeart","ts":"2017-07-11T16:41:13.233Z"}
{"msg":"Can anyone please approve https://gerrit.hyperledger.org/r/#/c/11543/","username":"JonathanLevi","ts":"2017-07-11T16:41:20.081Z"}
{"msg":"Thanks M","username":"JonathanLevi","ts":"2017-07-11T16:44:07.683Z"}
{"msg":"it looks good, but we are verifying with @rameshthoomu that the sdk 'version' can handle no suffix","username":"dave.enyeart","ts":"2017-07-11T16:44:10.290Z"}
{"msg":"Merged already. Dave, seriously...","username":"JonathanLevi","ts":"2017-07-11T16:44:22.229Z"}
{"msg":"Ramesh's scripts parse the version, just double checking","username":"dave.enyeart","ts":"2017-07-11T16:45:11.912Z"}
{"msg":"yes.. ","username":"rameshthoomu","ts":"2017-07-11T16:46:45.370Z"}
{"msg":"There are NO issues with the CI","username":"JonathanLevi","ts":"2017-07-11T16:51:32.066Z"}
{"msg":"Guys, a script in a CI does not dictate how we work, tag or refer to builds.","username":"JonathanLevi","ts":"2017-07-11T16:51:54.258Z"}
{"msg":"Just a note... that I'm *sure* we'll revisit.","username":"JonathanLevi","ts":"2017-07-11T16:52:07.618Z"}
{"msg":"good news: `./byfn.sh -m up` ran successfully on my mac ","username":"binhn","ts":"2017-07-11T17:37:02.627Z"}
{"msg":"Nice, same for @dave.enyeart.","username":"JonathanLevi","ts":"2017-07-11T17:38:25.547Z"}
{"msg":"Nice, same for @dave.enyeart ","username":"JonathanLevi","ts":"2017-07-11T17:38:25.547Z"}
{"msg":"I did on `x`,  `p` and `z` platforms and it worked as expected","username":"rameshthoomu","ts":"2017-07-11T17:38:57.905Z"}
{"msg":"Can others can spend some time with sdk-node?","username":"JonathanLevi","ts":"2017-07-11T17:39:07.163Z"}
{"msg":"Can others please spend some time with sdk-node?","username":"JonathanLevi","ts":"2017-07-11T17:39:07.163Z"}
{"msg":"We are packaging the sdk-java","username":"JonathanLevi","ts":"2017-07-11T17:39:15.952Z"}
{"msg":"Jim has confirmed (of course, otherwise, I would not have asked him), but it would not hurt to have others at it...","username":"JonathanLevi","ts":"2017-07-11T17:41:30.847Z"}
{"msg":"Jim has confirmed (of course, otherwise, I would not have asked here), but it would not hurt to have others at it...","username":"JonathanLevi","ts":"2017-07-11T17:41:30.847Z"}
{"msg":"Jim has confirmed (of course, otherwise, I would not have asked here), but it would not hurt to have others at it...","username":"JonathanLevi","ts":"2017-07-11T17:41:50.426Z"}
{"msg":"`byfn.sh` is likewise happy on my local Linux setpu","username":"jyellick","ts":"2017-07-11T17:58:29.865Z"}
{"msg":"`byfn.sh` is likewise happy on my local Linux setup","username":"jyellick","ts":"2017-07-11T17:58:29.865Z"}
{"msg":"Same here build your first network passed on my mac","username":"C0rWin","ts":"2017-07-11T17:59:28.719Z"}
{"msg":"Thanks everyone. Last bit probably.","username":"JonathanLevi","ts":"2017-07-11T18:01:11.956Z"}
{"msg":"We are just publishing the npms","username":"JonathanLevi","ts":"2017-07-11T18:01:24.132Z"}
{"msg":"I know that not everybody is super familiar with the SDKs","username":"JonathanLevi","ts":"2017-07-11T18:01:44.619Z"}
{"msg":"-----\nOK, things look good. Let's take some time and review things carefully back again...","username":"JonathanLevi","ts":"2017-07-11T18:14:09.092Z"}
{"msg":"Binaries are built and published, and others are working to push the Java bits.","username":"JonathanLevi","ts":"2017-07-11T18:14:32.320Z"}
{"msg":"Can you guys take a look at this, please: https://gerrit.hyperledger.org/r/#/c/11555","username":"JonathanLevi","ts":"2017-07-11T18:14:53.716Z"}
{"msg":"Now, back to \"normal mode\", not \"war-zone mode\" ;-)","username":"JonathanLevi","ts":"2017-07-11T18:15:15.944Z"}
{"msg":"-----","username":"JonathanLevi","ts":"2017-07-11T18:20:08.606Z"}
{"msg":"Another thing, that's a nice-to-have is: https://jira.hyperledger.org/browse/FAB-5040","username":"JonathanLevi","ts":"2017-07-11T18:20:22.976Z"}
{"msg":"A few hours to test, I know :-(... thank you @jimthematrix ","username":"JonathanLevi","ts":"2017-07-11T18:20:45.978Z"}
{"msg":"Thank you @binhn ","username":"JonathanLevi","ts":"2017-07-11T18:35:34.029Z"}
{"msg":"@JonathanLevi well done !","username":"binhn","ts":"2017-07-11T18:43:08.806Z"}
{"msg":"Thanks everyone (including those that write to me directly)","username":"JonathanLevi","ts":"2017-07-11T18:43:51.660Z"}
{"msg":"Thanks everyone (including those who write/wrote to me directly)","username":"JonathanLevi","ts":"2017-07-11T18:43:51.660Z"}
{"msg":"Still a few final bits before we can finally declare success...","username":"JonathanLevi","ts":"2017-07-11T18:44:15.010Z"}
{"msg":"Waiting for the full-fledged regression tests that we run against the release","username":"JonathanLevi","ts":"2017-07-11T18:45:11.650Z"}
{"msg":"And a few more final bits. I will keep you posted, as I'd need a few more eyes on things...","username":"JonathanLevi","ts":"2017-07-11T18:45:54.421Z"}
{"msg":"But really, over an hour ago, binaries were pushed successfully, and things look great. I don't want to jinx it, so I'd stop here ;-)","username":"JonathanLevi","ts":"2017-07-11T18:47:04.205Z"}
{"msg":"But really, over an hour ago, binaries were pushed successfully, and things look great. I don't want to jinx it, so I'd stop here, for now.","username":"JonathanLevi","ts":"2017-07-11T18:47:04.205Z"}
{"msg":"@jimthematrix https://gerrit.hyperledger.org/r/#/c/11559/","username":"JonathanLevi","ts":"2017-07-11T18:54:32.416Z"}
{"msg":"Is this OK ?","username":"JonathanLevi","ts":"2017-07-11T18:54:36.896Z"}
{"msg":"I'd \"all for\" versioned dependencies...in any environment.","username":"JonathanLevi","ts":"2017-07-11T18:55:07.040Z"}
{"msg":"I'm \"all in for\" versioned dependencies...in any environment.","username":"JonathanLevi","ts":"2017-07-11T18:55:07.040Z"}
{"msg":"@JonathanLevi @dave.enyeart just +2'ed 11559","username":"jimthematrix","ts":"2017-07-11T19:06:00.979Z"}
{"msg":"Merged. Thanks.","username":"JonathanLevi","ts":"2017-07-11T19:07:29.506Z"}
{"msg":"If folks could look at 11561 -> Fab-5257 for updating Docs from RC1 to v1.0. Thanks @jimthematrix for the +2 already","username":"markparz","ts":"2017-07-11T19:40:30.545Z"}
{"msg":"Merged","username":"dave.enyeart","ts":"2017-07-11T19:45:43.979Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-07-11T19:53:46.140Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11563/","username":"JonathanLevi","ts":"2017-07-11T19:53:50.863Z"}
{"msg":"A quick CR from me ^^^","username":"JonathanLevi","ts":"2017-07-11T19:53:56.980Z"}
{"msg":"2 +2","username":"JonathanLevi","ts":"2017-07-11T19:54:00.946Z"}
{"msg":"Fixing the link from the public announcement.","username":"JonathanLevi","ts":"2017-07-11T19:54:27.380Z"}
{"msg":"@muralisr @jyellick ","username":"JonathanLevi","ts":"2017-07-11T19:55:37.940Z"}
{"msg":"Done","username":"jyellick","ts":"2017-07-11T19:55:56.388Z"}
{"msg":"Super, pushed, thanks","username":"JonathanLevi","ts":"2017-07-11T19:56:20.725Z"}
{"msg":"You guys are witnessing the *best practice* from a trading desk here. Sorry","username":"JonathanLevi","ts":"2017-07-11T19:56:46.563Z"}
{"msg":"practices! ;-)","username":"JonathanLevi","ts":"2017-07-11T19:57:44.584Z"}
{"msg":"Great job guys - we've picked up the 1.0.0 builds (Docker + Node.js SDK) in Composer and everything is working just fine :+1: ","username":"sstone1","ts":"2017-07-11T20:06:44.783Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11205 has been updated caught up to v1.0.0 and tested locally, @JonathanLevi @dave.enyeart ","username":"jimthematrix","ts":"2017-07-11T20:19:03.832Z"}
{"msg":"Yes, that's a long one.","username":"JonathanLevi","ts":"2017-07-11T20:24:54.399Z"}
{"msg":"Please, all, let's review it carefully. I'm a bit too tired, to go over it & dealing with some other issue ATM.","username":"JonathanLevi","ts":"2017-07-11T20:25:21.930Z"}
{"msg":"Thanks Jim!","username":"JonathanLevi","ts":"2017-07-11T20:25:28.950Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-07-11T20:29:59.628Z"}
{"msg":"For Docker, we can use 'https://github.com/hyperledger/fabric/blob/master/scripts/bootstrap-1.0.0.sh` or `curl -sSL https://goo.gl/iX9dek | bash` these scripts.. it will pull 1.0.0 docker images and re-tag it as latest","username":"JonathanLevi","ts":"2017-07-11T20:30:10.749Z"}
{"msg":"also along with the changes in 11205, updates are needed in RTD, I found https://gerrit.hyperledger.org/r/#/c/11159 and made comments there, not sure if it's the right CR to use though, as it has a lot of changes and is going through a long review process. @nickgaski suggestions?","username":"jimthematrix","ts":"2017-07-11T20:54:31.279Z"}
{"msg":"also along with the changes in 11205, updates are needed in RTD, I found https://gerrit.hyperledger.org/r/#/c/11159 and made comments there, not sure if it's the right CR to use though, as it has a lot of changes and is going through a long review process. @nickgaski @markparz  suggestions?","username":"jimthematrix","ts":"2017-07-11T20:54:31.279Z"}
{"msg":"The formatting is not a priority and people are tired.","username":"JonathanLevi","ts":"2017-07-11T20:56:48.482Z"}
{"msg":"Up to you guys, your call.","username":"JonathanLevi","ts":"2017-07-11T20:56:56.588Z"}
{"msg":"I'd rather make sure/double and triple check stuff while we can still \"see\" ;-)","username":"JonathanLevi","ts":"2017-07-11T20:57:17.898Z"}
{"msg":"sorry I couldn't get to this earlier but I just tried first-network and it worked on Windows 7","username":"lehors","ts":"2017-07-11T22:02:09.682Z"}
{"msg":"there is a problem with fabric-samples which contains files with names that are too long for Windows though","username":"lehors","ts":"2017-07-11T22:02:43.595Z"}
{"msg":"nothing dramatic but beware:","username":"lehors","ts":"2017-07-11T22:03:08.631Z"}
{"msg":"error: unable to create file balance-transfer/artifacts/channel/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/keystore/2fb065725bf1b7e2811c0e8ca8d37f5a951fc4cd1162a47\naad8accf9ddd10291_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/keystore/db670eed8487a93c35ae448b9f84c2f241a7a8c87df0544fc1dc\n08baf7832aa0_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/keystore/27db82c96b1482480baa1c75f80e5cce249beaab27b70\nc741bb0e2554355957e_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/keystore/fdee12a3510fde3155c37128cfec26090ae249bfbca28\nf884e60c21338493edd_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/5890f0061619c06fb29dea8cb304edecc020fe63f41a6\ndb109f1e227cc1cb2a8_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/73cdc0072c7203f1ec512232c780fc84acc9752ef30eb\nc16be1f4666c02b614b_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/keystore/0d9f72608133ee627b570b6af6877666bc8f365746f93\n29d6dd8a5f54e53e2ab_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/keystore/27ccb54a06020260c66c65bec91f91e1c9043e3076d3d\n6128692e7271c4c7a2c_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/1995b11d6573ed3be52fcd7a5fa477bc0f183e1f5f398\nc8281d0ce7c2c75a076_sk: Filename too long\nerror: unable to create file balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/keystore/585175c83bac91fc0c1ce8f9d0ff9aefa47c565678f10\n0ca8673db249ee785ac_sk: Filename too long\nD       balance-transfer/artifacts/channel/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/keystore/2fb065725bf1b7e2811c0e8ca8d37f5a951fc4cd1162a47aad8accf9ddd10291_sk\nD       balance-transfer/artifacts/channel/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/keystore/db670eed8487a93c35ae448b9f84c2f241a7a8c87df0544fc1dc08baf7832aa0_sk\nD       balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/keystore/27db82c96b1482480baa1c75f80e5cce249beaab27b70c741bb0e2554355957e_sk\nD       balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/keystore/fdee12a3510fde3155c37128cfec26090ae249bfbca28f884e60c21338493edd_sk\nD       balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/5890f0061619c06fb29dea8cb304edecc020fe63f41a6db109f1e227cc1cb2a8_sk\nD       balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/73cdc0072c7203f1ec512232c780fc84acc9752ef30ebc16be1f4666c02b614b_sk\nD       balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/keystore/0d9f72608133ee627b570b6af6877666bc8f365746f9329d6dd8a5f54e53e2ab_sk\nD       balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/keystore/27ccb54a06020260c66c65bec91f91e1c9043e3076d3d6128692e7271c4c7a2c_sk\nD       balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/1995b11d6573ed3be52fcd7a5fa477bc0f183e1f5f398c8281d0ce7c2c75a076_sk\nD       balance-transfer/artifacts/channel/crypto-config/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/keystore/585175c83bac91fc0c1ce8f9d0ff9aefa47c565678f100ca8673db249ee785ac_sk\n","username":"lehors","ts":"2017-07-11T22:05:27.540Z"}
{"msg":"Please open a JIRA @lehors ","username":"JonathanLevi","ts":"2017-07-11T22:06:10.353Z"}
{"msg":"We can move this to the #fabric-release channel","username":"JonathanLevi","ts":"2017-07-11T22:06:21.205Z"}
{"msg":"ok","username":"lehors","ts":"2017-07-11T22:06:24.715Z"}
{"msg":"Thank you and thanks for the input/feedback!","username":"JonathanLevi","ts":"2017-07-11T22:06:43.800Z"}
{"msg":"We have a workaround for the above. See https://chat.hyperledger.org/channel/fabric-release?msg=T2bMdD7JwCzTAHzLb","username":"JonathanLevi","ts":"2017-07-11T22:37:52.572Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=T2bMdD7JwCzTAHzLb","url":"https://chat.hyperledger.org/channel/fabric-release?msg=T2bMdD7JwCzTAHzLb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"`make license` leads to following output error","username":"C0rWin","ts":"2017-07-11T22:51:27.258Z"}
{"msg":"```\nChecking committed files for SPDX-License-Identifier headers ...\nThe following files are missing SPDX-License-Identifier headers:\norderer/multichain/manager.go\norderer/multichain/manager_test.go\n\nPlease replace the Apache license header comment text with:\nSPDX-License-Identifier: Apache-2.0\nmake: *** [license] Error 1\n```","username":"C0rWin","ts":"2017-07-11T22:51:43.363Z"}
{"msg":"files have old copyrights comments:","username":"C0rWin","ts":"2017-07-11T22:52:41.560Z"}
{"msg":"```/*\nCopyright IBM Corp. 2016 All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n                 http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/```","username":"C0rWin","ts":"2017-07-11T22:52:47.577Z"}
{"msg":"btw, isn't license check part of the release process?","username":"C0rWin","ts":"2017-07-11T22:54:06.771Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11577/","username":"C0rWin","ts":"2017-07-11T23:07:01.943Z"}
{"msg":"^^^ a fix just in case ","username":"C0rWin","ts":"2017-07-11T23:07:17.561Z"}
{"msg":"I reviewed https://gerrit.hyperledger.org/r/#/c/11205.  The Write Your First App SDK sample does indeed work now given the updates from @jimthematrix.  But I have a concern on one of the scripts, please see my gerrit comment.","username":"dave.enyeart","ts":"2017-07-11T23:13:32.680Z"}
{"msg":"I reviewed https://gerrit.hyperledger.org/r/#/c/11205.  The Write Your First App SDK sample does indeed work now given the updates from @jimthematrix .  But I have a concern on one of the scripts, please see my gerrit comment.","username":"dave.enyeart","ts":"2017-07-11T23:13:32.680Z"}
{"msg":"==========\nBTW: To be clear, the release is not complete. Stuff is still being sync, and as you see, there are bits and pieces everywhere that are being ironed out (from minor things all the way to legal).\n\nBut regardless, this is just a reminder that we are still in *CODE FREEZE* mode. Feel free to +2 whatever you deem appropriate, but please let's have @cbf, @mastersingh24 or I, Jonathan, merging things while we are at it.\n==========","username":"JonathanLevi","ts":"2017-07-12T00:02:45.122Z"}
{"msg":"==========\nBTW: To be clear, the release is not complete. Stuff is still being sync'd, and as you see, there are bits and pieces everywhere that are being ironed out (from minor things all the way to legal).\n\nBut regardless, this is just a reminder that we are still in *CODE FREEZE* mode. Feel free to +2 whatever you deem appropriate, but please let's have @cbf, @mastersingh24 or I, Jonathan, merging things while we are at it.\n==========","username":"JonathanLevi","ts":"2017-07-12T00:02:45.122Z"}
{"msg":"==========\nBTW: To be clear, the release is not complete. Stuff is still being sync'd, and as you see, there are bits and pieces everywhere that are being ironed out (from minor things all the way to legal).\n\nBut regardless, this is just a reminder that we are still in *CODE FREEZE* mode. Feel free to +2 whatever you deem appropriate, but please let's have @cbf, @mastersingh24 or I, Jonathan, merging things while we are at it.\n\nThat is, please, do not hit *Submit* in gerrit. Thanks in advance. Final steps, and we are done. We're not far acutally...\n==========","username":"JonathanLevi","ts":"2017-07-12T00:30:53.269Z"}
{"msg":"@C0rWin eventually license check will be part of CI but we aren't quite there yet","username":"lehors","ts":"2017-07-12T00:44:13.399Z"}
{"msg":"the script anticipates that we use SPDX everywhere but we aren't there yet","username":"lehors","ts":"2017-07-12T00:45:31.143Z"}
{"msg":"it is unfortunate that it is part of the default make target","username":"lehors","ts":"2017-07-12T01:02:26.232Z"}
{"msg":"actually, I don't know what happened here but I remember Chris had made the script return 0 in all cases to make it informative and avoid the build to fail in such a case. I see the script is back to doing exit 1 ","username":"lehors","ts":"2017-07-12T01:27:31.340Z"}
{"msg":"Has joined the channel.","username":"naohide","ts":"2017-07-12T01:35:32.019Z","type":"uj"}
{"msg":"Unless I am missing something, `make license` is not run by default.  The idea was that as we modified files, we would modify the license header - so when you run say `make desk-check` (which only runs against your changes) it will run `make license` to remind you to also modify the license header in any files you've changed","username":"mastersingh24","ts":"2017-07-12T03:45:16.934Z"}
{"msg":"[ Sorry - was on a plane - thanks Jim!](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ZP3EjWFDCHGtFWTMQ) @jimthematrix ","username":"mastersingh24","ts":"2017-07-12T03:58:55.860Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ZP3EjWFDCHGtFWTMQ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ZP3EjWFDCHGtFWTMQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@dave.enyeart addressed your comment in 11205. thanks","username":"jimthematrix","ts":"2017-07-12T13:09:01.325Z"}
{"msg":"@jimthematrix +2ed 11205.  @JonathanLevi it is ready to merge now.","username":"dave.enyeart","ts":"2017-07-12T13:24:47.278Z"}
{"msg":"Merged, thanks. ","username":"JonathanLevi","ts":"2017-07-12T13:57:46.171Z"}
{"msg":"Thoughts on this, please: https://gerrit.hyperledger.org/r/#/c/11573/","username":"JonathanLevi","ts":"2017-07-12T13:57:52.136Z"}
{"msg":"Going forward all these \"tags\" should in one, uno, single, file !","username":"JonathanLevi","ts":"2017-07-12T13:58:13.897Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=2ieZHf3289ikxHcTe) Yes, ","username":"JonathanLevi","ts":"2017-07-12T14:00:22.556Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2ieZHf3289ikxHcTe","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2ieZHf3289ikxHcTe","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Totally ^^^","username":"JonathanLevi","ts":"2017-07-12T14:00:25.893Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=dafCXdRiScGPk3Jm9) @JonathanLevi having this goal as part of 'make all', guess we need to at some point to enforce it to avoid confusion ","username":"C0rWin","ts":"2017-07-12T14:31:51.174Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=dafCXdRiScGPk3Jm9","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=dafCXdRiScGPk3Jm9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=2ieZHf3289ikxHcTe) @mastersingh24 that's not what I'm seeing though, for fabric make all includes the license target","username":"lehors","ts":"2017-07-12T16:19:28.197Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2ieZHf3289ikxHcTe","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2ieZHf3289ikxHcTe","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I think the way to fix it though is to simply change the Makefile to ignore (for now) errors reported by the license check","username":"lehors","ts":"2017-07-12T16:23:43.844Z"}
{"msg":"Has left the channel.","username":"paapighoda","ts":"2017-07-13T05:48:20.542Z","type":"ul"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ydJidrck2ecEKhsbp) @C0rWin IMO, we should EXCUDE the year, it is immaterial","username":"cbf","ts":"2017-07-13T16:42:15.244Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ydJidrck2ecEKhsbp","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ydJidrck2ecEKhsbp","remote":true,"fileId":null,"fileName":null}]}
{"msg":"and we should be using the SPDX-License-Identifier header. However, we should be changing over only as we change files","username":"cbf","ts":"2017-07-13T16:42:57.693Z"}
{"msg":"no sense in a mass update","username":"cbf","ts":"2017-07-13T16:43:03.274Z"}
{"msg":"@cbf wasn't suggesting mass update, but IMO if the goal is to update license header as we making changes we need to enforce it at CI level, to prevent such failures in the future ","username":"C0rWin","ts":"2017-07-13T16:54:46.233Z"}
{"msg":"@cbf, did you want change the script back to fail (exit 1)?","username":"lehors","ts":"2017-07-13T17:32:28.193Z"}
{"msg":"I actually think that's what it should do but I would change the Makefile target to ignore with a -","username":"lehors","ts":"2017-07-13T17:33:09.038Z"}
{"msg":"@lehors we could, yes ","username":"cbf","ts":"2017-07-13T19:24:05.380Z"}
{"msg":"ok","username":"lehors","ts":"2017-07-13T21:58:51.637Z"}
{"msg":"Excluding the year is the way to go. Putting a year into headers makes for goofy arguments that are long lasting and not interesting.","username":"rjones","ts":"2017-07-13T21:59:54.721Z"}
{"msg":"+1","username":"cbf","ts":"2017-07-13T22:11:21.947Z"}
{"msg":"ok, @JonathanLevi @rjones and I created the release branches for each of the repos EXCEPT fabric-sdk-java ","username":"cbf","ts":"2017-07-14T14:59:23.099Z"}
{"msg":"so, with that out of the way, think we can release the hounds (eg. remove the merger freeze) for all but fabric-sdk-java","username":"cbf","ts":"2017-07-14T15:00:23.636Z"}
{"msg":"@JonathanLevi agree?","username":"cbf","ts":"2017-07-14T15:00:31.390Z"}
{"msg":"\nTo be clear, we are creating a *release* branch for each, using the HEAD\nfabric, fabric-ca, fabric-sdk-node, ...","username":"JonathanLevi","ts":"2017-07-14T15:01:24.364Z"}
{"msg":"s/are creating/created/","username":"cbf","ts":"2017-07-14T15:01:41.347Z"}
{"msg":"And we will be making the releases going forward off of these *release* branches","username":"JonathanLevi","ts":"2017-07-14T15:02:14.155Z"}
{"msg":"Is the plan to always cut releases from master? Or will will fork off a 1.0.1 release branch and cherry-pick desired commits onto it?","username":"jyellick","ts":"2017-07-14T15:05:08.682Z"}
{"msg":"Always cut releases from *release*","username":"JonathanLevi","ts":"2017-07-14T15:05:43.675Z"}
{"msg":"If a plan has been finalized (as it sounds like), let's summarize it in the mailing list?","username":"kostas","ts":"2017-07-14T15:07:56.736Z"}
{"msg":"Yes, it's JIRA, just quickly (while we are at it). So 4 projects:\n\n1. fabric\n2. fabric-ca\n3. fabric-sdk-node\n4. fabric-samples","username":"JonathanLevi","ts":"2017-07-14T15:08:19.819Z"}
{"msg":"(for now,) have a *release* branch.","username":"JonathanLevi","ts":"2017-07-14T15:08:35.269Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-5050","username":"cbf","ts":"2017-07-14T15:09:38.931Z"}
{"msg":"will there be a new release branch per release?  e.g. once 1.1 is released will it still be possible to provide fixes on top of 1.0?","username":"dave.enyeart","ts":"2017-07-14T15:48:06.968Z"}
{"msg":"Posted my question to the JIRA, but concretely, what should a developer do who wants to submit code destined for v1.0.1? How about for v1.1.0?","username":"jyellick","ts":"2017-07-14T15:49:24.479Z"}
{"msg":"that was my next question... can we consider 1.0.1 to be bug fixes and therefore done on release branch whereas new features go into master, destined for 1.1?","username":"dave.enyeart","ts":"2017-07-14T15:50:11.114Z"}
{"msg":"@cbf @JonathanLevi ^","username":"jyellick","ts":"2017-07-14T15:54:44.902Z"}
{"msg":"nothing gets merged to release branch except a release","username":"cbf","ts":"2017-07-14T16:07:01.077Z"}
{"msg":"What then is the process for submitting a fix intended for v1.0.1 vs a feature intended for v1.1.0?","username":"jyellick","ts":"2017-07-14T16:10:32.473Z"}
{"msg":"we're working on an email ","username":"cbf","ts":"2017-07-14T16:11:07.832Z"}
{"msg":"but new features should have a feature flag IMNSHO","username":"cbf","ts":"2017-07-14T16:11:26.154Z"}
{"msg":"also, I think that we should be voting on new features","username":"cbf","ts":"2017-07-14T16:12:42.172Z"}
{"msg":"and be much more deliberate as to what we are delivering","username":"cbf","ts":"2017-07-14T16:13:13.627Z"}
{"msg":"BTW, just quickly in the meantime: \n- Let's begin with smaller steps.\n- We will continue to work on master (as always).\n- The imminent upcoming \"release\" is indeed 1.0.1, which should be out on July 31.\n- We will work on master, fast forward merge to the *release* branch and release off of that branch","username":"JonathanLevi","ts":"2017-07-14T17:21:20.220Z"}
{"msg":"To clarify, we are not trying to avoid answering the questions regarding \"what about 1.1\". At this very moment, we have a lot of work that needs to be done, by the maintainers, as we worked with a \"binary\" flag of 1.0.0 or not.","username":"JonathanLevi","ts":"2017-07-14T17:22:23.650Z"}
{"msg":"To clarify, we are not trying to avoid answering the questions regarding \"what about 1.1, etc.\". These are good questions, and we should really document them, review, (re-)iterate (and improve)...\n\nAt this very moment, we have a lot of work that needs to be done, by the maintainers, as we worked with a \"binary\" flag of 1.0.0 or not.","username":"JonathanLevi","ts":"2017-07-14T17:22:23.650Z"}
{"msg":"We will have to work out a plan for 1.1, what's a minor version/periodical build/release 1.0.1, 1.0.2, ... and what's longer term, such as separating the 1.1 work, the 1.2, etc.","username":"JonathanLevi","ts":"2017-07-14T17:23:19.944Z"}
{"msg":"In line what Chris' suggestion above - that we'd simply vote on new features.","username":"JonathanLevi","ts":"2017-07-14T17:23:50.391Z"}
{"msg":"[ Can't tell if I have clarified or confused even more... tbh ]","username":"JonathanLevi","ts":"2017-07-14T17:24:25.148Z"}
{"msg":"@JonathanLevi I'm still fairly confused if I'm being honest.  It sounds like we should not be merging anything into master right now which we do not intend to go to v1.0.1? That seems like it should be the vast majority of CRs","username":"jyellick","ts":"2017-07-14T17:25:38.693Z"}
{"msg":"Let's do this:\n\n[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=6rqKkEbb29c7AK2mv) ","username":"JonathanLevi","ts":"2017-07-14T17:26:29.721Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6rqKkEbb29c7AK2mv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6rqKkEbb29c7AK2mv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"THere are several bugs, test improvements, etc... that didn't make it to 1.0.0 - we can start merging these.","username":"JonathanLevi","ts":"2017-07-14T17:27:35.774Z"}
{"msg":"(From the moment we announce the end of the code freeze, etc.)","username":"JonathanLevi","ts":"2017-07-14T17:27:55.496Z"}
{"msg":"But that's a good point @jyellick - we should clarify what should be part of 1.0.1","username":"JonathanLevi","ts":"2017-07-14T17:28:21.558Z"}
{"msg":"Planning is key. I'm with you.","username":"JonathanLevi","ts":"2017-07-14T17:28:30.069Z"}
{"msg":"So, just to clarify.  Nothing that is not a bug fix or a feature which has been voted on for v1.0.1 should be merged?","username":"jyellick","ts":"2017-07-14T17:28:34.961Z"}
{"msg":"[ Amiably ] I'm afraid to write here, not only, just for the off-chance that you are going to rewrite the entire channel configuration over the weekend! ;-)","username":"JonathanLevi","ts":"2017-07-14T17:29:46.333Z"}
{"msg":"[ Amiably ] I'm afraid to write here, \"not only\", just for the off-chance that you are going to rewrite the entire channel configuration over the weekend! ;-)","username":"JonathanLevi","ts":"2017-07-14T17:29:46.333Z"}
{"msg":"[ Amiably ] I'm afraid to write here, \"not only\", just for the off-chance that you are going to rewrite the entire channel configuration over the weekend! ;-) Both of us know that you can do it, so it's not really a far-fetched idea ;-))))","username":"JonathanLevi","ts":"2017-07-14T17:29:46.333Z"}
{"msg":"How about we should probably discuss this (the expectations/plan for what should get merged into master) further, at the beginning of the week?","username":"JonathanLevi","ts":"2017-07-14T17:31:15.419Z"}
{"msg":"How about / we should probably discuss this (the expectations/plan for what should get merged into master) further, at the beginning of the week?","username":"JonathanLevi","ts":"2017-07-14T17:31:15.419Z"}
{"msg":"How about / we should probably discuss this (the expectations/plan for what [else, in addition to the above] should get merged into master) further, at the beginning of the week?","username":"JonathanLevi","ts":"2017-07-14T17:31:15.419Z"}
{"msg":"Sounds good.  We can defer discussion for the moment, as we clearly have a backlog of definitely v1.0.1 material which is fine to work on.  But I think this is something that's important we get a handle on, as the cost of deferring is not free. As people begin working on code intended for v1.1.0 with no path to merge, the time which will be wasted resolving merge conflicts will continue to build.","username":"jyellick","ts":"2017-07-14T17:37:37.635Z"}
{"msg":"Sounds good.  We can defer discussion for the moment, as we clearly have a backlog of definitely v1.0.1 material which is fine to work on.  But I think this is something that's important we get a handle on, as the cost of deferring is not free. As people begin working on code intended for v1.1.0 with no path to merge, the time which will ultimately be wasted resolving merge conflicts will continue to build.","username":"jyellick","ts":"2017-07-14T17:37:37.635Z"}
{"msg":"Sounds good.  We can defer discussion for the moment, as we clearly have a backlog of definitely v1.0.1 material which is fine to work on.  But I think this is something that's important we get a handle on, as the cost of deferring is not free. As people begin working on code intended for v1.1.0 with no path to merge, the time which will ultimately be wasted resolving merge conflicts will continue to build (or worse yet, people will begin to hack on dead code paths, etc.).","username":"jyellick","ts":"2017-07-14T17:37:37.635Z"}
{"msg":"so what's the status of merging - @JonathanLevi @cbf , when will it resume? ","username":"yacovm","ts":"2017-07-14T17:45:47.759Z"}
{"msg":"Should we wait for a discussion for next week and until then still a *MERGE FREEZE* ? ","username":"yacovm","ts":"2017-07-14T17:46:20.523Z"}
{"msg":"I agree with you Jason. That's why I suggest that we clarify it very early next week (when everybody's back)","username":"JonathanLevi","ts":"2017-07-14T17:48:00.119Z"}
{"msg":"I'd still rather release the merge freeze sooner. 7 days of a freeze has been sufficient, IMO.","username":"JonathanLevi","ts":"2017-07-14T17:48:41.977Z"}
{"msg":"Since the `release` branch has been created, it seems like we should be safe to begin merging bug fixes for v1.0.1?","username":"jyellick","ts":"2017-07-14T17:49:09.137Z"}
{"msg":"Yes, that's what I meant above. Indeed.","username":"JonathanLevi","ts":"2017-07-14T17:49:30.370Z"}
{"msg":"Let me formalize it a bit more (in an email etc.) but yes, that's the interim plan.","username":"JonathanLevi","ts":"2017-07-14T17:50:05.511Z"}
{"msg":"Great thanks! ( @yacovm ^ )","username":"jyellick","ts":"2017-07-14T17:50:25.847Z"}
{"msg":"Call it, the \"post-release-weekend plan\"","username":"JonathanLevi","ts":"2017-07-14T17:50:37.921Z"}
{"msg":"+1 bug fixes, doc fixes and test code","username":"cbf","ts":"2017-07-14T17:50:44.123Z"}
{"msg":"so the plan for the next 2 weeks is just bug fixes, doc fixes and test code?","username":"yacovm","ts":"2017-07-14T17:51:22.986Z"}
{"msg":"And whatever we agree on, early next week.","username":"JonathanLevi","ts":"2017-07-14T17:51:38.449Z"}
{"msg":"I guess - stuff that are gray area will be tagged with needs-review as before?","username":"yacovm","ts":"2017-07-14T17:51:53.594Z"}
{"msg":"Yes, the gray area (e.g. \"new features\") - we should vote on, as written above.","username":"JonathanLevi","ts":"2017-07-14T17:53:54.491Z"}
{"msg":"(Relatively) clear(er) ? Makes sense to everybody?","username":"JonathanLevi","ts":"2017-07-14T17:54:17.941Z"}
{"msg":"Makes sense, only I wasn't really referring to new features - more like small tweaks in performance, simple high availability improvements, etc.","username":"yacovm","ts":"2017-07-14T17:55:26.180Z"}
{"msg":"When in doubt, let's just ask around and vote...","username":"JonathanLevi","ts":"2017-07-14T17:55:55.020Z"}
{"msg":"When in doubt, let's just ask around. If needed, we'll vote...","username":"JonathanLevi","ts":"2017-07-14T17:55:55.020Z"}
{"msg":"I think that next week, we'll have a clearer message to everybody (everybody as in everybody, not just the maintainers) so that the expectations/plan is clear.","username":"JonathanLevi","ts":"2017-07-14T17:57:55.900Z"}
{"msg":"@yacovm I think that small tweaks are probably fine for performance or stability improvements. Anything more substantial, we should probably handle with the review-needed approach as before","username":"cbf","ts":"2017-07-14T19:13:44.686Z"}
{"msg":"I think we will want to have a maintainers meeting early next week with @mastersingh24 back to build consensus on how we manage feature development for post 1.0","username":"cbf","ts":"2017-07-14T19:14:30.229Z"}
{"msg":"I definitely prefer a feature flag approach to new feature introduction","username":"cbf","ts":"2017-07-14T19:15:35.849Z"}
{"msg":"that way we can easily disable features that aren't ready for prime time","username":"cbf","ts":"2017-07-14T19:16:07.388Z"}
{"msg":"FYI: https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-July/001308.html","username":"JonathanLevi","ts":"2017-07-14T22:40:07.875Z"}
{"msg":"FYI: https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-July/001309.html","username":"JonathanLevi","ts":"2017-07-14T22:40:07.875Z"}
{"msg":"Or in a line:\n*CODE FREEZE - END*","username":"JonathanLevi","ts":"2017-07-14T22:43:40.344Z"}
{"msg":"CODE THAW?","username":"mastersingh24","ts":"2017-07-15T09:48:35.926Z"}
{"msg":"I'm MELTING","username":"cbf","ts":"2017-07-17T13:10:10.028Z"}
{"msg":"@cbf I noticed that the 'release' branch in fabric-sdk-node was created with a few CRs that were merged after the 1.0 tag. Not sure if that was done intentionally. I don't think it's a problem (all changes since the 1.0 tagging was doc and tests) but want to call them out here to avoid future confusion","username":"jimthematrix","ts":"2017-07-17T13:29:13.669Z"}
{"msg":"@JonathanLevi @mastersingh24 ^^^","username":"jimthematrix","ts":"2017-07-17T13:29:31.049Z"}
{"msg":"We have branched out of HEAD","username":"JonathanLevi","ts":"2017-07-17T13:30:02.361Z"}
{"msg":"we discussed this and agreed to cut from HEAD to catch any merges that were post tag but merged during the freeze","username":"cbf","ts":"2017-07-17T13:30:17.027Z"}
{"msg":"@JonathanLevi When do you think we can discuss how developers should proceed with v1.1.0 development? [ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=97rkv7bxw4XzACFnr) ","username":"jyellick","ts":"2017-07-17T17:32:32.695Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=97rkv7bxw4XzACFnr","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=97rkv7bxw4XzACFnr","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@jwagantall could you check to see if I have \"Push Annotated Tags\" rights to fabric-chaintool?","username":"greg.haskins","ts":"2017-07-17T19:32:41.758Z"}
{"msg":"I pinged @rjones about this on #fabric-chaintool  but he seems to be offline","username":"greg.haskins","ts":"2017-07-17T19:32:57.751Z"}
{"msg":"posting the question here in the open to be transparent","username":"greg.haskins","ts":"2017-07-17T19:33:18.481Z"}
{"msg":"let me check.. ","username":"jwagantall","ts":"2017-07-17T19:41:28.012Z"}
{"msg":"you should with this account ","username":"jwagantall","ts":"2017-07-17T19:43:30.264Z"}
{"msg":"greg.haskins\tGreg\tHaskins\tgregory.haskins@gmail.com","username":"jwagantall","ts":"2017-07-17T19:43:32.011Z"}
{"msg":"@rjones is around, btw.","username":"JonathanLevi","ts":"2017-07-17T19:45:33.570Z"}
{"msg":"(Or at least someone is exchanging ASCII characters with me, on his behalf ;-))","username":"JonathanLevi","ts":"2017-07-17T19:46:04.779Z"}
{"msg":"(Or at least someone is/has been exchanging ASCII characters with me, on his behalf ;-))","username":"JonathanLevi","ts":"2017-07-17T19:46:04.779Z"}
{"msg":"hahahah .. yes.. is him :)  he is also replying to me :)","username":"jwagantall","ts":"2017-07-17T19:46:29.506Z"}
{"msg":"@jwagantall could you paste that stanza from refs/meta/config? Push Annotated Tag and Pushed Signed should be open to the ldap group","username":"rjones","ts":"2017-07-17T19:51:13.434Z"}
{"msg":"Or if that is the case, blink once. Twice if under duress","username":"rjones","ts":"2017-07-17T19:51:56.344Z"}
{"msg":"yes.. in fact it is ","username":"jwagantall","ts":"2017-07-17T19:57:38.903Z"}
{"msg":"\tpushTag = group ldap/hyperledger-gerrit-fabric-chaintool-committers\n\tpushTag = group ldap/hyperledger-gerrit-fabric-committers\n\tpushSignedTag = group ldap/hyperledger-gerrit-fabric-chaintool-committers\n\tpushSignedTag = group ldap/hyperledger-gerrit-fabric-committers","username":"jwagantall","ts":"2017-07-17T19:57:42.661Z"}
{"msg":"@greg.haskins  is part of these groups.. ","username":"jwagantall","ts":"2017-07-17T19:57:52.232Z"}
{"msg":"@jwagantall ty for confirming...i must be doign the push wrong","username":"greg.haskins","ts":"2017-07-17T20:13:29.505Z"}
{"msg":"@JonathanLevi @cbf either of you push tags recently?","username":"greg.haskins","ts":"2017-07-17T20:15:46.046Z"}
{"msg":"I know its tricky to get the magic incantation to make gerrit happy, but i cant seem to recall it","username":"greg.haskins","ts":"2017-07-17T20:16:16.147Z"}
{"msg":"On July 11, 2017, we pushed the \"v1.0.0\"","username":"JonathanLevi","ts":"2017-07-17T20:16:18.458Z"}
{"msg":"```Gregs-MBP:fabric-chaintool ghaskins$ git push gerrit v1.0.0\nCounting objects: 1, done.\nWriting objects: 100% (1/1), 170 bytes | 0 bytes/s, done.\nTotal 1 (delta 0), reused 0 (delta 0)\nremote: Processing changes: refs: 1, done\nTo ssh://gerrit.hyperledger.org:29418/fabric-chaintool\n ! [remote rejected] v1.0.0 -> v1.0.0 (prohibited by Gerrit)\nerror: failed to push some refs to 'ssh://greg.haskins@gerrit.hyperledger.org:29418/fabric-chaintool'\nGregs-MBP:fabric-chaintool ghaskins$ git push gerrit HEAD:refs/tags/v1.0.0\nTotal 0 (delta 0), reused 0 (delta 0)\nremote: Processing changes: refs: 1, done\nTo ssh://gerrit.hyperledger.org:29418/fabric-chaintool\n ! [remote rejected] HEAD -> v1.0.0 (prohibited by Gerrit)\nerror: failed to push some refs to 'ssh://greg.haskins@gerrit.hyperledger.org:29418/fabric-chaintool'```","username":"greg.haskins","ts":"2017-07-17T20:16:21.799Z"}
{"msg":"I did create the tag annotated as far as I know","username":"greg.haskins","ts":"2017-07-17T20:16:39.553Z"}
{"msg":"I think one needs special permissions for pushing a tag.","username":"JonathanLevi","ts":"2017-07-17T20:16:57.679Z"}
{"msg":"y, but I should have it","username":"greg.haskins","ts":"2017-07-17T20:17:07.117Z"}
{"msg":"(I used to do all the tagging before we got _real_ release managers ;)","username":"greg.haskins","ts":"2017-07-17T20:17:20.899Z"}
{"msg":"Yes, you did it before. I remember.","username":"JonathanLevi","ts":"2017-07-17T20:17:22.609Z"}
{"msg":"LOL","username":"JonathanLevi","ts":"2017-07-17T20:17:30.426Z"}
{"msg":"and @jwagantall confirmed that greg.haskins is in the group still","username":"greg.haskins","ts":"2017-07-17T20:17:53.021Z"}
{"msg":"Interesting.","username":"JonathanLevi","ts":"2017-07-17T20:18:00.552Z"}
{"msg":"do you recall the syntax you used?","username":"greg.haskins","ts":"2017-07-17T20:18:10.714Z"}
{"msg":"i remember its a bit wonky","username":"greg.haskins","ts":"2017-07-17T20:18:15.784Z"}
{"msg":"In my case, I had to tag at a specified commit level as something else was merged","username":"JonathanLevi","ts":"2017-07-17T20:19:59.963Z"}
{"msg":"So","username":"JonathanLevi","ts":"2017-07-17T20:20:01.424Z"}
{"msg":"*git tag -a v1.0.0 e4b4704 -F release_notes/v1.0.0.txt*","username":"JonathanLevi","ts":"2017-07-17T20:20:07.463Z"}
{"msg":"ah, -a","username":"greg.haskins","ts":"2017-07-17T20:20:13.866Z"}
{"msg":"i think I used -m","username":"greg.haskins","ts":"2017-07-17T20:20:18.246Z"}
{"msg":"let me try to recreate it","username":"greg.haskins","ts":"2017-07-17T20:20:21.648Z"}
{"msg":"(note that you almost _always_ have to specify the commit-id","username":"greg.haskins","ts":"2017-07-17T20:20:41.906Z"}
{"msg":"There is also:\n*git show-ref --abbrev=7 --tag*","username":"JonathanLevi","ts":"2017-07-17T20:20:43.747Z"}
{"msg":"at least, if you use a workflow similar to me","username":"greg.haskins","ts":"2017-07-17T20:20:53.750Z"}
{"msg":"(because I always commit a \"release\" and \"prepare for next\" CR","username":"greg.haskins","ts":"2017-07-17T20:21:07.402Z"}
{"msg":"so, I am virtually always tagging the \"release\" CR when its no longer current","username":"greg.haskins","ts":"2017-07-17T20:21:24.516Z"}
{"msg":"We had a different workflow in alpha2, beta, rc1","username":"JonathanLevi","ts":"2017-07-17T20:21:29.626Z"}
{"msg":"But hey, I managed to adapt, 58 minutes later.","username":"JonathanLevi","ts":"2017-07-17T20:21:44.246Z"}
{"msg":";-)","username":"JonathanLevi","ts":"2017-07-17T20:21:46.150Z"}
{"msg":"anyway, thanks for the hint, let me try that","username":"greg.haskins","ts":"2017-07-17T20:21:52.214Z"}
{"msg":"Sure. This should be helpful, really: \n*git show-ref --abbrev=7 --tag","username":"JonathanLevi","ts":"2017-07-17T20:22:07.033Z"}
{"msg":"Sure. This should be helpful, really: \n*git show-ref --abbrev=7 --tag*","username":"JonathanLevi","ts":"2017-07-17T20:22:07.033Z"}
{"msg":"Also, when I pushed the tags, it wasn't \"for review\"","username":"JonathanLevi","ts":"2017-07-17T20:22:28.147Z"}
{"msg":"That's just me being a paranoid","username":"JonathanLevi","ts":"2017-07-17T20:22:28.147Z"}
{"msg":"what is the first field in the show-ref?","username":"greg.haskins","ts":"2017-07-17T20:23:39.610Z"}
{"msg":"this is bizzare","username":"greg.haskins","ts":"2017-07-17T20:25:52.624Z"}
{"msg":"im not sure what you meant by \"for review\" above","username":"greg.haskins","ts":"2017-07-17T20:26:06.021Z"}
{"msg":"mine werent either: pushing tags was always live/direct","username":"greg.haskins","ts":"2017-07-17T20:26:16.605Z"}
{"msg":"\n--abbrev=<n>\nInstead of using the default 7 hexadecimal digits as the abbreviated object name, use <n> digits, or as many digits as needed to form a unique object name. An <n> of 0 will suppress long format, only showing the closest tag.\n","username":"JonathanLevi","ts":"2017-07-17T20:27:00.861Z"}
{"msg":"___\nThat's just me being a paranoid","username":"JonathanLevi","ts":"2017-07-17T20:27:12.764Z"}
{"msg":"---\nCheck with Ry, I don't know why you suddenly can't push a tag","username":"JonathanLevi","ts":"2017-07-17T20:27:55.551Z"}
{"msg":"whats weird is it doesnt seem to show the thing I tagged","username":"greg.haskins","ts":"2017-07-17T20:28:00.842Z"}
{"msg":"something must be wrong","username":"greg.haskins","ts":"2017-07-17T20:28:04.731Z"}
{"msg":"Yes, that's why I suggested this (git show-ref --abbrev=7 --tag)","username":"JonathanLevi","ts":"2017-07-17T20:28:23.292Z"}
{"msg":"Not even in *git tag* ?","username":"JonathanLevi","ts":"2017-07-17T20:28:45.206Z"}
{"msg":"right, thats what I mean","username":"greg.haskins","ts":"2017-07-17T20:28:58.147Z"}
{"msg":"show-ref has bizarre output","username":"greg.haskins","ts":"2017-07-17T20:29:08.655Z"}
{"msg":"It's sick ;-)","username":"JonathanLevi","ts":"2017-07-17T20:29:22.376Z"}
{"msg":"heh","username":"greg.haskins","ts":"2017-07-17T20:29:30.450Z"}
{"msg":"But not in the cool, slang way, probably.","username":"JonathanLevi","ts":"2017-07-17T20:29:47.319Z"}
{"msg":"I can take a look","username":"JonathanLevi","ts":"2017-07-17T20:29:58.932Z"}
{"msg":"so check this out","username":"greg.haskins","ts":"2017-07-17T20:30:16.202Z"}
{"msg":"```$ git log --oneline\nb393b3f (HEAD, tag: v1.0.0) Release v1.0.0\nbb7e324 [FAB-5177] Auto-vendor the shim library\n50adcfa [FAB-5229] Update prerequistes in getting-started\ndce2a8f Merge \"[FAB-5138] Adds support for map types\"\n182ee6d [FAB-5138] Adds support for map types\n1d0335d [FAB-5227] Add lein-license plugin\nc86c926 Merge \"[FAB-4859] Improve \"Getting Started\" documentation\"\n4c28de2 Merge \"FAB-3963 add missing license headers\"\nd331054 [FAB-4859] Improve \"Getting Started\" documentation\nfd1fe5d FAB-3963 add missing license headers\n0462fe6 [FAB-2036] auto-vendor external dependencies\nb2ce8e9 Merge \"FAB-4571 add missing license headers\"\n286b38d FAB-4571 add missing license headers\n1735990 [FAB-4569] Upgrade example02 clients to beta\n4ef1145 FAB-4310 add missing CCBY license to docs\nd8bd2d6 Set version to 1.0.0-alpha3-SNAPSHOT\n3027261 [FAB-4154] Upgrade our deps\n604a636 [FAB-4011] Update clojurescript example\n20a6080 [FAB-4010] Update nodejs example for 1.0.0-alpha2\n507edf5 FAB-3898 add changelog.sh\ne3744de [FAB-3340] fix broken link to contributing doc\nb8f8a5c Update to use 1.0.0-alpha versions of the SDK\n1ee556a Update documentation for readthedocs\n0fc1a53 Port example02 nodejs client to latest version of SDK\n1da631a Prepare for v0.10.4 development\nc7caae4 (tag: v0.10.3) Release v0.10.3\n5fde1e5 Link golang chaincode with -static\ncf55d6c Prepare for v0.10.3 development\nb579a6a (tag: v0.10.2) Release v0.10.2\n708af63 Add basic support for eventhub\n62f24c2 Remove base64 from protocol\nd2ceb4e Prepare for v0.10.2 development\ne40a745 (tag: v0.10.1) Import release v0.10.1\n9a8948b (tag: v0.10.0) Import release v0.10.0\n6d0f535 (tag: v0.9.2) Import release v0.9.2\n3c23654 (tag: v0.9.1) Import release v0.9.1\naecaced (tag: v0.9.0) Import release v0.9.0\nf92acb3 (tag: v0.8.1) Import release v0.8.1\n20eadfd (tag: v0.8.0) Import release v0.8.0\naa98214 Initial empty repository```","username":"greg.haskins","ts":"2017-07-17T20:30:21.001Z"}
{"msg":"```$ git show-ref --tag\n1684f05891a6085cd8da1d812665dbe5ec65d417 refs/tags/v0.10.0\n31b9841fe8e3b7a87dd70a6281d317ae67adea18 refs/tags/v0.10.1\nbc80f0a0440b876ed0b51c9a54ebbf6564b9d0a6 refs/tags/v0.10.2\n295bc9d7fb6383c5ca0e531f756468f1b019ef51 refs/tags/v0.10.3\n27a34bcf713473034456599d4b92efb69de16bec refs/tags/v0.8.0\ne9e8a4cd8e86df5099654c478c23392b83f0d70a refs/tags/v0.8.1\n05aed317a137db671d49776233624e6963d090cf refs/tags/v0.9.0\nc99d1e15d749315e1a964ba1df5eb2ba46363f40 refs/tags/v0.9.1\n3102520be87ca94df66f98cc41f87347d4b7c161 refs/tags/v0.9.2\n91d9fa8f2f4d10d47ea9e2002ad7fc63cb23b8e2 refs/tags/v1.0.0```","username":"greg.haskins","ts":"2017-07-17T20:30:32.829Z"}
{"msg":"note that the sha in the \"git log\" output is different from the \"show-ref\"","username":"greg.haskins","ts":"2017-07-17T20:30:50.186Z"}
{"msg":"i dont get it","username":"greg.haskins","ts":"2017-07-17T20:30:51.978Z"}
{"msg":"This one?","username":"JonathanLevi","ts":"2017-07-17T20:30:53.376Z"}
{"msg":"git clone git@github.com:hyperledger/fabric-chaintool.git","username":"JonathanLevi","ts":"2017-07-17T20:30:54.315Z"}
{"msg":"yep","username":"greg.haskins","ts":"2017-07-17T20:31:00.868Z"}
{"msg":"Yup, yours is not \"pushed\"","username":"JonathanLevi","ts":"2017-07-17T20:31:50.503Z"}
{"msg":"*git show-ref --tag*\n1684f05891a6085cd8da1d812665dbe5ec65d417 refs/tags/v0.10.0\n31b9841fe8e3b7a87dd70a6281d317ae67adea18 refs/tags/v0.10.1\nbc80f0a0440b876ed0b51c9a54ebbf6564b9d0a6 refs/tags/v0.10.2\n295bc9d7fb6383c5ca0e531f756468f1b019ef51 refs/tags/v0.10.3\n27a34bcf713473034456599d4b92efb69de16bec refs/tags/v0.8.0\ne9e8a4cd8e86df5099654c478c23392b83f0d70a refs/tags/v0.8.1\n05aed317a137db671d49776233624e6963d090cf refs/tags/v0.9.0\nc99d1e15d749315e1a964ba1df5eb2ba46363f40 refs/tags/v0.9.1\n3102520be87ca94df66f98cc41f87347d4b7c161 refs/tags/v0.9.2","username":"JonathanLevi","ts":"2017-07-17T20:32:03.690Z"}
{"msg":"understood","username":"greg.haskins","ts":"2017-07-17T20:32:09.662Z"}
{"msg":"what I am saying (right now) is that the shas reported in show-ref dont seem to correlate to the commits ","username":"greg.haskins","ts":"2017-07-17T20:32:35.236Z"}
{"msg":"and I was just curious what that is supposed to be showing","username":"greg.haskins","ts":"2017-07-17T20:32:43.187Z"}
{"msg":"its probably not important","username":"greg.haskins","ts":"2017-07-17T20:33:00.912Z"}
{"msg":"what is actually important is I keep getting rejected trying to push the v1.0.0 tag for reasons that are unclear","username":"greg.haskins","ts":"2017-07-17T20:33:18.971Z"}
{"msg":"Is it signed","username":"rjones","ts":"2017-07-17T20:46:58.392Z"}
{"msg":"Is it annotated","username":"rjones","ts":"2017-07-17T20:47:05.859Z"}
{"msg":"@greg.haskins I'm on a phone so I can't do much, but could you paste your exact gut command to create the tag?","username":"rjones","ts":"2017-07-17T20:48:33.759Z"}
{"msg":"@rjones: I believe signed=no, annotated=yes","username":"greg.haskins","ts":"2017-07-17T20:50:29.059Z"}
{"msg":"BUT, I also believe that is how i did every other tag that I managed ","username":"greg.haskins","ts":"2017-07-17T20:50:41.291Z"}
{"msg":"(which is, I think all of them up until v1.0.0 and maybe beta/rc","username":"greg.haskins","ts":"2017-07-17T20:51:01.610Z"}
{"msg":"perhaps we changes the policy rules?","username":"greg.haskins","ts":"2017-07-17T20:51:22.252Z"}
{"msg":"perhaps we changed the policy rules?","username":"greg.haskins","ts":"2017-07-17T20:51:22.252Z"}
{"msg":"```$ history | grep 'git tag'\n   26  git tag\n   35  git tag\n  126  git tag b393b3fc03187ec9931dc454c39fc63bc7cb76e4 v1.0.0\n  127  git tag -m \"Release v1.0.0\" v1.0.0 b393b3fc03187ec9931dc454c39fc63bc7cb76e4\n  128  git tag\n  161  git tag -d v1.0.0\n  162  git tag -m \"Release v1.0.0\" v1.0.0\n  166  git tag -d v1.0.0\n  167  git tag -a \"Release v1.0.0\" v1.0.0\n  169  git tag -a \"Release v1.0.0\" v1.0.0 HEAD\n  170  git tag -am \"Release v1.0.0\" v1.0.0 HEAD\n  179  git tag -d v1.0.0\n  180  git tag -a -m \"Release v1.0.0\" v1.0.0 b393b3fc03187ec9931dc454c39fc63bc7cb76e4\n  190  git tag -d v1.0.0\n  192  git tag -m \"Release v1.0.0\" v1.0.0 b393b3fc03187ec9931dc454c39fc63bc7cb76e4\n  196  history | grep 'git tag'```","username":"greg.haskins","ts":"2017-07-17T20:52:20.268Z"}
{"msg":"@rjones: ^^^","username":"greg.haskins","ts":"2017-07-17T20:52:24.464Z"}
{"msg":"that was my various (failed) attempts, heh","username":"greg.haskins","ts":"2017-07-17T20:52:48.937Z"}
{"msg":"basically I tried all combos of -a/-m","username":"greg.haskins","ts":"2017-07-17T20:53:09.206Z"}
{"msg":"i am reasonably sure that I only did \"192\" in the past","username":"greg.haskins","ts":"2017-07-17T20:53:46.323Z"}
{"msg":"@greg.haskins I haven't touched these rules in forever. I'm pretty sure the tag must be signed. Just add a `-s` (little s) to !192","username":"rjones","ts":"2017-07-17T20:56:13.952Z"}
{"msg":"unless you want to do GPG signing, which is A OK; in which case, use `-S`","username":"rjones","ts":"2017-07-17T20:56:36.372Z"}
{"msg":"@jwagantall @greg.haskins I have to run to a different appointment but I will follow along on my phone","username":"rjones","ts":"2017-07-17T20:59:30.398Z"}
{"msg":"sounds good @rjones ","username":"jwagantall","ts":"2017-07-17T20:59:47.793Z"}
{"msg":"@JonathanLevi do you recall doing \"-s\"","username":"greg.haskins","ts":"2017-07-17T21:02:51.688Z"}
{"msg":"im on a new laptop and would need to setup GPG, and can...but I dont recall doing this before","username":"greg.haskins","ts":"2017-07-17T21:03:13.242Z"}
{"msg":"You don't need GPG for little s","username":"rjones","ts":"2017-07-17T21:15:44.679Z"}
{"msg":"Nope, the above is literally the output from my terminal's *history*","username":"JonathanLevi","ts":"2017-07-17T21:15:52.882Z"}
{"msg":"No -s, -S, ...","username":"JonathanLevi","ts":"2017-07-17T21:16:27.872Z"}
{"msg":"I'll debug this after this appointment I apologize for the timing","username":"rjones","ts":"2017-07-17T21:16:48.007Z"}
{"msg":"@rjones: no worries, when you can","username":"greg.haskins","ts":"2017-07-17T21:18:23.707Z"}
{"msg":"but note that even -s was prompting me for gpg-isms","username":"greg.haskins","ts":"2017-07-17T21:18:32.746Z"}
{"msg":"```$ git tag -s -m \"Release v1.0.0\" v1.0.0 b393b3fc03187ec9931dc454c39fc63bc7cb76e4\nerror: gpg failed to sign the data\nerror: unable to sign the tag```","username":"greg.haskins","ts":"2017-07-17T21:18:51.686Z"}
{"msg":"could be operator error","username":"greg.haskins","ts":"2017-07-17T21:18:55.369Z"}
{"msg":"Shouldn't. It should just inject the signed off by line into the commit","username":"rjones","ts":"2017-07-17T21:19:22.790Z"}
{"msg":"thats for commit i think","username":"greg.haskins","ts":"2017-07-17T21:19:47.171Z"}
{"msg":"git commit -s will add a DCO","username":"greg.haskins","ts":"2017-07-17T21:20:00.388Z"}
{"msg":"Ah ok, I thought the option was the same for fit tag","username":"rjones","ts":"2017-07-17T21:20:37.660Z"}
{"msg":"in any case, i am fairly sure that \"git tag -m 'msg'\" was all that was needed in the past","username":"greg.haskins","ts":"2017-07-17T21:20:47.126Z"}
{"msg":"Yes","username":"rjones","ts":"2017-07-17T21:21:02.781Z"}
{"msg":"im guessing there is nothing wrong with the tag creation itself, but I am goofing something up with the push","username":"greg.haskins","ts":"2017-07-17T21:21:07.867Z"}
{"msg":"I recall gerrit has weird requirements, not quite natural to normal git-isms","username":"greg.haskins","ts":"2017-07-17T21:21:35.293Z"}
{"msg":"but I tried all permutations I could think of, all seemed to be rejected in a similar manner","username":"greg.haskins","ts":"2017-07-17T21:21:55.521Z"}
{"msg":"What is your exact push command","username":"rjones","ts":"2017-07-17T21:21:57.198Z"}
{"msg":"(thus my question about perms)","username":"greg.haskins","ts":"2017-07-17T21:22:03.419Z"}
{"msg":"```  142  git push gerrit v1.0.0\n  143  git push gerrit v1.0.0:refs/tags/v1.0.0\n  144  git push gerrit v1.0.0:v1.0.0\n  145  git push gerrit v1.0.0\n  146  git push gerrit v1.0.0:refs/heads/v1.0.0\n  147  git push gerrit v1.0.0 HEAD:refs/heads/v1.0.0\n  149  git push gerrit HEAD:refs/heads/v1.0.0\n  150  git push gerrit HEAD:refs/tags/v1.0.0\n  151  git push gerrit HEAD refs/tags/v1.0.0\n  152  git push gerrit v1.0.0 refs/tags/v1.0.0\n  153  git push gerrit v1.0.0\n  159  git push gerrit v1.0.0\n  160  git push gerrit HEAD:refs/tags/v1.0.0\n  165  git push gerrit HEAD:refs/tags/v1.0.0\n  171  git push gerrit HEAD:refs/tags/v1.0.0\n  182  git push gerrit HEAD:refs/tags/v1.0.0\n  183  git push gerrit :v1.0.0\n  184  git push gerrit v1.0.0\n  194  git push gerrit v1.0.0```","username":"greg.haskins","ts":"2017-07-17T21:22:35.250Z"}
{"msg":"(note that HEAD and v1.0.0 are the same refspec in my case","username":"greg.haskins","ts":"2017-07-17T21:22:54.148Z"}
{"msg":"all of the above fail with a similar error ","username":"greg.haskins","ts":"2017-07-17T21:23:20.946Z"}
{"msg":"im sure I am doing something blatantly dumb, i just cant spot it","username":"greg.haskins","ts":"2017-07-17T21:23:42.049Z"}
{"msg":"```Gregs-MBP:fabric-chaintool ghaskins$ git tag -m \"Release v1.0.0\" v1.0.0 b393b3fc03187ec9931dc454c39fc63bc7cb76e4\nGregs-MBP:fabric-chaintool ghaskins$ git push gerrit v1.0.0\nCounting objects: 1, done.\nWriting objects: 100% (1/1), 171 bytes | 0 bytes/s, done.\nTotal 1 (delta 0), reused 0 (delta 0)\nremote: Processing changes: refs: 1, done\nTo ssh://gerrit.hyperledger.org:29418/fabric-chaintool\n ! [remote rejected] v1.0.0 -> v1.0.0 (prohibited by Gerrit)\nerror: failed to push some refs to 'ssh://greg.haskins@gerrit.hyperledger.org:29418/fabric-chaintool'```","username":"greg.haskins","ts":"2017-07-17T21:25:17.893Z"}
{"msg":"Is shell globbing the periods in the tag?","username":"rjones","ts":"2017-07-17T21:25:21.370Z"}
{"msg":"for example","username":"greg.haskins","ts":"2017-07-17T21:25:24.934Z"}
{"msg":"it shouldnt","username":"greg.haskins","ts":"2017-07-17T21:25:35.674Z"}
{"msg":"all my tags have had periods in them before","username":"greg.haskins","ts":"2017-07-17T21:25:47.182Z"}
{"msg":"(anything is possible, however)","username":"greg.haskins","ts":"2017-07-17T21:25:57.491Z"}
{"msg":"let me check my ssh config","username":"greg.haskins","ts":"2017-07-17T21:26:23.857Z"}
{"msg":"Unreacgable commit? What does --follow-tags do ","username":"rjones","ts":"2017-07-17T21:26:26.722Z"}
{"msg":"maybe this laptop is not submitting the right credentials","username":"greg.haskins","ts":"2017-07-17T21:26:33.921Z"}
{"msg":"what is the full command?","username":"greg.haskins","ts":"2017-07-17T21:26:50.883Z"}
{"msg":"Ah that is the most reasonable guess","username":"rjones","ts":"2017-07-17T21:27:05.536Z"}
{"msg":"I was reading https://stackoverflow.com/questions/5195859/push-a-tag-to-a-remote-repository-using-git and it mentioned follow tags","username":"rjones","ts":"2017-07-17T21:28:02.832Z"}
{"msg":"can you see anything in the logs on your side?","username":"greg.haskins","ts":"2017-07-17T21:28:05.382Z"}
{"msg":"I'm on my phone","username":"rjones","ts":"2017-07-17T21:28:16.032Z"}
{"msg":"Later I can check, I doubt it","username":"rjones","ts":"2017-07-17T21:28:27.973Z"}
{"msg":"Can you do stream events? ","username":"rjones","ts":"2017-07-17T21:28:45.377Z"}
{"msg":"Ssh -P portno gerrit gerrit stream-events","username":"rjones","ts":"2017-07-17T21:29:11.478Z"}
{"msg":"```$ ssh -p 29418 greg.haskins@gerrit.hyperledger.org\n\n  ****    Welcome to Gerrit Code Review    ****\n\n  Hi Greg Haskins, you have successfully connected over SSH.\n\n  Unfortunately, interactive shells are disabled.\n  To clone a hosted Git repository, use:\n\n  git clone ssh://greg.haskins@gerrit.hyperledger.org:29418/REPOSITORY_NAME.git\n\nConnection to gerrit.hyperledger.org closed.```","username":"greg.haskins","ts":"2017-07-17T21:32:03.876Z"}
{"msg":"implies my credentials are good","username":"greg.haskins","ts":"2017-07-17T21:32:10.167Z"}
{"msg":"BTW: --follow-tags had identical error","username":"greg.haskins","ts":"2017-07-17T21:32:50.784Z"}
{"msg":"Do a gerrit stream-events","username":"rjones","ts":"2017-07-17T21:40:53.031Z"}
{"msg":"Or gerrit help","username":"rjones","ts":"2017-07-17T21:40:58.791Z"}
{"msg":"I think all committees also have stream-events","username":"rjones","ts":"2017-07-17T21:41:20.388Z"}
{"msg":"Your credentials may be good but the wrong ones","username":"rjones","ts":"2017-07-17T21:41:44.022Z"}
{"msg":"I know you had a couple","username":"rjones","ts":"2017-07-17T21:41:58.206Z"}
{"msg":"```$ ssh -p 29418 greg.haskins@gerrit.hyperledger.org gerrit stream-events\nCapability streamEvents is required to access this resource```","username":"greg.haskins","ts":"2017-07-17T21:58:59.325Z"}
{"msg":"@greg.haskins I changed the ACL, could you try again?","username":"rjones","ts":"2017-07-17T22:06:40.754Z"}
{"msg":"@rjones seems to have same failure","username":"greg.haskins","ts":"2017-07-17T22:07:09.237Z"}
{"msg":"oh wait","username":"greg.haskins","ts":"2017-07-17T22:07:15.952Z"}
{"msg":"i tried a push","username":"greg.haskins","ts":"2017-07-17T22:07:17.848Z"}
{"msg":"hold on","username":"greg.haskins","ts":"2017-07-17T22:07:19.377Z"}
{"msg":"ok, my stream-events thing is just sitting there, presumably listening for events","username":"greg.haskins","ts":"2017-07-17T22:07:44.188Z"}
{"msg":"OK. that means that you are using the correct credentials","username":"rjones","ts":"2017-07-17T22:07:59.255Z"}
{"msg":"(sorry, i misunderstood what \"try again\" meant ;)","username":"greg.haskins","ts":"2017-07-17T22:07:59.885Z"}
{"msg":":)","username":"rjones","ts":"2017-07-17T22:08:19.053Z"}
{"msg":"that was to prove to me that you were using the credentials in that group, and that `stream-events` works says you are","username":"rjones","ts":"2017-07-17T22:08:59.333Z"}
{"msg":"@JonathanLevi could I ask you to attempt to create and push this tag for `fabric-chaintool` ? @greg.haskins would that be OK?","username":"rjones","ts":"2017-07-17T22:11:36.299Z"}
{"msg":"I ask because @JonathanLevi has pushed tags to `fabric`, and both `ldap/hyperledger-gerrit-fabric-committers` and `ldap/hyperledger-gerrit-fabric-chaintool-committers` have the same permissions","username":"rjones","ts":"2017-07-17T22:12:36.592Z"}
{"msg":"on `fabric-chaintool`. the permissions on `refs/tags/*` are the same for `fabric` and `fabric-chaintool`","username":"rjones","ts":"2017-07-17T22:13:13.549Z"}
{"msg":"@JonathanLevi it should be \"v1.0.0' against this: https://github.com/hyperledger/fabric-chaintool/commit/b393b3fc03187ec9931dc454c39fc63bc7cb76e4","username":"greg.haskins","ts":"2017-07-17T22:13:21.716Z"}
{"msg":"if that fails, we have a conundrum.","username":"rjones","ts":"2017-07-17T22:14:03.307Z"}
{"msg":"git push\nEnter passphrase for key '/Users/jonathan/.ssh/id_rsa': \nERROR: Permission to hyperledger/fabric-chaintool.git denied to *hacera*.\nfatal: Could not read from remote repository.\n\n","username":"JonathanLevi","ts":"2017-07-17T22:25:52.857Z"}
{"msg":"I think I have made it","username":"JonathanLevi","ts":"2017-07-17T22:25:52.857Z"}
{"msg":"@rjones: ah, chaintool might have a different LDAP group for maintainers","username":"greg.haskins","ts":"2017-07-17T22:26:28.727Z"}
{"msg":"perhaps I dont have the push-tags there?","username":"greg.haskins","ts":"2017-07-17T22:26:42.380Z"}
{"msg":"when you are logged in to gerrit, and you open this link: https://gerrit.hyperledger.org/r/#/admin/projects/fabric-chaintool,access , what do you see?","username":"rjones","ts":"2017-07-17T22:27:19.319Z"}
{"msg":"Can you check locally?","username":"JonathanLevi","ts":"2017-07-17T22:27:38.569Z"}
{"msg":"https://github.com/hyperledger/fabric-chaintool/releases","username":"rjones","ts":"2017-07-17T22:28:15.381Z"}
{"msg":"https://github.com/hyperledger/fabric-chaintool/releases/tag/v1.0.0","username":"rjones","ts":"2017-07-17T22:28:25.871Z"}
{"msg":"Yup. Worked, right?","username":"JonathanLevi","ts":"2017-07-17T22:28:54.147Z"}
{"msg":"The right commit-level ?","username":"JonathanLevi","ts":"2017-07-17T22:29:10.306Z"}
{"msg":"","username":"greg.haskins","ts":"2017-07-17T22:29:10.691Z","attachments":[{"title":"File Uploaded: Screenshot 2017-07-17 18.28.55.png","title_link":"/file-upload/QXJpZpPjueGPXNmes/Screenshot 2017-07-17 18.28.55.png","image_url":"/file-upload/QXJpZpPjueGPXNmes/Screenshot 2017-07-17 18.28.55.png","image_type":"image/png","image_size":236595,"url":"/file-upload/QXJpZpPjueGPXNmes/Screenshot 2017-07-17 18.28.55.png","remote":false,"fileId":"QXJpZpPjueGPXNmes","fileName":"Screenshot 2017-07-17 18.28.55.png"}]}
{"msg":"looks right","username":"greg.haskins","ts":"2017-07-17T22:29:16.127Z"}
{"msg":"Good stuff.","username":"JonathanLevi","ts":"2017-07-17T22:29:30.356Z"}
{"msg":"what was the command you used @JonathanLevi ?","username":"greg.haskins","ts":"2017-07-17T22:29:48.960Z"}
{"msg":"(command(s), i should say","username":"greg.haskins","ts":"2017-07-17T22:30:01.283Z"}
{"msg":"It's a too aggressive one, to be honest... I know.","username":"JonathanLevi","ts":"2017-07-17T22:30:07.399Z"}
{"msg":"Failed without it, so:","username":"JonathanLevi","ts":"2017-07-17T22:30:12.046Z"}
{"msg":"oh man","username":"rjones","ts":"2017-07-17T22:30:12.857Z"}
{"msg":"git push gerrit-chaintool --tags","username":"JonathanLevi","ts":"2017-07-17T22:30:20.235Z"}
{"msg":"dude we had this discussion","username":"rjones","ts":"2017-07-17T22:30:26.483Z"}
{"msg":"hmm","username":"greg.haskins","ts":"2017-07-17T22:30:49.284Z"}
{"msg":"i dont get it","username":"greg.haskins","ts":"2017-07-17T22:30:51.079Z"}
{"msg":"OK. My eyes are dilated, the tag is in place, I'm going to go sit somewhere dark","username":"rjones","ts":"2017-07-17T22:31:08.821Z"}
{"msg":"I somewhat suspect that tag isn't reachable, since it apparently failed when pushed by name","username":"rjones","ts":"2017-07-17T22:31:27.283Z"}
{"msg":"it seems to be on the right SHA","username":"greg.haskins","ts":"2017-07-17T22:31:41.723Z"}
{"msg":"git push gerrit-chaintool refs/tags/v1.0.0","username":"JonathanLevi","ts":"2017-07-17T22:32:06.823Z"}
{"msg":"*git remote -v*\n\ngerrit-chaintool\tssh://JonathanLevi@gerrit.hyperledger.org:29418/fabric-chaintool.git (fetch)\ngerrit-chaintool\tssh://JonathanLevi@gerrit.hyperledger.org:29418/fabric-chaintool.git (push)","username":"JonathanLevi","ts":"2017-07-17T22:33:12.306Z"}
{"msg":"should I edit in the release notes and try to remember how to generate the binaries?","username":"rjones","ts":"2017-07-17T22:34:16.235Z"}
{"msg":"Do you guys need anything else from me?","username":"JonathanLevi","ts":"2017-07-17T23:08:46.326Z"}
{"msg":"no","username":"rjones","ts":"2017-07-18T00:02:53.649Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=6MX3nM2GRbxo3Ngub) @rjones Until we have the CI automation patch in place that @rameshthoomu is working on, that would be good","username":"greg.haskins","ts":"2017-07-18T13:22:07.779Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6MX3nM2GRbxo3Ngub","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=6MX3nM2GRbxo3Ngub","remote":true,"fileId":null,"fileName":null}]}
{"msg":"the question really is: do we do this release in the old GH releases way, or the nexus way","username":"greg.haskins","ts":"2017-07-18T13:22:31.889Z"}
{"msg":"(btw: to make the binary, just check out the tag, do \"make\", and then the artifact is in ./target/chaintool","username":"greg.haskins","ts":"2017-07-18T13:22:55.662Z"}
{"msg":"here is the relevant CR","username":"greg.haskins","ts":"2017-07-18T13:23:29.800Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/11715/","username":"greg.haskins","ts":"2017-07-18T13:23:30.499Z"}
{"msg":"@cbf @JonathanLevi Is there a plan around how to build/deliver fixes on top of 1.0.0?  I had previously assumed that there would be a 1.0.0 release branch where critical defects could be merged and patches built.  But it sounds like that is not the direction we're going.  Sounds like defects along with new features will all go into master.  With that approach, how to provide fixes only on top of 1.0.0?","username":"dave.enyeart","ts":"2017-07-18T13:29:59.083Z"}
{"msg":"I'm raising this now because I opened a defect on behalf of a customer interaction: https://jira.hyperledger.org/browse/FAB-5353","username":"dave.enyeart","ts":"2017-07-18T13:31:28.809Z"}
{"msg":"@dave.enyeart I think there really isn't any other sane way to do it.  In my mind, what needs to be worked out is how that integrates with the rest of the flow","username":"greg.haskins","ts":"2017-07-18T13:41:06.731Z"}
{"msg":"without any automation/management/monitoring, it would basically be on the dev to submit a CR to each relevant branch (in this case, presumably v1.0.0 and master)","username":"greg.haskins","ts":"2017-07-18T13:42:17.125Z"}
{"msg":"sorry, v1.0.x branch","username":"greg.haskins","ts":"2017-07-18T13:42:25.243Z"}
{"msg":"we do have to be careful though, because as history has taught us, we suck at doing this accurate","username":"greg.haskins","ts":"2017-07-18T13:43:12.252Z"}
{"msg":"accurately","username":"greg.haskins","ts":"2017-07-18T13:43:14.677Z"}
{"msg":"ok, just wanted to be sure this is considered while the release branching approach is documented.  currently there are some questions in FAB-5050","username":"dave.enyeart","ts":"2017-07-18T13:44:06.949Z"}
{"msg":"and then someone like me and @muralisr have to spend a long weekend sorting out everyones mess","username":"greg.haskins","ts":"2017-07-18T13:44:08.580Z"}
{"msg":"and I really dont want to do that again ;)","username":"greg.haskins","ts":"2017-07-18T13:44:18.638Z"}
{"msg":"@dave.enyeart agree with Greg and also commented on FAB-5050","username":"jimthematrix","ts":"2017-07-18T13:53:54.488Z"}
{"msg":"@dave.enyeart agree with Greg and also commented on FAB-5050 (node SDK has had to do one of these hotfix branches already, back in 1.0.0 alpha)","username":"jimthematrix","ts":"2017-07-18T13:53:54.488Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-2331 - needs review and votes, for javascript chaincode support. I put that under 1.1 for now, but the Composer team is dependent on it and would like that to be the basis of their 1.0 release instead of Otto the JS interpreter written in Golang","username":"jimthematrix","ts":"2017-07-18T13:58:31.568Z"}
{"msg":"@jimthematrix the idea is the implement a shim in node.js that'll run in a container?","username":"yacovm","ts":"2017-07-18T14:00:00.753Z"}
{"msg":"yes for the former (js based shim impl) and in debate for the latter (whether in separate docker or co-located proc in the peer docker)","username":"jimthematrix","ts":"2017-07-18T14:01:02.414Z"}
{"msg":"IMO it should be in a container ","username":"yacovm","ts":"2017-07-18T14:06:08.584Z"}
{"msg":"I agree with yacovm...until we sort out a suitable platform design that includes various isolation techniques that we are comfortable with, I think it makes sense to assume docker ","username":"greg.haskins","ts":"2017-07-18T14:07:15.674Z"}
{"msg":"done right, its almost 0 overhead anyway","username":"greg.haskins","ts":"2017-07-18T14:07:31.081Z"}
{"msg":"it's not only that. we are aiming to have life cycle for chaincodes right?","username":"yacovm","ts":"2017-07-18T14:07:55.005Z"}
{"msg":"so if we would implement life cycle for containers","username":"yacovm","ts":"2017-07-18T14:08:08.301Z"}
{"msg":"yes, but I dont see that predicated on docker","username":"greg.haskins","ts":"2017-07-18T14:08:12.026Z"}
{"msg":"we would need to re-implement in for JS","username":"yacovm","ts":"2017-07-18T14:08:15.802Z"}
{"msg":"and then some other language would come","username":"yacovm","ts":"2017-07-18T14:08:20.140Z"}
{"msg":"it would just be part of the driver for whatever the container is","username":"greg.haskins","ts":"2017-07-18T14:08:26.747Z"}
{"msg":"and would want to run outside, like JS","username":"yacovm","ts":"2017-07-18T14:08:29.144Z"}
{"msg":"understood...i am not saying we would ever have explicit JS linkagages","username":"greg.haskins","ts":"2017-07-18T14:08:47.341Z"}
{"msg":"all that I am saying is that there are other potential isolation techniques other than \"run in docker\"","username":"greg.haskins","ts":"2017-07-18T14:09:02.995Z"}
{"msg":"for instance, fork(); secomp(); exec(nodejs)","username":"greg.haskins","ts":"2017-07-18T14:09:35.095Z"}
{"msg":"but all I am saying is that until we sort that out and decide there are other viable avenues, assume docker containment","username":"greg.haskins","ts":"2017-07-18T14:09:54.939Z"}
{"msg":"the bottom line is: using a two-phased build like we do for GOLANG/CAR produces a docker container that is practically 0 overhead, but normalizes the lifecycle and isolation management behind the docker api","username":"greg.haskins","ts":"2017-07-18T14:11:36.276Z"}
{"msg":"this might be the most sensible path forward indefinitely, and it is certainly the _only_ path we have right now","username":"greg.haskins","ts":"2017-07-18T14:12:02.043Z"}
{"msg":"@greg.haskins @yacovm I think we are on the same page (see my last comment in FAB-2331)","username":"jimthematrix","ts":"2017-07-18T14:27:30.329Z"}
{"msg":"btw @jimthematrix does mutual TLS work in node.js ? (If we would want mutual TLS in the future between the peer and the shim)","username":"yacovm","ts":"2017-07-18T14:41:15.494Z"}
{"msg":"I recall you saying some time that it doesn't or something like that","username":"yacovm","ts":"2017-07-18T14:41:30.218Z"}
{"msg":"@here https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-July/001314.html","username":"cbf","ts":"2017-07-18T14:56:36.729Z"}
{"msg":"Not sure if the intent is to discuss on the mailing list, JIRA, or here, but I would agree with the assessment that v1.0 is probably not a great candidate for LTS.  Are you ( @cbf ) proposing that we quickly release v1.0.1 and then begin merging v1.1 candidates into master immediately after with the assumption that v1.0.1 will go end of life when v1.1 is published?","username":"jyellick","ts":"2017-07-18T15:00:35.169Z"}
{"msg":"I think we need to map what is missing in v1.0 to be a LTS first and foremost... ","username":"yacovm","ts":"2017-07-18T15:02:01.375Z"}
{"msg":"maybe email is best","username":"cbf","ts":"2017-07-18T15:06:32.282Z"}
{"msg":"@yacovm as far as I'm aware grpc clients in node.js can do TLS mutual auth, I believe you were referring to our discussions on binding the event registration requests to the server cert, for which the node.js grpc support for getting the server cert from handshake was lacking (or at least not easy to determine if it's there)","username":"jimthematrix","ts":"2017-07-18T15:18:17.297Z"}
{"msg":"@yacovm as far as I'm aware grpc clients in node.js can do TLS mutual auth, I believe you were referring to our past discussions on binding the event registration requests to the server cert, for which the node.js grpc support for getting the server cert from handshake was lacking (or at least not easy to determine if it's there)","username":"jimthematrix","ts":"2017-07-18T15:18:17.297Z"}
{"msg":"ah yeah","username":"yacovm","ts":"2017-07-18T15:18:31.249Z"}
{"msg":"exactly :)","username":"yacovm","ts":"2017-07-18T15:18:33.978Z"}
{"msg":"nice memory!","username":"yacovm","ts":"2017-07-18T15:18:36.137Z"}
{"msg":";-)","username":"jimthematrix","ts":"2017-07-18T15:18:44.418Z"}
{"msg":"so I think we're good... am concerned for this (I still want to make the chaincode and the peer talk mutual TLS at some point)","username":"yacovm","ts":"2017-07-18T15:19:26.243Z"}
{"msg":"Has joined the channel.","username":"colinGrahms","ts":"2017-07-19T09:07:12.707Z","type":"uj"}
{"msg":"@jimthematrix @smithbk @rickr  - Can you guys take a look at bugs for each of your components and set the target to 1.0.1 for anything you think can be completed by 7/26 and that you feel should be included in the first patch release?","username":"mastersingh24","ts":"2017-07-19T14:53:42.507Z"}
{"msg":"And please make sure that the JIRA's reference any CRs which are merged or in progress?","username":"mastersingh24","ts":"2017-07-19T14:54:09.082Z"}
{"msg":"Thanks","username":"mastersingh24","ts":"2017-07-19T14:54:11.092Z"}
{"msg":"@mastersingh24 that has been done for node SDK","username":"jimthematrix","ts":"2017-07-19T15:17:49.218Z"}
{"msg":"most 1.0.1 are already in review, the only outstanding one is https://jira.hyperledger.org/browse/FAB-5363","username":"jimthematrix","ts":"2017-07-19T15:18:29.263Z"}
{"msg":"Congrats to @mastersingh24 running unopposed in his landslide victory to become 1.0.x release manager!","username":"jyellick","ts":"2017-07-19T15:19:58.211Z"}
{"msg":"@mastersingh24 @cbf As incoming and outgoing release managers, you are aware that work has been ongoing for a while on https://jira.hyperledger.org/browse/FAB-5079, ledger support of private chaincode data aka side db. Since there was no release branch strategy at the time and a code freeze under effect, work proceeded in a side github fork. ","username":"dave.enyeart","ts":"2017-07-19T15:41:16.515Z"}
{"msg":"Now that we have a release strategy, the intent is to split the code into manageable pieces and submit to gerrit master.  However, before asking people to do detailed review on a series of N changesets, only to get to the Nth changeset and realize some refactor is needed, we wanted to get some quick review on the overall approach wrt new feature development in the presence of 1.0.x code. Also wanted to provide visibility to components that will be dependent on the code.  ","username":"dave.enyeart","ts":"2017-07-19T15:41:37.261Z"}
{"msg":"Therefore I suggest to initially push all the code in a large CR, for first-level awareness/review of general approach, but not intended for +2/merge.  Then if there is agreement on overall approach, break it up into manageable pieces that will individually be pushed to gerrit, reviewed, and merged. Given where we are, is there agreement on the review approach?","username":"dave.enyeart","ts":"2017-07-19T15:41:50.793Z"}
{"msg":"I would expect no less (https://chat.hyperledger.org/channel/fabric-maintainers?msg=L4EtATKww9L6uGp8e) @jimthematrix ","username":"mastersingh24","ts":"2017-07-19T16:25:54.111Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=L4EtATKww9L6uGp8e","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=L4EtATKww9L6uGp8e","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Just to make things clear.  Since @mastersingh24 is curating the v1.0.x release branches (which will be constructed not as a FF merge from master, but rather as some form of cherry-picking), we should be okay to begin merging v1.1 content?  From an orderer perspective, I'd like to get the message flow optimizations through sooner than later.  This may make cherry-picking any new bug-fixes into the 1.0.x release less straightforward, but I am happy to shoulder the backporting effort there.","username":"jyellick","ts":"2017-07-19T16:51:06.423Z"}
{"msg":"I think that sounds like a very reasonable approach @jyellick ","username":"dave.enyeart","ts":"2017-07-19T17:41:02.769Z"}
{"msg":"I know there are people who think everything should be automated, but Ive researched several projects who utilize a cherry-pick from master plus sometimes backporting approach as required for fixes deemed appropriate / critical for a patch","username":"mastersingh24","ts":"2017-07-19T17:43:29.680Z"}
{"msg":"Is there a way we can make the \"which commits to cherry-pick\" easier for you as we move forward, or we leave this entirely to you? Assuming, say, 100 commits at the end of each month, you going through all of them is not impossible but I'm wondering if there's something here that could make things easier.","username":"kostas","ts":"2017-07-19T18:19:05.738Z"}
{"msg":"Is there a way we can make the \"which commits to cherry-pick\" process easier for you as we move forward, or we leave this entirely to you? Assuming, say, 100 commits at the end of each month, you going through all of them is not impossible but I'm wondering if there's something here that could make things easier.","username":"kostas","ts":"2017-07-19T18:19:05.738Z"}
{"msg":"Is there a way we can make the \"which commits to cherry-pick\" process easier for you as we move forward, or we leave this entirely to you? Assuming, say, 100 commits at the end of each month, you going through all of them is not impossible but I'm wondering if there's something here (some JIRA trickery at least) that could make things easier.","username":"kostas","ts":"2017-07-19T18:19:05.738Z"}
{"msg":"Is there a way we can make the \"which commits to cherry-pick\" process easier for you as we move forward, or we leave this entirely to you? Assuming, say, 100 commits at the end of each month, you going through all of them is not impossible but I'm wondering if there's something here (some JIRA trickery at least) that could simplify the filtering.","username":"kostas","ts":"2017-07-19T18:19:05.738Z"}
{"msg":"~Is there a way we can make the \"which commits to cherry-pick\" process easier for you as we move forward, or we leave this entirely to you? Assuming, say, 100 commits at the end of each month, you going through all of them is not impossible but I'm wondering if there's something here (some JIRA trickery at least) that could simplify the filtering.~ I am blind, the answer's right here, missed it because it was addressed to Jim & co.: https://chat.hyperledger.org/channel/fabric-maintainers?msg=EFK7uBGY7Hnv7vkh2","username":"kostas","ts":"2017-07-19T18:19:05.738Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EFK7uBGY7Hnv7vkh2","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EFK7uBGY7Hnv7vkh2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=EFK7uBGY7Hnv7vkh2) @mastersingh24 Done for fabric-ca","username":"smithbk","ts":"2017-07-19T18:48:38.078Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EFK7uBGY7Hnv7vkh2","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=EFK7uBGY7Hnv7vkh2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I was going to take a stab at it for core fabric and then ask for others to look / add to the list.  I have a pretty good sense on Fabric and had started doing some of it.\n(https://chat.hyperledger.org/channel/fabric-maintainers?msg=aEYxgdDpvBfLBTkFJ) @kostas ","username":"mastersingh24","ts":"2017-07-19T18:59:53.269Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aEYxgdDpvBfLBTkFJ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=aEYxgdDpvBfLBTkFJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"Sujeeban","ts":"2017-07-20T09:44:11.687Z","type":"uj"}
{"msg":"Has joined the channel.","username":"paapighoda","ts":"2017-07-21T10:44:44.756Z","type":"uj"}
{"msg":"I added https://jira.hyperledger.org/browse/FAB-3978 to 'review-needed' - there has been lots of discussion about the design, but the question asked is \"can we create this sub-project/repo\". Let's not get lost in the weeds. do we agree that a REST SDK would be \"a good thing\"?","username":"cbf","ts":"2017-07-21T12:25:55.260Z"}
{"msg":"@here gentle reminder that when you merge a CR, please be sure to update the JIRA item's status accordingly - thanks","username":"cbf","ts":"2017-07-21T12:29:55.805Z"}
{"msg":"I just noticed that the 'review-needed' query in JIRA was only looking at pre-1.0 issues... I fixed the query... note that there are a number that need attention","username":"cbf","ts":"2017-07-24T14:18:10.944Z"}
{"msg":"@here ^^","username":"cbf","ts":"2017-07-24T14:18:23.736Z"}
{"msg":"@mastersingh24 really want to get this into the next v1.0.x patch release: https://gerrit.hyperledger.org/r/#/c/11763/","username":"greg.haskins","ts":"2017-07-24T15:03:47.727Z"}
{"msg":"are you cutting from master or has a new branch been formed?","username":"greg.haskins","ts":"2017-07-24T15:04:33.333Z"}
{"msg":"@greg.haskins  - right now I was going to cherry pick and build off the release branch just to see if the process will work moving forward (rather than cut a 1.0.X branch this round)","username":"mastersingh24","ts":"2017-07-24T18:12:45.045Z"}
{"msg":"Just tag the JIRA with 1.0.1","username":"mastersingh24","ts":"2017-07-24T18:12:56.959Z"}
{"msg":";)","username":"mastersingh24","ts":"2017-07-24T18:12:58.659Z"}
{"msg":"will chaintool be staying at 1.0.0?","username":"mastersingh24","ts":"2017-07-24T18:13:57.185Z"}
{"msg":"@mastersingh24 i've been debating what to do about chaintool v fabric versioning","username":"greg.haskins","ts":"2017-07-24T18:47:35.894Z"}
{"msg":"my current thinking is: they really should remain separate ","username":"greg.haskins","ts":"2017-07-24T18:47:50.035Z"}
{"msg":"the v1.0.0 designation is more about the independent event of graduating the tool along with the rest of fabric, more than it is associating it with fabric-1.0.0 ","username":"greg.haskins","ts":"2017-07-24T18:48:23.618Z"}
{"msg":"chaintool is not likely to move versions at the same pace as fabric","username":"greg.haskins","ts":"2017-07-24T18:48:42.796Z"}
{"msg":"in any case, based on that thinking, I dont have a problem with chaintool-1.0.0 being released with fabric-1.0.1","username":"greg.haskins","ts":"2017-07-24T18:49:04.163Z"}
{"msg":"and I am not quite sure how we would sanely managed coupling the versions even if we thought that was desirable","username":"greg.haskins","ts":"2017-07-24T18:49:32.354Z"}
{"msg":"and I am not quite sure how we would sanely manage coupling the versions even if we thought that was desirable","username":"greg.haskins","ts":"2017-07-24T18:49:32.354Z"}
{"msg":"@greg.haskins we probably want to maintain some sort of mapping somewhere","username":"cbf","ts":"2017-07-24T19:11:50.631Z"}
{"msg":"chaintool, cello, composer, explorer versions known to work with the current version of Fabric","username":"cbf","ts":"2017-07-24T19:12:18.932Z"}
{"msg":"@here apparently there is a new version of Gerrit that has an improved UI https://gerrit-review.googlesource.com/q/status:open","username":"cbf","ts":"2017-07-24T19:46:57.072Z"}
{"msg":"https://www.gerritcodereview.com/releases/2.14.md","username":"cbf","ts":"2017-07-24T19:47:10.395Z"}
{"msg":"kubernetes@3","username":"jiangyaoguo","ts":"2017-07-25T02:28:11.611Z"}
{"msg":"new version looks nice","username":"greg.haskins","ts":"2017-07-25T10:28:58.569Z"}
{"msg":"\nNominate Alessandro Sorniotti as maintainer https://gerrit.hyperledger.org/r/#/c/11909/\nPlease review","username":"binhn","ts":"2017-07-25T17:02:13.336Z"}
{"msg":"Hi @here all maintainers, Greg Wallace and I were talking on the logo pieces and we'd like to get a logo finalized and adopted, it was agreed to have the maintainers have the vote on the logo to go with.... while there are suggestions in some of the docs, for all the different projects under Hyperledger, for now let's just focus on fabric. There are a few entries under https://jira.hyperledger.org/browse/FAB-2185?jql=text%20~%20%22logo%22 Please look at the 1- first .png (FabricLogo1-1.png) , 2- Hyperledger_branding ideas_v2.pdf (3rd file) and 3- Hyperledger Logos For Presentation3.pdf (the last file). If you can look these over and place your vote for 1, 2 or 3 (or \"I don't care / hate them all\") by EOD tomorrow it would be greatly appreciated. ","username":"markparz","ts":"2017-07-26T16:19:59.613Z"}
{"msg":"@markparz it would be much easier if we could have clearer set of choices than trolling through a bunch of different presos","username":"cbf","ts":"2017-07-26T18:53:38.115Z"}
{"msg":"further, it was not clear to me that any of the proposed logos met the criteria (because the logo per the guidelines is supposed to be square","username":"cbf","ts":"2017-07-26T18:54:05.969Z"}
{"msg":"while all the proposed logos were duodecahedrons","username":"cbf","ts":"2017-07-26T18:54:21.792Z"}
{"msg":"","username":"markparz","ts":"2017-07-26T19:27:50.971Z","attachments":[{"title":"File Uploaded: Clipboard - July 26, 2017 3:27 PM","title_link":"/file-upload/tiGME2LFXynQWkFWq/Clipboard - July 26, 2017 3:27 PM","image_url":"/file-upload/tiGME2LFXynQWkFWq/Clipboard - July 26, 2017 3:27 PM","image_type":"image/png","image_size":180022,"url":"/file-upload/tiGME2LFXynQWkFWq/Clipboard - July 26, 2017 3:27 PM","remote":false,"fileId":"tiGME2LFXynQWkFWq","fileName":"Clipboard - July 26, 2017 3:27 PM"}]}
{"msg":"Fair enough... I don't want this to be overly complicated, so let's start here. First the wording will be the same on any logo chosen, see number 2 on the attachment. I've added the 4th option on this attachment as well. So first choose 1, 2, 3, or 4 as the icon you prefer. Then either A or B for the color palette you prefer the more subtle approach or the in your face look.  @cbf in working with Greg, they are there or close to compliant, very minor tweaks that @seanbarclay said he can polish quickly. Thanks @gari and Jason for your votes on for number 2. ","username":"markparz","ts":"2017-07-26T19:27:54.788Z"}
{"msg":"Fair enough... I don't want this to be overly complicated, so let's start here. First the wording will be the same on any logo chosen, see number 2 on the attachment. I've added the 4th option (number 3) on this attachment as well. So first choose 1, 2, 3, or 4 as the icon you prefer. Then either A or B for the color palette you prefer the more subtle approach or the in your face look.  @cbf in working with Greg, they are there or close to compliant, very minor tweaks that @seanbarclay said he can polish quickly. Thanks @gari and Jason for your votes on for number 2. ","username":"markparz","ts":"2017-07-26T19:27:54.788Z"}
{"msg":"Fair enough... I don't want this to be overly complicated, so let's start here. First the wording will be the same on any logo chosen, see number 2 on the attachment. I've added the 4th option (number 3) on this attachment as well. So first choose 1, 2, 3, or 4 as the icon you prefer. Then either A or B for the color palette you prefer the more subtle approach or the in your face look.  @cbf in working with Greg, they are there or close to compliant, very minor tweaks that @seanbarclay said he can polish quickly. Thanks @mastersingh24 and @jyellick  for your votes on for number 2. ","username":"markparz","ts":"2017-07-26T19:27:54.788Z"}
{"msg":"Has joined the channel.","username":"seanbarclay","ts":"2017-07-26T19:27:54.853Z","type":"uj"}
{"msg":"ah much better and voting here probably easier to tally","username":"cbf","ts":"2017-07-26T19:29:04.892Z"}
{"msg":"yea... good suggestion... apologies for being lazy first go round ;)","username":"markparz","ts":"2017-07-26T19:29:25.217Z"}
{"msg":"note that #4 will be nixed, I think because the other Fabric open source project's logo is very similar","username":"cbf","ts":"2017-07-26T19:29:43.893Z"}
{"msg":"https://www.google.com/search?q=fabric+logo+open+source&tbm=isch&imgil=vvdjykOgiNAXTM%253A%253BYI4dbO7RBGqWWM%253Bhttp%25253A%25252F%25252F9to5google.com%25252F2015%25252F05%25252F27%25252Ftwitter-kit-digits-android-open-source%25252F&source=iu&pf=m&fir=vvdjykOgiNAXTM%253A%252CYI4dbO7RBGqWWM%252C_&usg=__iFNG1SOA3ulV2jo81mnnVPT00Lw%3D&biw=1255&bih=700&ved=0ahUKEwiM-u3f16fVAhUKNSYKHZ1jDPIQyjcIMw&ei=5O14WYz4PIrqmAGdx7GQDw#imgrc=vvdjykOgiNAXTM:","username":"cbf","ts":"2017-07-26T19:31:08.134Z"}
{"msg":"so my preference is 2 if it is conformant with the guidelines","username":"cbf","ts":"2017-07-26T19:31:55.413Z"}
{"msg":"color palette desire?","username":"markparz","ts":"2017-07-26T19:33:30.100Z"}
{"msg":"My preference is 2 - with a mild preference towards color palette B, but really, I'd be more than happy to defer to a designer with a better idea of what's fashionable these days","username":"jyellick","ts":"2017-07-26T19:35:18.569Z"}
{"msg":"Same as Jason","username":"yacovm","ts":"2017-07-26T19:36:17.982Z"}
{"msg":"Another one for 2B.","username":"kostas","ts":"2017-07-26T19:58:46.997Z"}
{"msg":"oh yes, 2b ","username":"cbf","ts":"2017-07-26T21:10:52.133Z"}
{"msg":"I like the blue vs the black","username":"cbf","ts":"2017-07-26T21:11:03.752Z"}
{"msg":"If you give me 24-48 hours, our designer can come up with a few options","username":"JonathanLevi","ts":"2017-07-26T21:11:27.039Z"}
{"msg":"Unless you are bound by the list... or time? ;-)","username":"JonathanLevi","ts":"2017-07-26T21:11:41.999Z"}
{"msg":"Unless you/we are bound by the list... or time? ;-)","username":"JonathanLevi","ts":"2017-07-26T21:11:41.999Z"}
{"msg":"neither","username":"cbf","ts":"2017-07-26T21:11:48.115Z"}
{"msg":"OK, so 'tentatively' I'm on 2b as well. Just in case I get kidnapped or something along these lines... ;-)","username":"JonathanLevi","ts":"2017-07-26T21:12:44.353Z"}
{"msg":"If I had a vote, it would be for 3b, as it will look nicer on stickers, shirts, etc. The fine lines of 2 just run together.","username":"rjones","ts":"2017-07-26T21:32:58.235Z"}
{"msg":"@rjones has a point there","username":"cbf","ts":"2017-07-26T21:45:48.388Z"}
{"msg":"_hides former life as a screen printing hat sewing swag producer in corner_","username":"rjones","ts":"2017-07-26T21:46:35.011Z"}
{"msg":"<--  not a graphic designer, but my son is","username":"cbf","ts":"2017-07-26T21:47:15.942Z"}
{"msg":"of course, he is away this week","username":"cbf","ts":"2017-07-26T21:47:34.784Z"}
{"msg":"@markparz why do we use letter \"F\" in the logo?  ok, i know what it is, but it looks like an F","username":"binhn","ts":"2017-07-27T16:22:33.797Z"}
{"msg":"also the shape looks like a pentagon, not a friendly place ","username":"binhn","ts":"2017-07-27T16:24:14.211Z"}
{"msg":"@binhn the idea was to take some semblance of the Hyperledger project logo, but I see what you are saying... and yes the F was trying tie fabric into the Hyperledger logo.... I see what you are saying about the shape.... hmmm ","username":"markparz","ts":"2017-07-27T17:55:42.924Z"}
{"msg":"the Hyperledger logo is already a hexagon, though","username":"rjones","ts":"2017-07-27T18:02:42.374Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=E7qno3gQwqmLZkYtm) @binhn Was that a joke? :)","username":"lehors","ts":"2017-07-27T20:27:03.391Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=E7qno3gQwqmLZkYtm","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=E7qno3gQwqmLZkYtm","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I'm not sure about the \"letter-in-a-hexagon\" design, it barely works for Fabric and Composer, but when it comes to \"Sawtooth\", \"Iroha\", \"Indy\" (various samples in the middle column), it gets really weird","username":"jimthematrix","ts":"2017-07-28T14:32:20.924Z"}
{"msg":"I'm not sure about the \"letter-in-a-hexagon\" design, it barely works for Fabric and Composer, but when it comes to \"Sawtooth\", \"Iroha\", \"Burrow\", \"Indy\" (various samples in the middle column), it gets really weird","username":"jimthematrix","ts":"2017-07-28T14:32:20.924Z"}
{"msg":"for color palettes though my vote would also be B","username":"jimthematrix","ts":"2017-07-28T14:34:37.413Z"}
{"msg":"Plus, collision with _C_haintool and _C_omposer","username":"greg.haskins","ts":"2017-07-28T15:39:59.980Z"}
{"msg":"Folks  - please review https://gerrit.hyperledger.org/r/#/c/11769/4  - I created a single commit with the cherry picked fixes for 1.0.1 and applied them to the release branch.  Part of this was an experiment to see how a process like this might work","username":"mastersingh24","ts":"2017-07-28T16:41:04.688Z"}
{"msg":"Folks  - please review https://gerrit.hyperledger.org/r/#/c/12019/  - I created a single commit with the cherry picked fixes for 1.0.1 and applied them to the release branch.  Part of this was an experiment to see how a process like this might work","username":"mastersingh24","ts":"2017-07-28T16:41:04.688Z"}
{"msg":"@mastersingh24 breaks `git bisect` but I suppose the risk of needing it is low. On other projects I've done a `git merge --no-ff ...`, making sure to sign each merge commit","username":"rjones","ts":"2017-07-28T16:45:00.965Z"}
{"msg":"I agree with @rjones, probably dont want to obscure bisectability if we can help it.  Also note sure of the implications when using gerrit (e.g. does the Change-Id make cherry-pick/merge more complex?)","username":"greg.haskins","ts":"2017-07-28T18:20:43.714Z"}
{"msg":"I agree with @rjones, probably dont want to obscure bisectability if we can help it.  Also not sure of the implications when using gerrit (e.g. does the Change-Id make cherry-pick/merge more complex?)","username":"greg.haskins","ts":"2017-07-28T18:20:43.714Z"}
{"msg":"@greg.haskins let me dig one up from my old project.","username":"rjones","ts":"2017-07-28T18:23:45.107Z"}
{"msg":"@greg.haskins this is a merge of the release branch back into master, for instance: https://git.allseenalliance.org/gerrit/#/c/9411/","username":"rjones","ts":"2017-07-28T18:24:57.444Z"}
{"msg":"also: https://git.allseenalliance.org/gerrit/#/c/8517/ the merge of a feature branch into release","username":"rjones","ts":"2017-07-28T18:25:58.365Z"}
{"msg":"@markparz I started thinking: what if it had kind of a Periodic Table feel to it, like the Breaking Bad title","username":"greg.haskins","ts":"2017-07-29T02:48:07.080Z"}
{"msg":"","username":"greg.haskins","ts":"2017-07-29T02:49:18.691Z","attachments":[{"title":"File Uploaded: hyperledger-logos.png","title_link":"/file-upload/fgpK7SChou696tM8T/hyperledger-logos.png","image_url":"/file-upload/fgpK7SChou696tM8T/hyperledger-logos.png","image_type":"image/png","image_size":454937,"url":"/file-upload/fgpK7SChou696tM8T/hyperledger-logos.png","remote":false,"fileId":"fgpK7SChou696tM8T","fileName":"hyperledger-logos.png"}]}
{"msg":"Hmmm I like it","username":"markparz","ts":"2017-07-29T02:50:04.248Z"}
{"msg":"disclaimer: I am not a graphic artist (obviously)...main idea is perhaps two letters perhaps buys us some bandwidth","username":"greg.haskins","ts":"2017-07-29T02:50:07.577Z"}
{"msg":"disclaimer: I am not a graphic artist (obviously)...main idea is perhaps two letters buys us some bandwidth","username":"greg.haskins","ts":"2017-07-29T02:50:07.577Z"}
{"msg":"I think you just might be one in disguise 😀","username":"markparz","ts":"2017-07-29T02:50:45.393Z"}
{"msg":"I want to add this to the voting board ... waiting to see if @JonathanLevi has an entry too ... thanks Greg","username":"markparz","ts":"2017-07-29T02:52:06.536Z"}
{"msg":"this was my inspiration: https://d3ui957tjb5bqd.cloudfront.net/uploads/2013/09/breaking-bad.png","username":"greg.haskins","ts":"2017-07-29T02:52:23.485Z"}
{"msg":"This is actually quite clever. I like it.","username":"kostas","ts":"2017-07-29T04:27:38.318Z"}
{"msg":"The periodic table reminds me of cyclohexane from organic chemistry, i both like and get PTSD from it ","username":"yacovm","ts":"2017-07-29T07:06:43.612Z"}
{"msg":"The periodic table icon @greg.haskins put reminds me of cyclohexane from organic chemistry, i both like and get PTSD from it ","username":"yacovm","ts":"2017-07-29T07:06:43.612Z"}
{"msg":"@yacovm talk nitrates to me","username":"rjones","ts":"2017-07-29T08:56:11.294Z"}
{"msg":"@greg.haskins I like it!","username":"cbf","ts":"2017-07-29T11:00:59.091Z"}
{"msg":"I do like Greg's better than the 'crooked F'!","username":"dave.enyeart","ts":"2017-07-29T12:20:29.612Z"}
{"msg":"We could call them the \"Elements of Hyperledger\" or something like that","username":"greg.haskins","ts":"2017-07-29T13:08:33.379Z"}
{"msg":"Love it!","username":"muralisr","ts":"2017-07-29T15:03:45.741Z"}
{"msg":"and Hyperledger itslef would be \"H\" ... the core, simplest element :-)","username":"muralisr","ts":"2017-07-29T15:05:04.347Z"}
{"msg":"and Hyperledger itslef would be \"H\" ... hydrogen the basic element :-)","username":"muralisr","ts":"2017-07-29T15:05:04.347Z"}
{"msg":"and Hyperledger itslef would be \"H\" ... hydrogen one of the first elements of big bang :-)","username":"muralisr","ts":"2017-07-29T15:05:04.347Z"}
{"msg":"+1","username":"JonathanLevi","ts":"2017-07-29T19:52:45.471Z"}
{"msg":"https://az616578.vo.msecnd.net/files/2016/01/09/635879268869090481737665867_breaking%20bad%20gif.gif","username":"JonathanLevi","ts":"2017-07-29T19:52:46.657Z"}
{"msg":"folks, please vote for https://jira.hyperledger.org/browse/FAB-2331 (node.js chaincode support), the vote is for getting the project officially started so I can ask @rjones to create a repository (fabric-shim-node) and a RC channel (fabric-node-chaincode). the background was in the email I sent to hyperledger-fabric mailing list on 7/27.","username":"jimthematrix","ts":"2017-07-31T03:16:37.561Z"}
{"msg":"First commit for metrics, please review https://gerrit.hyperledger.org/r/#/c/11933/","username":"grapebaba","ts":"2017-07-31T07:50:40.494Z"}
{"msg":"@grapebaba  - this belongs to #fabric-pr-review  ;)","username":"yacovm","ts":"2017-07-31T07:51:03.528Z"}
{"msg":"aha","username":"grapebaba","ts":"2017-07-31T07:51:33.657Z"}
{"msg":"Has left the channel.","username":"paapighoda","ts":"2017-07-31T09:13:03.335Z","type":"ul"}
{"msg":"@jimthematrix added https://jira.hyperledger.org/browse/FAB-5424 as a dependency for FAB-2331 ","username":"muralisr","ts":"2017-07-31T12:11:31.074Z"}
{"msg":"@here https://chat.hyperledger.org/channel/fabric-maintainers?msg=mxCtD5PfotLsg2F4o so, just for Fabric, because apparently Brian wants each project to choose its own logo, are we good with Greg's proposal (the Fa) ","username":"cbf","ts":"2017-07-31T15:13:07.162Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=mxCtD5PfotLsg2F4o","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=mxCtD5PfotLsg2F4o","remote":true,"fileId":null,"fileName":null}]}
{"msg":"?","username":"cbf","ts":"2017-07-31T15:13:09.653Z"}
{"msg":"can I get the maintainers to weigh in in response with a +1 or -1 etc","username":"cbf","ts":"2017-07-31T15:13:35.948Z"}
{"msg":"Greg, can you share with me the PSD or so?","username":"JonathanLevi","ts":"2017-07-31T15:54:52.721Z"}
{"msg":"I would like to make it a bit more symmetric, etc.","username":"JonathanLevi","ts":"2017-07-31T15:55:10.327Z"}
{"msg":"Or, shall we agree on this, and then finalize?","username":"JonathanLevi","ts":"2017-07-31T15:55:37.866Z"}
{"msg":"+1 for the current design (from me)","username":"JonathanLevi","ts":"2017-07-31T15:55:47.527Z"}
{"msg":"I'd feel better if we could get a designer to mock a more polished version together","username":"jyellick","ts":"2017-07-31T15:55:58.311Z"}
{"msg":"Yes, that's what I meant. I agree conceptually.","username":"JonathanLevi","ts":"2017-07-31T15:56:16.706Z"}
{"msg":"(In particular, to make sure that we have a designer who is interested in adopting and nurturing this design concept)","username":"jyellick","ts":"2017-07-31T15:56:24.061Z"}
{"msg":"@JonathanLevi would be happy to share full source, but I did it in omnigraffle","username":"greg.haskins","ts":"2017-07-31T15:56:32.995Z"}
{"msg":"@jyellick fully agree someone skilled in the graphic arts should produce the final form","username":"greg.haskins","ts":"2017-07-31T15:56:56.527Z"}
{"msg":"mine was a concept mock up, at best","username":"greg.haskins","ts":"2017-07-31T15:57:14.732Z"}
{"msg":"the alignments, etc, are off","username":"greg.haskins","ts":"2017-07-31T15:57:20.502Z"}
{"msg":"Yes, that would be great. Also we should try to get some advice regarding the color-scheme.","username":"JonathanLevi","ts":"2017-07-31T15:58:01.552Z"}
{"msg":"https://www.dropbox.com/s/r5aggoljf6aybow/icons.graffle?dl=0","username":"greg.haskins","ts":"2017-07-31T15:58:46.687Z"}
{"msg":"thats the original that I produced the PNG from","username":"greg.haskins","ts":"2017-07-31T15:58:57.164Z"}
{"msg":"Understood @greg.haskins, I did not think it was intended to be a final form, but since we had multiple designers from multiple parent orgs, would like to make sure we have cohesive direction around the branding.","username":"jyellick","ts":"2017-07-31T15:59:09.625Z"}
{"msg":"@jyellick yep, fully agree","username":"greg.haskins","ts":"2017-07-31T15:59:24.147Z"}
{"msg":"for completeness, here is a link to the original PNG that I posted: https://www.dropbox.com/s/zafj4tfbllc91nn/hyperledger-logos.png?dl=0","username":"greg.haskins","ts":"2017-07-31T16:02:05.607Z"}
{"msg":"@JonathanLevi @jyellick Hyperledger Marketing will help with the polish, we just need to decide the design","username":"cbf","ts":"2017-07-31T16:28:15.618Z"}
{"msg":"+1 on Greg's design","username":"JonathanLevi","ts":"2017-07-31T16:29:21.671Z"}
{"msg":"+1 ^^","username":"muralisr","ts":"2017-07-31T16:39:52.399Z"}
{"msg":"(conceptually pending any final polish from designers etc)","username":"muralisr","ts":"2017-07-31T16:40:30.602Z"}
{"msg":"Not sure how actively anyone is checking the review-needed tag, would appreciate comments/votes on this one https://jira.hyperledger.org/browse/FAB-5504 ","username":"jyellick","ts":"2017-07-31T16:43:03.979Z"}
{"msg":"I voted :)","username":"yacovm","ts":"2017-07-31T16:46:24.264Z"}
{"msg":"I will comment my comment from the gerrit item","username":"yacovm","ts":"2017-07-31T16:46:51.538Z"}
{"msg":"I will copy my comment from the gerrit item","username":"yacovm","ts":"2017-07-31T16:46:51.538Z"}
{"msg":"","username":"markparz","ts":"2017-07-31T18:11:12.237Z","attachments":[{"title":"File Uploaded: hyperledger-logos.png","title_link":"/file-upload/RiuYf8eAR8QqsWdnG/hyperledger-logos.png","image_url":"/file-upload/RiuYf8eAR8QqsWdnG/hyperledger-logos.png","image_type":"image/png","image_size":454937,"url":"/file-upload/RiuYf8eAR8QqsWdnG/hyperledger-logos.png","remote":false,"fileId":"RiuYf8eAR8QqsWdnG","fileName":"hyperledger-logos.png"}]}
{"msg":"@mastersingh24 @binhn @jimthematrix you guys good with Greg's proposal as well for the fabric logo.. you can thumbs up / down on this image ","username":"markparz","ts":"2017-07-31T18:11:14.206Z"}
{"msg":"@mastersingh24 @binhn @jimthematrix @yacovm you guys good with Greg's proposal as well for the fabric logo.. you can thumbs up / down on this image ","username":"markparz","ts":"2017-07-31T18:11:14.206Z"}
{"msg":"Not interested in any sort of veto, but I am not sold on that design.  In general, I like the idea of iconography over text, and I'm having trouble envisioning a polished version.  Are we interested in adopting a different logo for each of the assorted \"fabric-*\" projects? I'm not particularly sure why we want a different badge for say fabric-ca than fabric.  And, if the branding is restricted only to fabric (and not hyperledger more broadly), i'm not sure what the periodic table style really buys us...  But, as I said, it's not like this decision needs to be unanimous, and at the end of the day I'm happy to defer to those with a better artistic eye than myself.","username":"jyellick","ts":"2017-07-31T18:40:22.714Z"}
{"msg":"@jyellick I think it would only be for top-level (e.g. fabric) and hence there is one logo","username":"cbf","ts":"2017-07-31T18:48:08.767Z"}
{"msg":"sawtooth, burrow COULD opt in, or design their own","username":"cbf","ts":"2017-07-31T18:48:23.720Z"}
{"msg":"apparently there is not interest in trying to force a single design on all project","username":"cbf","ts":"2017-07-31T18:48:42.572Z"}
{"msg":"we may \"adopt\" projects that already have a logo and we need to respect that","username":"cbf","ts":"2017-07-31T18:48:59.334Z"}
{"msg":"so I would not expect a fabric-ca logo","username":"cbf","ts":"2017-07-31T18:49:37.271Z"}
{"msg":"Right, that was my understanding.  So I'm not really sure of the benefit of going with \"Fa\" over something like the iconography in the originally proposed designs.  The text was elegant to represent multiple related projects with a similar theme, but since that is out, I do not see the benefit.  (Again, not trying to cause waves her, was content to sit this one out, just responding to the explicit calling out by @markparz )","username":"jyellick","ts":"2017-07-31T18:51:19.466Z"}
{"msg":"Right, that was my understanding.  So I'm not really sure of the improvement of going with \"Fa\" over something like the iconography in the originally proposed designs.  The text was elegant to represent multiple related projects with a similar theme, but since that is out, I do not see thebenefit.  (Again, not trying to cause waves here, was content to sit this one out, just responding to the explicit calling out by @markparz )","username":"jyellick","ts":"2017-07-31T18:51:19.466Z"}
{"msg":"Right, that was my understanding.  So I'm not really sure of the improvement of going with \"Fa\" over something like the iconography in the originally proposed designs.  The text was elegant to represent multiple related projects with a similar theme, but since that is out, I do not see the benefit.  (Again, not trying to cause waves here, was content to sit this one out, just responding to the explicit calling out by @markparz )","username":"jyellick","ts":"2017-07-31T18:51:19.466Z"}
{"msg":"Right, just the higher level projects... not planning on doing a break down","username":"markparz","ts":"2017-07-31T19:07:20.989Z"}
{"msg":"That's me... calling ya out... lol... just want to get a majority rule.... absolutely can stay with the previous vote @jyellick ","username":"markparz","ts":"2017-07-31T19:08:59.439Z"}
{"msg":"> Right, just the higher level projects... not planning on doing a break down\n\nBut this is only the fabric logo.  We cannot (and would not want to) force this style onto the other hyperledger projects.\n\n> That's me... calling ya out... lol... just want to get a majority rule.... \n\nYes, calling out is a little bit of a strong phrasing, just didn't want you to think I was ignoring the call for response","username":"jyellick","ts":"2017-07-31T19:13:51.467Z"}
{"msg":"> Right, just the higher level projects... not planning on doing a break down\n\nBut this is only the fabric logo.  We cannot (and would not want to) force this style onto the other hyperledger projects.  So there's no plural to the \"projects\".\n\n> That's me... calling ya out... lol... just want to get a majority rule.... \n\nYes, calling out is a little bit of a strong phrasing, just didn't want you to think I was ignoring the call for response","username":"jyellick","ts":"2017-07-31T19:13:51.467Z"}
{"msg":"@markparz  - what's the original JIRA with the previous logos you shared?","username":"mastersingh24","ts":"2017-07-31T19:53:46.233Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-2185?jql=text%20~%20%22logo%22","username":"markparz","ts":"2017-07-31T19:55:09.493Z"}
{"msg":"Thx.  I decided not to be lazy and found it","username":"mastersingh24","ts":"2017-07-31T19:55:44.987Z"}
{"msg":"I still stick with my vote in that JIRA  ;0","username":"mastersingh24","ts":"2017-07-31T19:56:35.903Z"}
{"msg":"I still stick with my vote in that JIRA  ;)","username":"mastersingh24","ts":"2017-07-31T19:56:35.903Z"}
{"msg":"I still stick with my vote in that JIRA - Hyperledger_branding ideas_v2.pdf  ;)","username":"mastersingh24","ts":"2017-07-31T19:56:35.903Z"}
{"msg":"I like the icons myself.  But again, if there are people who care more deeply about this than me and really want something else, I'm not going to stand in the way / argue","username":"mastersingh24","ts":"2017-07-31T19:58:34.196Z"}
{"msg":"Can I suggest we all cast our votes on JIRA? https://jira.hyperledger.org/browse/FAB-2185","username":"kostas","ts":"2017-07-31T20:21:02.289Z"}
{"msg":"Votes are either 1 to 4 (A or B) or \"Greg's idea\"","username":"kostas","ts":"2017-07-31T20:21:08.822Z"}
{"msg":"Votes are either 1 to 4 (A or B ) or \"Greg's idea\"","username":"kostas","ts":"2017-07-31T20:21:08.822Z"}
{"msg":"(I've lost track of who's supporting what here.)","username":"kostas","ts":"2017-07-31T20:22:24.715Z"}
{"msg":"how do you vote Kostas?","username":"yacovm","ts":"2017-07-31T20:23:53.533Z"}
{"msg":"Maybe we can create sub-tasks for the logo, one for each (1-4), and use the JIRA vote button?","username":"jyellick","ts":"2017-07-31T20:25:34.985Z"}
{"msg":"Maybe we can create sub-tasks for the logo, one for each (1-4 + Gerg's), and use the JIRA vote button?","username":"jyellick","ts":"2017-07-31T20:25:34.985Z"}
{"msg":"Maybe we can create sub-tasks for the logo, one for each (1-4 + Greg's), and use the JIRA vote button?e","username":"jyellick","ts":"2017-07-31T20:25:34.985Z"}
{"msg":"Maybe we can create sub-tasks for the logo, one for each (1-4 + Greg's), and use the JIRA vote button?","username":"jyellick","ts":"2017-07-31T20:25:34.985Z"}
{"msg":"@yacovm: I'll post in the JIRA now. (To answer your question: since we're not necessarily going to use Greg's template for all projects, I think Ill stick with the original vote for 2B.)","username":"kostas","ts":"2017-07-31T20:27:35.141Z"}
{"msg":"same","username":"yacovm","ts":"2017-07-31T20:27:45.426Z"}
{"msg":"Can someone spin up a quick Fabric network for voting?","username":"mastersingh24","ts":"2017-07-31T20:46:36.904Z"}
{"msg":"voted in FAB-2185, 2B for me too based on the understanding that these are from our design team (so they have been vetted for artistic quality)","username":"jimthematrix","ts":"2017-07-31T23:24:49.143Z"}
{"msg":"Has joined the channel.","username":"yuleeandrea","ts":"2017-07-31T23:41:01.084Z","type":"uj"}
{"msg":"My primary concern wasnt artistic in nature, but rather the impending collision of _C_omposer, _C_ello and _C_ haintool with the singular letter proposal","username":"greg.haskins","ts":"2017-08-01T02:11:09.319Z"}
{"msg":"as long as that is addressed, I defer to the artists","username":"greg.haskins","ts":"2017-08-01T02:11:48.881Z"}
{"msg":"same thought process for me","username":"jimthematrix","ts":"2017-08-01T02:33:44.852Z"}
{"msg":"my preference is 3b because of @rjones's feedback that #2 would not render well on stickers etc","username":"cbf","ts":"2017-08-01T16:03:15.578Z"}
{"msg":"Its primarily a case of TL:DR, but I am not clear what you guys are referring to when you say \"2B\", etc","username":"greg.haskins","ts":"2017-08-01T18:07:02.604Z"}
{"msg":"is this all w.r.t. the logos.jpg?","username":"greg.haskins","ts":"2017-08-01T18:07:16.890Z"}
{"msg":"or are there different documents for each group?","username":"greg.haskins","ts":"2017-08-01T18:07:26.823Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=acRXYGfChfcRp66tN) ","username":"JonathanLevi","ts":"2017-08-01T18:23:03.094Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=acRXYGfChfcRp66tN","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=acRXYGfChfcRp66tN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@greg.haskins 2B means *row 2* - *column *B*","username":"JonathanLevi","ts":"2017-08-01T18:23:39.085Z"}
{"msg":"@greg.haskins Yes, by 2B they mean *row 2* - *column B*","username":"JonathanLevi","ts":"2017-08-01T18:23:39.085Z"}
{"msg":"ok, got it","username":"greg.haskins","ts":"2017-08-01T18:24:44.900Z"}
{"msg":"It's a secret protocol that these guys came up with... ;-)","username":"JonathanLevi","ts":"2017-08-01T18:24:50.853Z"}
{"msg":"i wasnt sure if it was something in all the other attachments","username":"greg.haskins","ts":"2017-08-01T18:24:53.259Z"}
{"msg":"I am still concerned about the \"C\" collisions though","username":"greg.haskins","ts":"2017-08-01T18:25:05.914Z"}
{"msg":"This way we can vote, they change the image... and BOOM, we get the wrong logo for life!","username":"JonathanLevi","ts":"2017-08-01T18:25:12.085Z"}
{"msg":"[amiably/joking]","username":"JonathanLevi","ts":"2017-08-01T18:25:20.157Z"}
{"msg":"Also, the F looks \"weepy\"","username":"greg.haskins","ts":"2017-08-01T18:25:25.209Z"}
{"msg":"I do like how the cubes go together though","username":"greg.haskins","ts":"2017-08-01T18:25:34.787Z"}
{"msg":"When I see that \"F\", all I can think of is that \"waa waa\" sound","username":"greg.haskins","ts":"2017-08-01T18:26:01.180Z"}
{"msg":"heh","username":"greg.haskins","ts":"2017-08-01T18:26:02.215Z"}
{"msg":"Alright, alright, now that we are spilling the beans... (and the bitcoin fork is not that bad actually)","username":"JonathanLevi","ts":"2017-08-01T18:26:04.237Z"}
{"msg":"I am not an expert, but I don't like that the F is bent/broken","username":"JonathanLevi","ts":"2017-08-01T18:26:25.383Z"}
{"msg":"We should be \"proud\" of the F... if you see what I mean?","username":"JonathanLevi","ts":"2017-08-01T18:26:38.182Z"}
{"msg":"yeah, it looks sad","username":"greg.haskins","ts":"2017-08-01T18:26:41.890Z"}
{"msg":"The F should be as happy as the maintainers.","username":"JonathanLevi","ts":"2017-08-01T18:27:02.591Z"}
{"msg":"Or at least as... ;-)","username":"JonathanLevi","ts":"2017-08-01T18:27:09.553Z"}
{"msg":"---\nSpeaking of happiness, is any maintainer aware of any issue that should prevent Gari from finalizing the 1.0.1 release?","username":"JonathanLevi","ts":"2017-08-01T18:30:06.879Z"}
{"msg":"Any show-stoppers that were/are not addressed?","username":"JonathanLevi","ts":"2017-08-01T18:30:17.807Z"}
{"msg":"Yeah, make sure the v1.0.1 release is followed by a v1.0.2-SNAPSHOT CR or it will could hose the tree ;)","username":"greg.haskins","ts":"2017-08-01T18:44:37.191Z"}
{"msg":"Yeah, make sure the v1.0.1 release is followed by a v1.0.2-SNAPSHOT CR or it could hose the tree ;)","username":"greg.haskins","ts":"2017-08-01T18:44:37.191Z"}
{"msg":"I already made a note of that in his CR though","username":"greg.haskins","ts":"2017-08-01T18:44:47.569Z"}
{"msg":"I have just merged https://gerrit.hyperledger.org/r/#/c/12045/","username":"JonathanLevi","ts":"2017-08-01T19:06:22.099Z"}
{"msg":"*CODE FREEZE - BEGIN*","username":"JonathanLevi","ts":"2017-08-01T19:06:29.448Z"}
{"msg":"why are we having a code freeze?","username":"yacovm","ts":"2017-08-01T19:50:05.046Z"}
{"msg":"@cbf I recall you saying no code freeze","username":"yacovm","ts":"2017-08-01T19:50:17.725Z"}
{"msg":"@cbf: ","username":"yacovm","ts":"2017-08-01T19:50:17.725Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-scrum?msg=pWLchDfyKznGexYrB","username":"yacovm","ts":"2017-08-01T19:52:16.837Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-scrum?msg=pWLchDfyKznGexYrB","url":"https://chat.hyperledger.org/channel/fabric-scrum?msg=pWLchDfyKznGexYrB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"and when is it over? @JonathanLevi ","username":"yacovm","ts":"2017-08-01T20:24:09.205Z"}
{"msg":"We declared it because of this:","username":"JonathanLevi","ts":"2017-08-01T20:24:51.470Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=vP3eHuubyHZG6uc5m) ","username":"JonathanLevi","ts":"2017-08-01T20:25:02.766Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=vP3eHuubyHZG6uc5m","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=vP3eHuubyHZG6uc5m","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Gari will make the release off the *release* branch anyway. I'm just being extra prudent.","username":"JonathanLevi","ts":"2017-08-01T20:25:34.666Z"}
{"msg":"I see","username":"yacovm","ts":"2017-08-01T20:25:43.064Z"}
{"msg":"Why? Is there anything pressing that has to get merged into master this very moment?","username":"JonathanLevi","ts":"2017-08-01T20:26:07.137Z"}
{"msg":"not that I know of","username":"yacovm","ts":"2017-08-01T20:26:31.867Z"}
{"msg":"OK, cool. Just asking.","username":"JonathanLevi","ts":"2017-08-01T20:26:41.330Z"}
{"msg":"Thank you Yacov.","username":"JonathanLevi","ts":"2017-08-01T20:26:47.330Z"}
{"msg":"Same","username":"yacovm","ts":"2017-08-01T20:26:55.684Z"}
{"msg":"@JonathanLevi I don't think we need a code freeze, only a select few can merge to release branch","username":"cbf","ts":"2017-08-01T20:39:12.541Z"}
{"msg":"and all CRs are supposed to be submitted to master","username":"cbf","ts":"2017-08-01T20:39:54.593Z"}
{"msg":"That's true. I wanted to simplify, but fair enough, let's release it then.","username":"JonathanLevi","ts":"2017-08-01T20:40:05.340Z"}
{"msg":"*CODE FREEZE - END*","username":"JonathanLevi","ts":"2017-08-02T00:07:52.483Z"}
{"msg":"Hi All, please some love to https://gerrit.hyperledger.org/r/#/c/11929/","username":"adc","ts":"2017-08-02T01:06:56.366Z"}
{"msg":"who is the resident expert on the couchdb support?","username":"greg.haskins","ts":"2017-08-02T02:14:21.326Z"}
{"msg":"Guessing that is either @dave.enyeart or @manish-sethi ?","username":"jyellick","ts":"2017-08-02T03:11:12.953Z"}
{"msg":"I like logo no. 2. if it only could change its colour to something different than black to avoid contrasts","username":"matanyahu","ts":"2017-08-02T07:29:40.968Z"}
{"msg":"@greg.haskins I can take your couchdb questions","username":"dave.enyeart","ts":"2017-08-02T10:28:58.902Z"}
{"msg":"@here @jwagantall has kindly added an integration with JIRA to RC so now when we reference a JIRA item, it will post a snippet","username":"cbf","ts":"2017-08-02T11:49:26.353Z"}
{"msg":"e.g. FAB-4539","username":"cbf","ts":"2017-08-02T11:50:13.112Z"}
{"msg":"@dave.enyeart I figured it out, but thank you","username":"greg.haskins","ts":"2017-08-02T11:52:43.412Z"}
{"msg":"Thanks to @yacovm and @kostas for responding to FAB-5504 , but need more maintainers to weigh in (either positively or negatively) so that we can make a decision.","username":"jyellick","ts":"2017-08-02T12:55:02.191Z"}
{"msg":"Has joined the channel.","username":"CarlXK","ts":"2017-08-02T13:58:12.523Z","type":"uj"}
{"msg":"for those of you helping with stackoverflow questions, https://stackoverflow.com/questions/45232825/error-cannot-find-module-fabric-client could use some up-voting... I'll update the docs, but this seems to be a common pitfall for Windows developers","username":"cbf","ts":"2017-08-02T20:53:29.953Z"}
{"msg":"Has joined the channel.","username":"dsanchezseco","ts":"2017-08-03T07:58:54.506Z","type":"uj"}
{"msg":"Hi!\n\ni've filled this issue on jira(https://jira.hyperledger.org/browse/FAB-5576) and i've already have the code done on local. I want to submited but i have quite an amount of doubts about how to do it correctly.\n\nIf someone would be kind to help...","username":"dsanchezseco","ts":"2017-08-03T08:01:47.440Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=iSuT8JcaG7AdiCcjo) @cbf I've already updated the doc for that one so this shouldn't be a problem any more. Now, maybe what's needed is for people to get a brain patch to RTFM ;-)","username":"lehors","ts":"2017-08-03T08:38:01.518Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=iSuT8JcaG7AdiCcjo","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=iSuT8JcaG7AdiCcjo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[Moved to #fabric-dev-env  ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=tcs6cmc3ygwzphahu) @dsanchezseco ","username":"mastersingh24","ts":"2017-08-03T09:26:35.716Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=tcs6cmc3ygwzphahu","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=tcs6cmc3ygwzphahu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Someone refresh my memory on this: do we submit as \"fix-version: 1.1\" and let the release manager adjust to 1.0.2 in JIRA when they're doing the cherry-picking, or is it the opposite (i.e. we go for 1.0.2 in JIRA using our judgement, and if the release manager deems that it's not 1.02-applicable, they modify to 1.1)?","username":"kostas","ts":"2017-08-03T15:28:55.882Z"}
{"msg":"Go with 1.0.2","username":"mastersingh24","ts":"2017-08-03T17:02:54.635Z"}
{"msg":"for bugs... for feature work, I would think 1.1 @mastersingh24 @JonathanLevi yes?","username":"cbf","ts":"2017-08-03T18:47:33.708Z"}
{"msg":"Yes, that was/would be my vote too. Kostas, is it a relatively small and self-contained bug fix? ","username":"JonathanLevi","ts":"2017-08-03T18:59:32.815Z"}
{"msg":"\"Self-contained\", in the sense of, easy to get it merged within a build cycle, etc... not breaking stuff, etc.","username":"JonathanLevi","ts":"2017-08-03T19:00:34.068Z"}
{"msg":"Bugs and minor improvements is what I had in mind. I can definitely keep it to bugs only, cause \"minor\" when it comes to improvements is subjective. ","username":"kostas","ts":"2017-08-03T19:01:12.762Z"}
{"msg":"Bugs and self-contained minor improvements is what I had in mind. I can definitely keep it to bugs only, cause \"minor\" when it comes to improvements is subjective. ","username":"kostas","ts":"2017-08-03T19:01:12.762Z"}
{"msg":"We can also (all of us) consider some minor improvements... I believe. We'll vote over some, but I don't see why not. If people need some of these in 2 weeks or so... I'd be down to vote some of them in. Again, within reason, under consensus, etc.","username":"JonathanLevi","ts":"2017-08-03T19:04:46.556Z"}
{"msg":"Please review/vote for FAB-3621 (ACL); FAB-4207 (auth handler); FAB-1151 (side db private data)","username":"dave.enyeart","ts":"2017-08-04T13:56:48.203Z"}
{"msg":"Has joined the channel.","username":"eacoeytaux","ts":"2017-08-04T19:54:22.467Z","type":"uj"}
{"msg":"anyone familiar with this","username":"greg.haskins","ts":"2017-08-04T22:19:42.664Z"}
{"msg":"```peer channel create -o orderer:7050 -c mychannel -f /tmp/tmp.Jv90PxXmzj/anchor.tx --tls --cafile /etc/hyperledger/fabric/cryptogen/ordererOrganizations/orderer.net/tlsca/tlsca.orderer.net-cert.pem\nError: Got unexpected status: BAD_REQUEST\nUsage:\n  peer channel create [flags]\n\nFlags:\n  -c, --channelID string   In case of a newChain command, the channel ID to create.\n  -f, --file string        Configuration transaction file generated by a tool such as configtxgen for submitting to orderer\n  -t, --timeout int        Channel creation timeout (default 5)\n\nGlobal Flags:\n      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint\n      --logging-level string                Default logging level and overrides, see core.yaml for full syntax\n  -o, --orderer string                      Ordering service endpoint\n      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.\n      --test.coverprofile string            Done (default \"coverage.cov\")\n      --tls                                 Use TLS when communicating with the orderer endpoint\n  -v, --version                             Display current version of fabric peer server\n```","username":"greg.haskins","ts":"2017-08-04T22:19:47.767Z"}
{"msg":"@greg.haskins  I can probably help you","username":"jyellick","ts":"2017-08-04T22:20:08.330Z"}
{"msg":"Take a look at the tail of your orderer logs, you will see a reason","username":"jyellick","ts":"2017-08-04T22:20:27.286Z"}
{"msg":"cool...wife is calling but I will check that when I return","username":"greg.haskins","ts":"2017-08-04T22:20:42.735Z"}
{"msg":"If I had to wildly speculate, it would be that your `configtxgen` binary is `v1.0.0` and your orderer is newer","username":"jyellick","ts":"2017-08-04T22:20:43.714Z"}
{"msg":"thanks!","username":"greg.haskins","ts":"2017-08-04T22:20:45.280Z"}
{"msg":"@jyellick back...","username":"greg.haskins","ts":"2017-08-04T22:29:15.379Z"}
{"msg":"i just looked, not sure what to look for","username":"greg.haskins","ts":"2017-08-04T22:29:22.022Z"}
{"msg":"but I can say, it seems unlikely to be mismatched: I am running configtxgen from the fabric-tools container which was built coincident to the orderer","username":"greg.haskins","ts":"2017-08-04T22:29:49.165Z"}
{"msg":"Take this to DM so we don't pollute this channel? Or I don't mind doing it here","username":"jyellick","ts":"2017-08-04T22:30:02.370Z"}
{"msg":"sure (sorry all)","username":"greg.haskins","ts":"2017-08-04T22:30:11.100Z"}
{"msg":"Has joined the channel.","username":"Senthil1","ts":"2017-08-06T03:47:54.716Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dileban","ts":"2017-08-07T05:41:12.890Z","type":"uj"}
{"msg":"FAB-5225, needs some maintainers attention tagged as review needed (also has CR in place https://gerrit.hyperledger.org/r/#/c/11537/). Basically it takes care to expose network information via QSCC, e.g. for given channel to ask who are the visible members of that channel.","username":"C0rWin","ts":"2017-08-07T15:10:58.889Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-5225, needs some maintainers attention tagged as review needed (also has CR in place https://gerrit.hyperledger.org/r/#/c/11537/). Basically it takes care to expose network information via QSCC, e.g. for given channel to ask who are the visible members of that channel.","username":"C0rWin","ts":"2017-08-07T15:10:58.889Z"}
{"msg":"@C0rWin I previously assumed that QSCC would be for only making ledger data available.  I thought other types of peer info such as gossip info would be made available via gRPC APIs.  What do others think?","username":"dave.enyeart","ts":"2017-08-07T15:39:30.321Z"}
{"msg":"QSCC has all ACL and policies checks in place also QSCC could be leveraged to query for peer info not only ledger","username":"C0rWin","ts":"2017-08-07T15:43:08.985Z"}
{"msg":"Good morning. ","username":"JonathanLevi","ts":"2017-08-07T16:28:14.272Z"}
{"msg":"Re: \"expose channel leader in org and channel members using system chain code to outside world\"","username":"JonathanLevi","ts":"2017-08-07T16:28:17.249Z"}
{"msg":"Do we want to have a list of \"channel members\" available to the outside world?","username":"JonathanLevi","ts":"2017-08-07T16:29:05.316Z"}
{"msg":"@C0rWin ","username":"JonathanLevi","ts":"2017-08-07T16:29:37.846Z"}
{"msg":"Also, in the proposal, how do you want to define who is a \"visible\" user?","username":"JonathanLevi","ts":"2017-08-07T16:30:36.113Z"}
{"msg":"It's not confidential, you exposed this information in config already ","username":"C0rWin","ts":"2017-08-07T16:30:40.700Z"}
{"msg":"Do we also have users/members that are not \"visible\" ?","username":"JonathanLevi","ts":"2017-08-07T16:31:10.781Z"}
{"msg":"Yes we have","username":"C0rWin","ts":"2017-08-07T16:31:27.605Z"}
{"msg":"And we use channel policies to filter them out if client coming from foreign org","username":"C0rWin","ts":"2017-08-07T16:31:57.293Z"}
{"msg":"Foreign org, being one that does not have any member in that particular channel?","username":"JonathanLevi","ts":"2017-08-07T16:33:09.848Z"}
{"msg":"Or does not have an \"admin\", as it's currently called.","username":"JonathanLevi","ts":"2017-08-07T16:33:28.982Z"}
{"msg":"In particular, yes","username":"C0rWin","ts":"2017-08-07T16:33:29.400Z"}
{"msg":"So ChrisF and Jonathan share a channel. Neither of us is \"visible\"","username":"JonathanLevi","ts":"2017-08-07T16:33:56.161Z"}
{"msg":"Another IBMer comes in, sees Chris and not Jonathan?","username":"JonathanLevi","ts":"2017-08-07T16:34:07.874Z"}
{"msg":"No-no","username":"C0rWin","ts":"2017-08-07T16:34:18.109Z"}
{"msg":"Another HACERA person comes in, sees Jonathan and not Chris?","username":"JonathanLevi","ts":"2017-08-07T16:34:25.820Z"}
{"msg":"Suppose you share a channel","username":"C0rWin","ts":"2017-08-07T16:34:43.951Z"}
{"msg":"Are you in same org?","username":"C0rWin","ts":"2017-08-07T16:34:52.078Z"}
{"msg":"Nope","username":"JonathanLevi","ts":"2017-08-07T16:35:14.098Z"}
{"msg":"Ok","username":"C0rWin","ts":"2017-08-07T16:35:22.801Z"}
{"msg":"ChirsF IBM, Jonathan HACERA. 2 orgs","username":"JonathanLevi","ts":"2017-08-07T16:35:24.784Z"}
{"msg":"The \"CJ channel\"","username":"JonathanLevi","ts":"2017-08-07T16:35:29.865Z"}
{"msg":"Do you have peer in your org visible to Chris's org?","username":"C0rWin","ts":"2017-08-07T16:35:50.694Z"}
{"msg":"Say anchor peer?","username":"C0rWin","ts":"2017-08-07T16:36:04.770Z"}
{"msg":"Say I have HACERA/webadmin, not on that channel.","username":"JonathanLevi","ts":"2017-08-07T16:36:26.118Z"}
{"msg":"So it he comes to your peer, e.g. Same org","username":"C0rWin","ts":"2017-08-07T16:37:02.101Z"}
{"msg":"He will see only peers from your org","username":"C0rWin","ts":"2017-08-07T16:37:15.362Z"}
{"msg":"While if he will come to Chris org","username":"C0rWin","ts":"2017-08-07T16:37:32.666Z"}
{"msg":"He will see nothing","username":"C0rWin","ts":"2017-08-07T16:37:39.241Z"}
{"msg":"HACERA/webadmin queries \"CJ channel\" and sees HACERA/jonathan ?","username":"JonathanLevi","ts":"2017-08-07T16:37:46.297Z"}
{"msg":"Unless Chris has peer in the channel with external endpoint, externally accessible ","username":"C0rWin","ts":"2017-08-07T16:38:10.531Z"}
{"msg":"Not good, IMHO ;-)","username":"JonathanLevi","ts":"2017-08-07T16:38:32.717Z"}
{"msg":"Assume Chris belongs to a company that has over 300K employees.","username":"JonathanLevi","ts":"2017-08-07T16:38:52.427Z"}
{"msg":"We work out/set up  a \"private channel\".","username":"JonathanLevi","ts":"2017-08-07T16:39:16.718Z"}
{"msg":"One of the other peers in his org, changes something. Boom, he is exposed.","username":"JonathanLevi","ts":"2017-08-07T16:39:37.956Z"}
{"msg":"---","username":"JonathanLevi","ts":"2017-08-07T16:39:40.939Z"}
{"msg":"Did I get the scenario right? Or does it not make sense/I don't get it.","username":"JonathanLevi","ts":"2017-08-07T16:40:04.203Z"}
{"msg":"I am not following ","username":"C0rWin","ts":"2017-08-07T16:40:47.720Z"}
{"msg":"Of you have a private channel with Chris, which has 300k employees ","username":"C0rWin","ts":"2017-08-07T16:41:19.681Z"}
{"msg":"And your private channel defined for both of your orgs","username":"C0rWin","ts":"2017-08-07T16:41:48.492Z"}
{"msg":"Of you have a private channel with Chris. Chris belongs to an Org that has over 300,000 employees/peers","username":"JonathanLevi","ts":"2017-08-07T16:42:02.686Z"}
{"msg":"I have a private channel with Chris. Chris belongs to an Org that has over 300,000 employees/peers","username":"JonathanLevi","ts":"2017-08-07T16:42:02.686Z"}
{"msg":"Any peer with signed certificate from either of your orgs could do whatever he wants","username":"C0rWin","ts":"2017-08-07T16:42:21.253Z"}
{"msg":"The \"CJ channel\", yes.","username":"JonathanLevi","ts":"2017-08-07T16:42:27.922Z"}
{"msg":"Got you.","username":"JonathanLevi","ts":"2017-08-07T16:42:49.262Z"}
{"msg":"This is how it works right now","username":"C0rWin","ts":"2017-08-07T16:43:08.416Z"}
{"msg":"No difference made with this respect. In context of proposed change","username":"C0rWin","ts":"2017-08-07T16:43:37.418Z"}
{"msg":"Change only suggests to provide an ability to query peer for members which actively was joined to the channel and alive. Of course client has to have be valid, e.g. with valid certificates of one of the channel orgs.","username":"C0rWin","ts":"2017-08-07T16:49:40.293Z"}
{"msg":"Currently unless you are doing deep dive into logs no way to detect membership view","username":"C0rWin","ts":"2017-08-07T16:50:25.543Z"}
{"msg":"\"Of course client has to have be valid, e.g. with valid certificates of one of the channel orgs.\" yes, of course.","username":"JonathanLevi","ts":"2017-08-07T16:50:59.809Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=2Fjxcup7T6KZ32xyb) Yes, I hear you. Thanks for clarifying. ","username":"JonathanLevi","ts":"2017-08-07T16:51:24.346Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2Fjxcup7T6KZ32xyb","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2Fjxcup7T6KZ32xyb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://jira.hyperledger.org/browse/FAB-3621 is waiting with bated breath for some votes please  :-)","username":"muralisr","ts":"2017-08-07T18:59:44.409Z"}
{"msg":"Has joined the channel.","username":"bstasyszyn","ts":"2017-08-10T12:17:42.473Z","type":"uj"}
{"msg":"Hi, can maintainers please vote on https://jira.hyperledger.org/browse/FAB-5451 ? ","username":"yacovm","ts":"2017-08-10T13:38:32.352Z"}
{"msg":"@jimthematrix ^","username":"yacovm","ts":"2017-08-10T13:53:24.587Z"}
{"msg":"just voted","username":"jimthematrix","ts":"2017-08-10T14:05:09.416Z"}
{"msg":"tnx","username":"yacovm","ts":"2017-08-10T14:09:38.543Z"}
{"msg":"Has joined the channel.","username":"marryton007","ts":"2017-08-11T13:02:01.825Z","type":"uj"}
{"msg":"The master branch of 'fabric-samples' can't start the 'first-network', the error file and patch file uploads ","username":"marryton007","ts":"2017-08-11T13:07:19.218Z"}
{"msg":"@marryton007 This is not he appropriate channel for this question.  Please try #fabric-questions ","username":"jyellick","ts":"2017-08-11T13:08:53.056Z"}
{"msg":"@marryton007 This is not the appropriate channel for this question.  Please try #fabric-questions ","username":"jyellick","ts":"2017-08-11T13:08:53.056Z"}
{"msg":"ok, thanks.","username":"marryton007","ts":"2017-08-11T13:09:10.194Z"}
{"msg":"Has joined the channel.","username":"aleksandar.likic","ts":"2017-08-11T15:02:10.986Z","type":"uj"}
{"msg":"I ask your forbearance, this channel will experience a small amount of turbulence for the next few minutes.","username":"rjones","ts":"2017-08-11T20:54:43.250Z"}
{"msg":"binhn","username":"rjones","ts":"2017-08-11T20:55:46.881Z","type":"subscription-role-added"}
{"msg":"C0rWin","username":"rjones","ts":"2017-08-11T20:56:22.238Z","type":"subscription-role-added"}
{"msg":"dave.enyeart","username":"rjones","ts":"2017-08-11T20:56:57.149Z","type":"subscription-role-added"}
{"msg":"greg.haskins","username":"rjones","ts":"2017-08-11T20:57:12.939Z","type":"subscription-role-added"}
{"msg":"greg.haskins","username":"rjones","ts":"2017-08-11T20:57:13.875Z","type":"subscription-role-removed"}
{"msg":"hgabre","username":"rjones","ts":"2017-08-11T20:57:43.869Z","type":"subscription-role-added"}
{"msg":"JonathanLevi","username":"rjones","ts":"2017-08-11T20:57:56.875Z","type":"subscription-role-removed"}
{"msg":"JonathanLevi","username":"rjones","ts":"2017-08-11T20:57:58.110Z","type":"subscription-role-added"}
{"msg":"jiangyaoguo","username":"rjones","ts":"2017-08-11T20:58:14.030Z","type":"subscription-role-added"}
{"msg":"jimthematrix","username":"rjones","ts":"2017-08-11T20:58:32.406Z","type":"subscription-role-added"}
{"msg":"jyellick","username":"rjones","ts":"2017-08-11T20:58:39.468Z","type":"subscription-role-added"}
{"msg":"kostas","username":"rjones","ts":"2017-08-11T20:58:52.744Z","type":"subscription-role-added"}
{"msg":"manish-sethi","username":"rjones","ts":"2017-08-11T20:59:04.388Z","type":"subscription-role-added"}
{"msg":"mastersingh24","username":"rjones","ts":"2017-08-11T20:59:12.479Z","type":"subscription-role-added"}
{"msg":"muralisr","username":"rjones","ts":"2017-08-11T20:59:25.070Z","type":"subscription-role-added"}
{"msg":"sheehan","username":"rjones","ts":"2017-08-11T20:59:42.343Z","type":"subscription-role-added"}
{"msg":"smithbk","username":"rjones","ts":"2017-08-11T20:59:49.362Z","type":"subscription-role-added"}
{"msg":"TamasBlummer","username":"rjones","ts":"2017-08-11T21:00:00.168Z","type":"subscription-role-added"}
{"msg":"yacovm","username":"rjones","ts":"2017-08-11T21:00:11.193Z","type":"subscription-role-added"}
{"msg":"The only people that can speak in this channel are members of the LDAP group `hyperledger-gerrit-fabric-committers` . You all have superpowers now for this channel - please be careful.","username":"rjones","ts":"2017-08-11T21:04:01.877Z"}
{"msg":"The only people that can speak in this channel are members of the LDAP group hyperledger-gerrit-fabric-committers . You all have superpowers now for this channel - please be careful.","username":"rjones","ts":"2017-08-11T21:04:01.877Z"}
{"msg":"If someone needs the ability to speak, but they cannot speak in this channel, any of the channel owners may choose to upgrade that person - or a channel owner can get in touch with me directly","username":"rjones","ts":"2017-08-11T21:04:56.812Z"}
{"msg":"If someone needs the ability to speak, but they cannot speak in this channel, any of the channel owners may choose to upgrade that person - or a chop can get in touch with me directly","username":"rjones","ts":"2017-08-11T21:04:56.812Z"}
{"msg":"jyellick","username":"rjones","ts":"2017-08-11T21:07:12.271Z","type":"user-unmuted"}
{"msg":"JonathanLevi","username":"rjones","ts":"2017-08-11T21:07:22.016Z","type":"user-unmuted"}
{"msg":"cbf","username":"rjones","ts":"2017-08-11T21:08:39.565Z","type":"user-unmuted"}
{"msg":"mastersingh24","username":"rjones","ts":"2017-08-11T21:08:45.751Z","type":"user-unmuted"}
{"msg":"binhn","username":"rjones","ts":"2017-08-11T21:08:53.064Z","type":"user-unmuted"}
{"msg":"jimthematrix","username":"rjones","ts":"2017-08-11T21:09:04.775Z","type":"user-unmuted"}
{"msg":"C0rWin","username":"rjones","ts":"2017-08-11T21:09:21.518Z","type":"user-unmuted"}
{"msg":"dave.enyeart","username":"rjones","ts":"2017-08-11T21:09:49.399Z","type":"user-unmuted"}
{"msg":"greg.haskins","username":"rjones","ts":"2017-08-11T21:10:03.334Z","type":"user-unmuted"}
{"msg":"TamasBlummer","username":"rjones","ts":"2017-08-11T21:10:50.743Z","type":"user-unmuted"}
{"msg":"hgabre","username":"rjones","ts":"2017-08-11T21:11:01.766Z","type":"user-unmuted"}
{"msg":"jiangyaoguo","username":"rjones","ts":"2017-08-11T21:11:08.342Z","type":"user-unmuted"}
{"msg":"kostas","username":"rjones","ts":"2017-08-11T21:13:14.567Z","type":"user-unmuted"}
{"msg":"manish-sethi","username":"rjones","ts":"2017-08-11T21:13:28.889Z","type":"user-unmuted"}
{"msg":"muralisr","username":"rjones","ts":"2017-08-11T21:13:44.507Z","type":"user-unmuted"}
{"msg":"sheehan","username":"rjones","ts":"2017-08-11T21:14:00.133Z","type":"user-unmuted"}
{"msg":"smithbk","username":"rjones","ts":"2017-08-11T21:14:08.280Z","type":"user-unmuted"}
{"msg":"yacovm","username":"rjones","ts":"2017-08-11T21:14:23.722Z","type":"user-unmuted"}
{"msg":"@jyellick could I ask you to say something in here so I know that maintainers can still speak in a channel for maintainers? thank you","username":"rjones","ts":"2017-08-11T21:16:21.923Z"}
{"msg":"Speaking","username":"jyellick","ts":"2017-08-11T21:16:31.191Z"}
{"msg":"Excellent. ","username":"rjones","ts":"2017-08-11T21:17:38.999Z"}
{"msg":"","username":"JonathanLevi","ts":"2017-08-11T21:20:30.532Z","attachments":[{"title":"File Uploaded: Positive flow test 1, 2, 3... attach!","title_link":"/file-upload/4yjFfi8WwP9PkrkPc/Positive flow test 1, 2, 3... attach!","image_url":"/file-upload/4yjFfi8WwP9PkrkPc/Positive flow test 1, 2, 3... attach!","image_type":"image/png","image_size":89579,"url":"/file-upload/4yjFfi8WwP9PkrkPc/Positive flow test 1, 2, 3... attach!","remote":false,"fileId":"4yjFfi8WwP9PkrkPc","fileName":"Positive flow test 1, 2, 3... attach!"}]}
{"msg":"OK, we are safe!","username":"JonathanLevi","ts":"2017-08-11T21:20:43.103Z"}
{"msg":"Everyone that is a `fabric` maintainer is also a channel owner and can `unmute` users as needed. I promise I'm done spamming now.","username":"rjones","ts":"2017-08-11T21:21:34.335Z"}
{"msg":"Has joined the channel.","username":"geekgonecrazy","ts":"2017-08-11T21:39:15.009Z","type":"uj"}
{"msg":"Has joined the channel.","username":"arjanvaneersel","ts":"2017-08-12T14:31:33.407Z","type":"uj"}
{"msg":"Cross posting from #fabric-pr-review \n[ ](https://chat.hyperledger.org/channel/fabric-pr-review?msg=RMt2a5BXnTLfGFXdZ) ","username":"jyellick","ts":"2017-08-12T17:00:41.761Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=RMt2a5BXnTLfGFXdZ","url":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=RMt2a5BXnTLfGFXdZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi everybody, how is something like the possible?","username":"JonathanLevi","ts":"2017-08-12T21:26:50.660Z"}
{"msg":"(I saw the import path, etc. and the fix...)","username":"JonathanLevi","ts":"2017-08-12T21:27:08.824Z"}
{"msg":"The question is more, how could one of us physically submit a breaking CR? Or was it a merge issue?","username":"JonathanLevi","ts":"2017-08-12T21:27:54.751Z"}
{"msg":"I though that we have a few mechanisms in Gerrit for preventing this...","username":"JonathanLevi","ts":"2017-08-12T21:28:45.525Z"}
{"msg":"(I though that we have a few mechanisms in Gerrit for preventing this...)","username":"JonathanLevi","ts":"2017-08-12T21:29:00.477Z"}
{"msg":"Consider the following scenario where the master branch's tip `M` has 2 different change sets that are not stacked on top of each other - `A` and `B`.\nNow, `A` and `B` can *not* be have a conflict, but if `A` and `B` are merged together - a compilation error (for instance) or a runtime error might occur.\nNow, assume without loss of generality that `A` is merged before `B` and now the master branch is `M || A`.\nNow, gerrit would add to `B` an orange circle indicating that it needs to be rebased on top of the current (new) master branch.\nThe current policy allows you to submit `B` to be merged into master without having to rebase it. ","username":"yacovm","ts":"2017-08-12T21:36:53.450Z"}
{"msg":"Consider the following scenario where the master branch's tip `M` has 2 different change sets that are not stacked on top of each other - `A` and `B`.\nNow, `A` and `B` can *may not* have a conflict, but if `A` and `B` are merged together - a compilation error (for instance) or a runtime error might occur.\nNow, assume without loss of generality that `A` is merged before `B` and now the master branch is `M || A`.\nNow, gerrit would add to `B` an orange circle indicating that it needs to be rebased on top of the current (new) master branch.\nThe current policy allows you to submit `B` to be merged into master without having to rebase it. ","username":"yacovm","ts":"2017-08-12T21:36:53.450Z"}
{"msg":"","username":"yacovm","ts":"2017-08-12T21:38:09.799Z","attachments":[{"title":"File Uploaded: Clipboard - August 13, 2017 12:38 AM","title_link":"/file-upload/Xmhyq9xTEew4egdtt/Clipboard - August 13, 2017 12:38 AM","image_url":"/file-upload/Xmhyq9xTEew4egdtt/Clipboard - August 13, 2017 12:38 AM","image_type":"image/png","image_size":5170,"url":"/file-upload/Xmhyq9xTEew4egdtt/Clipboard - August 13, 2017 12:38 AM","remote":false,"fileId":"Xmhyq9xTEew4egdtt","fileName":"Clipboard - August 13, 2017 12:38 AM"}]}
{"msg":"The reason that we allow such change sets to be merged is that each CI cycle takes ~ 1 hour and has a success rate that isn't great as you know ;) ","username":"yacovm","ts":"2017-08-12T21:39:45.279Z"}
{"msg":"Oh, yeah, I sure know. I see.","username":"JonathanLevi","ts":"2017-08-12T21:40:22.579Z"}
{"msg":"So the tactic that I personally usually do is:\n1) Rebase locally and run UT and e2e locally\n2) Look at the change sets that were merged before the parent of the change set in question until \"now\" and see if that is dangerous","username":"yacovm","ts":"2017-08-12T21:41:00.564Z"}
{"msg":"So one cannot always whether the build is genuinely broken?","username":"JonathanLevi","ts":"2017-08-12T21:41:05.865Z"}
{"msg":"ah, we can!","username":"yacovm","ts":"2017-08-12T21:41:14.063Z"}
{"msg":"when a merge occurs, a merge CI job is triggered","username":"yacovm","ts":"2017-08-12T21:41:26.595Z"}
{"msg":"But only after a full post-merge build.","username":"JonathanLevi","ts":"2017-08-12T21:41:34.583Z"}
{"msg":"so you can look at the merge job and see if *that* failed","username":"yacovm","ts":"2017-08-12T21:41:34.691Z"}
{"msg":"Yes, I get it.","username":"JonathanLevi","ts":"2017-08-12T21:41:37.147Z"}
{"msg":"I know you do, the explanations here are more to the passive readers","username":"yacovm","ts":"2017-08-12T21:41:56.766Z"}
{"msg":"So effectively, it's ~1 hour from pushing the CR","username":"JonathanLevi","ts":"2017-08-12T21:42:00.525Z"}
{"msg":"And say, another ~1 hour after merge/submitting the CR?","username":"JonathanLevi","ts":"2017-08-12T21:42:16.177Z"}
{"msg":"not sure what you're asking?","username":"yacovm","ts":"2017-08-12T21:42:28.156Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=gGet8hHaNBRTW7YmA) \n\nCan we not automate this?","username":"JonathanLevi","ts":"2017-08-12T21:43:18.398Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=gGet8hHaNBRTW7YmA","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=gGet8hHaNBRTW7YmA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Can we not automate this?\n\n[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=gGet8hHaNBRTW7YmA) \n\n","username":"JonathanLevi","ts":"2017-08-12T21:43:18.398Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=gGet8hHaNBRTW7YmA","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=gGet8hHaNBRTW7YmA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"so I'd say:","username":"yacovm","ts":"2017-08-12T21:44:00.967Z"}
{"msg":"1) I think that this can be done (enforce rebasing) but not sure if gerrit supports that without removing the +2s of maintainers. @rjones would know for sure.\nWhat you're asking is - can gerrit make jenkins run CI on a rebased simulation of the code and not on the latest change set (that would remove the +2s)\nAlternatively - is it possible to rebase without losing +2s?\n2) compilation wise it's possible but runtime- wise it's equivalent to the halting problem?","username":"yacovm","ts":"2017-08-12T21:46:12.553Z"}
{"msg":"1) I think that this can be done but not sure if gerrit supports that without removing the +2s of maintainers. @rjones would know for sure.\nWhat you're asking is - can gerrit make jenkins run CI on a rebased simulation of the code and not on the latest change set (that would remove the +2s)\nAlternatively - is it possible to rebase without losing +2s?\n2) I'd say - compilation wise it's possible but runtime- wise it's equivalent to the halting problem?","username":"yacovm","ts":"2017-08-12T21:46:12.553Z"}
{"msg":"1) I think that this can be done but not sure if gerrit supports that without removing the +2s of maintainers. @rjones would know for sure.\nWhat you're asking is - can gerrit make jenkins run CI on a rebased simulation of the code and not on the latest change set (that would remove the +2s)\nAlternatively - is it possible to rebase without losing +2s?\n2) compilation wise it's possible but runtime- wise it's equivalent to the halting problem?","username":"yacovm","ts":"2017-08-12T21:46:12.553Z"}
{"msg":"I would need a lot of help to make that happen, and TBH I'm pretty gun shy right now","username":"rjones","ts":"2017-08-12T21:48:52.110Z"}
{"msg":"the way it might work is getting 2+2 basically gives permission to a bot to do something like a rebase + merge, or something of that type","username":"rjones","ts":"2017-08-12T21:49:37.537Z"}
{"msg":"IMHO - since we have release branch and it's tagged and master branch is a developer branch and the release branch is the default branch in github - it's not that bad as it used to be","username":"yacovm","ts":"2017-08-12T21:49:39.478Z"}
{"msg":">  the way it might work is getting 2+2 basically gives permission to a bot to do something like a rebase + merge, or something of that type \nSo, is it possible that a bot would read if the change set has a +2, and if the change set needs rebase - rebase it and if CI passes - recover the +2 ? ","username":"yacovm","ts":"2017-08-12T21:50:31.358Z"}
{"msg":"it's all YAML/shell scripts.","username":"rjones","ts":"2017-08-12T21:51:21.187Z"}
{"msg":"any of the scripts can do anything you want.","username":"rjones","ts":"2017-08-12T21:51:29.142Z"}
{"msg":"the Gerrit trickery is all prolog","username":"rjones","ts":"2017-08-12T21:51:55.288Z"}
{"msg":"protolog is like witchcraft ","username":"yacovm","ts":"2017-08-12T21:52:24.014Z"}
{"msg":"prolog is like witchcraft ","username":"yacovm","ts":"2017-08-12T21:52:24.014Z"}
{"msg":"we might take this conversation to #fabric-ci ","username":"rjones","ts":"2017-08-12T21:52:47.493Z"}
{"msg":"> IMHO - since we have release branch and it's tagged and master branch is a developer branch and the release branch is the default branch in github - it's not that bad as it used to be\n\nAgreed.  It's not the end of the world that this happened, and, closer to a release, we can (and are) more careful with merging ","username":"jyellick","ts":"2017-08-12T22:56:23.647Z"}
{"msg":"@rjones What about another Jenkins trigger that we could run which would simply merge the CR onto master, and run a very light CI.  If we disable things like code coverage metrics, and maybe even do a `go test-run='^$'` just so that we can get assurances that the code and tests still compile.","username":"jyellick","ts":"2017-08-12T22:58:41.285Z"}
{"msg":"@jyellick it is literally in your hands to do what you want","username":"rjones","ts":"2017-08-12T23:16:45.199Z"}
{"msg":"We have a 'Remerge' command as well","username":"rjones","ts":"2017-08-12T23:17:10.585Z"}
{"msg":"Fellow maintainers -  I'll be out on vacation this week (starting with a 7 hour drive this morning :( ).\nI'll likely be checking in in the early AM since I generally get up before most, but just wanted to let you know in case people think I'm ignoring them  ;)","username":"mastersingh24","ts":"2017-08-13T09:19:00.423Z"}
{"msg":"I took the the liberty of V+1 on https://gerrit.hyperledger.org/r/#/c/12335/ with the following comment in the CR ```We have had every test succeed multiple times over the course of all the reverifies. I the latest, behave fails but has succeeded before. \nRather wait for one CR where everything works, allow me to override the V-1 please.\n(Also have submitted https://gerrit.hyperledger.org/r/#/c/12393  for one of the annoying failures).```","username":"muralisr","ts":"2017-08-13T13:22:16.569Z"}
{"msg":"@mastersingh24 put your car in auto drive mode :-)","username":"binhn","ts":"2017-08-14T14:15:51.604Z"}
{"msg":"need 1 more +2 please   https://gerrit.hyperledger.org/r/#/c/12147/","username":"binhn","ts":"2017-08-14T18:22:55.552Z"}
{"msg":"Has left the channel.","username":"dsanchezseco","ts":"2017-08-16T07:01:47.359Z","type":"ul"}
{"msg":"This (merged) commit enables 4 new fabric-specific CI verbs. rebuild-{x,z,behave,e2e} will do what it says on the tin. re{check,verify} still exist and will get all 4. https://github.com/hyperledger/ci-management/commit/b5e642f900663646e10bf278a09656c09ea7187f","username":"rjones","ts":"2017-08-17T23:13:55.124Z"}
{"msg":"Has left the channel.","username":"geekgonecrazy","ts":"2017-08-18T01:14:42.286Z","type":"ul"}
{"msg":"@rjones that is awesome.  Question- besides doing all four vs one, is there any difference between what a 'reverify' does vs a 'rebuild'?","username":"dave.enyeart","ts":"2017-08-18T02:22:24.237Z"}
{"msg":"No. The difference is: previously, we had four builds that would fire for one word. Now each of those builds fires for a distinct word, as well as the other word. I picked a word that I wouldn't need a regular expression to distinguish, that's all.","username":"rjones","ts":"2017-08-18T02:25:22.595Z"}
{"msg":"thanks @rjones .  And finally, if 3 of 4 pass with initial CI, and you do a rebuild-XXX to get the fourth one to pass, do you get the +1 for Verification automatically?","username":"dave.enyeart","ts":"2017-08-18T02:43:48.708Z"}
{"msg":"you should. if you don't, please tell me","username":"rjones","ts":"2017-08-18T02:44:27.748Z"}
{"msg":"thx","username":"dave.enyeart","ts":"2017-08-18T02:44:34.452Z"}
{"msg":"Concerning https://gerrit.hyperledger.org/r/#/c/11909/ (Nominate Alessandro as maintainer), it looks like there are sufficient votes to merge per the Hyperledger charter - https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#becoming-a-maintainer. Last call for final votes/comments please!","username":"dave.enyeart","ts":"2017-08-18T03:15:24.510Z"}
{"msg":"Concerning https://gerrit.hyperledger.org/r/#/c/11909/ (Nominate Alessandro as maintainer), I think we need a resolution.  The charter says a majority of maintainer votes is required and therefore the nomination would be rejected.  But readthedocs says only 5 votes are needed, in which case the nomination would pass: https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#becoming-a-maintainer.  Does anybody know why the disconnect exists between the charter and readthedocs?  If we settle that then I think we have our resolution.","username":"dave.enyeart","ts":"2017-08-18T03:15:24.510Z"}
{"msg":"This is a tricky situation @dave.enyeart - a few of us made several commitments to keep the ratio of IBMers maintainers below a certain level.","username":"JonathanLevi","ts":"2017-08-18T03:54:20.984Z"}
{"msg":"At the same time, I really don't want people to take this personally, or get demotivated.","username":"JonathanLevi","ts":"2017-08-18T03:54:47.629Z"}
{"msg":"I have added my notes to the CR... but will be happy to discuss this more/with anyone/everyone.","username":"JonathanLevi","ts":"2017-08-18T03:55:32.431Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=NfLZa2HKJe4fLD8Ys) We need to update the read the docs. We need a majority for adding a maintainer.","username":"JonathanLevi","ts":"2017-08-18T04:12:35.593Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=NfLZa2HKJe4fLD8Ys","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=NfLZa2HKJe4fLD8Ys","remote":true,"fileId":null,"fileName":null}]}
{"msg":"That CR (Alessandro's case) requires an extra vote, in order to go through... but please all, take a look at my last comment there.","username":"JonathanLevi","ts":"2017-08-18T04:13:43.072Z"}
{"msg":"Again, my review \"score\" is closer to a \"-1\" too because of our earlier commitment(s) - but will be happy to discuss this more. ","username":"JonathanLevi","ts":"2017-08-18T04:14:40.241Z"}
{"msg":"Ok, could somebody familiar with the history here update readthedocs.  then i think there will be more clarity on a resolution.","username":"dave.enyeart","ts":"2017-08-18T04:14:53.499Z"}
{"msg":"Sure, I will do it tomorrow. Not clear why the readthedocs are not in sync. No problem.","username":"JonathanLevi","ts":"2017-08-18T04:15:55.005Z"}
{"msg":"@JonathanLevi https://readthedocs.org/projects/hyperledger-fabric/ says it was built 8 hours ago?","username":"rjones","ts":"2017-08-18T06:47:44.471Z"}
{"msg":"Ok, https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#becoming-a-maintainer was updated to be aligned with the charter, indicating that a majority is indeed required.  Thanks for clarifying.","username":"dave.enyeart","ts":"2017-08-19T13:19:33.939Z"}
{"msg":"Has joined the channel.","username":"danielleekc","ts":"2017-08-21T10:01:19.253Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=go372nhr6GHPh2fag) @JonathanLevi that hopefully wouldn't mean accepting maintainers whose code knowledge is peripheral","username":"binhn","ts":"2017-08-23T00:47:22.095Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=go372nhr6GHPh2fag","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=go372nhr6GHPh2fag","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi @binhn - you are right. No, it wouldn't mean that.","username":"JonathanLevi","ts":"2017-08-23T06:59:16.494Z"}
{"msg":"It's actually a challenging goal. I was/am still hoping that we will be able get more organizations and individuals interested in Hyperledger Fabric, so that they spend more time, get up to speed, etc... so that they can \"move up in the world\" and get promoted to be maintainers.","username":"JonathanLevi","ts":"2017-08-23T06:59:27.582Z"}
{"msg":"It does not mean that no-IBMers will get a \"discount\" in terms of knowing enough about the project. At least this is not the way I saw/see it.","username":"JonathanLevi","ts":"2017-08-23T07:00:41.243Z"}
{"msg":"If you (Binhn) or others have some insights/views that you would like to share, then we should do it.","username":"JonathanLevi","ts":"2017-08-23T07:01:58.855Z"}
{"msg":"Frankly, Hyperledger Fabric does have quite a steep learning curve. Most of us probably don't feel/appreciate it, as we have been around for a while.","username":"JonathanLevi","ts":"2017-08-23T07:02:58.739Z"}
{"msg":"For example, some suggested that the Linux Foundation webinar I delivered 2 weeks ago, was already too technical.... while I went over less than 5% of what we have (all) built here.","username":"JonathanLevi","ts":"2017-08-23T07:05:03.436Z"}
{"msg":"---\n\nI believe that being a good maintainer for a project such as Hyperledger Fabric, require a combination of skills. I don't think that one necessarily needs to know \"everything\".\n\nEven so, does any one of us really know every single line of this project? No, or at least: I doubt it. So many contributors, and so many moving parts. Could I/we accept all the features that people proposed? No. Can each of really claim that we never make mistakes? No, at least, I make mistakes all the time. However, we do make a constant effort to minimize the number of errors and to minimize their impact.\n\nMind you, I did end up \"cutting off\" the 1.0 release \"abruptly\" (in the midst of people arguing over/discussing the release notes), as moments after we have all agreed that we are ready to go - the press-releases were kicking in. Could I/we make everybody happy all the time (e.g. when we released 1.0)? Nope. But hopefully, we can be more communicative, friendly, keeping our minds open to suggestions and continue to welcome others.\n\nAs a matter of fact, I'm probably the one guy who is constantly/relentlessly asking all of you questions, regularly reaching out for help, and getting others' views... especially when I'm under stress/pressure to deliver or just overworked.\n\nOther than recommending that we'd accept new maintainers with limited and/or merely peripheral knowledge, the main thing, I think, is that we should all be \"as nice to newcomers as we are being to each other\", so that we can bring more people up to speed.\n\nJust some more thoughts on this, after getting some more sleep...","username":"JonathanLevi","ts":"2017-08-23T18:23:35.983Z"}
{"msg":"---\nHi again,\n\nI believe that being a good maintainer in a project such as Hyperledger Fabric, require a combination of skills. I don't think that one necessarily needs to know \"everything\".\n\nEven so, does any one of us really know every single line of this project? No, or at least: I doubt it. So many contributors, and so many moving parts. Could I/we accept all the features that people proposed? No. Can each of really claim that we never make mistakes? No, at least, I make mistakes all the time. However, we do make a constant effort to minimize the number of errors and to minimize their impact.\n\nMind you, I did end up \"cutting off\" the 1.0 release \"abruptly\" (in the midst of people arguing over/discussing the release notes), as moments after we have all agreed that we are ready to go - the press-releases were kicking in. Could I/we make everybody happy all the time (e.g. when we released 1.0)? Nope. But hopefully, we can be more communicative, friendly, keeping our minds open to suggestions and continue to welcome others.\n\nAs a matter of fact, I'm probably the one guy who is constantly/relentlessly asking all of you questions, regularly reaching out for help, and getting others' views... especially when I'm under stress/pressure to deliver or just overworked.\n\nOther than recommending that we'd accept new maintainers with limited and/or merely peripheral knowledge, the main thing, I think, is that we should all be \"as nice to newcomers as we are being to each other\", so that we can bring more people up to speed.\n\nJust some more thoughts on this, after getting some more sleep...","username":"JonathanLevi","ts":"2017-08-23T18:24:10.832Z"}
{"msg":"---\nHi again,\n\nI believe that being a good maintainer in a project such as Hyperledger Fabric, require a combination of skills. I don't think that one necessarily needs to know \"everything\".\n\nEven so, does any one of us really know every single line of this project? No, or at least: I doubt it. So many contributors, and so many moving parts. Could I/we accept all the features that people proposed? No. Can each of us really claim that we never make mistakes? No, at least, I make mistakes all the time. However, we do make a constant effort to minimize the number of errors and to minimize their impact.\n\nMind you, I did end up \"cutting off\" the 1.0 release \"abruptly\" (in the midst of people arguing over/discussing the release notes), as moments after we have all agreed that we are ready to go - the press-releases were kicking in. Could I/we make everybody happy all the time (e.g. when we released 1.0)? Nope. But hopefully, we can be more communicative, friendly, keeping our minds open to suggestions and continue to welcome others.\n\nAs a matter of fact, I'm probably the one guy who is constantly/relentlessly asking all of you questions, regularly reaching out for help, and getting others' views... especially when I'm under stress/pressure to deliver or just overworked.\n\nOther than recommending that we'd accept new maintainers with limited and/or merely peripheral knowledge, the main thing, I think, is that we should all be \"as nice to newcomers as we are being to each other\", so that we can bring more people up to speed.\n\nJust some more thoughts on this, after getting some more sleep...","username":"JonathanLevi","ts":"2017-08-23T18:25:26.666Z"}
{"msg":"^^^ Comments welcome!","username":"JonathanLevi","ts":"2017-08-23T18:25:44.066Z"}
{"msg":"Well, lack of knowledge isn't a constant thing- is it? people can learn. I for one- at first was only comfortable with the gossip code, but then went on and learned from both reading the code, and asking people and am now comfortable with other areas of the code (mainly the peer / msp module) ","username":"yacovm","ts":"2017-08-23T18:29:32.578Z"}
{"msg":"Well, lack of knowledge isn't a constant thing- is it? people can learn. I for one- at first was only *really* comfortable with the gossip code, but then went on and learned from both reading the code, and asking people and am now comfortable with other areas of the code (mainly the peer / msp module) ","username":"yacovm","ts":"2017-08-23T18:29:32.578Z"}
{"msg":"Well, lack of knowledge isn't a constant thing- is it? people can learn.... ","username":"yacovm","ts":"2017-08-23T18:33:23.513Z"}
{"msg":"Yes, that's the idea. We share so much material from design docs, to plans, code, reviews, discussions... I don't think it is impossible to \"jump on the wagon\" and ride with us ;-)","username":"JonathanLevi","ts":"2017-08-23T18:45:13.839Z"}
{"msg":"Yes, that's true - that's the idea. We share so much material from design docs, to plans, code, reviews, discussions... I don't think it is impossible to \"jump on the wagon\" and ride with us ;-)","username":"JonathanLevi","ts":"2017-08-23T18:45:13.839Z"}
{"msg":"Yes, that's true - that's the idea. We share so much material: from design docs, to plans, code, reviews, discussions... I don't think it is impossible to \"jump on the wagon\" and ride with us ;-)","username":"JonathanLevi","ts":"2017-08-23T18:45:13.839Z"}
{"msg":"Has joined the channel.","username":"writetogupta","ts":"2017-08-23T21:15:04.407Z","type":"uj"}
{"msg":"Has joined the channel.","username":"CodeReaper","ts":"2017-08-25T10:54:05.126Z","type":"uj"}
{"msg":"all, could someone pls fire this one in: https://gerrit.hyperledger.org/r/#/c/12803/","username":"greg.haskins","ts":"2017-08-26T20:59:56.886Z"}
{"msg":"the paired \"Release\" CR already went in...this should be the next patch (not that baseimage is high volume)","username":"greg.haskins","ts":"2017-08-26T21:00:16.110Z"}
{"msg":"ty @yacovm ","username":"greg.haskins","ts":"2017-08-26T21:01:38.032Z"}
{"msg":"some love for the 12107/12109 pair appreciated too: https://gerrit.hyperledger.org/r/#/c/12109/","username":"greg.haskins","ts":"2017-08-26T21:02:25.892Z"}
{"msg":"been languishing for awhile ","username":"greg.haskins","ts":"2017-08-26T21:02:38.122Z"}
{"msg":"Have a small comment @greg.haskins ","username":"yacovm","ts":"2017-08-26T21:13:28.299Z"}
{"msg":"Can we get another +2 on https://gerrit.hyperledger.org/r/#/c/11489/ ?\n(I'm trying to go through the old CRs here)","username":"mastersingh24","ts":"2017-08-26T23:07:47.973Z"}
{"msg":"Folks - wanted to gauge the appetite for upgrading Go (to 1.9) and grpc-go (to 1.5.2) for the 1.1 release.  I've submitted the relevant CRs and if we are bold enough to make the move, we should do so soon to get as much burn-in time as required.\n\nThe changes required were quite small so seems like a reasonable thing to do IMHO.\nI also think that the ability to test the use of Golang plugins is definitely worth it's weight in gold plus there are a number of performance enhancements as well","username":"mastersingh24","ts":"2017-08-28T20:34:30.570Z"}
{"msg":"Folks - wanted to gauge the appetite for upgrading Go (to 1.9) and grpc-go (to 1.5.2) for the 1.1 release.  I've submitted the relevant CRs and if we are bold enough to make the move, we should do so soon to get as much burn-in time as required.\n\nThe changes required were quite small so seems like a reasonable thing to do IMHO.\nI also think that the ability to test the use of Golang plugins is definitely worth it's weight in gold plus there are a number of performance enhancements as well.\n\nFor your convenience, the CRs are:\n\nhttps://gerrit.hyperledger.org/r/12823 (Go 1.9 in base image)\nhttps://gerrit.hyperledger.org/r/12819  (compile fabric with Go 1.9)\nhttps://gerrit.hyperledger.org/r/12833 (upgrade to gRPC v1.5.2)","username":"mastersingh24","ts":"2017-08-28T20:34:30.570Z"}
{"msg":"+1","username":"jyellick","ts":"2017-08-28T20:35:04.028Z"}
{"msg":"Yes please","username":"yacovm","ts":"2017-08-28T20:35:17.945Z"}
{"msg":"Yes please\n> I also think that the ability to test the use of Golang plugins is definitely worth it's weight in gold","username":"yacovm","ts":"2017-08-28T20:35:17.945Z"}
{"msg":"We are looking into 4 weeks timeframe, right?","username":"JonathanLevi","ts":"2017-08-28T20:46:45.940Z"}
{"msg":"Code freeze after this week, then release at the end of September?","username":"jyellick","ts":"2017-08-28T20:47:45.411Z"}
{"msg":"Code freeze after this week, then release at the end of September? (Is my understanding)","username":"jyellick","ts":"2017-08-28T20:47:45.411Z"}
{"msg":"Non-bug code freeze after this week, then release at the end of September? (Is my understanding)","username":"jyellick","ts":"2017-08-28T20:47:45.411Z"}
{"msg":"Non-bug-fix code freeze after this week, then release at the end of September? (Is my understanding)","username":"jyellick","ts":"2017-08-28T20:47:45.411Z"}
{"msg":"Given no one objected, I still favor trying to do quarterly releases.   So if we are going to attempt to do 1.1 at the end of 3Q17 (by Sept 30), we'd have to be done by end of this week with any code and then we'd need to figure out how we are going to carve out a release.\n\nOther option would be to skip 3Q17 and wait until 4Q17 and start trying to get some candidate releases out in say early October.\n\nI'm working on a strategy for using build tags to make any unfinished / experimental features unavailable in the binary by default as well.","username":"mastersingh24","ts":"2017-08-28T21:02:02.157Z"}
{"msg":"Thanks for bringing this up Gari. Here are my 2 cents:","username":"JonathanLevi","ts":"2017-08-28T23:01:32.142Z"}
{"msg":"1. We need to make sure that what is \"done\" by the end of the week, is sufficient, or shall I say, justifies a release.","username":"JonathanLevi","ts":"2017-08-28T23:01:36.011Z"}
{"msg":"That's to say, that if we feel that what's there is not enough or that there are a few big remaining features that are clearly needed, then we may as well delay or skip it. IMHO.","username":"JonathanLevi","ts":"2017-08-28T23:02:42.449Z"}
{"msg":"2. If we skip the 3Q17, then I'd recommend not to really wait until the end of 4Q17 (say, xmas time), but to rather have something out closer to the end of Oct, or mid-November.","username":"JonathanLevi","ts":"2017-08-28T23:03:41.784Z"}
{"msg":"I don't know how people feel about it. Seems like there is a lot to do in terms of service-ability still, more examples, and we are constantly getting more feedback the more people/organizations try it.","username":"JonathanLevi","ts":"2017-08-28T23:04:41.718Z"}
{"msg":"On the other hand, I like(d) the rhythm and momentum we gained in June-July (despite the \"heat\")","username":"JonathanLevi","ts":"2017-08-28T23:05:15.643Z"}
{"msg":"Has joined the channel.","username":"vukolic","ts":"2017-08-29T08:02:25.084Z","type":"uj"}
{"msg":"I think as long as we can get on / stay on a regular release cadence we'll be OK.  I suppose \"quarterly\" does not technically have to mean calendar year quarters  ;)   We could create our own Hyperledger Fabric \"fiscal calendar\"   ;)\n\nAt this point, given we DID NOT do the type of planning we wanted to due to v1.0.0's ship date as well as summer vacations, perhaps we can decide what our calendar will be.  I really do think that 3 months between releases is the right cadence though.\n","username":"mastersingh24","ts":"2017-08-29T10:23:39.343Z"}
{"msg":"I'd also rather see us ship sooner than later.  If we release on a consistent cadence, a particular feature missing a particular release isn't such a big deal, because it will have a shot again in 3 months.","username":"jyellick","ts":"2017-08-29T13:29:03.703Z"}
{"msg":"Has joined the channel.","username":"cotofei","ts":"2017-08-29T13:34:46.532Z","type":"uj"}
{"msg":"Good morning. Yes, that's very true.","username":"JonathanLevi","ts":"2017-08-29T14:35:43.582Z"}
{"msg":"I believe that the more we announce in advance and the more people know what to expect and when - the better.","username":"JonathanLevi","ts":"2017-08-29T14:35:51.012Z"}
{"msg":"For our first minor release (1.1) I think it is critical to nail down our strategy and infrastructure around compatibility, build tags vs feature toggles, automated upgrade test, etc.  In my opinion these areas will not be completely resolved by end of week.  I'd prefer to take the time to do these right, rather than rush to hit an arbitrary date.  I think 3 months is a good cadence, I'd just prefer mid-quarter releases rather than end-of-quarter releases.  It would work well for 1.1 due to my prior statement, and would work well for 1.2 due to holidays.","username":"dave.enyeart","ts":"2017-08-29T17:38:42.460Z"}
{"msg":"For our first minor release (1.1) I think it is critical to nail down our strategy and infrastructure around compatibility, build tags vs feature toggles, automated upgrade test, etc.  In my opinion these areas will not be completely resolved by end of week.  I'd prefer to take the time to do these right, rather than rush to hit an arbitrary date. The other concern is that many of us are doing customer work the next few weeks rather than focusing on 1.1.  I think 3 months is a good cadence, I'd just prefer mid-quarter releases rather than end-of-quarter releases.  It would work well for 1.1 due to my prior statements, and would work well for 1.2 due to holidays.","username":"dave.enyeart","ts":"2017-08-29T17:38:42.460Z"}
{"msg":"So the checkpoint is on Sept 5th, right?","username":"JonathanLevi","ts":"2017-08-29T19:46:25.940Z"}
{"msg":"We need to know by then what's going to be planned & ready for a/the potential release on/by Sep 30th... right?","username":"JonathanLevi","ts":"2017-08-29T19:47:27.045Z"}
{"msg":"to avoid holidays toward the year end (at least in the US), I would propose 2/15, 5/15, 8/15 and 11/15 to be our quarterly release dates;  it would give us time on 1.1 and we can plan on the key bug fixes for 1.0.x\nThoughts?","username":"binhn","ts":"2017-08-30T21:32:47.681Z"}
{"msg":"@binhn: +1","username":"JonathanLevi","ts":"2017-08-30T23:01:01.390Z"}
{"msg":"I know I've already spoken up for a \"sooner than later\" approach.  I think I'm willing to concede on this one.  Let's take a little extra time and get v1.1 right, especially putting controls in for compatibility going forward, automating our release process, etc. so that we can make sure we stay on a nice even 3 month cadence after.","username":"jyellick","ts":"2017-08-30T23:25:38.769Z"}
{"msg":"I know I've already spoken up for a \"sooner than later\" approach, but I think I'm willing to concede on this one.  I'd say let's take a little extra time and get v1.1 right, especially putting controls in for compatibility going forward, automating our release process, etc. so that we can make sure we stay on a nice even 3 month cadence after.","username":"jyellick","ts":"2017-08-30T23:25:38.769Z"}
{"msg":"Personally, I'd rather stick with real end of quarter releases.  I'm good with 11/15 as the target for 1.1 and then I think for 2018 we can do 3/31, 6/30, 9/30 and likely 12/15 (given holidays).\n\nI don't think it makes sense to do a 2/15/18 release and given the holiday season post 11/15/17, 3/31/18 makes the most sense","username":"mastersingh24","ts":"2017-08-31T14:34:04.681Z"}
{"msg":"I don't see us doing much between in the month of Dec","username":"mastersingh24","ts":"2017-08-31T14:34:27.402Z"}
{"msg":"And speaking of 1.0.X releases:\n\nfabric and fabric-ca 1.0.2  - https://gerrit.hyperledger.org/r/#/q/(project:fabric-ca+OR+project:fabric)+branch:release+status:open","username":"mastersingh24","ts":"2017-08-31T14:36:36.658Z"}
{"msg":"Could somebody remind me of the license header policy?  Did we decide not to make a bulk update of all the source files, and rather to simply update them as individual changes are made to files?","username":"dave.enyeart","ts":"2017-09-01T10:16:41.750Z"}
{"msg":"Could somebody remind me of the license header policy?  Did we decide not to ever make a bulk update of all the source files, and rather to simply update them as individual changes are made to files?","username":"dave.enyeart","ts":"2017-09-01T10:16:41.750Z"}
{"msg":"```/*\nCopyright IBM Corp. All Rights Reserved.\nSPDX-License-Identifier: Apache-2.0\n*/```","username":"dave.enyeart","ts":"2017-09-01T10:16:46.110Z"}
{"msg":"I think it was said we can do a lazy-update (upon file update)","username":"yacovm","ts":"2017-09-01T10:18:20.978Z"}
{"msg":"but IMO a bulk update should be also fine, because why not?","username":"yacovm","ts":"2017-09-01T10:18:30.623Z"}
{"msg":"@dave.enyeart  - The \"check\" only checks changed files.  We only have to do the changed files, but it might make more sense to change the headers of all the files in whichever package you happen to be updating","username":"mastersingh24","ts":"2017-09-01T11:06:38.579Z"}
{"msg":"Good morning/afternoon/evening","username":"JonathanLevi","ts":"2017-09-06T13:55:04.178Z"}
{"msg":"Do we need to discuss the status of the 1.1 release (plan/dates)","username":"JonathanLevi","ts":"2017-09-06T13:55:24.808Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=gssHzF4qLyCXvkxeq) ","username":"JonathanLevi","ts":"2017-09-06T13:55:40.062Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=gssHzF4qLyCXvkxeq","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=gssHzF4qLyCXvkxeq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"At some point (2 weeks ago) we talked about Sep 30's at some point, and want to see if we can have everything defined by today... how do things look?","username":"JonathanLevi","ts":"2017-09-06T13:56:36.627Z"}
{"msg":"BTW: It seems like the Golang 1.9 upgrade was a good call @mastersingh24 !","username":"JonathanLevi","ts":"2017-09-06T13:57:03.862Z"}
{"msg":"Following which, we have upgraded all of our backend too ","username":"JonathanLevi","ts":"2017-09-06T13:57:27.209Z"}
{"msg":"Following which, we have upgraded all of our backend too (and tested for days)","username":"JonathanLevi","ts":"2017-09-06T13:57:27.209Z"}
{"msg":"@JonathanLevi I still consider some kind of xBFT based orderer to be baseline minimum-viable product for v1.1","username":"greg.haskins","ts":"2017-09-06T14:03:03.543Z"}
{"msg":"sept 30th seems a bit aggressive for that","username":"greg.haskins","ts":"2017-09-06T14:03:16.898Z"}
{"msg":"BFT for the orderer is not in the cards for v1.1","username":"jyellick","ts":"2017-09-06T14:03:38.727Z"}
{"msg":"This is not something we ruled out early in release planning.","username":"jyellick","ts":"2017-09-06T14:03:53.754Z"}
{"msg":"This is something we ruled out early in release planning.","username":"jyellick","ts":"2017-09-06T14:03:53.754Z"}
{"msg":"i guess in the end, a version is just a version","username":"greg.haskins","ts":"2017-09-06T14:03:56.064Z"}
{"msg":"but the bottom line is: xBFT is critical IMO so the question really is: which release will it be in?","username":"greg.haskins","ts":"2017-09-06T14:04:24.578Z"}
{"msg":"have to step away for a few, but will continue later","username":"greg.haskins","ts":"2017-09-06T14:06:16.780Z"}
{"msg":"btw: I am perfectly willing to donate some resources to gaining velocity on the feature, so I should sync up with whomever has been working in that space","username":"greg.haskins","ts":"2017-09-06T14:07:13.827Z"}
{"msg":"but bbiab","username":"greg.haskins","ts":"2017-09-06T14:07:27.902Z"}
{"msg":"SBFT is certainly something that we'd like to add back, ultimately, it's a question of priority.  To my mind, we have plenty of technical debt built up in the v1.0 release.  My concern is that we are pushing ahead with new features and ignoring this debt, and while we build out those features, we are simply compounding the effort which will be required to address these other problems.  I like to think the orderer team has done a good job addressing much of this debt towards in the v1.1 release, but there is still more work to do, and I'm worried that we're ignoring this debt elsewhere.","username":"jyellick","ts":"2017-09-06T14:15:52.885Z"}
{"msg":"Just to throw this out there, there are a few \"options\" we should evaluate for a BFT-based orderer:\n\n- do it on our own with Fabric - something like sBFT\n- look at using Tendermint (which Burrow uses as well as a few other projects outside of Hyperledger)\n\nIn any case, it's time to come up with a plan and then align development / resource so we can properly plan the rollout of this feature / capability","username":"mastersingh24","ts":"2017-09-06T14:18:09.636Z"}
{"msg":"But we need to harden things for 1.1, make any changes needed based on actual usage, etc","username":"mastersingh24","ts":"2017-09-06T14:18:36.650Z"}
{"msg":"@jyellick @mastersingh24 agree with the above","username":"greg.haskins","ts":"2017-09-06T14:40:56.065Z"}
{"msg":"so, lets keep the dialog going","username":"greg.haskins","ts":"2017-09-06T14:41:10.044Z"}
{"msg":"i think if nothing else, this needs to happen sooner rather than later","username":"greg.haskins","ts":"2017-09-06T14:41:22.673Z"}
{"msg":"I have some internal (to my employer) deployments that are suitable for v1.0 architecture, but lack of xBFT ordering will limit this to internal only","username":"greg.haskins","ts":"2017-09-06T14:42:18.428Z"}
{"msg":"so im really motivated to see this fixed, and can help","username":"greg.haskins","ts":"2017-09-06T14:42:28.604Z"}
{"msg":"What @jyellick noted above. With the resources we have available, we have to clean the existing surface before we add new features, else we'll drown in debt. In my mind the rough planning for the orderer was \"1.1 = make it faster, 1.2 = make administrators happy (metrics, health checkpoints, etc., 1.3 = make it BFT\".","username":"kostas","ts":"2017-09-06T14:52:12.845Z"}
{"msg":"What @jyellick noted above. With the resources we have available, we have to clean the existing surface before we add new features, else we'll drown in debt. In my mind the rough planning for the orderer was \"1.1 = make it faster, 1.2 = make administrators happy (metrics, health checkpoints, etc.), 1.3 = add BFT\".","username":"kostas","ts":"2017-09-06T14:52:12.845Z"}
{"msg":"@greg.haskins: Let's talk when you get some time. Assuming an extra pair of hands, we might be able to kickstart BFT development earlier.","username":"kostas","ts":"2017-09-06T14:54:28.301Z"}
{"msg":"BTW: I agree with the below:\n[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=9m5rvWR9A6Eg8r4Za) Especially given that haven't finalized all the details by yesterday (Sept 5), as the soft deadline/checkpoint Chris and Gari asked us to work with.","username":"JonathanLevi","ts":"2017-09-06T16:57:25.668Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=9m5rvWR9A6Eg8r4Za","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=9m5rvWR9A6Eg8r4Za","remote":true,"fileId":null,"fileName":null}]}
{"msg":"BTW: I agree with the below:\n[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=9m5rvWR9A6Eg8r4Za) ","username":"JonathanLevi","ts":"2017-09-06T16:57:25.668Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=9m5rvWR9A6Eg8r4Za","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=9m5rvWR9A6Eg8r4Za","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Especially given that haven't finalized all the details by yesterday (Sept 5), as the soft \"cut off\" deadline/checkpoint Chris and Gari asked us to work with.","username":"JonathanLevi","ts":"2017-09-06T16:57:53.261Z"}
{"msg":"Especially given that we haven't finalized all the details by yesterday (Sept 5), as the soft \"cut off\" deadline/checkpoint Chris and Gari asked us to work with.","username":"JonathanLevi","ts":"2017-09-06T16:57:53.261Z"}
{"msg":"The question, perhaps, is whether we would still like to have 2 releases/milestones?","username":"JonathanLevi","ts":"2017-09-06T16:59:04.459Z"}
{"msg":"I'm just bouncing thoughts around.","username":"JonathanLevi","ts":"2017-09-06T16:59:18.058Z"}
{"msg":"S/BFT will certainly be a gamechanger, this 2017....","username":"JonathanLevi","ts":"2017-09-06T17:00:08.536Z"}
{"msg":"I look at it like this:\n\n- I still like the idea of quarterly releases\n- I don't see us doing 2 releases (Sept 30 and Dec 31) this year (given being a bit behind in planning as well as holidays in Nov / Dec)\n- So it seems to be that doing a single minor release (e.g. 1.1 ) this year makes sense and given my point on holidays, etc Nov 15 seems like as good a date as any)\n- Then in 2018 we can back on track for quarterly releases  ;)","username":"mastersingh24","ts":"2017-09-06T17:00:33.800Z"}
{"msg":"I like the 'back on track' bit! ;-)","username":"JonathanLevi","ts":"2017-09-06T17:01:59.284Z"}
{"msg":"I like the `back on track` bit! ;-)","username":"JonathanLevi","ts":"2017-09-06T17:01:59.284Z"}
{"msg":"There is ZERO chance in getting S/BFT in this year for production use.  Hopefully we can all agree on what the first BFT implementation will be and figure out how best to proceed.\nI think we do need to start putting some effort into thinking about BFT though","username":"mastersingh24","ts":"2017-09-06T17:02:22.939Z"}
{"msg":"We should really consider the overheard. I also like(d) the Nov 15 that Binhn proposed.","username":"JonathanLevi","ts":"2017-09-06T17:02:37.645Z"}
{"msg":"Indeed","username":"mastersingh24","ts":"2017-09-06T17:04:08.458Z"}
{"msg":"This should also give us some additional time to properly plan 1.2 (so we can get back on the *right* track)  ;)","username":"mastersingh24","ts":"2017-09-06T17:04:58.974Z"}
{"msg":"and stay there ...","username":"muralisr","ts":"2017-09-06T18:08:06.295Z"}
{"msg":"so, who is doing the xBFT work: Primarily @kostas and @jyellick ?","username":"greg.haskins","ts":"2017-09-06T18:20:17.904Z"}
{"msg":"someone else?","username":"greg.haskins","ts":"2017-09-06T18:20:21.306Z"}
{"msg":"should we perhaps form some kind of working-group or something to organize?","username":"greg.haskins","ts":"2017-09-06T18:20:54.184Z"}
{"msg":"If we are aiming for post-2017, early- to mid- 2018 target date, then may be we can actually get a few organizations contributing to the effort.","username":"JonathanLevi","ts":"2017-09-06T18:31:20.195Z"}
{"msg":"that sounds reasonable to me","username":"greg.haskins","ts":"2017-09-06T18:31:44.567Z"}
{"msg":"A task force (as in, a smaller, more focused form of a WG) can probably help and encourage others, I believe...","username":"JonathanLevi","ts":"2017-09-06T18:32:17.198Z"}
{"msg":"A task force (as in, a smaller, more focused form of a WG) can probably help and encourage others, I believe...(to support Greg's comment/suggestion)","username":"JonathanLevi","ts":"2017-09-06T18:32:17.198Z"}
{"msg":"sure, i dont care what we call it","username":"greg.haskins","ts":"2017-09-06T18:32:29.395Z"}
{"msg":"Yes, yes. I know. I am just aware of the process of forming an official WG (from wiki, reports, ...) compared to a few of us [geeks ;-)] who find this interesting... even if at first some may not be able to contribute right away, but at least to just join and be part of the discussion(s).","username":"JonathanLevi","ts":"2017-09-06T18:34:06.431Z"}
{"msg":"you have a good point...i dont think it needs a ton of formal structure","username":"greg.haskins","ts":"2017-09-06T18:34:53.845Z"}
{"msg":"Yup, let's hope so ;-)\n\n@kostas, @jyellick, @mastersingh24: thoughts?","username":"JonathanLevi","ts":"2017-09-06T18:35:18.098Z"}
{"msg":"a thread on the ML, perhaps a wiki subsection on the already existing...done","username":"greg.haskins","ts":"2017-09-06T18:35:18.777Z"}
{"msg":"Collecting some of the awesome docs that have been produced, initial steps, breaking down to milestones, etc...","username":"JonathanLevi","ts":"2017-09-06T18:35:50.476Z"}
{"msg":"Yup, collecting some of the awesome docs that have been produced, initial steps, breaking down to milestones, etc... making more (new) people feel a part of this, or at least know (and assured) that they are welcome...!","username":"JonathanLevi","ts":"2017-09-06T18:35:50.476Z"}
{"msg":"@greg.haskins: A good part of the core SBFT work was done by Simon pre-1.0, and Gabor and Marko Vukolic extended that slightly. To answer your question directly: the plan was for me to work on SBFT once I got some cycles available (in a month or so) and have it ready for 1.3. But that was the case if we didn't have any volunteers in-between, and it sounds like this is not the case anymore.","username":"kostas","ts":"2017-09-06T18:37:28.134Z"}
{"msg":"@greg.haskins: A good part of the core SBFT work was done by Simon pre-1.0, and Gabor and Marko Vukolic extended that slightly. To answer your question directly: the plan was for me to work on SBFT once I got some cycles available (in a bit more than a month or so) and have it ready for 1.3. But that was the case if we didn't have any volunteers in-between, and it sounds like this is not the case anymore.","username":"kostas","ts":"2017-09-06T18:37:28.134Z"}
{"msg":"I am skeptical of task forces and workgroups. A thread on the mailing list to kick things off and an associated JIRA is all we need.","username":"kostas","ts":"2017-09-06T18:39:30.125Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yua48fiCMQ8fWEaJv) @kostas i agree, i was probably overstating it anyway","username":"greg.haskins","ts":"2017-09-06T18:40:02.109Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yua48fiCMQ8fWEaJv","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yua48fiCMQ8fWEaJv","remote":true,"fileId":null,"fileName":null}]}
{"msg":"s/working-group/some way to organize","username":"greg.haskins","ts":"2017-09-06T18:40:30.714Z"}
{"msg":"i am also of the opinion that the critical thing be some kind of byzantine resistant orderer, not that it has to be \"SBFT\" per se","username":"greg.haskins","ts":"2017-09-06T18:41:24.114Z"}
{"msg":"if the team things continuing on that work is the best way to get there, great...if not, thats fine too","username":"greg.haskins","ts":"2017-09-06T18:41:45.025Z"}
{"msg":"if the team thinks continuing on that work is the best way to get there, great...if not, thats fine too","username":"greg.haskins","ts":"2017-09-06T18:41:45.025Z"}
{"msg":"Roger that. (My take is that it'd be a shame not to see the SBFT line of work completed, but I guess we can take that to the mailing list.)","username":"kostas","ts":"2017-09-06T19:06:37.723Z"}
{"msg":"My two cents, I think it would be actually incredibly useful to simply add another CFT orderer, but one that is more closely to a typical BFT orderer first.  Take something like etcd/raft and prove that we can take the existing consensus plugin architecture and add a 'leader type' consensus implementation.  My hope is that this would only be a few weeks worth of work, would prove out the orderer interfaces, and would familiarize those looking to pull SBFT back into the system with the those ordering interfaces.  I think the core of SBFT is pretty solid, it is the integration with the rest of the ordering system where the real outstanding work lives.","username":"jyellick","ts":"2017-09-06T19:29:57.936Z"}
{"msg":"(I concur.)","username":"kostas","ts":"2017-09-06T19:41:34.416Z"}
{"msg":"@mastersingh24 FYI: https://gerrit.hyperledger.org/r/#/c/13217/","username":"greg.haskins","ts":"2017-09-06T23:33:23.039Z"}
{"msg":"please consider for v1.0.x branch","username":"greg.haskins","ts":"2017-09-06T23:33:36.573Z"}
{"msg":"@mastersingh24 do we still need the v0.4.0 baseimage with go v1.9?","username":"greg.haskins","ts":"2017-09-06T23:34:02.394Z"}
{"msg":"i dropped the ball on that one","username":"greg.haskins","ts":"2017-09-06T23:34:05.281Z"}
{"msg":"on a different topic: I was thinking about CRs like this: https://gerrit.hyperledger.org/r/#/c/13079/","username":"greg.haskins","ts":"2017-09-06T23:36:19.550Z"}
{"msg":"one of the things that bothers me is the shear cognitive load that a vendor update brings","username":"greg.haskins","ts":"2017-09-06T23:36:54.330Z"}
{"msg":"I wonder if the tooling exists (e.g. via govendor) or could be created to verify that the sources match the reference to the upstream sources in vendor.json","username":"greg.haskins","ts":"2017-09-06T23:38:27.804Z"}
{"msg":"it wouldnt be perfect, as someone could always just pull from a compromised github repo, I suppose","username":"greg.haskins","ts":"2017-09-06T23:38:51.007Z"}
{"msg":"but it bothers me that I can't really tell if that is really c5b7fccd2 from the prometheus github repo","username":"greg.haskins","ts":"2017-09-06T23:39:35.607Z"}
{"msg":"@mastersingh24 https://gerrit.hyperledger.org/r/#/c/13219/","username":"greg.haskins","ts":"2017-09-06T23:46:00.044Z"}
{"msg":"> I wonder if the tooling exists (e.g. via govendor) or could be created to verify that the sources match the reference to the upstream sources in vendor.json\nTooling as in \"how do we make it a CI job?\" (I presume that you're aware of `govendor sync`. For any orderer-related vendor dependencies that I review, I usually fetch locally, then `govendor sync` and make sure that none of the packages in the changeset show up in my local `git status`.)","username":"kostas","ts":"2017-09-07T01:45:10.428Z"}
{"msg":"@kostas yeah, good...if that were captured in CI, thats probably good enough","username":"greg.haskins","ts":"2017-09-07T11:33:16.616Z"}
{"msg":"i forgot to copy my gerrit private key when i returned my machine;  now gerrit doesn't allow me to add a new public key (i deleted the old one); I keep getting 500. The instruction here seems straight forward https://gerrit.hyperledger.org/r/Documentation/user-upload.html#configure_ssh.  Does anyone know of any other pre-reqs?","username":"binhn","ts":"2017-09-07T17:35:20.740Z"}
{"msg":"@binhn my guess is the problem is on the client side...check (using something like \"ssh -vvv\" that you are presenting the key that you installed on the server","username":"greg.haskins","ts":"2017-09-07T17:44:36.998Z"}
{"msg":"if not, check your ~/.ssh/config","username":"greg.haskins","ts":"2017-09-07T17:44:50.431Z"}
{"msg":"i wasn't there yet; trying to upload my public key to gerrit https://gerrit.hyperledger.org/r/#/settings/ssh-keys and get 500","username":"binhn","ts":"2017-09-07T17:55:52.680Z"}
{"msg":"from the gerrit UI","username":"binhn","ts":"2017-09-07T17:56:01.965Z"}
{"msg":"oh i see","username":"greg.haskins","ts":"2017-09-07T18:00:39.841Z"}
{"msg":"@rjones helped figured this out:  it only takes rsa1 pub key; i was generating rsa2 key","username":"binhn","ts":"2017-09-07T18:36:10.693Z"}
{"msg":"we both learned something :)","username":"rjones","ts":"2017-09-07T18:47:50.185Z"}
{"msg":"talking about bft, i know some folks have been working on integrating bft-smart as a sub project -- @vukolic do you have any status? ","username":"binhn","ts":"2017-09-07T19:35:57.727Z"}
{"msg":"(@vukolic won't be","username":"kostas","ts":"2017-09-07T20:18:15.335Z"}
{"msg":"(@vukolic won't be able to respond in the maintainers-only channel)","username":"kostas","ts":"2017-09-07T20:18:15.335Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-consensus?msg=dQR3vGAM5G2jsaDi6","username":"kostas","ts":"2017-09-07T22:50:42.810Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-consensus?msg=dQR3vGAM5G2jsaDi6","url":"https://chat.hyperledger.org/channel/fabric-consensus?msg=dQR3vGAM5G2jsaDi6","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I'm not well versed in how our CI works but I'm wondering if there are any speed benefits to be gained by switching to: https://godoc.org/rsc.io/gt","username":"kostas","ts":"2017-09-08T01:40:27.731Z"}
{"msg":"FWIW, in my non-scientific testing, running just `go test` instead of `gocov` takes about 1/5th of the time, so it sounds worth investigating","username":"jyellick","ts":"2017-09-08T01:41:44.157Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=DnHwPBeEbsF5aQyaf) @binhn can you please submit a tweak to the docs to make this point? Thanks","username":"cbf","ts":"2017-09-08T16:40:48.115Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=DnHwPBeEbsF5aQyaf","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=DnHwPBeEbsF5aQyaf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@here I've noticed that the CR backlog is growing - we have ~230 outstanding CRs","username":"cbf","ts":"2017-09-08T16:43:11.146Z"}
{"msg":"each of us should be keeping an eye on this and re-reviewing older CRs and bumping them for progress or asking if the CR can or should be abandoned","username":"cbf","ts":"2017-09-08T16:44:06.337Z"}
{"msg":"thanks","username":"cbf","ts":"2017-09-08T16:44:21.530Z"}
{"msg":"`go test` is way faster.  The one issue with `go test` is that you cannot use the `cover` flag with multiple packages.  But I have to imagine there is a way to aggregate the coverage results for multiple `go test` runs\n(https://chat.hyperledger.org/channel/fabric-maintainers?msg=TGfx37rkkSqKsXNEx) @jyellick ","username":"mastersingh24","ts":"2017-09-08T20:21:15.892Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TGfx37rkkSqKsXNEx","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TGfx37rkkSqKsXNEx","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Apparently, this is quite easy to do  ;)","username":"mastersingh24","ts":"2017-09-08T20:26:42.998Z"}
{"msg":"Is there a solution that doesn't involve a shell script?","username":"kostas","ts":"2017-09-08T20:29:07.353Z"}
{"msg":"The discussion above reminds me of a couple JIRA issues I had opened a while back: \n\nhttps://jira.hyperledger.org/browse/FAB-5722\nhttps://jira.hyperledger.org/browse/FAB-5723\n\nThe former would be nice for local development, while the latter seems like it could seriously improve the performance of CI.  Not sure what the effort required to fix these is, but perhaps something we can keep an eye on.","username":"jyellick","ts":"2017-09-10T02:22:54.638Z"}
{"msg":"Hello fellow maintainers - RE moving to Go 1.9 -\n","username":"mastersingh24","ts":"2017-09-11T12:56:48.862Z"}
{"msg":"Would anyone be opposed to sticking with Go 1.7.X for fabric-ca in the 1.1 timeframe?   See https://jira.hyperledger.org/browse/FAB-6003  but there's an issue with cfssl and Go 1.9.  We can workaround this ourselves and/or submit a fix to cfssl and try to pull it back in if it makes it into cfssl in time for 1.1","username":"mastersingh24","ts":"2017-09-11T12:58:25.859Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/13317/   - my stab at the base needed to start using a experimental tag","username":"mastersingh24","ts":"2017-09-11T13:40:29.980Z"}
{"msg":"can someone +2 this one:   https://gerrit.hyperledger.org/r/#/c/13289/ ?","username":"mastersingh24","ts":"2017-09-11T15:31:16.407Z"}
{"msg":"Need it to go Z / P images for Go 1.9","username":"mastersingh24","ts":"2017-09-11T15:31:30.100Z"}
{"msg":"Done","username":"jyellick","ts":"2017-09-11T15:31:49.966Z"}
{"msg":"Done (though will leave the submit click to you)","username":"jyellick","ts":"2017-09-11T15:31:49.966Z"}
{"msg":"Gracias  ;)","username":"mastersingh24","ts":"2017-09-11T15:36:07.485Z"}
{"msg":"@jyellick  - can you do this one as well:  https://gerrit.hyperledger.org/r/#/c/13291/  ?  It's the follow up","username":"mastersingh24","ts":"2017-09-11T15:36:46.221Z"}
{"msg":"Else @greg.haskins will get mad at us  ;)","username":"mastersingh24","ts":"2017-09-11T15:36:59.251Z"}
{"msg":"And done","username":"jyellick","ts":"2017-09-11T15:37:16.075Z"}
{"msg":"Thx","username":"mastersingh24","ts":"2017-09-11T15:37:19.575Z"}
{"msg":"We can disregard this -  https://github.com/cloudflare/cfssl/pull/807   ;)\n(https://chat.hyperledger.org/channel/fabric-maintainers?msg=Ft5z94nSKirMjYX5P)","username":"mastersingh24","ts":"2017-09-12T20:07:09.081Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Ft5z94nSKirMjYX5P","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Ft5z94nSKirMjYX5P","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"boliang","ts":"2017-09-13T08:37:57.738Z","type":"uj"}
{"msg":"@here all, a gentle reminder that the backlog of CRs is our collective responsibility. Each of us should be making a little time to review the backlog and review older CRs to see why they are languishing and review if needed. I've seen too many instances where CRs are being ignored. This is not good for growing a community. Please do what you can to help with the CR backlog when you can.","username":"cbf","ts":"2017-09-13T11:43:13.167Z"}
{"msg":"@here as a reminder to maintainers, please close JIRAs when you merge a CR as appropriate","username":"cbf","ts":"2017-09-13T15:40:15.173Z"}
{"msg":"there's far too many JIRAs that remain open when the CR has been merged","username":"cbf","ts":"2017-09-13T15:40:39.175Z"}
{"msg":"Has joined the channel.","username":"QwertyJack","ts":"2017-09-18T05:47:07.128Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Jacky_Sheng","ts":"2017-09-20T03:21:56.382Z","type":"uj"}
{"msg":"Has joined the channel.","username":"leminhy89","ts":"2017-09-20T10:51:52.847Z","type":"uj"}
{"msg":"Has joined the channel.","username":"johnfilippone","ts":"2017-09-25T11:22:56.373Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JonathanTan","ts":"2017-09-28T07:11:56.349Z","type":"uj"}
{"msg":"FAB-5556 is a proposal to drive updates via the capabilities framework.","username":"kostas","ts":"2017-09-28T10:54:48.259Z"}
{"msg":"It needs 5 votes before we can start merging the associated changesets.","username":"kostas","ts":"2017-09-28T10:54:56.215Z"}
{"msg":"Please have a look and raise objections, if any, in the associated JIRA. (Otherwise vote, so we can move forward.)","username":"kostas","ts":"2017-09-28T10:55:04.990Z"}
{"msg":"@kostas .. voted","username":"muralisr","ts":"2017-09-28T13:51:47.225Z"}
{"msg":"@kostas now 8 on board, ok to proceed","username":"cbf","ts":"2017-09-29T15:59:43.585Z"}
{"msg":"@here I have posted thoughts on Jira enhancements and 1.1 alpha content over on #fabric-release .  Please take a look over there.  We can discuss over there or here, depending on the nature of the comments.","username":"dave.enyeart","ts":"2017-10-04T21:06:40.080Z"}
{"msg":"@cbf @mastersingh24 Do you think we should create a v1.1-alpha version in Jira?  Alternatively we could keep everything at v1.1 and simply have an alpha label for work items targeting alpha.  Thoughts?","username":"dave.enyeart","ts":"2017-10-06T15:02:52.889Z"}
{"msg":"@dave.enyeart  - was pondering this as well.  I think creating the version is a good idea (I just created it in JIRA as well).  But alpha items should have both v1.1 and v1.1-alpha for fix version(s)","username":"mastersingh24","ts":"2017-10-06T15:27:11.709Z"}
{"msg":"@mastersingh24 thanks, i will tag the features intended for alpha as such","username":"dave.enyeart","ts":"2017-10-06T15:30:19.991Z"}
{"msg":"@dave.enyeart  - I also have v1.1-experimental as well  ;)","username":"mastersingh24","ts":"2017-10-06T18:11:57.172Z"}
{"msg":"covering all bases","username":"mastersingh24","ts":"2017-10-06T18:12:01.582Z"}
{"msg":"@mastersingh24 For experimental, how about we just use a label 'experimental'.  That way it could be used across releases, and we wouldn't bloat the versions field.  Keep versions limited to releases that we actually cut.  What do you think?","username":"dave.enyeart","ts":"2017-10-06T18:25:34.753Z"}
{"msg":"@dave.enyeart  - sure - because that is what we should moving forward.  I liked having it as a release because it's easier to query  ;)","username":"mastersingh24","ts":"2017-10-06T19:33:32.703Z"}
{"msg":"@dave.enyeart  @cbf I'm working on a JIRA to suggest a branching strategy (nothing earth-shattering) but one thing that dawned on me is that we can basically avoid our current situation by NOT merging features which are not in the current release plan.   It's fine for people to submit CRs for features / improvements that are not targetted for the release currently under development, but those features should not be merged.  Of course features can be added to the plan provided we get enough votes and the quality of the code.  And in terms of making something experimental, we can make those decisions once we get towards cutting an alpha or beta - meaning we don't declare a feature as experimental up front.  This decision would be made for features that were planned but are not ready and possibly for some outstanding CRs that might be far enough along","username":"mastersingh24","ts":"2017-10-06T20:11:52.313Z"}
{"msg":"My main concern is that it's not *earth-shuttering* ;-)","username":"JonathanLevi","ts":"2017-10-06T20:24:16.905Z"}
{"msg":"hehe - well-played.  Don't worry - it will be very nice @JonathanLevi ","username":"mastersingh24","ts":"2017-10-06T20:26:29.307Z"}
{"msg":"interesting approach... ","username":"cbf","ts":"2017-10-09T13:52:54.804Z"}
{"msg":"I think that the e2e in CI is failing: https://jenkins.hyperledger.org/job/fabric-verify-end-2-end-x86_64/9447/console","username":"yacovm","ts":"2017-10-11T11:30:29.466Z"}
{"msg":"this change set: https://gerrit.hyperledger.org/r/#/c/14415/ doesn't do anything - just adding a blank like","username":"yacovm","ts":"2017-10-11T11:31:06.549Z"}
{"msg":"and e2e fails in CI...","username":"yacovm","ts":"2017-10-11T11:31:11.508Z"}
{"msg":"the problem seems focused in the fabric-CA java SDK client : `at org.hyperledger.fabric_ca.sdk.HFCAClient.register(HFCAClient.java:243)`","username":"yacovm","ts":"2017-10-11T11:32:10.260Z"}
{"msg":"the problem seems focused in the fabric-CA java SDK client : `at org.hyperledger.fabric_ca.sdk.HFCAClient.register(HFCAClient.java:243)`\n```\n{\"name\":\"hf.revoker\",\"value\":\"true\"}]} with status code: 401. Response: {\"success\":false,\"result\":null,\"errors\":[{\"code\":43,\"message\":\"Registrar does not have any values for 'hf.Registrar.Attributes' thus can't register any attributes\"}],\"messages\":[]}\n10:41:10  \n10:41:10 \tat org.hyperledger.fabric_ca.sdk.HFCAClient.register(HFCAClient.java:243)\n10:41:10 \tat org.hyperledger.fabric_ca.sdkintegration.HFCAClientIT.testUserRevoke(HFCAClientIT.java:305)","username":"yacovm","ts":"2017-10-11T11:32:10.260Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-sdk-java?msg=GxHxY975Yem5vpHi2","username":"C0rWin","ts":"2017-10-11T11:34:23.347Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-sdk-java?msg=GxHxY975Yem5vpHi2","url":"https://chat.hyperledger.org/channel/fabric-sdk-java?msg=GxHxY975Yem5vpHi2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"seems that Angelo also facing same problem ","username":"C0rWin","ts":"2017-10-11T11:34:36.798Z"}
{"msg":"adc","username":"yacovm","ts":"2017-10-11T11:35:53.122Z","type":"user-unmuted"}
{"msg":"@adc can you confirm? :)","username":"yacovm","ts":"2017-10-11T11:36:04.188Z"}
{"msg":"I suggest we talk it over in the scrum and if we can't resolve, we skip the java SDK test in the e2e ","username":"yacovm","ts":"2017-10-11T11:36:45.614Z"}
{"msg":"Yes, confirmed ","username":"adc","ts":"2017-10-11T11:44:18.027Z"}
{"msg":"adc","username":"yacovm","ts":"2017-10-11T12:13:45.924Z","type":"user-muted"}
{"msg":"So likely merging this https://gerrit.hyperledger.org/r/#/c/13215/  (for fabric-ca) is the root cause here","username":"mastersingh24","ts":"2017-10-11T12:33:36.702Z"}
{"msg":"FAB-6590","username":"cbf","ts":"2017-10-11T19:45:03.292Z"}
{"msg":"I've added this to review-needed. Design TBD once the Burrow refactor is merged we will start experimenting and develop a more formal proposal and tasks","username":"cbf","ts":"2017-10-11T19:46:07.725Z"}
{"msg":"Has joined the channel.","username":"rajasekharpippalla","ts":"2017-10-12T11:04:11.223Z","type":"uj"}
{"msg":"Is it possible to have a plugin that sets the JIRA issue to DONE once a change set that links to it is merged? ","username":"yacovm","ts":"2017-10-14T13:45:17.515Z"}
{"msg":"My bad, I forgot to hit Done after a couple of merges last night. ","username":"dave.enyeart","ts":"2017-10-14T14:42:28.889Z"}
{"msg":"Some people do multiple change sets under a Jira.  I've been letting it slide.  Should we start enforcing one change set per Jira?","username":"dave.enyeart","ts":"2017-10-14T14:43:23.601Z"}
{"msg":"I actually wasn't referring to you, i'm just lazy and don't want to do ot myself so i prefer we automate it somehow","username":"yacovm","ts":"2017-10-14T14:51:10.051Z"}
{"msg":"+1 to requiring a unique JIRA for every CR","username":"jyellick","ts":"2017-10-14T17:25:26.990Z"}
{"msg":"Easy enough to create subtasks ","username":"jyellick","ts":"2017-10-14T17:25:40.831Z"}
{"msg":"agree, and I have actually asked about doing this but have not had a response","username":"cbf","ts":"2017-10-18T11:55:22.638Z"}
{"msg":"we are also trying to get a JIRA expert to help us configure it better","username":"cbf","ts":"2017-10-18T11:55:47.262Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-6590 could use some votes please... I'd like to create a repo to begin work on this integration, thanks","username":"cbf","ts":"2017-10-18T14:18:41.532Z"}
{"msg":"@cbf You have trained me too well - previously you have suggested that we are chasing too many things and need to focus on closing down 1.1 and other tech debt (that will likely go beyond 1.1 already).  We don't even have votes for most of the things that are 'in plan' for 1.1 based on https://wiki.hyperledger.org/projects/fabric/proposedv1_1.  Therefore I am generally not voting for additional new items, unless you can convince us it is higher priority than current propose plan items.","username":"dave.enyeart","ts":"2017-10-18T14:44:12.701Z"}
{"msg":"@cbf You have trained me too well - previously you have suggested that we are chasing too many things and need to focus on closing down 1.1 and other tech debt (that will likely go beyond 1.1 already).  I agree. We don't even have votes for most of the things that are 'in plan' for 1.1 based on https://wiki.hyperledger.org/projects/fabric/proposedv1_1.  Therefore I am generally not voting for additional new items, unless you can convince us it is higher priority than current propose plan items.","username":"dave.enyeart","ts":"2017-10-18T14:44:12.701Z"}
{"msg":"Wait that isn't for v1.1 is it?","username":"yacovm","ts":"2017-10-18T14:47:53.956Z"}
{"msg":"No, you can start exploratory work without votes though.  Why vote for future things if we don't even have votes for 1.1 things?","username":"dave.enyeart","ts":"2017-10-18T14:48:54.754Z"}
{"msg":"Rather than go voting for future things, I'd suggest all maintainers should first go vote for the items in https://wiki.hyperledger.org/projects/fabric/proposedv1_1 that they agree with.","username":"dave.enyeart","ts":"2017-10-18T15:01:37.484Z"}
{"msg":"@dave.enyeart as for the EVM work, that will begin with my own resources and hopefully others but not before the Burrow work is merged","username":"cbf","ts":"2017-10-18T15:02:37.567Z"}
{"msg":"and as for priority - it has visibility in IBM up to Marie and Bob Lord, and outside there is interest from many using Ethereum but wanting permissioned capability","username":"cbf","ts":"2017-10-18T15:03:36.789Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=GgKYNvZt8DtDbgs8d) @yacovm nope, more likely 1.2","username":"cbf","ts":"2017-10-18T15:04:03.992Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=GgKYNvZt8DtDbgs8d","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=GgKYNvZt8DtDbgs8d","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I think the issue is that we are overloading the Jira voting field.  It is used by everyone to suggest \"this is a worthwhile feature\", and it is used by maintainers to suggest that design is mature enough that merges into master can begin.","username":"dave.enyeart","ts":"2017-10-18T15:05:08.249Z"}
{"msg":"I think the issue is that we are overloading the Jira voting field.  It is used by everyone to suggest \"this is a worthwhile feature\", and it is used by maintainers to suggest that design is mature enough that merges into master can begin (although we haven't been enforcing that consistently).","username":"dave.enyeart","ts":"2017-10-18T15:05:08.249Z"}
{"msg":"I would vote for this one based on the former criteria, but not the latter","username":"dave.enyeart","ts":"2017-10-18T15:05:37.121Z"}
{"msg":"when we plan for 1.2, we will definitely need a better vehicle","username":"cbf","ts":"2017-10-18T15:05:49.588Z"}
{"msg":"voting should be +1/-1 not just +1","username":"cbf","ts":"2017-10-18T15:06:23.281Z"}
{"msg":"note that LF is authorized to hire a JIRA expert/consultant to help us configure better","username":"cbf","ts":"2017-10-18T15:07:00.429Z"}
{"msg":"@here https://wiki.hyperledger.org/groups/tsc/project-updates/fabric-2017-oct","username":"cbf","ts":"2017-10-18T19:47:34.182Z"}
{"msg":"please feel free to edit with any changes as you see fit... I will present our project status at the TSC call this week.","username":"cbf","ts":"2017-10-18T19:48:04.036Z"}
{"msg":"While we can make some changes to JIRA to better meet our workflow / needs, JIRA is not really our problem  ;)","username":"mastersingh24","ts":"2017-10-19T17:06:23.399Z"}
{"msg":"Maybe just once, we can properly scope and plan a release  ;)","username":"mastersingh24","ts":"2017-10-19T17:06:42.451Z"}
{"msg":"We still need to do some major cleanup in JIRA as well","username":"mastersingh24","ts":"2017-10-19T17:07:18.814Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/14737/","username":"cbf","ts":"2017-10-20T15:56:40.854Z"}
{"msg":"propose retiring Tamas, Gabor and Sheehan from maintainers","username":"cbf","ts":"2017-10-20T15:56:56.280Z"}
{"msg":"please vote with +1 until we have more than half voting","username":"cbf","ts":"2017-10-20T15:57:25.697Z"}
{"msg":"@here I need 4 more on 14737 above, please","username":"cbf","ts":"2017-10-20T20:27:26.906Z"}
{"msg":"@cbf hesitate removing maintainers but as it says we can always add back after contribution, I'll go ahead and +1","username":"muralisr","ts":"2017-10-20T20:29:07.319Z"}
{"msg":"per @binhn comments https://gerrit.hyperledger.org/r/14747 Update maintainer policy  ","username":"cbf","ts":"2017-10-20T21:57:43.321Z"}
{"msg":"clarified that a maintainer can be removed for prolonged inactivity and restored after a month of renewed commitment and contribution/reviews","username":"cbf","ts":"2017-10-20T21:58:14.178Z"}
{"msg":"@here I'd like to see majority maintainers approve this change as well since it affects the policy","username":"cbf","ts":"2017-10-20T21:58:59.125Z"}
{"msg":"Very well-worded @binhn and @cbf !","username":"JonathanLevi","ts":"2017-10-20T22:00:00.614Z"}
{"msg":"awesome, thanks !","username":"binhn","ts":"2017-10-20T22:00:35.853Z"}
{"msg":"No more 3 or four 3-month long vacations in a row for me... eh?","username":"JonathanLevi","ts":"2017-10-20T22:01:15.002Z"}
{"msg":"@here I've posted intent for a 1.1 'preview' release over in #fabric-release  ","username":"dave.enyeart","ts":"2017-10-25T11:58:49.084Z"}
{"msg":"Please check it out, and provide any further thoughts over there or here.","username":"dave.enyeart","ts":"2017-10-25T11:59:10.391Z"}
{"msg":"Please reply if there are any concerns with moving forward, as early as next week.","username":"dave.enyeart","ts":"2017-10-25T11:59:43.973Z"}
{"msg":"Please reply asap if there are any concerns with moving forward, as early as next week.","username":"dave.enyeart","ts":"2017-10-25T11:59:43.973Z"}
{"msg":"I've created https://jira.hyperledger.org/browse/FAB-6753 as the work item to actually cut the v1.1 preview release","username":"dave.enyeart","ts":"2017-10-25T14:32:50.220Z"}
{"msg":"@cbf agreed to drive the release cutting levers again.  Certain parts of release cutting remains a mystery to me, I think we should use the preview as an exercise to fully document the steps.","username":"dave.enyeart","ts":"2017-10-25T14:34:05.773Z"}
{"msg":"@cbf agreed to drive the release cutting levers again.  Certain parts of release cutting remains a mystery to me, I think we should use the preview as an exercise to fully document the steps.  Last release I recommended a google doc for the actual step-by-step instructions (some of the instructions have been in jira items in the past, but it is tedious to copy/paste for each release).  I'm open to ideas though.","username":"dave.enyeart","ts":"2017-10-25T14:34:05.773Z"}
{"msg":"Hello fellow maintainers,\n\nRegarding retiring maintainers (https://gerrit.hyperledger.org/r/#/c/14737/) - (how) would you suggest we can help/address Sheehan's comments/points/asks ?\n\nI made 2 suggestions quickly, but maybe there are other options/views ?\n\nThanks, J","username":"JonathanLevi","ts":"2017-10-26T02:17:49.768Z"}
{"msg":"@sheehan @JonathanLevi point well taken... the policy change was actually driven by the thought to clean up the maintainers because there had been prolonged inactivity... I am happy to learn that you are interested in resuming contributions... as for the idea of keeping a list of contributors and not just sending them down the memory hole","username":"cbf","ts":"2017-10-27T20:01:13.797Z"}
{"msg":"I am supportive of this","username":"cbf","ts":"2017-10-27T20:02:13.833Z"}
{"msg":"we could have two sections of the maintainers file... current and retired","username":"cbf","ts":"2017-10-27T20:02:35.492Z"}
{"msg":"given that you have intent of resuming, I'm more than willing to leave you on for now","username":"cbf","ts":"2017-10-27T20:03:35.714Z"}
{"msg":"I've pushed a new CR https://gerrit.hyperledger.org/r/#/c/14737","username":"cbf","ts":"2017-10-27T20:13:31.518Z"}
{"msg":"Thanks, I like the format. Will help to show that contribution has come from multiple sources. ","username":"sheehan","ts":"2017-10-27T22:01:03.080Z"}
{"msg":"@sheehan We have missed you and would love to keep you in the maintainer list!  If you contribute again (e.g. review some CRs for starters) I think there would be widespread support for cbf's latest CR.","username":"dave.enyeart","ts":"2017-10-28T14:38:30.352Z"}
{"msg":"Thanks Dave. I plan to resume more regular contributions soon, but over the next few weeks I'll find some CRs to look over.","username":"sheehan","ts":"2017-10-30T03:05:16.319Z"}
{"msg":"@here I think we have all code needed in master for `1.1.0-preview`.  Just some final docs and fabric-sample to come in later today.  Therefore I think we can start the `1.1.0-preview` release testing activities.  Here's the schedule I propose:","username":"dave.enyeart","ts":"2017-10-31T17:13:50.487Z"}
{"msg":"tuesday pm - code freeze in master, trigger build and run test suites against latest HEAD on master\nwednesday am - confirm test results.  if good, cut 1.1.0-preview release and push images/binaries\nwednesday pm - pull down images/binaries and verify","username":"dave.enyeart","ts":"2017-10-31T17:13:54.552Z"}
{"msg":"I've confirmed with @scottz and @rameshthoomu ","username":"dave.enyeart","ts":"2017-10-31T17:14:28.246Z"}
{"msg":"Has joined the channel.","username":"scottz","ts":"2017-10-31T17:14:28.328Z","type":"uj"}
{"msg":"Any concerns or final merges before code freeze is announced?","username":"dave.enyeart","ts":"2017-10-31T17:14:44.662Z"}
{"msg":"Where is the list of the features that are a *must* for 1.1 ?","username":"JonathanLevi","ts":"2017-10-31T17:47:53.482Z"}
{"msg":"There are many pending CRs that we should merge for the 1.1-preview (like Gari's mutual TLS)... but let's prioritize what's a real \"must\"","username":"JonathanLevi","ts":"2017-10-31T17:49:41.391Z"}
{"msg":"The 1.1 features are here: https://wiki.hyperledger.org/projects/fabric/proposedv1_1","username":"dave.enyeart","ts":"2017-10-31T17:50:16.553Z"}
{"msg":"The 1.1 features are here: https://wiki.hyperledger.org/projects/fabric/proposedv1_1 and in the dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104","username":"dave.enyeart","ts":"2017-10-31T17:50:16.553Z"}
{"msg":"Tuesday pm == today?","username":"JonathanLevi","ts":"2017-10-31T17:50:20.655Z"}
{"msg":"The first 6 bullets are done and will be highlighted for 1.1.0-preview","username":"dave.enyeart","ts":"2017-10-31T17:50:41.714Z"}
{"msg":"they are also the 6 blocking features in the 1.1.0-preview work item: https://jira.hyperledger.org/browse/FAB-6753","username":"dave.enyeart","ts":"2017-10-31T17:51:19.624Z"}
{"msg":"today yes... we've been working the last couple weeks to verify the content for these 6","username":"dave.enyeart","ts":"2017-10-31T17:52:30.677Z"}
{"msg":"","username":"JonathanLevi","ts":"2017-10-31T17:53:07.197Z","attachments":[{"type":"file","title":"This is what JIRA shows","title_link":"/file-upload/KoEdMnYATeyChBhfx/This is what JIRA shows","image_url":"/file-upload/KoEdMnYATeyChBhfx/This is what JIRA shows","image_type":"image/png","image_size":274639,"url":"/file-upload/KoEdMnYATeyChBhfx/This is what JIRA shows","remote":false,"fileId":"KoEdMnYATeyChBhfx","fileName":"This is what JIRA shows"}]}
{"msg":"`preview` means not yet complete, but some features we'd like to highlight and get feedback on are ready enough","username":"dave.enyeart","ts":"2017-10-31T17:53:50.557Z"}
{"msg":"`preview` means not yet feature complete, but some features we'd like to highlight and get feedback on are ready enough","username":"dave.enyeart","ts":"2017-10-31T17:53:50.557Z"}
{"msg":"15 In progress, 47 Todo, 11 In Review","username":"JonathanLevi","ts":"2017-10-31T17:54:02.254Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=QAsz8XaSTHJ3X2kzd) OK, that's what I asked","username":"JonathanLevi","ts":"2017-10-31T17:54:48.276Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=QAsz8XaSTHJ3X2kzd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=QAsz8XaSTHJ3X2kzd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"this is what we've been talking about in #fabric-scrum and #fabric-release the last few weeks","username":"dave.enyeart","ts":"2017-10-31T17:54:51.280Z"}
{"msg":"Do we have a list of what we think is *ready enough* for the preview?","username":"JonathanLevi","ts":"2017-10-31T17:55:03.214Z"}
{"msg":"it is the 6 features listed as blocking in the jira work item: https://jira.hyperledger.org/browse/FAB-6753","username":"dave.enyeart","ts":"2017-10-31T17:55:36.573Z"}
{"msg":"which equals the first 6 bullets here: https://wiki.hyperledger.org/projects/fabric/proposedv1_1","username":"dave.enyeart","ts":"2017-10-31T17:55:57.229Z"}
{"msg":"OK. We should try to have this stuff in a more dynamic form in JIRA... I can try to work on it.","username":"JonathanLevi","ts":"2017-10-31T17:56:48.250Z"}
{"msg":"Something like this: https://jira.hyperledger.org/browse/FAB-6821?jql=project%20%3D%20FAB%20AND%20fixVersion%20%3D%20v1.1.0-preview","username":"JonathanLevi","ts":"2017-10-31T17:56:56.782Z"}
{"msg":"we can also query jira for fix version v1.1.0-preview. these 6 features are tagged as such.","username":"dave.enyeart","ts":"2017-10-31T18:00:32.260Z"}
{"msg":"That's the URL I put above","username":"JonathanLevi","ts":"2017-10-31T18:00:46.649Z"}
{"msg":"It was a query on the Fix Version","username":"JonathanLevi","ts":"2017-10-31T18:00:59.302Z"}
{"msg":"that link takes me to one sub-task only","username":"dave.enyeart","ts":"2017-10-31T18:01:28.805Z"}
{"msg":"That's the problem","username":"JonathanLevi","ts":"2017-10-31T18:02:15.623Z"}
{"msg":"Anyway... let's confirm that this is a *preview* and not an *alpha*","username":"JonathanLevi","ts":"2017-10-31T18:02:34.485Z"}
{"msg":"I have no objections - as long as we don't presume that the API is locked.","username":"JonathanLevi","ts":"2017-10-31T18:02:54.343Z"}
{"msg":"I take it that this is mainly for getting the testings cycle kicking in, the Composer in synch with the HEAD of Fabric, etc.","username":"JonathanLevi","ts":"2017-10-31T18:03:23.792Z"}
{"msg":"I think the HEAD will need some more work before we can \"conclude\" the 1.1 release.","username":"JonathanLevi","ts":"2017-10-31T18:03:46.398Z"}
{"msg":"indeed, this is a `preview` without features/APIs locked, rather than the fully baked `alpha`, as defined here: https://wiki.hyperledger.org/community/release_taxonomy","username":"dave.enyeart","ts":"2017-10-31T18:05:24.648Z"}
{"msg":"Super. Thank you @dave.enyeart - no objections here.","username":"JonathanLevi","ts":"2017-10-31T18:05:41.415Z"}
{"msg":"I'd still like to merge a few more CRs when the build is complete.","username":"JonathanLevi","ts":"2017-10-31T18:06:01.136Z"}
{"msg":"Timezone wise, can we do 5pm ET ?","username":"JonathanLevi","ts":"2017-10-31T18:06:18.262Z"}
{"msg":"essentially, there were some 'long pole' features holding up 1.1, but we wanted to get something out there for people to try out the important features that are ready enough","username":"dave.enyeart","ts":"2017-10-31T18:06:36.454Z"}
{"msg":"you mean, you want to merge a few more things before preview.  i'm fine with waiting until 5pm if so.","username":"dave.enyeart","ts":"2017-10-31T18:07:21.737Z"}
{"msg":"Yes, please. Let's wait until 5pm please.","username":"JonathanLevi","ts":"2017-10-31T18:09:00.215Z"}
{"msg":"sure thing.  Code freeze starts at 5pm ET","username":"dave.enyeart","ts":"2017-10-31T18:09:13.899Z"}
{"msg":"I didn't realize this is scheduled for today. Thanks.","username":"JonathanLevi","ts":"2017-10-31T18:09:20.077Z"}
{"msg":"At that time the build and nightly tests will be kicked off.","username":"dave.enyeart","ts":"2017-10-31T18:09:30.533Z"}
{"msg":"we don't expect the freeze to last longer than 24 hours, that's why we weren't making a lot of noise about it","username":"dave.enyeart","ts":"2017-10-31T18:10:09.037Z"}
{"msg":"Understood. Fair enough. Let me try to squeeze in some stuff. May finish sooner.","username":"JonathanLevi","ts":"2017-10-31T18:16:27.666Z"}
{"msg":"Guys, mind taking a look at this?","username":"JonathanLevi","ts":"2017-10-31T18:31:46.517Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/14949/","username":"JonathanLevi","ts":"2017-10-31T18:31:46.956Z"}
{"msg":"I mind but I'll do it","username":"mastersingh24","ts":"2017-10-31T19:39:54.088Z"}
{"msg":"@dave.enyeart Looks like master is broken","username":"jyellick","ts":"2017-10-31T21:01:35.015Z"}
{"msg":"@dave.enyeart Looks like master is broken -- I believe https://gerrit.hyperledger.org/r/#/c/15035 will fix it","username":"jyellick","ts":"2017-10-31T21:01:35.015Z"}
{"msg":"I believe https://gerrit.hyperledger.org/r/#/c/15035/ will fix it","username":"jyellick","ts":"2017-10-31T21:01:38.629Z"}
{"msg":"Yup, let's hold off the code freeze... unless it's for getting the master building.","username":"JonathanLevi","ts":"2017-10-31T21:03:21.895Z"}
{"msg":"We have merged way too much/too fast over the last few hours... but these hard-coded versioning of `MSPv1_1` is really key.","username":"JonathanLevi","ts":"2017-10-31T21:04:07.826Z"}
{"msg":"p.s. Other than Jason's fix, I'm done with the \"merging-spree\"","username":"JonathanLevi","ts":"2017-10-31T21:05:00.608Z"}
{"msg":"agreed, let's see if jyellick's fix works","username":"dave.enyeart","ts":"2017-10-31T21:08:16.874Z"}
{"msg":"agreed, let's see if @jyellick  's fix works","username":"dave.enyeart","ts":"2017-10-31T21:08:16.874Z"}
{"msg":"Have just merged it. I think we are good to go with the freeze @dave.enyeart ","username":"JonathanLevi","ts":"2017-10-31T23:46:06.925Z"}
{"msg":"Has joined the channel.","username":"realhuyi","ts":"2017-11-01T04:38:34.251Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nhrishi","ts":"2017-11-01T12:45:21.685Z","type":"uj"}
{"msg":"@here Just to confirm that we are in merge freeze today while @cbf and I cut release.","username":"dave.enyeart","ts":"2017-11-01T13:45:40.142Z"}
{"msg":"@here Just to confirm that we are in merge freeze today while @cbf and I cut 1.1.0-preview release.","username":"dave.enyeart","ts":"2017-11-01T13:45:40.142Z"}
{"msg":"what about 1.0.4?","username":"cbf","ts":"2017-11-01T13:46:21.147Z"}
{"msg":"the one cross-over is the release notes","username":"cbf","ts":"2017-11-01T13:46:35.856Z"}
{"msg":"actually, I can just add the notes, nvm","username":"cbf","ts":"2017-11-01T13:48:51.578Z"}
{"msg":"Has left the channel.","username":"aso","ts":"2017-11-01T17:18:40.954Z","type":"ul"}
{"msg":"--- Hyperledger Fabric v1.1.0-preview has been announced ---","username":"dave.enyeart","ts":"2017-11-02T01:05:17.473Z"}
{"msg":"@here  Hyperledger Fabric v1.1.0-preview has been announced","username":"dave.enyeart","ts":"2017-11-02T01:05:17.473Z"}
{"msg":"https://lists.hyperledger.org/pipermail/hyperledger-fabric/2017-November/002036.html","username":"dave.enyeart","ts":"2017-11-02T01:06:01.787Z"}
{"msg":"MERGE FREEZE OVER","username":"dave.enyeart","ts":"2017-11-02T01:06:08.152Z"}
{"msg":"Resume awesomeness","username":"dave.enyeart","ts":"2017-11-02T01:06:28.342Z"}
{"msg":"Has joined the channel.","username":"MoulaliMvg","ts":"2017-11-02T04:42:37.726Z","type":"uj"}
{"msg":"With the discussions around the non-chaincode interfaces that exist for the peer, it was brought up that the new channel event service and the deliver service are quite similar.  After some discussions with Will, it seems clear that the new channel event service could be rerworked on top of the Deliver API, with some significant additional benefits beyond the code reuse, such as the ability for a client to reconnect at a point in time to the event service, to not worry about 'missing' events.  Will wrote it up here and added the review-needed tag. \n https://jira.hyperledger.org/browse/FAB-6911 would appreciate it if other maintainers could take a look.","username":"jyellick","ts":"2017-11-07T19:23:46.785Z"}
{"msg":"Has joined the channel.","username":"wlahti","ts":"2017-11-07T21:51:10.069Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Umar12","ts":"2017-11-08T08:36:45.402Z","type":"uj"}
{"msg":"@here Since the policy has been clarified at http://hyperledger-fabric.readthedocs.io/en/master/CONTRIBUTING.html#becoming-a-maintainer, and since Sheehan has resumed contribution, I think we can again review and vote for retiring the dormant maintainers: https://gerrit.hyperledger.org/r/#/c/14737/","username":"dave.enyeart","ts":"2017-11-08T16:53:13.535Z"}
{"msg":"Hi guys, operation \"static text file update\" is complete.","username":"JonathanLevi","ts":"2017-11-09T14:05:51.608Z"}
{"msg":"I have just merged the latest change (with a majority of 11/15 > 2/3, which is much more than a simple majority)","username":"JonathanLevi","ts":"2017-11-09T14:06:18.561Z"}
{"msg":"I think we all need to be a bit more pragmatic these days. I don't mind hoping on a call here and there if needed... but, for instance, in Sheehan's case - we can all simply re-evaluate and welcome him back if we/you believe in his work/ability/contribution.","username":"JonathanLevi","ts":"2017-11-09T14:07:47.053Z"}
{"msg":"I can tell you that I do (believe in Sheehan's work/ability/contribution).\n\nBut we should not really spend days/nights/weeks discussing such matters... trying walk around the matter without insulting any one.","username":"JonathanLevi","ts":"2017-11-09T14:09:10.624Z"}
{"msg":"\nI can tell you that I do (believe in Sheehan's work/ability/contribution).\n\nBut we should not really spend days/nights/weeks discussing such matters... trying to walk around the matter without potentially insulting any one.","username":"JonathanLevi","ts":"2017-11-09T14:10:00.598Z"}
{"msg":"We don't have to agree on everything, all the time.","username":"JonathanLevi","ts":"2017-11-09T14:10:21.053Z"}
{"msg":"That's OK.","username":"JonathanLevi","ts":"2017-11-09T14:10:24.857Z"}
{"msg":"Has joined the channel.","username":"SharedMocha","ts":"2017-11-10T20:39:50.535Z","type":"uj"}
{"msg":"need a couple more votes on this please https://jira.hyperledger.org/browse/FAB-6590","username":"cbf","ts":"2017-11-15T18:25:31.911Z"}
{"msg":"Heads up that moving Idemix to v1.1 has been added to the `review-needed` basket: https://jira.hyperledger.org/browse/FAB-7000","username":"kostas","ts":"2017-11-16T16:10:48.637Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-6590 needs one more vote please","username":"cbf","ts":"2017-11-16T20:33:21.942Z"}
{"msg":"I've added review-needed to the rest of the Epics/Features that are tagged as 1.1-release-planning.","username":"dave.enyeart","ts":"2017-11-16T21:29:14.871Z"}
{"msg":"Full list can be seen here: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104#Filter-Results/10517","username":"dave.enyeart","ts":"2017-11-16T21:31:12.676Z"}
{"msg":"@here a thought - there are an increasing number of questions coming in via many different channels, people wanting to learn more about Fabric and the work we're doing here","username":"cbf","ts":"2017-11-17T22:30:12.406Z"}
{"msg":"an idea was floated that maybe we could have an \"Everything you ever wanted to know about Fabric but were afraid to ask\" Google Hangout that we could then post on Youtube for posterity","username":"cbf","ts":"2017-11-17T22:31:48.928Z"}
{"msg":"we'd announce on the mailing list and chat etc, maybe even a blog post","username":"cbf","ts":"2017-11-17T22:32:05.408Z"}
{"msg":"invite the world to come \"meet the maintainers\" and ask away","username":"cbf","ts":"2017-11-17T22:32:30.491Z"}
{"msg":"thoughts?","username":"cbf","ts":"2017-11-17T22:32:32.760Z"}
{"msg":"crazy idea?","username":"cbf","ts":"2017-11-17T22:32:37.290Z"}
{"msg":"How about regular office hours with the same format, following that event? it could be staffed by maintainers in advantageous time zones so people can get information at a good time.","username":"rjones","ts":"2017-11-17T22:34:19.728Z"}
{"msg":"also not a bad idea","username":"cbf","ts":"2017-11-17T22:35:04.642Z"}
{"msg":"@cbf I think that a better idea should be not a hangout but rather something that can be efficiently consumed later on like a reddit Ask-Me-Anything thread. \nWhile a video conference might be a good idea to those who attend it, I think its knowledge would not ripple effectively to lots of people","username":"yacovm","ts":"2017-11-18T08:33:36.011Z"}
{"msg":"@rjones I think that maintainers already do that during their work, but though rocket.chat indexes stuff, people don't use the search.\nI wish we could have some AI with NLP capabilities that processes rocket chat and then links to answers from maintainers if a question that has already been answered is asked.","username":"yacovm","ts":"2017-11-18T08:37:05.272Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yYZxWn5JytoZHk2xh) @yacovm we can open such thread on quora","username":"C0rWin","ts":"2017-11-18T11:08:25.700Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yYZxWn5JytoZHk2xh","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yYZxWn5JytoZHk2xh","remote":true,"fileId":null,"fileName":null}]}
{"msg":"sounds good","username":"yacovm","ts":"2017-11-18T11:08:42.556Z"}
{"msg":"I agree with @yacovm that live/recorded sessions will be of limited long term value.  The questions will be hit and miss, and the answers won't easily be found later.  Fabric readthedocs should be improved to have most of the answers rather than having information scattered around.  For the most common questions, I think a FAQ page in Fabric readthedocs would be valuable, with pointers back to readthedocs content to the degree possible. We can look through rocket.chat, stackoverflow, and mailing list for common questions to add to docs and FAQ.  The investment in docs has been insufficient to date.  I think we'll need an overall editor to drive this effort, that can coordinate pulling together the common questions and answers from various maintainers and other community members.","username":"dave.enyeart","ts":"2017-11-19T15:31:44.016Z"}
{"msg":"@greg.haskins @mastersingh24 https://jira.hyperledger.org/browse/FAB-7045 thoughts?","username":"cbf","ts":"2017-11-20T17:05:47.773Z"}
{"msg":"I was thinking perhaps fabric-thirdparty repo or something like that","username":"greg.haskins","ts":"2017-11-20T17:06:40.915Z"}
{"msg":"but in the end, the main thing is getting it out of fabric.git fastpath","username":"greg.haskins","ts":"2017-11-20T17:06:53.010Z"}
{"msg":"Couldn't we add them to the fabric-baseimage repo and/or rename the fabric-baseimage repo?\nIt would make sense to build new images when we update baseimage / baseos in any case","username":"mastersingh24","ts":"2017-11-20T17:51:25.476Z"}
{"msg":"But I'm fine with a new repo as well","username":"mastersingh24","ts":"2017-11-20T17:51:46.851Z"}
{"msg":"For my edification, what is a \"fastpath\"?","username":"kostas","ts":"2017-11-20T17:52:32.676Z"}
{"msg":"@kostas general term for anything where performance may matter","username":"greg.haskins","ts":"2017-11-20T17:57:34.993Z"}
{"msg":"in this case, build/ci performance","username":"greg.haskins","ts":"2017-11-20T17:57:45.336Z"}
{"msg":"Got it.","username":"kostas","ts":"2017-11-20T17:57:52.806Z"}
{"msg":"@mastersingh24 yeah, i can see the argument both ways","username":"greg.haskins","ts":"2017-11-20T17:58:48.478Z"}
{"msg":"I go with someone pick smething  ;)","username":"mastersingh24","ts":"2017-11-20T17:59:09.294Z"}
{"msg":"I go with someone pick something  ;)","username":"mastersingh24","ts":"2017-11-20T17:59:09.294Z"}
{"msg":"generally speaking, it would be \"nice\" if each target had its own release stream..but since kafka et. al. deps on baseimage, I can also see the arguement that they all get spun together","username":"greg.haskins","ts":"2017-11-20T17:59:46.172Z"}
{"msg":"I nominate @greg.haskins to decide  ;)","username":"mastersingh24","ts":"2017-11-20T17:59:46.188Z"}
{"msg":"im fine with baseimage.git","username":"greg.haskins","ts":"2017-11-20T18:00:19.076Z"}
{"msg":"dumb q likely @greg.haskins @mastersingh24 ... so version changes in these components can be managed easily with this bundling ?","username":"muralisr","ts":"2017-11-20T18:35:21.941Z"}
{"msg":"@muralisr  - not sure what you mean?  Version changes for the 3rd party component (e.g. Kafka, ZK, CouchDB) or versioning for the images themselves?","username":"mastersingh24","ts":"2017-11-20T18:36:40.872Z"}
{"msg":"the 3rd party components ","username":"muralisr","ts":"2017-11-20T18:37:01.056Z"}
{"msg":"basically if I',m building them separately sounded we \"leave it to the user\" but now we have to manage it in the baseimage build ?","username":"muralisr","ts":"2017-11-20T18:37:46.388Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=NawGhfJNXekLEWRa2) @muralisr I might have missed a nuance of your question before","username":"muralisr","ts":"2017-11-20T18:37:46.388Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=NawGhfJNXekLEWRa2","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=NawGhfJNXekLEWRa2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"We don't update the version of the 3rd party component very often so now we'll only push new versions of the images if we decide to change the version of the 3rd party or make some change to the build","username":"mastersingh24","ts":"2017-11-20T18:37:52.610Z"}
{"msg":"Ok....this might actually make it easier to manage version dependencies as it brings it under build ...? ","username":"muralisr","ts":"2017-11-20T18:41:31.753Z"}
{"msg":"ok, I","username":"cbf","ts":"2017-11-20T19:37:25.550Z"}
{"msg":"will submit a CR to baseimage to add them","username":"cbf","ts":"2017-11-20T19:37:37.915Z"}
{"msg":"my opinion is this makes it easier on the user, not harder","username":"greg.haskins","ts":"2017-11-20T19:56:08.989Z"}
{"msg":"one less thing to be built locally","username":"greg.haskins","ts":"2017-11-20T19:56:18.654Z"}
{"msg":"@muralisr The way I would advise this to be handled is basically we take the upstream version coupled with our own and push that to dockerhub","username":"greg.haskins","ts":"2017-11-21T02:35:51.613Z"}
{"msg":"e.g. $upstream-$ours","username":"greg.haskins","ts":"2017-11-21T02:36:28.364Z"}
{"msg":"for zookeeper v3.4.11, it would be something like hyperledger/fabric-zookeeper:v3.4.11-1","username":"greg.haskins","ts":"2017-11-21T02:36:56.972Z"}
{"msg":"-2 , -3, etc","username":"greg.haskins","ts":"2017-11-21T02:37:01.967Z"}
{"msg":"im ignoring $arch for now","username":"greg.haskins","ts":"2017-11-21T02:37:17.086Z"}
{"msg":"Folks - please check out this JIRA -  https://jira.hyperledger.org/browse/FAB-6974 \nI think this is something we should put in v1.1 as I believe it will help a ton with one of our biggest issues which is getting chaincode containers to communicate with the peer.","username":"mastersingh24","ts":"2017-11-21T08:40:19.166Z"}
{"msg":"@mastersingh24 right, I think its a good thing to do too. Just need to dig into the details and comment","username":"muralisr","ts":"2017-11-21T13:19:04.104Z"}
{"msg":"I added review needed so please vote if you agree it should be included","username":"cbf","ts":"2017-11-21T15:02:39.090Z"}
{"msg":"can I request a vote on this https://gerrit.hyperledger.org/r/#/c/15647 that proposes changing the maintainers list for fabric-sdk-node?","username":"jimthematrix","ts":"2017-11-22T03:33:51.343Z"}
{"msg":"@jimthematrix  - Of course you can request the vote.  Whether or not anyone votes is a different question  ;)","username":"mastersingh24","ts":"2017-11-22T11:45:00.977Z"}
{"msg":"@mastersingh24 :joy: ","username":"jimthematrix","ts":"2017-11-22T13:41:42.021Z"}
{"msg":"@JonathanLevi @yacovm just addressed both your feedbacks (thanks for chiming in!)","username":"jimthematrix","ts":"2017-11-22T13:41:43.582Z"}
{"msg":"thanks Jonathan for your interest, I have added you to the list. If other maintainers (eg. Keith) have such interest and believe they will be able to dedicate time for this repository, please also let me know","username":"jimthematrix","ts":"2017-11-22T13:44:19.574Z"}
{"msg":"I suggest we treat this as we do the main fabric maintainers list and have 50+% of maintainers agree to this change","username":"cbf","ts":"2017-11-22T14:05:34.367Z"}
{"msg":"I added my +1","username":"cbf","ts":"2017-11-22T14:05:42.025Z"}
{"msg":"@jimthematrix I discussed with Keith and he confirmed his interest in being more active as a node.js sdk maintainer.","username":"dave.enyeart","ts":"2017-11-22T15:45:39.262Z"}
{"msg":"@dave.enyeart done (and thanks for the suggestion)","username":"jimthematrix","ts":"2017-11-22T15:50:18.154Z"}
{"msg":"every can you please vote again for the latest patch: https://gerrit.hyperledger.org/r/#/c/15647/","username":"jimthematrix","ts":"2017-11-22T15:50:32.820Z"}
{"msg":"everyone can you please vote again for the latest patch: https://gerrit.hyperledger.org/r/#/c/15647/","username":"jimthematrix","ts":"2017-11-22T15:50:32.820Z"}
{"msg":"Has joined the channel.","username":"jackeyliliang","ts":"2017-11-24T02:59:34.226Z","type":"uj"}
{"msg":"Has joined the channel.","username":"baoyangc","ts":"2017-11-26T16:40:57.587Z","type":"uj"}
{"msg":"\n@here, I might be wrong here, but I don't think we have a documented voting requirement on changes that impact the external usage of Fabric (eg API, programming model, deployment model). I’d like to bring it up here to be discussed and agreed on so that we can document. \n\nI propose that we follow the distributed consensus by having more than 2/3 of maintainers voted for if there’re some voted against; otherwise, more than 1/3 is sufficient. I think the current Jira voting used for release risk mitigation is not strong enough for this purpose.  \n\nI appreciate any thoughts.","username":"binhn","ts":"2017-11-27T23:39:55.625Z"}
{"msg":"2/3 is used for BFT. We don't have byzantine maintainers, do we? :thinking: \nI think that more than 50% that voted *for* is enough regardless of how many abstained or voted against. Otherwise, since we have some maintainers that are inactive - this would impact liveness. ","username":"yacovm","ts":"2017-11-27T23:47:42.842Z"}
{"msg":"2/3 is used for BFT. We don't have byzantine maintainers, do we? :thinking: \nI think that more than 50% that voted *for* is enough regardless of how many abstained or voted against. Otherwise, since we have some maintainers that are inactive - this would impact liveness as it will be hard to achieve 2/3 that voted *for* something","username":"yacovm","ts":"2017-11-27T23:47:42.842Z"}
{"msg":"( i guess we can vote on how much is needed to vote)","username":"yacovm","ts":"2017-11-27T23:49:34.940Z"}
{"msg":"We can certainly email and request maintainers to vote with a deadline -- similar to TCS ","username":"binhn","ts":"2017-11-27T23:52:28.378Z"}
{"msg":"and if they time out? what do we do?","username":"yacovm","ts":"2017-11-27T23:52:38.211Z"}
{"msg":"we would eliminate those who didn't vote (dynamic quorum :-)","username":"binhn","ts":"2017-11-27T23:53:42.654Z"}
{"msg":"eliminate?","username":"yacovm","ts":"2017-11-27T23:54:03.341Z"}
{"msg":"Anyway, my take is that 2/3 is not feasible with the current list. ","username":"yacovm","ts":"2017-11-27T23:55:00.422Z"}
{"msg":"currently we have 15 maintainers, and i think everyone is quite active ","username":"binhn","ts":"2017-11-27T23:55:52.981Z"}
{"msg":"well, I think we need to start to define the notion of changes which impacts external API","username":"C0rWin","ts":"2017-11-27T23:56:35.043Z"}
{"msg":"doesn't this counts fixes which take care of critical security issues?","username":"C0rWin","ts":"2017-11-27T23:57:08.218Z"}
{"msg":"oh, right - we don't have 18 anymore","username":"yacovm","ts":"2017-11-27T23:57:11.911Z"}
{"msg":"external API, external to whom? end users? the SDK developers? who?","username":"C0rWin","ts":"2017-11-27T23:57:41.121Z"}
{"msg":"as i mentioned on my write up: 3 things in my mind 1)api, 2) programming model 3) deployment model","username":"binhn","ts":"2017-11-27T23:58:41.623Z"}
{"msg":"there might be more that we need to be careful about","username":"binhn","ts":"2017-11-27T23:58:56.358Z"}
{"msg":"we have peer API used by SDK, we have SDK API and I think we have to distinguish between those two","username":"C0rWin","ts":"2017-11-27T23:59:20.682Z"}
{"msg":"right ^ ","username":"yacovm","ts":"2017-11-27T23:59:42.013Z"}
{"msg":"also what about critical issues which we have to take care?","username":"C0rWin","ts":"2017-11-27T23:59:43.762Z"}
{"msg":"I think that the API between the peer and the SDK doesn't count","username":"yacovm","ts":"2017-11-27T23:59:50.535Z"}
{"msg":"only the API that the user sees","username":"yacovm","ts":"2017-11-27T23:59:56.825Z"}
{"msg":"only the API that the user sees counts","username":"yacovm","ts":"2017-11-27T23:59:56.825Z"}
{"msg":"I'd agree","username":"C0rWin","ts":"2017-11-27T23:59:58.950Z"}
{"msg":"So @binhn I'm still personally not sure about the 2/3. what is your argument against 50% that voted for? ","username":"yacovm","ts":"2017-11-28T00:01:07.996Z"}
{"msg":"as long as SDK API remains in same and no changes for Fabric users which develops applications on top of Fabric and those changes could be encapsulated within SDK, I won't consider them as breaking changes ","username":"C0rWin","ts":"2017-11-28T00:02:14.397Z"}
{"msg":"and we need to clearly specify it","username":"C0rWin","ts":"2017-11-28T00:02:20.470Z"}
{"msg":"also not sure about the 60%","username":"C0rWin","ts":"2017-11-28T00:02:26.950Z"}
{"msg":"50% is too easy for collusion ","username":"binhn","ts":"2017-11-28T00:02:50.476Z"}
{"msg":"what do you mean?","username":"yacovm","ts":"2017-11-28T00:03:01.349Z"}
{"msg":"the same way that distributed consensus has proved ","username":"binhn","ts":"2017-11-28T00:04:05.718Z"}
{"msg":"I must say I don't follow.","username":"yacovm","ts":"2017-11-28T00:05:03.784Z"}
{"msg":"in the byzantine generals problem you can send conflicting votes but in JIRA you can't do that","username":"yacovm","ts":"2017-11-28T00:06:04.972Z"}
{"msg":"in distributed consensus w/ no adversaries, 50%+ is enough to collude on agreement, I'd believe we don't have an adversary maintainer","username":"C0rWin","ts":"2017-11-28T00:06:25.267Z"}
{"msg":"human invents byzantine; it's our nature","username":"binhn","ts":"2017-11-28T00:08:28.935Z"}
{"msg":":-)","username":"binhn","ts":"2017-11-28T00:08:35.325Z"}
{"msg":":)","username":"C0rWin","ts":"2017-11-28T00:08:51.679Z"}
{"msg":"honestly do not really mind about how many votes do we need, as long as we have clear definition of external API and will define all relevant use cases.","username":"C0rWin","ts":"2017-11-28T00:10:24.811Z"}
{"msg":"such as changing API for sake of fixing exploits for example","username":"C0rWin","ts":"2017-11-28T00:10:48.927Z"}
{"msg":"or deficiency in design","username":"C0rWin","ts":"2017-11-28T00:11:21.121Z"}
{"msg":"btw, once we going into this, we also probably need to define deprecation policy ","username":"C0rWin","ts":"2017-11-28T00:12:12.249Z"}
{"msg":"right, and that's a good thing, because no one said that everything that exists now is set in stone","username":"yacovm","ts":"2017-11-28T00:13:04.016Z"}
{"msg":"all big projects deprecate parts of themselves over time","username":"yacovm","ts":"2017-11-28T00:13:20.811Z"}
{"msg":"~ all ~ many big projects deprecate parts of themselves over time","username":"yacovm","ts":"2017-11-28T00:13:20.811Z"}
{"msg":"anyway @binhn I suggest you open a JIRA for that, so we can.... vote?","username":"yacovm","ts":"2017-11-28T00:19:22.646Z"}
{"msg":"I'm sure you believe me since I responded first and immediately, that I didn't collude with anyone ;)","username":"yacovm","ts":"2017-11-28T00:20:14.645Z"}
{"msg":"we can do that in due time. Let's wait for more feedback from maintainers here","username":"binhn","ts":"2017-11-28T01:42:59.615Z"}
{"msg":"Although it's probably worth having guidance for what sort of changes require a vote, I would expect for most contributors to be able to recognize issues which deserve additional vetting.  My question is always how to draw more attention to an issue which requires it.  The system I am aware of is to add the review-needed label to the JIRA item, but this often does not seem to attract the amount of attention desired.  Posting to the mailing list and or maintainers channel seems a bit spam-like to me, and risks bifurcating the discussion into JIRA + other venue, when it seems like as much of the discussion as possible should be on JIRA.\n\nIn line with what was said above, I'd think a simple majority if there is dissent, or 1/3rd with adequate time and no dissent.  Obviously nothing is set in stone, but it seems at least like a good place to start.  I'd suggest that the rule should look something like:\n\n\"If the issue has been publicized by doing <insert_thing_here>, and at least <n> week days have passed, and at least 1/3rd maintainers have voted in support, and no maintainers are opposed, then it is approved.  If a majority of maintainers vote in support, the issue is approved.\"","username":"jyellick","ts":"2017-11-28T03:13:26.905Z"}
{"msg":"Has joined the channel.","username":"heath","ts":"2017-11-28T06:24:08.692Z","type":"uj"}
{"msg":"There are many times when a binary decision is needed - implement alternative A or alternative B.  Requiring 2/3 majority may lead to stalemate in those scenarios.  Therefore I agree with Jason’s proposal - simple majority when there is some dissent, 1/3 is sufficient if there is no dissent.  This happens to be exactly what we have been already practicing - requiring 5 (1/3rd) for most decisions and requiring simple majority for ‘important’ decisions such as maintainer nominations.","username":"dave.enyeart","ts":"2017-11-28T11:20:31.741Z"}
{"msg":"There are many times when a binary decision is needed - implement alternative A or alternative B.  Requiring 2/3 majority may lead to stalemate in those scenarios.  Therefore I agree with Jason’s proposal - simple majority when there is some dissent, 1/3 is sufficient if there is no dissent <7>? days after a publicized call to vote.  This happens to be aligned with our current practice - requiring 5 (1/3rd) for most decisions and requiring simple majority for ‘important’ decisions such as maintainer nominations.","username":"dave.enyeart","ts":"2017-11-28T11:20:31.741Z"}
{"msg":"There are many times when a binary decision is needed - implement alternative A or alternative B.  Requiring 2/3 majority may lead to stalemate in those scenarios.  Therefore I agree with Jason’s proposal - simple majority when there is some dissent, 1/3 is sufficient if there is no dissent <7>? days after a publicized call to review and vote.  This happens to be aligned with our current practice - requiring 5 (1/3rd) for most decisions and requiring simple majority for ‘important’ decisions such as maintainer nominations.","username":"dave.enyeart","ts":"2017-11-28T11:20:31.741Z"}
{"msg":"Concerning which ‘important’ items require a vote, I generally agree with Binh’s original guidance above, and I also agree with Jason’s comment that we usually know it when we see it.  I’d be fine going with a system where any maintainer can call for a vote by placing review-needed on a Jira item and highlighting it on this maintainers channel.  Usually that would be the lead maintainer for a given feature, but could be any maintainer.  Again, this happens to be aligned with what we have already been practicing for new top-level features, but should be extended to architectural decisions (which may be written up as a subtask under an approved feature). ","username":"dave.enyeart","ts":"2017-11-28T11:20:45.628Z"}
{"msg":"Concerning which ‘important’ items require a vote, I generally agree with Binh’s original guidance above, and I also agree with Jason’s comment that we usually know it when we see it.  I’d be fine going with a system where any maintainer can call for a vote by placing review-needed on a Jira item and highlighting it on this maintainers channel.  Usually that would be the lead maintainer for a given feature, but could be any maintainer.  Again, this happens to be aligned with what we have already been practicing for new top-level features, but should be extended to architectural designs/decisions (which would be written up as a subtask under an approved feature, with optional link to google doc if long). ","username":"dave.enyeart","ts":"2017-11-28T11:20:45.628Z"}
{"msg":"Concerning which ‘important’ items require a review and vote, I generally agree with Binh’s original guidance above, and I also agree with Jason’s comment that we usually know it when we see it.  I’d be fine going with a system where any maintainer can call for a review/vote by placing review-needed on a Jira item and highlighting it on this maintainers channel.  Usually that would be the lead maintainer for a given feature, but could be any maintainer.  Again, this happens to be aligned with what we have already been practicing for new top-level features, but should be extended to architectural designs/decisions (which would be written up as a subtask under an approved feature, with optional link to google doc if long). ","username":"dave.enyeart","ts":"2017-11-28T11:20:45.628Z"}
{"msg":"I’d prefer if maintainers try not to abstain from votes so that we don’t get into debates about majorities of subsets - if a maintainer doesn’t have enough expertise in a certain area to make a decision they can always follow the lead of a resident expert in the space.","username":"dave.enyeart","ts":"2017-11-28T11:20:51.976Z"}
{"msg":"I’d prefer if maintainers not to abstain from votes so that we don’t get into debates about majorities of subsets - if a maintainer doesn’t have enough expertise in a certain area to make a decision they can always follow the lead of a resident expert in the space.","username":"dave.enyeart","ts":"2017-11-28T11:20:51.976Z"}
{"msg":"I’d prefer if maintainers not abstain from votes so that we don’t get into debates about majorities of subsets - if a maintainer doesn’t have enough expertise in a certain area to make a decision they can always follow the lead of a resident expert in the space.","username":"dave.enyeart","ts":"2017-11-28T11:20:51.976Z"}
{"msg":"I’d prefer that maintainers not abstain from votes so that we don’t get into debates about majorities of subsets - if a maintainer doesn’t have enough expertise in a certain area to make a decision they can always follow the lead of a resident expert in the space.","username":"dave.enyeart","ts":"2017-11-28T11:20:51.976Z"}
{"msg":"I think this approach has the necessary checks and balances, without being overly heavyweight.","username":"dave.enyeart","ts":"2017-11-28T11:20:58.001Z"}
{"msg":"We have indeed fallen out of the habit of voting on review-needed features for the release, but I think if there is consensus on moving forward with this approach we can re-commit to voting on release features AND architectural decisions. ","username":"dave.enyeart","ts":"2017-11-28T11:21:04.707Z"}
{"msg":"The remaining open features tagged as 1.1 with review-needed can be found here:","username":"dave.enyeart","ts":"2017-11-28T11:21:09.927Z"}
{"msg":"https://jira.hyperledger.org/issues/?filter=10904&jql=project%20%3D%20FAB%20AND%20labels%20%3D%20Release-planning-1.1%20AND%20(type%20%3D%20Epic%20OR%20type%20%3D%20%22New%20Feature%22)%20AND%20status%20!%3D%20Done","username":"dave.enyeart","ts":"2017-11-28T11:21:16.326Z"}
{"msg":"thanks @dave.enyeart and @jyellick \n\nthe reason for > 2/3 because I thought about the current active maintainers 9 out or 15 are IBMers, so if we went with 1/2, it would not be perceived as a \"fair\" system. Of course, I am not saying that all IBM maintainers would vote together regardless, but that's the fact that we have to deal with.\n\nlet's wait for others to chime in","username":"binhn","ts":"2017-11-28T14:42:47.252Z"}
{"msg":"thanks @dave.enyeart and @jyellick \n\nthe reason for > 2/3 because I thought about the current active maintainers 9 out of 15 are IBMers, so if we went with 1/2, it would not be perceived as a \"fair\" system. Of course, I am not saying that all IBM maintainers would vote together regardless, but that's the fact that we have to deal with.\n\nlet's wait for others to chime in","username":"binhn","ts":"2017-11-28T14:42:47.252Z"}
{"msg":"@dave.enyeart The link you sent doesn't seem to have anything to do with the `review-needed` tag?","username":"jyellick","ts":"2017-11-28T15:18:46.668Z"}
{"msg":"looks like a list of items targeted for release ","username":"C0rWin","ts":"2017-11-28T16:02:35.180Z"}
{"msg":"@jyellick  The link I sent is for the open features tagged with release-planning-1.1.  Each of them has a review-needed tag.  Most of them have not been voted on yet.","username":"dave.enyeart","ts":"2017-11-28T16:12:04.103Z"}
{"msg":"These are the same features that we have been looking at in the Fabric dashboards and wiki, and there has been general agreement on inclusion in 1.1, we just need to formalize it with votes in the Jiras.","username":"dave.enyeart","ts":"2017-11-28T16:14:02.647Z"}
{"msg":"These are the same features that we have been looking at in the Fabric dashboards and wiki https://wiki.hyperledger.org/projects/fabric/proposedv1_1, and there has been general agreement on inclusion in 1.1, we just need to formalize it with votes in the Jiras.","username":"dave.enyeart","ts":"2017-11-28T16:14:02.647Z"}
{"msg":"If you are looking for the comprehensive list of review-needed items, that can also be found on the dashboard (middle of page on left): https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104","username":"dave.enyeart","ts":"2017-11-28T16:17:48.769Z"}
{"msg":"@here I have filled in details for CouchDB index management feature at https://jira.hyperledger.org/browse/FAB-6174 . There has been a lot of customer demand for this feature (as expected, since CouchDB queries only perform well with index in place). Please review, provide comments, and vote if you agree. There is also a child subtask https://jira.hyperledger.org/browse/FAB-7130 for a specific design decision that is required around changing channel name allowed length, which I have also marked as review-needed.","username":"dave.enyeart","ts":"2017-11-28T18:17:43.804Z"}
{"msg":"@here so, on the voting, IMO, what we should be doing is building consensus. If we use any threshold voting strategy, someone will be miffed","username":"cbf","ts":"2017-11-28T18:46:40.789Z"}
{"msg":"Ture","username":"JonathanLevi","ts":"2017-11-28T18:46:53.520Z"}
{"msg":"True","username":"JonathanLevi","ts":"2017-11-28T18:46:53.520Z"}
{"msg":"the objective should be to avoid needing a vote","username":"cbf","ts":"2017-11-28T18:46:56.662Z"}
{"msg":"working out technical differences of opinion, and then when it becomes clear that we aren't going to get to an agreement, THEN we resort to a vote","username":"cbf","ts":"2017-11-28T18:47:39.133Z"}
{"msg":"we originally added the \"review-needed\" to limit what when into 1.0.0 release (as a forcing function to STOP CODING;-)","username":"cbf","ts":"2017-11-28T18:48:15.700Z"}
{"msg":"it raised the threshold and made people think","username":"cbf","ts":"2017-11-28T18:48:30.511Z"}
{"msg":"I think that generally, as we think about planning 1.2.0 we should have specific proposals for new or modified features and improvements that we can review, as a team... and that review will surface any differences of opinion","username":"cbf","ts":"2017-11-28T18:50:09.460Z"}
{"msg":"we should then try to get to consensus and only when it is clear that none will be reached should we resort to a vote... and then, I think that we should think carefully about whether majority or super-majority is the better choice","username":"cbf","ts":"2017-11-28T18:51:26.516Z"}
{"msg":"my concern about super-majority is that it may mean we put the brakes on ","username":"cbf","ts":"2017-11-28T18:51:57.791Z"}
{"msg":"of course, that could be A Good Thing (tm)","username":"cbf","ts":"2017-11-28T18:52:06.705Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=BcGQ2QDKB5Sv5WYsf) @binhn you are suggesting that all the IBMers agree on everything? When has THAT ever happened;-)","username":"cbf","ts":"2017-11-28T19:06:59.992Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=BcGQ2QDKB5Sv5WYsf","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=BcGQ2QDKB5Sv5WYsf","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@jeffgarratt has been looking at this, and has come up with a proposed model for a formal process.  He can't post in this channel, so I can unmute him, or, he can write it up as a JIRA, what do you guys think?","username":"jyellick","ts":"2017-11-28T19:18:41.507Z"}
{"msg":"JIRA is totally fine.\n\nUnless Jeff would like to get unmuted? (I personally have no objection to Jeff participating here... if that was part of the question)","username":"JonathanLevi","ts":"2017-11-28T19:20:09.092Z"}
{"msg":"I don't want to offend anyone by confirming that I don't want to mute someone ;-)))","username":"JonathanLevi","ts":"2017-11-28T19:20:30.507Z"}
{"msg":"jeffgarratt","username":"jyellick","ts":"2017-11-28T19:21:50.062Z","type":"user-unmuted"}
{"msg":"I have formalized a model wrt to governance","username":"jeffgarratt","ts":"2017-11-28T19:22:21.394Z"}
{"msg":"Hello @jeffgarratt !","username":"JonathanLevi","ts":"2017-11-28T19:22:29.386Z"}
{"msg":"wanted to present it per it's own prescription","username":"jeffgarratt","ts":"2017-11-28T19:22:34.844Z"}
{"msg":"hello","username":"jeffgarratt","ts":"2017-11-28T19:22:37.424Z"}
{"msg":"i.e. as a new feature ","username":"jeffgarratt","ts":"2017-11-28T19:22:47.141Z"}
{"msg":"I will write this up as a new feature in Jira and post the link here.  ","username":"jeffgarratt","ts":"2017-11-28T19:23:58.783Z"}
{"msg":"It may be easier @jeffgarratt ","username":"JonathanLevi","ts":"2017-11-28T19:24:13.700Z"}
{"msg":"will post asap","username":"jeffgarratt","ts":"2017-11-28T19:26:52.862Z"}
{"msg":"@cbf I'm not understanding your comments about building consensus first and then voting.  The proposal is that we write up features and high level design in the public jira, and then tag it as review-needed to indicate it is ready for review. Reviewers (either maintainers or community members) provide comments if they have feedback or disagree (in total or to specific parts), or vote affirmative to indicate consent.  And then iterate until consensus is reached.  The jira upvote is a key mechanism to indicate consent during the iterative consensus building process.  Are you suggesting we first \"review as a team\" outside of jira? Or review in jira but not use the actual upvote widget until a 'final' vote is required?","username":"dave.enyeart","ts":"2017-11-29T03:41:37.855Z"}
{"msg":"@cbf I'm not understanding your comments about building consensus first and then voting.  The proposal is that we write up features and high level design in the public jira, as well as any architectural decisions, and then tag it as review-needed to indicate it is ready for review. Reviewers (either maintainers or community members) provide comments if they have feedback or disagree (in total or to specific parts), or vote affirmative to indicate consent.  And then iterate until consensus is reached (whether that means simple majority or super majority is a valid debate).  The jira upvote is a key mechanism to indicate consent during the iterative consensus building process.  Are you suggesting we first \"review as a team\" outside of jira? Or review in jira but not use the actual upvote widget until a 'final' vote is required?","username":"dave.enyeart","ts":"2017-11-29T03:41:37.855Z"}
{"msg":"This discussion is for building consensus on individual features upfront rather than wait until code review time (which has been happening).  ","username":"dave.enyeart","ts":"2017-11-29T03:41:47.786Z"}
{"msg":"For cross-feature prioritization for 1.2 release planning we will need a different procedure.  ","username":"dave.enyeart","ts":"2017-11-29T03:41:55.436Z"}
{"msg":"Note that this proposal is a lightweight variant of the more formalized feature management and voting process that Jeff is writing up.","username":"dave.enyeart","ts":"2017-11-29T03:42:02.819Z"}
{"msg":"I am attempting to build some general consensus around a lightweight approach that could be used for the remainder of 1.1, while Jeff's more formal process is evaluated.","username":"dave.enyeart","ts":"2017-11-29T03:42:13.305Z"}
{"msg":"@dave.enyeart  - this has always been the process.  What's changed?  I'm a bit tired of all.  We aren't going to vote on everything.  The review-needed tag was intended for things that people wanted to add to release after content had already been decided","username":"mastersingh24","ts":"2017-11-29T14:33:41.503Z"}
{"msg":"@dave.enyeart  - this has always been the process.  What's changed?  I'm a bit tired of it all.  We aren't going to vote on everything.  The review-needed tag was intended for things that people wanted to add to release after content had already been decided.","username":"mastersingh24","ts":"2017-11-29T14:33:41.503Z"}
{"msg":"The bottom line is quite simple:   we need to actually plan a release","username":"mastersingh24","ts":"2017-11-29T14:33:54.337Z"}
{"msg":"New features proposals - the process was to write it up in JIRA and possibly attach an external doc and then post to the mailing list.  The part we have not done so well is actually planning a release up front before it get's started.  I think we can improve on that for v1.1","username":"mastersingh24","ts":"2017-11-29T14:35:27.147Z"}
{"msg":"New features proposals - the process was to write it up in JIRA and possibly attach an external doc and then post to the mailing list.  The part we have not done so well is actually planning a release up front before it get's started.  I think we can improve on that for v1.2 compared to 1.1","username":"mastersingh24","ts":"2017-11-29T14:35:27.147Z"}
{"msg":"And new feature descriptions should include a writeup of the proposed architecture","username":"mastersingh24","ts":"2017-11-29T14:36:07.402Z"}
{"msg":"Of course we also need to decide if/when a feature will go in as well","username":"mastersingh24","ts":"2017-11-29T14:36:23.642Z"}
{"msg":"I don't see the point in voting for everything - but I don't think that is what you are proposing","username":"mastersingh24","ts":"2017-11-29T14:36:54.113Z"}
{"msg":"I will also state that many people don't have the context for some of these items.  Now we can rectify that with better writeups of features, requirements, etc","username":"mastersingh24","ts":"2017-11-29T14:37:26.417Z"}
{"msg":"For example, sidedb / private data was done very nicely","username":"mastersingh24","ts":"2017-11-29T14:42:15.500Z"}
{"msg":"For example, sidedb / private data was very nicely done","username":"mastersingh24","ts":"2017-11-29T14:42:15.500Z"}
{"msg":"@mastersingh24 agreed to all.  In my opinion one issue is that we are not consistently building consensus prior to dev, rather we get new comments during CR review.  I'm hoping for better Jira descriptions as well as more eyeballs on it prior to dev.  For example I put out https://jira.hyperledger.org/browse/FAB-6174 for review yesterday.  If people look at it and agree, an upvote would be a nice indicator, regardless of a formal voting process.","username":"dave.enyeart","ts":"2017-11-29T14:56:21.355Z"}
{"msg":"100% agree on up votes","username":"mastersingh24","ts":"2017-11-29T14:56:48.314Z"}
{"msg":"I try to do it for JIRAs whenever I see something that looks like a good idea","username":"mastersingh24","ts":"2017-11-29T14:57:07.238Z"}
{"msg":"Just to indicate some form of tacit approval","username":"mastersingh24","ts":"2017-11-29T14:57:16.792Z"}
{"msg":"@dave.enyeart I completely agree - and we do need to do that","username":"cbf","ts":"2017-11-29T17:15:14.283Z"}
{"msg":"@dave.enyeart I completely agree - and we do need to do that planning. ","username":"cbf","ts":"2017-11-29T17:15:14.283Z"}
{"msg":"Some additional review for https://jira.hyperledger.org/browse/FAB-7114 would be appreciated","username":"jyellick","ts":"2017-11-30T02:35:50.638Z"}
{"msg":"@here I think the lack of rush to vote on https://jira.hyperledger.org/browse/FAB-7114  indicates that the solution is difficult to love.  That being said, it is our duty to either get behind one of the proposals or write up an alternate proposal. Of the proposals written up, in my opinion this is the one that best meets the requirements and addresses the concerns that have been raised.  This is THE critical path item for 1.1 - I’d urge everybody to give it serious consideration this week, and add comments or write up an alternate proposal rather than abstain.","username":"dave.enyeart","ts":"2017-11-30T11:42:30.943Z"}
{"msg":"Might also just be that people are heads down on their own items as well.\nAgain - I'm really not sure why we are voting on this one, but that's a different story.\nPeople seemed to have concerns on basically getting rid of the existing instantiate mechanism.\nFAB-7114 basically keeps this in place while adding an extra step which is the fundamental part of the implementation","username":"mastersingh24","ts":"2017-11-30T11:49:46.732Z"}
{"msg":"@dave.enyeart  I don't understand how we can vote on a JIRA item that is a sub-task of a JIRA epic/new feature.\nWe voted on FAB-6042 and now we're voting on a sub-task of it. \nIn my opinion, if someone is against 1 of the sub-tasks of a JIRA item, he just shouldn't vote for it, and that's it. ","username":"yacovm","ts":"2017-11-30T12:02:17.249Z"}
{"msg":"@dave.enyeart  I don't understand how we can vote on a JIRA item that is a sub-task of a JIRA epic/new feature that we already voted on.\nWe voted on FAB-6042 and now we're voting on a sub-task of it. \nIn my opinion, if someone is against 1 of the sub-tasks of a JIRA item, he just shouldn't vote for it, and that's it. ","username":"yacovm","ts":"2017-11-30T12:02:17.249Z"}
{"msg":"Under an approved feature, there are some times important implementation decisions which in my mind are worthy of vetting and even a vote if there is contention. This seems to be one of them.","username":"dave.enyeart","ts":"2017-11-30T12:05:17.802Z"}
{"msg":"If you have another proposal to help make the decision, I'm all ears","username":"dave.enyeart","ts":"2017-11-30T12:07:09.206Z"}
{"msg":"right, I agree. But - that means that if we can't collect votes on a sub-task, what do the votes of the parent feature count for?","username":"yacovm","ts":"2017-11-30T12:07:17.314Z"}
{"msg":"my proposal is simple","username":"yacovm","ts":"2017-11-30T12:07:22.355Z"}
{"msg":"if we have a JIRA item that has sub-tasks, we vote on it as usual, and all sub-tasks of it are scrutinized (either in the sub-task discussion or the parent one)","username":"yacovm","ts":"2017-11-30T12:07:54.188Z"}
{"msg":"then, if a threshold of votes is collected, there is no re-voting on a part of the JIRA item.","username":"yacovm","ts":"2017-11-30T12:08:07.579Z"}
{"msg":"the important thing is building consensus, in my opinion that can be done via comments or upvotes","username":"dave.enyeart","ts":"2017-11-30T12:09:50.385Z"}
{"msg":"right, of course. I'm just saying the consensus should be on the entire JIRA with all its sub-tasks","username":"yacovm","ts":"2017-11-30T12:10:41.529Z"}
{"msg":"that's all","username":"yacovm","ts":"2017-11-30T12:10:44.249Z"}
{"msg":"we really should not be voting, but building consensus. Yacov does have a point, but it also points out that when we do agree on a feature, it should have a detailed proposal that we agree on","username":"cbf","ts":"2017-11-30T13:34:38.527Z"}
{"msg":"as we wind down on 1.1 and start to think about planning for 1.2 (and yes, we REALLY need to do a formal plan and STICK TO IT once agreed) we should be coming together with fully fleshed out proposals for any new or refactored features complete with sizing estimates and resource commitments.","username":"cbf","ts":"2017-11-30T13:36:18.972Z"}
{"msg":"and the sizing needs to include docs, tests and samples","username":"cbf","ts":"2017-11-30T13:36:33.451Z"}
{"msg":"For whatever little it's worth, I like the way the Rust folks are handling this: https://github.com/rust-lang/rfcs#what-the-process-is","username":"kostas","ts":"2017-11-30T13:57:18.409Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=bzJ2icxnyBWZtn8i7) @kostas +100 I think RFC/JSR like approaches to suggest and come to the agreement on new features is a good way going forward on standardizing the whole planning process ","username":"C0rWin","ts":"2017-11-30T14:49:19.956Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=bzJ2icxnyBWZtn8i7","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=bzJ2icxnyBWZtn8i7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"need one more vote on https://gerrit.hyperledger.org/r/c/15669/ please and that will give us 8 votes (so it can be merged","username":"cbf","ts":"2017-11-30T14:59:32.205Z"}
{"msg":"@here I posted  feature to capture the thinking with respect to governance model.  https://jira.hyperledger.org/browse/FAB-7147  That then links to the actual analysis and design document here https://jira.hyperledger.org/browse/FAB-7226","username":"jeffgarratt","ts":"2017-11-30T18:26:54.075Z"}
{"msg":"I was thinking of shooting a quick video to demonstrate usage wrt to accommodating existing tasks, as well as new features (such as the one above)","username":"jeffgarratt","ts":"2017-11-30T18:29:26.485Z"}
{"msg":"Has joined the channel.","username":"wanghaihui","ts":"2017-12-01T08:58:13.399Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dsanchezseco","ts":"2017-12-01T12:37:05.589Z","type":"uj"}
{"msg":"Has left the channel.","username":"dsanchezseco","ts":"2017-12-01T12:37:42.991Z","type":"ul"}
{"msg":"@jeffgarratt , a video would be great, thanks.","username":"dave.enyeart","ts":"2017-12-01T15:43:10.485Z"}
{"msg":"@here  I've added updated proposal comment to CouchDB index management: https://jira.hyperledger.org/browse/FAB-6174","username":"dave.enyeart","ts":"2017-12-01T15:44:28.147Z"}
{"msg":"@here  I've added updated proposal comment to CouchDB index management: https://jira.hyperledger.org/browse/FAB-6174?focusedCommentId=35720&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-35720","username":"dave.enyeart","ts":"2017-12-01T15:44:28.147Z"}
{"msg":"See 10:30am comment (you don't need to read the full comment chain unless you like pain)","username":"dave.enyeart","ts":"2017-12-01T15:44:54.445Z"}
{"msg":"If there is general agreement to the latest proposal, I will write it up as a new Jira item","username":"dave.enyeart","ts":"2017-12-01T15:45:45.150Z"}
{"msg":"Updated CouchDB index management design here: https://jira.hyperledger.org/browse/FAB-3067","username":"dave.enyeart","ts":"2017-12-04T11:55:03.563Z"}
{"msg":"I've addressed CouchDB index management design comments, and created a Jira with the cleaned up design Description: https://jira.hyperledger.org/browse/FAB-3067","username":"dave.enyeart","ts":"2017-12-04T11:55:03.563Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=TB5zg8igyMzN7yqno) Thank you @jeffgarratt - let's continue the conversations/discussions/thread over JIRA then, so that others (e.g., non-maintainers) can chime in.","username":"JonathanLevi","ts":"2017-12-04T11:55:35.650Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TB5zg8igyMzN7yqno","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TB5zg8igyMzN7yqno","remote":true,"fileId":null,"fileName":null}]}
{"msg":"User <em>User_1</em> removed by <em>JonathanLevi</em>.","username":"JonathanLevi","ts":"2017-12-04T11:56:14.308Z","type":"ru"}
{"msg":"[ Have kindly removed Jeff, so that we don't have an \"unprecedented case\" of a non-maintainer who's permanently added to this channel ]","username":"JonathanLevi","ts":"2017-12-04T11:57:14.201Z"}
{"msg":"Fellow maintainers, here's the stack of CRs for the v1.0.5 release:\n\nhttps://gerrit.hyperledger.org/r/#/q/status:open+project:fabric+branch:release+topic:release-1.0.5","username":"mastersingh24","ts":"2017-12-04T15:27:07.003Z"}
{"msg":"Fellow maintainers, here's the stack of CRs for the Fabric v1.0.5 release:\n\nhttps://gerrit.hyperledger.org/r/#/q/status:open+project:fabric+branch:release+topic:release-1.0.5","username":"mastersingh24","ts":"2017-12-04T15:27:07.003Z"}
{"msg":"Has joined the channel.","username":"jeffgarratt","ts":"2017-12-04T15:40:20.459Z","type":"uj"}
{"msg":"Can we get one more +2 on:\n\nhttps://gerrit.hyperledger.org/r/15901\nhttps://gerrit.hyperledger.org/r/15893\n\nand then merge?   I need to add another CR into the stack and will be easier if you can avoid wasted CI cycles  ;)","username":"mastersingh24","ts":"2017-12-04T18:30:11.873Z"}
{"msg":"Can we get one more +2 on:\n\nhttps://gerrit.hyperledger.org/r/15901\nhttps://gerrit.hyperledger.org/r/15893\n\nand then merge?   I need to add another CR into the stack and will be easier if we can avoid wasted CI cycles  ;)","username":"mastersingh24","ts":"2017-12-04T18:30:11.873Z"}
{"msg":"Did 15901, but can't on 15893, still need help there.","username":"jyellick","ts":"2017-12-04T18:49:35.703Z"}
{"msg":"@greg.haskins https://gerrit.hyperledger.org/r/c/15861/ we might want to take the discussion to RC or maybe the JIRA","username":"cbf","ts":"2017-12-08T22:16:32.181Z"}
{"msg":"Do we know who's in charge of the .htaccess redirects in Gerrit?","username":"kostas","ts":"2017-12-11T14:26:24.338Z"}
{"msg":"I guess worth to ask in #ci-pipeline  ?","username":"yacovm","ts":"2017-12-11T14:27:19.024Z"}
{"msg":"@kostas me, I guess? please ask in #ci-pipeline though","username":"rjones","ts":"2017-12-11T23:16:33.175Z"}
{"msg":"Has joined the channel.","username":"guolidong","ts":"2017-12-12T05:59:52.310Z","type":"uj"}
{"msg":"@here For the ability to stream transaction statuses from peer to clients as discussed in https://jira.hyperledger.org/browse/FAB-7069 (aka filtered events), @jeffgarratt  has proposed we vote on the two implementation approaches that have been discussed.  Thanks Jeff for writing these up as Jira items. Please upvote one or the other, and add any feedback:","username":"dave.enyeart","ts":"2017-12-12T11:32:49.073Z"}
{"msg":"@here For the ability to stream transaction statuses from peer to clients as discussed in https://jira.hyperledger.org/browse/FAB-7069 (aka filtered events), @jeffgarratt  has proposed we vote on the two implementation approaches that have been discussed.  Thanks Jeff for writing these up as Jira items. Please upvote one or the other (in Jira), and add any feedback:","username":"dave.enyeart","ts":"2017-12-12T11:32:49.073Z"}
{"msg":"@here For the ability to stream transaction statuses from peer to clients as discussed in https://jira.hyperledger.org/browse/FAB-7069 (aka filtered events), @jeffgarratt  has proposed we vote on the two implementation approaches that have been discussed.  Thanks Jeff for writing these up as Jira items. Please upvote one or the other (in Jira), and add any feedback as comments:","username":"dave.enyeart","ts":"2017-12-12T11:32:49.073Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-7419 (peer API approach), or","username":"dave.enyeart","ts":"2017-12-12T11:32:51.428Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-7367 (external application approach)","username":"dave.enyeart","ts":"2017-12-12T11:33:06.924Z"}
{"msg":"@dave.enyeart - is there a consensus on one of the following ways:\n- Using the same `common.Block` but filtering out the fields\n- Using a new protobuf type that contains only the filtered fields\n\n? ","username":"yacovm","ts":"2017-12-12T11:34:33.021Z"}
{"msg":"I haven't been able to keep track from all the sub-opinions ","username":"yacovm","ts":"2017-12-12T11:34:49.638Z"}
{"msg":"Looks like opinions were split on that.  I suggest we pick an general approach and then settle that.","username":"dave.enyeart","ts":"2017-12-12T11:35:25.321Z"}
{"msg":"Looks like opinions were split on that.  I suggest we pick a general approach and then settle that.","username":"dave.enyeart","ts":"2017-12-12T11:35:25.321Z"}
{"msg":"Looks like opinions were split on that.  I suggest we pick a general approach and then settle the remaining details.","username":"dave.enyeart","ts":"2017-12-12T11:35:25.321Z"}
{"msg":"I think this is an orthogonal to the initial question ","username":"C0rWin","ts":"2017-12-12T11:35:45.755Z"}
{"msg":"e.g. peer API vs external application","username":"C0rWin","ts":"2017-12-12T11:35:55.259Z"}
{"msg":"right it is orthogonal to Dave's poll","username":"yacovm","ts":"2017-12-12T11:36:04.153Z"}
{"msg":"I'm just asking along the way since I have the opportunity. ","username":"yacovm","ts":"2017-12-12T11:36:19.897Z"}
{"msg":"I think we need to settle the approach and decide on implementation details once direction will be clear","username":"C0rWin","ts":"2017-12-12T11:36:22.333Z"}
{"msg":"Initial input for Fabric upgrade documentation is available in https://jira.hyperledger.org/browse/FAB-6544.  Follow the google link there. The doc closely follows the BDD upgrade scenario that Jeff has provided to system test. In fact it links to the BDD feature in many places in case you'd like to drill down. I think we'll want all maintainers to give it a quick preview and add comments, prior to publicizing and writing it up for external documentation consumption.","username":"dave.enyeart","ts":"2017-12-12T18:24:00.903Z"}
{"msg":"Specifically there are a few comments in there most appropriate for @jyellick and @kostas . ","username":"dave.enyeart","ts":"2017-12-12T18:24:36.782Z"}
{"msg":"The most important question in my opinion is whether rolling upgrade can be supported for ordering service nodes.","username":"dave.enyeart","ts":"2017-12-12T18:25:23.461Z"}
{"msg":"Who are the target audience of the google doc, @dave.enyeart  ? ","username":"yacovm","ts":"2017-12-12T19:55:25.553Z"}
{"msg":"What's the target audience of the google doc, @dave.enyeart  ? ","username":"yacovm","ts":"2017-12-12T19:55:25.553Z"}
{"msg":"Is it a precursor for an RST document that will be published to users?","username":"yacovm","ts":"2017-12-12T19:56:14.322Z"}
{"msg":"@yacovm Yes the google doc is for us to get the upgrade story that we want to document straight. It will be used as input to author the eventual user facing RST.  And it will be used by system test in the interim.","username":"dave.enyeart","ts":"2017-12-12T20:24:03.037Z"}
{"msg":"@yacovm Yes the google doc is for us to get the upgrade story that we want to document straight. It will be used as input to author the eventual user facing RST.  And it will be used by system test in the interim for test planning.","username":"dave.enyeart","ts":"2017-12-12T20:24:03.037Z"}
{"msg":"Has joined the channel.","username":"zhishui","ts":"2017-12-19T08:12:16.194Z","type":"uj"}
{"msg":"Merry Christmas and happy holidays.\nLet's give ourselves a nice gift and get v1.1 out the door!\n:christmas_tree:","username":"mastersingh24","ts":"2017-12-25T12:35:07.295Z"}
{"msg":"Happy Holidays to all!\nLet's give ourselves a nice gift and get v1.1 out the door!\n:christmas_tree:  :menorah:  :gift: ","username":"mastersingh24","ts":"2017-12-25T12:35:07.295Z"}
{"msg":"Thank you Gari. Yes, happy holidays!\n\nHopefully we can do this w/o Santa... but just for the off-chance, we should all put the Green and Blue blockchain socks (from Consensus 2017) hanging somewhere, in case somebody shows up. A sock for each component! ;-)","username":"JonathanLevi","ts":"2017-12-26T14:44:01.497Z"}
{"msg":"Nice!","username":"mastersingh24","ts":"2017-12-27T11:16:26.289Z"}
{"msg":"FYI - I'll be mostly offline for the remainder of the week.  Decided to run away from the cold weather here in Boston and head south  ;)","username":"mastersingh24","ts":"2017-12-27T11:17:25.164Z"}
{"msg":"Happy New Year, @here ","username":"cbf","ts":"2018-01-04T12:30:25.811Z"}
{"msg":"@dave.enyeart and I discussed the plans to wrap up 1.1 release yesterday","username":"cbf","ts":"2018-01-04T12:30:50.261Z"}
{"msg":"specifically, we need to be looking to CODE FREEZE RSN - we discussed next Friday 1/12 as a target date","username":"cbf","ts":"2018-01-04T12:31:32.761Z"}
{"msg":"specifically, we need to be looking to FEATURE FREEZE RSN - we discussed next Friday 1/12 as a target date","username":"cbf","ts":"2018-01-04T12:31:32.761Z"}
{"msg":"for those not working on remaining features, everyone else needs to be focused on fixing high and highest defects - @dave.enyeart will be going through those and identifying those which we really SHOULD fix for 1.1-alpha","username":"cbf","ts":"2018-01-04T12:32:44.777Z"}
{"msg":"Does anyone have concerns about the immediate plan for a FEATURE FREEZE as of 1/12?","username":"cbf","ts":"2018-01-04T12:33:50.210Z"}
{"msg":"speak now or forever hold your peace","username":"cbf","ts":"2018-01-04T12:34:00.729Z"}
{"msg":"is that only for fabric core or also for SDKs?","username":"yacovm","ts":"2018-01-04T12:34:23.005Z"}
{"msg":"is that only for fabric core, fabric-CA or also for SDKs?","username":"yacovm","ts":"2018-01-04T12:34:23.005Z"}
{"msg":"if SDKs are trailing... sigh","username":"cbf","ts":"2018-01-04T12:35:05.087Z"}
{"msg":"if I had my drothers, we would lock it down now;-)","username":"cbf","ts":"2018-01-04T12:35:29.558Z"}
{"msg":"No concern from my side, of course - just saying they usually lag behind ","username":"yacovm","ts":"2018-01-04T12:35:32.755Z"}
{"msg":"@jimthematrix ","username":"yacovm","ts":"2018-01-04T12:35:45.821Z"}
{"msg":"Making sure we take that into account","username":"yacovm","ts":"2018-01-04T12:36:06.856Z"}
{"msg":"Also we have that event filtering JIRA which hasn't reached a  final consensus yet","username":"yacovm","ts":"2018-01-04T12:44:28.629Z"}
{"msg":"Also we have that event filtering JIRA ( FAB-7419 ) which hasn't reached a  final consensus yet","username":"yacovm","ts":"2018-01-04T12:44:28.629Z"}
{"msg":"yep","username":"cbf","ts":"2018-01-04T12:44:31.211Z"}
{"msg":"and SDKs are consumers of that","username":"yacovm","ts":"2018-01-04T12:44:33.972Z"}
{"msg":"IMO, we really need to stop letting perfection getting in the way of progress ","username":"cbf","ts":"2018-01-04T12:45:16.908Z"}
{"msg":"there are CRs in review and we are still arguing... insane","username":"cbf","ts":"2018-01-04T12:45:41.224Z"}
{"msg":"I could not say more ","username":"C0rWin","ts":"2018-01-04T12:46:00.563Z"}
{"msg":"I'd rather adding UT to it, than trying to refactor it adding another abstraction layers on top of existing code which we could simply reuse as it is","username":"C0rWin","ts":"2018-01-04T12:54:31.708Z"}
{"msg":"@cbf @mastersingh24 @dave.enyeart the chaincode cleanup has been worked and reviewed and has no external impact. Can we please get that in ?","username":"muralisr","ts":"2018-01-04T13:32:19.307Z"}
{"msg":"the series is https://gerrit.hyperledger.org/r/#/c/16533/  https://gerrit.hyperledger.org/r/#/c/16503/ https://gerrit.hyperledger.org/r/#/c/11867/","username":"muralisr","ts":"2018-01-04T13:32:48.272Z"}
{"msg":"as reviewers, @C0rWin  @yacovm do chime in please","username":"muralisr","ts":"2018-01-04T13:33:36.262Z"}
{"msg":":spy: on my way","username":"C0rWin","ts":"2018-01-04T13:34:23.052Z"}
{"msg":"I can't vouch for the safety of the first change set, as the chaincode code is pretty hard to understand. We should have removed that FSM in v1.0 and not now. ","username":"yacovm","ts":"2018-01-04T13:35:50.096Z"}
{"msg":"I can't vouch for the safety of the first change set, as the chaincode code is pretty hard to understand. We should have removed that FSM before v1.0 release and not now. ","username":"yacovm","ts":"2018-01-04T13:35:50.096Z"}
{"msg":"actually the 2nd is also pretty complex","username":"yacovm","ts":"2018-01-04T13:37:48.683Z"}
{"msg":"now I did not expect that answer","username":"muralisr","ts":"2018-01-04T13:38:27.677Z"}
{"msg":"I'm not saying it's not safe to merge it","username":"yacovm","ts":"2018-01-04T13:38:48.727Z"}
{"msg":"we spent quite some time chatting about it and my impression was you understood the changes","username":"muralisr","ts":"2018-01-04T13:38:54.851Z"}
{"msg":"I understand the change","username":"yacovm","ts":"2018-01-04T13:39:02.707Z"}
{"msg":"I think we need to do that","username":"yacovm","ts":"2018-01-04T13:39:11.494Z"}
{"msg":"but I honestly don't know how can we know we don't have a logical bug creeping on us","username":"yacovm","ts":"2018-01-04T13:39:30.785Z"}
{"msg":"and I'm saying that we should have done that before v1.0 was released","username":"yacovm","ts":"2018-01-04T13:40:09.869Z"}
{"msg":"the more we postpone the harder it'll get... during 1.0 madness the focus was to get chaincode to accept concurrent requests and I tried to do that with as less changes as possible (ie, leave the FSM in) and thus reduce risk","username":"muralisr","ts":"2018-01-04T13:42:47.924Z"}
{"msg":"right, we should have written that from scratch","username":"yacovm","ts":"2018-01-04T13:43:27.221Z"}
{"msg":"instead of taking what isn't fit for v1 architecture","username":"yacovm","ts":"2018-01-04T13:43:37.985Z"}
{"msg":"but here we are, removing the the FSM and clean up, why move it to another relkease ?","username":"muralisr","ts":"2018-01-04T13:44:16.960Z"}
{"msg":"oh, I'm not saying we shouldn't merge that","username":"yacovm","ts":"2018-01-04T13:44:40.447Z"}
{"msg":"I abstain ","username":"yacovm","ts":"2018-01-04T13:44:50.208Z"}
{"msg":"you have reviewed and have spent time going over the changes... why abstain ?","username":"muralisr","ts":"2018-01-04T13:46:37.460Z"}
{"msg":"the changes are confined to 4 files, worst case we can revert with little pain","username":"muralisr","ts":"2018-01-04T13:48:25.981Z"}
{"msg":"because I tried to help with the CR, but I cannot vouch for the safety of merging the CR","username":"yacovm","ts":"2018-01-04T13:48:37.291Z"}
{"msg":"as it does not affect java or node js ","username":"muralisr","ts":"2018-01-04T13:48:38.952Z"}
{"msg":"but you understand the changes","username":"muralisr","ts":"2018-01-04T13:49:19.700Z"}
{"msg":"?","username":"muralisr","ts":"2018-01-04T13:49:21.577Z"}
{"msg":"in macro","username":"yacovm","ts":"2018-01-04T13:49:24.598Z"}
{"msg":"not in micro ;)","username":"yacovm","ts":"2018-01-04T13:49:38.587Z"}
{"msg":"fair enough...","username":"muralisr","ts":"2018-01-04T13:50:03.461Z"}
{"msg":"Has joined the channel.","username":"JanRzepecki","ts":"2018-01-04T15:45:50.144Z","type":"uj"}
{"msg":"Now is the time we could really use all hands on deck from maintainers.  Those maintainers not on critical path items could perhaps help on CR reviews. Apologies for proposing names, but perhaps @binhn could help review some of the @muralisr CRs and perhaps @JonathanLevi could help review some of the CA CRs highlighted by @smithbk over in #fabric-pr-review.  What do you think?","username":"dave.enyeart","ts":"2018-01-04T18:37:21.296Z"}
{"msg":"And perhaps @jimthematrix could help review SDK CRs as they become available from @bretharrison and @rickr ","username":"dave.enyeart","ts":"2018-01-04T18:39:54.689Z"}
{"msg":"Yes, of course I can. ","username":"JonathanLevi","ts":"2018-01-04T19:49:58.859Z"}
{"msg":"howdy all, coming up for air","username":"greg.haskins","ts":"2018-01-04T21:45:20.244Z"}
{"msg":"happy new year to you all","username":"greg.haskins","ts":"2018-01-04T21:45:33.056Z"}
{"msg":"hey Greg,:tada: ","username":"muralisr","ts":"2018-01-04T23:52:07.061Z"}
{"msg":"hey @greg.haskins ,:tada: ","username":"muralisr","ts":"2018-01-04T23:52:07.061Z"}
{"msg":"(nearest I could find something newyeary :-) )","username":"muralisr","ts":"2018-01-04T23:52:47.803Z"}
{"msg":"[ Just like in the good ol' days... ]","username":"JonathanLevi","ts":"2018-01-05T00:47:17.445Z"}
{"msg":"Has left the channel.","username":"CarlXK","ts":"2018-01-05T04:29:10.744Z","type":"ul"}
{"msg":"Has joined the channel.","username":"Asara","ts":"2018-01-08T14:39:51.294Z","type":"uj"}
{"msg":"Has joined the channel.","username":"thiago-moreira","ts":"2018-01-09T00:18:20.615Z","type":"uj"}
{"msg":"@here We have 5 Experimental Features for 1.1 that we have been tracking in the release dashboard https://jira.hyperledger.org/issues/?filter=10829 and google release snapshot https://docs.google.com/spreadsheets/d/1TswRWap0MO-CVSLWbGnBzUPQp4SaWUeflRgkxZFh1t0/edit#gid=0 .  We need some final disposition for these as we move through alpha/beta/GA. I would propose that we have an ‘advocate maintainer’ for each one to shepherd the experimental feature doc, samples, and system test through the remainder of 1.1 release. The 'advocate maintainer’ would also be the person that could propose the experimental feature is ready for production support, if they feel the feature has reached that level of maturity and thinks they can get consensus on that (I believe we are still operating under the 5 votes rule, as we have not gotten traction on any other voting proposal). Jira is not set up well for this voting, as some of the Features have already gotten 5 votes in Jira, but that was voting to begin the Experimental development. So we’ll need to try to reach consensus in the Jira comments, if we feel that any experimental feature is ready for production support.\nNote also that we have not standardized on how the experimental feature is hidden in the release, something we likely don’t have time to do prior to alpha but should be done minimally for beta/GA.  The google release snapshot indicates how the feature is hidden in the release (currently a combination of experimental build tags, experimental capabilities, and 1.1 capabilities).\nHere are the five experimental features, looking for an advocate maintainer for three of them… thoughts?\nFAB 1151 Side DB - Dave\nFAB 3621 RBACL - Murali\nFAB 2005 Identity Mixer - Advocate volunteer? Maria had recommended Jason or Yacov.\nFAB 5664 Distinguish MSP Identity Types - Advocate volunteer?\nFAB-1973 Java Chaincode - Advocate vounteer?","username":"dave.enyeart","ts":"2018-01-09T04:58:34.579Z"}
{"msg":"@here We have 5 Experimental Features for 1.1 that we have been tracking in the release dashboard https://jira.hyperledger.org/issues/?filter=10829 and google release snapshot https://docs.google.com/spreadsheets/d/1TswRWap0MO-CVSLWbGnBzUPQp4SaWUeflRgkxZFh1t0/edit#gid=0 .  We need some final disposition for these as we move through alpha/beta/GA. I would propose that we have an ‘advocate maintainer’ for each one to shepherd the experimental feature doc, samples, and system test through the remainder of 1.1 release. The 'advocate maintainer’ would also be the person that could propose the experimental feature is ready for production support, if they feel the feature has reached that level of maturity and thinks they can get consensus on that (I believe we are still operating under the 5 votes rule, as we have not gotten traction on any other voting proposal). Jira is not set up well for this voting, as some of the Features have already gotten 5 votes in Jira, but that was voting to begin the Experimental development. So we’ll need to try to reach consensus in the Jira comments, if we feel that any experimental feature is ready for production support.\nNote also that we have not standardized on how the experimental feature is hidden in the release, something we likely don’t have time to do prior to alpha but should be done minimally for beta/GA.  The google release snapshot indicates how the feature is hidden in the release (currently a combination of experimental build tags, experimental capabilities, and 1.1 capabilities).\nHere are the five experimental features, looking for an advocate maintainer for three of them… thoughts?\nhttps://jira.hyperledger.org/browse/FAB-1151 Side DB - Dave\nhttps://jira.hyperledger.org/browse/FAB-3621 RBACL - Murali\nhttps://jira.hyperledger.org/browse/FAB-2005 Identity Mixer - Advocate volunteer? Maria had recommended Jason or Yacov.\nhttps://jira.hyperledger.org/browse/FAB-5664 Distinguish MSP Identity Types - Advocate volunteer?\nhttps://jira.hyperledger.org/browse/FAB-1973 Java Chaincode - Advocate vounteer?","username":"dave.enyeart","ts":"2018-01-09T04:58:34.579Z"}
{"msg":"I am not a shepherd but i can advocate for FAB-5664","username":"yacovm","ts":"2018-01-09T06:11:20.235Z"}
{"msg":"IdeMix has java sdk client side so i recommend someone familiar with that","username":"yacovm","ts":"2018-01-09T06:17:11.389Z"}
{"msg":"@yacovm - might be missing the context but not sure how IdeMix and FAB-5664 are related?  And I thought we had merged almost all of the CRs related to 5664.  I just need to look at the cryptogen one (last time I checked)","username":"mastersingh24","ts":"2018-01-09T11:45:43.544Z"}
{"msg":"I'm saying","username":"yacovm","ts":"2018-01-09T11:46:08.901Z"}
{"msg":"I can help with that one","username":"yacovm","ts":"2018-01-09T11:46:17.046Z"}
{"msg":"but not with idemix","username":"yacovm","ts":"2018-01-09T11:46:19.652Z"}
{"msg":"because idemix client code is java","username":"yacovm","ts":"2018-01-09T11:46:35.905Z"}
{"msg":"(I know java, but I don't know java SDK ;) )","username":"yacovm","ts":"2018-01-09T11:46:46.764Z"}
{"msg":"Ah - gotcha.","username":"mastersingh24","ts":"2018-01-09T12:03:48.596Z"}
{"msg":"I thought that wrt to IdeMix, we were going to keep the runtime pieces in Fabric but NOT modify the SDKs for the v1.1 release","username":"mastersingh24","ts":"2018-01-09T12:04:40.987Z"}
{"msg":"I have heard some rumblings that FAB-5664 and FAB-2005 (server components) may be ready or are close to ready for production inclusion.  The role of the 'maintainer advocate' in my proposal is to have a maintainer take a deep look at each feature, including doc, samples, system test, and assess if it is really ready for production inclusion.  Or if it is close enough, to help close the gap.  And then to convince the rest of the maintainers that it is ready to go.  And if it is not ready to go, to help hide the feature as experimental prior to 1.1 release.  I think @yacovm would be a great choice for either of them.","username":"dave.enyeart","ts":"2018-01-09T12:39:15.438Z"}
{"msg":"like I said @dave.enyeart I can do the former but the latter (2005) - I don't know java-SDK so I can't express an educated opinion about whether it's ready for production or not. ","username":"yacovm","ts":"2018-01-09T12:41:37.733Z"}
{"msg":"Perhaps @Maria wants to say something w.r.t 2005? ","username":"yacovm","ts":"2018-01-09T12:42:07.244Z"}
{"msg":"Has joined the channel.","username":"Maria","ts":"2018-01-09T12:42:07.401Z","type":"uj"}
{"msg":"Maria","username":"yacovm","ts":"2018-01-09T12:42:11.974Z","type":"user-unmuted"}
{"msg":"Ok, Gari was saying we could take the server part of 2005 but not the sdk part... if that helps...","username":"dave.enyeart","ts":"2018-01-09T12:42:13.078Z"}
{"msg":"not sure what is delivered then if there is no client that can use that?","username":"yacovm","ts":"2018-01-09T12:42:43.349Z"}
{"msg":"I think Gari and Jason's idea was that server code could be delivered in 1.1, and then SDKs could add support whenever possible.","username":"dave.enyeart","ts":"2018-01-09T12:43:44.380Z"}
{"msg":"we are finishing with the SDK integration with Angelo","username":"Maria","ts":"2018-01-09T12:43:48.426Z"}
{"msg":"Maria has made her case about 2005 in FAB-7000 comments.  I'm just asking for a maintainer to do some additional due diligence around it.","username":"dave.enyeart","ts":"2018-01-09T12:43:48.781Z"}
{"msg":"but the idea was that we release the fabric part, and the sdk will follow once ready","username":"Maria","ts":"2018-01-09T12:44:15.415Z"}
{"msg":"because the fabric part is ready and tested for a long time ","username":"Maria","ts":"2018-01-09T12:44:57.056Z"}
{"msg":"and i keep getting requests about it","username":"Maria","ts":"2018-01-09T12:45:10.170Z"}
{"msg":"who tested it?","username":"yacovm","ts":"2018-01-09T12:45:12.173Z"}
{"msg":"from AMEX for example","username":"Maria","ts":"2018-01-09T12:45:22.165Z"}
{"msg":"we have e2e demo, full unit test coverage and we use the same crypto material in java sdk","username":"Maria","ts":"2018-01-09T12:47:13.977Z"}
{"msg":"For cases like this where a feature is close to ready, the component owner and 'maintainer advocate' could work together to finish off any gaps, such as working on system test or partnering with system testers, to ensure good BDD coverage.","username":"dave.enyeart","ts":"2018-01-09T12:50:17.576Z"}
{"msg":"we would be happy to do whatever else is necessary...  ","username":"Maria","ts":"2018-01-09T12:52:23.522Z"}
{"msg":"1 more thing, while I can do FAB-5664, if @adc  wants, he can pick someone else, I don't mind :) ","username":"yacovm","ts":"2018-01-09T12:53:13.977Z"}
{"msg":"adc","username":"yacovm","ts":"2018-01-09T12:53:18.672Z","type":"user-unmuted"}
{"msg":"however in our view the fabric part is complete.... and we will be able to allocate more resources to finish up other sdks once the fabric part is released","username":"Maria","ts":"2018-01-09T12:53:55.214Z"}
{"msg":"@dave.enyeart I have played with https://jira.hyperledger.org/browse/FAB-5664 Distinguish MSP Identity Types ","username":"muralisr","ts":"2018-01-09T13:38:48.234Z"}
{"msg":"couple of things - default is disabled so does not interfere with 1.0 configurations","username":"muralisr","ts":"2018-01-09T13:39:17.709Z"}
{"msg":"secondly it does work when enabled as far as distinguishing Org.Peer, Org.Client etc but I was struggling a bit with bending it to my scenario (this could be me though) ","username":"muralisr","ts":"2018-01-09T13:41:33.617Z"}
{"msg":"this could be a useful addition to MSP roles.. however we need some good samples and docs ( @adc @nickgaski )","username":"muralisr","ts":"2018-01-09T13:43:01.739Z"}
{"msg":"+1 from me for https://jira.hyperledger.org/browse/FAB-5664","username":"muralisr","ts":"2018-01-09T13:43:21.053Z"}
{"msg":"@dave.enyeart it seems to me that @muralisr is a better candidate than me for FAB-5664 ","username":"yacovm","ts":"2018-01-09T13:55:58.555Z"}
{"msg":"hmmm I wouldn't say \"better\" @yacovm ...did I miss some conv. above ?","username":"muralisr","ts":"2018-01-09T13:56:39.514Z"}
{"msg":"I just saw Daves request and responded :-)","username":"muralisr","ts":"2018-01-09T13:56:57.780Z"}
{"msg":"   @yacovm do you want to take FAB-2005?  (minus Java SDK parts).  It does sound like @muralisr has good background context with FAB-5664 , even if he didn't completely volunteer :)","username":"dave.enyeart","ts":"2018-01-09T13:57:44.818Z"}
{"msg":"Ah... I just didn't read the text fuilly (thanks @yacovm for the pointer...) ","username":"muralisr","ts":"2018-01-09T13:59:14.615Z"}
{"msg":"I volunteer","username":"muralisr","ts":"2018-01-09T13:59:17.453Z"}
{"msg":"thanks Murali","username":"yacovm","ts":"2018-01-09T13:59:32.203Z"}
{"msg":"but I'm going to need some time with @adc ","username":"muralisr","ts":"2018-01-09T13:59:37.778Z"}
{"msg":"I think it makes sense you replace me with that given that you have played it already","username":"yacovm","ts":"2018-01-09T13:59:44.689Z"}
{"msg":"@dave.enyeart how much doc and samples are needed for a +1 ?","username":"muralisr","ts":"2018-01-09T14:00:04.002Z"}
{"msg":"because thats one thing that'll severly limit use of 5664","username":"muralisr","ts":"2018-01-09T14:00:18.314Z"}
{"msg":"If it is included as a production feature, it should have sufficient doc and samples for community to figure out the usage, same as any production feature.","username":"dave.enyeart","ts":"2018-01-09T14:01:11.809Z"}
{"msg":"it took me 2 whole day (err, of weekend if I might add :-) ) to get to the bottom...again this coukd just be mne","username":"muralisr","ts":"2018-01-09T14:01:13.171Z"}
{"msg":"ok","username":"muralisr","ts":"2018-01-09T14:01:21.211Z"}
{"msg":"it is not you :)","username":"dave.enyeart","ts":"2018-01-09T14:01:22.702Z"}
{"msg":"I think its got value","username":"muralisr","ts":"2018-01-09T14:01:50.912Z"}
{"msg":"having gone through that pain already, makes you immensely qualified to help with 5664","username":"dave.enyeart","ts":"2018-01-09T14:02:03.771Z"}
{"msg":"you got it :-)","username":"muralisr","ts":"2018-01-09T14:02:15.189Z"}
{"msg":"timeline again please ?","username":"muralisr","ts":"2018-01-09T14:02:22.450Z"}
{"msg":"it doesn't have to be perfect for alpha (january), but needs to be started for alpha and then in good shape by beta and ga dates (let's say one month out)","username":"dave.enyeart","ts":"2018-01-09T14:03:53.452Z"}
{"msg":"perfect","username":"muralisr","ts":"2018-01-09T14:04:14.437Z"}
{"msg":"and you dont have to do much of the actual work...just coach the implementer such as adc","username":"dave.enyeart","ts":"2018-01-09T14:04:17.701Z"}
{"msg":"adc","username":"yacovm","ts":"2018-01-09T14:04:24.392Z","type":"user-muted"}
{"msg":"Maria","username":"yacovm","ts":"2018-01-09T14:04:27.870Z","type":"user-muted"}
{"msg":"ok, I'll run my scenario by adc","username":"muralisr","ts":"2018-01-09T14:05:47.216Z"}
{"msg":"and go from there","username":"muralisr","ts":"2018-01-09T14:05:55.545Z"}
{"msg":"ok great, thanks, this is exactly what i had in mind with \"maintainer advocate\"... somebody to try out the feature and coach the implementer through docs, samples, test.","username":"dave.enyeart","ts":"2018-01-09T14:06:35.230Z"}
{"msg":"@muralisr you can be your own coach for FAB 3621 RBAC :)   Do you think the code is ready for production use (assuming your CR gets merged and docs, samples, system test come together)?  Or do you think it is better hidden as an experimental feature to collect feedback during 1.1 timeframe?","username":"dave.enyeart","ts":"2018-01-09T14:11:43.546Z"}
{"msg":"actually my using the 5664 was really to do convincing playback for 3621 :-)","username":"muralisr","ts":"2018-01-09T14:12:44.448Z"}
{"msg":"Ive test and the playback out there with RSCC still works with the recent changes (ie, removal of rscc and the resulting simplification using recent resource bundle / config changes from @jyellick and @manish-sethi )","username":"muralisr","ts":"2018-01-09T14:15:00.212Z"}
{"msg":"but that was a hard playback for users to follow because I had to use raw OUs there","username":"muralisr","ts":"2018-01-09T14:15:27.614Z"}
{"msg":"but with 5664 I was hoping for a simpler playback that users can easily follow and try","username":"muralisr","ts":"2018-01-09T14:15:46.702Z"}
{"msg":"this would kill two birds with 1 stone","username":"muralisr","ts":"2018-01-09T14:15:56.028Z"}
{"msg":"(a round about way of answering your q. ... :-) )","username":"muralisr","ts":"2018-01-09T14:16:12.483Z"}
{"msg":"which is I think its ready and with a bit of doc can actually do it ... I'd need nick's help though","username":"muralisr","ts":"2018-01-09T14:16:59.031Z"}
{"msg":"the threshold for inclusion as a production feature should go beyond \"it works\". for example private data \"works\", but i'd like to keep it as an experimental feature during 1.1 timeframe so that we can collect community feedback and have ability to make improvements prior to it becoming a production feature.","username":"dave.enyeart","ts":"2018-01-09T14:17:07.503Z"}
{"msg":"agreed","username":"muralisr","ts":"2018-01-09T14:17:33.493Z"}
{"msg":"which is why I need a good sample playback and doc","username":"muralisr","ts":"2018-01-09T14:17:49.810Z"}
{"msg":"the one I have in mind will basically create various resource with different policies for +ve and -ve tests","username":"muralisr","ts":"2018-01-09T14:18:19.646Z"}
{"msg":"I'm ok with experimental too","username":"muralisr","ts":"2018-01-09T14:18:51.280Z"}
{"msg":"sounds good... i agree 5664 and 3621 make sense to evaluate together","username":"dave.enyeart","ts":"2018-01-09T14:18:57.709Z"}
{"msg":"It's a little hard for me to tell from the conversation above whether @yacovm is handling FAB-2005 or not, but if not, I'd be happy to act as advocate.","username":"jyellick","ts":"2018-01-09T14:45:03.120Z"}
{"msg":"I am not","username":"yacovm","ts":"2018-01-09T14:45:12.889Z"}
{"msg":"be my guest :)","username":"yacovm","ts":"2018-01-09T14:45:16.110Z"}
{"msg":"Ok great, so to summarize the maintainer advocates for the Experimental features:\nhttps://jira.hyperledger.org/browse/FAB-1151 Side DB - Dave\nhttps://jira.hyperledger.org/browse/FAB-3621 RBAC - Murali\nhttps://jira.hyperledger.org/browse/FAB-5664 Distinguish MSP Identity Types - Murali\nhttps://jira.hyperledger.org/browse/FAB-2005 Identity Mixer - Jason\nhttps://jira.hyperledger.org/browse/FAB-1973 Java Chaincode - TBD\nAfter you dig in, we’ll look for your recommendations regarding keeping the feature Experimental vs making a production feature.","username":"dave.enyeart","ts":"2018-01-09T15:23:26.938Z"}
{"msg":"@here we've been talking/thinking about having a maintainers meeting - well, the opportunity has manifested itself","username":"cbf","ts":"2018-01-11T18:07:40.559Z"}
{"msg":"the State Street guys have agreed to host in Boston on 2/5 (I think that this needs to be finalized, but there, I said it)","username":"cbf","ts":"2018-01-11T18:08:25.648Z"}
{"msg":"I presume that @greg.haskins, @binhn or @muralisr will provide logistics info when finalized","username":"cbf","ts":"2018-01-11T18:09:27.929Z"}
{"msg":"we'll use this day to plan our 1.2 release - really ;-)","username":"cbf","ts":"2018-01-11T18:10:01.211Z"}
{"msg":"note that the only reason that we're going to Boston is because that's the only place we can count on Greg showing up... we could have had it in FL ","username":"cbf","ts":"2018-01-11T18:11:18.181Z"}
{"msg":"----","username":"cbf","ts":"2018-01-11T20:02:19.151Z"}
{"msg":"@here a bunch of us (including @mastersingh24, @sykesm and others) and we agreed that the behave tests are not adding value, they need to be frequently re-run and we have no one to maintain the code. Hence, we think that since the end-to-end (fabric-samples/first-network) does the same thing, that we should simply remove the behave verify step in CI","username":"cbf","ts":"2018-01-11T20:06:00.223Z"}
{"msg":"Has joined the channel.","username":"sykesm","ts":"2018-01-11T20:06:00.586Z","type":"uj"}
{"msg":"There are some holes, especially around multi-sig config updates which the behave covers, but which the e2e cli does not.  I'd suggest that we try to identifies any such things and port them into the e2e.","username":"jyellick","ts":"2018-01-11T20:07:31.600Z"}
{"msg":"There are some holes, especially around multi-sig config updates which the behave covers, but which the e2e cli does not.  I'd suggest that we try to identify any such things and port them into the e2e.","username":"jyellick","ts":"2018-01-11T20:07:31.600Z"}
{"msg":"FWIW i've never seen a bug that behave caught that wasn't caught in golang UTs or e2e","username":"yacovm","ts":"2018-01-11T20:07:59.568Z"}
{"msg":"they can be ported to the integration tests (fabric-test repo) that get run nightly","username":"cbf","ts":"2018-01-11T20:08:04.051Z"}
{"msg":"@yacovm yes, that was my and Gari's thinking as well","username":"cbf","ts":"2018-01-11T20:08:31.109Z"}
{"msg":"but to @jyellick point, yes, we can add to first-network","username":"cbf","ts":"2018-01-11T20:09:09.500Z"}
{"msg":"we will likely want to rethink how we handle bdd testing - possibly using ginko or go-behave","username":"cbf","ts":"2018-01-11T20:10:05.710Z"}
{"msg":"so that we don't have the issue of YAPL","username":"cbf","ts":"2018-01-11T20:10:21.896Z"}
{"msg":"Has joined the channel.","username":"latitiah","ts":"2018-01-11T20:26:26.907Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ArnabChatterjee","ts":"2018-01-12T06:02:03.978Z","type":"uj"}
{"msg":"Well no one really understands most of the policy stuff truth be told\n(https://chat.hyperledger.org/channel/fabric-maintainers?msg=tmPGAjEQeWggsqfFe) @muralisr ","username":"mastersingh24","ts":"2018-01-12T18:43:26.988Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=tmPGAjEQeWggsqfFe","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=tmPGAjEQeWggsqfFe","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I think the whole MSP and policy stuff needs \"how to\" documentation","username":"mastersingh24","ts":"2018-01-12T18:43:52.732Z"}
{"msg":"I do think 5664 should likely go in","username":"mastersingh24","ts":"2018-01-12T18:44:12.670Z"}
{"msg":"TBH, \"how to\" and more examples.","username":"JonathanLevi","ts":"2018-01-12T18:49:43.277Z"}
{"msg":"The flexibility is so powerful there, but I know for a fact that many are afraid to \"push the boundaries\" there, and \"walk close to the pavement\"","username":"JonathanLevi","ts":"2018-01-12T18:50:26.177Z"}
{"msg":"The flexibility is so powerful there, but I know for a fact that many are afraid to \"push the boundaries\" there, are afraid to \"stray too far from the sidewalk\"","username":"JonathanLevi","ts":"2018-01-12T18:51:59.831Z"}
{"msg":"The flexibility is so powerful there, but I know for a fact that many are afraid to \"push the boundaries\" or to \"stray too far from the sidewalk\"","username":"JonathanLevi","ts":"2018-01-12T18:51:59.831Z"}
{"msg":"I'd agree that more documentation is definitely needed around policies, especially with respect to examples.  Maybe we can open up some JIRAs for this?","username":"jyellick","ts":"2018-01-12T18:53:49.776Z"}
{"msg":"On an unrelated note.  After some last minute discussion with the authors, as the advocate for https://jira.hyperledger.org/browse/FAB-2005 Identity Mixer, I'm going to propose that we leave it as is -- experimental -- for v1.1.  Although there is an e2e example in review, without SDK support, it is not a compelling story for our users, so I think we should reject the e2e integration of idemix, and release with full support in v1.2.","username":"jyellick","ts":"2018-01-12T18:55:14.905Z"}
{"msg":"Makes sense","username":"yacovm","ts":"2018-01-12T18:55:59.923Z"}
{"msg":"Makes sensem Jason","username":"yacovm","ts":"2018-01-12T18:55:59.923Z"}
{"msg":"Makes sense, Jason","username":"yacovm","ts":"2018-01-12T18:55:59.923Z"}
{"msg":"BTW: I fully agree.","username":"JonathanLevi","ts":"2018-01-12T18:56:00.821Z"}
{"msg":"I haven't had enough time to play with the recent version either... (even though I'm not an official \"Advocate\") - I think this approach will be much better both for Fabric and IdMix.","username":"JonathanLevi","ts":"2018-01-12T18:57:08.534Z"}
{"msg":"We really don't more rounds of asynchronous \"blog wars\". I'd rather play it save (again) and commit to the things that we have all \"battle-\" tested.","username":"JonathanLevi","ts":"2018-01-12T18:58:03.652Z"}
{"msg":"We really don't more rounds of asynchronous \"blog wars\". I'd rather play it safe (again) and commit to the things that we have all \"battle-\" tested.","username":"JonathanLevi","ts":"2018-01-12T18:58:32.628Z"}
{"msg":"blog wars?","username":"yacovm","ts":"2018-01-12T18:59:01.600Z"}
{"msg":"I always thought of them as a 1-sided attack","username":"yacovm","ts":"2018-01-12T18:59:25.538Z"}
{"msg":"*Some* of us [:-)] may recall a few attacks over the \"Channels - for sharing confidential information\"...","username":"JonathanLevi","ts":"2018-01-12T19:00:04.451Z"}
{"msg":"@yacovm Fair point, actually. I/we were mostly defending a misinterpretation.","username":"JonathanLevi","ts":"2018-01-12T19:00:34.372Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=GdJ2MfmcBqCeLKE23","username":"muralisr","ts":"2018-01-12T19:18:52.138Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=GdJ2MfmcBqCeLKE23","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=GdJ2MfmcBqCeLKE23","remote":true,"fileId":null,"fileName":null}]}
{"msg":"had a hangout session with adc on MSP where we discussed what docs and samples woukld be needed to make MSP Role enhancelments easy to use ./ understand","username":"muralisr","ts":"2018-01-12T19:20:15.987Z"}
{"msg":"adc was going to work on getting the docs and readmes for this ... hopefully not later than next week","username":"muralisr","ts":"2018-01-12T19:20:39.207Z"}
{"msg":"I'll continue to work with him on that ","username":"muralisr","ts":"2018-01-12T19:20:55.539Z"}
{"msg":"given that @mastersingh24 @dave.enyeart it may be ok to get that feature in (no one questions the usefulness of that I think ?) ..  I have +1 (but @dave.enyeart please do check with adc if he;ll be more comfortable getting it in next release)","username":"muralisr","ts":"2018-01-12T19:22:11.785Z"}
{"msg":"given that @mastersingh24 @dave.enyeart it may be ok to get that feature in (no one questions the usefulness of that I think ?) ..  +1 from me (but @dave.enyeart please do check with adc if he;ll be more comfortable getting it in next release)","username":"muralisr","ts":"2018-01-12T19:22:11.785Z"}
{"msg":"makes sense @muralisr ","username":"mastersingh24","ts":"2018-01-12T19:23:14.345Z"}
{"msg":"the discussion of using MSP Roles with adc actually nicely dovetailed with the sample I was working on to show case 3621 (resource based ACL) using thos MSP Roles. The sample did work for me (I just was not comfortable with the way I had organized MSPs to get it to work for excercising resource based ACL). So that drove the discussion with adc on docs samples and holes in the current way user species MSPs ... long story short, I feel comfortable with 3621 ... the code path has been excercised for a while with defalt 1.0 behavior and the resource stuff is really a thin veneer on top of the config resource abstraction (especially with the removal of RSCC system chaincode whose work has been subsumed by the policy config code). I believe it has value - opens up ACL mechanisms which is something we are likley to see more and more usage of IMO","username":"muralisr","ts":"2018-01-12T19:30:07.707Z"}
{"msg":"with that, I'd be ok with getting 3621 in also - but leave it to other maintainers to decide","username":"muralisr","ts":"2018-01-12T19:30:39.660Z"}
{"msg":"of course I'll work on docs and samples (hoping to use the MSP Roles once we have adc docs and samples to point to)","username":"muralisr","ts":"2018-01-12T19:32:26.823Z"}
{"msg":"My concern about 3621 is that there have been concerns about the non-endorser based update flow.  Especially from @manish-sethi , and if we are not confident about the tx format for updates, then the experimental flag seems appropriate.","username":"jyellick","ts":"2018-01-12T19:47:16.195Z"}
{"msg":"But Jason - this only enables you to classify the type of identity, no?","username":"yacovm","ts":"2018-01-12T19:50:12.984Z"}
{"msg":"this has nothing to do with deciding the actual enforcement?","username":"yacovm","ts":"2018-01-12T19:50:22.375Z"}
{"msg":"@yacovm You are thinking of 5664 Distinguished MSP Identity Types, not 3621 RBAC","username":"jyellick","ts":"2018-01-12T19:53:36.565Z"}
{"msg":"(Or perhaps I am confused, but I thought 3621 referred to the assorted ACL items which were populated from the resources tree)","username":"jyellick","ts":"2018-01-12T19:54:33.259Z"}
{"msg":"Assuming we feel good about the code/testing/documentation/examples for 5564, I would vote to include it non-experimental","username":"jyellick","ts":"2018-01-12T19:55:42.785Z"}
{"msg":"oh oops","username":"yacovm","ts":"2018-01-12T19:55:48.051Z"}
{"msg":"mixed them up.","username":"yacovm","ts":"2018-01-12T19:56:01.474Z"}
{"msg":"` and if we are not confident about the tx format for updates, then the experimental flag seems appropriate.` - agreed","username":"muralisr","ts":"2018-01-12T19:57:48.314Z"}
{"msg":"@jyellick  ` and if we are not confident about the tx format for updates, then the experimental flag seems appropriate.` - agreed","username":"muralisr","ts":"2018-01-12T19:57:48.314Z"}
{"msg":"I was assuming that the codepath for update is something that is handled uniformly by the common config update code","username":"muralisr","ts":"2018-01-12T19:59:04.663Z"}
{"msg":"is that not true ?","username":"muralisr","ts":"2018-01-12T19:59:08.791Z"}
{"msg":"It is a new transaction type RESOURCE_UPDATE","username":"jyellick","ts":"2018-01-12T19:59:19.531Z"}
{"msg":"It is a new transaction type PEER_RESOURCE_UPDATE","username":"jyellick","ts":"2018-01-12T19:59:19.531Z"}
{"msg":"But which uses the common config update code in implementation","username":"jyellick","ts":"2018-01-12T19:59:42.617Z"}
{"msg":"right","username":"muralisr","ts":"2018-01-12T19:59:47.884Z"}
{"msg":"so the concern is we have not tried it out to make sure it works ?","username":"muralisr","ts":"2018-01-12T20:00:00.583Z"}
{"msg":"I will let @manish-sethi express himself, but he would rather see this implemented in the peer state DB","username":"jyellick","ts":"2018-01-12T20:00:10.652Z"}
{"msg":"or is there a deeper concern ?","username":"muralisr","ts":"2018-01-12T20:00:12.139Z"}
{"msg":"Basically, the channel config implements its own simple (and less powerful) MVCC over the assorted keys","username":"jyellick","ts":"2018-01-12T20:00:52.923Z"}
{"msg":"Which does not lend itself well to parallelism, and duplicates what exists in the statedb.  This was necessary for channel config, as the orderer must process it (and has no statedb), but it is a valid question whether this should be the same for the peer and the resources tree.","username":"jyellick","ts":"2018-01-12T20:01:32.969Z"}
{"msg":"yes, my main concern was that we would not want to have two transaction processing techniques with a different semantics and behavior...","username":"manish-sethi","ts":"2018-01-12T20:03:30.264Z"}
{"msg":"let me make sure I understand @manish-sethi  ... is this about not using config tx but using invoke tx ?","username":"muralisr","ts":"2018-01-12T20:04:34.909Z"}
{"msg":"yes, However, I would add that using the endorsement way is more important than invoke.","username":"manish-sethi","ts":"2018-01-12T20:06:56.274Z"}
{"msg":"For instance, it could very well be an explicit APIs but yes, invoke is an obvious way. ","username":"manish-sethi","ts":"2018-01-12T20:08:10.915Z"}
{"msg":"Murali, just pinged on phone and said that he needs to board a flight and will like to continue on this later..","username":"manish-sethi","ts":"2018-01-12T20:17:58.872Z"}
{"msg":"This is a valuable conversation, and I don't meant o derail it, but I thin it demonstrates that:\n\n> we are not confident about the tx format for updates\n\nSo, leave 3621 as experimental?","username":"jyellick","ts":"2018-01-12T20:18:40.378Z"}
{"msg":"This is a valuable conversation, and I don't meant to derail it, but I thin it demonstrates that:\n\n> we are not confident about the tx format for updates\n\nSo, leave 3621 as experimental?","username":"jyellick","ts":"2018-01-12T20:18:40.378Z"}
{"msg":"This is a valuable conversation, and I don't meant to derail it, but I think it demonstrates that:\n\n> we are not confident about the tx format for updates\n\nSo, leave 3621 as experimental?","username":"jyellick","ts":"2018-01-12T20:18:40.378Z"}
{"msg":"yes, I'm ok with that @jyellick ","username":"muralisr","ts":"2018-01-12T20:21:57.063Z"}
{"msg":"but with the endorsement approach we are back to RSCC based approach .... ","username":"muralisr","ts":"2018-01-12T20:22:59.890Z"}
{"msg":"@manish-sethi  we can take this up later but we _do_ have two models - config and endorsment ... if its a \"configuration\" then it makes sense to do it the config way","username":"muralisr","ts":"2018-01-12T20:24:11.328Z"}
{"msg":"I have gotten used to thinking of this as a kind of configuration update","username":"muralisr","ts":"2018-01-12T20:24:47.809Z"}
{"msg":"so have grown used to thinking about that that way ","username":"muralisr","ts":"2018-01-12T20:25:41.993Z"}
{"msg":"doesn't mean its correct ... on the other hand, would need to be convinced that its wrong :-)","username":"muralisr","ts":"2018-01-12T20:26:10.518Z"}
{"msg":"(btw, the plane is delayed a bit... but we certaintly can continue later Manish)","username":"muralisr","ts":"2018-01-12T20:27:05.266Z"}
{"msg":"` my main concern was that we would not want to have two transaction processing techniques with a different semantics and behavior...` - I;d turn this on its head and ask \"what transaction does a resource update that spans the entire peer (as the resources are peer-wide) mean ? And who will have to endorse it ?\"","username":"muralisr","ts":"2018-01-12T20:31:25.528Z"}
{"msg":"` my main concern was that we would not want to have two transaction processing techniques with a different semantics and behavior...` - I;d turn this on its head and ask \"what transaction does a resource update that spans the entire peer (as the resources are channel-wide  ) mean ? And who will have to endorse it ?\"","username":"muralisr","ts":"2018-01-12T20:31:25.528Z"}
{"msg":"Murali, the way I see it is - it is just another dataset that we need to perform CURD operations on and it is channel wise, so would be endorsement policies for this. How is it different than managing the business data?","username":"manish-sethi","ts":"2018-01-12T21:16:05.499Z"}
{"msg":"Murali, the way I see it is - it is just another dataset that we need to perform CURD operations on and it is channel-wide, so would be endorsement policies for this. How is it different than managing the business data?","username":"manish-sethi","ts":"2018-01-12T21:16:05.499Z"}
{"msg":"Murali, the way I see it is - it is just another dataset that we need to perform CRUD operations on and it is channel-wide, so would be endorsement policies for this. How is it different than managing the business data?","username":"manish-sethi","ts":"2018-01-12T21:16:05.499Z"}
{"msg":"@manish-sethi from user perspective - we have a mechanism for managing channel wide config. And that is via channel transactions. I think of Channel resources fits well in that flow path (and fits with the way we currently define policies, msps etc). (Contrast this with the chaincode specific configuraion which we tried to do using config tx which seemed better belong to the TX model you allude to.)  What am I missing ? ","username":"muralisr","ts":"2018-01-13T16:44:39.457Z"}
{"msg":"@manish-sethi from user perspective - we have a mechanism for managing channel wide config. And that is via channel transactions. I think of Channel resources fits well in that flow path (and fits with the way we currently define policies, msps etc). (Contrast this with the chaincode specific configuraion which we tried to do using config tx which seemed better belong to the TX model you allude to. We abandoned the config tx approach for the (future) endorsement policy approach ... a bit earlier on, I cannot resist adding ;-) )  What am I missing ? ","username":"muralisr","ts":"2018-01-13T16:44:39.457Z"}
{"msg":"@manish-sethi from user perspective - we have a mechanism for managing channel wide config. And that is via channel transactions. I think of Channel resources fits well in that flow path (and fits with the way we currently define policies, msps etc). (Contrast this with the chaincode specific configuraion which we tried to do using config tx which seemed better belong to the TX model you allude to. We abandoned the config tx approach for the (future) endorsement policy approach ... a bit earlier on, I cannot resist adding ;-) )  What am I missing ? ","username":"muralisr","ts":"2018-01-13T16:44:39.457Z"}
{"msg":"Feels like you are coming from an implementation perspect (why have two different data models - config tx vs endorsment tx) whereas I'm coming from a user flow perspective (this is a channel wide definition and we shoukd use existing channel tx to define this). ","username":"muralisr","ts":"2018-01-13T16:49:13.648Z"}
{"msg":"@here I emailed all maintainers this morning about the face-to-face meeting at State Street in Boston on 2/05, please check your inbox. Thanks.","username":"binhn","ts":"2018-01-13T17:24:51.188Z"}
{"msg":"Has joined the channel.","username":"yingmsky","ts":"2018-01-15T02:26:39.130Z","type":"uj"}
{"msg":"Has joined the channel.","username":"newlife 1","ts":"2018-01-15T08:49:36.612Z","type":"uj"}
{"msg":"@here Besides the few remainders listed in the 1.1 dashboard https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10701, we have achieved FEATURE FREEZE for 1.1. Maintainers will not merge other features/improvements through the remainder of the release.  Bug fixes, doc updates, and samples are still highly encouraged.  There will be a large focus on fixes, doc, samples, and system test this week, with expectation that alpha is cut next week.","username":"dave.enyeart","ts":"2018-01-15T19:27:49.698Z"}
{"msg":"@here Besides the few remainders listed in the 1.1 dashboard https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10701, we have achieved FEATURE FREEZE for 1.1. Maintainers will not merge other features/improvements through the remainder of the release.  Bug fixes, doc updates, samples, and system test are the priority this week, with expectation that alpha is cut next week.","username":"dave.enyeart","ts":"2018-01-15T19:27:49.698Z"}
{"msg":"@here Besides the few In-Review and SDK remainders listed in the 1.1 dashboard https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10701, we have achieved FEATURE FREEZE for 1.1. Maintainers will not merge other features/improvements through the remainder of the release.  Bug fixes, doc updates, samples, and system test are the priority this week, with expectation that alpha is cut next week.","username":"dave.enyeart","ts":"2018-01-15T19:27:49.698Z"}
{"msg":"@muralisr - Sorry, got occupied in some of the CRs.. To your earlier comment, I think that I am not clear on your division of configuration types well. For instance, when you say 'chaincode specific' - how is different than when you would say an API specific configuration?\nIf you want to discuss this further in detail, we can do it on a direct chat. If you prefer to wait till @jyellick lays out the details for the lifecycle stuff so we have something concrete to discuss further - that would be good.","username":"manish-sethi","ts":"2018-01-16T02:59:38.972Z"}
{"msg":"@manish-sethi  I was not talking about chaincode lifecycle and any configuration that were laid out for that. I was specifically referring to FAB-3621 where resource were defined and configured to control various ACLs for a channel (including a resource used for ACL for Proposal - nothing to do with a chaincode, to drive home the point). My assumption was that we will continue to have channel TX definining configuration for channel and resource for ACL seemed to fit that model.","username":"muralisr","ts":"2018-01-16T03:10:40.300Z"}
{"msg":"But to avoid discussion in vacuo, let's wait for a concrete proposal - there's no urgency now that we have agreed to let this be experimental","username":"muralisr","ts":"2018-01-16T03:12:40.708Z"}
{"msg":"From the above discussions it sounds like the consensus for the Experimental Features in 1.1 is the following:","username":"dave.enyeart","ts":"2018-01-16T11:25:57.686Z"}
{"msg":"@here  From the above discussions it sounds like the consensus for the Experimental Features in 1.1 is the following:","username":"dave.enyeart","ts":"2018-01-16T11:25:57.686Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-1151 Side DB - Dave - Keep Experimental\nhttps://jira.hyperledger.org/browse/FAB-3621 RBAC - Murali - Keep Experimental\nhttps://jira.hyperledger.org/browse/FAB-5664 Distinguish MSP Identity Types - Murali with Angelo - *Promote to production feature*\nhttps://jira.hyperledger.org/browse/FAB-2005 Identity Mixer - Jason with Maria - Keep Experimental\nhttps://jira.hyperledger.org/browse/FAB-1973 Java Chaincode - Keep Experimental","username":"dave.enyeart","ts":"2018-01-16T11:26:17.739Z"}
{"msg":"I discussed FAB-5664 Distinguish MSP Identity Types with @adc.","username":"dave.enyeart","ts":"2018-01-16T11:26:27.440Z"}
{"msg":"I discussed FAB-5664 Distinguish MSP Identity Types with @adc ","username":"dave.enyeart","ts":"2018-01-16T11:26:27.440Z"}
{"msg":"The only remaining part of this one is samples, doc, system test.","username":"dave.enyeart","ts":"2018-01-16T11:26:37.746Z"}
{"msg":"@adc , @muralisr , for system test it would be helpful if you could partner with testers to add system test scenarios in the associated test jira: https://jira.hyperledger.org/browse/FAB-6456 . ","username":"dave.enyeart","ts":"2018-01-16T11:27:57.283Z"}
{"msg":"To help with samples and doc, it would be nice if cryptogen supported OUs.  There is already a CR out for review: https://gerrit.hyperledger.org/r/#/c/15483/","username":"dave.enyeart","ts":"2018-01-16T11:28:06.665Z"}
{"msg":"To help with samples and doc, it would be nice if cryptogen supported OUs.  There is already a CR out for review that Angelo is trying to get in: https://gerrit.hyperledger.org/r/#/c/15483/","username":"dave.enyeart","ts":"2018-01-16T11:28:06.665Z"}
{"msg":"Since it touches no server code and would help with samples/doc/consumability, I’m amenable to it going in as part of the sample work effort.  Thoughts?\n","username":"dave.enyeart","ts":"2018-01-16T11:28:12.630Z"}
{"msg":"I’ve tagged it as review-needed.  Since we are in Feature Freeze I’m thinking we should start following the precedent of 5 votes required to get something in.  Sound good?","username":"dave.enyeart","ts":"2018-01-16T11:28:18.322Z"}
{"msg":"I’ve tagged the associated jira FAB-6986 as review-needed.  Since we are in Feature Freeze I’m thinking we should start following the precedent of 5 votes required to get something in.  Sound good?","username":"dave.enyeart","ts":"2018-01-16T11:28:18.322Z"}
{"msg":"I’ve tagged the associated jira FAB-6986 as review-needed.  Since we are in Feature Freeze I’m thinking we should start following the precedent of 5 votes required to get something that is not a bug merged.  Sound good?","username":"dave.enyeart","ts":"2018-01-16T11:28:18.322Z"}
{"msg":"I’ve tagged the associated jira FAB-6986 as review-needed.  Since we are in Feature Freeze I’m thinking we should start following the precedent of 5 votes required to get something that is not a bug/doc/sample merged.  Sound good?","username":"dave.enyeart","ts":"2018-01-16T11:28:18.322Z"}
{"msg":"On a related note, we also need to document the concept of Experimental features and the Experimental build tag.  I've created FAB-7746, any volunteers?","username":"dave.enyeart","ts":"2018-01-16T12:06:52.367Z"}
{"msg":"On a related note, we also need to document the concept of Experimental features and the Experimental build tag.  I've created FAB-7746 , any volunteers?","username":"dave.enyeart","ts":"2018-01-16T12:06:52.367Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=H4bFWG5YXKC3Hk9XY","username":"muralisr","ts":"2018-01-16T12:28:11.634Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=H4bFWG5YXKC3Hk9XY","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=H4bFWG5YXKC3Hk9XY","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@dave.enyeart ^^^ you got it","username":"muralisr","ts":"2018-01-16T12:28:35.798Z"}
{"msg":"Does this https://gerrit.hyperledger.org/r/#/c/16947/ count as a feature? ","username":"yacovm","ts":"2018-01-18T18:02:54.947Z"}
{"msg":"As it has no affect on the output of the build, I would personally be inclined not to define it as a feature (with respect to our 'feature freeze')","username":"jyellick","ts":"2018-01-18T18:43:55.240Z"}
{"msg":"As it has no effect on the output of the build, I would personally be inclined not to define it as a feature (with respect to our 'feature freeze')","username":"jyellick","ts":"2018-01-18T18:43:55.240Z"}
{"msg":"Agreed, I'm more worried about logic changes, I'm fine with these small improvements.","username":"dave.enyeart","ts":"2018-01-18T19:12:04.391Z"}
{"msg":"Has joined the channel.","username":"Brucepark","ts":"2018-01-20T06:15:16.380Z","type":"uj"}
{"msg":"@here We will checkpoint on Thursday to determine if there is anything that would block cutting a 1.1 alpha release.  Please speak up if you know of any must-fix bug or must-merge CR.  Per the query at https://jira.hyperledger.org/issues/?filter=11901, there are only two highlighted currently.  From discussion with @smithbk , it sounds like we want to get FAB-7812 in, while FAB-7844 could likely be deferred from alpha.","username":"dave.enyeart","ts":"2018-01-25T05:06:42.537Z"}
{"msg":"There is one more doc CR out for review for event deliver and filtering: https://gerrit.hyperledger.org/r/#/c/17139/ .  Although it is not perfect, my opinion is it would be better to merge for alpha and iterate later, rather than to hold it out.  If somebody wants to make edits and post another patch, that would be fine as well.","username":"dave.enyeart","ts":"2018-01-25T05:13:17.046Z"}
{"msg":"And finally there is likely a doc CR around upgrade coming.  Although if it doesn't come in time we could merge post-alpha then point people to the master  readthedocs .","username":"dave.enyeart","ts":"2018-01-25T05:15:12.882Z"}
{"msg":"@jyellick @kostas I discussed with Luis this afternoon, we agreed that the current Kafka 0.10.2.1 in baseimage 0.4.5 would be sufficient for alpha.  Agreed?","username":"dave.enyeart","ts":"2018-01-25T05:30:10.370Z"}
{"msg":"He said he's like to bump up Kafka again soon after alpha","username":"dave.enyeart","ts":"2018-01-25T05:30:49.589Z"}
{"msg":"He said he'd like to bump up Kafka again soon after alpha","username":"dave.enyeart","ts":"2018-01-25T05:30:49.589Z"}
{"msg":"@dave.enyeart I believe a CR was merged earlier today to bump Kafka to v1.0.0","username":"jyellick","ts":"2018-01-25T05:30:59.506Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/17121/","username":"jyellick","ts":"2018-01-25T05:31:16.848Z"}
{"msg":"right, that would be for the next baseimage.  But we can go with current baseimage of 0.4.5 which includes 0.10.2.1.","username":"dave.enyeart","ts":"2018-01-25T05:31:26.796Z"}
{"msg":"right, that would be for the next baseimage.  But we can go with current baseimage of 0.4.5 for alpha, which includes 0.10.2.1.","username":"dave.enyeart","ts":"2018-01-25T05:31:26.796Z"}
{"msg":"https://hub.docker.com/r/hyperledger/fabric-kafka/tags/","username":"dave.enyeart","ts":"2018-01-25T05:33:46.978Z"}
{"msg":"My mistake -- from an alpha perspective, I'd agree with Luis's assessment that the Kafka version is not critical.  If we could publish the alpha on a newer base image, all the better, but Kafka is a stable project, I think the delay is low risk","username":"jyellick","ts":"2018-01-25T05:34:16.801Z"}
{"msg":"we only have about 1 days test experience on 0.4.5.  would rather not reset the clock on testing another baseimage for alpha.","username":"dave.enyeart","ts":"2018-01-25T05:35:10.784Z"}
{"msg":"we only have about 1 days test experience on 0.4.5.  would rather not reset the clock again on testing another baseimage for alpha.","username":"dave.enyeart","ts":"2018-01-25T05:35:10.784Z"}
{"msg":"The lack of test time on 0.4.5 is also an argument that we are not losing much by bumping to a newer version, are there any changes other than Kafka that would be pulled into an 0.4.6 image?","username":"jyellick","ts":"2018-01-25T05:36:59.661Z"}
{"msg":"kafka would be the only change.  i was also concerned about the jump from 0.10.2.1 to 1.0.0 being larger than the prior jumps.","username":"dave.enyeart","ts":"2018-01-25T05:37:44.625Z"}
{"msg":"i.e., would want more than 1 day of test if we jump to 1.0.0.","username":"dave.enyeart","ts":"2018-01-25T05:38:08.008Z"}
{"msg":"let me re-phrase... the ship is set for 0.4.5.  there would have to be a compelling reason to change.","username":"dave.enyeart","ts":"2018-01-25T05:40:28.128Z"}
{"msg":"let me re-phrase... the ship is set for 0.4.5.  there would have to be a compelling reason to change and delay alpha for the required testing.","username":"dave.enyeart","ts":"2018-01-25T05:40:28.128Z"}
{"msg":"I would say bumping the Kafka version is very low risk, and, there are some nice bug fixes that come along if we move to 0.11+.  My inclination would be to include the new Kafka in alpha, but I welcome feedback from @kostas or others.","username":"jyellick","ts":"2018-01-25T05:40:43.099Z"}
{"msg":"(But, since it is low risk, I'm not sure that we lose a lot if we delay until post-alpha)","username":"jyellick","ts":"2018-01-25T05:42:11.257Z"}
{"msg":"refresh my memory on the numbering convention.   1.0.0 vs 0.11+","username":"dave.enyeart","ts":"2018-01-25T05:43:26.887Z"}
{"msg":"@dave.enyeart There is no significant departure or incompatibility between v0.11 and v1.0.0.  The v1.0.0 label I believe is supposed to be more of an indicator that the Kafka maintainers believe Kafka is officially 'stable' and 'enterprise ready'.  https://www.confluent.io/blog/apache-kafka-goes-1-0/ ","username":"jyellick","ts":"2018-01-25T05:48:16.256Z"}
{"msg":"It says \"As you can see, 1.0.0 is a significant release with real enhancements.\"  To me this says, it deserves some test time, and we should not make the update a day before alpha release.  But I am willing to listen to the majority here.","username":"dave.enyeart","ts":"2018-01-25T05:58:03.164Z"}
{"msg":"@dave.enyeart  - from a consumption point of view, Kafka v0.11 and v1.0.0 are equivalent.  v0.11 introduced new features and v1.0.0 was a hardening of v0.11","username":"mastersingh24","ts":"2018-01-25T08:22:52.090Z"}
{"msg":"So if we are going to move from 0.10.2.x, we should make the jump to 1.0.0 rather than 0.11","username":"mastersingh24","ts":"2018-01-25T08:23:39.515Z"}
{"msg":"Ok.  I'll still say the plan of record is to go with 0.10.2.1 using the 0.4.5 base image this week.  Anybody see a problem with that?","username":"dave.enyeart","ts":"2018-01-25T11:58:15.320Z"}
{"msg":"Ok.  I'll still say the plan of record is to go with 0.10.2.1 using the 0.4.5 base image this week.  And then test with 1.0.0 starting next week for inclusion in beta / release candidates. Anybody see a problem with that?","username":"dave.enyeart","ts":"2018-01-25T11:58:15.320Z"}
{"msg":"We could use another +2 on https://gerrit.hyperledger.org/r/#/c/17115/ .  It is harmless per @C0rWin ","username":"dave.enyeart","ts":"2018-01-25T11:59:19.902Z"}
{"msg":"> Ok. I'll still say the plan of record is to go with 0.10.2.1 using the 0.4.5 base image this week. And then test with 1.0.0 starting next week for inclusion in beta / release candidates. Anybody see a problem with that?\n(This sounds like a reasonable strategy to me.)","username":"kostas","ts":"2018-01-25T14:47:23.106Z"}
{"msg":"@dave.enyeart how are we doing?","username":"cbf","ts":"2018-01-25T16:00:47.542Z"}
{"msg":"Ramesh is looking at a change for bootstrap script","username":"dave.enyeart","ts":"2018-01-25T16:02:18.738Z"}
{"msg":"@C0rWin is pushing his event client example readme any minute","username":"dave.enyeart","ts":"2018-01-25T16:02:42.264Z"}
{"msg":"already done","username":"C0rWin","ts":"2018-01-25T16:02:57.853Z"}
{"msg":";)","username":"C0rWin","ts":"2018-01-25T16:02:58.706Z"}
{"msg":"Upgrade doc should come in this afternoon, although we don't necessarily need to wait for that","username":"dave.enyeart","ts":"2018-01-25T16:02:59.543Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Foew4Ja7XiJAovALJ) @dave.enyeart https://gerrit.hyperledger.org/r/#/c/16919/","username":"C0rWin","ts":"2018-01-25T16:03:38.427Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Foew4Ja7XiJAovALJ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Foew4Ja7XiJAovALJ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I propose for readthedocs that we NOT push a 1.1.0-alpha release, rather we simply point people to master readthedocs so that we can keep iterating and allow people to see the latest.  What do you think @cbf @mastersingh24 ","username":"dave.enyeart","ts":"2018-01-25T16:04:07.796Z"}
{"msg":"that scares me a little since we'll be churning some of the docs","username":"cbf","ts":"2018-01-25T16:05:23.350Z"}
{"msg":"Finally, we need to levelset on Node and Java SDK release activities, especially considering that we haven't been able to get a hold of @jimthematrix ","username":"dave.enyeart","ts":"2018-01-25T16:05:28.754Z"}
{"msg":"mixing md and rst","username":"cbf","ts":"2018-01-25T16:05:35.692Z"}
{"msg":"refactoring the toc","username":"cbf","ts":"2018-01-25T16:05:40.473Z"}
{"msg":"etc","username":"cbf","ts":"2018-01-25T16:05:41.234Z"}
{"msg":"ok, so if we want to point people to 1.1.0-alpha readthedocs, it would be good to get Joe's upgrade doc in later today","username":"dave.enyeart","ts":"2018-01-25T16:06:13.415Z"}
{"msg":"ok, so if we want to point people to 1.1.0-alpha readthedocs, it would be good to get Joe's upgrade doc in later today before cutting fabric","username":"dave.enyeart","ts":"2018-01-25T16:06:13.415Z"}
{"msg":"And the LAST bug that we are waiting for is in CI currently: https://gerrit.hyperledger.org/r/#/c/17107/","username":"dave.enyeart","ts":"2018-01-25T16:07:50.543Z"}
{"msg":"+1","username":"cbf","ts":"2018-01-25T16:18:55.906Z"}
{"msg":"also, I just realized I started on FAB-7782 and asked you to provide the prose...","username":"cbf","ts":"2018-01-25T16:19:14.097Z"}
{"msg":"I can check in what I have and you can pick up from there, ok?","username":"cbf","ts":"2018-01-25T16:19:29.786Z"}
{"msg":"@dave.enyeart https://gerrit.hyperledger.org/r/17183 ","username":"cbf","ts":"2018-01-25T16:22:03.541Z"}
{"msg":"Sure, i haven't done that before, so let me know any tips","username":"dave.enyeart","ts":"2018-01-25T16:23:32.227Z"}
{"msg":"@here  I've pushed 1.1 release notes : https://gerrit.hyperledger.org/r/#/c/17183/2/release_notes/v1.1.0-alpha.txt","username":"dave.enyeart","ts":"2018-01-25T16:23:32.227Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/17155/\n\n^ I'd also like to propose that we make sure this one gets in for alpha.  Presently, if someone upgrades their orderer docker image but does not upgrade their Kafka (or override the default version in the config), the only failure sign in the log they see is a debug level message:\n\n```kafka: error while consuming 0x42027c0f0.channel/0: kafka: insufficient data to decode package, more bytes expected```\n\nThe above CR adds an informative critical level log message about the underlying problem.  Without it, I think we are going to spend a lot of time fielding questions as people try to debug.","username":"jyellick","ts":"2018-01-25T16:49:06.424Z"}
{"msg":"Any other features to highlight?","username":"dave.enyeart","ts":"2018-01-25T18:39:27.296Z"}
{"msg":"I'm thinking for next release we should list out other improvements beyond features.  If we keep Jira clean we can simply use the Jira Epics/Features to build the feature list, and the Jira Improvements to build the improvement list. ","username":"dave.enyeart","ts":"2018-01-25T18:43:41.787Z"}
{"msg":"@kostas @jyellick would Fabric 1.0.5 work using Kafka 0.10.2.1?  I'm asking because with the proposed bootsrap.sh in https://gerrit.hyperledger.org/r/#/c/17181/ , if you don't pass a Fabric version, it would give you 1.0.5 binaries and 1.0.5 peer/orderer/ca images, but give you the latest kafka (0.10.2.1) tagged with baseimage 0.4.5.","username":"dave.enyeart","ts":"2018-01-25T19:07:17.430Z"}
{"msg":"Given the way we tag 3rd parties images now, we may need to go back to a versioned bootstrap.sh approach, to ensure we get all the right levels.","username":"dave.enyeart","ts":"2018-01-25T19:08:03.659Z"}
{"msg":"@dave.enyeart Yes, Fabric v1.0.5 should work with any Kafka version > 0.9.0.1","username":"jyellick","ts":"2018-01-25T19:08:04.266Z"}
{"msg":"@dave.enyeart Yes, Fabric v1.0.5 should work with any Kafka version >= 0.9.0.1","username":"jyellick","ts":"2018-01-25T19:08:04.266Z"}
{"msg":"The `orderer.yaml` file specifies a `Kafka.Version`, this indicates the version of the wire protocols to speak.  Newer versions of Kafka understand the older protocol versions (though there might be some minor performance degradation)","username":"jyellick","ts":"2018-01-25T19:08:54.347Z"}
{"msg":"@mastersingh24 what do you think of the proposed bootstrap.sh?","username":"dave.enyeart","ts":"2018-01-25T19:09:45.972Z"}
{"msg":"Alpha release update\n- Need to close out the bootstrap.sh discussion above.  I think what Ramesh has in https://gerrit.hyperledger.org/r/#/c/17181/ is workable for alpha, but will likely need to change post-alpha.\n- Upgrade doc will be pushed soon.  TLS doc is hopeful for later this afternoon, but we won’t necessarily wait for it.\n- Will has just pushed a couple edits to the event example readme https://gerrit.hyperledger.org/r/#/c/16919/ . Please review/merge.\n- Besides the above, we are in MERGE FREEZE for Fabric.\n- A couple final SDK CRs coming in tonight (Saad and China).\n- Can likely start cutting Fabric tonight, and then finish out SDKs tomorrow.","username":"dave.enyeart","ts":"2018-01-25T21:00:18.763Z"}
{"msg":"Let's shift discussion to #fabric-release , I will post the same there.","username":"dave.enyeart","ts":"2018-01-25T21:01:00.252Z"}
{"msg":"@here Upgrade doc is posted, please help to review: https://gerrit.hyperledger.org/r/#/c/17223/","username":"dave.enyeart","ts":"2018-01-25T21:51:48.601Z"}
{"msg":"@here TLS doc is posted, please help to review: https://gerrit.hyperledger.org/r/#/c/17229/","username":"dave.enyeart","ts":"2018-01-25T22:15:17.791Z"}
{"msg":"@here Need one more +2 on event example and readme: https://gerrit.hyperledger.org/r/#/c/16919/","username":"dave.enyeart","ts":"2018-01-25T22:55:23.909Z"}
{"msg":"there will be rolling outages to infra Monday. Please see: https://lists.hyperledger.org/pipermail/hyperledger-tsc/2018-January/001360.html this means Jenkins will be in shutdown mode until the queue is drained","username":"rjones","ts":"2018-01-25T23:20:47.461Z"}
{"msg":"there will be rolling outages to infra in tommorrow. Please see: https://lists.hyperledger.org/pipermail/hyperledger-tsc/2018-January/001359.html this means Jenkins will be in shutdown mode until the queue is drained","username":"rjones","ts":"2018-01-25T23:20:47.461Z"}
{"msg":"Reviewed both @dave.enyeart ","username":"yacovm","ts":"2018-01-25T23:24:16.618Z"}
{"msg":"ok, here's where we are:","username":"dave.enyeart","ts":"2018-01-26T01:43:29.324Z"}
{"msg":"Joe is doing one final patch to address kostas comments: https://gerrit.hyperledger.org/r/#/c/17223","username":"dave.enyeart","ts":"2018-01-26T01:44:01.960Z"}
{"msg":"Upgrade doc: Joe is doing one final patch to address kostas comments: https://gerrit.hyperledger.org/r/#/c/17223","username":"dave.enyeart","ts":"2018-01-26T01:44:01.960Z"}
{"msg":"Upgrade doc: Joe addressed kostas comments, needs a final +2 and merge please: https://gerrit.hyperledger.org/r/#/c/17223","username":"dave.enyeart","ts":"2018-01-26T01:44:01.960Z"}
{"msg":"Upgrade doc: Joe addressed @kostas  comments, needs a final +2 and merge please: https://gerrit.hyperledger.org/r/#/c/17223","username":"dave.enyeart","ts":"2018-01-26T01:44:01.960Z"}
{"msg":"TLS: https://gerrit.hyperledger.org/r/#/c/17229 . I don’t think we are going to resolve the review comments tonight. I would propose merge as is so that we have a starting point for alpha that can be iterated on post-alpha.  Or does somebody want to attempt another patch tonight?","username":"dave.enyeart","ts":"2018-01-26T01:44:42.561Z"}
{"msg":"TLS doc: https://gerrit.hyperledger.org/r/#/c/17229 . I don’t think we are going to resolve the review comments tonight. I would propose merge as is so that we have a starting point for alpha that can be iterated on post-alpha.  Or does somebody want to attempt another patch tonight?","username":"dave.enyeart","ts":"2018-01-26T01:44:42.561Z"}
{"msg":"TLS doc: https://gerrit.hyperledger.org/r/#/c/17229 . I don’t think we are going to resolve the review comments tonight. I think the document is a good start on a previously missing topic.  I would propose merge as is so that we have a starting point for alpha that can be iterated on post-alpha.  Or does somebody want to attempt another patch tonight?","username":"dave.enyeart","ts":"2018-01-26T01:44:42.561Z"}
{"msg":"TLS doc: https://gerrit.hyperledger.org/r/#/c/17229 . I don’t think we are going to resolve the review comments tonight. I think the document is a good start on a previously missing topic.  I would propose merge as is so that we have a starting point for alpha that can be iterated on post-alpha.  Needs a final +2.","username":"dave.enyeart","ts":"2018-01-26T01:44:42.561Z"}
{"msg":"Event example and readme: https://gerrit.hyperledger.org/r/#/c/16919/ . Ready to merge.","username":"dave.enyeart","ts":"2018-01-26T01:46:07.326Z"}
{"msg":"Event example and readme: https://gerrit.hyperledger.org/r/#/c/16919/ . Merged","username":"dave.enyeart","ts":"2018-01-26T01:46:07.326Z"}
{"msg":"@here Gari volunteered to take a final pass at the TLS doc.  We still need a final +2 on the upgrade doc please: https://gerrit.hyperledger.org/r/#/c/17223","username":"dave.enyeart","ts":"2018-01-26T12:51:55.536Z"}
{"msg":"@here Gari volunteered to take a final pass at the TLS doc. ","username":"dave.enyeart","ts":"2018-01-26T12:51:55.536Z"}
{"msg":"We still need a final +2 on the upgrade doc please.  It doesn't have to be perfect for alpha, I think it  sufficiently conveys the upgrade concepts which was the main objective for alpha: https://gerrit.hyperledger.org/r/#/c/17223","username":"dave.enyeart","ts":"2018-01-26T12:55:12.990Z"}
{"msg":"Ok, TLS and Upgrade doc both merged now.  @cbf and I will cut alpha release today.","username":"dave.enyeart","ts":"2018-01-26T13:47:45.332Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-release?msg=iQ5jkGZBhq4cz5sYg","username":"cbf","ts":"2018-01-26T15:37:31.881Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-release?msg=iQ5jkGZBhq4cz5sYg","url":"https://chat.hyperledger.org/channel/fabric-release?msg=iQ5jkGZBhq4cz5sYg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"And please don't +2 or merge anything for release unless you are asked.  @cbf  and I will +2 and merge everything as we go through the prescribed sequence.","username":"dave.enyeart","ts":"2018-01-26T15:53:45.215Z"}
{"msg":"And we are documenting the steps in more detail than ever in Jira as we go.","username":"dave.enyeart","ts":"2018-01-26T15:54:58.271Z"}
{"msg":"And we are documenting the steps in more detail than ever in Jira as we go, so that subsequent releases go smoothly.","username":"dave.enyeart","ts":"2018-01-26T15:54:58.271Z"}
{"msg":"Has left the channel.","username":"Dan","ts":"2018-01-26T22:25:31.850Z","type":"ul"}
{"msg":"@here  Hyperledger Fabric v1.1.0-alpha is now available! See the mailing list announcement for all the details:\nhttps://lists.hyperledger.org/pipermail/hyperledger-fabric/2018-January/002732.html","username":"dave.enyeart","ts":"2018-01-27T01:42:16.764Z"}
{"msg":"yay, thanks @dave.enyeart ","username":"cbf","ts":"2018-01-27T01:49:24.963Z"}
{"msg":"and thanks for driving the release cutting @cbf !","username":"dave.enyeart","ts":"2018-01-27T01:50:03.739Z"}
{"msg":"MERGE FREEZE over.  Let's take defects down and increase test coverage!  1.1 here we come!","username":"dave.enyeart","ts":"2018-01-27T01:53:03.839Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=e87YuFQZQDRzdKCXo","username":"kostas","ts":"2018-01-29T21:23:52.470Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=e87YuFQZQDRzdKCXo","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=e87YuFQZQDRzdKCXo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Link for this if you have it handy?","username":"kostas","ts":"2018-01-29T21:24:01.412Z"}
{"msg":"Link for this if you have it handy? (I assume it's: https://jira.hyperledger.org/browse/FAB-7780)","username":"kostas","ts":"2018-01-29T21:24:01.412Z"}
{"msg":"@kostas Yes that Jira for cutting the release has 20 subtasks, each including instructions for the release cutter. The Jira is cloned for each release cut (subtasks get cloned with it).  And the following document from Ramesh includes more information about what is happening behind the scenes: https://docs.google.com/document/d/12IpQnREUoJEUj2pF2z-0Up55geItFd94fcsbAkPacTg/edit#","username":"dave.enyeart","ts":"2018-01-29T23:09:39.263Z"}
{"msg":"hey guys, isnt there a place to download cryptogen binaries?","username":"greg.haskins","ts":"2018-01-31T16:29:48.795Z"}
{"msg":"i cant recall where it is: was looking in fabric/releases","username":"greg.haskins","ts":"2018-01-31T16:30:02.861Z"}
{"msg":"@greg.haskins If you follow the instructions here it will download the binaries including cryptogen:","username":"dave.enyeart","ts":"2018-01-31T17:45:50.860Z"}
{"msg":"http://hyperledger-fabric.readthedocs.io/en/v1.1.0-alpha/samples.html#download-platform-specific-binaries","username":"dave.enyeart","ts":"2018-01-31T17:45:57.196Z"}
{"msg":"What it is doing is running the script here:","username":"dave.enyeart","ts":"2018-01-31T17:46:01.519Z"}
{"msg":"https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh","username":"dave.enyeart","ts":"2018-01-31T17:46:06.075Z"}
{"msg":"Which pulls the binaries tar for your platform, e.g.:","username":"dave.enyeart","ts":"2018-01-31T17:46:10.434Z"}
{"msg":"https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/darwin-amd64-1.1.0-alpha/hyperledger-fabric-darwin-amd64-1.1.0-alpha.tar.gz","username":"dave.enyeart","ts":"2018-01-31T17:46:14.940Z"}
{"msg":"So you could skip to that last step if you just want cryptogen :)","username":"dave.enyeart","ts":"2018-01-31T17:46:30.410Z"}
{"msg":"@dave.enyeart ty","username":"greg.haskins","ts":"2018-01-31T18:46:56.624Z"}
{"msg":"I've put several easy reviews in #fabric-pr-review  .  Let's try to make progress on review backlog so that we're not merging a bunch in the last week of 1.1.  There is still a decent amount of system test happening in the weeks ahead, so better to get these small fixes in now, before system test gets too far along.","username":"dave.enyeart","ts":"2018-01-31T19:26:03.529Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-6986 and it's CR https://gerrit.hyperledger.org/r/#/c/15483/ is a small cryptogen enhancement that will help explain our OU support via samples.  Although we are in feature freeze, this is a small one and low risk since it is in tooling.  I've upvoted it for inclusion in 1.1.  Other's thoughts?","username":"dave.enyeart","ts":"2018-02-01T18:02:26.309Z"}
{"msg":"Additionally, @jyellick is proposing some small updates to configtxlator to simplify upgrade (and upgrade is arguably in dire need of simplification): https://jira.hyperledger.org/browse/FAB-7999","username":"dave.enyeart","ts":"2018-02-01T18:23:54.099Z"}
{"msg":"Additionally, @jyellick is proposing some small updates to configtxlator to simplify upgrade (and upgrade is arguably in need of simplification that we can provide): https://jira.hyperledger.org/browse/FAB-7999","username":"dave.enyeart","ts":"2018-02-01T18:23:54.099Z"}
{"msg":"Additionally, @jyellick is proposing some small updates to configtxlator to simplify upgrade (and upgrade is arguably in need of any simplification that we can provide): https://jira.hyperledger.org/browse/FAB-7999","username":"dave.enyeart","ts":"2018-02-01T18:23:54.099Z"}
{"msg":"Additionally, @jyellick is proposing some small updates to configtxlator to simplify upgrade (and upgrade is arguably in need of any simplification that we can provide): https://jira.hyperledger.org/browse/FAB-7999 .  The CRs are quite small: https://gerrit.hyperledger.org/r/#/c/17447/ and https://gerrit.hyperledger.org/r/#/c/17449/ .","username":"dave.enyeart","ts":"2018-02-01T18:23:54.099Z"}
{"msg":"Additionally, @jyellick is proposing some small updates to configtxlator to simplify upgrade (and upgrade is arguably in need of any simplification that we can provide): https://jira.hyperledger.org/browse/FAB-7999 .  The CRs are quite small and there is already a system test plan around them, so I'd say let's merge: https://gerrit.hyperledger.org/r/#/c/17447/ and https://gerrit.hyperledger.org/r/#/c/17449/ .","username":"dave.enyeart","ts":"2018-02-01T18:23:54.099Z"}
{"msg":"Additionally, @jyellick is proposing some small updates to configtxlator to simplify upgrade (and upgrade is arguably in need of any simplification that we can provide): https://jira.hyperledger.org/browse/FAB-7999 .  The CRs are quite small and there is already a system test and doc plan around them as part of the upgrade focus, so I'd say let's merge: https://gerrit.hyperledger.org/r/#/c/17447/ and https://gerrit.hyperledger.org/r/#/c/17449/ .","username":"dave.enyeart","ts":"2018-02-01T18:23:54.099Z"}
{"msg":"@dave.enyeart I support https://jira.hyperledger.org/browse/FAB-6986 and it's CR https://gerrit.hyperledger.org/r/#/c/15483 in principle. It will be useful for users using https://jira.hyperledger.org/browse/FAB-5664 I think. ","username":"muralisr","ts":"2018-02-02T02:11:39.252Z"}
{"msg":"+1 for https://jira.hyperledger.org/browse/FAB-7999 too","username":"muralisr","ts":"2018-02-02T02:13:24.001Z"}
{"msg":"@dave.enyeart  - I don't support 6986 - it's too complex ... I have been out for a bit, but I can show a much simpler solution","username":"mastersingh24","ts":"2018-02-02T11:38:23.277Z"}
{"msg":"Ok.  There are 5 maintainers in favor of FAB-7999.   https://gerrit.hyperledger.org/r/#/c/17447 and https://gerrit.hyperledger.org/r/#/c/17449 can be merged.","username":"dave.enyeart","ts":"2018-02-02T12:11:53.587Z"}
{"msg":"Ok.  There are 5 maintainers in favor of FAB-7999.   https://gerrit.hyperledger.org/r/#/c/17447 and https://gerrit.hyperledger.org/r/#/c/17449 are merged.","username":"dave.enyeart","ts":"2018-02-02T12:11:53.587Z"}
{"msg":"@mastersingh24 I'd suggest respond back to 6986 or https://gerrit.hyperledger.org/r/#/c/15483 with your thoughts.  Angelo has freed up starting today to work on the OU samples, any guidance would be appreciated.","username":"dave.enyeart","ts":"2018-02-02T12:33:59.482Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=K3pTnE57uqFWxWKhP","username":"muralisr","ts":"2018-02-02T14:50:09.706Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=K3pTnE57uqFWxWKhP","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=K3pTnE57uqFWxWKhP","remote":true,"fileId":null,"fileName":null}]}
{"msg":"right @mastersingh24 ..that's the reason for the \"in principle\" ... I remembered your reservations","username":"muralisr","ts":"2018-02-02T14:50:38.187Z"}
{"msg":"if we can have some support for OUs, it'll be good","username":"muralisr","ts":"2018-02-02T14:51:30.251Z"}
{"msg":"@dave.enyeart was just reviewing: https://jira.hyperledger.org/browse/FAB-7999","username":"greg.haskins","ts":"2018-02-03T15:34:48.371Z"}
{"msg":"I seem to lack the ability to vote on it","username":"greg.haskins","ts":"2018-02-03T15:35:00.903Z"}
{"msg":"because its done?","username":"greg.haskins","ts":"2018-02-03T15:35:13.101Z"}
{"msg":"@greg.haskins Yes we got the required upvotes (4 + maintainer reporter = 5). It has been merged and Done items can no longer be upvoted.","username":"dave.enyeart","ts":"2018-02-03T16:26:34.286Z"}
{"msg":"@dave.enyeart roger","username":"greg.haskins","ts":"2018-02-03T16:28:57.406Z"}
{"msg":"Are we broadcasting the maintainers' \"summit\" ?","username":"JonathanLevi","ts":"2018-02-05T14:35:35.219Z"}
{"msg":"Unfortunately, I can't join you....","username":"JonathanLevi","ts":"2018-02-05T14:35:47.202Z"}
{"msg":"also wondering ","username":"yacovm","ts":"2018-02-05T14:36:08.759Z"}
{"msg":">  Are we broadcasting the maintainers' \"summit\" ? \nalso wondering ","username":"yacovm","ts":"2018-02-05T14:36:08.759Z"}
{"msg":"or, if someone is taking notes, etc.","username":"yacovm","ts":"2018-02-05T14:36:34.176Z"}
{"msg":"I believe that *hearing* these convos will be a lot more fun ;-)","username":"JonathanLevi","ts":"2018-02-05T14:39:37.206Z"}
{"msg":"I'm *sure* we will get the notes afterwards, one way or another...","username":"JonathanLevi","ts":"2018-02-05T14:40:04.329Z"}
{"msg":"Has joined the channel.","username":"janb87","ts":"2018-02-05T15:04:02.382Z","type":"uj"}
{"msg":"@JonathanLevi There is definitely diligent note taking going on, I will ask the room about opening a line","username":"jyellick","ts":"2018-02-05T20:46:10.750Z"}
{"msg":"Thank you Jason","username":"JonathanLevi","ts":"2018-02-05T20:46:28.109Z"}
{"msg":"@JonathanLevi I have dm-ed you a number","username":"jyellick","ts":"2018-02-05T20:50:15.745Z"}
{"msg":"Has joined the channel.","username":"minollo","ts":"2018-02-05T21:42:41.865Z","type":"uj"}
{"msg":"Need another +2: https://gerrit.hyperledger.org/r/#/c/17897/ upgrade nodejs version to v8.9.4 ","username":"dave.enyeart","ts":"2018-02-14T14:24:21.684Z"}
{"msg":"After that is merged, we'll be able to release baseimage 0.4.6: https://jira.hyperledger.org/browse/FAB-8266","username":"dave.enyeart","ts":"2018-02-14T14:24:51.712Z"}
{"msg":"Which needs to be done as soon as possible, so that kafka 1.0.0 gets pulled into system testing","username":"dave.enyeart","ts":"2018-02-14T14:25:20.333Z"}
{"msg":"I triaged the full set of defects again. Merged/Closed/Deferred about 10 of them. For the remainders I ensured there was somebody tagged for next steps. Many of them could be deferred to 1.2, but I'd like the assignee to provide their opinion.\nIf I've tagged your name please try to provide an update by end of week, so that we can discuss final deferrals next week.  \nHere is the current defer list: https://jira.hyperledger.org/issues/?filter=12002 I'd encourage everybody to review and if you see any must-fix or should-fix for 1.1 please update Fix Version to be 1.1 and provide a comment. @scottz please share the list with the testers. @simsc please share the list with support teams.","username":"dave.enyeart","ts":"2018-02-14T19:29:26.247Z"}
{"msg":"I triaged the full set of defects again. Merged/Closed/Deferred about 10 of them. For the remainders I ensured there was somebody tagged for next steps. Many of them could be deferred to 1.2, but I'd like the assignee to provide their opinion.\nIf I've tagged your name please try to provide an update by end of week, so that we can discuss final deferrals next week.  \nHere is the current defer list: https://jira.hyperledger.org/issues/?filter=12002 I'd encourage everybody to review and if you see any must-fix or should-fix for 1.1 please update Fix Version to be 1.1 and provide a comment.","username":"dave.enyeart","ts":"2018-02-14T19:29:26.247Z"}
{"msg":"Has left the channel.","username":"daveryIBM","ts":"2018-02-15T14:02:08.302Z","type":"ul"}
{"msg":"@here We are not on pace to release 1.1 given the backlog of CRs that need review.  There is a lot of doc activity going on that is not getting maintainer review.  In your ample time fri/sat/sun please catch up on CR reviews.","username":"dave.enyeart","ts":"2018-02-16T14:52:09.746Z"}
{"msg":"@here We are not on pace to release 1.1 given the backlog of CRs that need review.  There is a lot of doc activity going on that is not getting maintainer review.  In your less-distracted time fri/sat/sun please catch up on CR reviews.  Let's also go through the older ones and either abandon or comment that they should be targeted for 1.1 vs 1.2.","username":"dave.enyeart","ts":"2018-02-16T14:52:09.746Z"}
{"msg":"Has joined the channel.","username":"kapilAtrey","ts":"2018-02-16T14:55:43.351Z","type":"uj"}
{"msg":"@dave.enyeart I have a couple...was planning to clear by monday","username":"muralisr","ts":"2018-02-16T14:57:28.418Z"}
{"msg":"We know that we need to invest in serviceability, operational metric gathering, etc.  At a bare minimum I think we must have ability to dump stack trace in order to troubleshoot a hung peer in production environments.  It seems this would be important on the risk vs reward scale, even as a late breaking 1.1 capability.","username":"dave.enyeart","ts":"2018-02-16T15:36:29.363Z"}
{"msg":"Please provide your thoughts in : https://jira.hyperledger.org/browse/FAB-8335","username":"dave.enyeart","ts":"2018-02-16T15:36:37.508Z"}
{"msg":"Thanks @yacov for raising it.","username":"dave.enyeart","ts":"2018-02-16T15:37:03.537Z"}
{"msg":"Thanks @yacovm  for raising it.","username":"dave.enyeart","ts":"2018-02-16T15:37:03.537Z"}
{"msg":"Has joined the channel.","username":"tmciver","ts":"2018-02-16T20:43:47.970Z","type":"uj"}
{"msg":"Has joined the channel.","username":"inatatsu","ts":"2018-02-20T08:25:31.275Z","type":"uj"}
{"msg":"I think we need to make some decisions about our support stance for deploying HLF natively/on bare metal.\n\nIn particular, if users deploy using our docker images, then they get not only the correct binaries for the processes, but they also get updated base configuration files for those binaries, such as `orderer.yaml` and `core.yaml`.  From a viper perspective, it's fairly imperative that these files are kept up to date.  If a variable is not present in the yaml file, then it cannot be overridden in the environment, and it is a support nightmare if we cannot rely on env overrides to affect configuration.\n\nFor v1.1, `orderer.yaml` has a total of 40 new lines, including 6 new variables.  For `core.yaml` the total is 240 new lines, including 35 new variables.  This excludes the nesting structure required for these new variables, as well as the inline documentation, and changed defaults.  I've been assigned https://jira.hyperledger.org/browse/FAB-8013 to document these changes, and if the documentation task is instruct the user to add all of these new variables to their existing config, I think it is a hopeless one.\n\nIn order to migrate to v1.1, the only real viable solution I see, is to start with the new config file, and port any changes made in the old one, to the new one.  However, we do not include the config files in our release artifacts.\n\nSo the question to me is: Do we support native deployments?  If so, then I think we must provide a mechanism for users to get the config artifacts as well as the binaries for a release.  If not, then we should probably update our docs to exclude the native upgrade path.\n\nThoughts?","username":"jyellick","ts":"2018-02-21T19:53:45.455Z"}
{"msg":"the number of lines is irrelevant as they as mostly comments, and the number of new variables is also irrelevant if most of them are configured to recommended values.","username":"yacovm","ts":"2018-02-21T20:07:13.422Z"}
{"msg":"do we really need to change these new variables? I'm sure most of them are simply tunable values that shouldn't be messed with unless the deployer knows what he's doing","username":"yacovm","ts":"2018-02-21T20:08:00.649Z"}
{"msg":"> and if the documentation task is instruct the user to add all of these new variables to their existing config, I think it is a hopeless one.\nYou can just do a diff and add the new values from the new version into your existing file, what's the problem?","username":"yacovm","ts":"2018-02-21T20:08:48.097Z"}
{"msg":"> In order to migrate to v1.1, the only real viable solution I see, is to start with the new config file, and port any changes made in the old one, to the new one.\nCan you elaborate? ","username":"yacovm","ts":"2018-02-21T20:09:51.633Z"}
{"msg":"> So the question to me is: Do we support native deployments? \nI still don't understand the issue here. Is it the config change that the user needs to tailor manually?","username":"yacovm","ts":"2018-02-21T20:10:40.815Z"}
{"msg":"> You can just do a diff and add the new values from the new version into your existing file, what's the problem?\n\nThis would be my recommendation, that will suggest a user merge the config with diff, rather than attempting to document the individual insertions.\n\n> Can you elaborate?\n\nJust as you described, tell them they should use the new config file, and merge it with their old via a tool like diff.\n\n> I still don't understand the issue here. Is it the config change that the user needs to tailor manually?\n\nThe key piece is that viper env variable overrides only work if the variable is already defined in the yaml","username":"jyellick","ts":"2018-02-21T20:34:23.751Z"}
{"msg":"If a user does not add a new section to the yaml, and then they see a doc, tutorial, etc. which overrides the variable through the environment, then the override will have no effect","username":"jyellick","ts":"2018-02-21T20:34:56.234Z"}
{"msg":"but why would he/she not just in the 1st place use the new config file","username":"yacovm","ts":"2018-02-21T20:35:18.832Z"}
{"msg":"and just change the stuff he/she needs to change to suit his/her environment?","username":"yacovm","ts":"2018-02-21T20:35:41.348Z"}
{"msg":"Because the config file is not part of the release artifacts","username":"jyellick","ts":"2018-02-21T20:35:47.874Z"}
{"msg":"so what?","username":"yacovm","ts":"2018-02-21T20:35:54.947Z"}
{"msg":"oh i see","username":"yacovm","ts":"2018-02-21T20:36:09.195Z"}
{"msg":"I'm suggesting if our answer is \"Use the new config file\" then we need to provide it","username":"jyellick","ts":"2018-02-21T20:36:11.830Z"}
{"msg":"we release only binaries and docker images","username":"yacovm","ts":"2018-02-21T20:36:14.406Z"}
{"msg":"is that it?","username":"yacovm","ts":"2018-02-21T20:36:21.838Z"}
{"msg":"so, we can just write somewhere that the user needs to use the new config version, and merge it, and problem solved no?","username":"yacovm","ts":"2018-02-21T20:36:46.812Z"}
{"msg":"I must say I'm a bit lost in all that \"release\" process thing - many open source software - you just build from source, take the samples from source and modify them.","username":"yacovm","ts":"2018-02-21T20:37:26.893Z"}
{"msg":"so yeah, it's convenient to get release binaries and maybe we should also just declare we also release the config files as well?","username":"yacovm","ts":"2018-02-21T20:38:03.376Z"}
{"msg":"I would suggest that if we are providing binaries, we should be providing the accompanying config files required to use them.  Or, we don't, and people build from source and get the samples.  But where we provide the binary, but not config, it feels inconsistent to me.","username":"jyellick","ts":"2018-02-21T20:38:23.531Z"}
{"msg":"I agree Jason, thanks for raising this point","username":"yacovm","ts":"2018-02-21T20:38:42.219Z"}
{"msg":"but I think we should 100% support \"bare metal\"","username":"yacovm","ts":"2018-02-21T20:38:57.593Z"}
{"msg":"therefore should also provide the config files along with them.","username":"yacovm","ts":"2018-02-21T20:47:14.561Z"}
{"msg":"hmmm","username":"cbf","ts":"2018-02-21T23:40:37.153Z"}
{"msg":"we do ship the peer and orderer binaries - fabric-ca-client and server are installed via go get (not sure that this is the best idea, TBH, since there's no control over versioning)","username":"cbf","ts":"2018-02-21T23:45:36.223Z"}
{"msg":"we also can install binaries on mac via homebrew","username":"cbf","ts":"2018-02-21T23:47:02.456Z"}
{"msg":"seems to me that we should have a consistent approach (#1) and that we need to have an expected location for the config files that isn't in the repo tree","username":"cbf","ts":"2018-02-21T23:47:52.714Z"}
{"msg":"(note that homebrew only installs configtxgen\tconfigtxlator\tcryptogen","username":"cbf","ts":"2018-02-21T23:51:36.249Z"}
{"msg":"homebrew installs in /usr/local/opt/fabric-tools (fwiw) and links to /usr/local/bin","username":"cbf","ts":"2018-02-21T23:58:10.168Z"}
{"msg":"but for those binaries, we specify the config be in the $PWD (or specified via args) ","username":"cbf","ts":"2018-02-21T23:59:53.614Z"}
{"msg":"whatever we choose, we need to make it so that the default config location is consistent in docker as it is for the native binaries","username":"cbf","ts":"2018-02-22T00:00:45.021Z"}
{"msg":"We’ll need to close the above discussion out, any other opinions? @jyellick  could I ask you to summarize the proposal in the jira (FAB-8013).","username":"dave.enyeart","ts":"2018-02-22T12:53:10.537Z"}
{"msg":"On to more general business...","username":"dave.enyeart","ts":"2018-02-22T12:53:17.530Z"}
{"msg":"@here  As you know we have been closely tracking defects, doc, and system test with a goal of releasing RC1 next week.  That goal is tight but within reach, and will likely depend on defect arrival rate over the next days and weekend progress.","username":"dave.enyeart","ts":"2018-02-22T12:54:44.372Z"}
{"msg":"We will need to make decisions about deferrals for remaining defects.  There are currently 26 defects tagged for 1.1 (top right widget at https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10701 ) and 39 defects tagged for deferral (4th widget on right), based on Fix Version field. We will need to get the former down to 0, and this will likely require some group decision making. \n","username":"dave.enyeart","ts":"2018-02-22T12:55:08.456Z"}
{"msg":"I propose a daily maintainer scrum on this channel next week around 9:45am (US Eastern) for release decision making, or whenever the 9:30am community scrum ends. Thoughts?","username":"dave.enyeart","ts":"2018-02-22T12:55:15.476Z"}
{"msg":"Concerning system test, good progress has been made and we will get updates at the 9:30am community scrums. Note that final system test can continue on RC1.  Our policy last time around was that release candidate needed to prove itself for two weeks prior to release GA. We may be able to shrink that window going forward, pending system test progress and automation.","username":"dave.enyeart","ts":"2018-02-22T12:55:23.709Z"}
{"msg":"Can anybody think of other business that is required prior to RC1?  This would be a good time to review/update the release criteria we documented for 1.0 https://wiki.hyperledger.org/projects/fabric/release_exit_criteria . I myself would like clarification on a few items from @cbf (e.g. scans, CII, signed release code, automated release notes).\n","username":"dave.enyeart","ts":"2018-02-22T12:55:31.778Z"}
{"msg":"We already have our CII badge, as for security scans, LF does this for 1.0. I know that IBM is doing its own set of scans, I would encourage other members to do the same.","username":"cbf","ts":"2018-02-22T14:04:15.900Z"}
{"msg":"as for automated release notes, that is something we can work on for 1.2 per the discussions we had in Boston - leveraging JIRA more effectively to enable us to actually generate a report that could become the release notes.","username":"cbf","ts":"2018-02-22T14:05:16.962Z"}
{"msg":"@here just a friendly reminder, if someone picks up a CR from another to address issues, or rebase, then they also need to sign-off on the CR (e.g. 2 or more sign-off lines)","username":"cbf","ts":"2018-02-25T16:19:38.969Z"}
{"msg":"as maintainers, we should be aware and try our best to enforce so that we preserve clean IP","username":"cbf","ts":"2018-02-25T16:20:30.408Z"}
{"msg":"danke","username":"cbf","ts":"2018-02-25T16:20:33.581Z"}
{"msg":"Additionally, I've been operating under the assumption that if you just fix minor things like typos or wording, that it doesn't preclude you from +2ing. Yes, that's a slippery slope, but I have confidence in the maintainers to use their best judgement.","username":"dave.enyeart","ts":"2018-02-25T16:25:16.048Z"}
{"msg":"@cbf thanks for the reminder ^^^ ...  I picked it up https://gerrit.hyperledger.org/r/#/c/18213/ just for expediency to reduce round trip (most of the work is @wlahti 's)","username":"muralisr","ts":"2018-02-25T16:29:02.164Z"}
{"msg":"@cbf thanks for the reminder ^^^ ...  I picked  up https://gerrit.hyperledger.org/r/#/c/18213/ just  to reduce round trip (most of the work is @wlahti 's)","username":"muralisr","ts":"2018-02-25T16:29:02.164Z"}
{"msg":"@here We will do maintainer scrum here after the 9:30am community scrum.  Likely will be closer to 10am than 9:45am.","username":"dave.enyeart","ts":"2018-02-26T12:11:04.526Z"}
{"msg":"We are looking pretty good heading into the week.  Down to 18 defects, most of which I think could be deferred.","username":"dave.enyeart","ts":"2018-02-26T12:11:45.514Z"}
{"msg":"Please preview the list and add any comments, so that the maintainer scrum may go quicker:","username":"dave.enyeart","ts":"2018-02-26T12:12:16.638Z"}
{"msg":"https://jira.hyperledger.org/issues/?filter=12003&jql=project%20%3D%20FAB%20AND%20issuetype%20%3D%20Bug%20AND%20status%20in%20(%22In%20Progress%22%2C%20%22To%20Do%22%2C%20%22In%20Review%22%2C%20Backlog%2C%20Unverified%2C%20%22Monitor%20%2F%20On%20Hold%22)%20AND%20fixVersion%20in%20(EMPTY%2C%20releasedVersions()%2C%20v1.1%2C%20v1.1.0-alpha)%20AND%20component%20not%20in%20(fabric-quality%2C%20fabric-test-resources%2C%20fabric-ci%2C%20fabric-sdk-py%2C%20fabric-sdk-go%2C%20fabric-chaintool%2C%20fabric-chaincode-java)%20ORDER%20BY%20key%20DESC%2C%20component%20ASC%2C%20createdDate%20ASC","username":"dave.enyeart","ts":"2018-02-26T12:12:18.405Z"}
{"msg":"https://jira.hyperledger.org/issues/?filter=12003","username":"dave.enyeart","ts":"2018-02-26T12:12:18.405Z"}
{"msg":"And the already deferred list has 44:","username":"dave.enyeart","ts":"2018-02-26T12:13:06.231Z"}
{"msg":"https://jira.hyperledger.org/issues/?filter=12002","username":"dave.enyeart","ts":"2018-02-26T12:13:08.306Z"}
{"msg":"After we release 1.1, the proposal for branches is as follows:\n`release-1.0.x` - rename of current `release` branch\n`release-1.1.x` - this will be the default branch so that people get 1.1 release code by default\n`master` - new dev for 1.2.\nReadthedocs would follow the same branches.\nAny other thoughts?","username":"dave.enyeart","ts":"2018-02-26T13:11:00.511Z"}
{"msg":"After we release 1.1, the proposal for branches across all repositories (including fabric-samples) is as follows:\n`release-1.0.x` - rename of current `release` branch\n`release-1.1.x` - this will be the default branch so that people get 1.1 release code by default\n`master` - new dev for 1.2.\nReadthedocs would follow the same branches (for both fabric and fabric-ca).\nAny other thoughts?","username":"dave.enyeart","ts":"2018-02-26T13:11:00.511Z"}
{"msg":"After we release 1.1, the proposal for branches across all repositories (including fabric-samples) is as follows:\n`release-1.0.x` - rename of current `release` branch\n`release-1.1.x` - this will be the default branch so that people get 1.1 release code by default\n`master` - new dev for 1.2.\nReadthedocs would follow the same branches.\nMonthly 3rd digit fixpacks will be provided for the latest release branch. Earlier release branches will get fixpacks for critical fixes only (e.g. security vulnerabilities) \nAny other thoughts?","username":"dave.enyeart","ts":"2018-02-26T13:11:00.511Z"}
{"msg":"After we release 1.1, the proposal for branches across all repositories (including fabric-samples) is as follows:\n`release-1.0.x` - rename of current `release` branch\n`release-1.1.x` - this will be the default branch so that people get 1.1 release code by default\n`master` - new dev for 1.2.\nReadthedocs would follow the same branches (for both fabric and fabric-ca). \nMonthly 3rd digit fixpacks will be provided for the latest release branch. Earlier release branches will get fixpacks for critical fixes only (e.g. security vulnerabilities) \nAny other thoughts?","username":"dave.enyeart","ts":"2018-02-26T13:11:00.511Z"}
{"msg":"+1 ","username":"cbf","ts":"2018-02-26T13:16:53.013Z"}
{"msg":"So when linking across repositories in RTD, which RTD version should the links target?  `release-1.1.x` ? `latest` ?  This is in response to your last comment in #fabric-scrum @cbf ","username":"dave.enyeart","ts":"2018-02-26T13:21:18.080Z"}
{"msg":"We will likely merge the docs in their own repository going forward, so this hopefully is only a concern for 1.1.","username":"dave.enyeart","ts":"2018-02-26T13:21:41.862Z"}
{"msg":"release-1.1.x ","username":"cbf","ts":"2018-02-26T14:23:47.200Z"}
{"msg":"@here maintainer scrum","username":"dave.enyeart","ts":"2018-02-26T14:50:49.726Z"}
{"msg":"Hello !","username":"JonathanLevi","ts":"2018-02-26T14:50:59.642Z"}
{"msg":"Hello!","username":"dave.enyeart","ts":"2018-02-26T14:51:05.183Z"}
{"msg":"here","username":"muralisr","ts":"2018-02-26T14:51:14.347Z"}
{"msg":"OK, you got me.\nHello!","username":"JonathanLevi","ts":"2018-02-26T14:51:24.382Z"}
{"msg":"If you haven't seen #fabric-scrum today, please review it for items we are trying to close out today","username":"dave.enyeart","ts":"2018-02-26T14:51:27.845Z"}
{"msg":"mostly doc and sample items, and mostly around upgrade","username":"dave.enyeart","ts":"2018-02-26T14:51:53.005Z"}
{"msg":"we are trying to close those out today and then move on to RC1 release this week","username":"dave.enyeart","ts":"2018-02-26T14:52:10.964Z"}
{"msg":"Please review remaining defects today: https://jira.hyperledger.org/issues/?filter=12003","username":"dave.enyeart","ts":"2018-02-26T14:52:38.856Z"}
{"msg":"Monsieur Yellick, please can you not work while you are sick? We don't want to put this entire project at risk... ! @jyellick ","username":"JonathanLevi","ts":"2018-02-26T14:52:58.614Z"}
{"msg":"As some of them are being closed out today, I don't think we need to walk through them one-by-one here, but please review and add comments as appropriate","username":"dave.enyeart","ts":"2018-02-26T14:53:04.282Z"}
{"msg":"We will meet tomorrow (and subsequent days if needed) here for release decision","username":"dave.enyeart","ts":"2018-02-26T14:54:01.233Z"}
{"msg":"Any other topics people want to raise today?","username":"dave.enyeart","ts":"2018-02-26T14:54:15.173Z"}
{"msg":"I must have missed SOMETHING that needs to get done?","username":"dave.enyeart","ts":"2018-02-26T14:57:32.615Z"}
{"msg":"@JonathanLevi Any words of wisdom from the 1.0 release manager?","username":"dave.enyeart","ts":"2018-02-26T14:58:58.555Z"}
{"msg":"Not much. I'm following and pull in my weight, but just quickly - I think we should prioritize the usability and security over the samples at this point.","username":"JonathanLevi","ts":"2018-02-26T15:00:33.343Z"}
{"msg":"Usability and security are indeed focus areas for 1.2.  We are out of runway for 1.1.  But if you have anything specific in mind please mention.","username":"dave.enyeart","ts":"2018-02-26T15:01:25.613Z"}
{"msg":"I mean, in the existing open list, we have *channel config error, inconsistencies between the configuration and the fabric-ca, CLI container issues*","username":"JonathanLevi","ts":"2018-02-26T15:01:48.258Z"}
{"msg":"The open list is indeed a focus area for today","username":"dave.enyeart","ts":"2018-02-26T15:02:41.185Z"}
{"msg":"I think these should be addressed, if we are short on resources [these are: time, people, CI machines ;-)] , before we work to update the samples... which we can do a bit later.","username":"JonathanLevi","ts":"2018-02-26T15:02:46.083Z"}
{"msg":"ok, that's why we are gathered here now, we will all review the open list and provide comments on next steps as best can.  any need discussion here?","username":"dave.enyeart","ts":"2018-02-26T15:03:54.798Z"}
{"msg":"Nothing more to from my end. I think the backlog is getting to look better and better","username":"JonathanLevi","ts":"2018-02-26T15:04:45.995Z"}
{"msg":"And if someone is going to work an issue, please make sure they assign it to themselves","username":"mastersingh24","ts":"2018-02-26T15:05:15.831Z"}
{"msg":"yes, over-communication is better at these times","username":"dave.enyeart","ts":"2018-02-26T15:05:37.972Z"}
{"msg":"Actually, now that we are mentioning over-comm...","username":"JonathanLevi","ts":"2018-02-26T15:05:55.813Z"}
{"msg":"I saw Chris' request for the DCO when people (non-author'ed, not-original-CR-submitter) rebase... ","username":"JonathanLevi","ts":"2018-02-26T15:06:30.872Z"}
{"msg":".... we should keep this in mind. I admit that I didn't really pay enough attention to it when reviewing.","username":"JonathanLevi","ts":"2018-02-26T15:07:19.093Z"}
{"msg":"right, especially at the end here, we are allowing maintainers to upload patches rather than commenting, but please remember to add your signature to the commit.","username":"dave.enyeart","ts":"2018-02-26T15:08:24.206Z"}
{"msg":"ok, let's CAREFULLY finish things out today, and meet back here tomorrow same time","username":"dave.enyeart","ts":"2018-02-26T15:09:17.879Z"}
{"msg":"we do need to merge this:  https://gerrit.hyperledger.org/r/18385","username":"mastersingh24","ts":"2018-02-26T15:09:39.005Z"}
{"msg":"Bret said he will merge this morning","username":"dave.enyeart","ts":"2018-02-26T15:09:58.601Z"}
{"msg":"And I am talking to Adnan about the final testing for it","username":"dave.enyeart","ts":"2018-02-26T15:10:33.533Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8503 - 1 more +2","username":"mastersingh24","ts":"2018-02-26T15:12:03.293Z"}
{"msg":"@dave.enyeart, when you write *morning* to @mastersingh24 , I look at the local time and it's 7:12am... which is more like tea-time/4pm in Boston, if you see what I mean.","username":"JonathanLevi","ts":"2018-02-26T15:12:12.050Z"}
{"msg":"Looking at 503","username":"JonathanLevi","ts":"2018-02-26T15:12:17.846Z"}
{"msg":"sorry -  https://gerrit.hyperledger.org/r/#/c/18341/","username":"mastersingh24","ts":"2018-02-26T15:12:35.049Z"}
{"msg":"Damn it. I merged 8503 instead ;-)","username":"JonathanLevi","ts":"2018-02-26T15:14:14.649Z"}
{"msg":"Joking, I agree Jason, in this context, it's not worth the \"savings\" of the bash session.","username":"JonathanLevi","ts":"2018-02-26T15:14:28.603Z"}
{"msg":"BTW, I believe we intend to have the two week quiet period between RC1 and GA, in case something pops up","username":"dave.enyeart","ts":"2018-02-26T15:15:36.991Z"}
{"msg":"I am not opposed to doc enhancements going in during that time.  thoughts?","username":"dave.enyeart","ts":"2018-02-26T15:16:10.662Z"}
{"msg":"I am not opposed to doc enhancements going in during that time (although Joe likely won't be available to help)  thoughts?","username":"dave.enyeart","ts":"2018-02-26T15:16:10.662Z"}
{"msg":"but primarily, we will be working on 1.2 plan and known items during that time","username":"dave.enyeart","ts":"2018-02-26T15:17:18.674Z"}
{"msg":"but primarily, we will be working on 1.2 plan and 1.2 known items during that time","username":"dave.enyeart","ts":"2018-02-26T15:17:18.674Z"}
{"msg":"while testers do final regression testing against RC1","username":"dave.enyeart","ts":"2018-02-26T15:17:45.557Z"}
{"msg":"doc is good","username":"mastersingh24","ts":"2018-02-26T15:18:40.067Z"}
{"msg":"nothing else","username":"mastersingh24","ts":"2018-02-26T15:18:42.406Z"}
{"msg":"we should only fix bugs which come in against the RC","username":"mastersingh24","ts":"2018-02-26T15:18:54.747Z"}
{"msg":"anything we decided to defer should not be touched","username":"mastersingh24","ts":"2018-02-26T15:19:08.877Z"}
{"msg":"agreed","username":"dave.enyeart","ts":"2018-02-26T15:19:16.002Z"}
{"msg":"we are SOOOOOO CLOSE  :pray_tone4: ","username":"mastersingh24","ts":"2018-02-26T15:20:05.984Z"}
{"msg":"we are SOOOOOO CLOSE  :pray_tone4: ","username":"mastersingh24","ts":"2018-02-26T15:20:05.984Z"}
{"msg":"we got this","username":"dave.enyeart","ts":"2018-02-26T15:20:18.653Z"}
{"msg":"have a good day (good evening to mastersingh)","username":"dave.enyeart","ts":"2018-02-26T15:20:54.970Z"}
{"msg":"hehe","username":"mastersingh24","ts":"2018-02-26T15:28:07.517Z"}
{"msg":"","username":"cbf","ts":"2018-02-26T19:45:56.126Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=XgWFY4DvBGtMxof3J) @mastersingh24 :woo: ","username":"cbf","ts":"2018-02-26T19:54:03.410Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=XgWFY4DvBGtMxof3J","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=XgWFY4DvBGtMxof3J","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Please see my comments in https://jira.hyperledger.org/browse/FAB-8524","username":"dave.enyeart","ts":"2018-02-27T04:07:24.234Z"}
{"msg":"Is there agreement that we don't and shouldn't document native binary installations, at least in the near term?","username":"dave.enyeart","ts":"2018-02-27T04:08:02.012Z"}
{"msg":"@dave.enyeart  - I added a comment to FAB-8524 on why they were getting the error.","username":"mastersingh24","ts":"2018-02-27T08:00:12.027Z"}
{"msg":"@mastersingh24 thanks, makes sense.  And do you have an opinion on how much we should or shouldn't document native binary installations in general?","username":"dave.enyeart","ts":"2018-02-27T11:12:55.408Z"}
{"msg":"I added comment, the use case is unrealistic","username":"cbf","ts":"2018-02-27T12:32:14.939Z"}
{"msg":"who would do that?","username":"cbf","ts":"2018-02-27T12:32:18.178Z"}
{"msg":"agreed.  My more general question is to what extent we should document native binary deployments.","username":"dave.enyeart","ts":"2018-02-27T13:17:50.272Z"}
{"msg":"Has anybody else looked at upgrade?  It is coming around but requires some more eyes.","username":"dave.enyeart","ts":"2018-02-27T13:18:52.103Z"}
{"msg":"I've posted in #fabric-scrum that I think it is our largest risk area. See that channel for the latest info.  ","username":"dave.enyeart","ts":"2018-02-27T13:19:31.850Z"}
{"msg":"Please try it out and provide comments on the CRs.","username":"dave.enyeart","ts":"2018-02-27T13:20:09.058Z"}
{"msg":"Thanks @kostas for volunteering to help with Capabilities/Upgrade reviews","username":"dave.enyeart","ts":"2018-02-27T14:13:14.582Z"}
{"msg":"I have created a label `must-fix` so that we can easily track remaining items for the release.","username":"dave.enyeart","ts":"2018-02-27T14:13:50.461Z"}
{"msg":"Here is the query:  https://jira.hyperledger.org/issues/?jql=labels%20%3D%20must-fix","username":"dave.enyeart","ts":"2018-02-27T14:13:56.113Z"}
{"msg":"My opinion only at this point... feel free to add others or comment on the ones included","username":"dave.enyeart","ts":"2018-02-27T14:14:32.914Z"}
{"msg":"@here maintainer scrum","username":"dave.enyeart","ts":"2018-02-27T14:44:54.523Z"}
{"msg":"Please take a look at the new `must-fix` query.","username":"dave.enyeart","ts":"2018-02-27T14:45:17.924Z"}
{"msg":"I think the other defects in the 1.1 list can all be deferred.","username":"dave.enyeart","ts":"2018-02-27T14:45:42.738Z"}
{"msg":"So please make sure you agree with the `must-fix` list","username":"dave.enyeart","ts":"2018-02-27T14:45:53.453Z"}
{"msg":"Add anything else you know of that is required","username":"dave.enyeart","ts":"2018-02-27T14:46:02.513Z"}
{"msg":"And comment on any that you dont think need to be in the list","username":"dave.enyeart","ts":"2018-02-27T14:46:23.528Z"}
{"msg":"This is the list we will be marching to","username":"dave.enyeart","ts":"2018-02-27T14:46:31.051Z"}
{"msg":"Please review each of the CRs in the `must-fix` list today","username":"dave.enyeart","ts":"2018-02-27T14:47:57.990Z"}
{"msg":"7 of the 8 items are In Review","username":"dave.enyeart","ts":"2018-02-27T14:48:30.153Z"}
{"msg":"Any other comments?","username":"dave.enyeart","ts":"2018-02-27T14:48:44.743Z"}
{"msg":"Has joined the channel.","username":"VikasJakhar","ts":"2018-02-27T20:10:21.159Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mrshah-ibm","ts":"2018-02-28T12:10:02.589Z","type":"uj"}
{"msg":"#fabric-scrum is updated with the final must-fix CRs","username":"dave.enyeart","ts":"2018-02-28T13:15:45.494Z"}
{"msg":"plan is to cut RC1 tomorrow","username":"dave.enyeart","ts":"2018-02-28T13:16:27.580Z"}
{"msg":"@here maintainer scrum","username":"dave.enyeart","ts":"2018-02-28T14:48:49.351Z"}
{"msg":"I think we have the final must-fix list","username":"dave.enyeart","ts":"2018-02-28T14:49:09.627Z"}
{"msg":"Any others we need to discuss?","username":"dave.enyeart","ts":"2018-02-28T14:49:20.861Z"}
{"msg":"We can proceed with the fabric and fabric-ca RC1.  We don't need to do a RC1 for SDKs since the samples use latest unstable build anyways.","username":"dave.enyeart","ts":"2018-02-28T14:50:03.157Z"}
{"msg":"We can proceed with the fabric and fabric-ca RC1 after the last CA fix goes in.  We don't need to do a RC1 for SDKs since the samples use latest unstable build anyways.","username":"dave.enyeart","ts":"2018-02-28T14:50:03.157Z"}
{"msg":"There are a couple other low-risk ones not on the must-fix list that could be merged today, but be careful.","username":"dave.enyeart","ts":"2018-02-28T14:52:07.343Z"}
{"msg":"Does anybody have thoughts on whether we should do a What's New in 1.1 doc topic, vs just the 1.1 announcement email?","username":"dave.enyeart","ts":"2018-02-28T14:52:52.614Z"}
{"msg":"We will also tag fabric-samples release branch with a v1.0.6 tag, for anybody following the upgrade doc","username":"dave.enyeart","ts":"2018-02-28T14:54:49.468Z"}
{"msg":"I could do a blog post for the hyperledger.org blog and cross post from thinkblog","username":"cbf","ts":"2018-02-28T14:59:09.315Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/18499/ ","username":"cbf","ts":"2018-02-28T15:00:02.423Z"}
{"msg":"Ok thanks, we can work on announcement email and blog post together","username":"dave.enyeart","ts":"2018-02-28T15:00:11.855Z"}
{"msg":"cool","username":"cbf","ts":"2018-02-28T15:00:20.077Z"}
{"msg":"that one looks good chris, just add the INFO level for orderer and we are good to go","username":"dave.enyeart","ts":"2018-02-28T15:01:03.529Z"}
{"msg":"one more while I have your attention: https://gerrit.hyperledger.org/r/#/c/18515/","username":"dave.enyeart","ts":"2018-02-28T15:02:54.325Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/18499/ is ready for another +2","username":"dave.enyeart","ts":"2018-02-28T15:07:36.557Z"}
{"msg":"this goes with 18499 https://gerrit.hyperledger.org/r/c/18525/","username":"cbf","ts":"2018-02-28T17:47:59.124Z"}
{"msg":"@cbf Do you want to provide the same guidance in channel_update_tutorial.rst?","username":"dave.enyeart","ts":"2018-02-28T18:02:47.864Z"}
{"msg":"That's the one Will was talking about","username":"dave.enyeart","ts":"2018-02-28T18:02:57.019Z"}
{"msg":"ah, yes","username":"cbf","ts":"2018-02-28T18:03:36.081Z"}
{"msg":"done","username":"cbf","ts":"2018-02-28T18:11:16.582Z"}
{"msg":"infra team is on the issue with gerrit and jira inaccessible","username":"cbf","ts":"2018-02-28T20:27:44.285Z"}
{"msg":"What is the protocol for opening up a security issue in JIRA? (To be clear: I don't have one to report, and I'm not speaking about myself specifically.)","username":"kostas","ts":"2018-02-28T20:28:53.687Z"}
{"msg":"kostas: file the issue and select \"security issue: yes\" when you file it","username":"rjones","ts":"2018-02-28T20:29:35.963Z"}
{"msg":"only cbf and Gari have permissions for that, Ry","username":"yacovm","ts":"2018-02-28T20:29:47.974Z"}
{"msg":"common folk can't do that","username":"yacovm","ts":"2018-02-28T20:29:53.294Z"}
{"msg":"that should not be the case. that is a bug.","username":"rjones","ts":"2018-02-28T20:30:01.000Z"}
{"msg":"oh","username":"yacovm","ts":"2018-02-28T20:30:05.217Z"}
{"msg":"I also have that too but yes, as Yacov says, I'm wondering how others go about it.","username":"kostas","ts":"2018-02-28T20:30:09.275Z"}
{"msg":"anyway you can't do that, JIRA and gerrit are down at the moment","username":"yacovm","ts":"2018-02-28T20:30:30.625Z"}
{"msg":"there is another way: you could file the bug on H1 if you wanted a bounty. I would ask you not to do that :)","username":"rjones","ts":"2018-02-28T20:30:52.760Z"}
{"msg":"> that should not be the case. that is a bug.\nThat makes more sense now. I thought that only maintainers can label something as a security issue which didn't make sense.","username":"kostas","ts":"2018-02-28T20:33:00.732Z"}
{"msg":"@kostas https://wiki.hyperledger.org/security","username":"cbf","ts":"2018-02-28T20:34:10.112Z"}
{"msg":"@rjones if I opened a JIRA and it's flagged security - should I be able to add watchers to it?","username":"yacovm","ts":"2018-02-28T20:35:19.082Z"}
{"msg":"because I can't from my experience","username":"yacovm","ts":"2018-02-28T20:35:24.133Z"}
{"msg":"yes, and watchers should be able to see it even if it is a security issue and they are not on the security team","username":"rjones","ts":"2018-02-28T20:35:56.165Z"}
{"msg":"> yes, and watchers should be able to see it even if it is a security issue and they are not on the security team\n\nI believe I can confirm this piece is working as designed","username":"jyellick","ts":"2018-02-28T20:37:11.648Z"}
{"msg":"> watchers should be able to see it even if it is a security issue and they are not on the security team\n\nI believe I can confirm this piece is working as designed","username":"jyellick","ts":"2018-02-28T20:37:11.648Z"}
{"msg":"JIRA and Gerrit are available again https://status.linuxfoundation.org/incidents/6nnfhx5cwnp8","username":"rjones","ts":"2018-02-28T20:40:59.354Z"}
{"msg":"@rjones I *believe* we tried to have a watcher (added) add another watcher and it did not work","username":"cbf","ts":"2018-02-28T21:46:43.526Z"}
{"msg":"they are able to see the issue though","username":"cbf","ts":"2018-02-28T21:46:57.470Z"}
{"msg":"@cbf yes, I looked into the permissions, there isn't a fine-grained ACL for that. I can either grant anyone that can file a bug permission to manage all watchers on all bugs in a project, or not. I could create a team which is \"all trusted people\" and manually manage that, or stick with the current method of \"a member of the security team adds the new watcher\"","username":"rjones","ts":"2018-02-28T21:48:21.900Z"}
{"msg":"\"a member of the security team, or a JIRA administrator\"","username":"rjones","ts":"2018-02-28T21:49:01.407Z"}
{"msg":"We could discuss this on the TSC, but I would think that the trusted might be the maintainers + security team... if a security team (who has visibility) adds a maintainer, then the maintainer should be able to add others to the issue","username":"cbf","ts":"2018-02-28T21:50:15.016Z"}
{"msg":"make sense?","username":"cbf","ts":"2018-02-28T21:50:18.270Z"}
{"msg":"yes, I understand what you want, but I don't know if it will work that way. I'll need to play with it.","username":"rjones","ts":"2018-02-28T21:53:59.005Z"}
{"msg":"tx","username":"cbf","ts":"2018-02-28T21:54:19.149Z"}
{"msg":"Improve troubleshooting and debug in BYFN:","username":"dave.enyeart","ts":"2018-02-28T23:37:45.084Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/18499/","username":"dave.enyeart","ts":"2018-02-28T23:37:46.493Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/18525/","username":"dave.enyeart","ts":"2018-02-28T23:37:55.760Z"}
{"msg":"There are two bugs we'll need to decide on Thursday prior to RC1:","username":"dave.enyeart","ts":"2018-03-01T04:50:22.175Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8598 @greg.haskins @muralisr @mastersingh24 any ideas?","username":"dave.enyeart","ts":"2018-03-01T04:51:07.497Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8584 @kostas taking a look","username":"dave.enyeart","ts":"2018-03-01T04:51:45.333Z"}
{"msg":"Three that I think are must-fix:","username":"dave.enyeart","ts":"2018-03-01T12:27:58.964Z"}
{"msg":"Three that I think are must-fix:","username":"dave.enyeart","ts":"2018-03-01T12:30:27.027Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8602 @jyellick add volumes to the other docker compose files","username":"dave.enyeart","ts":"2018-03-01T12:30:49.139Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8602 @jyellick add volumes to the other docker compose files: https://gerrit.hyperledger.org/r/#/c/18591/","username":"dave.enyeart","ts":"2018-03-01T12:30:49.139Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8598 builds failing on s390","username":"dave.enyeart","ts":"2018-03-01T12:31:19.733Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8598 builds failing on s390 due to docker busybox unavailable. harshna thinks it may be available now. @rameshthoomu please kick off another s390 build this morning.","username":"dave.enyeart","ts":"2018-03-01T12:31:19.733Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8598 builds failing on s390 due to docker busybox unavailable. harsha thinks it may be available now. @rameshthoomu please kick off another s390 build this morning.","username":"dave.enyeart","ts":"2018-03-01T12:31:19.733Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8598 builds failing on s390 due to docker busybox unavailable. harsha thinks it may be available now. @rameshthoomu please kick off another s390 build this morning. RESOLVED","username":"dave.enyeart","ts":"2018-03-01T12:31:19.733Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8584 please review fix at https://gerrit.hyperledger.org/r/#/c/18585/","username":"dave.enyeart","ts":"2018-03-01T12:31:43.517Z"}
{"msg":"@kostas @jyellick i don't understand why the kafka connection should cause deliver to return a service unavailable","username":"yacovm","ts":"2018-03-01T12:45:42.700Z"}
{"msg":"@kostas @jyellick why the kafka connection should cause deliver to return a service unavailable","username":"yacovm","ts":"2018-03-01T12:45:42.700Z"}
{"msg":"is that so the peer would failover to the other node?","username":"yacovm","ts":"2018-03-01T12:45:57.345Z"}
{"msg":"because the orderer is expected to be not updated anymore?","username":"yacovm","ts":"2018-03-01T12:46:17.410Z"}
{"msg":"@here maintainer scrum","username":"dave.enyeart","ts":"2018-03-01T14:44:33.943Z"}
{"msg":"Both CRs above are in review. @kostas pushing another patch.  please review both.","username":"dave.enyeart","ts":"2018-03-01T14:45:11.145Z"}
{"msg":"here","username":"muralisr","ts":"2018-03-01T14:45:14.384Z"}
{"msg":"besides those two, any other business prior to doing the release cutting CRs?","username":"dave.enyeart","ts":"2018-03-01T14:45:39.647Z"}
{"msg":"I see https://jira.hyperledger.org/browse/FAB-8606 for java-sdk is Highest","username":"dave.enyeart","ts":"2018-03-01T14:46:46.514Z"}
{"msg":"please review that one as well, although we will not cut RC1 for the SDKs","username":"dave.enyeart","ts":"2018-03-01T14:46:56.823Z"}
{"msg":"Rick will do primary review, but perhaps @C0rWin could take a quick look as well since he expressed interested in java sdk","username":"dave.enyeart","ts":"2018-03-01T14:47:53.303Z"}
{"msg":"oh, we could use one more +2 on https://gerrit.hyperledger.org/r/#/c/18589/ before we call for code freeze","username":"dave.enyeart","ts":"2018-03-01T14:49:35.418Z"}
{"msg":"system test will try out the fixes above today, then we start release process","username":"dave.enyeart","ts":"2018-03-01T14:50:32.670Z"}
{"msg":"done on https://gerrit.hyperledger.org/r/#/c/18589  @dave.enyeart ","username":"muralisr","ts":"2018-03-01T14:51:40.240Z"}
{"msg":"thx","username":"dave.enyeart","ts":"2018-03-01T14:51:54.049Z"}
{"msg":"ok, i think that's it for now, but keep an eye out on this channel in case we need reviews today","username":"dave.enyeart","ts":"2018-03-01T14:52:47.844Z"}
{"msg":"FAB-8602 is ready for final +2s please:","username":"dave.enyeart","ts":"2018-03-01T16:14:28.161Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/18591\nhttps://gerrit.hyperledger.org/r/c/18593","username":"dave.enyeart","ts":"2018-03-01T16:14:34.191Z"}
{"msg":"The above Jiras are resolved and CRs merged.  Starting release process for v1.1.0-rc1.  CODE FREEZE in effect.","username":"dave.enyeart","ts":"2018-03-01T17:16:06.749Z"}
{"msg":"technically it is a MERGE FREEZE;-)","username":"cbf","ts":"2018-03-01T17:16:43.104Z"}
{"msg":"MERGE FREEZE in effect!","username":"dave.enyeart","ts":"2018-03-01T17:17:03.412Z"}
{"msg":"Has left the channel.","username":"tmciver","ts":"2018-03-01T17:24:06.600Z","type":"ul"}
{"msg":"before we release the merge freeze, wonder if we should cut the release 1.1 branch from rc1?","username":"cbf","ts":"2018-03-01T21:59:52.303Z"}
{"msg":"@mastersingh24 @dave.enyeart ","username":"cbf","ts":"2018-03-01T22:00:06.765Z"}
{"msg":"docs for v1.1.0-rc1 published for fabric and fabric ca","username":"cbf","ts":"2018-03-01T22:01:56.436Z"}
{"msg":"we do have doc changes still, but I think all changes except urgent fixes and doc should be deferred post 1.1.0","username":"cbf","ts":"2018-03-01T22:02:54.320Z"}
{"msg":"I think that's a good idea so that 1.2 development could start on master branch, while we merge any critical defects to both master and the 1.1 branch. My only concern was things like the CHANGELOG.MD, which would diverge on the two branches (two different views of 1.1.0), not sure how we'd work that?","username":"dave.enyeart","ts":"2018-03-01T22:03:32.786Z"}
{"msg":"I guess master CHANGELOG.MD would go from 1.1 RC1 to 1.2?","username":"dave.enyeart","ts":"2018-03-01T22:04:16.777Z"}
{"msg":"hmmm, @yacovm just reminded me that there is an 'old' release-1.1 branch that we probably need to clean up:","username":"dave.enyeart","ts":"2018-03-01T22:10:50.313Z"}
{"msg":"https://github.com/hyperledger/fabric/branches","username":"dave.enyeart","ts":"2018-03-01T22:10:51.160Z"}
{"msg":"I agree with @dave.enyeart , lets cut a v1.1 branch from master so we can start merging pending v1.2 content. No time to waste :)","username":"yacovm","ts":"2018-03-01T22:11:22.695Z"}
{"msg":"+1, unless anyone has complications (and we're happy with respect to the changelog?)","username":"jyellick","ts":"2018-03-01T22:13:23.853Z"}
{"msg":"In terms of timing, i do agree that right after RC1 is ideal time","username":"dave.enyeart","ts":"2018-03-01T22:13:24.500Z"}
{"msg":"well, we could fudge the changelog","username":"cbf","ts":"2018-03-01T22:13:48.313Z"}
{"msg":"because we SHOULD have the same set of fixes in both","username":"cbf","ts":"2018-03-01T22:15:18.471Z"}
{"msg":"we just won't be tagging a release","username":"cbf","ts":"2018-03-01T22:15:26.405Z"}
{"msg":"but we can copy the changelog from the formal release","username":"cbf","ts":"2018-03-01T22:15:53.368Z"}
{"msg":"I dont see an issue of changelog going from 1.1 RC1 to 1.2 for the 1.2 release branch.   what's important is the 1.1 changelog on 1.1 branch.","username":"dave.enyeart","ts":"2018-03-01T22:16:42.589Z"}
{"msg":"+1","username":"cbf","ts":"2018-03-01T22:16:53.669Z"}
{"msg":"so yeah, I definitely +1","username":"dave.enyeart","ts":"2018-03-01T22:17:13.879Z"}
{"msg":"so, then if we ARE starting on 1.2, then what we need to do is start using JIRA right;-)","username":"cbf","ts":"2018-03-01T22:17:39.972Z"}
{"msg":"what do you mena?","username":"yacovm","ts":"2018-03-01T22:17:52.981Z"}
{"msg":"what do you mean?","username":"yacovm","ts":"2018-03-01T22:17:52.981Z"}
{"msg":"we can generate a nice changelog from JIRA if we do this right","username":"cbf","ts":"2018-03-01T22:17:53.005Z"}
{"msg":"see my note then","username":"cbf","ts":"2018-03-01T22:18:53.631Z"}
{"msg":"I'd like to get agreement on the branch naming strategy","username":"cbf","ts":"2018-03-01T22:19:10.005Z"}
{"msg":"I proposed 'release-1.0' and 'release-1.1' ","username":"cbf","ts":"2018-03-01T22:19:41.680Z"}
{"msg":"@mastersingh24 likes 'release-1.0.x' and 'release-1.1.x' - I'm okay with that - it signals we have patches","username":"cbf","ts":"2018-03-01T22:26:22.530Z"}
{"msg":"But why would anyone use something other than latest?","username":"yacovm","ts":"2018-03-01T22:27:50.862Z"}
{"msg":"We dont add features-only fix bugs","username":"yacovm","ts":"2018-03-01T22:28:06.597Z"}
{"msg":"latest is actually UNSTABLE","username":"cbf","ts":"2018-03-01T22:28:32.714Z"}
{"msg":"so, maybe instead of latest we call it unstable?","username":"cbf","ts":"2018-03-01T22:28:46.425Z"}
{"msg":"I mean latest for a release branch","username":"yacovm","ts":"2018-03-01T22:28:48.226Z"}
{"msg":"I.e why would i use release-1.0.5 instead of release-1.0.6?","username":"yacovm","ts":"2018-03-01T22:29:11.585Z"}
{"msg":"it won't be release-1.0.5","username":"cbf","ts":"2018-03-01T22:29:27.464Z"}
{"msg":"it will be release-1.0.x","username":"cbf","ts":"2018-03-01T22:29:33.397Z"}
{"msg":"Oh","username":"yacovm","ts":"2018-03-01T22:29:38.295Z"}
{"msg":"Oh- im my mind i expanded the *x* to all versions....","username":"yacovm","ts":"2018-03-01T22:29:38.295Z"}
{"msg":"Oh- in my mind i expanded the *x* to all versions....","username":"yacovm","ts":"2018-03-01T22:29:38.295Z"}
{"msg":"and always build the latest tag","username":"cbf","ts":"2018-03-01T22:29:50.221Z"}
{"msg":"I think it makes sense, it does signal we have patches","username":"yacovm","ts":"2018-03-01T22:30:59.302Z"}
{"msg":"s/latest/most recent//","username":"cbf","ts":"2018-03-01T22:31:02.059Z"}
{"msg":"Though i dont mind either","username":"yacovm","ts":"2018-03-01T22:31:17.844Z"}
{"msg":"Though i dont mind either, good with the v1.1 approach too","username":"yacovm","ts":"2018-03-01T22:31:17.844Z"}
{"msg":"I'll second @yacovm I would have been happy with release-1.1, but release-1.1.x also works for me","username":"jyellick","ts":"2018-03-01T22:32:06.172Z"}
{"msg":"I'll second @yacovm, I would have been happy with release-1.1, but release-1.1.x also works for me","username":"jyellick","ts":"2018-03-01T22:32:06.172Z"}
{"msg":"Can a branch name have * instead of x?","username":"yacovm","ts":"2018-03-01T22:34:38.392Z"}
{"msg":"Even if it can, I'd oppose that, interferes with normal shell parsing and would need to be quoted/escaped every time","username":"jyellick","ts":"2018-03-01T22:35:14.593Z"}
{"msg":"I was just reading about implementing lambdas and closure in bash, so why not?","username":"rjones","ts":"2018-03-01T22:36:18.521Z"}
{"msg":"Here's a quick poll for branch naming conventions:    https://www.surveymonkey.com/r/P2GPLQD","username":"mastersingh24","ts":"2018-03-03T10:18:39.140Z"}
{"msg":"Not in the poll, but another question. Our tags are \"v1.1.0\", \"v1.0.6\" etc. Would it make sense to preface the version number with 'v' in the branch for consistency's sake? ","username":"jyellick","ts":"2018-03-03T14:46:07.356Z"}
{"msg":"clarification on the poll - the EXACT branch name will also appear as the RTD version, right?","username":"dave.enyeart","ts":"2018-03-03T14:52:35.739Z"}
{"msg":"correct","username":"mastersingh24","ts":"2018-03-03T15:52:26.642Z"}
{"msg":"@jyellick  - FWIW, my take is that having \"release\" and \"v\" in the branch name is redundant.  Can you live without it?  ;)","username":"mastersingh24","ts":"2018-03-03T15:54:23.047Z"}
{"msg":"For those who want to see the status of the poll:   https://www.surveymonkey.com/results/SM-D6SSCPSP8/","username":"mastersingh24","ts":"2018-03-03T16:02:19.401Z"}
{"msg":"@mastersingh24 I can certainly live without it. We tag our docker images without the 'v'. Maybe we should rethink our git tagging scheme as well. Just threw it out there as food for thought. ","username":"jyellick","ts":"2018-03-03T17:41:50.209Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Hni9vYWF2PuxxBmiP) @mastersingh24 +1","username":"cbf","ts":"2018-03-03T19:35:30.329Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Hni9vYWF2PuxxBmiP","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Hni9vYWF2PuxxBmiP","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"GiorgiBlockchain","ts":"2018-03-05T03:34:17.811Z","type":"uj"}
{"msg":"Folks - a reminder for those of you who have not voted for the branch naming conventions; please vote at https://www.surveymonkey.com/r/P2GPLQD\n\nCurrently 10 folks have voted and it's still too close to call","username":"mastersingh24","ts":"2018-03-05T10:19:09.007Z"}
{"msg":"Folks - a reminder for those of you who have not voted for the branch naming conventions; please vote at https://www.surveymonkey.com/r/P2GPLQD\n\nCurrently 10 folks have voted\n\nI think we really need to get this closed out by the end of today so we can start moving forward with development now that the RC is out","username":"mastersingh24","ts":"2018-03-05T10:19:09.007Z"}
{"msg":"Breaking news:   WE HAVE A WINNER!\n\nhttps://www.surveymonkey.com/results/SM-D6SSCPSP8/\n\n(we have 15 maintainers and 12 have voted with 8 in favor of the `release-M.M` naming convention)","username":"mastersingh24","ts":"2018-03-05T14:22:38.452Z"}
{"msg":"(for those who do not want to do the math, that means there is no way for `release-M.M.x` to win)  ;)","username":"mastersingh24","ts":"2018-03-05T14:23:12.186Z"}
{"msg":"@mastersingh24 you going to create the branches?","username":"cbf","ts":"2018-03-05T17:21:10.621Z"}
{"msg":"Has joined the channel.","username":"jtclark","ts":"2018-03-05T17:54:44.223Z","type":"uj"}
{"msg":"I'm happy to do so  ;)","username":"mastersingh24","ts":"2018-03-05T18:39:09.311Z"}
{"msg":"So we create release-1.1 from the current tip of master?","username":"mastersingh24","ts":"2018-03-05T18:39:36.022Z"}
{"msg":"release-1.0 has been created from release  ;)","username":"mastersingh24","ts":"2018-03-05T18:46:38.546Z"}
{"msg":"release-1.1 has been created  ;)","username":"mastersingh24","ts":"2018-03-05T18:49:50.532Z"}
{"msg":"release-1.1 has been created from master ;)","username":"mastersingh24","ts":"2018-03-05T18:49:50.532Z"}
{"msg":"ok, so any doc improvement or critical fix in the next couple weeks has to be cherry picked to both master and release-1.1, by the submitter.  I've found that the Gerrit Cherry Pick UI button is pretty good for this, if the files are in sync. And maintainers will have watch for any misses upon merge.  Right?   And we'll need to decide whether one Jira is sufficient, or request two Jiras get created.  @mastersingh24 what's your opinion given you have some background here with the 1.0.x release branch?","username":"dave.enyeart","ts":"2018-03-05T18:57:19.762Z"}
{"msg":"that's my assessment as well .... JIRA associated with a CR should have the fix version set to all applicable versions ...","username":"mastersingh24","ts":"2018-03-05T18:58:16.287Z"}
{"msg":"Should be easy to deal with master / release-1.1 for now .... bug fixes and docs only for releaese-1.1","username":"mastersingh24","ts":"2018-03-05T18:58:42.105Z"}
{"msg":"Should be easy to deal with master / release-1.1 for now .... bug fixes and docs only for release-1.1","username":"mastersingh24","ts":"2018-03-05T18:58:42.105Z"}
{"msg":"we could say that main jira is for master and if you want a backport create a sub-task?  that would work for Bugs but not sub-tasks (as a sub-task cannot have a sub-task)","username":"dave.enyeart","ts":"2018-03-05T18:58:57.578Z"}
{"msg":"we could say that main jira is for master and if you want a backport to release-1.1 create a sub-task?  that would work for Bugs but not sub-tasks (as a sub-task cannot have a sub-task)","username":"dave.enyeart","ts":"2018-03-05T18:58:57.578Z"}
{"msg":"and yes - the UI works well for these","username":"mastersingh24","ts":"2018-03-05T18:59:03.172Z"}
{"msg":"in prior projects, we've found that it is impossible to track the backport intent and status without separate work item","username":"dave.enyeart","ts":"2018-03-05T19:00:39.644Z"}
{"msg":"in prior projects, we've found that it is impossible to track the backport intent and status without separate work item, and things would get missed.","username":"dave.enyeart","ts":"2018-03-05T19:00:39.644Z"}
{"msg":"although the Cherry Pick would have the original FAB number in the commit message","username":"dave.enyeart","ts":"2018-03-05T19:01:47.398Z"}
{"msg":"heads up that a CR is coming for fabric-ca to revendor bccsp from fabric to pull in the latest bccsp fixes","username":"smithbk","ts":"2018-03-05T19:28:11.054Z"}
{"msg":"so, I think that what @mastersingh24 is suggesting is that if we add fixVersion for each of the affected versions, that will suffice","username":"cbf","ts":"2018-03-05T19:41:45.877Z"}
{"msg":"and use the cherry-pick UI","username":"cbf","ts":"2018-03-05T19:41:58.969Z"}
{"msg":"@mastersingh24 are you updating RTD or shall I?","username":"cbf","ts":"2018-03-05T19:43:23.382Z"}
{"msg":"nvm, see you already have done this","username":"cbf","ts":"2018-03-05T19:48:26.830Z"}
{"msg":"thx","username":"cbf","ts":"2018-03-05T19:48:28.934Z"}
{"msg":"Right, I'm just saying with the multi-FixVersion approach there is more risk of a Jira getting marked Done when it hasn't been ported to the appropriate release branches yet, and then it gets accidentally missed. There is no perfect answer, we can start with this approach and see how it goes.","username":"dave.enyeart","ts":"2018-03-05T19:56:43.787Z"}
{"msg":"diligence is really the only answer .... of course we can try to provide process help as well","username":"mastersingh24","ts":"2018-03-05T20:04:09.869Z"}
{"msg":"if we have v1.1 branch now, does that mean the merge freeze is over?","username":"yacovm","ts":"2018-03-05T20:07:03.249Z"}
{"msg":"actually - where is the branch? I only see tags","username":"yacovm","ts":"2018-03-05T20:07:43.319Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2018-03-06T02:16:35.852Z","type":"ul"}
{"msg":"MERGE FREEZE OVER.\nDiscussed with @mastersingh24:\nFor `fabric`:\n- use `master` branch for new 1.2 code, but remember that we will require written motivation and design for anything significant starting in 1.2 (either in Jira Description for small items, or a linked google doc or slides for larger items).\n- use `release-1.1` branch for any doc improvements or critical fixes that need to be made prior to 1.1 GA release\n- every time you merge something, think about whether it needs to be cherry picked to the other branch, and make sure the Jira Fix Version includes both releases (v1.1 and v1.2 for master).\nFor the other projects\n- there is not much 1.2 activity yet, so we’ll let 1.1 finalize in `master` before creating the release branches.","username":"dave.enyeart","ts":"2018-03-06T18:03:12.191Z"}
{"msg":"For `fabric-ca` - the re-vendored bccsp is merged, and `release-1.1` created. For any remaining critical fixes or doc updates, remember to cherry pick the CR into both releases.","username":"dave.enyeart","ts":"2018-03-07T12:43:34.388Z"}
{"msg":"I am pulling together retrospective / lessons learned from 1.1 release. Will make them public to solicit additions, but feel free to direct message me with anything you'd like to see included in the first draft.\n\nAlso, I am cleaning up the items already marked 1.2 in Jira (keeping in mind the priorities that were agreed to at maintainers meeting), and then will publish a query for us all to look at so that we can refine the plan for 1.2.","username":"dave.enyeart","ts":"2018-03-07T14:42:27.670Z"}
{"msg":"Per the maintainers meeting, we left the chaincode lifecycle problem unresolved.  This is something which I believe is critical we fix for v1.2.  I've linked to a Google doc with (yet another) proposal inside https://jira.hyperledger.org/browse/FAB-8724 which borrows heavily from other proposals and is hopefully acceptable to all.  Please review.  If we want to contain this for v1.2, it is imperative that we reach consensus upon a path forward as soon as possible so that we can begin implementing.","username":"jyellick","ts":"2018-03-09T06:58:04.160Z"}
{"msg":"Folks - can we get some eyes on https://gerrit.hyperledger.org/r/11867  ?  This is the removal of FSM.  Would like to get this in so that we can get https://gerrit.hyperledger.org/r/18699 (refactoring to make the code base more testable and give a foundation for adding new things) rebased and it as well","username":"mastersingh24","ts":"2018-03-09T11:12:06.598Z"}
{"msg":"Folks - can we get some eyes on https://gerrit.hyperledger.org/r/11867  ?  This is the removal of FSM.  Would like to get this in so that we can get https://gerrit.hyperledger.org/r/18699 (refactoring to make the code base more testable and give a foundation for adding new things) rebased and it in as well","username":"mastersingh24","ts":"2018-03-09T11:12:06.598Z"}
{"msg":"@muralisr should append his signed-off-by to the first one... ","username":"yacovm","ts":"2018-03-09T11:34:08.751Z"}
{"msg":"the change set by @sykesm you pointed should be updated, as some of the code there was split into other change sets. ","username":"yacovm","ts":"2018-03-09T11:35:25.000Z"}
{"msg":"yep and yep ","username":"mastersingh24","ts":"2018-03-09T11:49:34.137Z"}
{"msg":"@mastersingh24 It looks like you are still advocating to do docker multi-architecture support in 1.1: https://jira.hyperledger.org/browse/FAB-8338 .","username":"dave.enyeart","ts":"2018-03-09T14:46:49.875Z"}
{"msg":"If we do a change like that, I think we must do a release candidate 2 so that people can test it out, before 1.1 GA","username":"dave.enyeart","ts":"2018-03-09T14:47:11.778Z"}
{"msg":"We can easily test this out without needing to put out a new build or RC.\nBut I'm also fine with doing this later as well","username":"mastersingh24","ts":"2018-03-09T14:55:41.390Z"}
{"msg":"The download scripts already re-tag images as :latest - so the samples for 1.1 will just work as the compose files refer to latest","username":"mastersingh24","ts":"2018-03-09T14:56:32.156Z"}
{"msg":"@mastersingh24 the samples also allow a `-i` flag to indicate the specific image version.  This is used in the upgrade tutorial.","username":"dave.enyeart","ts":"2018-03-09T15:03:28.430Z"}
{"msg":"@mastersingh24 the samples also allow a `-i` flag to indicate the specific image version.  This is used in the upgrade tutorial.  The sample scripts then generate the docker tag as `i)  IMAGETAG=`uname -m`\"-\"$OPTARG`","username":"dave.enyeart","ts":"2018-03-09T15:03:28.430Z"}
{"msg":"@mastersingh24 the samples also allow a `-i` flag to indicate the specific image version.  This is used in the upgrade tutorial.  The sample scripts then generate the docker tag as *i)  IMAGETAG=`uname -m`\"-\"$OPTARG*","username":"dave.enyeart","ts":"2018-03-09T15:03:28.430Z"}
{"msg":"well that was a terrible idea  :(","username":"mastersingh24","ts":"2018-03-09T15:04:29.558Z"}
{"msg":"although you can still update from latest to latest  ;)","username":"mastersingh24","ts":"2018-03-09T15:04:43.433Z"}
{"msg":"or anything to latest  ;)","username":"mastersingh24","ts":"2018-03-09T15:04:58.877Z"}
{"msg":"but again -- samples can be updated without putting out new builds","username":"mastersingh24","ts":"2018-03-09T15:05:15.714Z"}
{"msg":"that was my point","username":"mastersingh24","ts":"2018-03-09T15:05:20.926Z"}
{"msg":"but as I said, we can delay","username":"mastersingh24","ts":"2018-03-09T15:05:30.584Z"}
{"msg":"right, these things tend to have unanticipated consequences, i'm just suggesting it would be safer to try something new on a rc2 rather than GA release, so that we get a wider audience trying it out.","username":"dave.enyeart","ts":"2018-03-09T15:11:09.220Z"}
{"msg":"my preference would be to wait until 1.2, it's only a quarter away :)","username":"dave.enyeart","ts":"2018-03-09T15:11:59.344Z"}
{"msg":"that's fine too","username":"mastersingh24","ts":"2018-03-09T15:34:21.392Z"}
{"msg":"I do believe that the existing tags are still available even if we go with multi-arch","username":"mastersingh24","ts":"2018-03-09T15:34:50.450Z"}
{"msg":"but should be fine to do post 1.1 release","username":"mastersingh24","ts":"2018-03-09T15:35:02.696Z"}
{"msg":"Ok, let's do docker multi-architecture in 1.2 then.  Luis is also making some comments in https://gerrit.hyperledger.org/r/#/c/18467/ , so better to let this bake than rush it out.","username":"dave.enyeart","ts":"2018-03-09T16:19:40.715Z"}
{"msg":"good call, not a good idea to make radical changes at this hour","username":"cbf","ts":"2018-03-09T18:33:16.453Z"}
{"msg":"Fabric 1.1 Retrospective - I've pulled together a retrospective document based on maintainer meeting and other responses I've received:","username":"dave.enyeart","ts":"2018-03-12T05:32:55.259Z"}
{"msg":"https://docs.google.com/document/d/1qyYDY6yn8_unFKmxmUDtTs2tP6DHCf9QNE5Rh-w1FMQ/edit?usp=sharing","username":"dave.enyeart","ts":"2018-03-12T05:33:04.139Z"}
{"msg":"I added access based on the gmail IDs that I have.  Ping me or request access via the doc so that I can add your gmail ID to the access list.","username":"dave.enyeart","ts":"2018-03-12T05:34:07.441Z"}
{"msg":"I intend to share public, but wanted maintainers to do a pass first","username":"dave.enyeart","ts":"2018-03-12T05:34:43.030Z"}
{"msg":"Please add your ideas and edits","username":"dave.enyeart","ts":"2018-03-12T05:35:35.561Z"}
{"msg":"@here Maintainers:\n\nAs we enter development for v1.2, it is time for us to make a concrete decision with respect to chaincode lifecycle. The existing problems have been known for around 6 months, and despite at least 9 distinct proposals, there is still no consensus to an approach.\n\nAt the maintainer's meeting on February 5th, it was my impression that we agreed upon one more week for alternate proposals and deliberation, then we would make a decision. It is now (obviously) over a month later. We need to end this. The proposal needs to:\n\nA. Solve the original problem: \"restrict who can instantiate chaincodes on a channel\"\nB. Be possible to implement correctly by the release of v1.2.\nC. Support the other v1.2 (and unloved v1.0/v1.1) use cases, like private data, and pluggable escc/vscc. (See [1])\n\nThere is a design task, for the chaincode lifecycle epic: https://jira.hyperledger.org/browse/FAB-8787 . In this task, there is a link to a design document which IMO addresses all three of these points. Like all of the proposals, there are things to dislike about it, but IMO this is not an item which brings a lot of value to our users, and I would much rather we be devoting our time and energy to pieces like BFT ordering or ZK which we know users are asking for. There are other proposals, which I do not personally believe satisfy (A), (B), (C), so I will leave it to others to bring them forward if they feel they are viable.\n\nSo, I come here to you fellow maintainers, to see if we can get some agreement on a path forward. In my opinion, we need a concrete and final decision on lifecycle ASAP, ideally within the next 48 hous, but definitely by the end of the week. I always hope that we can build consensus around the decisions in fabric, but we cannot afford another 6 months of debate, and there is nothing to indicate optimism that we will arrive at a unanimous decision anytime soon.\n\n[1] Because it seems to be a point which is not acknowledged in the comments on the doc: to support pluggable escc/vscc, I see no way to solve chaincode lifecycle without splitting define and Init. At validation time, both the VSCC of the LSCC and the custom VSCC of the chaincode must be satisfied. Since there is only one set of endorsements, and only the ESCC of the initially called chaincode (LSCC) endorses, a cc2cc style Init can never pass validation, and therefore can never be instantiated. If we are dead set on not splitting define/Init, the only way I see to fix cc2cc invocation with different ESCC/VSCCs, would be to change our transaction format to accommodate multiple sets of endorsements, and change the invocation path to invoke the ESCC for each chaincode in a cc2cc context, and update the corresponding validation code to map the correct set of endorsements to the correct VSCC. Finally, even if all of this were changed, we would still have the problem that one of the rationales for custom ESCC/VSCC is for zero-knowledge applications, where revealing the identity of the endorsing peer breaks the security of the application, and bundling standard X.509 endorsements with ZK ones would be counterproductive. Even if there is a clever way to address the latter problem, all of these changes seem sufficiently big that trying to satisfy (B) of implementing correctly for v1.2 is unlikely.","username":"jyellick","ts":"2018-03-12T20:21:35.491Z"}
{"msg":"I must say I don't understand the problem with splitting `instantiate` into `define` and `init` - the tough part is behind all these - to collaborate out of band and install the metadata package on the chaincodes.\nWith service discovery capabilites - the client SDK knows exactly which peers it can ask for `define` and which for `init` and it should be a breeze - coupled with registering to events - we should be make those 2 appear atomic to the end-user.","username":"yacovm","ts":"2018-03-12T20:31:18.426Z"}
{"msg":"I must say I don't understand the problem with splitting `instantiate` into `define` and `init` - the tough part in the design is actually behind both of them - to collaborate out of band and install the metadata package on the chaincodes.\nWith service discovery capabilites - the client SDK knows exactly which peers it can ask for `define` and which for `init` and it should be a breeze - coupled with registering to events - we should be make those 2 appear atomic to the end-user.","username":"yacovm","ts":"2018-03-12T20:31:18.426Z"}
{"msg":"I must say I don't understand the problem with splitting `instantiate` into `define` and `init` - the tough part in the design is actually behind both of them - to collaborate out of band and install the metadata package on the chaincodes.\nWith service discovery capabilites - the client SDK knows exactly which peers it can ask for `define` (LSCC EP) and which for `init` (since it has been defined a couple of second ago!) and it should be a breeze - coupled with registering to events - we should be make those 2 appear atomic to the end-user.","username":"yacovm","ts":"2018-03-12T20:31:18.426Z"}
{"msg":"I must say I don't understand the problem with splitting `instantiate` into `define` and `init` - the tough part in the design is actually behind both of them - to collaborate out of band and install the metadata package on the chaincodes.\nWith service discovery capabilites - the client SDK knows exactly which peers it can ask for `define` (LSCC EP) and which for `init` (since it has been defined a couple of second ago!) and it should be a breeze - coupled with registering to events - the end user doesn't have to do anything at all. He/she can sit back and relax while the chaincodes is being defined and init-ed!","username":"yacovm","ts":"2018-03-12T20:31:18.426Z"}
{"msg":"I must say I don't understand the problem with splitting `instantiate` into `define` and `init` - the tough part in the design is actually behind both of them - to collaborate out of band and install the metadata package on the chaincodes.\nWith service discovery capabilites - the client SDK knows exactly which peers it can ask for `define` (LSCC EP) and which for `init` (since it has been defined a couple of second ago!) and it should be a breeze - coupled with registering to events - the end user doesn't have to do anything at all. He/she can sit back and relax while the chaincode is being defined and init-ed!","username":"yacovm","ts":"2018-03-12T20:31:18.426Z"}
{"msg":"I must say I don't understand the problem with splitting `instantiate` into `define` and `init` - the tough part in the design is actually _ before _ both of them - to collaborate out of band and install the metadata package on the chaincodes.\nWith service discovery capabilites - the client SDK knows exactly which peers it can ask for `define` (LSCC EP) and which for `init` (since it has been defined a couple of second ago!) and it should be a breeze - coupled with registering to events - the end user doesn't have to do anything at all. He/she can sit back and relax while the chaincode is being defined and init-ed!","username":"yacovm","ts":"2018-03-12T20:31:18.426Z"}
{"msg":"Personally, I never understood the overemphasis that `init` had been receiving  as a special function at the first place.","username":"manish-sethi","ts":"2018-03-12T20:35:38.889Z"}
{"msg":"@jyellick +1 to try and wrap this up soon","username":"muralisr","ts":"2018-03-12T21:46:10.423Z"}
{"msg":"Has joined the channel.","username":"GopalPanda","ts":"2018-03-13T01:53:54.207Z","type":"uj"}
{"msg":"As an update to what was posted above, I believe we have reached an agreement for the approach to chaincode lifecycle as linked in the document to FAB-8787.  Although the agreement comes with some reservations, since there is agreement, I'll plan to move forward with coordinating an implementation for v1.2.","username":"jyellick","ts":"2018-03-14T02:14:52.339Z"}
{"msg":"Thank you Jason for your patience and diligence to have successfully driven this through consensus. While it’s been clear for a while that no single solution would make all maintainers 100% satisfied, you have woven a path that meets the core objectives and that all maintainers can live with. While it’s been a challenging process, there’s a lot to be proud of here in terms of the consensus building and respect for everybody’s ideas.\nAnd thanks to everybody that worked on various proposals, as each revision helped to nudge us towards a workable solution.\nTime to execute!","username":"dave.enyeart","ts":"2018-03-14T04:20:03.410Z"}
{"msg":"important one to review for 1.1: https://gerrit.hyperledger.org/r/#/c/19157/","username":"dave.enyeart","ts":"2018-03-14T16:11:08.433Z"}
{"msg":"We intend to cut 1.1 release tomorrow.  1.1 has held up well under system test, and the number of new defect arrivals has been very low and slowing.","username":"dave.enyeart","ts":"2018-03-14T22:48:41.612Z"}
{"msg":"We intend to cut 1.1 release tomorrow.  1.1 rc1 has held up well under system test, and the number of new defect arrivals has been very low and slowing.","username":"dave.enyeart","ts":"2018-03-14T22:48:41.612Z"}
{"msg":"@here We intend to cut 1.1 release tomorrow.  1.1 rc1 has held up well under system test, and the number of new defect arrivals has been very low and slowing.","username":"dave.enyeart","ts":"2018-03-14T22:48:41.612Z"}
{"msg":"fabric and fabric-ca will be cut from release-1.1 branches, so we will have merge freeze in those repositories, no freeze needed on master.","username":"dave.enyeart","ts":"2018-03-14T22:50:17.636Z"}
{"msg":"release-1.1 branches will also be created for fabric-chaincode-node,  fabric-sdk-node,  fabric-samples during the cut.","username":"dave.enyeart","ts":"2018-03-14T22:51:58.553Z"}
{"msg":"fabric-sdk-java has some more fixes and test coming, so it will not be released on the same schedule.","username":"dave.enyeart","ts":"2018-03-14T22:52:56.864Z"}
{"msg":"speak now if you know of any late breaking release blocker","username":"dave.enyeart","ts":"2018-03-14T22:53:40.680Z"}
{"msg":"Release process for v1.1 starting, although we need to wait for some final automated tests to finish later this afternoon.","username":"dave.enyeart","ts":"2018-03-15T18:27:19.564Z"}
{"msg":"we'll post updates in #fabric-release ","username":"dave.enyeart","ts":"2018-03-15T18:27:33.793Z"}
{"msg":"Hyperledger Fabric v1.1 release artifacts are published for fabric, fabric-ca, fabric-chaincode-node, fabric-sdk-node, and documentation. Go ahead and download and try it out:\nhttp://hyperledger-fabric.readthedocs.io/en/release-1.1/samples.html#binaries\nYou can checkout latest master in fabric-samples for trials.\nAfter we get some more success confirmations on various platforms Friday, we will tag fabric-samples and announce the release.","username":"dave.enyeart","ts":"2018-03-16T05:04:56.406Z"}
{"msg":"Release cutting Jira https://jira.hyperledger.org/browse/FAB-8881 sub-tasks are up to date with comments in remaining items.","username":"dave.enyeart","ts":"2018-03-16T05:07:01.604Z"}
{"msg":"@smithbk @rameshthoomu fabric-ca e2e test consistently failing... can you please look into this","username":"cbf","ts":"2018-03-16T13:02:56.444Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/19273/","username":"cbf","ts":"2018-03-16T13:03:08.601Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2018-03-18T03:46:56.110Z","type":"uj"}
{"msg":"Does the default branch need to change from `release-1.0` to `release-1.1`? https://github.com/hyperledger/fabric/branches","username":"rjones","ts":"2018-03-18T03:47:23.216Z"}
{"msg":"yes, default branch should be changed to release-1.1 for these projects:","username":"dave.enyeart","ts":"2018-03-18T04:09:56.613Z"}
{"msg":"fabric","username":"dave.enyeart","ts":"2018-03-18T04:10:08.985Z"}
{"msg":"fabric-ca","username":"dave.enyeart","ts":"2018-03-18T04:10:17.191Z"}
{"msg":"fabric-chaincode-node","username":"dave.enyeart","ts":"2018-03-18T04:10:30.712Z"}
{"msg":"fabric-sdk-node","username":"dave.enyeart","ts":"2018-03-18T04:10:42.345Z"}
{"msg":"fabric-samples","username":"dave.enyeart","ts":"2018-03-18T04:11:16.878Z"}
{"msg":"also, fabric-samples `release` branch can be deleted now that we have `release-1.0` branch, like we did in the other projects (I confirmed with Ramesh that nothing in CI uses `release`)","username":"dave.enyeart","ts":"2018-03-18T04:12:29.266Z"}
{"msg":"@dave.enyeart could you log in to github and go here: https://github.com/hyperledger/fabric-samples/network/dependencies#balance-transfer%252Fpackage-lock.json please","username":"rjones","ts":"2018-03-18T04:15:54.204Z"}
{"msg":"hmm I can't add you as a collaborator","username":"rjones","ts":"2018-03-18T04:17:29.303Z"}
{"msg":"i'm there","username":"dave.enyeart","ts":"2018-03-18T04:17:58.891Z"}
{"msg":"do you want me to file that bug or no?","username":"rjones","ts":"2018-03-18T04:18:03.695Z"}
{"msg":"you might need to refresh","username":"rjones","ts":"2018-03-18T04:18:31.485Z"}
{"msg":"yes go ahead and open a jira","username":"dave.enyeart","ts":"2018-03-18T04:19:12.022Z"}
{"msg":"probably should follow the process from the hyperledger wiki right?","username":"dave.enyeart","ts":"2018-03-18T04:20:19.082Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8947","username":"rjones","ts":"2018-03-18T04:22:02.201Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/19361/ (master) https://gerrit.hyperledger.org/r/#/c/19363/ (release-1.1)","username":"rjones","ts":"2018-03-19T01:18:17.361Z"}
{"msg":"Starting in two minutes:","username":"dave.enyeart","ts":"2018-03-20T13:58:36.667Z"}
{"msg":"@here Starting in two minutes:","username":"dave.enyeart","ts":"2018-03-20T13:58:36.667Z"}
{"msg":"Community call - Improving the consistency and flexibility of the Fabric Code base - Matt Sykes\nhttps://ibm.webex.com/join/enyeart\nLet's use the dial in number that webex provides.","username":"dave.enyeart","ts":"2018-03-20T13:58:46.305Z"}
{"msg":"Has joined the channel.","username":"wjzheng","ts":"2018-03-20T19:07:16.168Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ShikarSharma","ts":"2018-03-20T22:43:46.998Z","type":"uj"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8788\n\n^ Here is a design of what to do with the Fabric ACLs previously known as RSCC and or Resources.  Any feedback is appreciated.","username":"jyellick","ts":"2018-03-21T19:23:07.338Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-8788\n\n^ Here is a design of what to do with the peer ACLs previously known as RSCC and or Resources.  Any feedback is appreciated.","username":"jyellick","ts":"2018-03-21T19:23:07.338Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2018-03-22T19:04:37.848Z","type":"ul"}
{"msg":"hey guys, question about release numbering","username":"greg.haskins","ts":"2018-03-22T19:47:18.982Z"}
{"msg":"i have a patch to chaintool that I want to get into the v1.1.x stream","username":"greg.haskins","ts":"2018-03-22T19:47:36.729Z"}
{"msg":"the fabric v1.1.0 release ships with chaintool is v1.0.1","username":"greg.haskins","ts":"2018-03-22T19:48:21.717Z"}
{"msg":"the change that I have could go either way in terms of chaintool being v1.0.2 or v1.1.0 (its the addition of a CCI grammar type","username":"greg.haskins","ts":"2018-03-22T19:49:08.822Z"}
{"msg":"given that the grammar type is ABI impacting, it could easily justify a bump of MINOR to v1.1.0","username":"greg.haskins","ts":"2018-03-22T19:49:42.964Z"}
{"msg":"but I didnt want that to be confused with fabric v1.1.0","username":"greg.haskins","ts":"2018-03-22T19:49:52.424Z"}
{"msg":"My personal take would be stick to semver, go to v1.1.0, and maybe add a doc/note somewhere mentioning that its version and Fabric's are not tied together.","username":"jyellick","ts":"2018-03-22T19:59:32.804Z"}
{"msg":"@jyellick that sounds reasonable to me","username":"greg.haskins","ts":"2018-03-22T20:01:13.171Z"}
{"msg":"@jyellick @dave.enyeart https://jira.hyperledger.org/browse/FAB-9061","username":"greg.haskins","ts":"2018-03-22T20:40:22.111Z"}
{"msg":"assuming this is agreed upon, ill cut the release and then submit a CR to update the fabric release-1.1 branch","username":"greg.haskins","ts":"2018-03-22T20:40:49.713Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2018-03-22T22:19:00.312Z","type":"uj"}
{"msg":"https://gerrit.hyperledger.org/r/#/q/FAB-9063 I request further discussion","username":"rjones","ts":"2018-03-22T22:19:20.060Z"}
{"msg":"I get complaints that it is opaque that the Fabric Release Managers having this hidden +2 ability, so I want to make it public.","username":"rjones","ts":"2018-03-22T22:20:14.556Z"}
{"msg":"@rjones: merged for chaintool","username":"greg.haskins","ts":"2018-03-22T22:47:21.179Z"}
{"msg":"@greg.haskins thank you","username":"rjones","ts":"2018-03-22T22:58:11.146Z"}
{"msg":"hi all,  I have a few fixes related to chaintool for v1.1.x that I would love to see get into v1.1.1","username":"greg.haskins","ts":"2018-03-23T13:42:49.294Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-9073","username":"greg.haskins","ts":"2018-03-23T13:42:52.355Z"}
{"msg":"for example","username":"greg.haskins","ts":"2018-03-23T13:42:54.615Z"}
{"msg":"any objections if I start to push some CRs to the release-1.1 branch","username":"greg.haskins","ts":"2018-03-23T13:43:06.161Z"}
{"msg":"?","username":"greg.haskins","ts":"2018-03-23T13:43:07.955Z"}
{"msg":"heres another: https://jira.hyperledger.org/browse/FAB-9059","username":"greg.haskins","ts":"2018-03-23T13:43:35.765Z"}
{"msg":"(actually @muralisr will be tackling 9059","username":"greg.haskins","ts":"2018-03-23T13:43:51.971Z"}
{"msg":"but the target of release-1.1 is the important thing to discuss","username":"greg.haskins","ts":"2018-03-23T13:44:06.214Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/19673/","username":"greg.haskins","ts":"2018-03-23T13:57:26.097Z"}
{"msg":"@cbf @dave.enyeart @mastersingh24 I need a hand. https://gerrit.hyperledger.org/r/#/c/19637/ https://gerrit.hyperledger.org/r/#/c/19635/","username":"rjones","ts":"2018-03-23T16:35:58.702Z"}
{"msg":"@cbf @dave.enyeart @mastersingh24 I think there is a larger discussion you need to have with @rickr in regards to https://gerrit.hyperledger.org/r/#/c/19645/","username":"rjones","ts":"2018-03-23T16:37:21.659Z"}
{"msg":"@rickr the maintainers agreed that the release manages needed to have maintainer (commit) privs for the purpose of cutting branches, tags and merging CRs during a release. Please merge the CR. Thanks","username":"cbf","ts":"2018-03-23T21:21:14.475Z"}
{"msg":"@greg.haskins I think the chaintool update is isolated enough to be low-risk but not sure of the rules around it ( @cbf @dave.enyeart @mastersingh24 , thoughts please ?)","username":"muralisr","ts":"2018-03-24T12:10:01.453Z"}
{"msg":"@muralisr  - I assume you are asking about updating chaintool version for v1.1.1 ?  We should definitely do it for master branch in any case","username":"mastersingh24","ts":"2018-03-24T13:34:45.442Z"}
{"msg":"so basically push to master branch and at some point will pull into v1.1.1 branch @mastersingh24  ?","username":"muralisr","ts":"2018-03-24T13:37:30.265Z"}
{"msg":"minimally we should do master branch.  I'm ok with adding it to v1.1.1 as well ... seems low risk","username":"mastersingh24","ts":"2018-03-24T13:38:06.398Z"}
{"msg":"yeah, my assumption is that almost everything that goes into release-1.1 branch should also go to master....not sure how we want to facilitate that","username":"greg.haskins","ts":"2018-03-24T14:49:36.567Z"}
{"msg":"this is generally a weak spot of the gerrit model","username":"greg.haskins","ts":"2018-03-24T14:49:46.509Z"}
{"msg":"shall I submit a coincident CR to master as well?","username":"greg.haskins","ts":"2018-03-24T14:50:18.983Z"}
{"msg":"i was going to wait until it was merged in 1.1 but I can fire one in any time","username":"greg.haskins","ts":"2018-03-24T14:50:46.402Z"}
{"msg":"I would advise a merge from release to master doing a --ours as appropriate","username":"rjones","ts":"2018-03-24T16:07:54.208Z"}
{"msg":"--no-ff -s etc","username":"rjones","ts":"2018-03-24T16:08:14.776Z"}
{"msg":"@greg.haskins yeah, would be good to get things aligned. ","username":"cbf","ts":"2018-03-26T12:28:54.200Z"}
{"msg":"@cbf I agree we should have a maintainer meeting soon.  I am out of office this week, but don't let that hold things up.  I've dumped my release planning thoughts at the end of the retrospective doc:","username":"dave.enyeart","ts":"2018-03-27T14:15:10.549Z"}
{"msg":"@cbf I agree we should have a maintainer meeting soon.  I am out of office this week, but don't let that hold things up.  I've dumped my release planning thoughts at the end of the retrospective doc, for lack of a better place:","username":"dave.enyeart","ts":"2018-03-27T14:15:10.549Z"}
{"msg":"https://docs.google.com/document/d/1qyYDY6yn8_unFKmxmUDtTs2tP6DHCf9QNE5Rh-w1FMQ/edit#heading=h.guz3k8svs8k8","username":"dave.enyeart","ts":"2018-03-27T14:15:24.593Z"}
{"msg":"@dave.enyeart you take care, I'll try to do justice to your retro comments/thoughts ","username":"cbf","ts":"2018-03-27T15:03:38.850Z"}
{"msg":"Has joined the channel.","username":"bbehlendorf","ts":"2018-03-28T21:13:52.972Z","type":"uj"}
{"msg":"@here reminder we'll have a maintainers meeting tomorrow at 9 am ET https://wiki.hyperledger.org/community/calendar-public-meetings","username":"cbf","ts":"2018-03-28T21:55:09.661Z"}
{"msg":"@here just a reminder about the maintainers meeting at 9 am ET (15 minutes)","username":"cbf","ts":"2018-03-29T12:45:19.317Z"}
{"msg":"we'll be discussing the retrospective doc above","username":"cbf","ts":"2018-03-29T12:45:33.755Z"}
{"msg":"https://zoom.us/j/969277614","username":"cbf","ts":"2018-03-29T12:47:47.309Z"}
{"msg":"@here zoom crashed","username":"cbf","ts":"2018-03-29T13:46:46.144Z"}
{"msg":"cannot restart @tkuhrt ","username":"cbf","ts":"2018-03-29T13:46:59.098Z"}
{"msg":"are others having same problem?","username":"cbf","ts":"2018-03-29T13:47:09.574Z"}
{"msg":"We are all still in","username":"tkuhrt","ts":"2018-03-29T13:47:16.397Z"}
{"msg":"when I try to join it says invalid meeting id","username":"cbf","ts":"2018-03-29T13:47:29.168Z"}
{"msg":"Hmm...","username":"tkuhrt","ts":"2018-03-29T13:47:37.062Z"}
{"msg":"I joined successfully < 5 minutes ago","username":"jyellick","ts":"2018-03-29T13:47:42.738Z"}
{"msg":"https://zoom.us/j/969277614","username":"tkuhrt","ts":"2018-03-29T13:47:44.581Z"}
{"msg":"just provide '#' (empty meeting ID) - maybe it works?","username":"yacovm","ts":"2018-03-29T13:47:52.944Z"}
{"msg":"User <em>User_1</em> added by <em>rjones</em>.","username":"rjones","ts":"2018-03-29T20:55:36.315Z","type":"au"}
{"msg":"When this change is merged: https://gerrit.hyperledger.org/r/#/c/19941/ the in-flight changes for project:fabric will either need to have CI run again, or be manually voted on.","username":"rjones","ts":"2018-03-29T20:56:22.251Z"}
{"msg":"When this change is merged: https://gerrit.hyperledger.org/r/#/c/19503/ the fabric CI process will change substantially.","username":"rjones","ts":"2018-03-29T20:56:57.137Z"}
{"msg":"Any objections? This may create some turbulence for a little while.","username":"rjones","ts":"2018-03-29T20:57:33.517Z"}
{"msg":"I suggest we bite the bullet... easter weekend, passover maybe tomorrow is a good time to do this? @rjones  @mastersingh24 - @rameshthoomu @tongli are you guys comfortable? It might also be worthwhile sending an email to the hyperledger-fabric mailing list explaining the new CI pipeline","username":"cbf","ts":"2018-03-29T23:00:36.969Z"}
{"msg":"@cbf I'm not around this weekend. Jenkins is doing nothing ATM. You say go, it can happen now.","username":"rjones","ts":"2018-03-29T23:06:24.941Z"}
{"msg":"@cbf my largest concern is the ~125 in flight changes that will either need a new pass of CI, or manual voting, which is why I've been flogging a couple trivial changes in #fabric-pr-review ","username":"rjones","ts":"2018-03-29T23:07:26.890Z"}
{"msg":"> Build-checks job only trigger for the patch set, rest all triggers based on the comment posted.\nCan you please explain what it means? when a change set is uploaded it will only run the build check and for the rest I need to comment? on the change set?","username":"yacovm","ts":"2018-03-29T23:08:15.835Z"}
{"msg":"@yacovm I _think_ the first job posts the comments to trigger other jobs.","username":"rjones","ts":"2018-03-29T23:09:56.535Z"}
{"msg":"@yacovm I think the first job posts the comments to trigger other jobs.","username":"rjones","ts":"2018-03-29T23:09:56.535Z"}
{"msg":"oh, the 21 century is here","username":"yacovm","ts":"2018-03-29T23:10:32.129Z"}
{"msg":"I've been doing some cleanup, maybe tomorrow? I'd like a few others to weigh in in agreement","username":"cbf","ts":"2018-03-29T23:17:31.037Z"}
{"msg":"OK. I'll direct other conversation into -pr-r","username":"rjones","ts":"2018-03-29T23:18:25.559Z"}
{"msg":"posting on behalf of @rameshthoomu ... he opened these high defects based on the recent CI failures. Will be good to get some eyes on these to reduce CI churn and help everyone!","username":"muralisr","ts":"2018-03-30T14:01:27.286Z"}
{"msg":"FAB-9248\nFAB-9100\nFAB-9093\nFAB-9212","username":"muralisr","ts":"2018-03-30T14:01:29.709Z"}
{"msg":"so, I had a few CRs merged to release-1.1.  What is the process for the (expected to be typical) case where those CRs should also apply to master?","username":"greg.haskins","ts":"2018-04-02T15:13:51.422Z"}
{"msg":"are we automating this? maintainers manual merge?  submitters manual re-submit ?","username":"greg.haskins","ts":"2018-04-02T15:14:26.184Z"}
{"msg":"(for all I know, this has already been done..i havent looked yet)","username":"greg.haskins","ts":"2018-04-02T15:16:25.848Z"}
{"msg":"I am more curious, as I know this was an unsolved problem in the v0.6 -> v1.0 days ","username":"greg.haskins","ts":"2018-04-02T15:16:49.225Z"}
{"msg":"@greg.haskins  -  No automation ... but there's a process.\nAs you know, now that we have cut v1.1.0, we should only be making bug fixes and improving docs on that branch.  In both cases, when someone actually fixes the bug or creates the doc, they should actually tag the JIRA with the versions they think the bug/doc fix should go to.  Once a CR is reviewed and ready for merge, whoever actually does the merge (or perhaps the reviews) should check the JIRA and if necessary cherrypick the CR to the appropriate branch(es).  If it's not a straight cherrypick, then they can try to fix the conflict or ask the submitter of the CR to create a version for the other branch(es)","username":"mastersingh24","ts":"2018-04-02T16:15:21.461Z"}
{"msg":"I should say that both maintainer and submitter can do the cherrypick / resubmit, but the responsibility for ensuring patches make it to all relevant releases / branches falls on the maintainers","username":"mastersingh24","ts":"2018-04-02T16:21:05.121Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=YuTpjR847ArGz7si3) @mastersingh24 roger, ill submit those CRs now then","username":"greg.haskins","ts":"2018-04-02T16:38:21.298Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=YuTpjR847ArGz7si3","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=YuTpjR847ArGz7si3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"hopefully it wont be as chaotic as the v0.6 -> v1.0 branches since there should be much smaller divergence targeted to v1.1.x from v1.1.0","username":"greg.haskins","ts":"2018-04-02T16:39:05.360Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=WHHDTH5S3AHTrGxbS) @mastersingh24 BTW: I think this is understood, but the stuff I had been putting forth I wouldnt classify as either \"bug\" nor 'doc\" per se, but it is intended to be fairly low-risk improvements to the build to facilitate maintenance of 1.1.x","username":"greg.haskins","ts":"2018-04-02T16:41:31.075Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WHHDTH5S3AHTrGxbS","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WHHDTH5S3AHTrGxbS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=WHHDTH5S3AHTrGxbS) @mastersingh24 BTW: I think this is understood, but some of the stuff I had been putting forth I wouldnt classify as either \"bug\" nor 'doc\" per se, but it is intended to be fairly low-risk improvements to the build to facilitate maintenance of 1.1.x","username":"greg.haskins","ts":"2018-04-02T16:41:31.075Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WHHDTH5S3AHTrGxbS","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=WHHDTH5S3AHTrGxbS","remote":true,"fileId":null,"fileName":null}]}
{"msg":"e.g. \"make docker-list\"","username":"greg.haskins","ts":"2018-04-02T16:41:59.198Z"}
{"msg":"I agree ... ","username":"mastersingh24","ts":"2018-04-02T19:34:59.911Z"}
{"msg":"test","username":"greg.haskins","ts":"2018-04-04T22:21:44.473Z"}
{"msg":"anyone else seeing weirdness with this RC?","username":"greg.haskins","ts":"2018-04-04T22:22:07.698Z"}
{"msg":"I noticed it was super quiet today","username":"rjones","ts":"2018-04-04T22:22:29.704Z"}
{"msg":"two things I observed: 1) I was spontaneously logged out perhaps around 6pm (that generally never happens)","username":"greg.haskins","ts":"2018-04-04T23:27:34.098Z"}
{"msg":"and 2) my messages to @jyellick appear to be pending, even though he appears to be online","username":"greg.haskins","ts":"2018-04-04T23:27:57.581Z"}
{"msg":"not sure why my messages work in this channel and not on PM though","username":"greg.haskins","ts":"2018-04-04T23:28:13.933Z"}
{"msg":"+2 I was just notified about posts that were hours old according to TS","username":"cbf","ts":"2018-04-04T23:32:18.936Z"}
{"msg":"@rjones maybe needs a reboot?","username":"cbf","ts":"2018-04-04T23:32:34.829Z"}
{"msg":"@greg.haskins  - maybe RC does not like you anymore?  ;)","username":"mastersingh24","ts":"2018-04-05T11:18:09.557Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yCGvhRQ7uTeTGr2zC) @mastersingh24 indeed","username":"greg.haskins","ts":"2018-04-05T12:00:59.513Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yCGvhRQ7uTeTGr2zC","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yCGvhRQ7uTeTGr2zC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I think it's starting to hate me as well .... to be fair, I do say mean things about it","username":"mastersingh24","ts":"2018-04-05T16:09:44.923Z"}
{"msg":"As we've discussed previously, our documented guidance around using Vagrant or not is inconsistent.  We need to clarify the docs once and for all, I think the choices are:\n1) recommend to use vagrant\n2) recommend not to use vagrant, except in certain scenarios (and still maintain it)\n3) recommend not to use vagrant at all (and potentially remove the support)\n4) state that it is developer choice and highlight the pros/cons of using vagrant (what are they?)\nPersonally, I’ve just always used vagrant as that was the recommendation when I started, and I’ve had a decent experience with it.\nDoes anybody have strong opinions?","username":"dave.enyeart","ts":"2018-04-07T13:09:15.045Z"}
{"msg":"I'm not sure why we need vagrant now? can't a windows developer just make an ubuntu 16 vm and run `make` ? ","username":"yacovm","ts":"2018-04-07T13:12:24.245Z"}
{"msg":"I'm not sure why we need vagrant now? can't a windows user just make an ubuntu 16 vm and run `make` ? ","username":"yacovm","ts":"2018-04-07T13:12:24.245Z"}
{"msg":"in the past the dependencies were much more like rocksDB, BDD, etc.","username":"yacovm","ts":"2018-04-07T13:16:37.070Z"}
{"msg":":eight_spoked_asterisk: not a strong opinion... ","username":"yacovm","ts":"2018-04-07T13:20:34.859Z"}
{"msg":"* not a strong opinion... ","username":"yacovm","ts":"2018-04-07T13:20:34.859Z"}
{"msg":"older versions of Windows not so much...","username":"cbf","ts":"2018-04-07T17:25:07.092Z"}
{"msg":"at the end of the day, this is a fabric developer thing only","username":"cbf","ts":"2018-04-07T17:25:37.657Z"}
{"msg":"I do know that some still use it based on some of the comments I've read in RC and email","username":"cbf","ts":"2018-04-07T17:26:04.411Z"}
{"msg":"what I think is that IFF we keep it, we maintain it","username":"cbf","ts":"2018-04-07T17:26:36.490Z"}
{"msg":"but, that also means someone needs to care","username":"cbf","ts":"2018-04-07T17:26:55.334Z"}
{"msg":"I would recommend we send a note to the mailing list and ask if anyone cannot live without it, wait a week (reminding in the interim that it will be removed if we don't receive sufficient interest) and make a decision based on that feedback.","username":"cbf","ts":"2018-04-07T17:34:19.891Z"}
{"msg":"@kostas did have comment about his use of it and the value he sees .... but agree we can't just leave this thing around with no one updating it","username":"mastersingh24","ts":"2018-04-08T12:35:50.119Z"}
{"msg":"Has joined the channel.","username":"pandrejko","ts":"2018-04-09T13:00:00.786Z","type":"uj"}
{"msg":"+1","username":"cbf","ts":"2018-04-09T14:32:10.877Z"}
{"msg":"All fair points on it being a dev thing and needing maintenance. If nobody offers to maintain, I'm fine with having it removed.","username":"kostas","ts":"2018-04-09T15:54:00.886Z"}
{"msg":"True. Just to say, that some of our devs are (still) using Vagrant for dev - but that's mainly because/to check that our stuff works with Vagrant.","username":"JonathanLevi","ts":"2018-04-09T18:20:13.796Z"}
{"msg":"If we agree to remove it, we will work \"natively\" with Ubuntu only.","username":"JonathanLevi","ts":"2018-04-09T18:20:41.164Z"}
{"msg":"Wonder who is using Ubuntu 18.04 \"final beta\" already... or am I the only crazy one, who spent the weekend on fixing his/her bluetooth headset volume ;-)","username":"JonathanLevi","ts":"2018-04-09T18:21:27.072Z"}
{"msg":"I would not like to volunteer to maintain it, but, I do fire it up from time to time when I am trying to verify that a failure or strange output is not a peculiarity of my local environment","username":"jyellick","ts":"2018-04-09T19:11:50.089Z"}
{"msg":"Has joined the channel.","username":"guoger","ts":"2018-04-10T03:06:07.590Z","type":"uj"}
{"msg":"for a good laugh: https://www.youtube.com/watch?v=NSemlYagjIU","username":"cbf","ts":"2018-04-10T10:53:48.308Z"}
{"msg":"i am laughing but also crying","username":"yacovm","ts":"2018-04-10T10:57:14.688Z"}
{"msg":"lol","username":"cbf","ts":"2018-04-10T11:03:40.826Z"}
{"msg":"it's brilliant","username":"cbf","ts":"2018-04-10T11:03:54.137Z"}
{"msg":"LOL the tests that are broken, \"just ignore them\"","username":"cbf","ts":"2018-04-10T11:08:24.719Z"}
{"msg":"comedy","username":"mastersingh24","ts":"2018-04-10T11:09:20.349Z"}
{"msg":"I knew Scons was part of that.","username":"rjones","ts":"2018-04-10T14:10:12.795Z"}
{"msg":"For the maintainer meeting, I put together a view of v1.2 release plan.  Feel free to preview and make comments for discussion:","username":"dave.enyeart","ts":"2018-04-11T11:45:31.988Z"}
{"msg":"https://docs.google.com/document/d/1prtMkLOkZZx7RYi_meb-3yY6lgFhISLQtx8AcSMDhdo/edit","username":"dave.enyeart","ts":"2018-04-11T11:45:41.599Z"}
{"msg":"@here maintainer meeting starting","username":"dave.enyeart","ts":"2018-04-11T13:03:57.409Z"}
{"msg":"https://zoom.us/j/797255621 ","username":"dave.enyeart","ts":"2018-04-11T13:04:07.959Z"}
{"msg":"Thanks @dave.enyeart  and nice job facilitating the call!","username":"mastersingh24","ts":"2018-04-11T14:06:38.429Z"}
{"msg":"Has left the channel.","username":"harrijk","ts":"2018-04-11T14:10:05.080Z","type":"ul"}
{"msg":"As asked in this morning's maintainers call, all recordings are stored in the following Google Drive folder: https://drive.google.com/drive/u/0/folders/15w14LqjdgREkCabSzWfsgZpj4BPypa9a (currently uploading this morning's call)","username":"tkuhrt","ts":"2018-04-11T18:28:58.696Z"}
{"msg":"^^ Is this link somewhere on our website/wiki? (If not, can we make it so?)","username":"kostas","ts":"2018-04-11T19:57:25.697Z"}
{"msg":"@kostas : I added it under https://wiki.hyperledger.org/projects/fabric?&#meetings","username":"tkuhrt","ts":"2018-04-11T23:03:46.073Z"}
{"msg":"Can someone with access to the allowed components list in JIRA create a \"fabric-common\" component please?","username":"kostas","ts":"2018-04-13T14:24:42.608Z"}
{"msg":"There are issues that span a range of components, and the current practice of tagging everything with \"fabric-peer, fabric-orderer, fabric-foo, fabric-bar\" etc. strikes me as silly. (For instance, how would you label something related to policies/cauthdsl?)","username":"kostas","ts":"2018-04-13T14:26:41.013Z"}
{"msg":"@kostas https://jira.hyperledger.org/issues/?jql=project%20%3D%20FAB%20AND%20component%20%3D%20fabric-common","username":"rjones","ts":"2018-04-13T16:33:54.040Z"}
{"msg":"@rjones: Excellent, thank you.","username":"kostas","ts":"2018-04-13T16:37:52.060Z"}
{"msg":"I wish to make a possible controversial change to Gerrit. I'm asking all the teams that use Gerrit. May I require JIRA links in all Gerrit changes? this isn't something I can enable on a per-project basis.","username":"rjones","ts":"2018-04-17T22:41:11.591Z"}
{"msg":"We ask people to do it regardless, so requiring it is one less thing we have to try to enforce ourselves","username":"dave.enyeart","ts":"2018-04-18T00:18:45.260Z"}
{"msg":"ok for fabric, fabric-ca, fabric-sdk* etc ","username":"cbf","ts":"2018-04-18T13:31:22.868Z"}
{"msg":"I think, though, that you will want to raise this across all projects maybe via hyperledger-technical-discuss list?","username":"cbf","ts":"2018-04-18T13:32:10.136Z"}
{"msg":"We seem to be challenged with oversight and reviews in the areas of build, CI, image creation. Probably because this is a niche area that requires certain skills and dedicated time.  Is there a maintainer that could volunteer to be our point person in this area, go deep, and provide oversight and guidance?  Or perhaps we need to nominate a non-maintainer that could help in this area (potentially becoming a maintainer in the future). Thoughts?","username":"dave.enyeart","ts":"2018-04-18T14:16:24.929Z"}
{"msg":"Note - it is the stalled docker multi-architecture support (https://gerrit.hyperledger.org/r/#/c/18467/) that triggered this...but I've been thinking we need a point person in this area for a while.","username":"dave.enyeart","ts":"2018-04-18T14:16:31.793Z"}
{"msg":"Has joined the channel.","username":"ericmvaughn","ts":"2018-04-19T13:35:04.710Z","type":"uj"}
{"msg":"I'd be happy to lead this @dave.enyeart ","username":"cbf","ts":"2018-04-19T15:22:39.517Z"}
{"msg":"Has joined the channel.","username":"huikang","ts":"2018-04-20T19:21:54.123Z","type":"uj"}
{"msg":"Taking a stub at the CRs starting from the older ones first -- how do we treat CRs related to features that won't be in 1.2? In an ideal world, the submitter would know that, and they'd be OK with rebasing until the time is right to merge. I have a feeling this is not the case for several of the CRs that I'm seeing though. So, what is the message that we leave in those CRs? Do we let them know that the CR won't cut it for the next version, and live with a CR that will still there stale until the time is right to merge (at which point we invite the submitter to rebase and edit as needed)? Do we abandon the CR, at the risk of discouraging submitters and sending the wrong message? Between the two options, I'm tending towards the former, but maybe a better suggestion is still out there.","username":"kostas","ts":"2018-04-21T00:17:38.910Z"}
{"msg":"Taking a stub at the CRs starting from the older ones first -- how do we treat CRs related to features that won't be in 1.2? In an ideal world, the submitter would know that, and they'd be OK with rebasing until the time is right to merge. I have a feeling this is not the case for several of the CRs that I'm seeing though. So, what is the message that we leave in those CRs? Do we let them know that the CR won't cut it for the next version, and live with a CR that will stale there until the time is right to merge (at which point we invite the submitter to rebase and edit as needed)? Do we abandon the CR, at the risk of discouraging submitters and sending the wrong message? Between the two options, I'm tending towards the former, but maybe a better suggestion is still out there.","username":"kostas","ts":"2018-04-21T00:17:38.910Z"}
{"msg":"I think that we should do the former - advise it will be postponed until post 1.2 and maybe mark as WIP so that it won't be confused","username":"cbf","ts":"2018-04-21T00:25:26.840Z"}
{"msg":"or better yet, mark as [1.3] ","username":"cbf","ts":"2018-04-21T00:26:08.789Z"}
{"msg":"Right .... this is not atypical at all ... I had some CRs against loopback and Kafka back in the day which hung out for a while","username":"mastersingh24","ts":"2018-04-21T13:06:43.494Z"}
{"msg":"it just needs to be communicated early","username":"cbf","ts":"2018-04-21T20:22:21.870Z"}
{"msg":"Has joined the channel.","username":"hosemose","ts":"2018-04-24T04:59:35.045Z","type":"uj"}
{"msg":"Has joined the channel.","username":"gombiuda","ts":"2018-04-24T06:09:51.057Z","type":"uj"}
{"msg":"@here apologies for the late notice, but we will hold our bi-weekly maintainers meeting tomorrow, Wednesday April 25 at 9 am ET","username":"cbf","ts":"2018-04-24T11:50:35.429Z"}
{"msg":"@tkuhrt would you please add this as a regular call (bi-weekly wednesdays at 9 am)","username":"cbf","ts":"2018-04-24T11:51:06.872Z"}
{"msg":"we'll also need a zoom link, thanks","username":"cbf","ts":"2018-04-24T11:51:23.031Z"}
{"msg":"@cbf: Details on the community calendar - https://www.google.com/calendar/event?eid=M2tzZzZzZ2xtM3YxbDM3ZWtrOWI5dHZtMWxfMjAxODA0MjVUMTMwMDAwWiBsaW51eGZvdW5kYXRpb24ub3JnX25mOXU2NGc5azlydmQ5Zjh2cDR2dXIyM2IwQGc&ctz=America/New_York","username":"tkuhrt","ts":"2018-04-24T17:46:48.968Z"}
{"msg":"thanks @tkuhrt !","username":"cbf","ts":"2018-04-24T19:07:49.474Z"}
{"msg":"Has joined the channel.","username":"anishman","ts":"2018-04-25T10:37:20.882Z","type":"uj"}
{"msg":"@here reminder - maintainer meeting in 30 minutes","username":"dave.enyeart","ts":"2018-04-25T12:30:17.530Z"}
{"msg":"we can use the release planning doc to guide the discussion again:","username":"dave.enyeart","ts":"2018-04-25T12:30:34.877Z"}
{"msg":"https://docs.google.com/document/d/1prtMkLOkZZx7RYi_meb-3yY6lgFhISLQtx8AcSMDhdo/edit","username":"dave.enyeart","ts":"2018-04-25T12:30:35.085Z"}
{"msg":"I've added some discussion points in there... feel free to add other topics for discussion","username":"dave.enyeart","ts":"2018-04-25T12:31:00.777Z"}
{"msg":"https://www.google.com/url?q=https%3A%2F%2Fzoom.us%2Fj%2F797255621","username":"dave.enyeart","ts":"2018-04-25T12:58:58.323Z"}
{"msg":"https://zoom.us/j/797255621","username":"dave.enyeart","ts":"2018-04-25T12:58:58.323Z"}
{"msg":"Has joined the channel.","username":"dthibeau94","ts":"2018-04-25T13:05:45.016Z","type":"uj"}
{"msg":"Hey, all. Today, the maintainers meeting lasted for 259 minutes because people forgot to log out of Zoom when they were done. This means (I am guessing because I was in the air) that the Architecture WG and the Whitepaper WG was unable to meet. Please be cognizant when you use Zoom, that you must leave the meeting when you are done.","username":"tkuhrt","ts":"2018-04-25T23:43:41.578Z"}
{"msg":"Is there a way to limit the meeting to 60 mins?","username":"cbf","ts":"2018-04-26T00:37:14.394Z"}
{"msg":"I agree that we need to be mindful, but sometimes sh*t happens;-)","username":"cbf","ts":"2018-04-26T00:37:41.020Z"}
{"msg":"No way to limit. Over in #architecture-wg we are talking about moving to a single number for all Hyperledger meetings. ","username":"tkuhrt","ts":"2018-04-27T15:51:07.370Z"}
{"msg":"Has joined the channel.","username":"chainsaw","ts":"2018-04-27T15:52:39.518Z","type":"uj"}
{"msg":"Has joined the channel.","username":"youssefg","ts":"2018-05-02T18:24:28.703Z","type":"uj"}
{"msg":"I'd like to merge https://gerrit.hyperledger.org/r/c/20853/ soon. This transitions us from the x86_64 era to the amd64 era. It needs to be *coordinated* with a patch to CI that @rameshthoomu has teed up, We had to manually verify the change(because it needs the CI patch to verify) but this is ready to go. We just need to be sure that we coordinate the two merges... this has to go first. It may also require some re-triggering of verify jobs. If I could get 2 +2s (and @rameshthoomu please vote as well) then we can schedule the two merges","username":"cbf","ts":"2018-05-03T20:45:57.217Z"}
{"msg":"I've got the -2 just so it isn't accidentally merged prematurely","username":"cbf","ts":"2018-05-03T20:46:27.758Z"}
{"msg":"Has joined the channel.","username":"am","ts":"2018-05-04T19:06:33.639Z","type":"uj"}
{"msg":"","username":"dave.enyeart","ts":"2018-05-05T13:18:56.277Z","attachments":[{"type":"file","title":"Test Strategy-v1.2.pptx.zip","title_link":"/file-upload/LEgqwrJcW3jBThwSM/Test%20Strategy-v1.2.pptx.zip","url":"/file-upload/LEgqwrJcW3jBThwSM/Test%20Strategy-v1.2.pptx.zip","remote":false,"fileId":"LEgqwrJcW3jBThwSM","fileName":"Test Strategy-v1.2.pptx.zip"}]}
{"msg":"(remove .zip extension and then open the PPT)","username":"dave.enyeart","ts":"2018-05-05T13:19:05.381Z"}
{"msg":"We'll review the test strategy with the Epic owners and community during the Monday fabric-scrum timeslot","username":"dave.enyeart","ts":"2018-05-05T13:19:37.476Z"}
{"msg":"We'll review the v1.2 test strategy with the Epic owners and community during the Monday fabric-scrum timeslot","username":"dave.enyeart","ts":"2018-05-05T13:19:37.476Z"}
{"msg":"Feel free to comment/edit and then I'll upload the final one Monday 9:30am","username":"dave.enyeart","ts":"2018-05-05T13:20:40.865Z"}
{"msg":"","username":"dave.enyeart","ts":"2018-05-05T14:01:52.572Z","attachments":[{"type":"file","title":"Test Strategy-v1.2.pptx.zip","title_link":"/file-upload/u6obRCXeEWNi7yMAi/Test%20Strategy-v1.2.pptx.zip","url":"/file-upload/u6obRCXeEWNi7yMAi/Test%20Strategy-v1.2.pptx.zip","remote":false,"fileId":"u6obRCXeEWNi7yMAi","fileName":"Test Strategy-v1.2.pptx.zip"}]}
{"msg":"Has joined the channel.","username":"elainejlai","ts":"2018-05-08T20:12:13.476Z","type":"uj"}
{"msg":"DOn't forget, we have a maintainer's meeting tomorrow at 9 am ","username":"cbf","ts":"2018-05-08T23:21:37.044Z"}
{"msg":"DOn't forget, we have a maintainer's meeting tomorrow at 9 am ET tomorrow","username":"cbf","ts":"2018-05-08T23:21:37.044Z"}
{"msg":"Topic: Hyperledger Fabric Maintainer's Meeting\n\nJoin from PC, Mac, Linux, iOS or Android: https://zoom.us/my/hyperledger.community\n\nOr iPhone one-tap :\n    US: +16465588656,,4034983298#  or +16699006833,,4034983298# \nOr Telephone:\n    Dial(for higher quality, dial a number based on your current location): \n        US: +1 646 558 8656  or +1 669 900 6833  or +1 855 880 1246 (Toll Free) or +1 877 369 0926 (Toll Free)\n    Meeting ID: 403 498 3298\n    International numbers available: https://zoom.us/u/bAaJoyznp","username":"cbf","ts":"2018-05-08T23:21:38.841Z"}
{"msg":"@here starting maintainer meeting","username":"dave.enyeart","ts":"2018-05-09T13:05:59.261Z"}
{"msg":"google doc: https://docs.google.com/document/d/1prtMkLOkZZx7RYi_meb-3yY6lgFhISLQtx8AcSMDhdo/edit","username":"dave.enyeart","ts":"2018-05-09T13:06:06.487Z"}
{"msg":"I will be highlighting daily the priority CR reviews required to get to v1.2 code completion, as well as proposed reviewers (although all maintainers should review daily).","username":"dave.enyeart","ts":"2018-05-15T19:27:38.472Z"}
{"msg":"I will be highlighting daily the priority CR reviews required to get to v1.2 code completion, as well as proposed reviewers based on who has most context (although all maintainers should help review daily).","username":"dave.enyeart","ts":"2018-05-15T19:27:38.472Z"}
{"msg":"I will be highlighting daily the priority CR reviews required to get to v1.2 code completion, as well as proposed reviewers based on who has most context (although all maintainers should help review daily).  See fabric-pr-review channel for today's list.","username":"dave.enyeart","ts":"2018-05-15T19:27:38.472Z"}
{"msg":"I will be highlighting daily the priority CR reviews required to get to v1.2 code completion, as well as proposed reviewers based on who has most context (although all maintainers should help review daily).  See #fabric-pr-review  for today's list.","username":"dave.enyeart","ts":"2018-05-15T19:27:38.472Z"}
{"msg":"If you don't like my proposed reviewers list, let me know","username":"dave.enyeart","ts":"2018-05-15T19:27:49.172Z"}
{"msg":"I posted the updated CR review priorities in #fabric-pr-review ","username":"dave.enyeart","ts":"2018-05-16T13:29:58.558Z"}
{"msg":"I will do it each morning","username":"dave.enyeart","ts":"2018-05-16T13:30:08.709Z"}
{"msg":"feel free to add others that you think are high priority","username":"dave.enyeart","ts":"2018-05-16T13:30:23.547Z"}
{"msg":"fabric-ca tests are unstable af","username":"cbf","ts":"2018-05-17T15:48:57.733Z"}
{"msg":"I get different failures ","username":"cbf","ts":"2018-05-17T15:49:11.223Z"}
{"msg":"sigh","username":"cbf","ts":"2018-05-17T15:49:12.467Z"}
{"msg":"Well, they are pushing me to merge a lot of stuff","username":"JonathanLevi","ts":"2018-05-17T17:04:46.294Z"}
{"msg":"But the code is not that nice...","username":"JonathanLevi","ts":"2018-05-17T17:04:57.111Z"}
{"msg":"(sorry, wrong chat window)","username":"JonathanLevi","ts":"2018-05-17T17:06:47.146Z"}
{"msg":"Who has JIRA sudo powers when it comes to the dashboards for v1.2? Can they share those editing rights with me? For example, the query that we're using to track defect backlog development for 1.2 is wrong and I'd like to fix it. This was also the case for 1.1.)","username":"kostas","ts":"2018-05-21T17:22:15.832Z"}
{"msg":"@kostas the group you need added to is jira-fabric-admins. someone would need to file a ticket: helpdesk@hyperledger.org to add you","username":"rjones","ts":"2018-05-21T17:31:49.412Z"}
{"msg":"@rjones: Thanks. Can that someone be me? (I can write an excellent recommendation letter for myself, modesty is not an issue.)","username":"kostas","ts":"2018-05-21T17:32:51.918Z"}
{"msg":"it would need to be @mastersingh24 @cbf @dave.enyeart or @Clayton Sims ","username":"rjones","ts":"2018-05-21T17:33:48.540Z"}
{"msg":"it would need to be @mastersingh24 @cbf @dave.enyeart or @simsc ","username":"rjones","ts":"2018-05-21T17:33:48.540Z"}
{"msg":"Got it, thank you.","username":"kostas","ts":"2018-05-21T17:34:04.194Z"}
{"msg":"I have not been able to figure out how to share editing of dashboards","username":"cbf","ts":"2018-05-21T17:34:31.241Z"}
{"msg":"@rjones AFAICT I cannot edit @simsc dashboard and vice-versa","username":"cbf","ts":"2018-05-21T17:35:11.123Z"}
{"msg":"oh strange.","username":"rjones","ts":"2018-05-21T17:35:19.616Z"}
{"msg":"it is R/O to me","username":"cbf","ts":"2018-05-21T17:35:28.943Z"}
{"msg":"well, scratch that @kostas ","username":"rjones","ts":"2018-05-21T17:35:58.252Z"}
{"msg":"@kostas what does work is to describe what you want and send to Clayton","username":"cbf","ts":"2018-05-21T17:36:06.897Z"}
{"msg":"Roger, will do. Thank you both.","username":"kostas","ts":"2018-05-21T17:36:21.786Z"}
{"msg":"What is our policy with porting fixes to previous versions? Do we provide such fixes, or not?","username":"kostas","ts":"2018-05-21T17:55:39.750Z"}
{"msg":"Previous versions in this case means v1.0.x","username":"kostas","ts":"2018-05-21T17:55:51.318Z"}
{"msg":"Likewise, what is our policy with writing fixes for a potential v1.1.x given that 1.2 is right around the corner?","username":"kostas","ts":"2018-05-21T17:57:07.276Z"}
{"msg":"we will backport critical fixes. so far anybody can propose such a backport by adding prior release FixVersion and providing a CR for the prior branch.  Note that if there are no changes in the code between releases, the CR is as trivial as hitting the Cherry Pick button in the gerrit UI.  Then the backport merge requires two +2 like any other CR. So we as maintainers are responsible for determining which fixes are critical and should think about this upon any fix merge.","username":"dave.enyeart","ts":"2018-05-21T18:08:27.816Z"}
{"msg":"Do we backport to the previous minor release only, or all minor versions released?","username":"kostas","ts":"2018-05-21T18:09:18.554Z"}
{"msg":"We don't have enough releases behind us yet, but soon enough we'll have to consider a policy, such as backport to latest N releases.","username":"dave.enyeart","ts":"2018-05-21T18:09:20.506Z"}
{"msg":"We don't have enough releases behind us yet for it to become an issue, but soon enough we'll have to consider a policy, such as backport to latest N releases.","username":"dave.enyeart","ts":"2018-05-21T18:09:20.506Z"}
{"msg":"Or latest minor release on current and prior major release.","username":"dave.enyeart","ts":"2018-05-21T18:09:56.604Z"}
{"msg":"Got it, thanks Dave. @cbf: what is the norm?","username":"kostas","ts":"2018-05-21T18:10:04.451Z"}
{"msg":"And as the releases stack up, tracking which fixes are in which releases will become more challenging.  We'll likely need some more sophisticated tracking as anybody can easily miss setting the jira Fix Version correctly.","username":"dave.enyeart","ts":"2018-05-21T18:16:54.149Z"}
{"msg":"well, we have not yet adopted an LTS posture, and the policy as such had been to backport to previous MINOR release","username":"cbf","ts":"2018-05-21T18:27:09.601Z"}
{"msg":"so, if we find a defect in master, we would cherry-pick/backport to v1.0.x (e.g. v1.0.6)","username":"cbf","ts":"2018-05-21T18:27:44.434Z"}
{"msg":"actually, check that","username":"cbf","ts":"2018-05-21T18:27:56.106Z"}
{"msg":"we would backport to release-1.1 branch and then cut v1.0.7","username":"cbf","ts":"2018-05-21T18:28:15.698Z"}
{"msg":"@kostas ","username":"cbf","ts":"2018-05-21T18:28:25.958Z"}
{"msg":"So anything that's deemed as a backportable (sic) fix, goes in v1.0.7 and v1.1.1?","username":"kostas","ts":"2018-05-21T18:29:33.162Z"}
{"msg":"And once v1.2 is out, we only care about v1.1.x - @cbf: Y/N?","username":"kostas","ts":"2018-05-21T18:30:13.145Z"}
{"msg":"yes","username":"cbf","ts":"2018-05-21T20:06:34.225Z"}
{"msg":"although 1.0.7 questionable - think depending on severity","username":"cbf","ts":"2018-05-21T20:06:52.957Z"}
{"msg":"Amigo maintainers","username":"JonathanLevi","ts":"2018-05-21T20:10:00.286Z"}
{"msg":"I am having too many side convo's regarding this: https://gerrit.hyperledger.org/r/#/c/21161/","username":"JonathanLevi","ts":"2018-05-21T20:10:32.612Z"}
{"msg":"I admit, that I pushed to merge (and merged after objections were removed from) https://gerrit.hyperledger.org/r/#/c/21159/","username":"JonathanLevi","ts":"2018-05-21T20:11:53.775Z"}
{"msg":"Has joined the channel.","username":"Sarah.Conway","ts":"2018-05-21T20:12:04.784Z","type":"uj"}
{"msg":"BUT, I did it mainly because there wasn't a claim for a \"real\" revocation algorithm","username":"JonathanLevi","ts":"2018-05-21T20:12:15.707Z"}
{"msg":"So a few things:","username":"JonathanLevi","ts":"2018-05-21T20:13:16.683Z"}
{"msg":"1. There are many issues, concerns and inconsistent discussions around revocations that have been taking place over the last few weeks.","username":"JonathanLevi","ts":"2018-05-21T20:13:21.062Z"}
{"msg":"2. Remember the maintainer meeting we had when there are arguments regarding what should be revoked, deleted, from the CA, from the Node, etc... ? Here this is much more complicated.","username":"JonathanLevi","ts":"2018-05-21T20:14:13.071Z"}
{"msg":"3. Bottom line, we already \"shook on\" not having the revocation in 1.2 (for several reasons)","username":"JonathanLevi","ts":"2018-05-21T20:14:29.813Z"}
{"msg":"4. We merged a lot and very quickly already.","username":"JonathanLevi","ts":"2018-05-21T20:14:39.220Z"}
{"msg":"ahem, lets just be precise ;) It's a non-revocation .... ","username":"yacovm","ts":"2018-05-21T20:14:47.800Z"}
{"msg":"which is \"epoch\" based","username":"yacovm","ts":"2018-05-21T20:15:00.986Z"}
{"msg":"5. Why don't we just let it lay, have a week of integration tests... release 1.2 at a high quality... and revisit this in 1.3 as agreed ?","username":"JonathanLevi","ts":"2018-05-21T20:15:23.951Z"}
{"msg":"are the revocations support CRs going to fabric-CA or not?","username":"yacovm","ts":"2018-05-21T20:16:03.119Z"}
{"msg":"There are a lot of moving parts here, and some of this stuff is super \"sensitive\" cryptographically...","username":"JonathanLevi","ts":"2018-05-21T20:16:09.551Z"}
{"msg":" are the revocations support CRs going to fabric-CA or not? ","username":"yacovm","ts":"2018-05-21T20:17:50.762Z"}
{"msg":"Not really.","username":"JonathanLevi","ts":"2018-05-21T20:20:20.499Z"}
{"msg":"how so?","username":"yacovm","ts":"2018-05-21T20:20:27.572Z"}
{"msg":"I thought they are needed for the fabric core epoch non revocation stuff?","username":"yacovm","ts":"2018-05-21T20:20:39.319Z"}
{"msg":"These are all deferred. We just keep some of the core, which affects the API...","username":"JonathanLevi","ts":"2018-05-21T20:20:43.272Z"}
{"msg":"Please be more specific. What are you missing/need?","username":"JonathanLevi","ts":"2018-05-21T20:21:17.654Z"}
{"msg":"We really did agree not to have the revocation support. You can ask around ;-)","username":"JonathanLevi","ts":"2018-05-21T20:21:38.507Z"}
{"msg":"oh... then what is the issue? whether to merge the change sets but just not use them?","username":"yacovm","ts":"2018-05-21T20:22:00.358Z"}
{"msg":"I have just merged some SDK compatibility and stuff. ","username":"JonathanLevi","ts":"2018-05-21T20:22:07.658Z"}
{"msg":"Can we just hide behind a compilation flag for fabric-core?","username":"yacovm","ts":"2018-05-21T20:22:15.592Z"}
{"msg":"The issue is that we should STOP CODING","username":"JonathanLevi","ts":"2018-05-21T20:22:20.935Z"}
{"msg":"And not bring half-baked stuff that is due in 1.3 and try to squeeze it back into 1.2 just 5 days before the cut-off.","username":"JonathanLevi","ts":"2018-05-21T20:22:51.817Z"}
{"msg":":-)","username":"JonathanLevi","ts":"2018-05-21T20:22:55.239Z"}
{"msg":"Seriously. Let's stabilize the tree.","username":"JonathanLevi","ts":"2018-05-21T20:23:03.294Z"}
{"msg":"so the merge freeze is in 5 days?","username":"yacovm","ts":"2018-05-21T20:23:08.357Z"}
{"msg":"Hopefully","username":"JonathanLevi","ts":"2018-05-21T20:23:59.733Z"}
{"msg":"If we slow down the merges...","username":"JonathanLevi","ts":"2018-05-21T20:24:09.821Z"}
{"msg":"... test and fix what's absolutely needed.","username":"JonathanLevi","ts":"2018-05-21T20:24:24.085Z"}
{"msg":"We all know that we are still somewhat \"in the Red\".","username":"JonathanLevi","ts":"2018-05-21T20:24:51.461Z"}
{"msg":"All I wanted to discuss and bring up that we should not volunteer to take more risk.","username":"JonathanLevi","ts":"2018-05-21T20:25:10.292Z"}
{"msg":"Let's start converging in earnest, if possible.","username":"JonathanLevi","ts":"2018-05-21T20:25:45.812Z"}
{"msg":"I think, that if we decided not to have revocation support, then what's the risk here from a macro POV, excluding bugs? you can't revoke an identity anyway, and the users should be aware of that, so I say we just recommend https://gerrit.hyperledger.org/r/#/c/21161/ that poor CR.\nSince we're supposed to have e2e functional test(s) we should be good that it doesn't break anything, once we build the e2e tests","username":"yacovm","ts":"2018-05-21T20:29:11.242Z"}
{"msg":"I think, that if we decided not to have revocation support, then what's the risk here from a macro POV, excluding bugs? you can't revoke an identity anyway, and the users should be aware of that, so I recommend merging https://gerrit.hyperledger.org/r/#/c/21161/ that poor CR.\nSince we're supposed to have e2e functional test(s) we should be good that it doesn't break anything, once we build the e2e tests","username":"yacovm","ts":"2018-05-21T20:29:11.242Z"}
{"msg":"I disagree.","username":"JonathanLevi","ts":"2018-05-21T20:34:36.824Z"}
{"msg":"I think we need to review this properly.","username":"JonathanLevi","ts":"2018-05-21T20:35:03.951Z"}
{"msg":"e2e tests don't tell you a thing about whether that encryption scheme is privacy preserving at all.","username":"JonathanLevi","ts":"2018-05-21T20:35:31.309Z"}
{"msg":"We allowed a lot of stuff in back at the last minute of 1.1 this way.","username":"JonathanLevi","ts":"2018-05-21T20:36:06.800Z"}
{"msg":"I don't think it's a good process.","username":"JonathanLevi","ts":"2018-05-21T20:36:16.318Z"}
{"msg":">  e2e tests don't tell you a thing about whether that encryption scheme is privacy preserving at all. \ntrue, but you can't actually figure that out from looking at the code. you need to read all their papers on the subject","username":"yacovm","ts":"2018-05-21T20:36:59.568Z"}
{"msg":"Therefore, we should just merge this ? ;-)","username":"JonathanLevi","ts":"2018-05-21T20:37:18.040Z"}
{"msg":"I read Jan's papers on the subject. Maybe that's the issue? ;-)","username":"JonathanLevi","ts":"2018-05-21T20:37:56.413Z"}
{"msg":"Seriously, let's be careful here. It's much worse to have an incomplete thing, than not to have it.","username":"JonathanLevi","ts":"2018-05-21T20:38:31.896Z"}
{"msg":"And it's not a \"poor CR\" ;-) It's a series...","username":"JonathanLevi","ts":"2018-05-21T20:39:07.798Z"}
{"msg":"i mean the one remaining","username":"yacovm","ts":"2018-05-21T20:39:44.117Z"}
{"msg":"Again, I have already merged a CR this morning that went over my comfort zone... and pushed others to agree.","username":"JonathanLevi","ts":"2018-05-21T20:41:39.353Z"}
{"msg":"Again, I have already merged a CR this morning that went way over my comfort zone... based on not having this algo in.","username":"JonathanLevi","ts":"2018-05-21T20:44:35.057Z"}
{"msg":"Again, I have already merged a CR this morning that went way over/out of my comfort zone... based on not having this algo in.","username":"JonathanLevi","ts":"2018-05-21T20:44:35.057Z"}
{"msg":"At any rate, I don't want to repeat myself, but still happy to discuss if you think that we should stuff more things from 1.3 into the 1.2 branch, while we are still in the red.","username":"JonathanLevi","ts":"2018-05-21T20:45:26.053Z"}
{"msg":"I'm with you Jonathan, we are beyond the date for feature delivery, let's keep merges to fixes and polish to make the existing v1.2 features whole.  This week and next week the focus is on testing and fixing issues. ","username":"dave.enyeart","ts":"2018-05-22T00:49:24.401Z"}
{"msg":"The only exception I'd say are SDKs, as they are using this week to finalize support for the recently merged v1.2 server features.  I'm not thrilled about that, but it is what it is.","username":"dave.enyeart","ts":"2018-05-22T00:49:28.617Z"}
{"msg":"@here FYI, I just pushed multi-arch manifests for fabric 1.1.0 images","username":"cbf","ts":"2018-05-22T14:38:11.470Z"}
{"msg":"also tagged all x86_64-1.1.0 as amd64-1.1.0 ","username":"cbf","ts":"2018-05-22T14:38:28.259Z"}
{"msg":"y'all can thank me later :grinning:","username":"cbf","ts":"2018-05-22T14:38:52.502Z"}
{"msg":"@cbf and his \"Hash Commit Reveal\" scheme yet again!","username":"JonathanLevi","ts":"2018-05-22T15:15:34.280Z"}
{"msg":"We have a maintainer's meeting tomorrow... several of us had conflicts at 9 am ET, we will start 30 minutes later at 9:30am ET.\nTopic: Hyperledger Fabric Maintainer's Meeting\n\nJoin from PC, Mac, Linux, iOS or Android: https://zoom.us/my/hyperledger.community\n\nOr iPhone one-tap :\nUS: +16465588656,,4034983298# or +16699006833,,4034983298# \nOr Telephone:\nDial(for higher quality, dial a number based on your current location): \nUS: +1 646 558 8656 or +1 669 900 6833 or +1 855 880 1246 (Toll Free) or +1 877 369 0926 (Toll Free)\nMeeting ID: 403 498 3298\nInternational numbers available: https://zoom.us/u/bAaJoyznp","username":"dave.enyeart","ts":"2018-05-23T03:08:08.158Z"}
{"msg":"We have a maintainer's meeting tomorrow (Wednesday)... several of us had conflicts at 9 am ET, we will start 30 minutes later at 9:30am ET.\nTopic: Hyperledger Fabric Maintainer's Meeting\n\nJoin from PC, Mac, Linux, iOS or Android: https://zoom.us/my/hyperledger.community\n\nOr iPhone one-tap :\nUS: +16465588656,,4034983298# or +16699006833,,4034983298# \nOr Telephone:\nDial(for higher quality, dial a number based on your current location): \nUS: +1 646 558 8656 or +1 669 900 6833 or +1 855 880 1246 (Toll Free) or +1 877 369 0926 (Toll Free)\nMeeting ID: 403 498 3298\nInternational numbers available: https://zoom.us/u/bAaJoyznp","username":"dave.enyeart","ts":"2018-05-23T03:08:08.158Z"}
{"msg":"Can we please spend the first minute on finding out how come only @yacovm found this *hilarious* joke","username":"JonathanLevi","ts":"2018-05-23T13:32:17.165Z"}
{"msg":"https://zoom.us/my/hyperledger.community","username":"cbf","ts":"2018-05-23T13:32:22.438Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=JcqG6Yc8LsKxE3cu3) ","username":"JonathanLevi","ts":"2018-05-23T13:32:23.414Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=JcqG6Yc8LsKxE3cu3","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=JcqG6Yc8LsKxE3cu3","remote":true,"fileId":null,"fileName":null}]}
{"msg":"funny ?","username":"JonathanLevi","ts":"2018-05-23T13:32:25.535Z"}
{"msg":"@here please join thanks","username":"cbf","ts":"2018-05-23T13:32:29.907Z"}
{"msg":"https://etherealsummit.com","username":"JonathanLevi","ts":"2018-05-23T14:00:51.373Z"}
{"msg":"He's Israeli as well?   Although then Artem should have laughed  ;)\n(https://chat.hyperledger.org/channel/fabric-maintainers?msg=XHwAma8xnFZjnFJjH) @JonathanLevi ","username":"mastersingh24","ts":"2018-05-23T15:37:27.195Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=XHwAma8xnFZjnFJjH","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=XHwAma8xnFZjnFJjH","remote":true,"fileId":null,"fileName":null}]}
{"msg":"i have a very low bar for jokes","username":"yacovm","ts":"2018-05-23T15:38:08.724Z"}
{"msg":"I would have laughed but I ignore messages from @JonathanLevi ","username":"mastersingh24","ts":"2018-05-23T15:39:03.175Z"}
{"msg":"Please ignore this.","username":"JonathanLevi","ts":"2018-05-23T15:40:34.351Z"}
{"msg":"I think it's a \"best practice\"","username":"mastersingh24","ts":"2018-05-23T15:40:41.894Z"}
{"msg":"haha","username":"mastersingh24","ts":"2018-05-23T15:40:46.375Z"}
{"msg":"Read. Ignore. Repeat.","username":"JonathanLevi","ts":"2018-05-23T15:41:10.440Z"}
{"msg":"Best consensus mechanism. Lock free.","username":"JonathanLevi","ts":"2018-05-23T15:41:39.200Z"}
{"msg":"Best consensus mechanism:  Gari is right","username":"mastersingh24","ts":"2018-05-23T15:41:55.442Z"}
{"msg":"That is a suspect algorithm, at best","username":"rjones","ts":"2018-05-23T15:42:14.900Z"}
{"msg":"The proof is a bit sketchy ... I'll give you that","username":"mastersingh24","ts":"2018-05-23T15:42:32.989Z"}
{"msg":"Hey, All. I notice that you moved the maintainers meeting this morning and ran 1/2 an hour or more into the Hyperledger Quilt meeting time. Please be cognizant of the fact that there is a meeting scheduled after your maintainers meeting. This seems to be the second time that the maintainers meeting has caused problems for the Quilt meeting.","username":"tkuhrt","ts":"2018-05-23T17:29:39.995Z"}
{"msg":"@tkuhrt The maintainer meeting went to 2:30pm (UTC) today.  According to the Hyperledger calendar, the Quilt meeting was to start at 3:00pm (UTC).  Just want to understand further, as we are considering whether we need to move the official timeslot permanently.","username":"dave.enyeart","ts":"2018-05-23T19:04:09.488Z"}
{"msg":"@here: moving forward, for the next little while, any change which is in this state: https://gerrit.hyperledger.org/r/#/q/status:open+project:fabric+is:mergeable+label:f3-integrationtest%253C1 when you +2 a change, please also +1 the F3-IntegrationTest label. There will be a job to put a placeholder +1 in place for now as development moves forward. Please direct questions to @rameshthoomu or @tongli ","username":"rjones","ts":"2018-05-23T20:16:56.834Z"}
{"msg":"@dave.enyeart : You are right. I was thinking about the winter time when the two meetings are back-to-back.","username":"tkuhrt","ts":"2018-05-23T20:17:49.369Z"}
{"msg":"phew","username":"dave.enyeart","ts":"2018-05-23T20:18:13.830Z"}
{"msg":"I meant to bring this up on the maintainer's call this morning, but can we _please_ stop doing CI for fabric in another project.  The fact that a particular version of CI is not tied to a particular commit is problematic enough, but when there are mystery failures like the above it is very frustrating, as it's difficult to even understand how the failure is occurring.","username":"jyellick","ts":"2018-05-23T20:21:40.734Z"}
{"msg":"Has joined the channel.","username":"jrosmith","ts":"2018-05-23T20:27:15.312Z","type":"uj"}
{"msg":"@jyellick yes, that is being considered and worked on for post 1.2. @tongli has been working on Jenkins pipeline jobs that we can run from the repo so we have tighter alignment and control (and so that we can actually understand WTH is going on).","username":"cbf","ts":"2018-05-23T20:33:12.487Z"}
{"msg":"@here so, it was only recently that I learned that this channel is moderated - read-only for all but the fabric-maintainers. This seems to me to be unwise choice. It cuts off a channel for discussion. I certainly believe that there are more suitable channels for general questions, or pleas to review a CR etc and we can gently remind people if they repeatedly use this channel for anything aside from discussions with maintainers and about the project... if threads get too long, they can be taken elsewhere","username":"cbf","ts":"2018-05-23T22:28:33.950Z"}
{"msg":"I'd like others to weigh in, please","username":"cbf","ts":"2018-05-23T22:29:15.570Z"}
{"msg":"I think that there are voices in the community that have valuable insight... just because they aren't maintainers should not preclude their voices in this channel","username":"cbf","ts":"2018-05-23T22:29:55.860Z"}
{"msg":"i just hope we won't get swarmed by the people that copy-paste the same error message to 20 channels","username":"yacovm","ts":"2018-05-23T22:29:59.381Z"}
{"msg":"this channel is usually used for important announcements ","username":"yacovm","ts":"2018-05-23T22:30:24.721Z"}
{"msg":"this channel is usually used for important announcements, therefore I suggest that we have a strict policy that if someone posts something irrelevant like an error message, a screenshot, peer logs, etc. - we would just automatically delete it","username":"yacovm","ts":"2018-05-23T22:30:24.721Z"}
{"msg":"I agree, that would be abusive and we can ask @rjones and @tkuhrt to quietly coach people who do","username":"cbf","ts":"2018-05-23T22:30:30.051Z"}
{"msg":"as channel owners, you also have the power to mute or remove abusive users as required","username":"rjones","ts":"2018-05-23T22:31:17.813Z"}
{"msg":"good point","username":"cbf","ts":"2018-05-23T22:31:28.335Z"}
{"msg":"can we mute @mastersingh24 ?","username":"cbf","ts":"2018-05-23T22:31:35.826Z"}
{"msg":"yes, the UI would allow me to do that. :)","username":"rjones","ts":"2018-05-23T22:32:05.959Z"}
{"msg":"your point about coaching users is correct, though.","username":"rjones","ts":"2018-05-23T22:32:20.069Z"}
{"msg":"","username":"rjones","ts":"2018-05-23T22:33:13.890Z","attachments":[{"type":"file","title":"gari.png","title_link":"/file-upload/QNJwwjtaHHWwMEvb4/gari.png","image_url":"/file-upload/QNJwwjtaHHWwMEvb4/gari.png","image_type":"image/png","image_size":189394,"url":"/file-upload/QNJwwjtaHHWwMEvb4/gari.png","remote":false,"fileId":"QNJwwjtaHHWwMEvb4","fileName":"gari.png"}]}
{"msg":":laughing:","username":"cbf","ts":"2018-05-23T22:33:15.330Z"}
{"msg":"sadly, I don't have that power --- j/k","username":"cbf","ts":"2018-05-23T22:34:02.081Z"}
{"msg":"besides, every once in a while he has something useful to say","username":"cbf","ts":"2018-05-23T22:34:49.938Z"}
{"msg":"I won't ask what my SNR is, since I have a good idea it is approximately zero","username":"rjones","ts":"2018-05-23T22:35:36.501Z"}
{"msg":"regardless: I support marking this channel read/write, and I think you have the power to make that change should you all decide to do so. I suspect you have a consensus algorithm that is better than \"what @mastersingh24 says is right\" but... whatever","username":"rjones","ts":"2018-05-23T22:37:03.467Z"}
{"msg":"Good with R/W.","username":"kostas","ts":"2018-05-23T22:55:49.215Z"}
{"msg":"please use #fabric-pr-review for pull requests&#39; (PR) reviews","username":"rjones","ts":"2018-05-23T23:41:42.480Z","type":"room_changed_announcement"}
{"msg":"","username":"rjones","ts":"2018-05-23T23:42:11.563Z","type":"room_changed_announcement"}
{"msg":"I agree. Yes, I clearly remember the one useful thing @mastersingh24 had to say back in February 2018 and another semi-useful back in April. [ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=TPGX5dp5meok2fhiT) ","username":"JonathanLevi","ts":"2018-05-24T11:44:26.953Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TPGX5dp5meok2fhiT","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TPGX5dp5meok2fhiT","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I'd keep him unmuted, just for the off-chance that we'll hear/read something from him this June. I don't have any high expectations from him this May anymore, tbh, we have only 7 days to go anyway.","username":"JonathanLevi","ts":"2018-05-24T11:46:28.155Z"}
{"msg":"Unmuting is better, just for the off-chance that we'll hear/read something from him this June. I don't have any high expectations from him this May anymore, tbh, we have only 7 days to go anyway.","username":"JonathanLevi","ts":"2018-05-24T11:47:48.114Z"}
{"msg":"Are we supposed to support 32-bit architectures?","username":"kostas","ts":"2018-05-24T13:00:31.007Z"}
{"msg":"@kostas who is asking?","username":"cbf","ts":"2018-05-24T14:54:09.871Z"}
{"msg":"@cbf: One of our users who's looking to get a peer running on a Pi: https://jira.hyperledger.org/browse/FAB-10356 (unsure why that matters though)","username":"kostas","ts":"2018-05-24T15:04:15.078Z"}
{"msg":"well, seems to me like it would be a bit of work, and unclear how much demand there is","username":"cbf","ts":"2018-05-24T15:06:48.674Z"}
{"msg":"someone keen on it could fork ","username":"cbf","ts":"2018-05-24T15:07:16.294Z"}
{"msg":"what do others think?","username":"cbf","ts":"2018-05-24T15:07:29.002Z"}
{"msg":"Wanted to make sure there is no statement out there that says we support architectures X, Y, and Z. It looks like there's not.","username":"kostas","ts":"2018-05-24T15:13:16.819Z"}
{"msg":"Looks like AMCL can either be built for 32 or 64 bit architectures: https://github.com/milagro-crypto/amcl/tree/master/version3/go \n\nDoes anyone know how other projects with an AMCL dependency handle this?","username":"jyellick","ts":"2018-05-24T15:17:27.147Z"}
{"msg":"The implied support statement is for platforms officially supported by Docker ..... which are all 64bit platforms.\nUbuntu does provide Docker for 32bit ARM7 processors, but this is not officially supported by Docker","username":"mastersingh24","ts":"2018-05-30T23:09:35.242Z"}
{"msg":"Has joined the channel.","username":"rogerwilcos","ts":"2018-05-30T23:13:54.026Z","type":"uj"}
{"msg":"@here ","username":"dave.enyeart","ts":"2018-05-31T17:32:41.093Z"}
{"msg":"*Identity Mixer: Proposal to defer to v1.3*\nAs most of you know, for the June release we set an end-of-May date as the final decision point for what content goes into v1.2 and what content gets deferred.\nAnd as most of you know, Identity Mixer has been the remaining feature on the cusp. The team working on Identity Mixer has been working some heroics to get an initial end-to-end scenario working across Fabric, Fabric CA, and Java SDK. Some brilliant work there, and I commend the team on the huge effort to pull off and e2e very quickly.\nIt is time to make a FINAL decision.  *I propose to defer Identity Mixer to v1.3*, based on the following:\n- For complex integration scenarios like this (what’s more complex than cross-component zero knowledge proof?), an initial end-to-end success does not equate to a shippable well-tested function. It takes time (much more than the two weeks remaining before RC1), to review, merge, finalize, stabilize, function test (positive and negative), system test, fix, document, socialize, and get feedback on a complex cross-component crypto function such as Identity Mixer.\n- Given the fixed set of developers, testers, documenters, attempting to squeeze in all of the above work in two weeks would take away from other release functions, injecting risk into the entire v1.2 release, not just the Identity Mixer feature.\n- The new release train model was designed exactly for these types of decisions.  Instead of scrambling in the last weeks of a release and risk making mistakes, we have another release just 3 months away, and we now have some great function in the queue to finalize, test, and ship in 3 months.\nThere are some options on *how* we defer (rip out code, disabling some entry points, etc), but let’s first come to a final decision on whether to defer.\n*Maintainers - Please +1 to defer, or -1 if you’d like to propose an alternate plan.*","username":"dave.enyeart","ts":"2018-05-31T17:32:46.806Z"}
{"msg":"*Identity Mixer: Proposal to defer to v1.3*\nAs most of you know, for the June release we set an end-of-May date as the final decision point for what content goes into v1.2 and what content gets deferred.\nAnd as most of you know, Identity Mixer has been the remaining feature on the cusp. The team working on Identity Mixer has been working some heroics to get an initial end-to-end scenario working across Fabric, Fabric CA, and Java SDK. Some brilliant work there, and I commend the team on the huge effort to pull off an e2e very quickly.\nIt is time to make a FINAL decision.  *I propose to defer Identity Mixer to v1.3*, based on the following:\n- For complex integration scenarios like this (what’s more complex than cross-component zero knowledge proof?), an initial end-to-end success does not equate to a shippable well-tested function. It takes time (much more than the two weeks remaining before RC1), to review, merge, finalize, stabilize, function test (positive and negative), system test, fix, document, socialize, and get feedback on a complex cross-component crypto function such as Identity Mixer.\n- Given the fixed set of developers, testers, documenters, attempting to squeeze in all of the above work in two weeks would take away from other release functions, injecting risk into the entire v1.2 release, not just the Identity Mixer feature.\n- The new release train model was designed exactly for these types of decisions.  Instead of scrambling in the last weeks of a release and risk making mistakes, we have another release just 3 months away, and we now have some great function in the queue to finalize, test, and ship in 3 months.\nThere are some options on *how* we defer (rip out code, disabling some entry points, etc), but let’s first come to a final decision on whether to defer.\n*Maintainers - Please +1 to defer, or -1 if you’d like to propose an alternate plan.*","username":"dave.enyeart","ts":"2018-05-31T17:32:46.806Z"}
{"msg":"*Identity Mixer: Proposal to defer to v1.3*\nAs most of you know, for the June release we set an end-of-May date as the final decision point for what content goes into v1.2 and what content gets deferred.\nAnd as most of you know, Identity Mixer has been the remaining feature on the cusp. The team working on Identity Mixer has been working some heroics to get an initial end-to-end scenario working across Fabric, Fabric CA, and Java SDK. Some brilliant work there, and I commend the team on the huge effort to pull off an e2e very quickly.\nIt is time to make a FINAL decision.  *I propose to defer Identity Mixer to v1.3*, based on the following:\n- For complex integration scenarios like this (what’s more complex than cross-component zero knowledge proof?), an initial end-to-end success does not equate to a shippable well-tested function. It takes time (much more than the two weeks remaining before RC1), to review, merge, finalize, stabilize, function test (positive and negative), system test, fix, document, socialize, and get feedback on a complex cross-component crypto function such as Identity Mixer.\n- Given the fixed set of developers, testers, documenters, attempting to squeeze in all of the above work in two weeks would take away from other release functions, injecting risk into the entire v1.2 release, not just the Identity Mixer feature.\n- The new release train model was designed exactly for these types of decisions.  Instead of scrambling in the last weeks of a release and risk making mistakes, we have another release just 3 months away, and we now have some great function in the queue to finalize, test, and ship in 3 months. We can even put out an early v1.3 alpha to socialize the new feature.\nThere are some options on *how* we defer (rip out code, disabling some entry points, etc), but let’s first come to a final decision on whether to defer.\n*Maintainers - Please +1 to defer, or -1 if you’d like to propose an alternate plan.*","username":"dave.enyeart","ts":"2018-05-31T17:32:46.806Z"}
{"msg":"Vote to defer.","username":"kostas","ts":"2018-05-31T17:33:40.052Z"}
{"msg":"Vote to defer, so +1.","username":"kostas","ts":"2018-05-31T17:33:40.052Z"}
{"msg":"+1","username":"mastersingh24","ts":"2018-05-31T17:37:26.846Z"}
{"msg":"> injecting risk into the entire v1.2 release\nIs it really that risky though, to try and push hard in the next week and see if the gap can be covered? It's not that you need to do rigorous system tests, it's crypto - there are no moving parts... \nI'm asking and not voting because I don't feel comfortable on voting -1 when it's not me that is putting the extra work in the end.","username":"yacovm","ts":"2018-05-31T17:55:13.199Z"}
{"msg":"two weeks ago i would have said the same thing, but in my opinion the velocity is not enough to close the gap in two weeks","username":"dave.enyeart","ts":"2018-05-31T17:56:33.298Z"}
{"msg":"two weeks ago i would have said the same thing, but in my opinion the velocity is not enough to close the gap in two more weeks","username":"dave.enyeart","ts":"2018-05-31T17:56:33.298Z"}
{"msg":"two weeks ago i would have said the same thing, but in my opinion the velocity is not enough to close the gap in two more weeks. the last 1% typically takes 20% of the time :)","username":"dave.enyeart","ts":"2018-05-31T17:56:33.298Z"}
{"msg":"@yacovm  - I can only speak for myself, but while I of course appreciate the extra effort, there was no reason for it.  We have 3 month release windows ... if you come close but miss one window, you make the next.\n\nOn the risk side, there has been a lot of churn during trying to get the tests working.   I can't quantify the risk to the release in terms of \"work\", but I can quantify the risk of shipping code that has not been properly vetted and a feature which has been used / tested by no one outside of the development team.   As someone who actually has to support people running the code, putting out code before it's ready causes a lot of issues.","username":"mastersingh24","ts":"2018-05-31T18:03:33.640Z"}
{"msg":"Agree on the 3 month cycle logic... ","username":"yacovm","ts":"2018-05-31T18:04:18.327Z"}
{"msg":"I'm not sure about the current APIs / interfaces and I don't want to be stuck supporting them and not being able to change them","username":"mastersingh24","ts":"2018-05-31T18:04:20.545Z"}
{"msg":"understood","username":"yacovm","ts":"2018-05-31T18:04:29.626Z"}
{"msg":"We've done this too many time before  ;)   :(","username":"mastersingh24","ts":"2018-05-31T18:04:38.707Z"}
{"msg":"Now I will also say that once 1.2 is out the door, we should be ready to build a v1.3 preview/alpha/whatever which is basically 1.2 plus IdeMixer and get some feedback for sure  ;)","username":"mastersingh24","ts":"2018-05-31T18:06:14.723Z"}
{"msg":"defer +1","username":"cbf","ts":"2018-05-31T18:12:55.346Z"}
{"msg":"and seriously, when we say code freeze 6 weeks before... we need to stick to that","username":"cbf","ts":"2018-05-31T18:13:53.664Z"}
{"msg":"as @mastersingh24 said, if you miss the bus, another is right behind it","username":"cbf","ts":"2018-05-31T18:14:21.977Z"}
{"msg":"+1 to defer","username":"C0rWin","ts":"2018-05-31T18:22:40.254Z"}
{"msg":"+1 on defer -- I looked at the doc, but it is not enough to get me going. It also doesn't document the gaps clearly, which I have given feedback to the authors; another 3 mos to work on would certainly make it better","username":"binhn","ts":"2018-05-31T18:25:38.644Z"}
{"msg":"+1 to defer","username":"muralisr","ts":"2018-05-31T18:32:25.703Z"}
{"msg":"+1 to defer from @rickr  as well","username":"mastersingh24","ts":"2018-05-31T18:38:29.553Z"}
{"msg":"+1 to defer","username":"smithbk","ts":"2018-05-31T19:04:09.471Z"}
{"msg":"Ok, that's a majority already, deferred!","username":"dave.enyeart","ts":"2018-05-31T19:08:03.131Z"}
{"msg":"@cbf to be fair we did say SDK dev could continue through May, and many of the fabric and fabric-ca side issues were only found when doing end-to-end testing through SDK, but yeah, we should have stopped sooner, just kept thinking we were one CR away...","username":"dave.enyeart","ts":"2018-05-31T19:11:05.681Z"}
{"msg":"Which brings up rule #11 of the Fight-Club: we don't trust reports from people who love what they do so much ;-) Every time I merged another CR one 3 new CRs got updated !  ;-)","username":"JonathanLevi","ts":"2018-05-31T19:48:30.284Z"}
{"msg":"Which brings up rule #11 of the Fight-Club: we don't trust reports from people who love what they do so much ;-) Every time I merged a CR -> 3 new CRs got updated and requested a follow up merge !  ;-)","username":"JonathanLevi","ts":"2018-05-31T19:48:30.284Z"}
{"msg":"On a more serious note, I am happy with the results of the vote, and I think it was OK to still.give it a try, despite my concerns here a week+ ago.","username":"JonathanLevi","ts":"2018-05-31T19:49:42.038Z"}
{"msg":"On a more serious note, I am happy with the results of the vote, and I think it was \"OK\" to still give it a try, despite my concerns here a week+ ago. Could we have done in a separate branch? Maybe. Would we have kept the same cadence? hard to tell. But clearly, the issue was/is just that towards the last days the gaps became much clearer and the merges indeed became increasingly risky (as it became clear that this is not going to be the last CR that I am merging \"post deadline\")... But I am glad you all agreed here, without my need to pull my my weight again also with a vote ","username":"JonathanLevi","ts":"2018-05-31T19:49:42.038Z"}
{"msg":"On a more serious note, I am happy with the results of the vote, and I think it was \"OK-ish\" to still give it a try at first, despite my concerns here a week+ ago. Could we have done in a separate branch? Maybe. Would we have kept the same cadence? Hard to tell. But clearly, the issue was/is just that towards the last days the gaps became much clearer and the merges indeed became increasingly risky (as it became clear that this is not going to be the last CR that I am merging \"post deadline\")... But I am glad you all agreed here, without the need from me to pull my my weight again, also with a vote. ","username":"JonathanLevi","ts":"2018-05-31T19:49:42.038Z"}
{"msg":"The main \"mental\" challenge with the \"release train model\" at the beginning, is letting the train really leave station on time.","username":"JonathanLevi","ts":"2018-05-31T19:50:19.480Z"}
{"msg":"The main \"mental\" challenge with the \"release train model\" at the beginning, is letting the train to really leave the station on time.","username":"JonathanLevi","ts":"2018-05-31T19:50:19.480Z"}
{"msg":"The main \"mental\" challenge with the \"release train model\" at the beginning, is with allowing the train to really leave the station on time.","username":"JonathanLevi","ts":"2018-05-31T19:50:19.480Z"}
{"msg":"I think we have enough dev maturity and openness all around, and it will get better and smoother the more often (and frequently) we do it.","username":"JonathanLevi","ts":"2018-05-31T19:51:07.068Z"}
{"msg":"Totally agree.  Even though I was involved in trying to help get this in, it was too much change too late in the cycle.  It's an easy one to have consensus on.","username":"smithbk","ts":"2018-05-31T21:03:28.274Z"}
{"msg":"Totally agree.  Even though I was involved in trying to help get this in, it was too much change too late in the cycle.","username":"smithbk","ts":"2018-05-31T21:03:28.274Z"}
{"msg":"good news ... we are way ahead for 1.3  ;)","username":"mastersingh24","ts":"2018-05-31T21:30:01.969Z"}
{"msg":"When will we move to a CODE FREEZE and cut the v1.2 branch and move into critical bug fix only mode?","username":"mastersingh24","ts":"2018-06-02T13:15:50.615Z"}
{"msg":"sigh","username":"cbf","ts":"2018-06-02T14:50:59.049Z"}
{"msg":"exactly","username":"cbf","ts":"2018-06-02T14:51:05.236Z"}
{"msg":"@mastersingh24 @cbf  Given that function test is still underway (wrapping up this week), defects are still being found, and service discovery SDK CRs are coming in this week, I was thinking we would allow all defects and important polish items for the next two weeks.  Then in mid-June cut a RC1 and release to community, and create a v1.2 branch. Then the last two weeks of June only critical fixes could get in for the final v1.2 release.  System test will proceed all throughout June. Of course, as we progress through each week of June we will get more and more critical of which CRs to merge, by weighing benefit and risk of each one.  I prefer to allow maintainers (at least two per CR) to make these judgement calls.","username":"dave.enyeart","ts":"2018-06-03T14:21:13.123Z"}
{"msg":"We should have images from stable builds tagged nightly, shortly (presently, they are tagged from each merge, which is too much churn... asking @rameshthoomu to just tag nightly) If anyone needs images to test as they would with an RC1, they can pull from Nexus. I'll post something with directions once the documentation is ready.","username":"cbf","ts":"2018-06-04T11:15:59.213Z"}
{"msg":"Note that I am out of office for the next week.  I posted an update in fabric-release and fabric-scrum.  I'd ask the maintainers to keep a close eye on the release while I am out.  Thanks!","username":"dave.enyeart","ts":"2018-06-07T14:24:08.133Z"}
{"msg":"Has joined the channel.","username":"abraham","ts":"2018-06-08T05:40:05.595Z","type":"uj"}
{"msg":"Has joined the channel.","username":"richzhao","ts":"2018-06-08T14:41:10.695Z","type":"uj"}
{"msg":"We need to make a final decision on how to handle Fabric CA now that Idemix is deferred from release v1.2.  Please see last few comments in https://gerrit.hyperledger.org/r/#/c/22687/ and add your thoughts please.","username":"dave.enyeart","ts":"2018-06-14T18:39:29.532Z"}
{"msg":"Any other comments on https://gerrit.hyperledger.org/r/#/c/22687/ ?  If no other comments I'll plan on merging later today, as this is considered the lowest risk approach of disabling Idemix by CA and system test teams.","username":"dave.enyeart","ts":"2018-06-15T14:26:15.828Z"}
{"msg":"Discussed https://gerrit.hyperledger.org/r/#/c/22687/ with Gari. We decided to go ahead and merge https://gerrit.hyperledger.org/r/#/c/22687/  since that will have the least impact on CI and system test.","username":"dave.enyeart","ts":"2018-06-15T14:26:15.828Z"}
{"msg":"Concerning defects - there are 35 v1.2 defects open and 12 defects that need triage (no Fix Version). See the lower right widgets: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10701 . \n21 of the defects are In Review and need maintainer review (about half are ledger ones that piled up while I was away, which I am focusing on today).\nFor the ones not in review, could use maintainer help triaging, commenting, and where appropriate, deferring by setting Fix Version to v1.3 or FUTURE.  Any remaining ones we’ll need to discuss next week before cutting v1.2 RC1.","username":"dave.enyeart","ts":"2018-06-15T14:28:53.010Z"}
{"msg":"Three 'high' sev defect fixes are ready for final review and merge. I've reviewed and tested each of them:\nhttps://gerrit.hyperledger.org/r/#/c/23059/\nhttps://gerrit.hyperledger.org/r/#/c/22909/","username":"dave.enyeart","ts":"2018-06-16T17:21:29.036Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/22887/","username":"dave.enyeart","ts":"2018-06-16T17:21:38.308Z"}
{"msg":"Has joined the channel.","username":"DuncanMuhoro","ts":"2018-06-17T11:01:07.236Z","type":"uj"}
{"msg":"https://gerrit.hyperledger.org/r/c/22981/ https://gerrit.hyperledger.org/r/c/22979/ https://gerrit.hyperledger.org/r/c/22995/ <-- these have been kid tested, are not core code, and will be needed for the release process ... would be nice to get them merged please","username":"cbf","ts":"2018-06-18T13:57:57.831Z"}
{"msg":"@rameshthoomu can confirm, I believe","username":"cbf","ts":"2018-06-18T13:58:20.204Z"}
{"msg":" Hi @cbf, we have merged two out of the 3. The third one requires a follow up patch, it seems. (I don't mind pushing a patch myself here)","username":"JonathanLevi","ts":"2018-06-18T18:24:33.596Z"}
{"msg":"ok, will look","username":"cbf","ts":"2018-06-18T18:29:09.362Z"}
{"msg":"ok, need one more +2 on https://gerrit.hyperledger.org/r/#/c/22979/","username":"dave.enyeart","ts":"2018-06-18T21:50:48.947Z"}
{"msg":"Merged. Thank you Dave.","username":"JonathanLevi","ts":"2018-06-18T21:53:55.659Z"}
{"msg":"ok, now we are ready to cut baseimage 0.4.9 which includes final updates for v1.2: https://gerrit.hyperledger.org/r/#/c/23259/","username":"dave.enyeart","ts":"2018-06-18T22:22:57.012Z"}
{"msg":"(BTW: I have +2'ed a few hours ago. Whoever needs it, please hit *Submit* when ready.)","username":"JonathanLevi","ts":"2018-06-19T01:39:58.471Z"}
{"msg":"(BTW: I +2'ed a few hours ago. Whoever needs it, please hit *Submit* when ready.)","username":"JonathanLevi","ts":"2018-06-19T01:40:14.057Z"}
{"msg":"Thanks... and now the prepare for 0.4.10 baseimage: https://gerrit.hyperledger.org/r/#/c/23297/","username":"dave.enyeart","ts":"2018-06-19T03:49:30.192Z"}
{"msg":"baseimage 0.4.9 and third party docker images have been pushed to dockerhub.  that being said, we don't think we will increment fabric from 0.4.8 to 0.4.9, in order to mitigate any risk (no updates important enough to warrant the late move).","username":"dave.enyeart","ts":"2018-06-19T13:46:53.547Z"}
{"msg":"baseimage 0.4.9 and third party docker images have been pushed to dockerhub.  that being said, we don't think we will increment fabric from 0.4.8 to 0.4.9 before v1.2 is cut, in order to mitigate any risk (no updates important enough to warrant the late move).","username":"dave.enyeart","ts":"2018-06-19T13:46:53.547Z"}
{"msg":"Here’s the agenda items I have in mind for tomorrow’s maintainer meeting. Anything else to add?\n\nv1.2\n- Defect assessment - We are down to 6 Defects in triage and 16 Defects in v1.2 backlog: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10701. Most of them appear to be deferrable.  Please label any that you think are must fix with `must-fix` (must-fix widget has been added to dashboard) \n- System, upgrade, compatibility test progress update\n- Documentation update\n- Build/release process update (multi-architecture support)\n- Final Epic updates\n- RC1 Decision\n\nv1.3\n- Discuss release themes and epic prioritization. For any Epics to be considered, mark them as Fix Version=v1.3. We have a good set already identified and already in-progress in many cases.","username":"dave.enyeart","ts":"2018-06-19T13:47:01.909Z"}
{"msg":"Has joined the channel.","username":"SjirNijssen","ts":"2018-06-19T14:58:38.151Z","type":"uj"}
{"msg":"Reminder - Fabric maintainer meeting at 9am US Eastern today.  See the invite on the Hyperledger calendar: https://calendar.google.com/calendar/embed?mode=AGENDA&src=linuxfoundation.org_nf9u64g9k9rvd9f8vp4vur23b0%40group.calendar.google.com&ctz=UTC","username":"dave.enyeart","ts":"2018-06-20T10:26:18.300Z"}
{"msg":"https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-06-20T10:26:28.972Z"}
{"msg":"meeting link: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-06-20T10:26:28.972Z"}
{"msg":"Has joined the channel.","username":"andrew-coleman","ts":"2018-06-20T10:42:36.563Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mbwhite","ts":"2018-06-20T13:09:44.667Z","type":"uj"}
{"msg":"https://jira.hyperledger.org/issues/?jql=issuetype%20%3D%20Epic%20AND%20fixVersion%20%3D%20v1.3%20ORDER%20BY%20key%20ASC","username":"dave.enyeart","ts":"2018-06-20T13:17:14.909Z"}
{"msg":"Anyone following up on how to loosen up the restriction on the title length for CRs in Gerrit?","username":"kostas","ts":"2018-06-21T15:04:02.714Z"}
{"msg":"Anyone following up on how to loosen the restriction on the title length for CRs in Gerrit?","username":"kostas","ts":"2018-06-21T15:04:02.714Z"}
{"msg":"Anyone following up on how to allow longer titles in CRs in Gerrit?","username":"kostas","ts":"2018-06-21T15:04:02.714Z"}
{"msg":"gzip?","username":"yacovm","ts":"2018-06-21T15:11:28.864Z"}
{"msg":"gzip, or we can make the title pass through a word stemmer ( https://en.wikipedia.org/wiki/Stemming ) ","username":"yacovm","ts":"2018-06-21T15:11:28.864Z"}
{"msg":"My understanding from the maintainer's meeting was that it is not a gerrit limitation, it is a git limitation.  For the git short-logs to read correctly, we have a character limit.  I think what was being advocated was to drop the requirement of the 10 characters of FAB-XXXXX from the first line, and say it must be elsewhere in the message.","username":"jyellick","ts":"2018-06-21T15:11:31.949Z"}
{"msg":"My understanding from the maintainer's meeting was that it is not a gerrit limitation, it is a git limitation.  For the git short-logs to read correctly, we have a character limit.  I think what was being advocated was to drop the requirement of the 10 characters of `FAB-XXXXX ` from the first line, and say it must be elsewhere in the message.","username":"jyellick","ts":"2018-06-21T15:11:31.949Z"}
{"msg":"https://stackoverflow.com/questions/2290016/git-commit-messages-50-72-formatting ","username":"jyellick","ts":"2018-06-21T15:14:36.467Z"}
{"msg":"Understood. Are we onboard for dropping the `FAB-xxxxx`prefix in all CRs starting from the 1.3 cycle?","username":"kostas","ts":"2018-06-21T15:24:24.282Z"}
{"msg":"it needs to be in the body... think we need a check that can scan for that in the build","username":"cbf","ts":"2018-06-21T15:25:43.204Z"}
{"msg":"though I will say that this means that the generated changelog will need to have some gyrations to incorporate the JIRA since the changelog is based on shortlog","username":"cbf","ts":"2018-06-21T15:26:43.819Z"}
{"msg":"MERGE FREEZE --- While we cut the rc1 release, please refrain from merging any CRs thanks","username":"cbf","ts":"2018-06-21T20:58:51.632Z"}
{"msg":"Has joined the channel.","username":"nvxtien","ts":"2018-06-22T11:38:17.404Z","type":"uj"}
{"msg":"@jyellick I know this is trivial but the bracket decoration isn't needed, that would buy a very small amount of space.","username":"rjones","ts":"2018-06-22T13:46:42.444Z"}
{"msg":"@rjones Indeed, I've stopped using the bracket notation on mine, but even without, 3 letters + 1 dash + 5 digits + 1 space = 10 characters.  Or, 20% of our 50 character limit.","username":"jyellick","ts":"2018-06-22T13:48:10.305Z"}
{"msg":"Yes, I was just looking at a bunch of changes in flight and saw lots of [] decorations. I suppose you could add that to a style check. But your overall point is not diminished.","username":"rjones","ts":"2018-06-22T13:49:33.059Z"}
{"msg":"@jyellick -  you're the main contributor to the fact that the JIRA IDs now contain so many digits... ","username":"yacovm","ts":"2018-06-22T13:50:31.035Z"}
{"msg":"To paste what was announced in #fabric-scrum ...","username":"dave.enyeart","ts":"2018-06-22T14:01:36.592Z"}
{"msg":"fabric v1.2.0-rc1 has been cut, pushed to dockerhub, and tagged.\nfabric release branch release-1.2 has been created. release-1.2 branch will be used for any critical defects found in rc1 and targeted for the upcoming v1.2.0 release.\nmaster branch can be used for new v1.3 development. Merge freeze lifted, go and use master as usual.\nfabric-ca v1.2.0-rc1 is in final verification, will be pushed to dockerhub shortly.","username":"dave.enyeart","ts":"2018-06-22T14:01:40.764Z"}
{"msg":"fabric-ca is still in MERGE FREEZE","username":"dave.enyeart","ts":"2018-06-22T14:01:53.511Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2018-06-22T15:27:48.002Z","type":"ul"}
{"msg":"Fabric CA MERGE FREEZE END\n\n","username":"cbf","ts":"2018-06-22T16:43:59.555Z"}
{"msg":"See #fabric-pr-review for latest must-fix defect","username":"dave.enyeart","ts":"2018-06-26T11:33:36.847Z"}
{"msg":"All seems to be looking good for cutting 1.2.0 tomorrow ","username":"cbf","ts":"2018-07-02T20:14:44.812Z"}
{"msg":"will have a merge freeze on the release-1.2 branches only while the release is being produced","username":"cbf","ts":"2018-07-02T20:15:32.880Z"}
{"msg":"I was getting some questions about the assorted capabilities documented in the `configtx.yaml` which are really inappropriate for v1.2 -- a low risk merge https://gerrit.hyperledger.org/r/c/23961/ but would not be the end of the world if it did not get in","username":"jyellick","ts":"2018-07-02T23:24:26.468Z"}
{"msg":"@jyellick: I'll +2 because it does seem low-risk. Can you -2? That way we prevent accidental merging and @cbf or @dave.enyeart can remove your -2, then +2 and merge if they think it's good to go.","username":"kostas","ts":"2018-07-03T01:38:44.721Z"}
{"msg":"@jyellick: I can +2 since it does seem low-risk, if you -2. That way we prevent accidental merging and @cbf or @dave.enyeart can remove your -2, then +2 and merge if they think it's good to go.","username":"kostas","ts":"2018-07-03T01:38:44.721Z"}
{"msg":"I +2ed need one more... @mastersingh24 ?","username":"cbf","ts":"2018-07-03T10:06:32.145Z"}
{"msg":"Merged.","username":"JonathanLevi","ts":"2018-07-03T12:34:37.229Z"}
{"msg":"Totally agree. Merged (with an inline explanation which captures the \"why\").","username":"JonathanLevi","ts":"2018-07-03T12:35:48.080Z"}
{"msg":"Has joined the channel.","username":"BabuPallam","ts":"2018-07-04T22:21:59.680Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sigma67","ts":"2018-07-07T13:40:34.096Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nvlasov","ts":"2018-07-11T02:51:54.621Z","type":"uj"}
{"msg":"Has joined the channel.","username":"NoLimitHoldem","ts":"2018-07-11T06:17:17.419Z","type":"uj"}
{"msg":"What's the zoom link for the meeting?","username":"jyellick","ts":"2018-07-11T13:02:39.686Z"}
{"msg":"https://zoom.us/my/hyperledger.community","username":"manish-sethi","ts":"2018-07-11T13:03:00.964Z"}
{"msg":"@cbf @dave.enyeart @mastersingh24 Are you joining the meeting?","username":"jyellick","ts":"2018-07-11T13:06:02.969Z"}
{"msg":"Input for Jira consultant: https://docs.google.com/document/d/1svxqQsdUeJXNi8XqZyyJj3duk5YmJl8XtkrWGe9bQ28/edit?usp=sharing\nv1.2 Retropective: https://docs.google.com/document/d/1SMTcGTMmTpGIEFA9o8LhbtYhhSBS79TPIBCv-J3pCIc/edit?usp=sharing\nv1.3 Epic prioritization: I’ve sent a survey monkey link to maintainers via email.\nv1.3 Epic query: https://jira.hyperledger.org/issues/?jql=issuetype%20%3D%20Epic%20AND%20fixVersion%20%3D%20v1.3.0","username":"dave.enyeart","ts":"2018-07-11T13:14:06.203Z"}
{"msg":"Has joined the channel.","username":"wenjian","ts":"2018-07-11T13:14:51.883Z","type":"uj"}
{"msg":"I cannot join, unfortunately","username":"cbf","ts":"2018-07-11T13:16:34.129Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2018-07-12T04:18:51.538Z","type":"uj"}
{"msg":"Concerning v1.3 Epic Prioritization... Survey Monkey seems very slow... but it does come back if you wait long enough, so if you haven't voted yet try again.","username":"dave.enyeart","ts":"2018-07-13T15:16:36.580Z"}
{"msg":"Survey results as of 8 responses: https://www.surveymonkey.com/results/SM-9H6W3JZWL/","username":"dave.enyeart","ts":"2018-07-13T15:16:53.445Z"}
{"msg":"My commentary:\n- There is resource on the top 6 items (and to a lesser degree the top 11 items), so we appear to be working on the right things already.\n- I think the survey is a good addition to our release processes... provides some more transparency, even though it pretty much reflects what we've already been talking about.\n- Not all top items will get contained in v1.3, we'll see where we land... as you develop items keep in mind a strategy for how to exclude from the release if it needs to get deferred (exclusion approach will be epic specific, e.g. using V1_3 capability).\n- Programming model improvements (Composer/SDK work) didn't get included in the survey since it was an Improvement rather than an Epic... I've fixed that, but I think it's safe to say that it is a priority and can be worked in parallel since it is different resources.\n- The token and zero knowledge work is not fully netted out into Epic(s), but investment has started as it is a larger item that will be staged over multiple releases.\n- Hygiene work can and should continue in parallel with Epic work.  We have a Hygiene board https://jira.hyperledger.org/secure/RapidBoard.jspa?rapidView=173&view=planning&selectedIssue=FAB-6559 with a backlog of Hygiene items, feel free to create and label items with 'hygiene' so that they show up in this board.  @sykesm  has been managing the prioritization of Hygiene items.  The MSP singleton refactoring is currently the top item.","username":"dave.enyeart","ts":"2018-07-13T15:17:27.640Z"}
{"msg":"I want to demod this channel. It is the last hold out. Any objections? https://chat.hyperledger.org/channel/demod?msg=X5wkw8BGRvfTofPgD @tkuhrt ","username":"rjones","ts":"2018-07-13T22:56:27.810Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/demod?msg=X5wkw8BGRvfTofPgD","url":"https://chat.hyperledger.org/channel/demod?msg=X5wkw8BGRvfTofPgD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@rjones ... fine by me ... @cbf and I were discussing this the other day","username":"mastersingh24","ts":"2018-07-14T14:15:46.045Z"}
{"msg":"Has joined the channel.","username":"bestbeforetoday","ts":"2018-07-16T12:10:02.413Z","type":"uj"}
{"msg":"ok by me @rjones ","username":"cbf","ts":"2018-07-16T12:24:26.467Z"}
{"msg":"Hi, we are starting a meeting to review proposed Jira changes: https://global.gotomeeting.com/join/377933877 ","username":"dave.enyeart","ts":"2018-07-16T14:02:01.939Z"}
{"msg":"We really need to get this stack from @jyellick  in:   https://gerrit.hyperledger.org/r/#/q/owner:jyellick%2540us.ibm.com+status:open","username":"mastersingh24","ts":"2018-07-17T12:08:15.103Z"}
{"msg":"Can we get some love on these please?","username":"mastersingh24","ts":"2018-07-17T12:08:30.372Z"}
{"msg":"Fellow maintainers .... I implore you to reconsider the concept of moving to single +2 for Fabric CRs.\nThere are many straight-forward CRs and we are simply not reviewing them quickly enough.\nI'm really not sure why so many are opposed to moving to a single +2 model","username":"mastersingh24","ts":"2018-07-17T16:24:09.896Z"}
{"msg":"I'd even settle in the near term for allow maintainers who submit changes to +2 their own as well","username":"mastersingh24","ts":"2018-07-17T16:25:17.933Z"}
{"msg":"Although I have my concerns about code quality with a single +2 system, it does seem obvious that in the current system of 2+2, we are simply not getting through the backlog of CRs.  For instance, I pushed a fairly long, but trivial series, doing some refactor to make lifecycle more pluggable to enable the v1.3 lifecycle epic work.  I pushed it over a month ago at this point, and aside from Gari's +2s, it is languishing.\n\nAlthough I think we need to more comprehensively address things, I think Gari's solution of allowing a maintainer to self +2 if they believe the CR is straightforward would at least help clear the log jam.","username":"jyellick","ts":"2018-07-17T16:31:05.400Z"}
{"msg":"I agree that allowing a maintainer to +2 their own (straightforward) CRs is a decent compromise for now. We can also have the top SME do a deeper review and a 2nd person do a lighter quicker review (we sometimes do that already, although unspoken). I still have concerns about going completely to a single +2 policy in fabric project... the 2nd reviewer often leaves good comments, and our code would be in a worse place if we had lost all those 2nd reviews.  We have seen that a single defect in critical areas can cause a state fork or panic ALL peers in a network, and finding these defects ahead of time is priceless, even if that impacts velocity. My opinion...","username":"dave.enyeart","ts":"2018-07-17T18:46:45.257Z"}
{"msg":"@dave.enyeart - my thoughts exactly. ","username":"yacovm","ts":"2018-07-17T18:50:56.142Z"}
{"msg":"> I agree that allowing a maintainer to +2 their own (straightforward) CRs is a decent compromise for now. We can also have the top SME do a deeper review and a 2nd person do a lighter quicker review (we sometimes do that already, although unspoken). I still have concerns about going completely to a single +2 policy in fabric project... the 2nd reviewer often leaves good comments, and our code would be in a worse place if we had lost all those 2nd reviews. We have seen that a single defect in critical areas can cause a state fork or panic ALL peers in a network, and finding these defects ahead of time is priceless, even if that impacts velocity. My opinion... \n@dave.enyeart - my thoughts exactly. ","username":"yacovm","ts":"2018-07-17T18:50:56.142Z"}
{"msg":"> I agree that allowing a maintainer to +2 their own (straightforward) CRs is a decent compromise for now. We can also have the top SME do a deeper review and a 2nd person do a lighter quicker review (we sometimes do that already, although unspoken). I still have concerns about going completely to a single +2 policy in fabric project... the 2nd reviewer often leaves good comments, and our code would be in a worse place if we had lost all those 2nd reviews. We have seen that a single defect in critical areas can cause a state fork or panic ALL peers in a network, and finding these defects ahead of time is priceless, even if that impacts velocity. My opinion... \nmy thoughts exactly. ","username":"yacovm","ts":"2018-07-17T18:51:48.889Z"}
{"msg":"And to add to that: We... somehow got to v1.3, with a 2+2 policy, didn't we? What has changed that we need to change the policy? \nThe obvious thing that has changed is that Jason and Matt altogether pushed lately 4 gerrit pages. \nSetting aside the kudos for all the hard work ;) - that work is mainly refactoring and addressing existing code - which means, at some point the refactoring is going to end,\nand then the rate of gerrit commits is expected to fall, isn't it? \nIf that is the case- then it's only a temporary state, and should we really do such a drastic change to address a temporary state?\n\nI'm saying all this despite I will (personally) greatly enjoy an only 1 +2 policy. Herding 2 +2s for my features in v1.2 was a very.... proactive task on my behalf, and the code ended up being merged eventually. ","username":"yacovm","ts":"2018-07-17T19:03:51.451Z"}
{"msg":"Therefore I think the \"add your own +2\" is a perfect compromise though I have to say that it is a bit biased and non uniform. ","username":"yacovm","ts":"2018-07-17T19:05:35.853Z"}
{"msg":"We either have good judgement or we don't ..... just because YOU CAN does not mean YOU HAVE TO  ;)","username":"mastersingh24","ts":"2018-07-17T19:10:29.523Z"}
{"msg":"And I will say that proper tests and well structured code are a better solution that 2+2  ","username":"mastersingh24","ts":"2018-07-17T19:11:11.416Z"}
{"msg":"And I will say that proper tests and well structured code are a better solution than 2+2","username":"mastersingh24","ts":"2018-07-17T19:11:11.416Z"}
{"msg":"too many times I run code coverage and I see that the tests that were added didn't cover all the added code, so it can be misleading ;) ","username":"yacovm","ts":"2018-07-17T19:12:04.224Z"}
{"msg":"Don't merge stuff if you are unsure  ;)","username":"mastersingh24","ts":"2018-07-17T19:12:04.397Z"}
{"msg":"good point @yacovm ","username":"mastersingh24","ts":"2018-07-17T19:12:27.050Z"}
{"msg":"number of tests or amount of test code does not necessarily equate to proper test coverage","username":"mastersingh24","ts":"2018-07-17T19:13:02.936Z"}
{"msg":"Has joined the channel.","username":"adarshsaraf123","ts":"2018-07-18T08:13:15.874Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ChanderGovindarajan","ts":"2018-07-18T08:13:22.194Z","type":"uj"}
{"msg":"Maintainer meeting today 9am US Eastern / 1pm UTC: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-07-18T08:34:47.151Z"}
{"msg":"Topics","username":"dave.enyeart","ts":"2018-07-18T08:35:00.211Z"}
{"msg":"v1.3 Epic Prioritization/Planning - I've created a slide to capture the surveymonkey results","username":"dave.enyeart","ts":"2018-07-18T08:35:55.641Z"}
{"msg":"v1.3 Epic Prioritization/Planning - I've created a slide to capture the surveymonkey results, and we've scheduled playbacks for Epics that are ready: https://wiki.hyperledger.org/projects/fabric/playbacks","username":"dave.enyeart","ts":"2018-07-18T08:35:55.641Z"}
{"msg":"v1.2 retrospective: https://docs.google.com/document/d/1SMTcGTMmTpGIEFA9o8LhbtYhhSBS79TPIBCv-J3pCIc/edit?usp=sharing","username":"dave.enyeart","ts":"2018-07-18T08:37:33.310Z"}
{"msg":"","username":"dave.enyeart","ts":"2018-07-18T08:38:11.692Z","attachments":[{"type":"file","title":"Clipboard - July 18, 2018 4:38 AM","title_link":"/file-upload/tobByhJEtTMm4Hhxg/Clipboard%20-%20July%2018,%202018%204:38%20AM","image_url":"/file-upload/tobByhJEtTMm4Hhxg/Clipboard%20-%20July%2018,%202018%204:38%20AM","image_type":"image/png","image_size":499475,"url":"/file-upload/tobByhJEtTMm4Hhxg/Clipboard%20-%20July%2018,%202018%204:38%20AM","remote":false,"fileId":"tobByhJEtTMm4Hhxg","fileName":"Clipboard - July 18, 2018 4:38 AM"}]}
{"msg":"@here Maintainer meeting starting","username":"dave.enyeart","ts":"2018-07-18T13:03:05.625Z"}
{"msg":"Has joined the channel.","username":"samir.tata","ts":"2018-07-19T03:53:54.047Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jtonline","ts":"2018-07-19T15:13:08.714Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dimaxgl","ts":"2018-07-20T12:50:45.904Z","type":"uj"}
{"msg":"Has joined the channel.","username":"IsaacWong","ts":"2018-07-20T15:11:03.399Z","type":"uj"}
{"msg":"latest epic prioritization chart after the maintainer meeting (only addition was a sample for cross-system deployment):","username":"dave.enyeart","ts":"2018-07-23T16:40:42.299Z"}
{"msg":"","username":"dave.enyeart","ts":"2018-07-23T16:40:50.842Z","attachments":[{"type":"file","title":"Clipboard - July 23, 2018 12:40 PM","title_link":"/file-upload/gqRfcj8R87w9onjFg/Clipboard%20-%20July%2023,%202018%2012:40%20PM","image_url":"/file-upload/gqRfcj8R87w9onjFg/Clipboard%20-%20July%2023,%202018%2012:40%20PM","image_type":"image/png","image_size":241393,"url":"/file-upload/gqRfcj8R87w9onjFg/Clipboard%20-%20July%2023,%202018%2012:40%20PM","remote":false,"fileId":"gqRfcj8R87w9onjFg","fileName":"Clipboard - July 23, 2018 12:40 PM"}]}
{"msg":"","username":"dave.enyeart","ts":"2018-07-23T16:41:11.543Z","attachments":[{"type":"file","title":"Fabric_v13_Epic_Prioritization.pptx.zip","title_link":"/file-upload/9oG94HFLeWRiLb2kz/Fabric_v13_Epic_Prioritization.pptx.zip","url":"/file-upload/9oG94HFLeWRiLb2kz/Fabric_v13_Epic_Prioritization.pptx.zip","remote":false,"fileId":"9oG94HFLeWRiLb2kz","fileName":"Fabric_v13_Epic_Prioritization.pptx.zip"}]}
{"msg":"v1.2 retrospective edits based on last maintainer meeting: https://docs.google.com/document/d/1SMTcGTMmTpGIEFA9o8LhbtYhhSBS79TPIBCv-J3pCIc/edit?usp=sharing","username":"dave.enyeart","ts":"2018-07-23T16:41:57.869Z"}
{"msg":"The only other item of interest in last weeks maintainer meeting was that there was consensus to allow maintainers to +2 their own CRs if the maintainer has confidence that the CR is straightforward enough to bypass the second independent review.  I will push an edit to the Fabric contribution docs mentioning this.","username":"dave.enyeart","ts":"2018-07-23T16:44:19.924Z"}
{"msg":"@here  Proposal to retire dormant maintainers, let's see if there is support from majority: https://gerrit.hyperledger.org/r/#/c/24675/","username":"dave.enyeart","ts":"2018-07-23T19:26:18.601Z"}
{"msg":"@here  Proposal to retire dormant maintainers, let's see if there is support from majority, indicate with a +1: https://gerrit.hyperledger.org/r/#/c/24675/","username":"dave.enyeart","ts":"2018-07-23T19:26:18.601Z"}
{"msg":"Has joined the channel.","username":"iamksseo","ts":"2018-07-24T02:02:43.137Z","type":"uj"}
{"msg":"Has joined the channel.","username":"fabiomolinar","ts":"2018-07-24T18:13:02.732Z","type":"uj"}
{"msg":"Has joined the channel.","username":"thakkarparth007","ts":"2018-07-24T20:05:48.075Z","type":"uj"}
{"msg":"the proposal was approved with 9 out of 15 maintainers agreeing to the proposed change","username":"cbf","ts":"2018-07-24T20:25:26.132Z"}
{"msg":"@cbf I will note @jimthematrix is also a fabric-sdk-node committer.","username":"rjones","ts":"2018-07-24T20:32:13.146Z"}
{"msg":"@rjones thanks, yes","username":"cbf","ts":"2018-07-24T20:33:17.170Z"}
{"msg":"among others. ```hyperledger-gerrit-fabric-sdk-java-committers\nhyperledger-gerrit-fabric-chaincode-node-committers\nhyperledger-gerrit-fabric-chaincode-java-committers\nhyperledger-gerrit-fabric-sdk-node-committers```","username":"rjones","ts":"2018-07-24T20:33:38.356Z"}
{"msg":"Wondering if it makes sense to have the maximum inactivity timeout be a function of number of change sets","username":"yacovm","ts":"2018-07-24T20:47:22.440Z"}
{"msg":"Wondering if it makes sense to have the maximum inactivity timeout be a function of number of change sets :thinking_face: ","username":"yacovm","ts":"2018-07-24T20:47:22.440Z"}
{"msg":"we need a more coherent means of tracking all this... maybe something like what docker does","username":"cbf","ts":"2018-07-24T20:49:42.855Z"}
{"msg":"@jeremyphelps was working on an MD->JSON->LDAP bridge a while ago, don't know if it went anywhere","username":"rjones","ts":"2018-07-24T21:00:50.036Z"}
{"msg":"Has joined the channel.","username":"jeremyphelps","ts":"2018-07-24T21:00:50.179Z","type":"uj"}
{"msg":"@rjones I think that was Aric working on that, he demo'd something internally the other day.","username":"jeremyphelps","ts":"2018-07-25T13:41:59.444Z"}
{"msg":"Has joined the channel.","username":"MattHamilton","ts":"2018-07-25T14:17:21.184Z","type":"uj"}
{"msg":"Regarding the JIRA improvements that we've put in last week, a quick question. Would any subsequent improvements (in terms of new fields, less fields, etc.) require the help of a consultant, or we are in a place now where we can do those edits ourselves?","username":"kostas","ts":"2018-07-25T18:07:06.407Z"}
{"msg":"Regarding the JIRA improvements that we've put in last week, a quick question. Would any subsequent improvements (in terms of new fields, less fields, etc.) require the help of a consultant, or we are in a place now where we can do those JIRA changes ourselves?","username":"kostas","ts":"2018-07-25T18:07:06.407Z"}
{"msg":"we should be able to ask for specific tweaks directly","username":"cbf","ts":"2018-07-25T20:38:09.351Z"}
{"msg":"but we do have the consultant for something like 4 hours a month follow-up","username":"cbf","ts":"2018-07-25T20:38:28.444Z"}
{"msg":"@kostas ^^","username":"cbf","ts":"2018-07-25T20:38:37.419Z"}
{"msg":"Got it, thanks. Directly as in -- reach out to Suze, or somewhere else?","username":"kostas","ts":"2018-07-25T20:39:45.382Z"}
{"msg":"Got it, thanks. Directly as in -- reach out to Suze, or someone/somewhere else?","username":"kostas","ts":"2018-07-25T20:39:45.382Z"}
{"msg":"@cbf: Got it, thanks. Directly as in -- reach out to Suze, or someone/somewhere else?","username":"kostas","ts":"2018-07-25T20:39:45.382Z"}
{"msg":"@dhuseby ??","username":"cbf","ts":"2018-07-25T20:41:34.965Z"}
{"msg":"@cbf @dave.enyeart @mastersingh24 is it possible to add a binary to the docker tools container for v1.2 somehow? ","username":"yacovm","ts":"2018-07-25T20:43:58.388Z"}
{"msg":"context:","username":"yacovm","ts":"2018-07-25T20:44:01.642Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-questions?msg=cJPDHhkvwrSEFbTCZ","username":"yacovm","ts":"2018-07-25T20:44:20.193Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-questions?msg=cJPDHhkvwrSEFbTCZ","url":"https://chat.hyperledger.org/channel/fabric-questions?msg=cJPDHhkvwrSEFbTCZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Seems some users rely on the tools container and the `discover` binary isn't there","username":"yacovm","ts":"2018-07-25T20:44:48.251Z"}
{"msg":"ah, sure","username":"cbf","ts":"2018-07-25T20:45:09.027Z"}
{"msg":"create a JIRA and assign to me","username":"cbf","ts":"2018-07-25T20:45:24.285Z"}
{"msg":"thanks :) ","username":"yacovm","ts":"2018-07-25T20:45:28.811Z"}
{"msg":"FAB-11316","username":"yacovm","ts":"2018-07-25T20:49:25.326Z"}
{"msg":"Has joined the channel.","username":"bourbonkidQ","ts":"2018-07-25T20:50:58.199Z","type":"uj"}
{"msg":"hmmm, i opened it accidentally as documentation change and seems like i can't change it.... @dave.enyeart  can you or anyone else try?  ","username":"yacovm","ts":"2018-07-25T20:55:29.746Z"}
{"msg":"let me see","username":"cbf","ts":"2018-07-25T20:57:26.324Z"}
{"msg":"I cannot - @dave.enyeart I thought you said we could change with an option under the More button","username":"cbf","ts":"2018-07-25T20:59:03.317Z"}
{"msg":"@cbf @yacovm I changed it to a Task.  It is under More-->Move.  I think anybody can do it, but let me know if you guys don't have permission.","username":"dave.enyeart","ts":"2018-07-25T21:02:46.680Z"}
{"msg":"Move is completely counterintuitive","username":"cbf","ts":"2018-07-25T21:03:09.633Z"}
{"msg":"wow","username":"cbf","ts":"2018-07-25T21:03:14.273Z"}
{"msg":"yep","username":"dave.enyeart","ts":"2018-07-25T21:03:18.168Z"}
{"msg":"thx","username":"cbf","ts":"2018-07-25T21:03:20.877Z"}
{"msg":"thanks for both! ","username":"yacovm","ts":"2018-07-25T21:04:56.888Z"}
{"msg":"thanks for both!  (the move and the info tip)","username":"yacovm","ts":"2018-07-25T21:04:56.888Z"}
{"msg":"@yacov https://gerrit.hyperledger.org/r/2478","username":"cbf","ts":"2018-07-25T21:19:47.352Z"}
{"msg":"that was fast","username":"yacovm","ts":"2018-07-25T21:20:05.682Z"}
{"msg":"that was fast, thanks","username":"yacovm","ts":"2018-07-25T21:20:05.682Z"}
{"msg":"but i can't see it","username":"yacovm","ts":"2018-07-25T21:20:19.397Z"}
{"msg":"but can we add it somehow to v1.2 ? ","username":"yacovm","ts":"2018-07-25T21:22:03.187Z"}
{"msg":"but can we add it somehow to v1.2 published docker images?","username":"yacovm","ts":"2018-07-25T21:22:03.187Z"}
{"msg":"should we cherry pick it to v1.2 too?","username":"yacovm","ts":"2018-07-25T21:22:11.280Z"}
{"msg":"Has joined the channel.","username":"Ryan2","ts":"2018-07-26T00:09:04.314Z","type":"uj"}
{"msg":"I can do that","username":"cbf","ts":"2018-07-26T11:47:16.595Z"}
{"msg":"I see a CR to remove event hub was merged.  At a maintainers meeting earlier this month, we said we would do some homework to determine impact to each of the SDKs, prior to making a decision of whether event hub could be removed in v1.3 timeframe with minimal impact to existing applications.  Let's discuss in FAB-11122 , I've asked in there for each of the SDKs, what is the last release that used the peer's event hub?   Hyperledger follows semantic versioning which means an API should only be removed at a major release... if we want to be more aggressive than the policy I think we should have all the facts first and achieve some consensus among maintainers.  If the SDKs haven't used event hub since 1.1, I think we could make a case for the early retirement, but should probably include a release note in 1.2.1 with the deprecation warning.","username":"dave.enyeart","ts":"2018-07-26T17:40:44.267Z"}
{"msg":"I see a CR to remove event hub was merged.  At a maintainers meeting earlier this month, we said we would do some homework to determine impact to each of the SDKs, prior to making a decision of whether event hub could be removed in v1.3 timeframe with minimal impact to existing applications.  Let's discuss in FAB-11122 , I've asked in there for each of the SDKs, what is the last release that used the peer's event hub?   Hyperledger follows semantic versioning which means an API should only be removed at a major release... if we want to be more aggressive than the policy I think we should have all the facts first and achieve some consensus among maintainers.  If the SDKs haven't used event hub since 1.1, I think we could make a case for the early retirement, but should probably include a release note in 1.2.1 with the deprecation warning (would have been better to release note in 1.2.0, but that ship has sailed).","username":"dave.enyeart","ts":"2018-07-26T17:40:44.267Z"}
{"msg":"I see a CR to remove event hub was merged.  At a maintainers meeting earlier this month, we said we would do some homework to determine impact to each of the SDKs, prior to making a decision of whether event hub could be removed in v1.3 timeframe with minimal impact to existing applications.  Let's discuss in FAB-11122 , I've asked in there for each of the SDKs, what is the last release that used the peer's event hub?   Hyperledger follows semantic versioning which means an API should only be removed at a major release... if we want to be more aggressive than the policy I think we should have all the facts first and achieve some consensus among maintainers.  If the SDKs haven't used event hub since 1.0, I think we could make a case for the early retirement, but should probably include a release note in 1.2.1 with the deprecation warning (would have been better to release note in 1.2.0, but that ship has sailed).","username":"dave.enyeart","ts":"2018-07-26T17:40:44.267Z"}
{"msg":"My understanding is that the eventhub APIs were marked 'deprecated' as of v1.1.  Though I agree with the intent of semantic versioning, based on feedback from users, anyone who has tried using the eventhub in 'real' deployments have found it ultimately causes stability problems in the peer, resulting in long hangs, missed events, etc, not to mention the inability to do real access control.  In fact, the channel event service stuff seems to be one of the primary motivators towards migration to v1.1.  Despite the break in semantic versioning, my vote is that the removal is the right thing to do.","username":"jyellick","ts":"2018-07-26T17:49:16.233Z"}
{"msg":"But I've seen change sets of SDKs that they removed the client side code ","username":"yacovm","ts":"2018-07-26T17:49:25.557Z"}
{"msg":"yeah, i'm asking which version of the SDKs did they remove references to event hub","username":"dave.enyeart","ts":"2018-07-26T17:49:55.712Z"}
{"msg":"we need to understand this regardless for the release notes","username":"dave.enyeart","ts":"2018-07-26T17:50:12.043Z"}
{"msg":"I believe it's latest.... ","username":"yacovm","ts":"2018-07-26T17:50:13.131Z"}
{"msg":"v1.3, yes.  The old eventhub stuff was left available as an API for v1.0 peers, but was marked deprecated, that the channel event mechanism is the preferred API for v1.1+ peers","username":"jyellick","ts":"2018-07-26T17:50:49.990Z"}
{"msg":"v1.3, yes.  The old eventhub stuff was left available as an API in the SDK so that it could continue to work with  v1.0 peers, but was marked deprecated, that the channel event mechanism is the preferred API for v1.1+ peers","username":"jyellick","ts":"2018-07-26T17:50:49.990Z"}
{"msg":"I do not believe either SDK transparently changed implementation from using the old eventhub to the new event service.  I believe they both exposed the channel based event service as a new API.","username":"jyellick","ts":"2018-07-26T17:52:09.239Z"}
{"msg":"I do not believe either SDK transparently changed implementation from using the old eventhub to the new event service.  I believe they both exposed the channel based event service as a new API (and updated their samples etc. to use it)","username":"jyellick","ts":"2018-07-26T17:52:09.239Z"}
{"msg":"@jyellick looks like java sdk gave warning not to use event hub as of 1.1.  looks like node sdk made both available in v1.1 and v1.2, no indication of deprecation as far as I can tell, and samples used old event hub up until today.  So there will likely be v1.2 apps using old event hub when v1.3 goes out.","username":"dave.enyeart","ts":"2018-07-26T18:33:58.227Z"}
{"msg":"Good to know, and we should certainly document.  I still stand by the assertion that removing it for v1.3 is the right call.","username":"jyellick","ts":"2018-07-26T18:35:47.371Z"}
{"msg":"Given the nature of the event hub problems, I would have to agree that forcing applications over to the new channel event service before they upgrade to v1.3 is the best (or least bad) option... I've tagged the jira as Release Note Required","username":"dave.enyeart","ts":"2018-07-26T19:32:18.466Z"}
{"msg":"Has joined the channel.","username":"zjubfd","ts":"2018-07-28T10:14:22.747Z","type":"uj"}
{"msg":"Are we doing FAB-3389 for v1.3 ? ","username":"yacovm","ts":"2018-07-28T10:59:50.543Z"}
{"msg":"@dave.enyeart  @cbf  @mastersingh24 ","username":"yacovm","ts":"2018-07-28T11:00:07.105Z"}
{"msg":"@sykesm ","username":"yacovm","ts":"2018-07-28T11:00:36.300Z"}
{"msg":"@yacovm I've tagged it and it's parent epic as help-wanted, been trying to find somebody for it.  @muralisr said he may be able to look at it.","username":"dave.enyeart","ts":"2018-07-28T11:46:22.724Z"}
{"msg":"At this point I'd say v1.4.0 is more likely, although it would be really great if some good soul could add some minimal amount of metrics in v1.3.0.","username":"dave.enyeart","ts":"2018-07-28T11:49:21.174Z"}
{"msg":"I think we should merge code but not activate it in v1.3","username":"yacovm","ts":"2018-07-28T12:06:53.236Z"}
{"msg":"I think we should merge code for metrics, but not activate it in v1.3","username":"yacovm","ts":"2018-07-28T12:06:53.236Z"}
{"msg":"i.e not do https://gerrit.hyperledger.org/r/#/c/24889/6/peer/node/start.go@385 ","username":"yacovm","ts":"2018-07-28T12:07:26.928Z"}
{"msg":"But, that's only my opinion.... if others think otherwise or likewise please state so. ","username":"yacovm","ts":"2018-07-28T12:07:54.501Z"}
{"msg":"my question is - are we activating this for v1.3?","username":"yacovm","ts":"2018-07-28T12:10:06.162Z"}
{"msg":"Ah, I didn't realize work has resumed on it... if some good metrics are added in v1.3 timeframe, why wouldn't we activate it?","username":"dave.enyeart","ts":"2018-07-28T12:10:48.622Z"}
{"msg":"Ah, I didn't realize work has resumed on it (https://gerrit.hyperledger.org/r/#/c/24889/), if some good metrics are added in v1.3 timeframe, why wouldn't we activate it?","username":"dave.enyeart","ts":"2018-07-28T12:10:48.622Z"}
{"msg":"well... do we have *any* integration test with metrics?","username":"yacovm","ts":"2018-07-28T12:11:09.963Z"}
{"msg":"that would indeed be a requirement","username":"dave.enyeart","ts":"2018-07-28T12:11:44.362Z"}
{"msg":"the submitter probably needs some guidance","username":"dave.enyeart","ts":"2018-07-28T12:12:02.252Z"}
{"msg":"i sure wish we had test guidance in RTD that we could point people to @latitiah  :)  http://hyperledger-fabric.readthedocs.io/en/latest/testing.html","username":"dave.enyeart","ts":"2018-07-28T12:16:00.949Z"}
{"msg":"do you not think metrics warrants a playback? ","username":"yacovm","ts":"2018-07-28T12:16:01.987Z"}
{"msg":"of course it would","username":"dave.enyeart","ts":"2018-07-28T12:16:24.018Z"}
{"msg":"@grapebaba ^ ","username":"yacovm","ts":"2018-07-28T12:16:41.357Z"}
{"msg":"@yacovm thanks for bringing it up... I've connected with grapebaba about design playbacks (I don't think non-maintainers can post here yet)","username":"dave.enyeart","ts":"2018-07-28T12:30:47.236Z"}
{"msg":"@dave.enyeart they should be able to","username":"rjones","ts":"2018-07-28T12:37:28.213Z"}
{"msg":"There is `Fabric CLI design review` scheduled for next week, which appears in my calendar as following:","username":"C0rWin","ts":"2018-07-28T17:32:36.780Z"}
{"msg":"","username":"C0rWin","ts":"2018-07-28T17:32:41.880Z","attachments":[{"type":"file","title":"Clipboard - July 28, 2018 8:32 PM","title_link":"/file-upload/3w9cSBt5c4wK5pJj3/Clipboard%20-%20July%2028,%202018%208:32%20PM","image_url":"/file-upload/3w9cSBt5c4wK5pJj3/Clipboard%20-%20July%2028,%202018%208:32%20PM","image_type":"image/png","image_size":16557,"url":"/file-upload/3w9cSBt5c4wK5pJj3/Clipboard%20-%20July%2028,%202018%208:32%20PM","remote":false,"fileId":"3w9cSBt5c4wK5pJj3","fileName":"Clipboard - July 28, 2018 8:32 PM"}]}
{"msg":"do we really need that much time for this?","username":"C0rWin","ts":"2018-07-28T17:32:52.094Z"}
{"msg":"metrics collection would be awesome addition for 1.3 ","username":"cbf","ts":"2018-07-28T20:15:03.670Z"}
{"msg":"@rjones can you update the Fabric CLI Design Review to be 45 minutes","username":"dave.enyeart","ts":"2018-07-29T01:46:28.136Z"}
{"msg":"you got the start time correct :)","username":"dave.enyeart","ts":"2018-07-29T01:46:43.618Z"}
{"msg":"I don't think 1 day is enough for this, TBH","username":"yacovm","ts":"2018-07-29T12:30:43.449Z"}
{"msg":"well, it's only 12 hours, probably a warm up  ","username":"C0rWin","ts":"2018-07-29T12:32:27.236Z"}
{"msg":"@C0rWin @dave.enyeart please tell me if it's re-done. I just trimmed it to 45 minutes, which I think will be a lot of ground. I don't understand why you don't want a 12 hour meeting","username":"rjones","ts":"2018-07-29T22:45:21.289Z"}
{"msg":"@rjones I didn't get an updated invite, but that's ok, I'm sure people won't mind if we stop 11 hours early","username":"dave.enyeart","ts":"2018-07-30T01:30:07.337Z"}
{"msg":"well I told the dang thing to send updated meeting details but I see no email ¯\\_(ツ)_/¯","username":"rjones","ts":"2018-07-30T03:18:58.722Z"}
{"msg":"Has joined the channel.","username":"bpbuch","ts":"2018-07-31T16:22:54.695Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jg507","ts":"2018-07-31T21:13:26.079Z","type":"uj"}
{"msg":"@here maintainer meeting starting in a couple minutes, some links that we will discuss:","username":"dave.enyeart","ts":"2018-08-01T12:58:04.828Z"}
{"msg":"Release schedule: https://docs.google.com/document/d/1SMTcGTMmTpGIEFA9o8LhbtYhhSBS79TPIBCv-J3pCIc/edit#heading=h.nqedm5f92m27","username":"dave.enyeart","ts":"2018-08-01T12:58:16.196Z"}
{"msg":"Release schedule in retrospective doc: https://docs.google.com/document/d/1SMTcGTMmTpGIEFA9o8LhbtYhhSBS79TPIBCv-J3pCIc/edit#heading=h.nqedm5f92m27","username":"dave.enyeart","ts":"2018-08-01T12:58:16.196Z"}
{"msg":"Release dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10701","username":"dave.enyeart","ts":"2018-08-01T12:58:33.588Z"}
{"msg":"https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-08-01T12:59:55.469Z"}
{"msg":"As a follow-up to our maintainer meeting today... here's the hygiene board that will pick up any jira items with label `hygiene`: https://jira.hyperledger.org/secure/RapidBoard.jspa?rapidView=173&view=planning ","username":"dave.enyeart","ts":"2018-08-01T19:48:25.080Z"}
{"msg":"If you feel strongly about prioritizing a certain item, go ahead and create it, label it `hygiene`, and promote it from general Backlog to Next Items.  On the next maintainer call we can discuss relative priorities and rank the Next Items top-down.","username":"dave.enyeart","ts":"2018-08-01T19:48:37.841Z"}
{"msg":"Technically - Next Items is a jira sprint, but we won't actually start it, we use it more as a revolving door to rank items above the general Backlog.","username":"dave.enyeart","ts":"2018-08-01T19:49:48.423Z"}
{"msg":"Thanks to @sykesm for watching over the hygiene backlog the past few months.","username":"dave.enyeart","ts":"2018-08-01T19:50:54.186Z"}
{"msg":"Has joined the channel.","username":"mhomaid","ts":"2018-08-02T16:40:21.819Z","type":"uj"}
{"msg":"Has joined the channel.","username":"diizuka","ts":"2018-08-03T00:22:04.858Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zmaro","ts":"2018-08-03T15:21:46.409Z","type":"uj"}
{"msg":"I would like to join fabric community and become a contributor, how to start the process.","username":"GopalPanda","ts":"2018-08-04T00:30:18.696Z"}
{"msg":"@GopalPanda read https://hyperledger-fabric.readthedocs.io/en/release-1.2/CONTRIBUTING.html and please ask questions in #fabric-questions ","username":"rjones","ts":"2018-08-04T04:10:13.697Z"}
{"msg":"@rjones  Thank you , will all the guidelines ","username":"GopalPanda","ts":"2018-08-04T06:07:22.928Z"}
{"msg":"@here Design review starting for Fabric tokens - https://zoom.us/j/5184947650","username":"dave.enyeart","ts":"2018-08-14T14:13:40.100Z"}
{"msg":"@here maintainer meeting starts in one hour: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-08-15T12:05:05.983Z"}
{"msg":"I'm double-booked this morning with another call I can't miss, but will try to join late","username":"jyellick","ts":"2018-08-15T13:00:58.731Z"}
{"msg":"Has joined the channel.","username":"larry618","ts":"2018-08-19T07:42:55.234Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bdjidi","ts":"2018-08-21T22:48:30.732Z","type":"uj"}
{"msg":"@dave.enyeart I missed the FabToken design review, was it recorded? (I did read through the design doc)","username":"jimthematrix","ts":"2018-08-22T03:43:15.921Z"}
{"msg":"@jimthematrix https://drive.google.com/drive/folders/1GHQkm41tF76kDR5x5eLzJhzLj9S-0bWf ?","username":"rjones","ts":"2018-08-22T07:54:33.764Z"}
{"msg":"@here From a release perspective, getting CRs reviewed remains the largest risk to the release - we need to stop adding new code and catch up on the review backlog please.\nWe have almost 200 CRs in review and the incomings are far outpacing the reviews.","username":"dave.enyeart","ts":"2018-08-22T13:34:39.844Z"}
{"msg":"I’d ask ALL maintainers to stop coding and focus on reviews until we can get to a reasonable backlog.","username":"dave.enyeart","ts":"2018-08-22T13:34:47.077Z"}
{"msg":"On the next maintainers call we'll assess where we are... we will likely need to defer some stories or entire epics in order to focus on the priorities that can be delivered and tested in v1.3 timeframe.","username":"dave.enyeart","ts":"2018-08-22T13:38:43.784Z"}
{"msg":"On the maintainers call next week we'll assess where we are... hopefully we can make good review progress in the next week, but we will likely need to defer some stories or entire epics in order to focus on the priorities that can be delivered and tested in v1.3 timeframe.","username":"dave.enyeart","ts":"2018-08-22T13:38:43.784Z"}
{"msg":"On the maintainers call next week we'll assess where we are... hopefully we can make good review progress in the next week, but we will likely need to defer some stories or entire epics in order to focus on the priorities that can be delivered and tested in v1.3 timeframe. And certainly it is too late in the release to submit brand new features.","username":"dave.enyeart","ts":"2018-08-22T13:38:43.784Z"}
{"msg":"Has joined the channel.","username":"nrohith","ts":"2018-08-22T13:38:47.334Z","type":"uj"}
{"msg":"@here I've nominated Matt Sykes as a Fabric maintainer.  Please review and +1 if you agree: https://gerrit.hyperledger.org/r/#/c/25819/","username":"dave.enyeart","ts":"2018-08-23T12:32:29.201Z"}
{"msg":"Merged - welcome to the club @sykesm !   @rjones Can you grant the privileges please.","username":"dave.enyeart","ts":"2018-08-23T17:05:46.264Z"}
{"msg":"Confirmed and merged - welcome to the club @sykesm !   @rjones Can you grant the privileges please.","username":"dave.enyeart","ts":"2018-08-23T17:05:46.264Z"}
{"msg":"Help desk ticket opened 🤠","username":"rjones","ts":"2018-08-23T18:39:46.453Z"}
{"msg":"---\nThe *master* branch is temporarily broken. Do not \"git pull\"...","username":"JonathanLevi","ts":"2018-08-23T20:52:08.038Z"}
{"msg":"...  and  certainly not \"git push\" ;-)","username":"JonathanLevi","ts":"2018-08-23T20:52:22.249Z"}
{"msg":"or, git pull and then git push a fix","username":"yacovm","ts":"2018-08-23T20:52:31.979Z"}
{"msg":"Sounds like a lot to ask ;-)","username":"JonathanLevi","ts":"2018-08-23T20:52:52.040Z"}
{"msg":"!(git pull) && !(git push) && ( (git pull) && (git commit a fix) && (git push) )","username":"JonathanLevi","ts":"2018-08-23T20:54:15.617Z"}
{"msg":"Or would you like an || ?","username":"JonathanLevi","ts":"2018-08-23T20:55:02.026Z"}
{"msg":"that's what i was typing","username":"yacovm","ts":"2018-08-23T20:55:08.123Z"}
{"msg":"!(git pull) && !(git push) && ( (git pull) || (git commit a fix) && (git push) )","username":"JonathanLevi","ts":"2018-08-23T20:55:37.224Z"}
{"msg":"Has joined the channel.","username":"mathiasb303","ts":"2018-08-29T12:12:26.606Z","type":"uj"}
{"msg":"@here Maintainer meeting coming up at the top of the hour.\nAgenda for today:\n1) With mid-September release candidate for v1.3 approaching, let’s first get a system test update\n2) v1.3 epic close down\n3) v1.4 update - some epics are currently underway, mark any other candidate epics as FixVersion=v1.4.0 and we will review in next maintainer meetings\n4) Other items - performance, hygiene, etc.","username":"dave.enyeart","ts":"2018-08-29T12:36:36.433Z"}
{"msg":"@here Maintainer meeting coming up at the top of the hour: https://zoom.us/my/hyperledger.community\nAgenda for today:\n1) With mid-September release candidate for v1.3 approaching, let’s first get a system test update\n2) v1.3 epic close down\n3) v1.4 update - some epics are currently underway, mark any other candidate epics as FixVersion=v1.4.0 and we will review in next maintainer meetings\n4) Other items - performance, hygiene, etc.","username":"dave.enyeart","ts":"2018-08-29T12:36:36.433Z"}
{"msg":"@here Maintainer meeting coming up at the top of the hour: https://zoom.us/my/hyperledger.community\nAgenda for today:\n1) With mid-September release candidate for v1.3 approaching, let’s first get a system test update\n2) v1.3 epic close down\n3) v1.4 update - some epics are currently underway, mark any other candidate epics as FixVersion=v1.4.0 and we will review in next maintainer meetings\n4) Other items - performance, hygiene, etc.","username":"dave.enyeart","ts":"2018-08-29T12:36:36.433Z"}
{"msg":"Has joined the channel.","username":"moriohara","ts":"2018-08-29T13:09:33.851Z","type":"uj"}
{"msg":"","username":"rickr","ts":"2018-08-29T14:41:48.938Z","attachments":[{"url":null,"remote":true,"fileId":null,"fileName":null}],"type":"message_pinned"}
{"msg":"Maintainer meeting recording from today: https://drive.google.com/file/d/1785Ao-lQNaWeaC74_huiinuOrO3S40sp/view","username":"dave.enyeart","ts":"2018-08-29T15:07:09.435Z"}
{"msg":"Has joined the channel.","username":"sureshtedla","ts":"2018-08-31T16:25:02.065Z","type":"uj"}
{"msg":"Has joined the channel.","username":"wonderfan","ts":"2018-09-06T23:28:39.851Z","type":"uj"}
{"msg":"Has joined the channel.","username":"raviyelleni","ts":"2018-09-09T04:45:01.692Z","type":"uj"}
{"msg":"@here maintainer meeting starting: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-09-12T13:00:41.176Z"}
{"msg":"Has joined the channel.","username":"JaydipMakadia","ts":"2018-09-13T13:12:03.202Z","type":"uj"}
{"msg":"@here I've been thinking about this a while, we currently have nothing in the CR heading that indicates whether the CR is a fix, or a feature, etc","username":"cbf","ts":"2018-09-17T14:40:33.016Z"}
{"msg":"I seem to recall that there was a convention used by some projects to specify the nature of a CR/PR eg","username":"cbf","ts":"2018-09-17T14:41:26.619Z"}
{"msg":"FIX FOO-nnnn blah blah blah","username":"cbf","ts":"2018-09-17T14:41:55.276Z"}
{"msg":"now, we have also talked about loosening the requirement to put the JIRA id in the heading, but it is not being used consistently. However, especially as we close in on the end of a release cycle, being able to identify which CRs need reviews becomes increasingly important","username":"cbf","ts":"2018-09-17T14:43:26.346Z"}
{"msg":"maybe we could adopt a convention that at least for bug fixes, we include FIX in the header so that we don't waste time opening up CRs that don't need immediate attention","username":"cbf","ts":"2018-09-17T14:44:48.182Z"}
{"msg":"thoughts?","username":"cbf","ts":"2018-09-17T14:44:51.652Z"}
{"msg":"I'd say *forcing* a convention isn't a must since there are gray areas - sometimes something is an improvement in the eyes of one, and a bug fix in the eyes of another.\nI think that it can be nice if you had some indication of if it's a bug fix, though I don't see how to enforce it voluntarily? particularly for new members.","username":"yacovm","ts":"2018-09-17T14:46:35.911Z"}
{"msg":"FIX in the header sounds good to me....","username":"yacovm","ts":"2018-09-17T14:48:03.972Z"}
{"msg":"not forcing anything","username":"cbf","ts":"2018-09-17T14:52:24.889Z"}
{"msg":"I've been going with \"Fixes FAB-XXX #done\"\nWe could either go with FIX or BUG in the header","username":"mastersingh24","ts":"2018-09-17T15:42:52.012Z"}
{"msg":"I guess FIX would be better","username":"mastersingh24","ts":"2018-09-17T15:42:59.432Z"}
{"msg":"How about simply requesting that the commit message start with a distinguishing verb, such as \"Fix...\", \"Add...\", \"Refactor...\", \"Document...\", \"Test...\".  Then we won't be using any extra characters, simply making the commit message more informative.  And encourage people to use \"Fix...\" for bugs.","username":"dave.enyeart","ts":"2018-09-17T16:59:53.580Z"}
{"msg":"I'd be okay with that, the convention I had seen previously was used to generate a changelog, but we are doing that with JIRA now","username":"cbf","ts":"2018-09-17T20:38:34.127Z"}
{"msg":"Can I have a quick +2 here please? https://gerrit.hyperledger.org/r/#/c/26343/","username":"JonathanLevi","ts":"2018-09-18T14:16:53.901Z"}
{"msg":"(terminated the fabric-ca build earlier too early. Will sleep better knowing that it wasn't the last CR I merged there)","username":"JonathanLevi","ts":"2018-09-18T14:18:03.272Z"}
{"msg":"Thanks @smithbk and @dave.enyeart ","username":"JonathanLevi","ts":"2018-09-18T14:20:14.497Z"}
{"msg":"@here I've posted remaining release items that I know of in #fabric-scrum .  As we're at the end of the road here, please participate in fabric-scrum this week, could use all your help closing things down this week.","username":"dave.enyeart","ts":"2018-09-19T13:35:42.191Z"}
{"msg":":+1:  I've bin remiss in participating...will from next time ","username":"muralisr","ts":"2018-09-19T14:15:54.167Z"}
{"msg":"slacker ^^^^","username":"mastersingh24","ts":"2018-09-19T14:21:45.359Z"}
{"msg":"just kidding @muralisr  - I know you miss me","username":"mastersingh24","ts":"2018-09-19T14:22:10.886Z"}
{"msg":"Has joined the channel.","username":"wyatt-noise","ts":"2018-09-19T23:58:59.142Z","type":"uj"}
{"msg":"not entirely out of the realm of possibility @mastersingh24  :-)","username":"muralisr","ts":"2018-09-20T03:58:45.808Z"}
{"msg":"please, some love to https://gerrit.hyperledger.org/r/#/c/25948/ Thanks :)","username":"adc","ts":"2018-09-20T13:12:23.652Z"}
{"msg":"@adc - do we want this In Fabric 1.3 RC1 ?","username":"JonathanLevi","ts":"2018-09-20T15:23:41.354Z"}
{"msg":"We are under a \"soft\" (*HARD*) \"code freeze\" ... but if it's important I can ask @dave.enyeart and the rest of the gang...","username":"JonathanLevi","ts":"2018-09-20T15:24:30.186Z"}
{"msg":"We are under a \"soft\" (*HARD*) \"code freeze\" ... but if it's important we can ask @dave.enyeart and the rest of the gang...","username":"JonathanLevi","ts":"2018-09-20T15:24:30.186Z"}
{"msg":"We are under a \"soft\" (though relatively *HARD*) \"code freeze\" ... but if it's important we can ask @dave.enyeart and the rest of the gang...","username":"JonathanLevi","ts":"2018-09-20T15:24:30.186Z"}
{"msg":"We are under a \"soft\" (though relatively *HARD* ;-) ) \"code freeze\" ... but if it's important we can ask @dave.enyeart and the rest of the gang...","username":"JonathanLevi","ts":"2018-09-20T15:24:30.186Z"}
{"msg":"@adc your pr doesn't seem to relate to 1.3 features but future;  can we hold until 1.3 done?","username":"binhn","ts":"2018-09-20T16:34:07.064Z"}
{"msg":"we have been allowing v1.4 content to get merged, as long as it is not exposed or disruptive to v1.3 execution paths.  but with the release candidate scheduled for early next week, it is indeed time for a soft freeze where only critical v1.3 items should get merged.  ","username":"dave.enyeart","ts":"2018-09-20T16:50:06.304Z"}
{"msg":"after we create the release-1.3 branch next week, master will be wide open again for v1.4 dev.","username":"dave.enyeart","ts":"2018-09-20T16:50:22.114Z"}
{"msg":"+1","username":"cbf","ts":"2018-09-20T17:28:25.775Z"}
{"msg":"@binhn, alright. No problem. It can wait. Sorry for that :)","username":"adc","ts":"2018-09-21T07:25:42.219Z"}
{"msg":"@binhn, alright. No problem. It can wait. Sorry for that","username":"adc","ts":"2018-09-21T07:25:42.219Z"}
{"msg":"@all Things are looking pretty good for the v1.3 release candidate.  I've mentioned a few final CRs in #fabric-pr-review . Does anybody else know of other critical items? ","username":"dave.enyeart","ts":"2018-09-23T16:58:04.714Z"}
{"msg":"@all Latest updates posted in #fabric-scrum .  I will call for merge freeze except for any critical release CRs that we discuss here or in #fabric-scrum ","username":"dave.enyeart","ts":"2018-09-24T16:37:40.796Z"}
{"msg":"@dave.enyeart how long is the merge freeze expected, and what is the policy between its end to the cutting of GA ? can we merge v1.4 content that seems detached from the production path?  can we merge small fixes such as https://gerrit.hyperledger.org/r/#/c/26470/ , etc. ? ","username":"yacovm","ts":"2018-09-24T17:27:57.381Z"}
{"msg":"freeze usually ends within 24 hours. when rc1 is cut, we also create release-1.3 branch, and at that time normal merging can resume in master.  for the next 24 hours, only critical fixes and release CRs should be merged into master","username":"dave.enyeart","ts":"2018-09-24T17:31:11.499Z"}
{"msg":"freeze usually ends within 24 hours. when rc1 is cut, we also create release-1.3 branch, and at that time normal merging can resume in master.  for the next 24 hours, only critical fixes that are discussed here or fabric-scrum and release CRs should be merged into master","username":"dave.enyeart","ts":"2018-09-24T17:31:11.499Z"}
{"msg":"yes i am asking about the policy after the 24 hours ;) ","username":"yacovm","ts":"2018-09-24T17:32:18.603Z"}
{"msg":"between RC1 cut and GA ","username":"yacovm","ts":"2018-09-24T17:32:52.436Z"}
{"msg":"master is wide open again between RC1 and GA.  we do any v1.3 GA fixes in release-1.3.","username":"dave.enyeart","ts":"2018-09-24T17:33:39.308Z"}
{"msg":"Has joined the channel.","username":"Ferrymania","ts":"2018-09-25T02:47:23.812Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MikeyGarcia","ts":"2018-09-25T13:04:38.675Z","type":"uj"}
{"msg":"fabric, fabric-ca, fabric-chaincode-java v1.3.0-rc1 have been released. ","username":"dave.enyeart","ts":"2018-09-26T05:38:17.424Z"}
{"msg":"release-1.3 branch has been created for each for any critical bugs that are found over the next week. ","username":"dave.enyeart","ts":"2018-09-26T05:38:32.120Z"}
{"msg":"master branch is re-opened for v1.4 development.  ","username":"dave.enyeart","ts":"2018-09-26T05:38:41.841Z"}
{"msg":"Caveat - please don't merge into fabric-ca yet.  e2e tests from the SDKs are still failing there due to java chaincode issues we've been having, related to syncing across the repositories and branches for 1.3.0-SNAPSHOT, 1.3.0-rc1, 1.3.0, and 1.4.0. ","username":"dave.enyeart","ts":"2018-09-26T05:38:56.478Z"}
{"msg":"Proposed solution for part of the problem in CRs","username":"dave.enyeart","ts":"2018-09-26T05:39:04.298Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/26589/\nhttps://gerrit.hyperledger.org/r/#/c/26590/\nhttps://gerrit.hyperledger.org/r/#/c/26591/","username":"dave.enyeart","ts":"2018-09-26T05:39:08.456Z"}
{"msg":"@here Maintainer meeting in 30 minutes","username":"dave.enyeart","ts":"2018-09-26T12:32:10.666Z"}
{"msg":"Here are the agenda topics I have for today so far... anything else to add?","username":"dave.enyeart","ts":"2018-09-26T12:32:33.619Z"}
{"msg":"v1.3 release candidate update - Dave Enyeart\nv1.3 SDK release plans and v1.4 beta plans\nv1.3 retrospective - please add thoughts, we can review next meeting https://docs.google.com/document/d/1kB-M1sZifxbwIZXO5w79xJDkgFgOeFI4n-rR2AIAU0I/edit#\nv1.4 planning - all\nInteroperability test for cross repository testing (e.g. Identity Mixer, java chaincode) - Latitia Haskins\n.NET chaincode proposal - Manuel Rauber","username":"dave.enyeart","ts":"2018-09-26T12:32:40.277Z"}
{"msg":"v1.3 release candidate update - Dave Enyeart\nv1.3 SDK release plans and v1.4 early beta for programming model\nv1.3 retrospective - please add thoughts, we can review next meeting https://docs.google.com/document/d/1kB-M1sZifxbwIZXO5w79xJDkgFgOeFI4n-rR2AIAU0I/edit#\nv1.4 planning - all\nInteroperability test for cross repository testing (e.g. Identity Mixer, java chaincode) - Latitia Haskins\n.NET chaincode proposal - Manuel Rauber","username":"dave.enyeart","ts":"2018-09-26T12:32:40.277Z"}
{"msg":"-----------------","username":"dave.enyeart","ts":"2018-09-26T12:53:30.992Z"}
{"msg":"----------------- v1.4 planning ----------------","username":"dave.enyeart","ts":"2018-09-26T12:53:30.992Z"}
{"msg":"The feedback from many community members is that they would like a long term support release of Hyperledger Fabric v1.x, with operational improvements. \nThe Fabric maintainers and developers are spending a large percentage of time supporting the community, across Fabric, SDKs, samples, etc.\nWe can get some 'quick wins' in these areas by focusing some effort for next release on operational improvements and SDK/sample improvements.\nAdditionally, some of the larger features we have been working on could benefit from in depth community feedback and test prior to delivery.\nLet me propose the following high level plan to address these concerns:","username":"dave.enyeart","ts":"2018-09-26T12:54:10.222Z"}
{"msg":"1.4 - smaller “long term support\" release - ship early-mid Dec, with an early beta targeting programming model additions\n- operational improvements - metrics, serviceability, improved logging\n- programming model additions for SDK and chaincode\n- Node.js SDK and sample improvements\n- private data reconciliation (deliver the code-complete but deferred items from v1.3)","username":"dave.enyeart","ts":"2018-09-26T12:54:39.119Z"}
{"msg":"> The Fabric maintainers and developers are spending a large percentage of time supporting the community\n:100:","username":"yacovm","ts":"2018-09-26T12:54:43.230Z"}
{"msg":"2.0 - large new items - end of 1Q19, with a more formal beta early on to get feedback on the new features \n- Raft orderer \n- Token\n- Lifecycle 2.0\n- Local collections \n- Idemix revocation support\n- go based CLI \n- hygiene items, especially on peer side, e.g. removal of singleton","username":"dave.enyeart","ts":"2018-09-26T12:54:52.539Z"}
{"msg":"------------------------------","username":"dave.enyeart","ts":"2018-09-26T12:55:08.279Z"}
{"msg":"wait wait, isn't Raft v1.4 ? ","username":"yacovm","ts":"2018-09-26T12:55:11.046Z"}
{"msg":"@here maintainer meeting is starting, please join ","username":"cbf","ts":"2018-09-26T13:04:45.834Z"}
{"msg":"link please?","username":"sureshtedla","ts":"2018-09-26T13:05:17.533Z"}
{"msg":"https://zoom.us/my/hyperledger.community\n","username":"Maria","ts":"2018-09-26T13:05:29.046Z"}
{"msg":":wave: ","username":"latitiah","ts":"2018-09-26T13:05:36.533Z"}
{"msg":"Here","username":"jyellick","ts":"2018-09-26T13:05:45.173Z"}
{"msg":"On call","username":"bretharrison","ts":"2018-09-26T13:05:48.153Z"}
{"msg":"Here","username":"elli-androulaki","ts":"2018-09-26T13:05:51.044Z"}
{"msg":"here","username":"scottz","ts":"2018-09-26T13:05:53.153Z"}
{"msg":"Here","username":"joe-alewine","ts":"2018-09-26T13:05:55.624Z"}
{"msg":"here","username":"cbf","ts":"2018-09-26T13:05:56.759Z"}
{"msg":"here","username":"pandrejko","ts":"2018-09-26T13:06:07.484Z"}
{"msg":"howdy","username":"sstone1","ts":"2018-09-26T13:06:15.219Z"}
{"msg":"here","username":"andrew-coleman","ts":"2018-09-26T13:06:41.076Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=FrgzyHHrpYstGhvdE) @Maria Thank you","username":"sureshtedla","ts":"2018-09-26T13:06:48.388Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FrgzyHHrpYstGhvdE","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=FrgzyHHrpYstGhvdE","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Test flakes: https://jira.hyperledger.org/issues/?filter=12178","username":"sykesm","ts":"2018-09-26T13:49:38.729Z"}
{"msg":"I know I am beating a dead horse, but chaincode should just be images that get pulled","username":"cbf","ts":"2018-09-26T13:55:59.905Z"}
{"msg":"that's one aspect, but, in general, yes","username":"sykesm","ts":"2018-09-26T13:56:17.482Z"}
{"msg":"yes, I understand, but we should definitely get rid of the build-the-image in the peer","username":"cbf","ts":"2018-09-26T13:56:42.655Z"}
{"msg":":+1: ","username":"sstone1","ts":"2018-09-26T14:01:41.513Z"}
{"msg":"I've outlined a list of actions to Gari a few times. They will not be surprises. For fabric core:\n- we focus on protbuf+grpc only\n- we define process contracts for chaincode (docker is the primary implementation)\n- we define a pluggable launcher based on a cni-like model\n- we clearly indicate fabric core code should not be included in user assets\n- we extract the libraries (including golang shim) that should not be part of core - pieces of msp; vendor them as needed","username":"sykesm","ts":"2018-09-26T14:04:13.017Z"}
{"msg":"what pieces of `msp` exactly? ","username":"yacovm","ts":"2018-09-26T14:14:42.325Z"}
{"msg":"and what is the plan w.r.t branches?","username":"yacovm","ts":"2018-09-26T14:16:01.752Z"}
{"msg":"I personally think that before we declare we do lots of feature branches for post v1.4 items","username":"yacovm","ts":"2018-09-26T14:17:33.105Z"}
{"msg":"we need to estimate how much code is left in these features","username":"yacovm","ts":"2018-09-26T14:17:43.330Z"}
{"msg":"because at least for Raft I don't think it's much.... ","username":"yacovm","ts":"2018-09-26T14:17:53.759Z"}
{"msg":"and if we have a development branch for 2.0 items - then don't we need to push the v1.4 items to the 2.0 one as well?","username":"yacovm","ts":"2018-09-26T14:19:30.003Z"}
{"msg":"otherwise it'll be very hard to join them together afterwards","username":"yacovm","ts":"2018-09-26T14:19:43.215Z"}
{"msg":"@sykesm I'm also curios to learn which part of msp do you think should be vendored","username":"adc","ts":"2018-09-26T14:19:52.417Z"}
{"msg":"I'd say you need to have a say in the decision, @adc  ;) ","username":"yacovm","ts":"2018-09-26T14:20:28.191Z"}
{"msg":"Has joined the channel.","username":"mne","ts":"2018-09-26T14:20:29.217Z","type":"uj"}
{"msg":"fwiw, we need a k8s process for chaincode","username":"cbf","ts":"2018-09-26T14:27:03.384Z"}
{"msg":"fwiw, IMO we need a k8s process for chaincode","username":"cbf","ts":"2018-09-26T14:27:03.384Z"}
{"msg":"+1 here as well; is there a location (google doc/jira etc) where these thoughts are captured (like those above) are captured?  Would like to get up-to-speed on the thinking","username":"mbwhite","ts":"2018-09-26T14:29:06.809Z"}
{"msg":"ok, we got the fabric-ca end2end tests passing now.  I can give the all clear for fabric, fabric-ca, fabric-chaincode-java.  master branch is wide open again for new dev. release-1.3 branch will be used for critical v1.3.0 bug fixes.  We'll create release-1.3 branches for the other repos laster today.","username":"dave.enyeart","ts":"2018-09-26T14:38:10.749Z"}
{"msg":"ok, we got the fabric-ca end2end tests passing now.  I can give the all clear for fabric, fabric-ca, fabric-chaincode-java.  master branch is wide open again for new dev. release-1.3 branch will be used for critical v1.3.0 bug fixes.  We'll create release-1.3 branches for the other repos later today.","username":"dave.enyeart","ts":"2018-09-26T14:38:10.749Z"}
{"msg":"yay!","username":"cbf","ts":"2018-09-26T14:38:33.243Z"}
{"msg":"Has joined the channel.","username":"chimonas","ts":"2018-09-26T15:05:05.875Z","type":"uj"}
{"msg":"Has joined the channel.","username":"aso","ts":"2018-09-26T17:50:15.024Z","type":"uj"}
{"msg":"re 1.4, we'll be working on enhanced mvcc; without it, fabric would not be useable to us","username":"binhn","ts":"2018-09-26T18:02:53.048Z"}
{"msg":"Fabric v1.3.0-rc1 has been announced! https://lists.hyperledger.org/g/fabric/message/4656","username":"dave.enyeart","ts":"2018-09-26T19:54:45.420Z"}
{"msg":"Ping me if you'd like anything else included in the release notes for the final release:","username":"dave.enyeart","ts":"2018-09-26T20:12:23.057Z"}
{"msg":"https://github.com/hyperledger/fabric/releases/tag/v1.3.0-rc1","username":"dave.enyeart","ts":"2018-09-26T20:12:28.602Z"}
{"msg":"https://github.com/hyperledger/fabric-ca/releases/tag/v1.3.0-rc1","username":"dave.enyeart","ts":"2018-09-26T20:12:37.285Z"}
{"msg":"Has joined the channel.","username":"yoheiueda","ts":"2018-09-27T09:07:43.188Z","type":"uj"}
{"msg":"@dave.enyeart - missed the last maintainers meeting. Could you post the recording link when you have a chance? Can't find it at https://drive.google.com/drive/u/0/folders/15w14LqjdgREkCabSzWfsgZpj4BPypa9a\nThanks","username":"sheehan","ts":"2018-09-27T14:11:33.252Z"}
{"msg":"I updated the CONTRIBUTIONS.rst to add a better description of our processes","username":"cbf","ts":"2018-09-27T15:37:19.523Z"}
{"msg":"https://gerrit.hyperledger.org/r/26638","username":"cbf","ts":"2018-09-27T15:37:21.657Z"}
{"msg":"@dave.enyeart @mastersingh24 and others, feedback encouraged","username":"cbf","ts":"2018-09-27T15:37:52.263Z"}
{"msg":"@binhn We have not forgotten about enhanced mvcc, in fact that is one of the multiple drivers for the hygiene/refactoring that will span v1.4 and 2.0. Specifically the validator/committer refactoring is one of the top priorities currently, which will unblock the enhanced mvcc task FAB-11422.  We will get the hygiene/refactoring plan into jira and then we can add the corresponding blocking links.","username":"dave.enyeart","ts":"2018-09-27T18:25:50.721Z"}
{"msg":"@rjones @tkuhrt please post the link to the maintainer meeting recording once it is available","username":"dave.enyeart","ts":"2018-09-27T18:27:05.060Z"}
{"msg":"@dave.enyeart It will be this afternoon","username":"rjones","ts":"2018-09-27T18:29:52.185Z"}
{"msg":"Has joined the channel.","username":"jdfigure","ts":"2018-09-27T20:02:33.462Z","type":"uj"}
{"msg":"Has joined the channel.","username":"iramiller","ts":"2018-09-27T20:21:47.789Z","type":"uj"}
{"msg":"@dave.enyeart 20180926-fabric-maintainers.* in https://drive.google.com/open?id=15w14LqjdgREkCabSzWfsgZpj4BPypa9a","username":"rjones","ts":"2018-09-27T23:03:31.665Z"}
{"msg":"Thanks!","username":"sheehan","ts":"2018-09-28T03:08:57.477Z"}
{"msg":"Has joined the channel.","username":"jmason900","ts":"2018-09-28T13:37:58.327Z","type":"uj"}
{"msg":"@dave.enyeart ok, we'll coordinate with the refactoring effort","username":"binhn","ts":"2018-09-28T14:08:48.120Z"}
{"msg":"@cbf confluence is coming to Hyperledger at the highest priority. I filed a flaming hot work order today.","username":"rjones","ts":"2018-09-29T06:43:50.031Z"}
{"msg":"Has joined the channel.","username":"wangdong","ts":"2018-09-29T08:48:23.608Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zhaochy","ts":"2018-09-30T02:03:56.070Z","type":"uj"}
{"msg":"Has joined the channel.","username":"knagware9","ts":"2018-10-01T03:28:42.594Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vanitas92","ts":"2018-10-01T09:07:30.691Z","type":"uj"}
{"msg":"@binhn @muralisr  - Are either of you attending the hackfest in Montreal?   Any other maintainers planning on attending?\nI know @cbf and I will be there","username":"mastersingh24","ts":"2018-10-01T11:07:10.256Z"}
{"msg":"@mastersingh24 I haven't planned for it yet... but will definitely be there at the global forum (hope to see you there !)","username":"muralisr","ts":"2018-10-01T12:46:04.030Z"}
{"msg":"The global forum in Geneva?","username":"mastersingh24","ts":"2018-10-01T12:54:01.416Z"}
{"msg":"apparently I will be there as well","username":"mastersingh24","ts":"2018-10-01T12:54:12.632Z"}
{"msg":":thumbsup:","username":"muralisr","ts":"2018-10-01T14:38:34.000Z"}
{"msg":"@mastersingh24 Basel, no?","username":"rjones","ts":"2018-10-01T14:54:05.520Z"}
{"msg":"right ... yeah","username":"mastersingh24","ts":"2018-10-01T15:02:04.933Z"}
{"msg":"@mastersingh24 I'll be at the hackfest.  And the meetup this evening","username":"andrew-coleman","ts":"2018-10-02T09:17:07.564Z"}
{"msg":"I've been doing a lot of bookkeeping recently.  I think we all know this, but just in case I’ll provide some reminders:\n- `master` and `release-1.3` branches are now split. Recommendation is to do new work in master and then cherry pick to release-1.3 if it is an important fix for the upcoming 1.3.0.\n- when the code is well aligned (such as release-1.3 and master currently), it is simple to cherry pick by using the Cherry Pick button in gerrit. If you’ve never tried this, you’ll love it! This can be done by CR developer or any maintainer, as needed.\n- for the most critical fixes that current production customers will need, the fix can also be cherry picked to release-1.1 and release-1.2, although many times this will require a manual local cherry pick and conflict resolution. Be very judicious and careful with these, we must not risk breaking existing customers in a 3rd digit patch release.\n- in the Jira FixVersion, indicate the intent by listing the target releases. For example for a fix in master and release-1.3, indicate FixVersion `v1.4.0` , `v1.3.0`.\n- to be very clear of intent, add a link in the Jira comments to each of the release CRs. It should be in sync with the FixVersions.  If they are not in sync, it should raise a flag that there was an oversight that needs to be resolved before closing.\n- If you merge the last CR, remember to Close the jira item.","username":"dave.enyeart","ts":"2018-10-02T14:22:52.947Z"}
{"msg":"I've been doing a lot of bookkeeping recently.  I think we all know this, but just in case I’ll provide some reminders:\n- `master` and `release-1.3` branches are now split. Recommendation is to do new work in master and then cherry pick to release-1.3 if it is an important fix for the upcoming 1.3.0.\n- when the code is well aligned (such as release-1.3 and master currently), it is simple to cherry pick by using the Cherry Pick button in gerrit. If you’ve never tried this, you’ll love it! This can be done by CR developer or any maintainer, as needed.\n- for the most critical fixes that current production customers will need, the fix can also be cherry picked to release-1.1 and release-1.2, although many times this will require a manual local cherry pick and conflict resolution. Be very judicious and careful with these, we must not risk breaking existing customers in a 3rd digit patch release.\n- in the Jira FixVersion, indicate the intent by listing the target releases. For example for a fix in master and release-1.3, indicate FixVersion `v1.4.0` , `v1.3.0`.\n- to be very clear of intent, add a link in the Jira comments to each of the release CRs. It should be in sync with the FixVersions.  If they are not in sync, it should raise a flag in your mind that there was an oversight that needs to be resolved before closing.\n- If you merge the last CR, remember to Close the jira item.","username":"dave.enyeart","ts":"2018-10-02T14:22:52.947Z"}
{"msg":"is there a suggested file extension for chaincode packages created with the `peer chaincode package` command? the only thing i can see is a `.out` extension in an example in the docs, but i'm not sure `.out` counts ;-)","username":"sstone1","ts":"2018-10-03T12:46:35.181Z"}
{"msg":"i was thinking more of something like `.cds` (Chaincode Deployment Spec) or `.cdp` (Chaincode Deployment Package)","username":"sstone1","ts":"2018-10-03T12:47:17.765Z"}
{"msg":"I'm not sure, but i do know it might be a good idea to rewrite all that chaincode packaging stuff....","username":"yacovm","ts":"2018-10-03T12:53:36.547Z"}
{"msg":"- It's not portable - SDK and peer CLI produce different outputs :( \n- No one can unzip this using any tool.... so no one can actually inspect it properly ","username":"yacovm","ts":"2018-10-03T12:54:24.506Z"}
{"msg":"I think it might be a good idea to rethink it completely","username":"cbf","ts":"2018-10-03T13:10:25.265Z"}
{"msg":"@cbf can you expand? Do you mean docker approach?","username":"yacovm","ts":"2018-10-03T13:17:53.079Z"}
{"msg":"yes","username":"cbf","ts":"2018-10-03T13:25:31.406Z"}
{"msg":"our handling of chaincode is insane","username":"cbf","ts":"2018-10-03T13:25:53.618Z"}
{"msg":"well i think for v1.4 it's too late for that","username":"yacovm","ts":"2018-10-03T13:26:10.477Z"}
{"msg":"yeah, I know","username":"cbf","ts":"2018-10-03T13:26:20.105Z"}
{"msg":"so i suggest something that we can add to v1.4 so it will be LTS :) ","username":"yacovm","ts":"2018-10-03T13:26:24.704Z"}
{"msg":"rewrite the packaging to be something easily inspect-able and also portable, via a deterministic archive based package and validate it works the same in golang/JS/java ","username":"yacovm","ts":"2018-10-03T13:27:55.935Z"}
{"msg":"I still say rube goldberg would be proud","username":"cbf","ts":"2018-10-03T13:29:00.318Z"}
{"msg":"FYI, as part of the deferred lifecycle work, the packaging was already somewhat addressed.  See https://gerrit.hyperledger.org/r/c/25443/ .  As an interim step, the new packaging was changed to be a vanilla tar.gz file, which embeds a manifest file, and in the go/node case another tar of the source files, or in the car case, a .car file.  Ultimately, the hope was that we could adopt something similar to the CF buildpack, and flatten the packaging structure, but as a first step, it seemed like a minimal way to make packages trivially user-inspectable.","username":"jyellick","ts":"2018-10-03T13:39:30.098Z"}
{"msg":"@jyellick interesting... is there a CR lined up for the SDK work to create the new format packages?","username":"sstone1","ts":"2018-10-03T13:41:14.379Z"}
{"msg":"The SDKs have not implemented this as of yet.  In fact, I've suggested that they should probably hold off, seeing as the plan calls for lifecycle in v2.0, and there is obviously other interest in improving the packaging.  The lifecycle work is really much more about the lifecycle of instantiating/upgrading, the install/packaging related changes were brought in as a minimal set to bring a bit of sanity by removing several components of our rube goldberg machine.","username":"jyellick","ts":"2018-10-03T13:44:08.155Z"}
{"msg":"Particularly note that the new packaging contains three pieces of information type, path, and the code (contrasted with the old packaging, which contains, name, version, path, type, args, runtime, insantiation policy, signatures, code, and probably some other fields I am forgetting).  I'd have loved to remove type and path as well, but it would have been a much more invasive change.","username":"jyellick","ts":"2018-10-03T13:47:45.387Z"}
{"msg":"how come name and version have been removed? aren't they useful for identifying what's in the package? does that now require looking in the code to figure that out?","username":"sstone1","ts":"2018-10-03T14:01:33.535Z"}
{"msg":"Name and version are passed as parameters to the install function when the package is installed.","username":"jyellick","ts":"2018-10-03T14:02:04.597Z"}
{"msg":"If we were to take a more radical departure, I would suggest that we move away from name/version","username":"jyellick","ts":"2018-10-03T14:03:19.224Z"}
{"msg":"And simply refer to packages by their hash","username":"jyellick","ts":"2018-10-03T14:03:25.165Z"}
{"msg":"@jyellick do you have a reference to the high design of the new lifecycle?","username":"mbwhite","ts":"2018-10-03T15:26:46.524Z"}
{"msg":"I'd start with the July 30 playback: https://wiki.hyperledger.org/projects/fabric/playbacks","username":"dave.enyeart","ts":"2018-10-03T15:47:56.067Z"}
{"msg":"Has joined the channel.","username":"toddinpal","ts":"2018-10-03T19:45:13.796Z","type":"uj"}
{"msg":"@dave.enyeart Has any more thought been given to the concept of 1.4 being LTS, Specifically timescales ? It occurs to me that we would want to look at the LTS lifecycles of dependent components such as node.js and consider whether to take the hit of moving to node.js 10 in 1.4 rather than remaining at 8 as it has a longer LTS period.","username":"davidkel","ts":"2018-10-04T08:10:41.949Z"}
{"msg":"@davidkel  LTS is a goal for v1.4 unless we find a compelling reason for it not to be. No discussion of timescales yet.  I do recommend aggressively moving up dependencies, and that should be done early in the v1.4 cycle.  Would node.js 8 to node.js 10 update impact existing applications?","username":"dave.enyeart","ts":"2018-10-04T10:46:33.843Z"}
{"msg":"@dave.enyeart I have heard that there are some small incompatibilities, but until it does get released as LTS I won't know for sure. Node 10 is due to go LTS this month","username":"davidkel","ts":"2018-10-04T10:47:44.856Z"}
{"msg":"Has joined the channel.","username":"grice32","ts":"2018-10-04T17:41:42.050Z","type":"uj"}
{"msg":"FYI - I've had a brief review of the release notes and nothing has jumped out.  But will continue to review and look to start trialing node 10.  Do we have an JIRAs for handling 'currency' items such as this?","username":"mbwhite","ts":"2018-10-05T13:20:20.493Z"}
{"msg":"@mbwhite there is no jira item for updating dependencies... go ahead and create one for your use.  (note - we are looking at a more exhaustive update of dependencies for v1.4, so we may create an umbrella jira, but go ahead with your own for now).","username":"dave.enyeart","ts":"2018-10-07T18:33:50.122Z"}
{"msg":"willd o thanks @dave.enyeart ","username":"mbwhite","ts":"2018-10-08T08:56:36.146Z"}
{"msg":"will do thanks @dave.enyeart ","username":"mbwhite","ts":"2018-10-08T08:56:36.146Z"}
{"msg":"Fabric v1.3.0 has been updated to use baseimage 0.4.13, which includes the fix for the slow couchdb container start. We intend to do final testing on Tuesday and release on Wednesday.","username":"dave.enyeart","ts":"2018-10-09T06:08:26.418Z"}
{"msg":"@dave.enyeart  is this the error that is observed \n```\nError: error getting endorser client for channel: endorser client failed to connect to peer0.org1.example.com:7051: failed to create new connection: context deadline exceeded\n```","username":"mbwhite","ts":"2018-10-09T08:27:35.965Z"}
{"msg":"@mbwhite yes, that is one of the manifestations, if peer can't start due to couchdb not yet available.","username":"dave.enyeart","ts":"2018-10-09T12:03:56.875Z"}
{"msg":"@here I notice that there are a lot of stale CRs that have merge conflicts and or unresolved comments","username":"cbf","ts":"2018-10-09T13:23:12.529Z"}
{"msg":"If you have stale CRs, please either get it moving or abandon the CR","username":"cbf","ts":"2018-10-09T13:23:59.969Z"}
{"msg":"it really looks bad to someone from the outside if there are tons of unmerged CRs","username":"cbf","ts":"2018-10-09T13:24:24.446Z"}
{"msg":"further, if you see a contribution from someone that is languishing, please review it and help the contribution forward","username":"cbf","ts":"2018-10-09T13:25:29.875Z"}
{"msg":"Has joined the channel.","username":"raccoonrat","ts":"2018-10-10T02:50:55.424Z","type":"uj"}
{"msg":"@here We are ready to release final v1.3.0.  MERGE FREEZE in `release-1.3` branches today.  `master` branches remain open for v1.4 dev.","username":"dave.enyeart","ts":"2018-10-10T08:20:05.760Z"}
{"msg":"Has joined the channel.","username":"14gracel","ts":"2018-10-10T12:12:45.414Z","type":"uj"}
{"msg":"@here  maintainer meeting starting: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-10-10T13:05:13.412Z"}
{"msg":"to summarize from last maintainer meeting… ","username":"dave.enyeart","ts":"2018-10-10T13:06:11.700Z"}
{"msg":"v1.3 retrospective - please add thoughts https://docs.google.com/document/d/1kB-M1sZifxbwIZXO5w79xJDkgFgOeFI4n-rR2AIAU0I/edit#","username":"dave.enyeart","ts":"2018-10-10T13:06:23.747Z"}
{"msg":"1.4 - smaller “long term support\" release - ship early-mid Dec, with an early beta targeting programming model additions\n- operational improvements\n  - operational metrics\n  - grpc monitoring\n  - health checks for all components\n  - improved logging - improve info messages, don’t require debug level to troubleshoot common problems, dynamic level setting, rational module and submodule breakdown)\n- programming model additions\n  - SDK\n  - chaincode\n- sdk and sample improvements, for both existing API and new programming model\n  - samples such as balance transfer have been leading applications in the wrong direction.\n  - samples should showcase good production practices such as utilizing discovery service, handling invalidations, load balancing and retries for orderers/peers becoming unavailable.\n- private data reconciliation (deliver the code-complete but deferred items from v1.3)\n- minimal hygiene work","username":"dave.enyeart","ts":"2018-10-10T13:06:32.171Z"}
{"msg":"1.4 - smaller “long term support\" release - ship early-mid Dec, with an early beta targeting programming model additions\noperational improvements\n  - operational metrics\n  - grpc monitoring\n  - health checks for all components\n  - improved logging - improve info messages, don’t require debug level to troubleshoot common problems, dynamic level setting, rational module and submodule breakdown)\nprogramming model additions\n  - SDK\n  - chaincode\nsdk and sample improvements, for both existing API and new programming model\n  - samples such as balance transfer have been leading applications in the wrong direction.\n  - samples should showcase good production practices such as utilizing discovery service, handling invalidations, load balancing and retries for orderers/peers becoming unavailable.\nprivate data reconciliation (deliver the code-complete but deferred items from v1.3)\nminimal hygiene work","username":"dave.enyeart","ts":"2018-10-10T13:06:32.171Z"}
{"msg":"2.0 - large new items - end of 1Q19, with a more formal beta early on to get feedback on the new features\n- Raft orderer\n- Token\n- Lifecycle 2.0\n- Local collections\n- Idemix revocation support\n- go based CLI\n- larger hygiene items, especially on peer side, e.g. validation refactoring, decouple go chaincode shim from fabric, removal of singletons","username":"dave.enyeart","ts":"2018-10-10T13:06:46.366Z"}
{"msg":"I would like to add FAB-11980 to v2.0 , it's a very low risk and easily containable item in v2.0, just adding a capability to chaincode to send messages via gossip :) ","username":"yacovm","ts":"2018-10-10T13:18:41.092Z"}
{"msg":"@dave.enyeart  could you confirm or deny if anything we (in Hursley) needs to be done for the node-chaincode, node-sdk to acheive the 1.3 release? i.","username":"mbwhite","ts":"2018-10-10T13:19:24.069Z"}
{"msg":"@mbwhite  we typically work with @bretharrison and @rameshthoomu to create the node.js release CRs and ensure proper tagging and npm pushes, so no action needed from your side unless you want to be active in the process. ","username":"dave.enyeart","ts":"2018-10-10T13:37:46.993Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=yqjxdvbcDibwQswwp) @mbwhite I will work with Matthew on the required CR to prepare for the release","username":"bretharrison","ts":"2018-10-10T13:40:19.245Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yqjxdvbcDibwQswwp","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=yqjxdvbcDibwQswwp","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://tech.evojam.com/2016/05/19/gerrit-based-workflow-complete-developers-walkthrough/ is a pretty thorough gerrit tutorial and yes, we can handle feature branches, it isn't recommended, but we can handle a couple I think","username":"cbf","ts":"2018-10-10T13:40:59.093Z"}
{"msg":"@dave.enyeart @mastersingh24 ^","username":"cbf","ts":"2018-10-10T13:41:23.342Z"}
{"msg":"Today we released and tagged for v1.3.0 fabric, fabric-ca, fabric-chaincode-java, fabric-chaincode-node, fabric-sdk-node, fabric-samples.","username":"dave.enyeart","ts":"2018-10-10T22:34:33.376Z"}
{"msg":"MERGE FREEZE in `release-1.3` branch over.  I know you are all excited about fixing some defects for the eventual v1.3.1 already!","username":"dave.enyeart","ts":"2018-10-10T22:35:16.278Z"}
{"msg":"Has joined the channel.","username":"underbell","ts":"2018-10-11T09:00:21.067Z","type":"uj"}
{"msg":"Defects?  We have defects?","username":"mastersingh24","ts":"2018-10-11T10:34:57.641Z"}
{"msg":"must be a confusion with a different blockchain project ","username":"yacovm","ts":"2018-10-11T10:36:51.771Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=TDdwwTLXm2Bs3REXN) @mastersingh24 tried BYFN end to end test and balance transfer no issue as of now ...also tested with couch db ..now couch db connect in less time ..Thanks","username":"knagware9","ts":"2018-10-11T11:45:27.369Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TDdwwTLXm2Bs3REXN","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=TDdwwTLXm2Bs3REXN","remote":true,"fileId":null,"fileName":null}]}
{"msg":"---------------------------------------------------\nFabric v1.3.0 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/topic/announcement_hyperledger/27240996?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,27240996\n---------------------------------------------------","username":"dave.enyeart","ts":"2018-10-11T12:18:16.900Z"}
{"msg":"@dave.enyeart  @cbf  - thanks for the efforts getting the release out and of course thanks to all the maintainers and contributors for all the work during the release cycle!   That's two releases in a row that were more or less on our 3 month schedule!","username":"mastersingh24","ts":"2018-10-13T11:00:36.291Z"}
{"msg":"Who has delete superpowers in JIRA, and how can I get some? I'm trying to maintain a clean house. Gracias.","username":"kostas","ts":"2018-10-16T12:30:04.394Z"}
{"msg":"@dave.enyeart I summon thee ","username":"yacovm","ts":"2018-10-16T12:30:45.746Z"}
{"msg":"He lost them apparently, I summoned him privately about this as well.","username":"kostas","ts":"2018-10-16T12:31:13.240Z"}
{"msg":"I can delete, which JIRAs need to be deleted?","username":"cbf","ts":"2018-10-16T12:39:55.052Z"}
{"msg":"oops, nope, looks like I lost that superpower as well","username":"cbf","ts":"2018-10-16T12:41:03.590Z"}
{"msg":"what you can do is withdraw","username":"cbf","ts":"2018-10-16T12:41:23.084Z"}
{"msg":"I just opened a helpdesk ticket to get to the bottom of this...","username":"dave.enyeart","ts":"2018-10-16T12:41:27.155Z"}
{"msg":"I just opened a helpdesk ticket to get to the bottom of this... perhaps Delete has been disabled project wide","username":"dave.enyeart","ts":"2018-10-16T12:41:27.155Z"}
{"msg":"that closes with no action and you can specify a rationale","username":"cbf","ts":"2018-10-16T12:41:36.816Z"}
{"msg":"It's most likely my OCD in action here, and I understand there are bigger fish to fry, but I do wish to delete. Sometimes we're reckless w/ how we created stories, and editing a story so as to unlink it with my good, semi-polished epic is actually more work than it should be. I should be able to 1-click (well, 2-click) delete.","username":"kostas","ts":"2018-10-16T12:43:10.827Z"}
{"msg":"It's most likely my OCD in action here, and I understand there are bigger fish to fry, but I do wish to delete. Sometimes we're reckless w/ how we create stories, and editing a story so as to unlink it with my good, semi-polished epic is actually more work than it should be. I should be able to 1-click (well, 2-click) delete.","username":"kostas","ts":"2018-10-16T12:43:10.827Z"}
{"msg":"@rjones @tkuhrt seems to me that when/before any administrative actions are taken, like removing some capability as above, that we should be notified and maybe even asked.","username":"cbf","ts":"2018-10-16T12:43:52.663Z"}
{"msg":"I agree","username":"cbf","ts":"2018-10-16T12:44:12.923Z"}
{"msg":"unless and until it becomes a problem, I don't see why we cannot delete JIRAs","username":"cbf","ts":"2018-10-16T12:44:32.957Z"}
{"msg":"I can understand not allowing randos that capability, but maintainers have a certain responsibility ","username":"cbf","ts":"2018-10-16T12:45:07.700Z"}
{"msg":"are we sure that this was not the result of the custom changes we made?  ;)","username":"mastersingh24","ts":"2018-10-16T14:52:00.130Z"}
{"msg":"it looks like it was omitted in the Fabric permissions scheme","username":"mastersingh24","ts":"2018-10-16T14:54:30.162Z"}
{"msg":"Not sure when it changed.","username":"rjones","ts":"2018-10-16T15:51:10.458Z"}
{"msg":"My delete privilege was reinstated today.  I'm ok doing deletes for the project, hopefully there shouldn't be many as it is often better to withdraw with some text describing why it is being withdrawn.","username":"dave.enyeart","ts":"2018-10-16T20:14:51.943Z"}
{"msg":"Can we please give delete privileges to all maintainers? Not sure why this would be limited to a subset. /cc @rjones","username":"kostas","ts":"2018-10-16T20:20:43.426Z"}
{"msg":"@kostas I think it was added to the maintainers group? I don't admin JIRA. @jwagantall ?","username":"rjones","ts":"2018-10-16T22:13:58.140Z"}
{"msg":"@rjones: It is now - gracias!","username":"kostas","ts":"2018-10-16T22:15:52.192Z"}
{"msg":"Has joined the channel.","username":"AndrewNRise","ts":"2018-10-19T08:21:15.021Z","type":"uj"}
{"msg":"@rjones  - would it be possible to add a new project under the Fabric moniker;  we'd like to add `fabric-go` which will be the repository for the common Go library pkgs we use across the various Fabric projects.  We'll start with adding the new common health check pkg and will also attempt to move the bccsp pkg out of the fabric repo.   It would also be nice to have a `fabric-go` project in JIRA as well but not strictly required to start with","username":"mastersingh24","ts":"2018-10-19T11:18:40.923Z"}
{"msg":"@mastersingh24 how about calling it `fabric-common` ?","username":"dave.enyeart","ts":"2018-10-19T12:00:56.479Z"}
{"msg":"well  -- I think we should call it something with `go` because we may break out things in other languages as well ....\nlooking at other projects, they tend to use the language in the repo","username":"mastersingh24","ts":"2018-10-19T12:24:33.065Z"}
{"msg":"`fabric-gommon` ","username":"yacovm","ts":"2018-10-19T12:25:47.948Z"}
{"msg":"LOL","username":"mastersingh24","ts":"2018-10-19T12:26:05.965Z"}
{"msg":"nice","username":"mastersingh24","ts":"2018-10-19T12:26:07.838Z"}
{"msg":"or `fabric-gomon` as in go-monster because that's what it is","username":"yacovm","ts":"2018-10-19T12:26:15.627Z"}
{"msg":"to be consistent with our existing names it would be `fabric-common-go` right?","username":"dave.enyeart","ts":"2018-10-19T12:30:33.476Z"}
{"msg":"`fabric-lib-go` seems better to me ... but frankly I just want a repo with `fabric` and `go` in it","username":"mastersingh24","ts":"2018-10-19T13:11:35.419Z"}
{"msg":"+1 for `fabric-lib-go`","username":"jyellick","ts":"2018-10-19T13:21:40.609Z"}
{"msg":"fabric-go-lib","username":"rameshthoomu","ts":"2018-10-19T13:35:43.157Z"}
{"msg":"@mastersingh24 if you want a new repo please file a help desk ticket: helpdesk@hyperledger.org and be explicit about permissions and merge (NACR, 2+2)","username":"rjones","ts":"2018-10-19T15:48:10.108Z"}
{"msg":"fabric-lib-go seems like a good name, much like fabric-sdk-* if we add a new library it will sort nicely in the UI","username":"rjones","ts":"2018-10-19T15:49:36.919Z"}
{"msg":"thx @rjones ... I forgot what I was supposed to do  ;)","username":"mastersingh24","ts":"2018-10-19T16:24:46.598Z"}
{"msg":"Has joined the channel.","username":"yuki-kon","ts":"2018-10-20T00:19:53.751Z","type":"uj"}
{"msg":"what is going into `fabric-lib-go` @mastersingh24  ? ","username":"yacovm","ts":"2018-10-20T15:51:51.547Z"}
{"msg":"I believe health check rest service that can be used across peer, orderer, fabric-ca.  as well as bccsp so that it can be used across peer and fabric-ca.","username":"dave.enyeart","ts":"2018-10-20T15:53:47.478Z"}
{"msg":"Yes ... the health check will be the first thing in there and time permitting we'll move bccsp there as well during this cycle.  If not, we'll move it there for the v2.0.0 cycle","username":"mastersingh24","ts":"2018-10-20T19:04:03.142Z"}
{"msg":"is the msp package also supposed to be moved?","username":"adc","ts":"2018-10-23T05:38:13.287Z"}
{"msg":"@adc ... no .. we won't move the MSP package ... just bccsp eventually.  Of course we still need to refactor the MSP stuff for 2.0","username":"mastersingh24","ts":"2018-10-23T12:05:12.663Z"}
{"msg":"will be 30 mins late to the maintainer's meeting later this morning","username":"cbf","ts":"2018-10-24T11:02:16.862Z"}
{"msg":"my call was moved, nevermind ","username":"cbf","ts":"2018-10-24T12:42:05.317Z"}
{"msg":"@here maintainer meeting at the top of the hour","username":"dave.enyeart","ts":"2018-10-24T12:57:54.623Z"}
{"msg":"Agenda:","username":"dave.enyeart","ts":"2018-10-24T12:58:00.076Z"}
{"msg":"v1.4 (2018 Q4 Release) Dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11429\nv1.3 (October 10th) Retrospective: https://docs.google.com/document/d/1kB-M1sZifxbwIZXO5w79xJDkgFgOeFI4n-rR2AIAU0I/edit#","username":"dave.enyeart","ts":"2018-10-24T12:58:03.627Z"}
{"msg":"https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-10-24T12:58:42.240Z"}
{"msg":"@simsc can you please make your dashboard and all of the queries used public access? I did this for the roadmap link I use to share all of the tracked releases https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104","username":"cbf","ts":"2018-10-24T13:01:43.628Z"}
{"msg":"Has joined the channel.","username":"gennadyl","ts":"2018-10-24T13:05:32.704Z","type":"uj"}
{"msg":"I forgot to mention on the maintainer call - we are hosting some playback demos for recent features: https://wiki.hyperledger.org/projects/fabric/playbacks","username":"dave.enyeart","ts":"2018-10-24T18:49:18.190Z"}
{"msg":"Thursday is Service Discovery","username":"dave.enyeart","ts":"2018-10-24T18:49:33.749Z"}
{"msg":"Next week we'll do State-based endorsement and Identity Mixer","username":"dave.enyeart","ts":"2018-10-24T18:49:51.932Z"}
{"msg":"I'll also post on fabric-playbacks","username":"dave.enyeart","ts":"2018-10-24T18:50:03.588Z"}
{"msg":"If anybody would like to do design reviews for upcoming features, or significant updates to already reviewed features (for v1.4, 2.0, etc), please add an entry to https://wiki.hyperledger.org/projects/fabric/playbacks","username":"dave.enyeart","ts":"2018-10-24T18:52:01.653Z"}
{"msg":"Has joined the channel.","username":"cagdast","ts":"2018-10-25T07:49:51.195Z","type":"uj"}
{"msg":"^ @dave.enyeart was just going to ask about that.   I've added the 'Contract and Transaction Metadata'  https://jira.hyperledger.org/browse/FAB-12071","username":"mbwhite","ts":"2018-10-26T12:29:35.315Z"}
{"msg":"@mbwhite great, go ahead and pick a date","username":"dave.enyeart","ts":"2018-10-26T12:48:27.172Z"}
{"msg":"Is thursday fixed for these or can it be any date?","username":"mbwhite","ts":"2018-10-26T12:51:20.059Z"}
{"msg":"@mbwhite I see you picked Nov 8th, that works, but it doesn't have to be a Thursday, you could move to an earlier date if desired.","username":"dave.enyeart","ts":"2018-10-26T18:33:36.216Z"}
{"msg":"thanks @dave.enyeart suspect we'll need to move the date actually.","username":"mbwhite","ts":"2018-10-30T15:48:34.602Z"}
{"msg":"We're seeing quite a few build failures at present - sdk and chaincode for zOS.. blocking CRs... is this a known issue?","username":"mbwhite","ts":"2018-10-30T15:49:10.635Z"}
{"msg":"you mean the daily failures on s390? yes those are being worked.  do you need s390 for a playback/beta?","username":"dave.enyeart","ts":"2018-10-30T16:11:52.565Z"}
{"msg":"No; but it's preventing merging of CRs (Job builder is a -1) ","username":"mbwhite","ts":"2018-10-30T16:30:39.180Z"}
{"msg":"I'm trying to merge a cleanup PR into https://github.com/fabric-sdk-node/fabric-sdk-node.github.io/pull/2 since the files are no longer necessary and aren't removed as part of the build. Does anyone have write access? ","username":"14gracel","ts":"2018-10-31T09:51:35.733Z"}
{"msg":"@14gracel we use gerrit for pull requests","username":"yacovm","ts":"2018-10-31T11:10:02.505Z"}
{"msg":"@yacovm As far as I know we cant use gerrit to merge direct doc changes? ","username":"14gracel","ts":"2018-10-31T11:11:23.448Z"}
{"msg":"We can!","username":"yacovm","ts":"2018-10-31T11:24:35.884Z"}
{"msg":"I think....","username":"yacovm","ts":"2018-10-31T11:24:42.654Z"}
{"msg":"Oh it's github.io... ","username":"yacovm","ts":"2018-10-31T11:24:58.181Z"}
{"msg":"Sorry my bad i didnt look at the link","username":"yacovm","ts":"2018-10-31T11:25:10.450Z"}
{"msg":"@14gracel please fix DCO on your copy in your repo and force push","username":"rjones","ts":"2018-10-31T13:32:19.834Z"}
{"msg":"s/copy/fork","username":"rjones","ts":"2018-10-31T13:32:30.515Z"}
{"msg":"Cheers @rjones ","username":"14gracel","ts":"2018-10-31T13:45:21.934Z"}
{"msg":"@rjones I do not have permission to force push, or am I misunderstanding what I need to do? Ive fixed the commit ","username":"14gracel","ts":"2018-10-31T14:42:25.204Z"}
{"msg":"what I'm saying is this. update your repo on your machine and force push to your repo. you should absolutely have that permission in your own space. you will need to have done a `git commit --amend -s` to the top commit to get the signature in the right place","username":"rjones","ts":"2018-10-31T14:43:43.770Z"}
{"msg":"Thanks for clarifying. I was trying to force push directly to the main repo rather than my fork. PR is ready to be merged","username":"14gracel","ts":"2018-10-31T14:58:43.790Z"}
{"msg":"@14gracel uh - that repo is actually outside of hyperledger :( I have no control over it.","username":"rjones","ts":"2018-10-31T19:48:53.704Z"}
{"msg":"@14gracel your commit, I think, needs to go into gerrit? I don't know who forked that repo","username":"rjones","ts":"2018-10-31T19:49:39.857Z"}
{"msg":"@bretharrison can you comment on  https://github.com/fabric-sdk-node/fabric-sdk-node.github.io ...where is that content sourced from?","username":"dave.enyeart","ts":"2018-10-31T20:44:38.949Z"}
{"msg":"@dave.enyeart the content comes from the sdk build (likewise with the shim apis) docs;  the build has access to push stuff there.... but we don't know who the 'human' is that would have access to it as well.","username":"mbwhite","ts":"2018-11-01T09:53:51.502Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/20529/ already with a +2 and +1","username":"aso","ts":"2018-11-01T17:30:38.075Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=Loy2uP7b5fbBddrrb) @cbf : I personally think delete permissions on Jira are a bad idea, but that could be because one of the bugs I opened on one of our projects was deleted. That is definitely not the right way to handle closing a bug. I hope that this group thinks long and hard before deleting bugs that were created by someone else.","username":"tkuhrt","ts":"2018-11-01T18:52:47.978Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Loy2uP7b5fbBddrrb","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=Loy2uP7b5fbBddrrb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"we can close with no action now, so...","username":"cbf","ts":"2018-11-01T20:02:27.606Z"}
{"msg":"pls another +2 for https://gerrit.hyperledger.org/r/#/c/25311/","username":"aso","ts":"2018-11-03T10:15:24.828Z"}
{"msg":"it's already got a +1 and +2","username":"aso","ts":"2018-11-03T10:15:31.322Z"}
{"msg":"Has joined the channel.","username":"DirkKrueger","ts":"2018-11-03T13:59:40.938Z","type":"uj"}
{"msg":"Has joined the channel.","username":"awes0menessInc","ts":"2018-11-06T03:38:29.727Z","type":"uj"}
{"msg":"pls another +2 for https://gerrit.hyperledger.org/r/#/c/20533/","username":"aso","ts":"2018-11-06T09:02:33.883Z"}
{"msg":"@dave.enyeart  I can't do this Thursday for the metadata playback... I'll move it to next week if that's ok","username":"mbwhite","ts":"2018-11-06T15:04:13.461Z"}
{"msg":"@mbwhite go ahead and update the wiki with your new date","username":"dave.enyeart","ts":"2018-11-06T15:06:07.984Z"}
{"msg":"Has joined the channel.","username":"enriquebusti","ts":"2018-11-07T12:01:34.310Z","type":"uj"}
{"msg":"another +2 for https://gerrit.hyperledger.org/r/#/c/20987/ pls...","username":"aso","ts":"2018-11-07T13:03:31.535Z"}
{"msg":"@here Fabric maintainer meeting in 5 minutes: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-11-07T13:56:36.847Z"}
{"msg":"Has joined the channel.","username":"matthewphamilton","ts":"2018-11-07T15:21:17.198Z","type":"uj"}
{"msg":"The tutorial doc https://gerrit.hyperledger.org/r/c/26813/ and fabric-sample tutorial  https://gerrit.hyperledger.org/r/c/27168/ are also ready for +2 -- been tried out by lots of users and really important for 1.4 beta users to try out new SDK functionality. Thanks for a +2 on these please!","username":"odowdaibm","ts":"2018-11-08T19:09:57.935Z"}
{"msg":"Would appreciate +2s for the following very straightforward doc changes please -- thanks: https://gerrit.hyperledger.org/r/c/26306/ and https://gerrit.hyperledger.org/r/c/26051/","username":"odowdaibm","ts":"2018-11-08T19:10:08.023Z"}
{"msg":"Sorry to ask for 4, but folks have been very busy I know and I'm struggling to build incremental advances on these docs and sample without a merge.  Ty again!","username":"odowdaibm","ts":"2018-11-08T19:10:53.274Z"}
{"msg":" @here Heads up, we will pause Jenkins in 45 mins to upgrade it to the latest LTS and upgrade the OpenStack plugin. The current API being used it will deprecate soon and we need to upgrade. Thanks! This should take about 30 mins","username":"jwagantall","ts":"2018-11-09T19:03:39.101Z"}
{"msg":"@here  Jenkins upgrade is happening right now.. thanks!","username":"jwagantall","ts":"2018-11-09T20:03:17.289Z"}
{"msg":"\n@here Jenkins upgrade is now completed.. Thanks!\n\n","username":"jwagantall","ts":"2018-11-09T20:20:05.421Z"}
{"msg":"Has joined the channel.","username":"SamRasha","ts":"2018-11-12T09:44:04.444Z","type":"uj"}
{"msg":"Can someone remind me where we store the Dockerfiles for our third party images?","username":"kostas","ts":"2018-11-13T21:37:37.911Z"}
{"msg":"@kostas https://github.com/hyperledger/fabric-baseimage/tree/master/images","username":"dave.enyeart","ts":"2018-11-13T21:52:48.600Z"}
{"msg":"Congratulations @aso on becoming the latest maintainer! Glad to see merit rewarded. https://gerrit.hyperledger.org/r/#/c/27559/. @rjones could you do your magic with the maintainer permissions?","username":"dave.enyeart","ts":"2018-11-14T23:33:28.855Z"}
{"msg":"Has joined the channel.","username":"sh777","ts":"2018-11-15T02:50:52.731Z","type":"uj"}
{"msg":"@dave.enyeart please send email to helpdesk@hyperledger.org","username":"rjones","ts":"2018-11-15T05:26:20.951Z"}
{"msg":"With those details","username":"rjones","ts":"2018-11-15T05:26:35.120Z"}
{"msg":"Has joined the channel.","username":"BellaAdams","ts":"2018-11-17T00:46:03.844Z","type":"uj"}
{"msg":"Has joined the channel.","username":"huxiangdong","ts":"2018-11-20T00:33:28.463Z","type":"uj"}
{"msg":"Hi, guys, Does anybody know how to debug or trace the source code of fabric, I used dlv to do it, but I met the problem about \"debug_frame\". it describes by the following URL https://manios.org/2018/10/05/metricbeat-debug-frame-section-error.  I use dlv 1.1.0 and go 1.11.2, and I notice that fabric 1.2.1 need go 1.10.x to compile. So, I met a hard problem, any suggestion is appreciative.","username":"marryton007","ts":"2018-11-20T08:19:39.684Z"}
{"msg":"@marryton007 You might want to talk with @john-philipp who has been attempting a similar exercise.  I believe go 1.11, debuggers, and go plugins (which fabric uses) do not interact nicely.  The development go v1.12 seems to have better support.  I think you will find that many go developers stay away from the go debuggers, but best of luck in your endeavors.","username":"jyellick","ts":"2018-11-20T15:08:40.966Z"}
{"msg":"Has joined the channel.","username":"john-philipp","ts":"2018-11-20T15:08:41.350Z","type":"uj"}
{"msg":"@marryton007: in case this is still an issue. :)\n\nYes, apparently importing the wrong packages into your code breaks (as in completely disables) the debugger...\nThis was/is an issue from versions `>1.9` and is only resolved in `v1.12` which is still under development. :]\nSo we install from source and stay on master: (follow https://golang.org/doc/install/source) (you'll need Go `v1.4+` to install Go from source)\n\nOnce you're done check your go version, and make sure it is marked as `devel`\nNow `go get github.com/derekparker/delve/cmd/dlv`\n\nAnd in vscode add the following configuration:\n \n``` \n{\n            \"name\": \"peer node start\",\n            \"type\": \"go\",\n            \"request\": \"launch\",\n            \"mode\": \"debug\",\n            // \"program\": \"go/src/github.com/hyperledger/fabric/orderer\",\n            \"program\": \"go/src/github.com/hyperledger/fabric/peer\",\n            \"env\": {\"FABRIC_CFG_PATH\": \"there be keys here\"},\n            \"args\": [\"node\", \"start\"]\n        },\n```\nSet a breakpoint in `peer/main.go` (as a simple example) and \"Start debugging\". _Should_ work.\nIn terms of config, you can cheat and copy it from the docker containers (usually /etc/hyperledger/...).\nHowever, I'd just build some scripts to generate consistent config.\n\nNotably, this very much does *not* let you debug the docker containers, that requires remote debugging which I am working on now. Anyway, let me know if you run into any issues.","username":"john-philipp","ts":"2018-11-20T16:17:40.209Z"}
{"msg":"Has joined the channel.","username":"Rajatsharma","ts":"2018-11-21T06:52:34.437Z","type":"uj"}
{"msg":"Hello, I'm trying to run the sample System Chaincode following the steps on https://hyperledger-fabric.readthedocs.io/en/release-1.3/systemchaincode.html  - I've used the example chaincode (https://github.com/hyperledger/fabric/tree/release-1.3/examples/plugins/scc). I copied this to the peer after building it on Go. and made the necassary changes at /etc/hyperledger/fabric/core.yaml. But there are no logs or no response when I restart the peer. Can anyone please help me with the process.","username":"Rajatsharma","ts":"2018-11-21T06:52:48.838Z"}
{"msg":"@john-philipp  I can debug  peer on a Linux VM now. Yes, it need to build the master branch of GO, and rebuild delve with the latest version of GO. I also tried installing delve into the docker container and enable remote debug, but it can't work now. ","username":"marryton007","ts":"2018-11-21T06:53:55.404Z"}
{"msg":"Below is my Dockefile:\n\nFROM hyperledger/fabric-peer:1.2.1\n\nENV GOPATH /opt/gopath\nENV GOROOT /opt/go\nENV PATH $GOROOT/bin:$GOPATH/bin:$PATH\nENV FABRIC_CFG_PATH /etc/hyperledger/fabric\n\nWORKDIR $GOPATH\n\nCOPY go  $GOROOT/bin/go\nCOPY dlv  $GOPATH/bin/dlv\nCOPY peer  /usr/local/bin\n\nCMD [\"peer\",\"node\",\"start\"]\n","username":"marryton007","ts":"2018-11-21T06:54:49.055Z"}
{"msg":"The error message:\n\nAPI server listening at: [::]:2345\ncould not launch process: could not find external debug info file\n","username":"marryton007","ts":"2018-11-21T06:55:37.109Z"}
{"msg":"docker-compose file of peer service:","username":"marryton007","ts":"2018-11-21T06:55:52.639Z"}
{"msg":"command: dlv --headless --listen=:2345 --api-version=2 exec /usr/local/bin/peer -- node start","username":"marryton007","ts":"2018-11-21T06:56:32.231Z"}
{"msg":"","username":"marryton007","ts":"2018-11-21T07:01:22.064Z","attachments":[{"type":"file","title":"peer-debug.zip","title_link":"/file-upload/EqWebDQzsvvKjqcdo/peer-debug.zip","url":"/file-upload/EqWebDQzsvvKjqcdo/peer-debug.zip","remote":false,"fileId":"EqWebDQzsvvKjqcdo","fileName":"peer-debug.zip"}]}
{"msg":"@john-philipp  It works fine with docker now. I can use goland or vscode to connect and debug now!  You should copy the latest dlv and peer into docker image, just like the Dockefile desribes.","username":"marryton007","ts":"2018-11-21T08:41:40.457Z"}
{"msg":"Indeed. :)","username":"john-philipp","ts":"2018-11-21T12:06:22.993Z"}
{"msg":"@marryton007 Indeed. :)","username":"john-philipp","ts":"2018-11-21T12:06:22.993Z"}
{"msg":"@here Due to multiple people out of office for the US holiday, maintainer meeting is moved to November 28th, and will resume every other week cadence from there.","username":"dave.enyeart","ts":"2018-11-21T13:35:47.249Z"}
{"msg":"Have a good holiday :-)","username":"mbwhite","ts":"2018-11-21T13:40:26.369Z"}
{"msg":"I will remind everybody to keep v1.4 close down in mind. We are targeting a release candidate in early December and GA in mid-December.  Large functional changes should be avoided at this time. Lower risk changes like metrics and health checks should continue. Please keep up on CR reviews and reviewing Bug backlogs ","username":"dave.enyeart","ts":"2018-11-21T13:40:28.371Z"}
{"msg":"I will remind everybody to keep v1.4 close down in mind. We are targeting a release candidate in early December and GA in mid-December.  Large functional changes should be avoided at this time. Lower risk changes like metrics and health checks should continue. Please keep up on CR reviews and reviewing Bug backlogs. But first and foremost, enjoy your holiday!","username":"dave.enyeart","ts":"2018-11-21T13:40:28.371Z"}
{"msg":"Thanks @mbwhite , and thanks for holding the fort down the next few days :)","username":"dave.enyeart","ts":"2018-11-21T13:41:30.146Z"}
{"msg":"Hi there ! When will v1.4 release ? Thanks.","username":"QwertyJack","ts":"2018-11-25T08:42:27.583Z"}
{"msg":"@QwertyJack  - should be before XMas","username":"mastersingh24","ts":"2018-11-25T10:23:28.006Z"}
{"msg":"Good morning/evening, after-noon...","username":"JonathanLevi","ts":"2018-11-26T18:53:44.668Z"}
{"msg":"Hope everybody had good holidays, etc.","username":"JonathanLevi","ts":"2018-11-26T18:53:57.223Z"}
{"msg":"The master branch *may* have been broken (unit tests), but finally began to work for me on all platforms after the latest merge.","username":"JonathanLevi","ts":"2018-11-26T18:54:36.024Z"}
{"msg":"what is broken?","username":"yacovm","ts":"2018-11-26T18:54:57.657Z"}
{"msg":"FWIW, just fetch the latest. Not sure why the CI didn't get it.","username":"JonathanLevi","ts":"2018-11-26T18:55:04.435Z"}
{"msg":"what's the error?","username":"yacovm","ts":"2018-11-26T18:55:27.451Z"}
{"msg":"I posted it here: https://gerrit.hyperledger.org/r/#/c/27381/","username":"JonathanLevi","ts":"2018-11-26T18:57:47.804Z"}
{"msg":"It was broken, I suspect. Tried on 3 systems and received the exact same error","username":"JonathanLevi","ts":"2018-11-26T18:58:19.881Z"}
{"msg":"Works now","username":"JonathanLevi","ts":"2018-11-26T18:58:29.951Z"}
{"msg":"@adc ","username":"yacovm","ts":"2018-11-26T19:00:08.756Z"}
{"msg":"@adc  ^ ","username":"yacovm","ts":"2018-11-26T19:00:08.756Z"}
{"msg":"ouch... at least after merging that, bccsp tests are passing","username":"aso","ts":"2018-11-26T20:07:22.493Z"}
{"msg":"https://jenkins.hyperledger.org/job/fabric-merge-x86_64/5017/console\n```19:27:16 ok  \tgithub.com/hyperledger/fabric/bccsp/idemix\t8.629s\tcoverage: 89.7% of statements\n19:28:15 ok  \tgithub.com/hyperledger/fabric/bccsp/idemix/bridge\t67.315s\tcoverage: 96.9% of statements\n19:28:15 ok  \tgithub.com/hyperledger/fabric/bccsp/idemix/handlers\t0.268s\tcoverage: 97.4% of statements\n```","username":"aso","ts":"2018-11-26T20:07:35.394Z"}
{"msg":"I re-ran unit tests on https://gerrit.hyperledger.org/r/#/c/27381/ - success","username":"aso","ts":"2018-11-26T21:21:51.270Z"}
{"msg":"@here As you know we are entering shutdown for release v1.4. Please join maintainer call tomorrow 9am US Eastern so that we can review where we are and make any final decisions.\nWe’ve been doing a good job of keeping up with function and integration test as we go, which has enabled us to work fairly late in the cycle, but we need to close down. Here’s the week-by-week plan:\n- Nov 26th (week of) - merge final dev CRs; focus on bugs and system test\n- Dec 3rd (week of) - stabilize; continued focus on bugs; complete system test priorities; finish upgrade doc and test; write release notes and any other remaining doc.\n- Dec 10th (target Monday) - release candidate; complete any remaining system tests against the release candidate this week.\n- Dec 17th (target Monday) - final v1.4 release\nWe will need all hands on deck to ensure that we hit these dates. That includes help reviewing bug and CR backlogs in your component areas this week. See the v1.4 and ‘Needs Triage’ defect widgets on the right side of the release dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11429\nI plan to resume fabric-scrum dialogs starting from Thursday until we have shipped the release.","username":"dave.enyeart","ts":"2018-11-27T20:40:35.021Z"}
{"msg":"@here As you know we are entering shutdown for release v1.4. Please join maintainer call tomorrow 9am US Eastern so that we can review where we are and make any final decisions.\nWe’ve been doing a good job of keeping up with function and integration test as we go, which has enabled us to work fairly late in the cycle, but we need to close down. Here’s the week-by-week plan:\n- Nov 26th (week of) - merge final dev CRs; focus on bugs and system test\n- Dec 3rd (week of) - stabilize; continued focus on bugs; complete system test priorities; finish upgrade doc and test; write release notes and any other remaining doc.\n- Dec 10th (target Monday) - release candidate (RC1); complete any remaining system tests against the release candidate this week.\n- Dec 17th (target Monday) - final v1.4 release\nWe will need all hands on deck to ensure that we hit these dates. That includes help reviewing bug and CR backlogs in your component areas this week. See the v1.4 and ‘Needs Triage’ defect widgets on the right side of the release dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11429\nI plan to resume fabric-scrum dialogs starting from Thursday until we have shipped the release.","username":"dave.enyeart","ts":"2018-11-27T20:40:35.021Z"}
{"msg":"Has joined the channel.","username":"skarim","ts":"2018-11-27T21:05:07.503Z","type":"uj"}
{"msg":"As we've done before, when reviewing bugs make your best judgement of FixVersion v1.4.0 or v2.0.0 or Future. I've scanned the list and it seems most can be deferred or changed to enhancements (Stories), but we'll need the experts in each area to make those calls and then we can review any that are in question.","username":"dave.enyeart","ts":"2018-11-27T21:06:31.909Z"}
{"msg":"The Fabric live download script is broken, I've pushed a fix: https://gerrit.hyperledger.org/r/#/c/27778/","username":"dave.enyeart","ts":"2018-11-28T12:44:10.897Z"}
{"msg":"@cbf What are your thoughts on an automated test for bootstrap.sh so that it does not get broken again?","username":"dave.enyeart","ts":"2018-11-28T12:52:59.094Z"}
{"msg":"@dave.enyeart  on the Script itself.. I've seen feedback from other projects, that the use of link shorteners isn't preferred - as people can't see exactly what they might be downloading.    One for consideration..","username":"mbwhite","ts":"2018-11-28T13:55:26.202Z"}
{"msg":"Yes, that's been my concern as well, but I believe @cbf wanted the download metrics","username":"dave.enyeart","ts":"2018-11-28T13:56:05.742Z"}
{"msg":"..which is one of great things about bit.ly ","username":"mbwhite","ts":"2018-11-28T13:56:32.995Z"}
{"msg":"what's the dial in info for the maintainers call?","username":"mbwhite","ts":"2018-11-28T13:57:15.770Z"}
{"msg":"@here maintainer meeting starting: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-11-28T13:58:58.117Z"}
{"msg":"@dave.enyeart - for archive/pruning mentioned in the meeting, is there an epic or existing design doc? Also, what is Artem's RC username?","username":"sheehan","ts":"2018-11-28T14:43:32.234Z"}
{"msg":"Artem is @C0rWin , Jira is https://jira.hyperledger.org/browse/FAB-106. I believe Artem started a google doc after the Fabric maintainers meeting in February","username":"dave.enyeart","ts":"2018-11-28T15:08:15.069Z"}
{"msg":"@sheehan a few months ago I have shared preliminary draft with @binhn ","username":"C0rWin","ts":"2018-11-28T16:43:38.526Z"}
{"msg":"The fix for the download script: https://gerrit.hyperledger.org/r/#/c/27782/","username":"dave.enyeart","ts":"2018-11-28T17:31:42.733Z"}
{"msg":"There is yet another issue with the download script... we'll have to revert to how it was before the issues: https://gerrit.hyperledger.org/r/#/c/27791/","username":"dave.enyeart","ts":"2018-11-28T21:20:15.235Z"}
{"msg":"merged","username":"dave.enyeart","ts":"2018-11-28T21:49:12.579Z"}
{"msg":"Has joined the channel.","username":"haggis","ts":"2018-11-29T08:08:15.061Z","type":"uj"}
{"msg":"Wait, is Artem @C0rWin  ?!?","username":"JonathanLevi","ts":"2018-11-29T14:16:19.087Z"}
{"msg":"So all these years of me praising Artem in @C0rWin 's window/chat.... dude, you should have said something ;-)","username":"JonathanLevi","ts":"2018-11-29T14:17:17.122Z"}
{"msg":"----\nCan somebody please help us with a quick fix here: https://gerrit.hyperledger.org/r/#/c/27777/","username":"JonathanLevi","ts":"2018-11-29T14:18:14.607Z"}
{"msg":"Both Angelo and I ran it locally to double-check. Thanks.","username":"JonathanLevi","ts":"2018-11-29T14:18:37.705Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=KdKeoQvLjc24zyto8) @JonathanLevi :joy:","username":"C0rWin","ts":"2018-11-29T14:22:47.182Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=KdKeoQvLjc24zyto8","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=KdKeoQvLjc24zyto8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=66xQMmT5XtLwfhBRA) @JonathanLevi This explains me now, why you referred to me in third person while we were chatting, all these years  :)","username":"C0rWin","ts":"2018-11-29T14:24:10.530Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=66xQMmT5XtLwfhBRA","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=66xQMmT5XtLwfhBRA","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@here Fabric playback on 'interop test' starting in 5 minutes. See announcement and call info in #fabric-scrum .","username":"dave.enyeart","ts":"2018-11-29T14:56:53.808Z"}
{"msg":"We can use all maintainers help in driving our test strategy.","username":"dave.enyeart","ts":"2018-11-29T14:57:16.798Z"}
{"msg":"And in general, we could use help from all maintainers to facilitate fabric-scrum discussion. We WILL do release candidate in one week... so don't delay brining anything up...","username":"dave.enyeart","ts":"2018-11-29T14:57:25.602Z"}
{"msg":"And in general, we could use help from all maintainers to facilitate fabric-scrum discussion. We WILL do release candidate in one week... so don't delay bringing anything up...","username":"dave.enyeart","ts":"2018-11-29T14:57:25.602Z"}
{"msg":"For the love of wet water...","username":"JonathanLevi","ts":"2018-11-29T16:46:23.539Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/27777/","username":"JonathanLevi","ts":"2018-11-29T16:46:28.181Z"}
{"msg":";-)","username":"JonathanLevi","ts":"2018-11-29T16:46:38.536Z"}
{"msg":"Looks like master currently fails to build with a linter error:\n\n```# github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr [github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.test]\ncore/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/txmgr_test.go:1272:6: no new variables on left side of :=\nmake: *** [Makefile:205: linter] Error 2\n```\n\nhttps://gerrit.hyperledger.org/r/c/27835/ should resolve it, but any CRs currently going through CI will likely need to be rebased","username":"jyellick","ts":"2018-11-30T04:24:37.792Z"}
{"msg":"Jason, pls feel free to +2 it. I will merge.","username":"JonathanLevi","ts":"2018-11-30T05:34:37.730Z"}
{"msg":"I did it just now - thanks","username":"manish-sethi","ts":"2018-11-30T05:35:20.900Z"}
{"msg":"Great.","username":"JonathanLevi","ts":"2018-11-30T05:35:32.177Z"}
{"msg":"BTW: any idea how it happened ?","username":"JonathanLevi","ts":"2018-11-30T05:42:24.825Z"}
{"msg":"How was this merged without the \":\"","username":"JonathanLevi","ts":"2018-11-30T05:42:52.800Z"}
{"msg":"Some change must have been merged between this cr passing the tests and merging.","username":"manish-sethi","ts":"2018-11-30T05:43:20.500Z"}
{"msg":"Yeah, so it seems... and the CI let it happen, even though it is a clear \"no go\".","username":"JonathanLevi","ts":"2018-11-30T05:44:53.157Z"}
{"msg":"Just to confirm, this was not a case of two different Cars passing soerately and then the merge \"kept\" the extra \":\", right?","username":"JonathanLevi","ts":"2018-11-30T05:45:39.258Z"}
{"msg":"[ Context: There are a few ongoing threads regarding the CI/CDs these days, so if there is more stuff we should bring up, it may be a good time to report. Thanks and good night ]","username":"JonathanLevi","ts":"2018-11-30T05:48:18.516Z"}
{"msg":"came across an interesting blog using Fabric https://www.itransition.com/blog/hyperledger-fabric-blockchain-payments-problems-and-solutions","username":"binhn","ts":"2018-12-01T16:07:32.257Z"}
{"msg":"Other than the documentation is there any other source a beginner can go through, to learn all the basic concepts of Fabric.","username":"Rajatsharma","ts":"2018-12-01T20:00:36.747Z"}
{"msg":"While #fabric-questions may be a better channel for such a question, let me answer quickly. In addition to documentation, there are also code samples in the fabric-samples folder. Other than this, some of us vendors provide courses and classes. Take a look at the Linux Foundation's \"Fabric Fundamentals\"... or some other classes by other training partners. Hope this helps... but if you have a follow up question, pls let's switch to the other rocketchat channel.","username":"JonathanLevi","ts":"2018-12-02T05:54:34.369Z"}
{"msg":"----","username":"JonathanLevi","ts":"2018-12-04T11:00:30.082Z"}
{"msg":"Fellow maintainers, a quick suggestion. Even more so in the coming days, due to some issues with the official build on the CIs, let's be a bit extra prudent/patient.","username":"JonathanLevi","ts":"2018-12-04T11:01:29.818Z"}
{"msg":"what issues?","username":"yacovm","ts":"2018-12-04T11:02:26.286Z"}
{"msg":"While Gerrit does not allow us (most of the time) to merge CRs without two +2... we can also wait a bit for a build to complete before the first +2.","username":"JonathanLevi","ts":"2018-12-04T11:02:43.558Z"}
{"msg":"what's the concern? ","username":"yacovm","ts":"2018-12-04T11:03:36.153Z"}
{"msg":"It's good practice to check first that a CR compiles before approving it.","username":"JonathanLevi","ts":"2018-12-04T11:06:19.313Z"}
{"msg":"I know that we don't always do it, but these coming days we should try to be more careful.","username":"JonathanLevi","ts":"2018-12-04T11:07:13.973Z"}
{"msg":"If it is really hard to resist then don't allow this suggestion to stop you ;-)","username":"JonathanLevi","ts":"2018-12-04T11:08:00.360Z"}
{"msg":"Sure we can do that. My larger concern is that stale CRs don't get merged. If you see an older CR I'd recommend `Rebase` and `Run VerifyBuild`.  Note that tomorrow there is a playback scheduled for CI improvements. Ramesh will propose going back to the auto-rebuild after Rebase to address this concern, among other things.","username":"dave.enyeart","ts":"2018-12-04T15:35:15.835Z"}
{"msg":"See playback schedule here: https://wiki.hyperledger.org/projects/fabric/playbacks","username":"dave.enyeart","ts":"2018-12-04T15:35:24.913Z"}
{"msg":"I will also post to mailing list today","username":"dave.enyeart","ts":"2018-12-04T15:35:38.874Z"}
{"msg":"Although for CI it's probably the maintainers that are most interested... please try to attend.  Wednesday 10am US Eastern.","username":"dave.enyeart","ts":"2018-12-04T15:36:16.550Z"}
{"msg":"Is master broken ?","username":"JonathanLevi","ts":"2018-12-04T17:57:25.571Z"}
{"msg":"Irrespective of the HSM and the new token...","username":"JonathanLevi","ts":"2018-12-04T17:58:18.544Z"}
{"msg":"Can others try a fresh build and unit tests pls?","username":"JonathanLevi","ts":"2018-12-04T17:58:50.870Z"}
{"msg":"(thanks)","username":"JonathanLevi","ts":"2018-12-04T17:59:14.747Z"}
{"msg":"@JonathanLevi: Which package is failing for your specifically?","username":"kostas","ts":"2018-12-04T18:08:31.880Z"}
{"msg":"There are 7 more commits in Fabric master and now HCR-HF-JOB1/build_logs/MSB-HF-JOB1-49.log\nbuild.04-Dec-2018 18:28:35 FAIL github.com/hyperledger/fabric/core/chaincode 67.245s\n\n","username":"JonathanLevi","ts":"2018-12-04T18:12:39.392Z"}
{"msg":"Pls ignore the first line. Our CI is very talkative ;-)","username":"JonathanLevi","ts":"2018-12-04T18:13:00.639Z"}
{"msg":"does it fail consistently? ","username":"yacovm","ts":"2018-12-04T18:13:13.368Z"}
{"msg":"Twice. We are running on two more platforms","username":"JonathanLevi","ts":"2018-12-04T18:13:38.640Z"}
{"msg":"This is why I am asking others to try too, pls","username":"JonathanLevi","ts":"2018-12-04T18:13:47.500Z"}
{"msg":"Making sure that j havenlr lost my mind. ","username":"JonathanLevi","ts":"2018-12-04T18:14:09.198Z"}
{"msg":"Checking, may be a better verb. Checking whether I have lost my mind ;-)","username":"JonathanLevi","ts":"2018-12-04T18:14:44.716Z"}
{"msg":"@JonathanLevi: All unit tests pass successfully on the current tip (`6c3895c4e`) on my localhost.","username":"kostas","ts":"2018-12-04T18:36:31.595Z"}
{"msg":"@JonathanLevi: All unit tests pass successfully on the current tip (6c3895c4e) on my localhost.","username":"kostas","ts":"2018-12-04T18:36:31.595Z"}
{"msg":"Thank you @kostas . Running a super clean build. ","username":"JonathanLevi","ts":"2018-12-04T18:37:40.222Z"}
{"msg":"Using Vagrant?","username":"JonathanLevi","ts":"2018-12-04T19:42:10.621Z"}
{"msg":"So, FWIW, having spent almost a day on this:","username":"JonathanLevi","ts":"2018-12-04T19:42:39.209Z"}
{"msg":"Everything passed completely at revision 6c3895c4eec36be9813668fdd86e85b483b4802c for me","username":"JonathanLevi","ts":"2018-12-04T19:42:55.547Z"}
{"msg":"Inside vagrant... ONLY if I run this:","username":"JonathanLevi","ts":"2018-12-04T19:43:17.880Z"}
{"msg":"*sudo mkdir -p /var/lib/softhsm/tokens*","username":"JonathanLevi","ts":"2018-12-04T19:43:40.200Z"}
{"msg":"----","username":"JonathanLevi","ts":"2018-12-04T19:43:50.140Z"}
{"msg":"Maybe it is a \"human error\" and/or maybe I am tired... but I am sharing, just in case any/some of you experience anything similar.","username":"JonathanLevi","ts":"2018-12-04T19:44:29.801Z"}
{"msg":"Without the tokens directory, some of these builds really go to town.","username":"JonathanLevi","ts":"2018-12-04T19:45:25.843Z"}
{"msg":"----","username":"JonathanLevi","ts":"2018-12-04T19:46:31.128Z"}
{"msg":"Taking a break, but maybe it will help any lost soul out there/here","username":"JonathanLevi","ts":"2018-12-04T19:46:50.987Z"}
{"msg":"So, I think we need to revert the PKCS11 changes made in FABCI-227 and FAB-12670. I don't view those as successful. Not only is it making a mess of my local builds, it's forcing a rebase of all pending CRs to accommodate the changes made in the build environment. ","username":"sykesm","ts":"2018-12-04T22:35:20.944Z"}
{"msg":"rationale in https://jira.hyperledger.org/browse/FAB-13164","username":"sykesm","ts":"2018-12-04T22:36:10.026Z"}
{"msg":"Has joined the channel.","username":"arjitkhullar","ts":"2018-12-05T00:03:54.930Z","type":"uj"}
{"msg":"I'm good with reverting, but the revert CR FAB-13164 https://gerrit.hyperledger.org/r/#/c/27934/ also has unit test failures. And then the question after reverting is how to resolve the original issue that FAB-12670 tried to address.","username":"dave.enyeart","ts":"2018-12-05T02:54:49.505Z"}
{"msg":"In general unit test is really flakely these days... let's take advantage of the quiet period before v1.4 ship and resolve some of the recent flakes (if you dont have any defects to work...)","username":"dave.enyeart","ts":"2018-12-05T04:42:29.349Z"}
{"msg":"Even though I am one of the guys who pushed to merge the latest changes the moment the CI build passed, I tend to agree.","username":"JonathanLevi","ts":"2018-12-05T06:00:58.424Z"}
{"msg":"I, and others, have spent a full day on trying to figure out wwhats causing the softhsm side effects, that required `token` directory was surprising and it feels like a patch that will merrit more patches.","username":"JonathanLevi","ts":"2018-12-05T06:02:26.055Z"}
{"msg":"@dave.enyeart If it is easier, I can also \"revert\" while fixing the UT, with a follow up CR or in the same CR. Let's discuss (with the developers and the CI team, the systems guys, etc.) and see what's the best course of action, and I can throw more cycles on it.","username":"JonathanLevi","ts":"2018-12-05T06:04:56.486Z"}
{"msg":"These are definitely good days for cleaning and stabilizing. ","username":"JonathanLevi","ts":"2018-12-05T06:05:41.635Z"}
{"msg":"I want to find out, this morning, why was the softhsm introduced right now, and whether it is really needed.","username":"JonathanLevi","ts":"2018-12-05T06:07:05.407Z"}
{"msg":"I want to find out, this morning, why was the softhsm introduced right now, and whether it is really needed in this shape and form.","username":"JonathanLevi","ts":"2018-12-05T06:07:56.503Z"}
{"msg":"But in a line, I agree with @sykesm (Matthew). This is just the first 24 hours since our merge.","username":"JonathanLevi","ts":"2018-12-05T06:09:21.594Z"}
{"msg":"Could I ask all maintainers to take a look at #fabric and #fabric-questions occasionally.  It seems only Gari, Yacov, and myself are in there. I usually scan it once a day, it only takes a few minutes, and it really helps to understand how people are using Fabric and where the pain points are.  I try to point people to docs or samples rather than get into lengthy discussions. If there is nothing to point to in one of your areas of responsibility, please help to improve the doc in that area.","username":"dave.enyeart","ts":"2018-12-05T13:22:00.287Z"}
{"msg":"@dave.enyeart  fyi could add me to the meeting invite for the maintainers calls please?  ","username":"mbwhite","ts":"2018-12-05T13:39:26.942Z"}
{"msg":"Amigo maintainers... apologies, my OCD kicked in and it needs addressing.","username":"JonathanLevi","ts":"2018-12-05T13:45:04.843Z"}
{"msg":"Things are off with the master branch","username":"JonathanLevi","ts":"2018-12-05T13:45:22.082Z"}
{"msg":"In addition to the softhsm ","username":"JonathanLevi","ts":"2018-12-05T13:45:44.890Z"}
{"msg":"Can others take another look","username":"JonathanLevi","ts":"2018-12-05T13:46:22.302Z"}
{"msg":"Commit 8d14cfcdf8303dfc6a44164ead8f88f4ce08cadf broke the test - FAIL\tgithub.com/hyperledger/fabric/orderer/consensus/etcdraft\t60.935s","username":"JonathanLevi","ts":"2018-12-05T13:46:29.190Z"}
{"msg":"I am now automating a bit more...","username":"JonathanLevi","ts":"2018-12-05T13:46:58.088Z"}
{"msg":"do you have specific error?","username":"C0rWin","ts":"2018-12-05T13:47:01.788Z"}
{"msg":"Let me run with a log","username":"JonathanLevi","ts":"2018-12-05T13:49:40.048Z"}
{"msg":"Go reports memory corruption issues there ","username":"JonathanLevi","ts":"2018-12-05T13:49:55.328Z"}
{"msg":"Mind trying ?","username":"JonathanLevi","ts":"2018-12-05T13:50:08.949Z"}
{"msg":"memory corruption....? :worried:  ","username":"yacovm","ts":"2018-12-05T13:50:24.953Z"}
{"msg":"is that in CI @JonathanLevi or a local test run?","username":"yacovm","ts":"2018-12-05T13:51:30.860Z"}
{"msg":"just run on my local machine etcdraft tests and got \n\n```SUCCESS! -- 66 Passed | 0 Failed | 0 Pending | 0 Skipped```","username":"C0rWin","ts":"2018-12-05T13:54:40.209Z"}
{"msg":"@JonathanLevi ^^^","username":"C0rWin","ts":"2018-12-05T13:54:45.205Z"}
{"msg":"I've seen intermittent failures in etcdraft unit test as well. I just merged https://gerrit.hyperledger.org/r/#/c/27943/ , hopefully that will help.","username":"dave.enyeart","ts":"2018-12-05T14:15:41.111Z"}
{"msg":"Here's a recent unit test failure I've seen:","username":"dave.enyeart","ts":"2018-12-05T14:16:26.773Z"}
{"msg":"https://jenkins.hyperledger.org/job/fabric-verify-unit-tests-x86_64/6818/console","username":"dave.enyeart","ts":"2018-12-05T14:16:31.419Z"}
{"msg":"@kostas ","username":"dave.enyeart","ts":"2018-12-05T14:16:46.237Z"}
{"msg":"Can I attach a file?","username":"JonathanLevi","ts":"2018-12-05T14:19:39.984Z"}
{"msg":"Mailed you. Re-running the latest too","username":"JonathanLevi","ts":"2018-12-05T14:24:15.871Z"}
{"msg":"Can rocket chat not support attachments? Or am I just getting old?","username":"JonathanLevi","ts":"2018-12-05T14:24:54.155Z"}
{"msg":"Please answer only the first part !","username":"JonathanLevi","ts":"2018-12-05T14:25:11.169Z"}
{"msg":":grimacing:","username":"JonathanLevi","ts":"2018-12-05T14:25:21.808Z"}
{"msg":"----","username":"JonathanLevi","ts":"2018-12-05T15:00:02.147Z"}
{"msg":"Lastest build works.","username":"JonathanLevi","ts":"2018-12-05T15:00:02.265Z"}
{"msg":"Thank you Dave and Kostas","username":"JonathanLevi","ts":"2018-12-05T15:00:12.300Z"}
{"msg":"@here Fabric CI meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2018-12-05T15:00:49.797Z"}
{"msg":"Everybody - please help to keep Jira clean (developer and component lead and merger).  I'm spending too much time chasing down Jiras with incorrect information, for example bugs that are merged but not marked Done. Having correct status, correct FixVersion, and a link to the CR helps more than you can imagine.\n\nAlso as we merge bug fixes, for critical ones that could impact existing customers, consider a backport to v1.3 or v1.2.  If the code (or doc) in a certain area has not changed much since v1.3, it could be as simple as hitting the Cherry Pick button in Gerrit and specifying release-1.3.  The FixVersion should then be updated to indicate 1.4.0,1.3.1 (the next 3rd digit release will be 1.3.1... you can figure it out by looking at tags... if latest tag is v1.3.0 that means the next fix pack is v1.3.1).\n\nAs the releases pile up, having this discipline will pay dividends many times over.","username":"dave.enyeart","ts":"2018-12-06T11:27:44.927Z"}
{"msg":"Everybody - please help to keep Jira clean (developer and component lead and merger).  I'm spending too much time chasing down Jiras with incorrect information, for example bugs that are merged but not marked Done. Having correct status, correct FixVersion, and a link to the CR helps more than you can imagine.\n\nAlso as we merge bug fixes, for critical ones that could impact existing users, consider a backport to v1.3 or v1.2.  If the code (or doc) in a certain area has not changed much since v1.3, it could be as simple as hitting the Cherry Pick button in Gerrit and specifying release-1.3.  The FixVersion should then be updated to indicate 1.4.0,1.3.1 (the next 3rd digit release will be 1.3.1... you can figure it out by looking at tags... if latest tag is v1.3.0 that means the next fix pack is v1.3.1).\n\nAs the releases pile up, having this discipline will pay dividends many times over.","username":"dave.enyeart","ts":"2018-12-06T11:27:44.927Z"}
{"msg":"----","username":"JonathanLevi","ts":"2018-12-07T14:50:16.534Z"}
{"msg":"Since it's a Friday: did anyone had any issues (after) upgrading to the latest vagrant ?","username":"JonathanLevi","ts":"2018-12-07T14:50:52.620Z"}
{"msg":"Since it's a Friday: have anyone had any issues (after) upgrading to the latest vagrant ?","username":"JonathanLevi","ts":"2018-12-07T14:50:52.620Z"}
{"msg":"A new version of Vagrant is available: 2.2.2","username":"JonathanLevi","ts":"2018-12-07T14:50:54.882Z"}
{"msg":"*A new version of Vagrant is available: 2.2.2*","username":"JonathanLevi","ts":"2018-12-07T14:50:54.882Z"}
{"msg":"I think most people have moved away from vagrant as the native build generally works well","username":"dave.enyeart","ts":"2018-12-07T14:54:34.100Z"}
{"msg":"We are getting close to a merge freeze on Monday for RC1... be careful and judicious with your merges between now and Monday...","username":"dave.enyeart","ts":"2018-12-07T14:55:54.049Z"}
{"msg":"Looks we we'll be ready for RC1 on Monday.  I'll announce merge freeze when we start.","username":"dave.enyeart","ts":"2018-12-10T03:47:19.707Z"}
{"msg":"@here please review What's New for v1.4 doc: https://gerrit.hyperledger.org/r/#/c/27998/\nhttps://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/1104/html/whatsnew.html Generated doc","username":"dave.enyeart","ts":"2018-12-10T03:48:18.054Z"}
{"msg":"@here please review What's New for v1.4 doc: https://gerrit.hyperledger.org/r/#/c/27998/\nhttps://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/1109/html/whatsnew.html Generated doc","username":"dave.enyeart","ts":"2018-12-10T03:48:18.054Z"}
{"msg":"@here please review What's New for v1.4 doc: https://gerrit.hyperledger.org/r/#/c/27998/\nhttps://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/1111/html/whatsnew.html Generated doc","username":"dave.enyeart","ts":"2018-12-10T03:48:18.054Z"}
{"msg":"@here please review What's New for v1.4 doc: https://gerrit.hyperledger.org/r/#/c/27998/\nhttps://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/1112/html/whatsnew.html Generated doc","username":"dave.enyeart","ts":"2018-12-10T03:48:18.054Z"}
{"msg":"We didn't call out Long Term Support release by name, but advised that it is the release for production operations.","username":"dave.enyeart","ts":"2018-12-10T03:49:25.250Z"}
{"msg":"We didn't call out Long Term Support release by name, but advised that it is the recommended release for production operations.","username":"dave.enyeart","ts":"2018-12-10T03:49:25.250Z"}
{"msg":"That's open for discussion...","username":"dave.enyeart","ts":"2018-12-10T03:51:04.848Z"}
{"msg":"That's open for discussion here...","username":"dave.enyeart","ts":"2018-12-10T03:51:04.848Z"}
{"msg":"Using LTS label is open for discussion here...","username":"dave.enyeart","ts":"2018-12-10T03:51:04.848Z"}
{"msg":"Personally I didn't think we should use LTS label until we have a specific LTS definition/policy in place","username":"dave.enyeart","ts":"2018-12-10T04:02:40.694Z"}
{"msg":"Personally I didn't think we should use LTS label until we have a specific LTS definition/policy in place. We can always call it LTS later.","username":"dave.enyeart","ts":"2018-12-10T04:02:40.694Z"}
{"msg":"+1 to that @dave.enyeart ","username":"mbwhite","ts":"2018-12-10T09:31:51.538Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/27883/ upgrade doc has been reviewed by multiple people, could somebody merge please?","username":"dave.enyeart","ts":"2018-12-10T10:18:16.900Z"}
{"msg":"~https://gerrit.hyperledger.org/r/#/c/27883/ upgrade doc has been reviewed by multiple people, could somebody merge please?~","username":"dave.enyeart","ts":"2018-12-10T10:18:16.900Z"}
{"msg":"@cbf @mastersingh24 Could you pls review these changes. Below changes publishes two digit (1.4) docker tag (multiarch) to dockerhub\nhttps://gerrit.hyperledger.org/r/#/c/28010/\nhttps://gerrit.hyperledger.org/r/#/c/28009/\nhttps://gerrit.hyperledger.org/r/#/c/27917/","username":"rameshthoomu","ts":"2018-12-10T13:02:39.743Z"}
{"msg":"Merged 27883. @cbf and @mastersingh24 - I took a look at the 3 CRs above from @rameshthoomu ","username":"JonathanLevi","ts":"2018-12-10T14:31:19.469Z"}
{"msg":"They all seem pretty trivial. No change to the process, other than adding a new variable (for the two digit version)","username":"JonathanLevi","ts":"2018-12-10T14:31:46.854Z"}
{"msg":"Upgrading the VERSION to \"1.3\" (from 1.2)","username":"JonathanLevi","ts":"2018-12-10T14:32:06.540Z"}
{"msg":"and,","username":"JonathanLevi","ts":"2018-12-10T14:32:09.216Z"}
{"msg":"Adding the multiarch script also to the *fabric-chaincode-java*","username":"JonathanLevi","ts":"2018-12-10T14:32:41.573Z"}
{"msg":"Not risky to merge","username":"JonathanLevi","ts":"2018-12-10T14:32:45.654Z"}
{"msg":"Not risky to merge - reverify-ing https://gerrit.hyperledger.org/r/#/c/27917/","username":"JonathanLevi","ts":"2018-12-10T14:32:45.654Z"}
{"msg":"In the meantime, reverify-ing https://gerrit.hyperledger.org/r/#/c/27917/","username":"JonathanLevi","ts":"2018-12-10T14:32:45.654Z"}
{"msg":"yeah, the question is are we all good with having a two digit tag in dockerhub.  e.g. so that people can pull v1.3 and always get the latest 3rd digit release in v1.3.x stream.","username":"dave.enyeart","ts":"2018-12-10T14:45:35.443Z"}
{"msg":"i don't know if there is a precedent for or against that in other projects","username":"dave.enyeart","ts":"2018-12-10T14:46:18.519Z"}
{"msg":"ok, two digit tags have been merged.","username":"dave.enyeart","ts":"2018-12-10T18:19:49.790Z"}
{"msg":"@here I believe we are ready for MERGE FREEZE. Waiting to hear back from @odowdaibm on whether he expects a fabcar tutorial doc update today","username":"dave.enyeart","ts":"2018-12-10T18:21:00.468Z"}
{"msg":"In the meantime you can review the fabric release CR: https://gerrit.hyperledger.org/r/#/c/28050/","username":"dave.enyeart","ts":"2018-12-10T18:21:28.598Z"}
{"msg":"Release notes are more substantial this time around, please take a look.","username":"dave.enyeart","ts":"2018-12-10T18:21:42.522Z"}
{"msg":"fabric and fabric-ca v1.4.0-rc1 released. fabric release-1.4 branch created. fabric release-1.4 is open for critical release defect fixes. fabric master is open for 2.0.0 development.\nMERGE FREEZE over for fabric.\non Tuesday we will do node sdk, node chaincode, java chaincode, fabric-samples, and announce","username":"dave.enyeart","ts":"2018-12-11T06:55:13.650Z"}
{"msg":"fabric and fabric-ca v1.4.0-rc1 released. release-1.4 branches created. release-1.4 is open for critical release defect fixes. master is open for 2.0.0 development.\nMERGE FREEZE over for fabric and fabric-ca.\non Tuesday we will do node sdk, node chaincode, java chaincode, fabric-samples, and announce","username":"dave.enyeart","ts":"2018-12-11T06:55:13.650Z"}
{"msg":"@dave.enyeart Very well done. The smoothest Fabric release/release candidate to date. Thanks for all the hard work (you and everyone here)","username":"JonathanLevi","ts":"2018-12-11T08:03:57.505Z"}
{"msg":";-)","username":"cbf","ts":"2018-12-11T08:30:59.013Z"}
{"msg":"@dave.enyeart shouldn't fabric-samples also be tagged?","username":"lehors","ts":"2018-12-11T13:45:33.596Z"}
{"msg":"yes. we'll do it after the node and chaincode releases today.","username":"dave.enyeart","ts":"2018-12-11T14:19:48.449Z"}
{"msg":"yes. we'll do it after the sdk and chaincode releases today.","username":"dave.enyeart","ts":"2018-12-11T14:19:48.449Z"}
{"msg":"Need one more +2 on the fabcar sample updates: https://gerrit.hyperledger.org/r/#/c/28038/","username":"dave.enyeart","ts":"2018-12-11T14:55:52.711Z"}
{"msg":"in a nutshell, there are now three variants: 1) javascript new programming model  2) typescript new programming model  3) javascript low-level programming model using fabric-client","username":"dave.enyeart","ts":"2018-12-11T14:56:35.355Z"}
{"msg":"the Writing Your First App tutorial will focus on # 1","username":"dave.enyeart","ts":"2018-12-11T14:57:19.384Z"}
{"msg":"Thanks @lehors the corresponding doc CR is https://gerrit.hyperledger.org/r/#/c/27824/","username":"dave.enyeart","ts":"2018-12-11T15:36:30.965Z"}
{"msg":"thanks","username":"lehors","ts":"2018-12-11T15:36:42.156Z"}
{"msg":"fyi, I've been testing on my old Windows 7 box and so far all is good :)","username":"lehors","ts":"2018-12-11T15:37:42.918Z"}
{"msg":"How do we cut 1.4? Do we cherry-pick items on 1.4-rc1, or do we cut from master again?","username":"kostas","ts":"2018-12-11T18:15:32.650Z"}
{"msg":"we cherry pick from master into v1.4 branch","username":"yacovm","ts":"2018-12-11T18:23:20.560Z"}
{"msg":"every CR that you want to be in v1.4 GA should be pushed to master and cherry picked to v1.4 branch ","username":"yacovm","ts":"2018-12-11T18:23:57.659Z"}
{"msg":"and then we cut from release-1.4 branch","username":"dave.enyeart","ts":"2018-12-11T18:58:27.124Z"}
{"msg":"updated fabcar tutorial that uses new programming model... has been reviewed/tested by multiple people, ready for merge:","username":"dave.enyeart","ts":"2018-12-11T19:08:52.449Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/27824/ master","username":"dave.enyeart","ts":"2018-12-11T19:08:56.830Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/28079/ release-1.4","username":"dave.enyeart","ts":"2018-12-11T19:09:15.106Z"}
{"msg":"@here a little help from my friends ^^^^","username":"dave.enyeart","ts":"2018-12-11T20:11:30.035Z"}
{"msg":"@here maintainers meeting in 30 minutes: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2018-12-12T13:30:58.112Z"}
{"msg":"@here maintainer meeting starting","username":"dave.enyeart","ts":"2018-12-12T14:01:40.714Z"}
{"msg":"one sentence update in docs about SDK compatibility: https://gerrit.hyperledger.org/r/#/c/28123/ https://gerrit.hyperledger.org/r/#/c/28129/","username":"dave.enyeart","ts":"2018-12-12T17:43:48.604Z"}
{"msg":"Final piece of the release is to align samples.  We are aligning with 1.4.0-rc1 chaincode shim and 1.4.0-rc2 node sdk: https://gerrit.hyperledger.org/r/#/c/28092/","username":"dave.enyeart","ts":"2018-12-12T17:56:58.329Z"}
{"msg":"@here ^^^^^^  Need some help from others with cbf and mastersigh24 traveling","username":"dave.enyeart","ts":"2018-12-12T18:17:52.910Z"}
{"msg":"Thanks @yacovm !  I'll tag and then do a final test, then we'll be ready to announce","username":"dave.enyeart","ts":"2018-12-12T18:21:09.047Z"}
{"msg":"you can also close the JIRA","username":"yacovm","ts":"2018-12-12T18:21:41.281Z"}
{"msg":"you can also close the JIRA (in my stead)","username":"yacovm","ts":"2018-12-12T18:21:41.281Z"}
{"msg":":)","username":"dave.enyeart","ts":"2018-12-12T18:22:02.013Z"}
{"msg":"---------------------------------------------------\nFabric v1.4.0 RELEASE CANDIDATE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/topic/announcement_hyperledger/28735908\n---------------------------------------------------","username":"dave.enyeart","ts":"2018-12-12T20:30:46.402Z"}
{"msg":"Has joined the channel.","username":"Thomas-tuo","ts":"2018-12-17T06:51:45.205Z","type":"uj"}
{"msg":"Final system tests for Fabric v1.4 has identified a few issues that are currently being resolved. We expect to release a rc2 this week with the final updates. Pending results of rc2 testing, a final v1.4 release can then be expected at the beginning of January.","username":"dave.enyeart","ts":"2018-12-18T03:30:09.482Z"}
{"msg":"For those that are still around, I submitted 20 CR's last night to remove dead code; no new function. Of those, half or more failed in unit test due to flakes; of those that were resubmitted, half failed again. We need to focus on fixing these flakes.\n\nhttps://jira.hyperledger.org/issues/?filter=12178","username":"sykesm","ts":"2018-12-19T14:58:59.992Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/28294/ Is an update to the x509 library for the node chaincode","username":"mbwhite","ts":"2018-12-19T15:38:29.696Z"}
{"msg":"@mbwhite `&> #fabric-pr-review ` ","username":"yacovm","ts":"2018-12-19T15:39:24.568Z"}
{"msg":"@sykesm Thank you for keeping the pressure on the flakes and providing the query. @kostas and @C0rWin can I ask you to drive the raft and gossip flakes with your teams respectively.","username":"dave.enyeart","ts":"2018-12-19T16:28:42.257Z"}
{"msg":"@sykesm Thank you for keeping the pressure on the flakes and providing the query. It absolutely is unacceptable to have such a high unit test failure rate. @kostas and @C0rWin can I ask you to drive the raft and gossip flakes with your teams respectively.","username":"dave.enyeart","ts":"2018-12-19T16:28:42.257Z"}
{"msg":"Already on it.","username":"kostas","ts":"2018-12-19T16:44:25.843Z"}
{"msg":"Thanks @kostas and @C0rWin !","username":"dave.enyeart","ts":"2018-12-19T20:08:04.895Z"}
{"msg":"We ALL need to apply more rigor around flakes, even the innocent victims of unit test failures. We will only improve the situation if we are vigilant about opening Jira bugs for flakes:\nWhen you see a unit test failure in one of your CRs, query Jira for the test name string to see if it has already been opened as a bug (the test name is usually a searchable unique string).\nIf a flake bug is already opened in Jira\n- add a comment stating that you’ve seen it again. If this is the 2nd or 3rd time seen, go ahead and change bug priority to High.\nIf a flake bug is not yet opened, please open a new bug with the following information\n- Put the test name in the Summary\n- Copy/paste the failure snippet into description\n- Fill in component (we will rely on component owners to triage)\n- Add label `flakes`. If the problem is seen in CI rather than a CR unit test, add label `ci_failure`","username":"dave.enyeart","ts":"2018-12-19T20:08:09.878Z"}
{"msg":"We ALL need to apply more rigor around flakes, even the innocent victims of unit test failures. We will only improve the situation if we are vigilant about opening Jira bugs for flakes:\nWhen you see a unit test failure in one of your CRs\n- copy/paste the error message to a gerrit comment as you do `Run UnitTest`\n- query Jira for the test name string to see if it has already been opened as a bug (the test name is usually a searchable unique string).\nIf a flake bug is already opened in Jira\n- add a comment stating that you’ve seen it again. If this is the 2nd or 3rd time seen, go ahead and change bug priority to High.\nIf a flake bug is not yet opened, please open a new bug with the following information\n- Put the test name in the Summary\n- Copy/paste the failure snippet into description\n- Fill in component (we will rely on component owners to triage)\n- Add label `flakes`. If the problem is seen in CI rather than a CR unit test, add label `ci_failure`","username":"dave.enyeart","ts":"2018-12-19T20:08:09.878Z"}
{"msg":"We ALL need to apply more rigor around flakes, even the innocent victims of unit test failures. We will only improve the situation if we are vigilant about opening Jira bugs for flakes:\nWhen you see a unit test failure in one of your CRs\n- copy/paste the error message to a gerrit comment as you do `Run UnitTest`\n- query Jira for the test name string to see if it has already been opened as a bug (the test name is usually a searchable unique string).\nIf a flake bug is already opened in Jira\n- add a comment stating that you’ve seen it again. If this is the 2nd or 3rd time seen, go ahead and change bug priority to High.\nIf a flake bug is not yet opened, please open a new bug with the following information\n- Put the test name in the Summary\n- Copy/paste the failure snippet into description\n- Fill in component (we will rely on component owners to triage)\n- Add label `flakes`. If the problem is seen in CI rather than a CR unit test, also add label `ci_failure`","username":"dave.enyeart","ts":"2018-12-19T20:08:09.878Z"}
{"msg":"We ALL need to apply more rigor around flakes, even the innocent victims of unit test failures. We will only improve the situation if we are vigilant about opening Jira bugs for flakes:\nWhen you see a unit test failure in one of your CRs\n- copy/paste the error message to a gerrit comment as you do `Run UnitTest`\n- query Jira for the test name string to see if it has already been opened as a bug (the test name is usually a searchable unique string).\nIf a flake bug is already opened in Jira\n- add a comment stating that you’ve seen it again. If this is the 2nd or 3rd time seen, go ahead and change bug priority to High. Worst offenders and blockers should get Highest.\nIf a flake bug is not yet opened, please open a new bug with the following information\n- Put the test name in the Summary\n- Copy/paste the failure snippet into description\n- Fill in component (we will rely on component owners to triage)\n- Add label `flakes`. If the problem is seen in CI rather than a CR unit test, also add label `ci_failure`","username":"dave.enyeart","ts":"2018-12-19T20:08:09.878Z"}
{"msg":"We ALL need to apply more rigor around flakes, even the innocent victims of unit test failures. We will only improve the situation if we are vigilant about opening Jira bugs for flakes:\nWhen you see a unit test failure in one of your CRs\n- copy/paste the error message to a gerrit comment as you do `Run UnitTest`\n- query Jira for the test name string to see if it has already been opened as a bug (the test name is usually a searchable unique string).\nIf a flake bug is already opened in Jira\n- add a comment stating that you’ve seen it again. If this is the 2nd or 3rd time seen, go ahead and change bug priority to High. Worst offenders and blockers should get Highest.\nIf a flake bug is not yet opened, please open a new bug with the following information\n- Put the test name in the Summary\n- Copy/paste the failure snippet into description\n- Fill in component (we will rely on component owners to triage)\n- Add label `flakes`. If the problem is seen in other CI rather than a CR unit test, also add label `ci_failure`","username":"dave.enyeart","ts":"2018-12-19T20:08:09.878Z"}
{"msg":"Any other thoughts?","username":"dave.enyeart","ts":"2018-12-19T20:11:22.455Z"}
{"msg":"Has joined the channel.","username":"sambhavdutt","ts":"2018-12-19T20:49:52.836Z","type":"uj"}
{"msg":"Has joined the channel.","username":"vijay.bP","ts":"2018-12-19T20:54:24.264Z","type":"uj"}
{"msg":"@dave.enyeart working to reduce gossip flakes :/","username":"C0rWin","ts":"2018-12-19T21:31:29.283Z"}
{"msg":"Latest system tests in release-1.4 branch have had good results. We plan to cut v1.4.0-rc2 from release-1.4 branch on Thursday. We will include fabric, fabric-ca, fabric-chaincode-java, fabric-chaincode-node, and fabric-samples.  Note that fabric-sdk-node already has a rc2.  @C0rWin and @mbwhite you can prepare release CRs in release-1.4 branch for java and node chaincode. ","username":"dave.enyeart","ts":"2018-12-20T01:43:25.913Z"}
{"msg":"Ok","username":"rameshthoomu","ts":"2018-12-20T01:44:39.156Z"}
{"msg":"I updated only chanincode-java","username":"rameshthoomu","ts":"2018-12-20T01:44:53.108Z"}
{"msg":"But sure will send in few hours","username":"rameshthoomu","ts":"2018-12-20T01:45:02.518Z"}
{"msg":"@dave.enyeart  the CR is ready and waiting; as are CRs for the x509 locking to v0.3.3 for all releases.","username":"mbwhite","ts":"2018-12-20T10:34:51.108Z"}
{"msg":"Release process starting for v1.4.0-rc2.","username":"dave.enyeart","ts":"2018-12-20T14:04:28.254Z"}
{"msg":"MERGE FREEZE in `release-1.4` branch only","username":"dave.enyeart","ts":"2018-12-20T14:04:44.396Z"}
{"msg":"I'll post updates in #fabric-release today","username":"dave.enyeart","ts":"2018-12-20T14:04:58.461Z"}
{"msg":"@here I'm not sure if @cbf is available today... any other volunteer want to volunteer to be release buddy today?  Review release CRs, try out the images, etc.","username":"dave.enyeart","ts":"2018-12-20T14:26:22.429Z"}
{"msg":"@here I'm not sure if @cbf is available today... any other volunteer want to to be release buddy today?  Review release CRs, try out the images, etc.","username":"dave.enyeart","ts":"2018-12-20T14:26:22.429Z"}
{"msg":"I can educate you on the release ~hacks~ magic","username":"dave.enyeart","ts":"2018-12-20T14:27:39.083Z"}
{"msg":"@dave.enyeart I'm happy to help as much as I can but I have limited availability - with the time difference I have to deal with family stuff at various points in time","username":"lehors","ts":"2018-12-20T14:30:03.893Z"}
{"msg":"and you can't +2 regardless :(","username":"dave.enyeart","ts":"2018-12-20T14:30:18.415Z"}
{"msg":"on the other hand I can test on Mac, Windows 7, and Ubuntu  :)","username":"lehors","ts":"2018-12-20T14:30:24.850Z"}
{"msg":"ah, indeed, that I can't do","username":"lehors","ts":"2018-12-20T14:30:40.190Z"}
{"msg":"that would be great... could use your help on windows... i'll mention you when images are ready","username":"dave.enyeart","ts":"2018-12-20T14:30:55.184Z"}
{"msg":"I thought you only meant for testing","username":"lehors","ts":"2018-12-20T14:30:57.263Z"}
{"msg":"@dave.enyeart let me know what you need and if within my scope for helping...","username":"muralisr","ts":"2018-12-20T17:06:50.362Z"}
{"msg":"@here need one final +2 to finish off v1.4.0-rc2: https://gerrit.hyperledger.org/r/#/c/28338/","username":"dave.enyeart","ts":"2018-12-20T22:37:37.078Z"}
{"msg":"All done folks... ","username":"dave.enyeart","ts":"2018-12-20T23:12:34.942Z"}
{"msg":"---------------------------------------------------\nFabric v1.4.0 RELEASE CANDIDATE 2 ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/topic/announcement_hyperledger/28815938\n---------------------------------------------------","username":"dave.enyeart","ts":"2018-12-20T23:12:36.714Z"}
{"msg":":clap: ","username":"mbwhite","ts":"2018-12-21T08:44:46.483Z"}
{"msg":"I'm troubled by https://gerrit.hyperledger.org/r/#/c/28349/  failing on x86 merge build but the other 3 builds succeding... this is the 1.1.5 shim release... Any thoughts from anybody would be most welcome.","username":"mbwhite","ts":"2018-12-21T16:37:41.668Z"}
{"msg":"Ignore the above - 3rd respin of the same build it worked....","username":"mbwhite","ts":"2018-12-21T16:49:18.014Z"}
{"msg":"Has joined the channel.","username":"merq","ts":"2018-12-22T03:45:52.515Z","type":"uj"}
{"msg":"There's been some good progress around fixing unit test flakes. @C0rWin @kostas and all, as you and your teams fix flakes in master, go ahead and cherry pick to release-1.4. As we will likely support v1.4 for a long time, we'd like to keep it free from flakes as well.","username":"dave.enyeart","ts":"2018-12-22T13:27:17.897Z"}
{"msg":"Same goes for doc improvements... please do CRs in master and cherry pick to release-1.4 while the files are still in sync.","username":"dave.enyeart","ts":"2018-12-22T13:28:31.850Z"}
{"msg":"Concerning fabric-samples, I still haven't created a release-1.4 branch. Sample improvements can be made in master only for now. I'll create the fabric-samples release-1.4 branch upon final cut of v1.4.0.","username":"dave.enyeart","ts":"2018-12-22T13:30:07.722Z"}
{"msg":"Note that fabric-samples is however already tagged for v1.4.0-rc2 (this is required for our install and upgrade scripts to work correctly)","username":"dave.enyeart","ts":"2018-12-22T13:31:25.362Z"}
{"msg":"I would appreciate your assistance in getting these changes merged: https://gerrit.hyperledger.org/r/#/q/owner:%22Ry+Jones%22+status:open I suspect all of the remaining CI failures are due to rigging, not the changes themselves. Changes to repos without CI setup will need V+1 manually set. Thank you.","username":"rjones","ts":"2018-12-31T05:37:18.953Z"}
{"msg":"trying to increase your commit rate @rjones?   LOL","username":"mastersingh24","ts":"2018-12-31T14:23:38.164Z"}
{"msg":"@rjones - merged all the ones I can","username":"mastersingh24","ts":"2018-12-31T14:29:35.795Z"}
{"msg":"Hi maintainers, we proposal a fabric management system https://docs.google.com/document/d/1DoxDzUIGyfnecEeWQDNXSc-cy7s32Cn2CaRjKQDV6f4","username":"grapebaba","ts":"2018-12-31T16:14:41.929Z"}
{"msg":"would love you guys support","username":"grapebaba","ts":"2018-12-31T16:15:13.417Z"}
{"msg":"Thank you, @mastersingh24 ","username":"rjones","ts":"2018-12-31T16:18:56.011Z"}
{"msg":"Has joined the channel.","username":"greg2git","ts":"2018-12-31T18:01:10.241Z","type":"uj"}
{"msg":"One more for fabric-sdk-py: https://gerrit.hyperledger.org/r/#/c/28424/","username":"rjones","ts":"2018-12-31T21:49:34.671Z"}
{"msg":"Has joined the channel.","username":"gongliaoan","ts":"2019-01-02T09:06:36.770Z","type":"uj"}
{"msg":"Release update for v1.4. We are waiting for some people to return from vacation Friday/Monday before we do final v1.4.0 release.","username":"dave.enyeart","ts":"2019-01-03T14:44:40.001Z"}
{"msg":"We are looking at some final sdk compatibility test results. Any other known issues before we release v1.4.0?","username":"dave.enyeart","ts":"2019-01-03T14:47:12.134Z"}
{"msg":"Please review proposed LTS wording:","username":"dave.enyeart","ts":"2019-01-03T14:56:16.740Z"}
{"msg":"Please review proposed LTS wording (provided by cbf):","username":"dave.enyeart","ts":"2019-01-03T14:56:16.740Z"}
{"msg":"```Hyperledger Fabric v1.4 marks our first Long Term Support release (https://en.wikipedia.org/wiki/Long-term_support). Our policy to date has been to provide bug fix (patch) releases for our most recent major or minor release until the next major or minor release has been published. We plan to continue this policy for subsequent releases. However, for v1.4.0, we are pledging to provide bug fixes for a period of one year from the date of release (insert date). This will likely result in a series of patch releases (v1.4.1, v1.4.2, …), where multiple fixes are bundled into a patch release.\n\nIf you are running with Hyperledger Fabric v1.4.x, you can be assured that you will be able to safely upgrade to any of the subsequent patch releases. In the advent that there is need of some upgrade process to remedy a defect, we will provide that process with the patch release. As for eventually upgrading to the 2.0 release series, we will ensure that you can safely do so from any of the 1.4.x patch releases, however we may require that you serially upgrade minor versions of 2.x series releases.```","username":"dave.enyeart","ts":"2019-01-03T14:56:21.441Z"}
{"msg":"See #fabric-pr-review : https://chat.hyperledger.org/channel/fabric-pr-review?msg=yXhtiHmWaDLRHqMsp , need to get these fabric-samples CRs merged and CI working well before we create fabric-samples release-1.4 branch as part of v1.4.0 release","username":"dave.enyeart","ts":"2019-01-03T21:18:34.298Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=yXhtiHmWaDLRHqMsp","url":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=yXhtiHmWaDLRHqMsp","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"pasimoes","ts":"2019-01-04T15:51:35.140Z","type":"uj"}
{"msg":"how to become the maintainer of Fabric ","username":"BellaAdams","ts":"2019-01-07T06:36:45.623Z"}
{"msg":"I want to develop Fabric Go sdk","username":"BellaAdams","ts":"2019-01-07T06:37:07.925Z"}
{"msg":"I want to make the Fabric Go sdk better","username":"BellaAdams","ts":"2019-01-07T06:37:32.452Z"}
{"msg":"@BellaAdams ask also in #fabric-sdk-go ","username":"yacovm","ts":"2019-01-07T07:17:10.417Z"}
{"msg":"@dave.enyeart the last paragraph is vague as to what you will be able to safely upgrade; is it everything, the ledger data, chaincode/smart contracts, applications - what? I suspect with the SDKs we may take the opportunity to make breaking changes inbetween v1.4 and v2.0. ","username":"sstone1","ts":"2019-01-07T11:29:03.218Z"}
{"msg":"@sstone1 How about we simply remove the last sentence:","username":"dave.enyeart","ts":"2019-01-07T12:56:55.152Z"}
{"msg":"``````\nHyperledger Fabric v1.4 marks our first Long Term Support release (https://en.wikipedia.org/wiki/Long-term_support). Our policy to date has been to provide bug fix (patch) releases for our most recent major or minor release until the next major or minor release has been published. We plan to continue this policy for subsequent releases. However, for v1.4.0, we are pledging to provide bug fixes for a period of one year from the date of release (insert date). This will likely result in a series of patch releases (v1.4.1, v1.4.2, …), where multiple fixes are bundled into a patch release.\nIf you are running with Hyperledger Fabric v1.4.x, you can be assured that you will be able to safely upgrade to any of the subsequent patch releases. In the advent that there is need of some upgrade process to remedy a defect, we will provide that process with the patch release.```\n```","username":"dave.enyeart","ts":"2019-01-07T12:56:59.595Z"}
{"msg":"```\nHyperledger Fabric v1.4 marks our first Long Term Support release (https://en.wikipedia.org/wiki/Long-term_support). Our policy to date has been to provide bug fix (patch) releases for our most recent major or minor release until the next major or minor release has been published. We plan to continue this policy for subsequent releases. However, for v1.4.0, we are pledging to provide bug fixes for a period of one year from the date of release (insert date). This will likely result in a series of patch releases (v1.4.1, v1.4.2, …), where multiple fixes are bundled into a patch release.\nIf you are running with Hyperledger Fabric v1.4.x, you can be assured that you will be able to safely upgrade to any of the subsequent patch releases. In the advent that there is need of some upgrade process to remedy a defect, we will provide that process with the patch release.```","username":"dave.enyeart","ts":"2019-01-07T12:56:59.595Z"}
{"msg":":+1: works for me","username":"sstone1","ts":"2019-01-07T13:26:31.708Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=dMbk3KAdbiGAWB7ja) @BellaAdams It's worth noting that you can go ahead and contribute fixes and improvements without being a maintainer. Maintainer is just required to review/approve changes going in to the codebase. Perhaps a good idea to talk to the maintainers about any proposed changes first though","username":"bestbeforetoday","ts":"2019-01-08T10:38:47.094Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=dMbk3KAdbiGAWB7ja","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=dMbk3KAdbiGAWB7ja","remote":true,"fileId":null,"fileName":null}]}
{"msg":"all, some of us have been discussing the gerrit backlog, which seems to be perpetually in arrears. The idea we came up with was to institute a policy and some tooling to help us manage the backlog in an objective manner - to provide for a means of automating the abandonment of CRs and comments that are repeatedly ignored and to help us ensure that as CRs come in from the broader community that they are receiving the attention they deserve","username":"cbf","ts":"2019-01-08T16:02:30.241Z"}
{"msg":"here is the proposed language (I will share on the mailing list as well):","username":"cbf","ts":"2019-01-08T16:02:50.322Z"}
{"msg":"=========","username":"cbf","ts":"2019-01-08T16:02:55.443Z"}
{"msg":"Here's some proposed language for a proposed policy on Gerrit CRs. Feedback welcomed.\n \nAs the Fabric project has grown, so too has the backlog of open CRs. One problem that nearly all projects face is managing that backlog effectively, and Fabric is no exception. In an effort to keep the backlog of Fabric and related project CRs manageable, we are proposing to introduce a policy to be enforced by a set of bots similarly to the manner in which other large projects manage their CR backlog.\n \n-----\nProposed CR Aging Policy\n \nThe Fabric project maintainers will automatically monitor all CR activity for delinquency. If a CR has not been updated in 2 weeks, a reminder comment will be added requesting that the CR be either updated to address any outstanding comments, or abandoned if it is to be withdrawn. If a delinquent CR goes another 2 weeks without an update, it will be automatically abandoned. If a CR has aged more than 2 months since it was originally submitted, even if it has activity, it will be flagged  for maintainer review.\n \nIf a submitted CR has passed all validation but has not been reviewed in 48 hours, it will be flagged to the #fabric-pr-review channel daily until it receives a review comment(s).\n \nThis policy applies to all official Fabric projects (fabric, fabric-ca, fabric-samples, fabric-test, fabric-sdk-node, fabric-sdk-java, fabric-chaincode-node, fabric-chaincode-java, fabric-chaincode-evm, fabric-baseimage, and fabric-amcl).","username":"cbf","ts":"2019-01-08T16:02:57.812Z"}
{"msg":"==========","username":"cbf","ts":"2019-01-08T16:03:02.304Z"}
{"msg":"comments welcomed","username":"cbf","ts":"2019-01-08T16:03:15.265Z"}
{"msg":"can we automate the 2 weeks warning?","username":"yacovm","ts":"2019-01-08T16:13:33.821Z"}
{"msg":"We are starting release process for v1.4.0. Announcing MERGE FREEZE.  We'll take it slow so that we can publish on Wednesday. There is some press lined up for Thursday.","username":"dave.enyeart","ts":"2019-01-08T16:24:16.557Z"}
{"msg":"We are starting release process for v1.4.0. Announcing MERGE FREEZE in release-1.4 branches.  We'll take it slow so that we can publish on Wednesday. There is some press lined up for Thursday.","username":"dave.enyeart","ts":"2019-01-08T16:24:16.557Z"}
{"msg":"master remains open for 2.0 business.","username":"dave.enyeart","ts":"2019-01-08T16:24:47.082Z"}
{"msg":"We will reiterate the Help Wanted query during maintainer call tomorrow. I've done a quick review to remove outdated items. Please tag any known work items with `help-wanted` prior to the call please.","username":"dave.enyeart","ts":"2019-01-08T18:54:27.816Z"}
{"msg":"https://jira.hyperledger.org/issues/?filter=10147","username":"dave.enyeart","ts":"2019-01-08T18:54:30.050Z"}
{"msg":"https://jira.hyperledger.org/issues/?filter=10147 Help Wanted query as advertised in RTD: https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#fixing-issues-and-working-stories","username":"dave.enyeart","ts":"2019-01-08T18:54:30.050Z"}
{"msg":"@yacovm Gerrit has a robust automation interface.","username":"rjones","ts":"2019-01-08T19:19:42.380Z"}
{"msg":"@yacovm if it could run on Heroku for $7 a month, even as a cron job, there's probably money for it somewhere","username":"rjones","ts":"2019-01-08T19:20:17.592Z"}
{"msg":"oops, I didn't paste in the modified version was supposed to be 72 hours (3 days) note also that as with all things, there can be flexibility when warranted (long weekends, holidays etc)","username":"cbf","ts":"2019-01-08T19:35:16.009Z"}
{"msg":"Any objections to me merging something on fabric-ca ?","username":"JonathanLevi","ts":"2019-01-08T22:14:17.814Z"}
{"msg":"We aren't in a full code-freeze ON, I take it?","username":"JonathanLevi","ts":"2019-01-08T22:14:32.421Z"}
{"msg":"Not my CR, but some improvements to error codes, that can/could be useful.","username":"JonathanLevi","ts":"2019-01-08T22:14:51.691Z"}
{"msg":"(Please ignore these ^^^) ;-)","username":"JonathanLevi","ts":"2019-01-08T22:23:19.394Z"}
{"msg":"Have just merged a set of improvements to the fabric-ca. But either way, if we are setting a hard code-freeze (between now and Thu), please feel free to shout it.","username":"JonathanLevi","ts":"2019-01-08T22:25:51.966Z"}
{"msg":"72 hours for notification?","username":"yacovm","ts":"2019-01-08T22:30:19.628Z"}
{"msg":"72 hours....?","username":"yacovm","ts":"2019-01-08T22:30:44.335Z"}
{"msg":"for notification?","username":"yacovm","ts":"2019-01-08T22:30:53.364Z"}
{"msg":"72 hours for what? until an idle CR will be reminded to be updated?","username":"yacovm","ts":"2019-01-08T22:32:38.670Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=RDGZx9P5TqJRNeJwz) @bestbeforetoday I got it. Thanks","username":"BellaAdams","ts":"2019-01-09T06:11:42.870Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=RDGZx9P5TqJRNeJwz","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=RDGZx9P5TqJRNeJwz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"(in the spirit of the new year...) @BellaAdams in fact, sometimes we wonder whether the Fabric community and the other maintainers chose to nominate and vote to support our promotions to a maintainer status, just because they wanted us to deal with more maintenance, so that we code less ;-)\n\nJokes aside, feel free to code, chat about features, open JIRA items, submit CRs... get bashed a bit when/if you are wrong, learn, improve, push, etc... this is a very inclusive project and any type of contribution (even if people being with feedback/questions) - are really welcome!","username":"JonathanLevi","ts":"2019-01-09T06:57:26.210Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=bWHa6DeWLDy557kkL) @JonathanLevi I am very glad to do some contribution","username":"BellaAdams","ts":"2019-01-09T08:24:26.257Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=bWHa6DeWLDy557kkL","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=bWHa6DeWLDy557kkL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"raviranjan14","ts":"2019-01-09T12:45:37.196Z","type":"uj"}
{"msg":"@here maintainer meeting in one hour, here's the agenda items I know about:\nFabric v1.4.0 release scheduled for tomorrow: See Long-term support wording above\nFabric roadmap: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11705\nChaincode refactoring - community involvement @sykesm @binhn, e.g. https://jira.hyperledger.org/browse/FAB-13582\nhelped-wanted items: https://jira.hyperledger.org/issues/?filter=10147\nAging CR policy - see proposal above from @cbf\nFabric management proposal (@grapebaba) - https://docs.google.com/document/d/1DoxDzUIGyfnecEeWQDNXSc-cy7s32Cn2CaRjKQDV6f4/edit","username":"dave.enyeart","ts":"2019-01-09T13:03:39.046Z"}
{"msg":"@here maintainer meeting in one hour, here's the agenda items I know about:\nFabric v1.4.0 release scheduled for tomorrow: See Long-term support wording above\nFabric roadmap: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11705\nChaincode refactoring - community involvement @sykesm @binhn, e.g. https://jira.hyperledger.org/browse/FAB-13582\nhelped-wanted items: https://jira.hyperledger.org/issues/?filter=10147\nAging CR policy - see proposal above from @cbf\nFabric management proposal @grapebaba  - https://docs.google.com/document/d/1DoxDzUIGyfnecEeWQDNXSc-cy7s32Cn2CaRjKQDV6f4/edit","username":"dave.enyeart","ts":"2019-01-09T13:03:39.046Z"}
{"msg":"@here maintainer meeting in one hour, here's the agenda items I know about:\nFabric v1.4.0 release later today and announcements tomorrow: See Long-term support wording above\nFabric roadmap: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11705\nChaincode refactoring - community involvement @sykesm @binhn, e.g. https://jira.hyperledger.org/browse/FAB-13582\nhelped-wanted items: https://jira.hyperledger.org/issues/?filter=10147\nAging CR policy - see proposal above from @cbf\nFabric management proposal @grapebaba  - https://docs.google.com/document/d/1DoxDzUIGyfnecEeWQDNXSc-cy7s32Cn2CaRjKQDV6f4/edit","username":"dave.enyeart","ts":"2019-01-09T13:03:39.046Z"}
{"msg":"@dave.enyeart - query on the long-term-support.... say there was a important defect and I felt it warranted a fabric-chaincode-node release.  Would I need to wait until collectively say a Fabric 1.4.2 release;  i.e. is it for the maintainers per component to say when a patch release should be released?","username":"mbwhite","ts":"2019-01-09T13:19:24.363Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=2zHppRE96KTy9tk29) @BellaAdams BTW: This is an \"internal\" channel for the maintainers. Let's continue chatting on the other channels. Thanks.","username":"JonathanLevi","ts":"2019-01-09T13:35:08.105Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2zHppRE96KTy9tk29","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2zHppRE96KTy9tk29","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=DSzTzSBXsLvAcmnFQ) @mbwhite It depends on the case and the severity of it. We, and @dave.enyeart in particular, are trying to always test the water make the maintainers vote over things. If it's bad [severe] enough, we may have a \"global\" 1.4.2 even if it fixes only a few (or even one component).","username":"JonathanLevi","ts":"2019-01-09T13:43:26.764Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=DSzTzSBXsLvAcmnFQ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=DSzTzSBXsLvAcmnFQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@JonathanLevi @mbwhite For major releases we like to go out together. For minor releases (3rd digit fixes) SDKs are on their own schedule. I think we'll need some more discussion for chaincode. For example I believe for java chaincode it looks for the javaenv matching the peer version.  We need to discuss this and get some consistency around java and node. ","username":"dave.enyeart","ts":"2019-01-09T13:46:33.462Z"}
{"msg":"@here maintainer meeting web conf - https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2019-01-09T14:00:02.221Z"}
{"msg":"Has joined the channel.","username":"HongweiPeng","ts":"2019-01-09T14:08:33.215Z","type":"uj"}
{"msg":"had to drop","username":"cbf","ts":"2019-01-09T14:58:48.686Z"}
{"msg":"good call","username":"cbf","ts":"2019-01-09T14:58:52.137Z"}
{"msg":"Please observe: https://github.com/hyperledger/fabric-sdk-java/pull/18#issuecomment-452785551","username":"rjones","ts":"2019-01-09T18:02:57.261Z"}
{"msg":"@mastersingh24 ^^^","username":"rjones","ts":"2019-01-09T18:04:54.608Z"}
{"msg":"in 24 hours it will close the PR","username":"rjones","ts":"2019-01-09T18:05:25.566Z"}
{"msg":"Has joined the channel.","username":"levinem","ts":"2019-01-09T18:23:01.555Z","type":"uj"}
{"msg":"Is there a meeting now on zoom?  Was interested in potentially listening in.","username":"levinem","ts":"2019-01-09T19:04:20.984Z"}
{"msg":"Apologies, noted the time zone setting on the Community Calendar.","username":"levinem","ts":"2019-01-09T19:06:44.184Z"}
{"msg":"Has joined the channel.","username":"DmitriPlakhov","ts":"2019-01-10T12:08:16.150Z","type":"uj"}
{"msg":"-------------------------------------------------------------------\nHyperledger Fabric v1.4 LTS RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/topic/announcement_hyperledger/29001113\n-------------------------------------------------------------------","username":"dave.enyeart","ts":"2019-01-10T22:32:08.753Z"}
{"msg":"If there is any doubt, MERGE FREEZE lifted in release-1.4 :)","username":"dave.enyeart","ts":"2019-01-10T22:34:14.843Z"}
{"msg":"As always, a HUGE thank you to @rameshthoomu for navigating the release mechanics and keeping this project humming","username":"dave.enyeart","ts":"2019-01-10T22:47:45.032Z"}
{"msg":"glad to see the release","username":"richzhao","ts":"2019-01-10T23:10:34.002Z"}
{"msg":"@dave.enyeart @cbf @mastersingh24 assistance please? https://gerrit.hyperledger.org/r/#/c/28424/","username":"rjones","ts":"2019-01-11T19:13:30.072Z"}
{"msg":"@cbf I see the fabric maintainers group has no superpowers in fabric-sdk-py. Oversight? I'll push a change for it","username":"rjones","ts":"2019-01-11T19:23:29.345Z"}
{"msg":"s/maintainers/release managers/","username":"rjones","ts":"2019-01-11T19:25:05.870Z"}
{"msg":"well, it isn't formally part of fabric release - I would leave to Baohua to decide... It may be appropriate to evaluate how current it is and bring it on board (I have made similar suggestion for sdk-go _","username":"cbf","ts":"2019-01-11T19:25:39.075Z"}
{"msg":"well, it isn't formally part of fabric release - I would leave to Baohua to decide... It may be appropriate to evaluate how current it is and bring it on board (I have made similar suggestion for sdk-go)","username":"cbf","ts":"2019-01-11T19:25:39.075Z"}
{"msg":"ah I see. I had forgotten that. Apologies for harassing you three to do something you can't :)","username":"rjones","ts":"2019-01-11T19:26:36.242Z"}
{"msg":"Has joined the channel.","username":"FLASHJr","ts":"2019-01-13T09:21:18.943Z","type":"uj"}
{"msg":"There has been good progress on flakes, but somehow new ones keep coming up. We'll have to stay on top of them.  You can see current flakes in the new Bugs and Tech Debt dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11706","username":"dave.enyeart","ts":"2019-01-14T19:01:56.025Z"}
{"msg":"When you come across a flake, remember to search for the failure in Jira and either create a new jira bug or add a comment to an existing jira bug if found.","username":"dave.enyeart","ts":"2019-01-14T19:02:53.067Z"}
{"msg":"When you come across a flake, remember to search for the failure in Jira and either create a new jira bug or add a comment to an existing jira bug if found. If it is seen 3 or more times, I've been escalating it to a High.","username":"dave.enyeart","ts":"2019-01-14T19:02:53.067Z"}
{"msg":"Also, for all the ones that have been merged into master recently, let's cherry pick to release-1.4 while the code is still relatively in sync. Mentioning some of the people that have merged fixes into master recently: @yacovm @C0rWin @kostas @guoger @wlahti @sykesm ","username":"dave.enyeart","ts":"2019-01-14T19:04:06.442Z"}
{"msg":"Also, for all the ones that have been merged into master recently, let's cherry pick to release-1.4 while the code is still relatively in sync. Mentioning some of the people that have merged fixes into master recently: @yacovm @C0rWin @kostas @guoger @wlahti @sykesm @mne ","username":"dave.enyeart","ts":"2019-01-14T19:04:06.442Z"}
{"msg":"Anybody can cherry pick, but probably makes the most sense for the developer of the flake fix to do the cherry picking.","username":"dave.enyeart","ts":"2019-01-14T19:06:14.172Z"}
{"msg":"For the remaining playbacks this week I posted to Hyperledger calendar, mailing list, #fabric-playbacks , and sent invites to maintainers. Kind of painful to manage in 4 places... anybody have thoughts on streamlining?","username":"dave.enyeart","ts":"2019-01-15T11:48:44.765Z"}
{"msg":"For the remaining playbacks this week I posted to Hyperledger calendar, https://wiki.hyperledger.org/projects/fabric/playbacks, mailing list, #fabric-playbacks , and sent invites to maintainers. Kind of painful to manage in 5 places... anybody have thoughts on streamlining?","username":"dave.enyeart","ts":"2019-01-15T11:48:44.765Z"}
{"msg":"Has joined the channel.","username":"baohua","ts":"2019-01-16T04:16:22.892Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mike.casey","ts":"2019-01-16T16:42:20.325Z","type":"uj"}
{"msg":"A few quick reminders:\n-When merging a CR, mark it Done in Jira and ensure FixVersion is set.\n-To ensure CRs get closed you can put *FAB-XXXX #done* in the commit message. But for this to work you have to remember to put the Jira \"In CR Review\" due to the Jira transition rules.\n-When merging a CR consider if it should be cherry picked to release-1.4. Since v1.4 is LTS, we should cherry pick any doc improvement, flake fix, and important bug fix. While the files are generally still in sync between master and release-1.4, this is usually just a quick push of the Cherry Pick button in gerrit. \n-Cherry pick can be done by developer or merging maintainer.\n-To signal that something should be backported, set the Fix Version in Jira to v2.0.0,v1.4.1.\n-Keeping Jira clean is the responsibility of the developer, the merging maintainer, and the squad lead. Please help!","username":"dave.enyeart","ts":"2019-01-17T11:31:13.652Z"}
{"msg":"Has joined the channel.","username":"robinrob","ts":"2019-01-18T09:11:07.902Z","type":"uj"}
{"msg":"@dave.enyeart @mastersingh24 @jyellick with all the new chaincode stuff going on - what will happen to chaincode on the upgrade path from 1.4 to 2.0? say i follow these steps:\n1) stand up a 1.4 fabric\n2) deploy a chaincode to that fabric\n3) upgrade the fabric to 2.0\n4) attempt to invoke the chaincode i deployed at 1.4\nwill the original 1.4 chaincode image still be used? or will the upgrade to 2.0 cause it to be rebuilt? ","username":"sstone1","ts":"2019-01-18T09:43:15.999Z"}
{"msg":"Has joined the channel.","username":"awjh","ts":"2019-01-18T09:48:25.242Z","type":"uj"}
{"msg":"We still have to maintain some level of backwards compatibility.  Containers are not rebuilt even today when upgrading and that would continue to be the case in 2.0","username":"mastersingh24","ts":"2019-01-18T12:54:21.076Z"}
{"msg":"okay, thanks for the update @mastersingh24 :+1: ","username":"sstone1","ts":"2019-01-18T13:22:52.157Z"}
{"msg":"Yes, we will continue to have old lifecycle support in the new binary to give users a migration path.  Once v2.0 capabilities are enabled on a channel, we will make the old lifecycle read-only, and I would like to see all of the endorser-side old lifecycle components removed in v2.1 (the validation will need to stick around indefinitely to support older chains).","username":"jyellick","ts":"2019-01-18T14:31:39.306Z"}
{"msg":"Someone who's smarter than me: can we modify whatever linter checks we have in CI so that we reject CRs that don't have GoDoc comments that don't end with a period? See: https://github.com/golang/go/wiki/CodeReviewComments#comment-sentences","username":"kostas","ts":"2019-01-18T18:58:12.146Z"}
{"msg":"I'm hoping (and I'm naive) that this acts as a nudge of sorts towards caring more about how our stuff looks in GoDoc.","username":"kostas","ts":"2019-01-18T18:58:15.524Z"}
{"msg":"As is the case with how we do JIRA, our attention to GoDoc seems like an afterthought.","username":"kostas","ts":"2019-01-18T18:58:57.427Z"}
{"msg":"And while I understand we may have bigger fish to fry, I don't think this is something that we should keep postponing.","username":"kostas","ts":"2019-01-18T18:59:37.143Z"}
{"msg":"We'll never go: \"Alright, we'll fix GoDoc for everything in this release.\" This should be gradual.","username":"kostas","ts":"2019-01-18T19:00:03.436Z"}
{"msg":"On a related note for those who review code: I would ask that [we occassionally bring up a godoc server locally](http://whipperstacker.com/2015/10/03/run-a-godoc-server-locally-to-see-documentation-for-unpublished-packages/) and check how the package we're reviewing looks like.","username":"kostas","ts":"2019-01-18T19:03:03.858Z"}
{"msg":"@kostas  - I looked at some other linter wrappers such as golangci-lint and gometalinter and they did not seem to have any options for godoc / comments either other than basic formatting.\n\nOn a related note, maybe we should actually be using one of those packages instead anyway.  @sykesm  - any thoughts about this?","username":"mastersingh24","ts":"2019-01-20T12:23:12.248Z"}
{"msg":"@kostas @mastersingh24 https://github.com/golangci/awesome-go-linters seems that other linter also do no have options for GoDoc formatting ","username":"C0rWin","ts":"2019-01-20T14:57:38.342Z"}
{"msg":"I think the Makefile has gone bad as of https://gerrit.hyperledger.org/r/#/c/27491/ (switch to Alpine)","username":"dave.enyeart","ts":"2019-01-20T19:30:39.267Z"}
{"msg":"When I update peer code and then `make peer`, I get response:","username":"dave.enyeart","ts":"2019-01-20T19:31:08.089Z"}
{"msg":"```make: Nothing to be done for `peer'.```","username":"dave.enyeart","ts":"2019-01-20T19:31:12.658Z"}
{"msg":"I have to clean it before it will make again.","username":"dave.enyeart","ts":"2019-01-20T19:31:25.438Z"}
{"msg":"If I checkout out the commit prior to the Alpine change, `make peer` works as it always has previously","username":"dave.enyeart","ts":"2019-01-20T19:31:56.211Z"}
{"msg":"any ideas @mastersingh24 ?","username":"dave.enyeart","ts":"2019-01-20T19:32:26.754Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=sxRczGakdkh2JyeGz) @dave.enyeart https://gerrit.hyperledger.org/r/28839","username":"mastersingh24","ts":"2019-01-20T20:37:16.232Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=sxRczGakdkh2JyeGz","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=sxRczGakdkh2JyeGz","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@mastersingh24 Confirmed that it works now... +2ed","username":"dave.enyeart","ts":"2019-01-20T20:42:06.041Z"}
{"msg":"Has joined the channel.","username":"ycarmel","ts":"2019-01-22T08:46:03.929Z","type":"uj"}
{"msg":"Has joined the channel.","username":"incarose","ts":"2019-01-23T00:23:36.941Z","type":"uj"}
{"msg":"@here Maintainer meeting in one hour, any other topics?\n* Release v2.0 dashboard - https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700\n* Bugs and Tech Debt dashboard - https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11706\n* Aging CR policy - update","username":"dave.enyeart","ts":"2019-01-23T13:03:41.802Z"}
{"msg":"@here Maintainer meeting starting: https://zoom.us/my/hyperledger.community","username":"dave.enyeart","ts":"2019-01-23T14:00:03.719Z"}
{"msg":"I have a CR to make it more clear how people can contribute to Fabric. Please review CR and/or the generated doc: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/1291/html/CONTRIBUTING.html#ways-to-contribute","username":"dave.enyeart","ts":"2019-01-24T06:08:26.577Z"}
{"msg":"I have a CR to make it more clear how people can contribute to Fabric. Please review CR https://gerrit.hyperledger.org/r/#/c/28933/ and/or the generated doc: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/1291/html/CONTRIBUTING.html#ways-to-contribute","username":"dave.enyeart","ts":"2019-01-24T06:08:26.577Z"}
{"msg":"You'll see I mention `help-wanted` list, so please take a moment to look at the list, remove anything outdated in your areas, and tag anything new that you know of that could use some help","username":"dave.enyeart","ts":"2019-01-24T06:09:29.420Z"}
{"msg":"@cbf Please update the release roadmap dashboard to display v2.0 and v2.1 now (pinged you the details separately)","username":"dave.enyeart","ts":"2019-01-24T06:10:27.593Z"}
{"msg":"Once this is reviewed I will send the link to mailing list","username":"dave.enyeart","ts":"2019-01-24T06:11:56.872Z"}
{"msg":"@sykesm @simsc FYI","username":"dave.enyeart","ts":"2019-01-24T06:12:10.754Z"}
{"msg":"Has joined the channel.","username":"mrjdomingus","ts":"2019-01-24T10:11:30.987Z","type":"uj"}
{"msg":"did we already apply policy for orphaned (more than two weeks) CRs in gerrit? @dave.enyeart @mastersingh24 @cbf ","username":"C0rWin","ts":"2019-01-29T12:52:30.767Z"}
{"msg":"I've been applying it for quite some time, but I'd say it is in effect now","username":"mastersingh24","ts":"2019-01-29T12:53:40.736Z"}
{"msg":"Ok ;) I was asking about automated process, but manual is also good to start with ","username":"C0rWin","ts":"2019-01-29T13:20:34.420Z"}
{"msg":"I have to get the scripting in place, but I have been swamped with other priorities","username":"cbf","ts":"2019-01-29T14:52:05.284Z"}
{"msg":"but agree, we should consider it in place","username":"cbf","ts":"2019-01-29T14:52:20.689Z"}
{"msg":"do you guys give a warning?","username":"lehors","ts":"2019-01-29T19:32:54.914Z"}
{"msg":"and, I hope you don't forget that maintainers also ought to comment before they ditch any CR","username":"lehors","ts":"2019-01-29T19:33:46.418Z"}
{"msg":"#fabric-pr-review seems to have been deserted by all maintainers... :-/","username":"lehors","ts":"2019-01-29T19:36:05.739Z"}
{"msg":"Is everybody ok with this change:","username":"dave.enyeart","ts":"2019-01-31T16:38:07.776Z"}
{"msg":"https://jira.hyperledger.org/browse/FABCI-282 - Send email to CR owner if CI merge job fails","username":"dave.enyeart","ts":"2019-01-31T16:38:10.593Z"}
{"msg":"If a merge job fails, email should be sent to CR owner in addition to CI team, so that CR owner can investigate if their CR introduced a regression.","username":"dave.enyeart","ts":"2019-01-31T16:38:16.716Z"}
{"msg":"is it too much to ask to add console log tar gz file to this email?","username":"C0rWin","ts":"2019-01-31T18:25:17.369Z"}
{"msg":"is it too much to ask to add console log tar gz file to this email? @dave.enyeart ","username":"C0rWin","ts":"2019-01-31T18:25:17.369Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-01-31T18:58:29.287Z","type":"ul"}
{"msg":"We may have a merge conflict between these two\nFAB-14007 / Change-Id: I4e7962ad0d7c7d69f5aa011b6797d53892d02a12\nFAB-12918 / Change-Id: Ifa067393567b03ecff9bf60bdf685b41bd1aef83\n","username":"sykesm","ts":"2019-01-31T19:34:50.821Z"}
{"msg":"in gossip/gossip/gossip_test.go @C0rWin ","username":"sykesm","ts":"2019-01-31T19:35:41.051Z"}
{"msg":"^ I'm doing the quick fix","username":"sykesm","ts":"2019-01-31T19:41:35.715Z"}
{"msg":"@C0rWin @yacovm - https://gerrit.hyperledger.org/r/c/29089/ ?","username":"sykesm","ts":"2019-01-31T19:43:45.597Z"}
{"msg":"~@C0rWin @yacovm - https://gerrit.hyperledger.org/r/c/29089/ ?~","username":"sykesm","ts":"2019-01-31T19:43:45.597Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=mioiZPwqTSj39eQEP) @C0rWin The email will contain a link to where you can see any saved artifacts and the console logfile.","username":"scottz","ts":"2019-02-01T16:28:34.592Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=mioiZPwqTSj39eQEP","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=mioiZPwqTSj39eQEP","remote":true,"fileId":null,"fileName":null}]}
{"msg":"For how ling it gonna be persisted? Will it be retained fot longer period? We have many JIRAs with such links not that helpful though @scottz ","username":"C0rWin","ts":"2019-02-01T20:13:21.834Z"}
{"msg":"For how long it gonna be persisted? Will it be retained fot longer period? We have many JIRAs with such links not that helpful though @scottz ","username":"C0rWin","ts":"2019-02-01T20:13:21.834Z"}
{"msg":"For how long it gonna be persisted? Will it be retained for longer period? We have many JIRAs with such links not that helpful though @scottz ","username":"C0rWin","ts":"2019-02-01T20:13:21.834Z"}
{"msg":"I believe there is a way to find the logfile, even after the initial 7 days when the jobs disappear. That way is better, since there are other file artifacts too in some cases. Let me forward the request to the CI guys to see if we can provide instructions in the email. If not, then we can reconsider the idea to attach the logfile.","username":"scottz","ts":"2019-02-01T21:57:35.046Z"}
{"msg":"Has joined the channel.","username":"vikpande","ts":"2019-02-04T16:34:05.910Z","type":"uj"}
{"msg":"Hello maintainers.  One of our community members is looking for the playbacks of fabric for these topics \" RAFT and Lifecyle and , but also last weeks sessions were not there at all. Fabric Performance\" the member looked at this page which is not available anymore - https://wiki.hyperledger.org/projects/fabric/playbacks but that does not work as a URL. (Page not found)..\nI was able to redirect to the right page https://wiki.hyperledger.org/display/fabric/Playbacks . However, even there she/he couldnt find the playbacks.\nCan someone shed some light and share the location/link where the playbacks are stored. thank you","username":"vikpande","ts":"2019-02-04T16:35:05.302Z"}
{"msg":"@tkuhrt Two things concerning the above message: 1) The prior wiki links are no longer available, will there be a community announcement about the wiki migration? 2) I've tried to upload recent community recordings from last two weeks but the linux foundation google drive is out of space.","username":"dave.enyeart","ts":"2019-02-04T16:57:25.964Z"}
{"msg":"yes, please let the rest of the community know when https://wiki.hyperledger.org/projects/fabric/playbacks is back up or successfully migrated to another globally accessible URL","username":"greg2git","ts":"2019-02-04T19:57:43.600Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-02-04T20:02:21.856Z","type":"uj"}
{"msg":"https://wiki-archive.hyperledger.org/","username":"rjones","ts":"2019-02-04T20:02:44.033Z"}
{"msg":"@dave.enyeart this is the first I've heard of for the google drive being full.","username":"rjones","ts":"2019-02-04T20:09:39.535Z"}
{"msg":"I mentioned to Tracy last Thursday in fabric-playbacks, and here today.","username":"dave.enyeart","ts":"2019-02-04T20:10:30.018Z"}
{"msg":"@dave.enyeart Hyperledger pays for a 5TB Google drive. We are not even using 1TB.","username":"rjones","ts":"2019-02-04T22:54:16.652Z"}
{"msg":"@rjones  ok, looks like google drive uses the uploader's account for storage rather than the owning folder's account, so we'll need to figure out a new uploading mechanism. See https://productforums.google.com/forum/?noredirect=true#!topic/drive/lCnogIobjxc","username":"dave.enyeart","ts":"2019-02-04T23:50:44.648Z"}
{"msg":"@greg2git looks like i found it here: https://wiki.hyperledger.org/display/fabric/Playbacks Thank you for the quick response","username":"greg2git","ts":"2019-02-05T00:00:27.277Z"}
{"msg":"@dave.enyeart WRT Tracy: https://lists.hyperledger.org/g/tsc/message/2010","username":"rjones","ts":"2019-02-05T02:16:40.356Z"}
{"msg":"@here Maintainer meeting coming up at the top of the hour. Here are the agenda topics I have so far, welcome others: \n\n*1) Release update* \nDevelopment for core *lifecycle* and *token management* features is making good progress in Q1, however there are many downstream impacts including node sdk, automated tests throughout CI, samples, doc. Additionally we would like to get community feedback, especially since lifecycle will impact existing users. We think it makes sense to release as a beta for Q1 and as a production feature at end of Q2. \nRaft is mostly development complete and is actively being system tested in preparation for a March release.  \nUpon discussing with several maintainers, we propose: \n- Deliver a v2.0 beta for Q1 (March) and Q2 (June) production release including lifecycle (along with the required implicit private data collections), token, required validation updates, node sdk support, programming model updates, and alpine. \n- Deliver a v1.4.x release in Q1 (March) to serve as a delivery vehicle for Raft and a few serviceability metrics and health checks. Yes, it is unusual to deliver new function in a third digit release, but since Raft will be ready, is isolated in the code, and will not impact v1.4.0 customers that move to v1.4.x, we think it is acceptable. Also the serviceability improvements will help with 1.4.x LTS support. This approach is seen as favorable to releasing a separate v1.5 since that would bring confusion to the v1.4.0 LTS release. \n\n*2) Fabric CA Maintainers* \nProposal to split maintainers for Fabric and Fabric CA.  Initial Fabric CA maintainer list would be based on contribution and review activity over the past 12 months. That would yield the following maintainers: Chris Ferris, Dave Enyeart, Gari Singh, Jonathan Levi, Keith Smith, Matt Sykes, Saad Karim (new). I will submit a gerrit CR to formalize the proposal. \n\n*3) Aging CR update* \nAutomation is being put in place to remind CR owners to address review feedback, to abandon CRs that are idle for 2 two-week periods (they can easily be restored), and to remind maintainers about reviews needed. \n\nAfter maintainer meeting, we will proceed directly to a proposal for *Peer and Chaincode cloud native deployment support* from Binh Nguyen ( https://jira.hyperledger.org/browse/FAB-13582 ). ","username":"dave.enyeart","ts":"2019-02-06T13:21:09.429Z"}
{"msg":"@here Maintainer meeting coming up at the top of the hour. Here are the agenda topics I have so far, welcome others: \n\n*1) Release update* \nDevelopment for core *lifecycle* and *token management* features is making good progress in Q1, however there are many downstream impacts including node sdk, automated tests throughout CI, samples, doc. Additionally we would like to get community feedback, especially since lifecycle will impact existing users. We think it makes sense to release as a beta for Q1 and as a production feature at end of Q2. \n*Raft* is mostly development complete and is actively being system tested in preparation for a March release.  \nUpon discussing with several maintainers, we propose: \n- Deliver a *v2.0 beta for Q1 (March) and Q2 (June) production release* including lifecycle (along with the required implicit private data collections), token, required validation updates, node sdk support, programming model updates, and alpine. \n- Deliver a *v1.4.x release in Q1 (March) to deliver Raft and a few serviceability metrics and health checks.* Yes, it is unusual to deliver new function in a third digit release, but since Raft will be ready, is isolated in the code, and will not impact v1.4.0 customers that move to v1.4.x, we think it is acceptable. Also the serviceability improvements will help with 1.4.x LTS support. This approach is seen as favorable to releasing a separate v1.5 since that would bring confusion to the v1.4.0 LTS release. \n\n*2) Fabric CA Maintainers* \nProposal to split maintainers for Fabric and Fabric CA.  Initial Fabric CA maintainer list would be based on contribution and review activity over the past 12 months. That would yield the following maintainers: Chris Ferris, Dave Enyeart, Gari Singh, Jonathan Levi, Keith Smith, Matt Sykes, Saad Karim (new). I will submit a gerrit CR to formalize the proposal. \n\n*3) Aging CR update* \nAutomation is being put in place to remind CR owners to address review feedback, to abandon CRs that are idle for 2 two-week periods (they can easily be restored), and to remind maintainers about reviews needed. \n\nAfter maintainer meeting, we will proceed directly to a proposal for *Peer and Chaincode cloud native deployment support* from Binh Nguyen ( https://jira.hyperledger.org/browse/FAB-13582 ). ","username":"dave.enyeart","ts":"2019-02-06T13:21:09.429Z"}
{"msg":"@here Maintainer meeting coming up at the top of the hour. Here are the agenda topics I have so far, welcome others: \n\n*1) Release update* \nDevelopment for core *lifecycle* and *token management* features is making good progress in Q1, however there are many downstream impacts including node sdk, automated tests throughout CI, samples, doc. Additionally we would like to get community feedback, especially since lifecycle will impact existing users. We think it makes sense to release as a beta for Q1 and as a production feature at end of Q2. \n*Raft* is mostly development complete and is actively being system tested in preparation for a March release.  \nUpon discussing with several maintainers, we propose: \n- Deliver a *v2.0 beta for Q1 (March) and Q2 (June) production release* including lifecycle (along with the required implicit private data collections), token, required validation updates, node sdk support, programming model updates, and alpine. \n- Deliver a *v1.4.x release in Q1 (March) to deliver Raft and a few serviceability metrics and health checks*, along with fixes since v1.4.0. Yes, it is unusual to deliver new function in a third digit release, but since Raft will be ready, is isolated in the code, and will not impact v1.4.0 customers that move to v1.4.x, we think it is acceptable. Also the serviceability improvements will help with 1.4.x LTS support. This approach is seen as favorable to releasing a separate v1.5 since that would bring confusion to the v1.4.0 LTS release. \n\n*2) Fabric CA Maintainers* \nProposal to split maintainers for Fabric and Fabric CA.  Initial Fabric CA maintainer list would be based on contribution and review activity over the past 12 months. That would yield the following maintainers: Chris Ferris, Dave Enyeart, Gari Singh, Jonathan Levi, Keith Smith, Matt Sykes, Saad Karim (new). I will submit a gerrit CR to formalize the proposal. \n\n*3) Aging CR update* \nAutomation is being put in place to remind CR owners to address review feedback, to abandon CRs that are idle for 2 two-week periods (they can easily be restored), and to remind maintainers about reviews needed. \n\nAfter maintainer meeting, we will proceed directly to a proposal for *Peer and Chaincode cloud native deployment support* from Binh Nguyen ( https://jira.hyperledger.org/browse/FAB-13582 ). ","username":"dave.enyeart","ts":"2019-02-06T13:21:09.429Z"}
{"msg":"@here  Maintainer meeting web conf: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-02-06T14:00:46.966Z"}
{"msg":"Sooo.... is this meeting not going to happen?","username":"joe-alewine","ts":"2019-02-06T14:15:44.812Z"}
{"msg":"Are you on the right zoom link? It's going","username":"jyellick","ts":"2019-02-06T14:16:03.139Z"}
{"msg":"Are you on the right zoom link? It's going @joe-alewine ","username":"jyellick","ts":"2019-02-06T14:16:03.139Z"}
{"msg":"@jyellick Oh, it's a different zoom link than in the email invite","username":"joe-alewine","ts":"2019-02-06T14:16:57.306Z"}
{"msg":"@jyellick Oh, it's a different zoom link than in the email invite @dave.enyeart ","username":"joe-alewine","ts":"2019-02-06T14:16:57.306Z"}
{"msg":"A few people are on that one --- Yacov, Bret, Angelo","username":"joe-alewine","ts":"2019-02-06T14:17:43.067Z"}
{"msg":"@yacovm @bretharrison @adc ^","username":"jyellick","ts":"2019-02-06T14:18:40.245Z"}
{"msg":"Or at least were","username":"joe-alewine","ts":"2019-02-06T14:18:46.380Z"}
{"msg":"A few are on this one now","username":"joe-alewine","ts":"2019-02-06T14:18:54.228Z"}
{"msg":"@joe-alewine Sorry about the zoom change... there was a conflict with another Hyperledger meeting, I've switched to https://zoom.us/my/hyperledger.community.3 going forward to avoid collisions and have updated the meeting invite.","username":"dave.enyeart","ts":"2019-02-06T15:33:19.584Z"}
{"msg":"master is broken one rename was missing from (https://gerrit.hyperledger.org/r/#/c/29146/)","username":"aso","ts":"2019-02-08T18:34:15.987Z"}
{"msg":"fixed in https://gerrit.hyperledger.org/r/#/c/29205/","username":"aso","ts":"2019-02-08T18:34:25.935Z"}
{"msg":"2nd +2 please","username":"aso","ts":"2019-02-08T18:34:39.505Z"}
{"msg":"~2nd +2 please~","username":"aso","ts":"2019-02-08T18:34:39.505Z"}
{"msg":"thx @jyellick ","username":"aso","ts":"2019-02-08T18:39:04.398Z"}
{"msg":"The fabric-ca maintainer proposal has reached a majority and is merged: https://gerrit.hyperledger.org/r/#/c/29219/","username":"dave.enyeart","ts":"2019-02-09T03:42:18.228Z"}
{"msg":"Welcome aboard @skarim !","username":"dave.enyeart","ts":"2019-02-09T03:42:28.893Z"}
{"msg":"I've sent hyperledger helpdesk an email to update the fabric-ca privileges.","username":"dave.enyeart","ts":"2019-02-09T03:42:40.545Z"}
{"msg":"Has joined the channel.","username":"SatoshiNishishita","ts":"2019-02-12T04:57:36.630Z","type":"uj"}
{"msg":"Has joined the channel.","username":"TarasKob","ts":"2019-02-12T14:49:53.759Z","type":"uj"}
{"msg":"Version 1.4.0 still shows up as unreleased in JIRA. Can we fix it?","username":"kostas","ts":"2019-02-14T18:41:56.593Z"}
{"msg":"@manish-sethi @dave.enyeart is anyone working on https://jira.hyperledger.org/browse/FAB-106 at this point? Any design proposal available?","username":"minollo","ts":"2019-02-14T18:44:05.761Z"}
{"msg":"@minollo - Design is not at a stage that can be shared. Haven't actively started working on this as such.","username":"manish-sethi","ts":"2019-02-14T18:46:22.388Z"}
{"msg":"thanks @manish-sethi ; we may be interested in contributing to this project to accelerate it","username":"minollo","ts":"2019-02-14T18:48:53.390Z"}
{"msg":"@minollo - sure great. will touchbase with you in near future.","username":"manish-sethi","ts":"2019-02-14T18:50:08.799Z"}
{"msg":"@kostas Jira has been updated to indicate v1.4.0 is released","username":"dave.enyeart","ts":"2019-02-14T19:25:09.112Z"}
{"msg":"Has joined the channel.","username":"KartikChauhan","ts":"2019-02-15T08:44:52.403Z","type":"uj"}
{"msg":"Has joined the channel.","username":"gregnotso","ts":"2019-02-17T12:28:14.424Z","type":"uj"}
{"msg":"Has joined the channel.","username":"shibasisp","ts":"2019-02-17T15:33:39.266Z","type":"uj"}
{"msg":"Has joined the channel.","username":"brockhager","ts":"2019-02-18T15:56:33.873Z","type":"uj"}
{"msg":"Did something change with Gerrit where on rebase +2-s become +1-s?","username":"jyellick","ts":"2019-02-19T15:33:07.215Z"}
{"msg":"@jyellick gerrit authentication server had some issues this morning, appears to be resolved now.","username":"dave.enyeart","ts":"2019-02-19T15:41:37.451Z"}
{"msg":"@dave.enyeart It looks like any CRs I rebased this morning had their +2-s converted into +1s (still there).  https://gerrit.hyperledger.org/r/c/29147/ for instance","username":"jyellick","ts":"2019-02-19T15:42:52.765Z"}
{"msg":"Not the end of the world... but confusing and a bit odd","username":"jyellick","ts":"2019-02-19T15:43:25.855Z"}
{"msg":"there was an issue with authentication this morning, I think this is somewhat related ","username":"C0rWin","ts":"2019-02-19T15:44:15.589Z"}
{"msg":"I suspect future rebases will be ok, may have to reapply +2s on the ones impacted.","username":"dave.enyeart","ts":"2019-02-19T15:45:19.083Z"}
{"msg":"I suspect future rebases will be ok, may have to reapply +2s on the ones impacted this morning.","username":"dave.enyeart","ts":"2019-02-19T15:45:19.083Z"}
{"msg":"@here Maintainer meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-02-20T14:00:30.603Z"}
{"msg":"Release Update \n - v1.4.1 targeted for end of March. Raft and a few serviceability metrics and health checks are being backported to release-1.4 since they are ready and will not impact current v1.4.0 users. If there is demand for critical fixes prior to then, we have an option to cut a v1.4.1 sooner and then make Raft available in v1.4.2. \n- v2.0 beta targeted for end of March with final release expected end of June. Due to the major updates in v2.0 we would like to get community feedback during beta timeframe (updated lifecycle, implicit org collections, token, programming model updates, alpine images) \n\nAfter maintainer meeting, we will proceed directly to lifecycle playback .","username":"dave.enyeart","ts":"2019-02-20T14:00:43.361Z"}
{"msg":"Has joined the channel.","username":"AVK","ts":"2019-02-20T15:09:51.430Z","type":"uj"}
{"msg":"@dave.enyeart can you clarify one thing? About 1.4.1 end of March: is that going \"for sure\" to include Raft ordering service? Or is it now possible that Raft ordering service will first see the light only in 1.4.2? And, is 1.4.2 \"formally\" scheduled for end of June? Thanks!","username":"minollo","ts":"2019-02-22T03:33:46.487Z"}
{"msg":"@minollo: Raft is going to be part of the 1.4.1 release.","username":"kostas","ts":"2019-02-22T05:09:50.066Z"}
{"msg":"Thanks @kostas ","username":"minollo","ts":"2019-02-22T05:25:11.341Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=AyZsXQTZ4bJh7pzqG) @dave.enyeart Can I found meeting record somewhere , would like to check release update , Thanks","username":"knagware9","ts":"2019-02-22T11:36:09.627Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=AyZsXQTZ4bJh7pzqG","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=AyZsXQTZ4bJh7pzqG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@knagware9 Sorry I missed the recording this week. In addition to the above update, we mostly reviewed the Current Status field in the v2.0 Epic dashboard here: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700. I was able to capture the Lifecycle playback, recording here: https://wiki.hyperledger.org/display/fabric/playbacks","username":"dave.enyeart","ts":"2019-02-22T12:23:42.023Z"}
{"msg":"@minollo third digit fixes on the v1.4 LTS release will happen at least quarterly - currently targeted for v1.4.1 end of March, v1.4.2 end of June, but may be released more frequent if there are critical bugs found that require quicker release. For example if there was a critical bug found this week, we may release v1.4.1 sooner and then also pull v1.4.2 forward to include Raft.","username":"dave.enyeart","ts":"2019-02-22T12:30:42.390Z"}
{"msg":"@dave.enyeart understood; I suppose that means that - no matter if it's labeled 1.4.1, 1.4.2, or 1.4.87, whatever 1.4.x you release in the end of March timeframe *will* feature raft-based ordering service; correct?","username":"minollo","ts":"2019-02-22T12:42:38.953Z"}
{"msg":"@minollo That's the plan, and the team working on it is currently on target. Exact release date for third digit releases depends on bugs found and test progress. The maintainers value quality over all else.","username":"dave.enyeart","ts":"2019-02-22T13:09:04.537Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=upQMEGK7Wc8NeR3A9) @dave.enyeart Thanks , Just watched Lifecycle playback ,,looks great ","username":"knagware9","ts":"2019-02-22T13:24:03.466Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=upQMEGK7Wc8NeR3A9","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=upQMEGK7Wc8NeR3A9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"braduf","ts":"2019-02-24T20:49:27.835Z","type":"uj"}
{"msg":"For your information\nThere have been connsistent fails in the sdk-node tests, there is an open bug for this issue,\nhttps://jira.hyperledger.org/browse/FABN-1165\n","username":"sambhavdutt","ts":"2019-03-04T00:18:08.496Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-14465\n@bretharrison @andrew-coleman \nThe BYFN tests are failing in Node Chaincode test in 1.4 and master , can you take a look","username":"sambhavdutt","ts":"2019-03-04T01:52:34.119Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-14465\n@bretharrison  @andrew-coleman \nThe BYFN tests are failing in Node Chaincode test in 1.4 and master , can you take a look","username":"sambhavdutt","ts":"2019-03-04T01:52:34.119Z"}
{"msg":"https://jira.hyperledger.org/browse/FAB-14465\n\nThe BYFN tests are failing in Node Chaincode test in 1.4 and master , can you take a look","username":"sambhavdutt","ts":"2019-03-04T01:52:34.119Z"}
{"msg":"Is anybody aware of an issue wtih master branch `cryptotxgen`   using the configtx.yaml from basic-network gives a lot of these errors \n```\nconfigtxgen -profile OneOrgChannel -outputCreateChannelTx /etc/hyperledger/configtx/channel.tx -channelID mychanne\n```","username":"mbwhite","ts":"2019-03-04T13:17:24.114Z"}
{"msg":"@mbwhite Ensure that the channel creation profile has policies defined in it -- let me get you a link","username":"jyellick","ts":"2019-03-04T13:18:15.482Z"}
{"msg":"thanks; ","username":"mbwhite","ts":"2019-03-04T13:18:32.477Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/29421/","username":"jyellick","ts":"2019-03-04T13:18:46.516Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/29421/ (Also ensure policies are present: https://gerrit.hyperledger.org/r/c/29528/ )","username":"jyellick","ts":"2019-03-04T13:18:46.516Z"}
{"msg":"I see... ok thanks!","username":"mbwhite","ts":"2019-03-04T13:25:31.269Z"}
{"msg":"FYI everybdoy  - the fabric-chaincode-node master builds won't build until we've modified the crptotygen configuration file - re the above change","username":"mbwhite","ts":"2019-03-04T13:27:16.947Z"}
{"msg":"@here Maintainer meeting at the top of the hour. Agenda topics that I have so far: \n\nRelease Update \n - *v1.4.1* targeted for end of March. Raft and a few serviceability metrics and health checks have been backported to release-1.4. \n- *v2.0 alpha* targeted for end of March with final release expected end of June. Due to the major updates in v2.0 we would like to get community feedback during alpha timeframe (updated lifecycle, implicit org collections, token, programming model updates, alpine images). Deliver as an alpha rather than a beta so that any feedback related to API changes can be addressed. We are working on tutorials so that the community can try the new lifecycle and token scenarios. \n\nWe still have a large backlog of CRs needing review. Fabric-CA has recently moved from two +2 review policy to non-author code review (NACR) which requires one +2. There is another proposal to make the same change for fabric and fabric-samples. Maintainers could +1 if they'd like additional reviews, or could +2 if they'd like to merge immediately. Thoughts? \n\nProposal for making chaincode build and launch flexible enough to support various schemes, including the 'cloud native' approach from https://jira.hyperledger.org/browse/FAB-13582. For details see  https://gist.github.com/sykesm/0958550cc41b47f8b99b4f54697ac342 ","username":"dave.enyeart","ts":"2019-03-06T13:18:15.231Z"}
{"msg":"@here Maintainer meeting at the top of the hour. Agenda topics that I have so far: \n\nRelease Update \n - *v1.4.1* targeted for end of March. Raft and a few serviceability metrics and health checks have been backported to release-1.4. \n- *v2.0 alpha* targeted for end of March with final release expected end of June. Due to the major updates in v2.0 we would like to get community feedback during alpha timeframe (updated lifecycle, implicit org collections, token, programming model updates, alpine images). Deliver as an alpha rather than a beta so that any feedback related to API changes can be addressed. We are working on tutorials so that the community can try the new lifecycle and token scenarios. \n\nWe still have a large backlog of CRs needing review. Fabric-CA has recently moved from two +2 review policy to non-author code review (NACR) which requires one +2. There is another proposal to make the same change for fabric and fabric-samples. Maintainers could +1 if they'd like additional reviews, or could +2 if they'd like to merge immediately. Thoughts? \n\nProposal to archive fabric-sdk-rest subproject since it is no longer being developed and maintained.\n\nProposal for making chaincode build and launch flexible enough to support various schemes, including the 'cloud native' approach from https://jira.hyperledger.org/browse/FAB-13582. For details see  https://gist.github.com/sykesm/0958550cc41b47f8b99b4f54697ac342 ","username":"dave.enyeart","ts":"2019-03-06T13:18:15.231Z"}
{"msg":"@here Maintainer meeting at the top of the hour. Agenda topics that I have so far: \n\nRelease Update \n - *v1.4.1* targeted for end of March. Raft and a few serviceability metrics and health checks have been backported to release-1.4. \n- *v2.0 alpha* targeted for end of March with final release expected end of June. Due to the major updates in v2.0 we would like to get community feedback during alpha timeframe (updated lifecycle, implicit org collections, token, programming model updates, alpine images). Deliver as an alpha rather than a beta so that any feedback related to API changes can be addressed. We are working on tutorials so that the community can try the new lifecycle and token scenarios. v2.0 dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700\n\nWe still have a large backlog of CRs needing review. Fabric-CA has recently moved from two +2 review policy to non-author code review (NACR) which requires one +2. There is another proposal to make the same change for fabric and fabric-samples. Maintainers could +1 if they'd like additional reviews, or could +2 if they'd like to merge immediately. Thoughts? \n\nProposal to archive fabric-sdk-rest subproject since it is no longer being developed and maintained.\n\nProposal for making chaincode build and launch flexible enough to support various schemes, including the 'cloud native' approach from https://jira.hyperledger.org/browse/FAB-13582. For details see  https://gist.github.com/sykesm/0958550cc41b47f8b99b4f54697ac342 ","username":"dave.enyeart","ts":"2019-03-06T13:18:15.231Z"}
{"msg":"@here maintainer meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-03-06T13:59:26.515Z"}
{"msg":"Has joined the channel.","username":"bryangross","ts":"2019-03-06T14:04:34.851Z","type":"uj"}
{"msg":"@here Since the maintainer meeting I've been hearing mixed feedback from maintainers on the proposal to move fabric to a single +2 review policy - there is no clear consensus. So it seems the needle has not moved much since we last discussed this in July. That being said, we do have an issue providing timely reviews. Allowing maintainers to self +2 has helped somewhat, but not enough.  Something must change. Let's discuss some more options here. Some ideas to jumpstart the conversation:\n1) Move to a single +2 where the initial reviewer uses judgement whether they will +2 and merge, or simply provide +1 and wait for (or nominate) another reviewer.\n2) Move to a single +2 and use a component model where certain critical components require a +2 from one of the named component experts. Given current code structure, this would likely be on the honor system rather than enforced. \n3) Keep two +2 policy, and collectively commit to spending more time on reviews on a regular basis, at the price of velocity on other maintainer work items.\n4) Keep two +2 policy, and expand the list of maintainers.\nOther ideas?","username":"dave.enyeart","ts":"2019-03-06T17:35:21.740Z"}
{"msg":"@here Since the maintainer meeting I've been hearing mixed feedback from maintainers on the proposal to move fabric to a single +2 review policy - there is no clear consensus. So it seems the needle has not moved much since we last discussed this in July. That being said, we do have an issue providing timely reviews. Allowing maintainers to self +2 has helped somewhat, but not enough. Something must change. Let's discuss some more options here. \n\nSome ideas to jumpstart the conversation:\n\n1) Move to a single +2 where the initial reviewer uses judgement whether they will +2 and merge, or simply provide +1 and wait for (or nominate) another reviewer.\n\n2) Move to a single +2 and use a component model where certain critical components require a +2 from one of the named component experts. Given current code structure, this would likely be on the honor system rather than enforced. \n\n3) Keep two +2 policy, and collectively commit to spending more time on reviews on a regular basis, at the price of velocity on other maintainer work items.\n\n4) Keep two +2 policy, and expand the list of maintainers.\n\nOther ideas?","username":"dave.enyeart","ts":"2019-03-06T17:35:21.740Z"}
{"msg":"To let you know where my head is... I'm edging towards option 2 but would like to hear everybody's thoughts","username":"dave.enyeart","ts":"2019-03-06T17:37:58.087Z"}
{"msg":"To let you know where my head is... I'm edging towards option 2, but it opens just as many questions as it answers (e.g. what is a component? what is a component expert?), I'd like to hear everybody's thoughts","username":"dave.enyeart","ts":"2019-03-06T17:37:58.087Z"}
{"msg":"> That being said, we do have an issue providing timely reviews. \nIs there some quantifiable score/metric or analysis that someone performed that can back up this claim?","username":"yacovm","ts":"2019-03-06T18:58:59.042Z"}
{"msg":"I don't think this is the case","username":"yacovm","ts":"2019-03-06T18:59:36.754Z"}
{"msg":"FWIW, I was also very much looking forward to the gerrit automation.  Because the backlog of CR reviews is unkempt, it discourages reviewing CRs which are outside of a known line of work.  It's frustrating setting aside time to review CRs only to find yourself sifting through mostly things which should have been abandoned weeks ago.","username":"jyellick","ts":"2019-03-06T19:01:31.387Z"}
{"msg":"Has joined the channel.","username":"swetha","ts":"2019-03-06T19:42:52.640Z","type":"uj"}
{"msg":">Is there some quantifiable score/metric or analysis that someone performed that can back up this claim?","username":"dave.enyeart","ts":"2019-03-06T20:05:11.162Z"}
{"msg":"I don't have the data from before the recent effort to clean up old CRs. This query will help though:  `status:open project:fabric is:mergeable label:Code-Review>-1 label:f3-integrationtest:1`","username":"dave.enyeart","ts":"2019-03-06T20:05:28.747Z"}
{"msg":"currently sitting at 81 reviewable CRs in fabric","username":"dave.enyeart","ts":"2019-03-06T20:05:41.746Z"}
{"msg":"What happened to the automation effort? Is that being actively worked on?","username":"jyellick","ts":"2019-03-06T20:06:07.821Z"}
{"msg":">  currently sitting at 81 reviewable CRs in fabric \nEven if we assume that all 81 should be merged (which I find hard to believe) - I don't see the problem. We have 14 maintainers, right? Should be easily doable in 2-3 days :) ","username":"yacovm","ts":"2019-03-06T20:16:34.540Z"}
{"msg":"It is less of an issue for people with 2-3 maintainers in their squad. It is more of an issue for others.","username":"dave.enyeart","ts":"2019-03-06T20:23:54.625Z"}
{"msg":"The automation effort will help clean up and abandon unreviewable CRs, but will not help with reviewable CRs (beyond sending nag notes)","username":"dave.enyeart","ts":"2019-03-06T20:24:58.341Z"}
{"msg":"@cbf any update on the aging CR automation?","username":"dave.enyeart","ts":"2019-03-06T20:25:14.698Z"}
{"msg":"I think the issue here is not the feature development, but the non feature development actually","username":"yacovm","ts":"2019-03-06T20:26:23.625Z"}
{"msg":"the feature development IMO flows just fine","username":"yacovm","ts":"2019-03-06T20:26:30.952Z"}
{"msg":"right, it's the stuff coming in from outside the core squads that languishes most","username":"dave.enyeart","ts":"2019-03-06T20:27:07.167Z"}
{"msg":"I thought there was also some talk of assigning maintainers to a CR as advocate/shepherd of sorts? As Yacov points out if with 81 CRs, and 12 maintainers, giving 7 CRs per maintainer to track would hardly be onerous.  On the other hand, asking each maintainer to review 81 CRs to keep them progressing is not so practical.","username":"jyellick","ts":"2019-03-06T20:27:35.273Z"}
{"msg":"we have 14-15 maintainers","username":"yacovm","ts":"2019-03-06T20:28:54.890Z"}
{"msg":"81 CRs is 160 +2s. not something un-achievable ","username":"yacovm","ts":"2019-03-06T20:29:22.376Z"}
{"msg":"81 CRs is 160 +2s. not something UN-achievable in a few days for all of them ","username":"yacovm","ts":"2019-03-06T20:29:22.376Z"}
{"msg":"the comments are not directed to the two most active maintainers :)","username":"dave.enyeart","ts":"2019-03-06T20:29:28.462Z"}
{"msg":"the comments are not directed to two of the most active maintainers :)","username":"dave.enyeart","ts":"2019-03-06T20:29:28.462Z"}
{"msg":"So must be directed at me :slight_smile:","username":"jyellick","ts":"2019-03-06T20:30:27.953Z"}
{"msg":"In any case... if we had some way to assign stewardship of CRs to a maintainer, it would go a long way.","username":"jyellick","ts":"2019-03-06T20:31:00.611Z"}
{"msg":"In any case... if we had some way to assign stewardship of particular CRs to a maintainer, it would go a long way.","username":"jyellick","ts":"2019-03-06T20:31:00.611Z"}
{"msg":"as we see CRs come in, we can all tag 'relevant' maintainers in that area of the code as potential reviewers in CRs","username":"dave.enyeart","ts":"2019-03-06T20:32:07.285Z"}
{"msg":"Personally, I don't think that works.  If we want to be serious about addressing languishing CRs I think we need explicit singular responsibility for a particular maintainer on a particular CR.  I'm not even suggesting that they must be the one to +2, or that they are the SME, merely that it is on them to ensure that it gets attention from the right spots and doesn't get forgotten.","username":"jyellick","ts":"2019-03-06T20:33:38.906Z"}
{"msg":"like round robin assignment rather than SME?","username":"dave.enyeart","ts":"2019-03-06T20:34:11.416Z"}
{"msg":"what's SME??","username":"yacovm","ts":"2019-03-06T20:34:55.064Z"}
{"msg":"subject matter expert","username":"dave.enyeart","ts":"2019-03-06T20:35:04.915Z"}
{"msg":"Right.  And if you're assigned a CR clearly that I should review, and you can convince me to take ownership, great.  For most of the feature work for instance, I would expect the maintainers in that squad to be owners.  But \"everyone tagged should be responsible\" seems like a recipe for diffusion of responsibility where no one takes any action.","username":"jyellick","ts":"2019-03-06T20:35:34.626Z"}
{"msg":"ok, so how about if there is an obvious candidate reviewer, add them as a reviewer up front (we do this about half the time regardless).  and if there is a CR that has had no attention for 7(?) days and no reviewer assigned, have the new automation assign a reviewer round robin.","username":"dave.enyeart","ts":"2019-03-06T20:39:16.363Z"}
{"msg":"how does a new contributer locate that candidate?","username":"yacovm","ts":"2019-03-06T20:41:47.173Z"}
{"msg":"they won't... if there is an obvious candidate reviewer 'we' can add them, if it falls through the cracks for 7 days it gets auto-assigned round robin","username":"dave.enyeart","ts":"2019-03-06T20:42:47.098Z"}
{"msg":"i just think we need to do an analysis of more quality and pin-point locations (code wise) that are neglected with respect to reviews","username":"yacovm","ts":"2019-03-06T20:42:53.086Z"}
{"msg":"pointing at 81 CRs includes a lot of noise like documentation CRs, etc.","username":"yacovm","ts":"2019-03-06T20:43:11.162Z"}
{"msg":"Personally, I know I am very bad about picking up CRs which I'm not explicitly added as a reviewer for.  And, just because it's in my list to review doesn't necessarily mean it's got my full attention.  For instance, I have 21 CRs I'm currently listed as a reviewer on, and the vast majority of those are feature squad related.  I'm not even sure gerrit reviewer tags is the right approach.  Even a simple google doc spreadsheet with assignments would work.","username":"jyellick","ts":"2019-03-06T20:50:43.097Z"}
{"msg":"ok, the world has heard some of our ideas... let's hear from the other 12 :)","username":"dave.enyeart","ts":"2019-03-06T20:52:35.057Z"}
{"msg":"Has joined the channel.","username":"suchith.arodi","ts":"2019-03-06T21:41:56.156Z","type":"uj"}
{"msg":"Very broadly,  there are two types of CRs .. one-ofs (bug fixes, docs, small features etc) and then the others that are part of a chain  that are related and are broken up parts of large CRs. The later are the problem... takes more effort for a maintainer to jump in the middle ( as the person needs to be aware of the CRs leading up to it)  and for the same reason hard to come up with a process to pick and assign them to arbitrary maintainer (even one familiar with the area). Any process for \"assigning\" maintainer to CR would have to take that into account .. so for perhaps assign one or two maintainers during the progression of the entire set ","username":"muralisr","ts":"2019-03-06T22:05:42.720Z"}
{"msg":"(not sure if that helps ... @dave.enyeart :-) )","username":"muralisr","ts":"2019-03-06T22:05:57.745Z"}
{"msg":"I'd like to discuss this with the maintainers here. \n\nGari -1 on https://gerrit.hyperledger.org/r/#/c/29313/ \n> I really think we need to move this out of the core fabric repository and I also think we should just cut ties to the old way of doing things.   We cannot continue to carry legacy with us ... chaincode which as already been built will continue to run and if people want to \"upgrade\" chaincode they use the new model\n\nOn this particular feature, I like Gari's idea, but conventionally software, including open source, supports a period of deprecation to allow migration. If we want to break this, a major release would be the right time. \n\nThoughts?","username":"binhn","ts":"2019-03-06T22:40:46.975Z"}
{"msg":"@binhn Please see the chaincode build and launch proposal that was presented at the maintainer meeting today: https://gist.github.com/sykesm/0958550cc41b47f8b99b4f54697ac342","username":"dave.enyeart","ts":"2019-03-07T01:54:48.577Z"}
{"msg":"It may provide a path for v1.x chaincode containers as well as 'cloud native' chaincode.","username":"dave.enyeart","ts":"2019-03-07T01:56:04.254Z"}
{"msg":"BTW, I've created a Maintainer Meeting page in the Hyperledger wiki with meeting recordings: https://wiki.hyperledger.org/display/fabric/Maintainer+Meetings","username":"dave.enyeart","ts":"2019-03-07T01:57:09.176Z"}
{"msg":"BTW, I've created a Maintainer Meeting page in the NEW Hyperledger wiki with meeting recordings: https://wiki.hyperledger.org/display/fabric/Maintainer+Meetings","username":"dave.enyeart","ts":"2019-03-07T01:57:09.176Z"}
{"msg":"The new Confluence based wiki is much more powerful than the old wiki. It has native Jira integration, and we should be able to leverage it for all types of things including plans and design documents.","username":"dave.enyeart","ts":"2019-03-07T01:58:59.455Z"}
{"msg":"@dave.enyeart looking back at the comment, doesn't build and launch proposal addresses the comment Gari refers to. Ultimately we have to support both models (if only for a while) and the CRs just address that.","username":"muralisr","ts":"2019-03-07T02:59:56.362Z"}
{"msg":"@dave.enyeart looking back at the comment, doesn't sound like build and launch proposal addresses the comment Gari refers to. Ultimately we have to support both models (if only for a while) and the CRs just address that.","username":"muralisr","ts":"2019-03-07T02:59:56.362Z"}
{"msg":"I thought Matt was suggesting builder/launcher to support both peer-driven chaincode build/launch as well as external build/launch.","username":"dave.enyeart","ts":"2019-03-07T03:14:57.139Z"}
{"msg":"@dave.enyeart he is... but the CRs have to do with _what_ on launching (basically, to connect back for the old model or to serve for the new)","username":"muralisr","ts":"2019-03-07T13:22:46.114Z"}
{"msg":"@dave.enyeart he is... but the CRs have to do with _what_ on launching (basically, to connect back for the old model or to serve for the new) and so orthogonal to that on the face of it","username":"muralisr","ts":"2019-03-07T13:22:46.114Z"}
{"msg":"@dave.enyeart he is... but the CRs have to do with _what_ on launching (basically, to connect back or to serve) and so orthogonal to that on the face of it","username":"muralisr","ts":"2019-03-07T13:22:46.114Z"}
{"msg":"@dave.enyeart thanks for the link; i read it; not much there, but unless i am missing something, it sounds like more runtime objects to manage = more complex","username":"binhn","ts":"2019-03-07T14:59:14.924Z"}
{"msg":"it is a de-coupling to support multiple schemes without impacting peer code, like the cloud native","username":"dave.enyeart","ts":"2019-03-07T15:00:08.933Z"}
{"msg":"my question above is more about our support for backward compatibility in this new cc model and Gari's comment, which I like as it would simplify things ","username":"binhn","ts":"2019-03-07T15:00:39.178Z"}
{"msg":"Will defer that question to @sykesm as he has been focusing in this area","username":"dave.enyeart","ts":"2019-03-07T15:02:16.316Z"}
{"msg":"introducing another runtime object would not be necessary in that spirit as we would no longer need the old model","username":"binhn","ts":"2019-03-07T15:03:06.554Z"}
{"msg":"Has joined the channel.","username":"MHBauer","ts":"2019-03-07T18:32:26.977Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rangak","ts":"2019-03-07T20:51:02.339Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=3acwnKAe8sPsBQPTo) @dave.enyeart I have it working... what I wanted and asked for was a) review and b) some initial manual cleanup so we don't start with a mass abandon","username":"cbf","ts":"2019-03-07T20:55:15.888Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=3acwnKAe8sPsBQPTo","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=3acwnKAe8sPsBQPTo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"KyunghoKim","ts":"2019-03-12T03:09:44.936Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jlcs","ts":"2019-03-13T14:12:19.285Z","type":"uj"}
{"msg":"Has joined the channel.","username":"DimaPdc","ts":"2019-03-15T13:09:04.387Z","type":"uj"}
{"msg":"@here Proposal to retire dormant fabric maintainers, please +1 to indicate agreement https://gerrit.hyperledger.org/r/#/c/30130/","username":"dave.enyeart","ts":"2019-03-15T21:26:29.361Z"}
{"msg":"Has joined the channel.","username":"rohanshrothrium","ts":"2019-03-20T07:49:52.406Z","type":"uj"}
{"msg":"@here Maintainer call starting in the next few minutes: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-03-20T12:59:39.089Z"}
{"msg":"*Release update*: \n- *v1.4.1* - Release candidate targeted for end of March, final release early April. Raft support is 'green' from system test perspective and is available for use today in release-1.4 branch. \n- *v2.0 alpha* - Prioritized right after v1.4.1, target mid April release. The new chaincode lifecycle support and token support will be highlighted in the v2.0 alpha with small tutorials so that users can provide feedback. Targeting mid-year for final v2.0 release. \n\n*fabric-samples* proposal - Similar to what we did recently for fabric-ca, there is a proposal to shift fabric-samples project to a one +2 policy (non-author code review). Additionally there is a proposal to split fabric-samples from fabric in terms of maintainers, with initial set of maintainers based on contribution and review activity the past 6 months. \n\n*CI Update* We have been focusing on CI improvements including emphasis on test flakes and CI failures. There are a new set of widgets in the Fabric Bugs and Tech Debt dashboard to track CI issues based on the new labels `ci-blocker`, `ci-failure`, `ci-flake`, `ci-first-failure`: \n https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11706  ","username":"dave.enyeart","ts":"2019-03-20T13:00:29.834Z"}
{"msg":"for reference, the CR I abandoned I was talking about is https://gerrit.hyperledger.org/r/#/c/28887/","username":"lehors","ts":"2019-03-20T13:17:07.273Z"}
{"msg":"it did include a *change* to high-throughput that may still need to be applied, I will look into that","username":"lehors","ts":"2019-03-20T13:17:35.981Z"}
{"msg":"As mentioned on the maintainer call, here is the new wiki location for playback schedule and recordings: https://wiki.hyperledger.org/display/fabric/playbacks","username":"dave.enyeart","ts":"2019-03-20T13:25:45.144Z"}
{"msg":"And for maintainer meeting recordings: https://wiki.hyperledger.org/display/fabric/Maintainer+Meetings","username":"dave.enyeart","ts":"2019-03-20T13:25:46.808Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=2sPJwihLZxNBieyiW) after checking I see that high-throughput was fixed independently so we're good there","username":"lehors","ts":"2019-03-20T13:26:19.801Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2sPJwihLZxNBieyiW","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=2sPJwihLZxNBieyiW","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=usYDyFsq3YP9KQZPu) @dave.enyeart Do we think this should be extended to the other repos?","username":"mbwhite","ts":"2019-03-20T14:02:04.998Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=usYDyFsq3YP9KQZPu","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=usYDyFsq3YP9KQZPu","remote":true,"fileId":null,"fileName":null}]}
{"msg":"looks like gari is already on the case: https://gerrit.hyperledger.org/r/#/c/30251/","username":"sstone1","ts":"2019-03-20T14:07:42.394Z"}
{"msg":"@sstone1 need to follow up with a helpdesk ticket for the LDAP rejiggering","username":"rjones","ts":"2019-03-20T18:43:17.751Z"}
{"msg":"@mastersingh24 Jim is also in: ```hyperledger-gerrit-fabric-chaincode-java-committers\nhyperledger-gerrit-fabric-sdk-node-committers```","username":"rjones","ts":"2019-03-20T18:49:47.631Z"}
{"msg":"(that is his complete remaining membership)","username":"rjones","ts":"2019-03-20T18:50:01.997Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/q/owner:%22Jim+Zhang+%253Cjim_the_matrix%2540hotmail.com%253E%22","username":"rjones","ts":"2019-03-20T18:56:00.523Z"}
{"msg":"how do I turn off/mute logging during the tests? ","username":"MHBauer","ts":"2019-03-21T02:43:07.535Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=wpRRsyMqBAXHWTKq8) I found in the docs, and was told about `FABRIC_LOGGING_SPEC` which I used as `export FABRIC_LOGGING_SPEC=FATAL` to get some peace and quiet.","username":"MHBauer","ts":"2019-03-21T22:18:23.233Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=wpRRsyMqBAXHWTKq8","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=wpRRsyMqBAXHWTKq8","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@MHBauer redirected the q to #fabric-peer-endorser-committer ","username":"muralisr","ts":"2019-03-22T14:23:46.450Z"}
{"msg":"Has joined the channel.","username":"mbanerjee","ts":"2019-03-25T20:11:30.701Z","type":"uj"}
{"msg":"Is there a timeline for Hyperledger Fabric 2.0 release? If so, please share the details. Also is there going to be a GO SDK for Fabric? ","username":"mbanerjee","ts":"2019-03-25T20:13:02.745Z"}
{"msg":"Is there a timeline for Hyperledger Fabric 2.0 release? If so, please share the details. Also is there going to be a GO SDK for Fabric? ","username":"mbanerjee","ts":"2019-03-25T20:13:02.745Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-03-25T20:40:11.487Z","type":"ul"}
{"msg":"there is a go sdk for fabric. fabric-sdk-go repo. It is not part of the formal release yet, but it is pretty decent","username":"cbf","ts":"2019-03-26T10:18:13.148Z"}
{"msg":"As for the 2.0 release, we are working on 1.4.1 that integrates Raft consensus. Once that is out (shortly) we will be working on an alpha of 2.0","username":"cbf","ts":"2019-03-26T10:19:34.814Z"}
{"msg":"@cbf is Raft replacing or just augmenting Kafka?","username":"gregnotso","ts":"2019-03-26T14:08:04.165Z"}
{"msg":"we will see how it fares ","username":"yacovm","ts":"2019-03-26T14:08:21.074Z"}
{"msg":"Seems we have an issue with current master","username":"sykesm","ts":"2019-03-26T14:23:02.696Z"}
{"msg":"FAB-14700  Kafka2Raft validate broadcast","username":"sykesm","ts":"2019-03-26T14:23:20.659Z"}
{"msg":"```\n08:56:17 # github.com/hyperledger/fabric/orderer/consensus/migration_test [github.com/hyperledger/fabric/orderer/consensus/migration.test]\n08:56:17 orderer/consensus/migration/migration_test.go:461:29: undefined: etcdraft.Metadata\n08:56:17 orderer/consensus/migration/migration_test.go:462:19: undefined: etcdraft.Metadata\n08:56:17 orderer/consensus/migration/migration_test.go:486:20: undefined: etcdraft.Metadata\n08:56:21 Makefile:217: recipe for target 'linter' failed\n08:56:21 make: *** [linter] Error 2\n08:56:21 + '[' 2 '!=' 0 ']'\n08:56:21 + echo '------> make basic-checks native FAILED'\n08:56:21 ------> make basic-checks native FAILED\n08:56:21 + vote -m '\"code checks are failed\"' -l F1-VerifyBuild=-1\n08:56:21 + ssh -p 29418 hyperledger-jobbuilder@gerrit.hyperledger.org gerrit review 30374,2 --notify '\"NONE\"' -m '\"code checks are failed\"' -l F1-VerifyBuild=-1\n```","username":"sykesm","ts":"2019-03-26T14:23:37.443Z"}
{"msg":"@tock Could you please take a look?","username":"jyellick","ts":"2019-03-26T14:23:45.448Z"}
{"msg":"Has joined the channel.","username":"tock","ts":"2019-03-26T14:23:45.642Z","type":"uj"}
{"msg":"also, integration tests failed ias well","username":"sykesm","ts":"2019-03-26T14:23:47.783Z"}
{"msg":"also, integration tests failed as well","username":"sykesm","ts":"2019-03-26T14:23:47.783Z"}
{"msg":"integration test failures were introduced with something in the following:\n\n```\n$ git lol HEAD..origin/master\n\n*   c0a9673a1 (origin/master, origin/HEAD) Merge \"FAB-14700  Kafka2Raft validate broadcast\"\n|\\\n| * 2d924d0d8 FAB-14700  Kafka2Raft validate broadcast\n*   84408d3f2 Merge \"FAB-14777 remove unreferenced items from makefile\"\n|\\\n| * a12c8edc0 FAB-14777 remove unreferenced items from makefile\n*   d032f2cbc Merge \"FAB-14735 don't check consenters if wasn't changed\"\n|\\\n| * d1bdc3f32 FAB-14735 don't check consenters if wasn't changed\n*   878ed4bf9 Merge \"[FAB-14433] Add Raft links to Kafka doc\"\n|\\\n| * d5e139873 [FAB-14433] Add Raft links to Kafka doc\n* acf4c944d Merge \"[FAB-14432] Add Raft text to Upgrade doc\"\n* bd4c82c24 [FAB-14432] Add Raft text to Upgrade doc\n```\nif we exclude doc and makefile changes, it's in the orderer/kafka/migration area as well","username":"sykesm","ts":"2019-03-26T14:24:51.207Z"}
{"msg":"@jyellick @sykesm  already pushed a CR to fix this: https://gerrit.hyperledger.org/r/#/c/30409/","username":"tock","ts":"2019-03-26T14:26:12.037Z"}
{"msg":"yes - 7 minutes ago. ","username":"sykesm","ts":"2019-03-26T14:26:52.833Z"}
{"msg":"indeed","username":"tock","ts":"2019-03-26T14:27:23.187Z"}
{"msg":"were the integration test issues addressed as well?","username":"sykesm","ts":"2019-03-26T14:27:46.091Z"}
{"msg":"some other CR I need to look at?","username":"sykesm","ts":"2019-03-26T14:28:17.321Z"}
{"msg":"the CR passed all CI stages, including integration tests","username":"tock","ts":"2019-03-26T14:28:19.919Z"}
{"msg":"No other CRs, this fixes the problem.","username":"tock","ts":"2019-03-26T14:30:11.726Z"}
{"msg":"Has joined the channel.","username":"duwenhui","ts":"2019-03-28T04:20:06.959Z","type":"uj"}
{"msg":"@here We plan to cut Fabric v1.4.1-rc1 (release candidate) tomorrow, and then cut the final release in mid-April pending feedback from the community, especially on the new Raft feature that many are interested in trying.\n------------------------\nWith v1.4.1 behind us, we need renewed focus on the CI issues and flakes that have been increasingly impacting developer productivity. We will tackle on a few fronts:\n1) There are known issues with the CI infrastructure, specifically IO issues that increase test time and the chance of flakes, especially in timing dependent tests in areas such as gossip and Raft.\n1a) We are actively pursuing CI infrastructure improvements with Linux Foundation.\n1b) @rameshthoomu  is looking into shifting Fabric integration test job from x86 to s390 infrastructure, since integration test has gotten worse both in execution time and flakes. s390 infrastructure has been faster and less flakey than the Linux Foundation x86 infrastructure.\n2) Improve Fabric unit and integration tests - Fix flakes and refactor tests as needed to improve execution times throughout the project, with specific focus (but not limited to) gossip and orderer/Raft.\n--------------------------\nTo reiterate prior guidance around flakes --- we will only improve the situation if we are ALL vigilant about opening Jira bugs for flakes:\nWhen you see a unit/integration test failure in one of your CRs, paste the test error and associated Jira number into the gerrit comments so that people know it has been investigated ( @C0rWin  has volunteered to do this for some of the recently observed flakes).\nIf the ci-flake bug is already opened in Jira:\n- add a comment stating that you’ve seen it again. If this is the 2nd or 3rd time seen, go ahead and change bug priority to High. Worst offenders should be Highest priority and labeled with `ci-blocker`.\nIf a flake bug is not yet opened, please open a new Jira bug:\n- Put the test name in the Summary\n- Copy/paste the failure snippet into description\n- Fill in component (we will rely on squad leads and component owners to triage, starting with the High priorities)\n- Add label `ci-flake`.","username":"dave.enyeart","ts":"2019-03-28T17:02:12.032Z"}
{"msg":"Everybody should look at the Bugs and Tech Debt dashboard daily, especially the CI Blockers and CI Flakes:","username":"dave.enyeart","ts":"2019-03-28T17:06:30.427Z"}
{"msg":"--------------------------\nEverybody should look at the Bugs and Tech Debt dashboard daily, especially the CI Blockers and CI Flakes:","username":"dave.enyeart","ts":"2019-03-28T17:06:30.427Z"}
{"msg":"https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11706","username":"dave.enyeart","ts":"2019-03-28T17:06:31.809Z"}
{"msg":"@dave.enyeart dave, i have been working with a group people on the interop project, the working group has come up with a flow and some code to allow one to expand the network (adding new orgs to existing network), I would like to share what we came up with and the chaincode and programs with fabric developer community, when is the best time to show that to the fabric dev community?","username":"tongli","ts":"2019-03-28T17:14:53.570Z"}
{"msg":"@tongli Do you mean Fabric open source developers?  Or do you mean Fabric developer users?","username":"dave.enyeart","ts":"2019-03-28T17:25:13.911Z"}
{"msg":"open source developers @dave.enyeart ","username":"tongli","ts":"2019-03-28T17:31:22.799Z"}
{"msg":"@tongli Feel free to schedule yourself on the playback wiki... preferred timeslot is Tuesdays 10am US Eastern: https://wiki.hyperledger.org/display/fabric/playbacks","username":"dave.enyeart","ts":"2019-03-28T17:31:57.030Z"}
{"msg":"so how many people normally participate in that meeting?","username":"tongli","ts":"2019-03-28T17:32:18.973Z"}
{"msg":"we would like to get developers opinions on what we came up with and we also have few questions. more like a show and tell, and confirmation sort of things.","username":"tongli","ts":"2019-03-28T17:32:59.944Z"}
{"msg":"@dave.enyeart ^^^","username":"tongli","ts":"2019-03-28T17:34:07.148Z"}
{"msg":"around 15 usually","username":"dave.enyeart","ts":"2019-03-28T17:34:22.618Z"}
{"msg":"most of them are maintainers?","username":"tongli","ts":"2019-03-28T17:34:46.346Z"}
{"msg":"most of the maintainers try to attend, and then some others","username":"dave.enyeart","ts":"2019-03-28T17:34:47.507Z"}
{"msg":"cool. cool.","username":"tongli","ts":"2019-03-28T17:34:55.313Z"}
{"msg":"let me try to schedule a time on Tuesday then. Thanks @dave.enyeart ","username":"tongli","ts":"2019-03-28T17:35:24.592Z"}
{"msg":"I send invites to maintainers and presenters, and announce to others via mailing list and rocket chat","username":"dave.enyeart","ts":"2019-03-28T17:35:28.554Z"}
{"msg":"k. thanks again.","username":"tongli","ts":"2019-03-28T17:35:41.278Z"}
{"msg":"@jyellick and all @here We are getting a few final Raft doc fixes in this morning, then I will proceed with v1.4.1 release candidate.  Any other release candidate blockers?","username":"dave.enyeart","ts":"2019-03-29T12:47:37.245Z"}
{"msg":"awesome!","username":"cbf","ts":"2019-03-29T14:14:42.173Z"}
{"msg":"I have some conflicts the next couple hours, we'll start mid-afternoon.","username":"dave.enyeart","ts":"2019-03-29T15:00:15.909Z"}
{"msg":"@here MERGE FREEZE in release-1.4 while I prepare the release CR","username":"dave.enyeart","ts":"2019-03-29T18:01:08.773Z"}
{"msg":"@here I was planning to just do release candidate for fabric. However, I realized that in release-1.4 the version of Fabric is still tightly coupled with the version of java chaincode javaenv and node chaincode baseimage, therefore the rc would not work for java or node chaincodes.  I have a CR that allows Fabric to run with any 'latest' version of javaenv or baseimage: https://gerrit.hyperledger.org/r/#/c/30552/   ","username":"dave.enyeart","ts":"2019-03-29T21:18:33.568Z"}
{"msg":"@here I was planning to just do release candidate for fabric (not fabric-ca, chaincodes, sdks). However, I realized that in release-1.4 the version of Fabric is still tightly coupled with the version of java chaincode javaenv and node chaincode baseimage, therefore the rc would not work for java or node chaincodes.  I have a CR that allows Fabric to run with any 'latest' version of javaenv or baseimage: https://gerrit.hyperledger.org/r/#/c/30552/   ","username":"dave.enyeart","ts":"2019-03-29T21:18:33.568Z"}
{"msg":"@here I was planning to just do release candidate for fabric (not fabric-ca, chaincodes, sdks). However, I realized that in release-1.4 the version of Fabric is still tightly coupled with the version of java chaincode javaenv and node chaincode baseimage, therefore the rc would not work for java or node chaincodes.  I have a CR that allows Fabric to run with any 'latest' version of javaenv or baseimage: https://gerrit.hyperledger.org/r/#/c/30552/   .  This will enable fabric v1.4.1-rc1 to work with existing v1.4.0 chaincode images.","username":"dave.enyeart","ts":"2019-03-29T21:18:33.568Z"}
{"msg":"The same had been done by @mastersingh24 in v2.0 in FAB-11096 a couple months ago, but I only realized today that release-1.4 was not set up the same way. ","username":"dave.enyeart","ts":"2019-03-29T21:18:35.298Z"}
{"msg":"I suggest we merge this for the release candidate today. Then next week we can discuss whether to keep like this, or revert to prior behavior for the final v1.4.1 release.","username":"dave.enyeart","ts":"2019-03-29T21:19:56.009Z"}
{"msg":"Thoughts?","username":"dave.enyeart","ts":"2019-03-29T21:19:57.493Z"}
{"msg":"+1 as long as we test it ;) ","username":"yacovm","ts":"2019-03-29T21:25:10.356Z"}
{"msg":"I've tested locally, looks good","username":"dave.enyeart","ts":"2019-03-29T21:26:53.927Z"}
{"msg":"@yacovm can I talk you into upgrading your +1 to a +2?","username":"dave.enyeart","ts":"2019-03-29T21:46:11.581Z"}
{"msg":"Note, the merge job will also run SDK tests and node chaincode tests.  We wait for merge job to succeed before tagging and pushing to dockerhub","username":"dave.enyeart","ts":"2019-03-29T22:03:50.603Z"}
{"msg":"100 fungible fabtokens and you have my +2 ","username":"yacovm","ts":"2019-03-29T22:39:13.682Z"}
{"msg":"thanks, we're good now - pushing to dockerhub","username":"dave.enyeart","ts":"2019-03-29T23:46:19.412Z"}
{"msg":"i got a related question, do we have regression tests?","username":"guoger","ts":"2019-03-30T02:07:59.610Z"}
{"msg":"@guoger The merge job on the release CR (and any CR) does e2e regression tests. There is also a larger nightly test bucket. We also pull down the published images and binaries and run the automated tutorials against them. For example we did byfn (go, java, node chaincode, `-o etcdraft`), eyfn, fabcar. ","username":"dave.enyeart","ts":"2019-03-30T02:42:36.727Z"}
{"msg":"All is good - I've tagged fabric and fabric-samples with v1.4.1-rc1.","username":"dave.enyeart","ts":"2019-03-30T02:43:28.694Z"}
{"msg":"@dave.enyeart do those test against a mixed version of fabric? could you point me to the code? thx!","username":"guoger","ts":"2019-03-30T02:44:27.543Z"}
{"msg":"not mixed version, but the intent with the automated 'interop' tests is that you could pick any versions","username":"dave.enyeart","ts":"2019-03-30T02:45:37.275Z"}
{"msg":"not mixed version yet, but the intent with the automated 'interop' tests is that you could pick any versions","username":"dave.enyeart","ts":"2019-03-30T02:45:37.275Z"}
{"msg":"actually, regression test is a wrong word, i was mostly thinking of compatibility test","username":"guoger","ts":"2019-03-30T02:45:46.547Z"}
{"msg":"actually, i was wrong using word \"regression test\", i was mostly thinking of compatibility test","username":"guoger","ts":"2019-03-30T02:45:46.547Z"}
{"msg":"we are investing in this 'interop' suite","username":"dave.enyeart","ts":"2019-03-30T02:46:30.519Z"}
{"msg":"we do 'compatibility' tests with older SDKs and newer Fabric/Fabric-CA","username":"dave.enyeart","ts":"2019-03-30T02:47:00.182Z"}
{"msg":"we do 'compatibility' tests with older SDKs and newer Fabric/Fabric-CA, in order to support upgrades well","username":"dave.enyeart","ts":"2019-03-30T02:47:00.182Z"}
{"msg":"those are only semi-automated currently... somebody has to pull a certain SDK level and fabric level then run the SDK integration tests and look at results.  Typically those are run for minor releases not third digit releases.","username":"dave.enyeart","ts":"2019-03-30T02:49:03.375Z"}
{"msg":"those are only semi-automated currently... somebody has to pull a certain SDK level and fabric level then run the SDK integration tests and look at results.  Typically those are run for minor releases (2nd digit) not 3rd digit releases.","username":"dave.enyeart","ts":"2019-03-30T02:49:03.375Z"}
{"msg":"@latitiah could you do a brief show and tell this week on how far you've gotten with 'interop' tests and next steps?","username":"dave.enyeart","ts":"2019-03-30T02:51:11.368Z"}
{"msg":"actually, what promise do we have w.r.t compatibility? do we strictly follow semver? or as long as releases in 1.4.x are compatible with each other, we are good?","username":"guoger","ts":"2019-03-30T02:55:11.004Z"}
{"msg":"Fabric components are compatible within a major release, e.g. any 1.x.x.  Any exceptions to semver would be very rare and would be highlighted in release notes.  Crossing a major release boundary may see some incompatibilities, but again they are kept to a minimum and release noted, and typically gated behind a 'capability' in order to support networks with mixed versions.","username":"dave.enyeart","ts":"2019-03-30T03:11:41.370Z"}
{"msg":"Fabric components are compatible within a major release, e.g. any 1.x.x.  Any exceptions to semver would be very rare, require maintainer approval, and would be highlighted in release notes.  Crossing a major release boundary may see some incompatibilities, but again they are kept to a minimum and release noted, and typically gated behind a 'capability' in order to support networks with mixed versions.","username":"dave.enyeart","ts":"2019-03-30T03:11:41.370Z"}
{"msg":"Fabric components are compatible within a major release, e.g. any 1.x.x.  Any exceptions to semver would be very rare, require majority maintainer approval, and would be highlighted in release notes.  Crossing a major release boundary may see some incompatibilities, but again they are kept to a minimum and release noted, and typically gated behind a 'capability' in order to support networks with mixed versions.","username":"dave.enyeart","ts":"2019-03-30T03:11:41.370Z"}
{"msg":"Getting back to the v1.4.1-rc1 release... fabric and fabric-samples are tagged and can be downloaded. I've updated instructions at:","username":"dave.enyeart","ts":"2019-03-30T03:16:58.928Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/release-1.4/install.html","username":"dave.enyeart","ts":"2019-03-30T03:17:00.859Z"}
{"msg":"","username":"dave.enyeart","ts":"2019-03-30T03:17:20.286Z","attachments":[{"type":"file","title":"Clipboard - March 29, 2019 11:17 PM","title_link":"/file-upload/rEG565PBYgvXXY54k/Clipboard%20-%20March%2029,%202019%2011:17%20PM","image_url":"/file-upload/rEG565PBYgvXXY54k/Clipboard%20-%20March%2029,%202019%2011:17%20PM","image_type":"image/png","image_size":77878,"url":"/file-upload/rEG565PBYgvXXY54k/Clipboard%20-%20March%2029,%202019%2011:17%20PM","remote":false,"fileId":"rEG565PBYgvXXY54k","fileName":"Clipboard - March 29, 2019 11:17 PM"}]}
{"msg":"I plan to send a message to the mailing list along those lines on Saturday.... let me know if anybody has concerns with that approach","username":"dave.enyeart","ts":"2019-03-30T03:19:08.126Z"}
{"msg":"Final CRs to close out v1.4.1-rc1 release process:","username":"dave.enyeart","ts":"2019-03-30T03:27:33.155Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30559/","username":"dave.enyeart","ts":"2019-03-30T03:27:39.139Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30548/","username":"dave.enyeart","ts":"2019-03-30T03:27:48.572Z"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v1.4.1-rc1 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/5788\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2019-03-30T20:11:55.407Z"}
{"msg":"Great!","username":"baohua","ts":"2019-04-01T01:57:54.544Z"}
{"msg":"Maintainers - In preparation for the Alpha 2.0 release it would be good to get some more reviews on the FabToken documentation and you can take it for a spin - \nhttps://gerrit.hyperledger.org/r/#/c/29266/\nhttps://gerrit.hyperledger.org/r/#/c/30509/","username":"pandrejko","ts":"2019-04-02T12:15:03.508Z"}
{"msg":"Has joined the channel.","username":"gumballwabbit","ts":"2019-04-03T01:30:10.882Z","type":"uj"}
{"msg":"Hi, I am interested in contributing to the the Hyperledger Project by creating SDKs in dotnet and haskell, I see for that I need to put in a proposal, however, before creating a proposal, it says,","username":"gumballwabbit","ts":"2019-04-03T01:47:18.258Z"}
{"msg":"The seed of a new project has to be vetted in a public forum before creating a project proposal. It is best if the project has technical champions who believe in the project and are the maintainers of the project. The technical champions can change in the middle of the project.","username":"gumballwabbit","ts":"2019-04-03T01:47:20.265Z"}
{"msg":"where can i discuss these?","username":"gumballwabbit","ts":"2019-04-03T01:47:53.245Z"}
{"msg":"or is there a channel that this can be posted on","username":"gumballwabbit","ts":"2019-04-03T01:48:09.780Z"}
{"msg":"@here Maintainer meeting at the top of the hour: https://zoom.us/my/hyperledger.community.3\n\nAgenda topics so far: \n\nRelease update: \nv1.4.1-rc1 with Raft support and new operational metrics and health checks delivered March 29th: https://lists.hyperledger.org/g/fabric/message/5788 \nv2.0 alpha targeted for mid-April: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700 \n\nDocumentation Multi-Language Support Proposal from Rich Zhao:\nhttps://docs.google.com/document/d/1lOF9kxjN4hK0b4YzlEVsHO8BcB2BjA3CMSemkfdDTdM/edit?usp=sharing ","username":"dave.enyeart","ts":"2019-04-03T12:33:56.565Z"}
{"msg":"@here Maintainer meeting at the top of the hour: https://zoom.us/my/hyperledger.community.3\n\nAgenda topics so far:\n\nRelease update:\nv1.4.1-rc1 with Raft support and new operational metrics and health checks delivered March 29th: https://lists.hyperledger.org/g/fabric/message/5788\nv2.0 alpha targeted for mid-April: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700\n\nWe have a focused effort to address tech debt, especially in the area of unit test and integration test 'flakes' and execution time.\nSee the Bugs and Tech Debt dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11706\n\nUpdate to Coding Guidelines:\nhttps://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/1669/html/style-guides/go-style.html\n\nDocumentation Multi-Language Support Proposal from Rich Zhao.","username":"dave.enyeart","ts":"2019-04-03T12:33:56.565Z"}
{"msg":"@here Maintainer meeting at the top of the hour: https://zoom.us/my/hyperledger.community.3\n\nAgenda topics so far:\n\nRelease update:\nv1.4.1-rc1 with Raft support and new operational metrics and health checks delivered March 29th: https://lists.hyperledger.org/g/fabric/message/5788\nv2.0 alpha targeted for mid-April: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700\n\nWe have a focused effort to address tech debt, especially in the area of unit test and integration test 'flakes' and execution time.\nSee the Bugs and Tech Debt dashboard: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11706\n\nUpdate to Coding Guidelines:\nhttps://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/1669/html/style-guides/go-style.html\n\nDocumentation Multi-Language Support Proposal from Rich Zhao.\nhttps://docs.google.com/document/d/1lOF9kxjN4hK0b4YzlEVsHO8BcB2BjA3CMSemkfdDTdM/edit?usp=sharing ","username":"dave.enyeart","ts":"2019-04-03T12:33:56.565Z"}
{"msg":"Maintainer meeting recording is available at https://wiki.hyperledger.org/display/fabric/Maintainer+Meetings","username":"dave.enyeart","ts":"2019-04-03T15:12:35.482Z"}
{"msg":"fyi, I restarted my old win7 box and successfully used 1.4.1-rc1","username":"lehors","ts":"2019-04-04T16:06:55.738Z"}
{"msg":"fyi, I restarted my old win7 box and successfully used/tested 1.4.1-rc1","username":"lehors","ts":"2019-04-04T16:06:55.738Z"}
{"msg":"both within docker toolbox and within vagrant with a local build I was able to run","username":"lehors","ts":"2019-04-04T16:08:19.045Z"}
{"msg":"I tested with BYFN+EYFN","username":"lehors","ts":"2019-04-04T16:08:39.972Z"}
{"msg":"the longest was to go through all the system updates required after several months of downtime :)","username":"lehors","ts":"2019-04-04T16:10:05.799Z"}
{"msg":"`old win7 box`  - @lehors  we know it's your current box.  no need to be ashamed  LOL","username":"mastersingh24","ts":"2019-04-04T17:36:48.261Z"}
{"msg":"Guess Microsoft would like or hate it ;-)","username":"baohua","ts":"2019-04-08T13:40:37.214Z"}
{"msg":"@here We are targeting v2.0.0-alpha release for first half of this week, and v1.4.1 release for second half of this week. Please be judicious about merges into master and release-1.4 this week.  Nothing de-stabilizing please.","username":"dave.enyeart","ts":"2019-04-08T16:09:16.201Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=L4jHvHbhScKPWkgru) @dave.enyeart :thumbsup:","username":"baohua","ts":"2019-04-09T01:59:46.095Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=L4jHvHbhScKPWkgru","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=L4jHvHbhScKPWkgru","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30511/ token cli docs","username":"dave.enyeart","ts":"2019-04-09T12:02:50.394Z"}
{"msg":"@here I will CRs required for v2.0 alpha release:\nhttps://gerrit.hyperledger.org/r/#/c/30511/ token cli docs","username":"dave.enyeart","ts":"2019-04-09T12:02:50.394Z"}
{"msg":"@here I will post CRs required for v2.0 alpha release:\nhttps://gerrit.hyperledger.org/r/#/c/30511/ token cli docs","username":"dave.enyeart","ts":"2019-04-09T12:02:50.394Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30817/ byfn couchdb docs","username":"dave.enyeart","ts":"2019-04-09T12:03:12.306Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/29266/ fabtoken main doc","username":"dave.enyeart","ts":"2019-04-09T12:12:10.984Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30827/ Get BYFN to work with Java chaincode","username":"dave.enyeart","ts":"2019-04-09T12:28:44.772Z"}
{"msg":"@here I'm calling for a MERGE FREEZE in master branches today so that we can release v2.0.0-alpha","username":"dave.enyeart","ts":"2019-04-09T13:01:34.572Z"}
{"msg":"Let's merge only what is needed for v2.0.0-alpha","username":"dave.enyeart","ts":"2019-04-09T13:01:56.725Z"}
{"msg":"Need the above merged please","username":"dave.enyeart","ts":"2019-04-09T13:02:14.002Z"}
{"msg":"Any other must-have blockers for v2.0.0-alpha?","username":"dave.enyeart","ts":"2019-04-09T13:02:26.229Z"}
{"msg":"@here What's New for v2.0.0 Alpha doc: https://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html","username":"dave.enyeart","ts":"2019-04-09T14:30:06.529Z"}
{"msg":"Please review","username":"dave.enyeart","ts":"2019-04-09T14:30:10.465Z"}
{"msg":"I'll fix the couple broken links","username":"dave.enyeart","ts":"2019-04-09T14:30:22.438Z"}
{"msg":"I merged the updated Node SDK sample as well","username":"mastersingh24","ts":"2019-04-09T14:30:27.285Z"}
{"msg":"I merged the updated Node SDK token sample as well","username":"mastersingh24","ts":"2019-04-09T14:30:27.285Z"}
{"msg":"Thanks, we'll likely do Node SDK a few days later","username":"dave.enyeart","ts":"2019-04-09T14:30:47.370Z"}
{"msg":"Thanks, we'll likely release Node SDK a few days later","username":"dave.enyeart","ts":"2019-04-09T14:30:47.370Z"}
{"msg":"Most of the alpha material targets CLI","username":"dave.enyeart","ts":"2019-04-09T14:31:02.018Z"}
{"msg":"it was actually an update to fabric-samples","username":"mastersingh24","ts":"2019-04-09T14:31:05.478Z"}
{"msg":"https://gerrit.hyperledger.org/r/30309","username":"mastersingh24","ts":"2019-04-09T14:31:28.237Z"}
{"msg":"ok, since samples references 'unstable' snapshots should be ok","username":"dave.enyeart","ts":"2019-04-09T14:31:38.448Z"}
{"msg":"right","username":"mastersingh24","ts":"2019-04-09T14:31:43.513Z"}
{"msg":"For releases I typically update that to be the release version, but for alpha I'll keep as 'unstable'","username":"dave.enyeart","ts":"2019-04-09T14:32:04.912Z"}
{"msg":"I did not do a grammar check, but the release notes look good ;)","username":"mastersingh24","ts":"2019-04-09T14:33:55.474Z"}
{"msg":"Chaincode Node published version `2.0.0-alpha` tagged `alpha` https://www.npmjs.com/package/fabric-shim","username":"bretharrison","ts":"2019-04-09T15:22:40.151Z"}
{"msg":"Thanks","username":"dave.enyeart","ts":"2019-04-09T15:50:22.369Z"}
{"msg":"@here Please review fabric v2.0.0-release CR including release notes: https://gerrit.hyperledger.org/r/#/c/30833/","username":"dave.enyeart","ts":"2019-04-09T15:50:54.512Z"}
{"msg":"@here Please review fabric v2.0.0-alpha release CR including release notes: https://gerrit.hyperledger.org/r/#/c/30833/","username":"dave.enyeart","ts":"2019-04-09T15:50:54.512Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/30832/ fix What's New links","username":"dave.enyeart","ts":"2019-04-09T16:06:29.968Z"}
{"msg":"Need +2s on the two above CRs","username":"dave.enyeart","ts":"2019-04-09T18:48:05.198Z"}
{"msg":"@here  Need +2s on the two above CRs","username":"dave.enyeart","ts":"2019-04-09T18:48:05.198Z"}
{"msg":"@here  https://gerrit.hyperledger.org/r/#/c/30844/ fabric-ca release CR and release notes for review","username":"dave.enyeart","ts":"2019-04-09T19:59:39.608Z"}
{"msg":"Everything looks good with 2.0.0-alpha across fabric, fabric-ca, all three chaincode languages. Pushed to dockerhub. I will tag release.","username":"dave.enyeart","ts":"2019-04-10T03:35:14.940Z"}
{"msg":"Since there are some major announcements with 2.0.0-alpha, please review the proposed mailing list posting before I send it Wednesday:","username":"dave.enyeart","ts":"2019-04-10T06:53:58.824Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the v2.0 Alpha release.\n\nv2.0 is targeted for the middle of the year, but given there are some major new features coming, we wanted to provide plenty of time for the Fabric community to try it out and provide feedback.\n\nThe largest change you'll see is an improved lifecycle for managing chaincode that supports both centralized and decentralized governance models. The decentralized chaincode governance model enables organizations to come to agreement on a chaincode before it is made available for interacting with the ledger. Specifically, a sufficient number of organizations must approve the definition of a chaincode before it becomes active, as defined by configurable polices on a Fabric channel.\n\nThe v2.0 Alpha also provides Fabric's first native token support for your trial. Fabric tokens are governed by a UTXO model where tokens can be issued, transferred, and redeemed. All peers on a channel validate each transaction, ensuring the transactor's authorization to the tokens and preventing double spends.\n\nAlso, the Raft-based ordering service that is being delivered in Fabric v1.4.1 is also available in the v2.0 Alpha.\n\nFinally, the Fabric Docker images will now based on Alpine Linux, providing a more compact and secure container architecture.\n\nRefer to the What's New documentation for all the details:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nLet us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-04-10T06:54:08.323Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the v2.0 Alpha release.\n\nv2.0 is targeted for the middle of the year, but given there are some major new features coming, we wanted to provide plenty of time for the Fabric community to try it out and provide feedback.\n\nThe largest change you'll see is an improved lifecycle for managing chaincode that supports both centralized and decentralized governance models. The decentralized chaincode governance model enables organizations to come to agreement on a chaincode before it is made available for interacting with the ledger. Specifically, a sufficient number of organizations must approve the definition of a chaincode before it becomes active, as defined by configurable polices on a Fabric channel.\n\nThe v2.0 Alpha also provides Fabric's first native token support for your trial. Fabric tokens are governed by a UTXO model where tokens can be issued, transferred, and redeemed. All peers on a channel validate each transaction, ensuring the transactor's authorization to the tokens and preventing double spends.\n\nAlso, the Raft-based ordering service that is being delivered in Fabric v1.4.1 is also available in the v2.0 Alpha.\n\nFinally, the Fabric Docker images will now be based on Alpine Linux, providing a more compact and secure container architecture.\n\nRefer to the What's New documentation for all the details:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nLet us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-04-10T06:54:08.323Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the v2.0 Alpha release.\n\nv2.0 is targeted for the middle of the year, but given there are some major new features coming, we wanted to provide plenty of time for the Fabric community to try it out and provide feedback.\n\nThe largest change you'll see is an improved lifecycle for managing chaincode that supports both centralized and decentralized governance models. The decentralized chaincode governance model enables organizations to come to agreement on a chaincode before it is made available for interacting with the ledger. Specifically, a sufficient number of organizations must approve the definition of a chaincode before it becomes active, as defined by configurable policies on a Fabric channel.\n\nThe v2.0 Alpha also provides Fabric's first native token support for your trial. Fabric tokens are governed by a UTXO model where tokens can be issued, transferred, and redeemed. All peers on a channel validate each transaction, ensuring the transactor's authorization to the tokens and preventing double spends.\n\nAlso, the Raft-based ordering service that is being delivered in Fabric v1.4.1 is also available in the v2.0 Alpha.\n\nFinally, the Fabric Docker images will now be based on Alpine Linux, providing a more compact and secure container architecture.\n\nRefer to the What's New documentation for all the details:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nLet us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-04-10T06:54:08.323Z"}
{"msg":"Since I wasn't explicit... MERGE FREEZE lifted","username":"dave.enyeart","ts":"2019-04-10T11:58:36.796Z"}
{"msg":"LGTM thanks!","username":"cbf","ts":"2019-04-10T12:15:30.240Z"}
{"msg":"Hi folks - I'm wondering if there are any thoughts on a canonical import path for protos between various Fabric Go projects? Historically, the fabric-sdk-go project has contained the protos under its own namespace (github.com/hyperledger/fabric-sdk-go/...). There are some SDK functions that return the protobuf types (using the SDK’s copy of the protos, and therefore, the SDK’s types). Going forward, it would be nice if we could return compatible/canonical types. Would love to hear your thoughts.","username":"troyronda","ts":"2019-04-10T14:33:11.551Z"}
{"msg":"@sykesm has a roadmap in mind to address this, let's see if we can find him...","username":"dave.enyeart","ts":"2019-04-10T14:42:25.912Z"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v2.0.0-alpha RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/5851\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2019-04-10T14:52:26.098Z"}
{"msg":"@here We decided not to tag v2.0.0-alpha as `latest` in dockerhub, since that would confuse existing Fabric v1.4 LTS users. ","username":"dave.enyeart","ts":"2019-04-10T15:21:09.914Z"}
{"msg":"@MHBauer suggested not using `latest` ever, which I tend to agree with. ","username":"dave.enyeart","ts":"2019-04-10T15:21:16.825Z"}
{"msg":" It causes all kinds of confusion, as this article details pretty well: https://container-solutions.com/docker-latest-confusion/","username":"dave.enyeart","ts":"2019-04-10T15:21:22.694Z"}
{"msg":"With release v1.4.1 targeted for tomorrow, we have an opportunity to remove `latest` tag and release note it and announce it. Thoughts?","username":"dave.enyeart","ts":"2019-04-10T15:21:53.128Z"}
{"msg":"Discussed with Matt and we're thinking v2.0 release mid-year would be a good opportunity to retire `latest` tag","username":"dave.enyeart","ts":"2019-04-10T16:13:15.379Z"}
{"msg":"@here fabric maintainers - please use +1 to vote for a new list of fabric-samples maintainers as discussed at a prior maintainer call. The CR also proposes to switch fabric-samples to a single +2 non-author code review policy.","username":"dave.enyeart","ts":"2019-04-11T04:41:51.916Z"}
{"msg":"@here fabric maintainers - please use +1 to vote for a new list of fabric-samples maintainers as discussed at a prior maintainer call. The CR also proposes to switch fabric-samples to a single +2 non-author code review policy: https://gerrit.hyperledger.org/r/#/c/30885/","username":"dave.enyeart","ts":"2019-04-11T04:41:51.916Z"}
{"msg":"@here We will start release process for v1.4.1 across all components. I don't know of any blockers or CRs that need to get merged first. Let me know if you have any.","username":"dave.enyeart","ts":"2019-04-11T12:06:27.659Z"}
{"msg":"@here , I have not heard of any blockers so I will call for MERGE FREEZE in release-1.4 branches.","username":"dave.enyeart","ts":"2019-04-11T12:58:33.016Z"}
{"msg":"I've pushed release CR for fabric v1.4.1 for review: https://gerrit.hyperledger.org/r/#/c/30888/","username":"dave.enyeart","ts":"2019-04-11T12:59:03.546Z"}
{"msg":"@dave.enyeart we have to reschedule that again, we are not ready today to present. Can we push this back to 4/23 10:00am?","username":"tongli","ts":"2019-04-11T13:04:35.332Z"}
{"msg":"@tongli Sure thing","username":"dave.enyeart","ts":"2019-04-11T13:16:22.338Z"}
{"msg":"@tongli Please respond to the fabric mailing list announcement as such","username":"dave.enyeart","ts":"2019-04-11T13:16:57.068Z"}
{"msg":"@dave.enyeart Thanks very much!","username":"tongli","ts":"2019-04-11T13:46:27.050Z"}
{"msg":"@tongli you want me to send the fabric mailing list announcement, or are you doing it?","username":"dave.enyeart","ts":"2019-04-11T13:47:12.171Z"}
{"msg":"@dave.enyeart if you can, that will be awesome. ","username":"tongli","ts":"2019-04-11T13:47:45.464Z"}
{"msg":"doing now","username":"dave.enyeart","ts":"2019-04-11T13:47:50.460Z"}
{"msg":"thanks so much!","username":"tongli","ts":"2019-04-11T13:47:55.821Z"}
{"msg":"let's delete these messages... don't want to disrupt release messages","username":"dave.enyeart","ts":"2019-04-11T13:48:03.331Z"}
{"msg":"CI complete, I +2ed","username":"cbf","ts":"2019-04-11T14:19:27.243Z"}
{"msg":"Dave ... +2 as well ... you can do the merge honors when ready","username":"mastersingh24","ts":"2019-04-11T14:25:53.454Z"}
{"msg":"+1!","username":"baohua","ts":"2019-04-11T14:48:43.950Z"}
{"msg":"safe to merge","username":"yacovm","ts":"2019-04-11T14:56:33.379Z"}
{"msg":"@here And here's the fabric-ca release CR for review: https://gerrit.hyperledger.org/r/#/c/30891/","username":"dave.enyeart","ts":"2019-04-11T15:11:31.767Z"}
{"msg":"v1.4.1 released - tagged fabric, fabric-ca, fabric-chaincode-node, fabric-chaincode-java, fabric-sdk-node, fabric-samples","username":"dave.enyeart","ts":"2019-04-11T18:32:12.921Z"}
{"msg":"MERGE FREEZE lifted in release-1.4","username":"dave.enyeart","ts":"2019-04-11T18:32:32.657Z"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v1.4.1 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/5862\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2019-04-11T20:51:09.990Z"}
{"msg":"@here I will be out of office until April 23rd.","username":"dave.enyeart","ts":"2019-04-12T14:28:14.672Z"}
{"msg":"For the maintainer meeting next week I actually didn't have any special agenda topics yet... we walked through the v2.0 epics last time, and of course we've just released v2.0.0-alpha and v1.4.1. ","username":"dave.enyeart","ts":"2019-04-12T14:28:24.393Z"}
{"msg":"Some others are also out of office so we could potentially cancel it unless some agenda topics come up here.","username":"dave.enyeart","ts":"2019-04-12T14:28:33.511Z"}
{"msg":"@cbf could I ask you to make the call next week of whether the meeting is on or off? ","username":"dave.enyeart","ts":"2019-04-12T14:28:43.976Z"}
{"msg":"In terms of what's next, focus for the immediate term has shifted to closing down remaining odds and ends for v2.0, as well as tackling tech debt that has built up in various areas. ","username":"dave.enyeart","ts":"2019-04-12T14:28:53.970Z"}
{"msg":"Various maintainers are actively driving those debt items (you know who you are!).  ","username":"dave.enyeart","ts":"2019-04-12T14:29:00.578Z"}
{"msg":"See tech debt dashboard especially the right-side widgets:  https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11706 .","username":"dave.enyeart","ts":"2019-04-12T14:29:06.716Z"}
{"msg":"If you feel there is something else critical please tag it in Jira as v2.0 with priority Highest/High so that it gets visibility on the dashboard.","username":"dave.enyeart","ts":"2019-04-12T14:29:13.421Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-04-13T00:07:06.910Z","type":"uj"}
{"msg":"Could I ask Fabric maintainers to please join https://lists.hyperledger.org/g/maintainers ? I'd appreciate it.","username":"rjones","ts":"2019-04-13T00:07:18.448Z"}
{"msg":"Done, thanks!","username":"baohua","ts":"2019-04-13T09:18:45.083Z"}
{"msg":"Hi. Who could route this bug. We have a developer waiting for review of a design doc for IDEMIX implementation for node and they keep getting shuffled around. https://jira.hyperledger.org/browse/FABN-689?focusedCommentId=59222&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-59222","username":"rjones","ts":"2019-04-16T00:26:01.887Z"}
{"msg":"@cbf Above @dave.enyeart asked you to make the call whether we would hold the maintainers meeting or not.  What's the call?","username":"jyellick","ts":"2019-04-17T04:29:13.184Z"}
{"msg":"do we have an agenda?","username":"cbf","ts":"2019-04-17T12:07:25.200Z"}
{"msg":"I can drive if needed","username":"cbf","ts":"2019-04-17T12:07:46.565Z"}
{"msg":"@all lets do the maintainer call","username":"cbf","ts":"2019-04-17T12:08:17.275Z"}
{"msg":"I can drive","username":"cbf","ts":"2019-04-17T12:08:21.148Z"}
{"msg":"@dave.enyeart a few key people missing, but here's the jist of the call","username":"cbf","ts":"2019-04-17T13:25:20.338Z"}
{"msg":"lifecycle, programming model, raft and token epics well contained for 2.0","username":"cbf","ts":"2019-04-17T13:26:17.268Z"}
{"msg":"peer and chaincode cloud native support has had some reviews, @muralisr reworked, and could use some more reviews","username":"cbf","ts":"2019-04-17T13:27:02.534Z"}
{"msg":"we need an update from @JonathanLevi on IDEMIX revocation","username":"cbf","ts":"2019-04-17T13:27:59.588Z"}
{"msg":"we reviewed the tech debt backlog highlighting areas that need attention (espically flakes and highest priority)","username":"cbf","ts":"2019-04-17T13:28:41.065Z"}
{"msg":"Has joined the channel.","username":"davidkhala","ts":"2019-04-18T12:09:12.302Z","type":"uj"}
{"msg":"Dear maintainer, I am the creator of https://jira.hyperledger.org/browse/FABN-1185 ","username":"davidkhala","ts":"2019-04-18T12:11:17.736Z"}
{"msg":"I proposed it at the last night of 1.4.0, Bret appreciate the idea and wanted to work it out together, but I thought he is so occupied \n","username":"davidkhala","ts":"2019-04-18T12:13:04.734Z"}
{"msg":"I proposed it at the last night of 1.4.0, Bret appreciated the idea and wanted to work it out together, but maybe he is so occupied recently\n","username":"davidkhala","ts":"2019-04-18T12:13:04.734Z"}
{"msg":"Bret said : `I like your idea of the `connect` and would like to expand on it by making it the process to work with a peer or orderer. Make a `connect` or `open-session` call required by the application before using the orderer or peer. This will only be done once and then the endpoint would be usable. There could be a `ping` or some sort of connection check also.`","username":"davidkhala","ts":"2019-04-18T12:13:22.138Z"}
{"msg":"Bret said : I like your idea of the `connect` and would like to expand on it by making it the process to work with a peer or orderer. Make a `connect` or `open-session` call required by the application before using the orderer or peer. This will only be done once and then the endpoint would be usable. There could be a `ping` or some sort of connection check also.","username":"davidkhala","ts":"2019-04-18T12:13:22.138Z"}
{"msg":"During my progress, I find myself stuck one point that we have make decision whether to change the `connect` function in `ChannelEventHub` ","username":"davidkhala","ts":"2019-04-18T12:14:34.493Z"}
{"msg":"During my progress, I find myself stuck one point that we have to make decision whether to change the `connect` function in `ChannelEventHub` ","username":"davidkhala","ts":"2019-04-18T12:14:34.493Z"}
{"msg":"if we unify the usage of 'grpc.waitForReady', the `channelEventHub.connect` will be an `async/await` nodejs function, this pattern will conflict with current `callback` design","username":"davidkhala","ts":"2019-04-18T12:15:51.922Z"}
{"msg":"Maybe I could prepare a design document first?","username":"davidkhala","ts":"2019-04-18T12:16:51.124Z"}
{"msg":"","username":"richzhao","ts":"2019-04-22T23:12:56.357Z","attachments":[{"type":"file","title":"Clipboard - April 23, 2019 7:12 AM","title_link":"/file-upload/xvgwSh7QFjxuxE2KG/Clipboard%20-%20April%2023,%202019%207:12%20AM","image_url":"/file-upload/xvgwSh7QFjxuxE2KG/Clipboard%20-%20April%2023,%202019%207:12%20AM","image_type":"image/png","image_size":72437,"url":"/file-upload/xvgwSh7QFjxuxE2KG/Clipboard%20-%20April%2023,%202019%207:12%20AM","remote":false,"fileId":"xvgwSh7QFjxuxE2KG","fileName":"Clipboard - April 23, 2019 7:12 AM"}]}
{"msg":"dear maintainers, I created a change to support multi-languages in fabric docs, change: https://gerrit.hyperledger.org/r/#/c/31051/ issue: https://jira.hyperledger.org/browse/FAB-15246","username":"richzhao","ts":"2019-04-22T23:13:27.502Z"}
{"msg":"the change failed due to missing license in the translation file .PO in docs/source/locale/*,  .po and .pot files are translation files. it is not necessary to scan license for these files. ","username":"richzhao","ts":"2019-04-22T23:22:06.658Z"}
{"msg":"changed check_license.sh","username":"richzhao","ts":"2019-04-22T23:31:10.390Z"}
{"msg":"Has joined the channel.","username":"Antimttr","ts":"2019-04-29T21:31:49.170Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tijohnson","ts":"2019-04-30T20:03:14.566Z","type":"uj"}
{"msg":"@here RocketChat will be be offline for an upgrade today @17:00EST\nShould be back on-line withing 30mins","username":"tijohnson","ts":"2019-04-30T20:05:02.368Z"}
{"msg":"@here RocketChat will be be offline for an upgrade today @17:00EST\nShould be back on-line within 30mins","username":"tijohnson","ts":"2019-04-30T20:05:02.368Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=4So5r6vZhaxTL9rWo) @davidkhala We should discuss these issues on the NodeSDK channel","username":"bretharrison","ts":"2019-04-30T20:16:42.374Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4So5r6vZhaxTL9rWo","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4So5r6vZhaxTL9rWo","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@here  Sorry for the late notice but we had to cancel the RocketChat Update I will reschedule","username":"tijohnson","ts":"2019-04-30T21:04:22.015Z"}
{"msg":"@tijohnson out of curiosity - what changes would we see in the new version?  Any new features?","username":"mbwhite","ts":"2019-05-01T08:36:17.524Z"}
{"msg":"@here  For maintainer meeting today, I can do a quick release update, any other agenda topics for today?","username":"dave.enyeart","ts":"2019-05-01T12:54:10.071Z"}
{"msg":"I'd like to discuss fabric-samples ... specifically byfn  ;)","username":"mastersingh24","ts":"2019-05-01T12:55:06.585Z"}
{"msg":"maintainer meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-05-01T13:01:09.570Z"}
{"msg":"shoot, my calendar entry was off by 1h :(","username":"lehors","ts":"2019-05-01T13:44:57.362Z"}
{"msg":"@mastersingh24 I'm curious to know what you wanted to talk about regarding byfn","username":"lehors","ts":"2019-05-01T13:45:29.762Z"}
{"msg":"We need to stop treating byfn as \"tutorials\" by script.\nbyfn should simply stand up some basic topologies and stop there","username":"mastersingh24","ts":"2019-05-01T14:07:54.981Z"}
{"msg":"e.g. no channel creation, no chaincode install, no chaincode instantiation, etc\nno add an org\nno add this / add that","username":"mastersingh24","ts":"2019-05-01T14:08:44.724Z"}
{"msg":"it sounds like what basic-network was meant to be","username":"lehors","ts":"2019-05-01T14:17:13.230Z"}
{"msg":"it sounds like what basic-network is meant to be","username":"lehors","ts":"2019-05-01T14:17:13.230Z"}
{"msg":"what difference do you see between the two?","username":"lehors","ts":"2019-05-01T14:18:01.014Z"}
{"msg":"Frankly, we could probably get rid of basic network","username":"mastersingh24","ts":"2019-05-01T14:26:18.647Z"}
{"msg":"although it is \"lighter weight\"","username":"mastersingh24","ts":"2019-05-01T14:26:42.873Z"}
{"msg":"I was already planning on doing that as soon as I get FabCar running on top of BYFN (it's there in 1.4, just need to make the 2.0 lifecycle changes)","username":"sstone1","ts":"2019-05-01T14:26:50.614Z"}
{"msg":"but I think having 1 place which stands up topologies is best approach.","username":"mastersingh24","ts":"2019-05-01T14:27:56.699Z"}
{"msg":"> no channel creation\nhow do you see that fitting in with the samples that would deploy to those topologies? would the samples create their own channels?","username":"sstone1","ts":"2019-05-01T14:28:47.502Z"}
{"msg":"We could consider creating a default channel .... I was torn on that one given our lack of tolling in that area","username":"mastersingh24","ts":"2019-05-01T14:32:48.389Z"}
{"msg":"We could consider creating a default channel .... I was torn on that one given our lack of tooling in that area","username":"mastersingh24","ts":"2019-05-01T14:32:48.389Z"}
{"msg":"probably makes the most sense","username":"mastersingh24","ts":"2019-05-01T14:33:24.981Z"}
{"msg":"one of the other things that is related that could use some discussion - all of our samples have deployment scripts that go through the chaincode deploy process - e.g. https://github.com/hyperledger/fabric-samples/blob/master/high-throughput/scripts/install-chaincode.sh","username":"sstone1","ts":"2019-05-01T14:47:14.377Z"}
{"msg":"we could pull all of that out into a single set of sample operational scripts for working with BYFN, and have the samples call those instead","username":"sstone1","ts":"2019-05-01T14:48:25.279Z"}
{"msg":"well, that's the challenge in my opinion @sstone1. Every time someone needs a variation of byfn they make a copy and modify it - it actually started with e2e and basic-network, then byfn, and so on","username":"lehors","ts":"2019-05-01T15:55:13.261Z"}
{"msg":"I agree that it would be good to refactor all this into something more generic that could be built on instead of copied and modified every time","username":"lehors","ts":"2019-05-01T15:56:02.123Z"}
{"msg":"but we would also need some discipline not to repeat the same pattern again and again","username":"lehors","ts":"2019-05-01T15:56:35.397Z"}
{"msg":"and by the way, I've been looking at your work on fabcar and waiting for that to complete as well - your CRs need some work to get them up to date - I'll be happy to review them once you've done that","username":"lehors","ts":"2019-05-01T15:58:45.073Z"}
{"msg":"great, thanks - hoping to get back to that this week!","username":"sstone1","ts":"2019-05-01T16:05:48.139Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=9fooi7xLKwvf94Z3F) @lehors having personally copied both byfn and first-network to have a 'real' environment to test against, yes, I've done that.","username":"MHBauer","ts":"2019-05-01T18:08:01.288Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=9fooi7xLKwvf94Z3F","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=9fooi7xLKwvf94Z3F","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@mbwhite the new feature is modern mobile clients for Android can connect to it 🤪","username":"rjones","ts":"2019-05-01T18:43:44.561Z"}
{"msg":"Concerning samples, we've talked a few times and I think we are for the most part aligned: Finish shifting Fabcar to first-network, retire basic network, split first-network into a network only sample that can optionally have various chaincode samples deployed against it. If the deployment pattern can be re-used, all the better.  @sstone1 is this all something that your team can take as a mission? ","username":"dave.enyeart","ts":"2019-05-01T20:31:44.292Z"}
{"msg":"if basic network is retired what happens with fabtoken?","username":"gregnotso","ts":"2019-05-02T00:21:04.055Z"}
{"msg":"it's probably just be a matter of terminology because I think the end result is essentially the same but I think instead of retiring basic-network and splitting first-network what we need is to update basic-network and change first-network to build on that","username":"lehors","ts":"2019-05-02T07:33:17.079Z"}
{"msg":"I just don't know what we would call the \"network only sample\" that we'd split off of first-network other than basic-network :)","username":"lehors","ts":"2019-05-02T07:34:09.850Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=e4Ym5N4FaNd0GMmArX) @rjones ah :-) that will be useful...","username":"mbwhite","ts":"2019-05-02T07:54:57.672Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=e4Ym5N4FaNd0GMmArX","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=e4Ym5N4FaNd0GMmArX","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=y4XrYH8fmQs3Mgpyd) @dave.enyeart yeah, definitely","username":"sstone1","ts":"2019-05-02T08:37:16.893Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=y4XrYH8fmQs3Mgpyd","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=y4XrYH8fmQs3Mgpyd","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@lehors Basic network has one org with one peer.  First network has two orgs with two peers each.  As such you can do much more interesting things with first network.  In this way the new network only sample will look more like first network than basic network. But you are right, it is will be like basic network in that it doesn't come tightly coupled with a chaincode scenario.... rather various chaincode scenarios can be layered on top.","username":"dave.enyeart","ts":"2019-05-02T10:09:55.780Z"}
{"msg":"@lehors Basic network has one org with one peer.  First network has two orgs with two peers each.  As such you can do much more interesting things with first network.  In this way the new network only sample will look more like first network than basic network. But you are right, it will be like basic network in that it doesn't come tightly coupled with a chaincode scenario.... rather various chaincode scenarios can be layered on top.","username":"dave.enyeart","ts":"2019-05-02T10:09:55.780Z"}
{"msg":"@dave.enyeart I understand the difference, when I said \"update basic-network\" I was talking about making it compatible with first-network - so indeed, I would extend it to two orgs","username":"lehors","ts":"2019-05-02T13:51:49.930Z"}
{"msg":"that's why I said I think it's more a matter of terminology, I think we have agreement on the end goal","username":"lehors","ts":"2019-05-02T13:52:18.854Z"}
{"msg":"for what it's worth, I've not been able to make basic-network work with 2.0","username":"lehors","ts":"2019-05-02T13:52:46.298Z"}
{"msg":"I can't seem to get a config that works","username":"lehors","ts":"2019-05-02T13:53:40.396Z"}
{"msg":"it always fails to satisfy the endorsement policy","username":"lehors","ts":"2019-05-02T13:54:22.221Z"}
{"msg":"but I don't know enough about how that works to know if it's just me missing something or if there is an actual problem because I'm hitting some edge case - one single org","username":"lehors","ts":"2019-05-02T13:55:38.109Z"}
{"msg":"Good morning Fabric Maintainers. With the launch of our Fabric-based network Verified.Me, I thought it would be great to share with you some of our next open steps. We would also like to contribute components to the larger Hyperledger community. Here is a link to a document providing an introduction to where we are going: https://docs.google.com/document/d/1ENMO-S7i0ef09IRx5teE-eJbRMFsaKSXEdatcufvjPM/edit?usp=sharing.","username":"troyronda","ts":"2019-05-02T14:01:29.128Z"}
{"msg":"Has joined the channel.","username":"george.aristy","ts":"2019-05-02T15:47:34.347Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=qAEDJRTutCmQY2JwQ) @troyronda interesting interop proposal! Does the DID part is based on Indy project or some other? ","username":"davidkhala","ts":"2019-05-03T03:40:06.142Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qAEDJRTutCmQY2JwQ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qAEDJRTutCmQY2JwQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@davidkhala The proposal includes enabling Fabric as a DID ledger. (And build interop to Aries).","username":"troyronda","ts":"2019-05-03T11:15:57.122Z"}
{"msg":"@troyronda is there usage of the `ursa` libraries in fabic as part of your project? how did you guys overcome the \"language\" gap? the ursa crypto is rust isn't it? ","username":"yacovm","ts":"2019-05-03T13:08:07.933Z"}
{"msg":"@yacovm So far, we have been building the Fabric-based components in Go (without ursa) ... and we are working on moving the code to public GitHub repos (I'll post the links).","username":"troyronda","ts":"2019-05-03T13:37:17.311Z"}
{"msg":"(I would like to look more into ursa (yes, rust) and Go language bindings, particularly for working on Aries-compatible edge components).","username":"troyronda","ts":"2019-05-03T13:40:32.472Z"}
{"msg":"Has joined the channel.","username":"levanto","ts":"2019-05-10T11:15:19.171Z","type":"uj"}
{"msg":"Has left the channel.","username":"levanto","ts":"2019-05-10T11:15:32.302Z","type":"ul"}
{"msg":"hi maintainers, we recently test fabric 1.4.1 using perf test framework caliper, we found a odd high cpu cost by time.Now. ","username":"grapebaba","ts":"2019-05-13T07:49:48.996Z"}
{"msg":"I report a bug https://jira.hyperledger.org/browse/FAB-15432","username":"grapebaba","ts":"2019-05-13T07:50:00.626Z"}
{"msg":"Does any one have the latest performance numbers (tps)? Please share. thanks. ","username":"mbanerjee","ts":"2019-05-14T03:55:38.235Z"}
{"msg":"@here Many maintainers are traveling or otherwise out of office this week.  Let's cancel Wednesday's maintainer meeting and resume in two weeks. I'll leave a note in the zoom meeting to contact us here in case others show up with any topics.","username":"dave.enyeart","ts":"2019-05-15T02:47:27.092Z"}
{"msg":"Has joined the channel.","username":"chinmay213211","ts":"2019-05-23T07:03:33.170Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dereckluo","ts":"2019-05-23T17:54:51.432Z","type":"uj"}
{"msg":"any way to track down if a TODO in the code is being tracked anywhere? ","username":"MHBauer","ts":"2019-05-23T21:55:29.847Z"}
{"msg":"For example, https://github.com/hyperledger/fabric/blame/2a55639248c8e9e2092f65ca02015f2713239356/core/peer/peer.go#L362-L368 has existed for a couple of years, and ripples inside of gossip, for as far as I can tell, a bunch of dead code. In that case, if the true practice is \"suspect everything\" then we might as well just code it that way instead of injecting a noop so far down.","username":"MHBauer","ts":"2019-05-23T22:05:44.296Z"}
{"msg":"can you please point at the dead code? ","username":"yacovm","ts":"2019-05-24T09:54:55.583Z"}
{"msg":"and this isn't a noop, it's a co-noop. ","username":"yacovm","ts":"2019-05-24T10:00:31.010Z"}
{"msg":"i can't see it, @MHBauer :/ ","username":"yacovm","ts":"2019-05-24T14:28:34.641Z"}
{"msg":"@yacovm lines 362-368:","username":"rjones","ts":"2019-05-24T14:51:10.156Z"}
{"msg":"```\t\tservice.GetGossipService().SuspectPeers(func(identity api.PeerIdentityType) bool {\n\t\t\t// TODO: this is a place-holder that would somehow make the MSP layer suspect\n\t\t\t// that a given certificate is revoked, or its intermediate CA is revoked.\n\t\t\t// In the meantime, before we have such an ability, we return true in order\n\t\t\t// to suspect ALL identities in order to validate all of them.\n\t\t\treturn true\n})```","username":"rjones","ts":"2019-05-24T14:51:22.055Z"}
{"msg":"it's not dead code. dead code is code that doesn't do anything","username":"yacovm","ts":"2019-05-24T14:51:39.991Z"}
{"msg":"perhaps he chose the word \"dead\" inartfully?","username":"rjones","ts":"2019-05-24T14:52:46.212Z"}
{"msg":"I'm not making his argument for him, I thought you couldn't see the GitHub highlights :)","username":"rjones","ts":"2019-05-24T14:53:15.436Z"}
{"msg":"it's possible to refactor and remove the predicate and just make the loop inside the gossip code re-validate all identities anyway, but then you'll only end up removing the predicate but still not removing the functions themselves.","username":"yacovm","ts":"2019-05-24T14:53:32.137Z"}
{"msg":"so instead of `SuspectPeers(func(api.PeerIdentityType))` you'll have `SuspectPeers()`","username":"yacovm","ts":"2019-05-24T14:53:56.263Z"}
{"msg":"however I am sure we have bigger problems than this","username":"yacovm","ts":"2019-05-24T14:54:38.672Z"}
{"msg":"however I am ~ sure ~ know we have bigger problems than this","username":"yacovm","ts":"2019-05-24T14:54:38.672Z"}
{"msg":"however I ~ am  sure ~ know we have bigger problems than this","username":"yacovm","ts":"2019-05-24T14:54:38.672Z"}
{"msg":"How to trigger CI via gerrit reply now? seems that none of `Run VerifyBuild`/`Run [Integration|Unit]Test`/`Reverify` work...","username":"guoger","ts":"2019-05-26T13:06:26.082Z"}
{"msg":"@guoger CI has been dead the entire weekend","username":"yacovm","ts":"2019-05-26T13:57:30.021Z"}
{"msg":"my stuff isn't building too","username":"yacovm","ts":"2019-05-26T13:57:53.006Z"}
{"msg":"yeah... just saw the conversation in #fabric-ci ","username":"guoger","ts":"2019-05-26T13:57:59.509Z"}
{"msg":":(","username":"guoger","ts":"2019-05-26T13:58:09.818Z"}
{"msg":"Looks like it's building now","username":"rjones","ts":"2019-05-28T14:47:38.186Z"}
{"msg":"Same finding, and it works now.","username":"baohua","ts":"2019-05-29T00:17:34.498Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/fabric/+/31519/","username":"baohua","ts":"2019-05-29T00:18:03.210Z"}
{"msg":"Topics for today's maintainer meeting:","username":"dave.enyeart","ts":"2019-05-29T12:34:41.253Z"}
{"msg":"*RELEASE UPDATE - v1.4 LTS*\nQuarterly releases continue - v1.4.2 scheduled for beginning of July.\nIn addition to bug fixes, there are some noteworthy improvements targeted for v1.4.2 that will require capability updates:\nFAB-15041 Kafka to Raft consensus-type migration\nFAB-14307 Peer administration: Rollback a channel's ledger on a peer, while preserving private data\nFAB-7559 Move ordering service endpoints into OrdererOrg groups\nNote - Due to the capability update, we could call this a v1.5 release, and state that v1.x LTS includes v1.4 and above (other projects such as Node.js take this approach). Thoughts?\nv1.4.2 Features, Stories, Tasks: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11429#Filter-Results/12660","username":"dave.enyeart","ts":"2019-05-29T12:34:49.566Z"}
{"msg":"*RELEASE UPDATE - v1.4 LTS*\nQuarterly releases continue - v1.4.2 scheduled for beginning of July.\nIn addition to bug fixes, there are some noteworthy improvements targeted for v1.4.2 that will require capability updates:\n* FAB-15041 Kafka to Raft consensus-type migration\n* FAB-14307 Peer administration: Rollback a channel's ledger on a peer, while preserving private data\n* FAB-7559 Move ordering service endpoints into OrdererOrg groups\nNote - Due to the capability update, we could call this a v1.5 release, and state that v1.x LTS includes v1.4 and above (other projects such as Node.js take this approach). Thoughts?\nv1.4.2 Features, Stories, Tasks: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11429#Filter-Results/12660","username":"dave.enyeart","ts":"2019-05-29T12:34:49.566Z"}
{"msg":"*RELEASE UPDATE - v2.0*\n\nWith a healthy v1.4 LTS in the market, the maintainers are taking the time to ensure that v2.0 can serve as the basis for future extensions. As such, code, test, and CI is being refactored prior to a v2.0 release later this year.\n\nhttps://jira.hyperledger.org/browse/FAB-15337 captures some of the important changes planned for v2.0:\n* FAB-15499 Support upgrade to v2 (including rebuilding of ledger databases to v2 format)\n* FAB-5177 peer/ccenv should not include the shim - chaincodes must vendor the shim\n* FAB-15366 As a go chaincode developer, I want to free myself from the go-logging dependency\n* FAB-15390 As a fabric maintainer, I want to remove unnecessary endpoints and APIs that overlap with the operations service\n* FAB-15351 Stop publishing 3rd party images - More official Kafka, Zookeeper, CouchDB images available on dockerhub\n* FAB-15338 Remove support for Go plugins - The Go community has found that plugin approach to be not very practical.\n* FAB-15367 Move shim.MockStub to shimtest package and deprecate for removal\n\nv2.0 Epics to highlight: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700\n* FAB-11237 Chaincode lifecycle - 2.0 improvements\n* FAB-10889 Chaincode lifecycle - implicit org-specific collections (enables lifecycle 'voting')\n* FAB-12221 Validator/Committer refactor - make validation code maintainable and prepare for post-order execution additions.\n* FAB-14513 Fabric performance improvements - v2.x (state db cache, note - unmarshaled block cache not needed due to validation refactor)\n* FAB-13582 Peer and Chaincode cloud native deployment support - Phase 1\n* Note: FabToken from v2.0 alpha not expected to be released in v2.0. Based on alpha feedback, the maintainers are evaluating broader post-order execution and privacy capabilities before delivering FabToken in its current form.\nProgramming model updates (various FABs)","username":"dave.enyeart","ts":"2019-05-29T12:34:57.670Z"}
{"msg":"---------------------","username":"dave.enyeart","ts":"2019-05-29T12:34:57.670Z"}
{"msg":"*RELEASE UPDATE - v2.0*\n\nWith a healthy v1.4 LTS in the market, the maintainers are taking the time to ensure that v2.0 can serve as the basis for future extensions. As such, code, test, and CI is being refactored prior to a v2.0 release later this year.\n\nhttps://jira.hyperledger.org/browse/FAB-15337 captures some of the important changes planned for v2.0:\n* FAB-15499 Support upgrade to v2 (including rebuilding of ledger databases to v2 format)\n* FAB-5177 peer/ccenv should not include the shim - chaincodes must vendor the shim\n* FAB-15366 As a go chaincode developer, I want to free myself from the go-logging dependency\n* FAB-15390 As a fabric maintainer, I want to remove unnecessary endpoints and APIs that overlap with the operations service\n* FAB-15351 Stop publishing 3rd party images - More official Kafka, Zookeeper, CouchDB images available on dockerhub\n* FAB-15338 Remove support for Go plugins - The Go community has found that plugin approach to be not very practical.\n* FAB-15367 Move shim.MockStub to shimtest package and deprecate for removal\n\nv2.0 Epics to highlight: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700\n* FAB-11237 Chaincode lifecycle - 2.0 improvements\n* FAB-10889 Chaincode lifecycle - implicit org-specific collections (enables lifecycle 'voting')\n* FAB-12221 Validator/Committer refactor - make validation code maintainable and prepare for post-order execution additions.\n* FAB-14513 Fabric performance improvements - v2.x (state db cache, note - unmarshaled block cache not needed due to validation refactor)\n* FAB-13582 Peer and Chaincode cloud native deployment support - Phase 1\n* Note: FabToken from v2.0 alpha not expected to be released in v2.0. Based on alpha feedback, the maintainers are evaluating broader post-order execution and privacy capabilities before delivering FabToken in its current form.\nProgramming model updates (various FABs)","username":"dave.enyeart","ts":"2019-05-29T12:35:21.798Z"}
{"msg":"*RELEASE UPDATE - v2.0*\n\nWith a healthy v1.4 LTS in the market, the maintainers are taking the time to ensure that v2.0 can serve as the basis for future extensions. As such, code, test, and CI is being refactored prior to a v2.0 release later this year.\n\nhttps://jira.hyperledger.org/browse/FAB-15337 captures some of the important changes planned for v2.0:\n* FAB-15499 Support upgrade to v2 (including rebuilding of ledger databases to v2 format)\n* FAB-5177 peer/ccenv should not include the shim - chaincodes must vendor the shim\n* FAB-15366 As a go chaincode developer, I want to free myself from the go-logging dependency\n* FAB-15390 As a fabric maintainer, I want to remove unnecessary endpoints and APIs that overlap with the operations service\n* FAB-15351 Stop publishing 3rd party images - More official Kafka, Zookeeper, CouchDB images available on dockerhub\n* FAB-15338 Remove support for Go plugins - The Go community has found that plugin approach to be not very practical.\n* FAB-15367 Move shim.MockStub to shimtest package and deprecate for removal\n\nv2.0 Epics to highlight: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700\n* FAB-11237 Chaincode lifecycle - 2.0 improvements\n* FAB-10889 Chaincode lifecycle - implicit org-specific collections (enables lifecycle 'voting')\n* FAB-12221 Validator/Committer refactor - make validation code maintainable and prepare for post-order execution additions.\n* FAB-14513 Fabric performance improvements - v2.x (state db cache, note - unmarshaled block cache not needed due to validation refactor)\n* FAB-13582 Peer and Chaincode cloud native deployment support - Phase 1\n* Programming model updates (various FABs)\n* Note: FabToken from v2.0 alpha not expected to be released in v2.0. Based on alpha feedback, the maintainers are evaluating broader post-order execution and privacy capabilities before delivering FabToken in its current form.","username":"dave.enyeart","ts":"2019-05-29T12:35:21.798Z"}
{"msg":"*RELEASE UPDATE - v2.0*\n\nWith a healthy v1.4 LTS in the market, the maintainers are taking the time to ensure that v2.0 can serve as the basis for future extensions. As such, code, test, and CI is being refactored prior to a v2.0 release later this year.\n\nhttps://jira.hyperledger.org/browse/FAB-15337 captures some of the important changes planned for v2.0:\n* FAB-5177 peer/ccenv should not include the shim - chaincodes must vendor the shim\n* FAB-15366 As a go chaincode developer, I want to free myself from the go-logging dependency\n* FAB-15390 As a fabric maintainer, I want to remove unnecessary endpoints and APIs that overlap with the operations service\n* FAB-15351 Stop publishing 3rd party images - More official Kafka, Zookeeper, CouchDB images available on dockerhub\n* FAB-15338 Remove support for Go plugins - The Go community has found that plugin approach to be not very practical.\n* FAB-15367 Move shim.MockStub to shimtest package and deprecate for removal\n* FAB-15499 Support upgrade to v2 (including rebuilding of ledger databases to v2 format)\n\nv2.0 Epics to highlight: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11700\n* FAB-11237 Chaincode lifecycle - 2.0 improvements\n* FAB-10889 Chaincode lifecycle - implicit org-specific collections (enables lifecycle 'voting')\n* FAB-12221 Validator/Committer refactor - make validation code maintainable and prepare for post-order execution additions.\n* FAB-14513 Fabric performance improvements - v2.x (state db cache, note - unmarshaled block cache not needed due to validation refactor)\n* FAB-13582 Peer and Chaincode cloud native deployment support - Phase 1\n* Programming model updates (various FABs)\n* Note: FabToken from v2.0 alpha not expected to be released in v2.0. Based on alpha feedback, the maintainers are evaluating broader post-order execution and privacy capabilities before delivering FabToken in its current form.","username":"dave.enyeart","ts":"2019-05-29T12:35:21.798Z"}
{"msg":"---------------------","username":"dave.enyeart","ts":"2019-05-29T12:35:28.880Z"}
{"msg":"*PROPOSAL FOR A GATED MULTI-BRANCH JENKINS PIPELINE - DEMO*\nFabric's current monolithic CI system is based on a single branch strategy. In the current state, end-to-end testing is performed after a changeset becomes part of the codebase. This allows for code that doesn't function in the end-to-end tests to potentially become part of Fabrics \"production\" branch. Moreover it provides no incentive for developers to fix broken code because their changes have already made it into the codebase. This proposal presents a gated, multi-branch strategy written in Jenkins Pipeline that ensures code never becomes part of the \"production\" branches unless it has been vetted against the end-to-end testing strategies currently employed post-merge in Fabrics current CI system.","username":"dave.enyeart","ts":"2019-05-29T12:35:35.930Z"}
{"msg":"Has joined the channel.","username":"BrettLogan","ts":"2019-05-29T12:55:29.682Z","type":"uj"}
{"msg":"@dave.enyeart , can you remind me the meeting URL?","username":"minollo","ts":"2019-05-29T13:06:43.980Z"}
{"msg":"During the maintainer meeting, consensus was to keep the plan of record concerning next release number being v1.4.2 (rather than v1.5, even though new capabilities are being delivered in v1.4.2)","username":"dave.enyeart","ts":"2019-05-29T15:44:47.491Z"}
{"msg":"Has joined the channel.","username":"tatsu-sato","ts":"2019-05-31T02:36:54.050Z","type":"uj"}
{"msg":"I'm trying out the wallet classes introduced in Hyperledger Fabric v1.4. All the wallet classes work fine except for `HSMWalletMixin`. I couldn't understand the working of it. There's not much info available about it in the official documentation or in sdk docs. It says in the docs \n> currently you should use the FileSystemWallet class in combination with the HSMWalletMixin class to manage HSM wallets.\n There's no working example from where I could take any help. I've no idea how to use these two classes together. Plus, isn't there any option of configuring `HSMWalletMixin` class with AWS CloudHSM currently? ","username":"KartikChauhan","ts":"2019-06-07T14:02:05.010Z"}
{"msg":"For Node.js SDK questions please post to #fabric-sdk-node , one of the experts over there could help @odowdaibm @andrew-coleman @14gracel ","username":"dave.enyeart","ts":"2019-06-07T15:32:16.563Z"}
{"msg":"Has joined the channel.","username":"iamdm","ts":"2019-06-11T10:49:06.809Z","type":"uj"}
{"msg":"@here In the last maintainer meeting we walked through the v1.4.2 and v2.0 plans in some detail. Some community members specifically solution providers have been wanting an open session to provide feedback to the Fabric maintainers. I'm thinking that can be the focus of tomorrow's maintainer meeting and I can send a note to the mailing list as such. wdyt?","username":"dave.enyeart","ts":"2019-06-11T15:12:09.653Z"}
{"msg":"Any other topics for tomorrow?","username":"dave.enyeart","ts":"2019-06-11T15:12:14.247Z"}
{"msg":"We should probably spend a few minutes on CI direction.","username":"dave.enyeart","ts":"2019-06-11T15:12:17.395Z"}
{"msg":"the TSC is considering enforcing 2FA on the hyperledger github org, everyone is therefore directed to setup 2FA if they haven't done so yet","username":"lehors","ts":"2019-06-11T18:02:11.022Z"}
{"msg":"those who don't will eventually be kicked out of the org when the enforcement comes into effect","username":"lehors","ts":"2019-06-11T18:02:38.506Z"}
{"msg":"feedback from maintainers is welcome","username":"lehors","ts":"2019-06-11T18:02:48.503Z"}
{"msg":"for what it's worth: about half of our org members have not enabled it at the time we started spreading the word","username":"lehors","ts":"2019-06-11T18:05:30.573Z"}
{"msg":"for what it's worth: about half of our org members had not enabled it at the time we started spreading the word","username":"lehors","ts":"2019-06-11T18:05:30.573Z"}
{"msg":"@lehors just to be clear - you are talking about https://help.github.com/en/articles/securing-your-account-with-two-factor-authentication-2fa right?","username":"dave.enyeart","ts":"2019-06-11T18:51:42.710Z"}
{"msg":"yes","username":"rjones","ts":"2019-06-11T18:53:37.488Z"}
{"msg":"@dave.enyeart check the pinned message in #general ","username":"rjones","ts":"2019-06-11T18:54:14.700Z"}
{"msg":"@here how about maintainer meeting tomorrow - are others agreeable if we advertise an 'open mic' format where people can provide any fabric feedback?  you all used to have an opinion on everything!","username":"dave.enyeart","ts":"2019-06-11T18:57:07.267Z"}
{"msg":"Has left the channel.","username":"smithbk","ts":"2019-06-11T18:58:01.815Z","type":"ul"}
{"msg":"@rjones I received a fabric maintainer meeting cancellation from hyperledger, and it no longer shows on the calendar for tomorrow: https://calendar.google.com/calendar/embed?mode=AGENDA&src=linuxfoundation.org_nf9u64g9k9rvd9f8vp4vur23b0%40group.calendar.google.com&ctz=UTC","username":"dave.enyeart","ts":"2019-06-12T00:01:02.710Z"}
{"msg":"@dave.enyeart I have no idea what is going on","username":"rjones","ts":"2019-06-12T01:24:13.745Z"}
{"msg":"The cancellation came from kottoni","username":"dave.enyeart","ts":"2019-06-12T01:25:19.963Z"}
{"msg":"@dave.enyeart could I bother you to send an invite to me? Like, invite me to the meeting you used to have","username":"rjones","ts":"2019-06-12T01:25:44.791Z"}
{"msg":"rjones@linuxfoundation.otg","username":"rjones","ts":"2019-06-12T01:25:56.985Z"}
{"msg":"rjones@linuxfoundation.org","username":"rjones","ts":"2019-06-12T01:25:56.985Z"}
{"msg":"sent","username":"dave.enyeart","ts":"2019-06-12T01:28:33.499Z"}
{"msg":"thanks ","username":"rjones","ts":"2019-06-12T01:29:39.380Z"}
{"msg":"You should have an invite to the new meeting - let me know","username":"rjones","ts":"2019-06-12T01:31:51.382Z"}
{"msg":"@rjones thanks - meeting is restored","username":"dave.enyeart","ts":"2019-06-12T02:23:14.179Z"}
{"msg":"Ok, sent to mailing list:\nHyperledger Fabric maintainer meetings occur every other Wednesday at 9am US Eastern  (13:00 UTC during daylight savings time).\nOn this Wednesday's maintainer meeting we will keep the agenda open to allow for any community feedback to the maintainers. We look forward to hearing your thoughts.\nWeb conference: https://zoom.us/my/hyperledger.community.3\nAdditional information: https://wiki.hyperledger.org/display/fabric/Maintainer+Meetings","username":"dave.enyeart","ts":"2019-06-12T02:34:51.743Z"}
{"msg":"I apologize for the turbulence","username":"rjones","ts":"2019-06-12T02:40:54.555Z"}
{"msg":"definitely turn on 2fa everywhere. not sure LF logins have it, but I've had mine set up on github for years. basically can'tbe a maintainer of anything on github without having 2fa.","username":"MHBauer","ts":"2019-06-12T05:09:24.843Z"}
{"msg":"@here maintainer meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-06-12T13:00:08.646Z"}
{"msg":"when will recording be posted?","username":"gregnotso","ts":"2019-06-12T13:42:58.486Z"}
{"msg":"Here is the document that was mentioned on this morning's call: https://chat.hyperledger.org/channel/fabric-maintainers?msg=qAEDJRTutCmQY2JwQ","username":"troyronda","ts":"2019-06-12T13:49:22.639Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qAEDJRTutCmQY2JwQ","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=qAEDJRTutCmQY2JwQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"reposting Troy Ronda's notes on their TrustBloc initiative. It has many of the same high level features and requirements that most compliance solutions have, ours included. We are working to make ours GDPR compliant as well.  https://docs.google.com/document/d/1ENMO-S7i0ef09IRx5teE-eJbRMFsaKSXEdatcufvjPM/edit","username":"jmason900","ts":"2019-06-12T13:49:26.537Z"}
{"msg":"@troyronda Great job on verified.me solution.  Your requirements are common to most of us ...  change controls, off-chain content delivery and privacy etc","username":"jmason900","ts":"2019-06-12T13:51:44.720Z"}
{"msg":"@dave.enyeart  where will the recordings be of the call? Some v. good observations it would good to listen to again;\n\nOn the topic of the Programming Model, I'm hoping to do a demo of the Java Contract tomorrow on the Dev Community Call","username":"mbwhite","ts":"2019-06-12T13:54:14.246Z"}
{"msg":"Maintainer meeting recording has been posted --> https://wiki.hyperledger.org/display/fabric/Maintainer+Meetings","username":"dave.enyeart","ts":"2019-06-12T13:54:17.097Z"}
{"msg":"and my question is answered immediately :-)","username":"mbwhite","ts":"2019-06-12T13:54:35.131Z"}
{"msg":"thx for the quick posting","username":"gregnotso","ts":"2019-06-12T13:56:43.233Z"}
{"msg":"Awesome thanks!","username":"troyronda","ts":"2019-06-12T15:02:30.118Z"}
{"msg":"There was a vote today, and the motion to enable 2FA for the Hyperledger org on GitHub at the end of the next TSC call (20 JUN 2019) was approved.\nIf you are a member of the Hyperledger GitHub organization and you do not have 2FA enabled, GitHub will remove you from the org. This does not preclude rejoining in the future.","username":"lehors","ts":"2019-06-13T17:58:05.217Z"}
{"msg":"the Linux Foundation is upgrading its token based login system and will enforce 2FA \"soon\"","username":"lehors","ts":"2019-06-13T17:59:32.260Z"}
{"msg":"this will then cover gerrit","username":"lehors","ts":"2019-06-13T17:59:55.961Z"}
{"msg":"A nomination to add @guoger to our set of maintainers https://gerrit.hyperledger.org/r/c/fabric/+/31934","username":"jyellick","ts":"2019-06-17T01:58:07.193Z"}
{"msg":"Has joined the channel.","username":"jaswanth","ts":"2019-06-18T04:50:48.054Z","type":"uj"}
{"msg":"Merged - welcome to the gang @guoger !","username":"dave.enyeart","ts":"2019-06-18T18:58:19.509Z"}
{"msg":"Sent request to helpdesk@hyperledger.org to give Jay fabric maintainer permissions","username":"dave.enyeart","ts":"2019-06-18T19:00:17.368Z"}
{"msg":"Thanks Dave, i'll keep up the momentum!","username":"guoger","ts":"2019-06-19T01:53:20.878Z"}
{"msg":"@here Maintainer meeting starting in a few minutes","username":"dave.enyeart","ts":"2019-06-26T12:54:55.525Z"}
{"msg":"With v1.4.2 closing down, we'll review the v1.4.2 items: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=11429#Filter-Results/12660","username":"dave.enyeart","ts":"2019-06-26T12:55:22.182Z"}
{"msg":"Any other agenda topics for today?","username":"dave.enyeart","ts":"2019-06-26T12:55:30.770Z"}
{"msg":"@dave.enyeart I have a broad question: GitHub gives me tons of security alerts across Fabric repo mirrors. How do you, as maintainers, want this handled?","username":"rjones","ts":"2019-06-26T12:58:22.718Z"}
{"msg":"Example: ```\t\nhyperledger / fabric-test\nKnown security vulnerabilities detected\n\nDependency\ncryptography\t\nVersion\n>= 1.9.0 < 2.3\t\nUpgrade to\n~> 2.3\nVulnerabilities\nCVE-2018-10903 High severity\nDefined in\nrequirements.txt\t\nDependency\nadm-zip\t\nVersion\n< 0.4.11\t\nUpgrade to\n~> 0.4.11\nVulnerabilities\nCVE-2018-1002204 High severity\nDefined in\npackage-lock.json\t\nDependency\nurl-parse\t\nVersion\n< 1.4.3\t\nUpgrade to\n~> 1.4.3\nVulnerabilities\nCVE-2018-3774 High severity\nDefined in\npackage-lock.json\t\nDependency\ntimespan\t\nVersion\n<= 2.3.0\t\nVulnerabilities\nCVE-2017-16115 Low severity\nDefined in\npackage-lock.json\t\nDependency\ncryptiles\t\nVersion\n< 4.1.2\t\nUpgrade to\n~> 4.1.2\nVulnerabilities\nCVE-2018-1000620 High severity\nDefined in\npackage-lock.json\t\nDependency\npyopenssl\t\nVersion\n< 17.5.0\t\nUpgrade to\n~> 17.5.0\nVulnerabilities\nCVE-2018-1000807 High severity\nCVE-2018-1000808 Moderate severity\nDefined in\nrequirements.txt\t\nDependency\npyyaml\t\nVersion\n< 4.2b1\t\nUpgrade to\n~> 4.2b1\nVulnerabilities\nCVE-2017-18342 High severity\nDefined in\nrequirements.txt\t\nDependency\nwebpack-dev-server\t\nVersion\n< 3.1.11\t\nUpgrade to\n~> 3.1.11\nVulnerabilities\nCVE-2018-14732 Low severity\nDefined in\npackage-lock.json\t\nDependency\nlodash\t\nVersion\n< 4.17.11\t\nUpgrade to\n~> 4.17.11\nVulnerabilities\nCVE-2018-16487 Low severity\nCVE-2018-16487 Low severity\nDefined in\npackage-lock.json\t\nDependency\nextend\t\nVersion\n>= 3.0.0 < 3.0.2\t\nUpgrade to\n~> 3.0.2\nVulnerabilities\nCVE-2018-16492 Low severity\nCVE-2018-16492 Low severity\nDefined in\npackage-lock.json\t\nDependency\ntar\t\nVersion\n< 2.2.2\t\nUpgrade to\n~> 2.2.2\nVulnerabilities\nCVE-2018-20834 High severity\nDefined in\npackage-lock.json\t\nDependency\naxios\t\nVersion\n<= 0.18.0\t\nUpgrade to\n~> 0.18.1\nVulnerabilities\nCVE-2019-10742 High severity\nDefined in\npackage-lock.json\t\nDependency\nfstream\t\nVersion\n< 1.0.12\t\nUpgrade to\n~> 1.0.12\nVulnerabilities\nWS-2019-0100 Moderate severity\nDefined in\npackage-lock.json\t\nDependency\nws\t\nVersion\n>= 0.2.6 < 3.3.1\t\nUpgrade to\n~> 3.3.1\nVulnerabilities\nWS-2017-0421 High severity\nDefined in\npackage-lock.json\t\nDependency\njs-yaml\t\nVersion\n< 3.13.1\t\nUpgrade to\n~> 3.13.1\nVulnerabilities\nWS-2019-0063 High severity\nWS-2019-0032 Moderate severity\nDefined in\npackage-lock.json\t\nDependency\nhandlebars\t\nVersion\n< 4.0.14\t\nUpgrade to\n~> 4.0.14\nVulnerabilities\nWS-2019-0064 High severity\nDefined in\npackage-lock.json\t```","username":"rjones","ts":"2019-06-26T12:59:46.472Z"}
{"msg":"","username":"rjones","ts":"2019-06-26T13:04:02.941Z","attachments":[{"type":"file","title":"Your GitHub security alerts for the week of Jun 18 - Jun 25 _ Fastmail.pdf","title_link":"/file-upload/nEHso7g7ayEmjbcQH/Your%20GitHub%20security%20alerts%20for%20the%20week%20of%20Jun%2018%20-%20Jun%2025%20_%20Fastmail.pdf","url":"/file-upload/nEHso7g7ayEmjbcQH/Your%20GitHub%20security%20alerts%20for%20the%20week%20of%20Jun%2018%20-%20Jun%2025%20_%20Fastmail.pdf","remote":false,"fileId":"nEHso7g7ayEmjbcQH","fileName":"Your GitHub security alerts for the week of Jun 18 - Jun 25 _ Fastmail.pdf"}]}
{"msg":"I found fabric-chaincode-node, fabric-test, fabric-docs, and fabric-chaintool to have security warnings","username":"cbf","ts":"2019-06-26T13:10:51.070Z"}
{"msg":"the one that has actual release implications is fabric-chaincode-node ","username":"cbf","ts":"2019-06-26T13:11:14.188Z"}
{"msg":"fabric-test we should clean up - could be that we just need to update the dependencies ","username":"cbf","ts":"2019-06-26T13:12:06.738Z"}
{"msg":"fabric-chaintool I think we need to have someone from StateStreet weigh in on","username":"cbf","ts":"2019-06-26T13:12:26.670Z"}
{"msg":"I have a PR out there for one of them","username":"rjones","ts":"2019-06-26T13:12:43.082Z"}
{"msg":"fabric-docs we need to revisit at some point","username":"cbf","ts":"2019-06-26T13:13:03.285Z"}
{"msg":"feel free to abandon or merge at will: https://gerrit.hyperledger.org/r/c/fabric-docs/+/31467","username":"rjones","ts":"2019-06-26T13:13:29.603Z"}
{"msg":"we may want to simply archive that repo until we decide on actually following through on a separate repo for docs","username":"cbf","ts":"2019-06-26T13:13:32.463Z"}
{"msg":"I no longer have those powers, but I'll show you how to create a new ticket","username":"rjones","ts":"2019-06-26T13:14:05.179Z"}
{"msg":"please, we just discussed on the maintainers call and a previous call had decided to leave the docs in the fabric repo so everyone agreed we could just archive fabric-docs","username":"cbf","ts":"2019-06-26T13:18:45.197Z"}
{"msg":"ok.","username":"rjones","ts":"2019-06-26T13:18:59.973Z"}
{"msg":"thx","username":"cbf","ts":"2019-06-26T13:19:02.613Z"}
{"msg":"@cbf: I think you should be able to see this? https://jira.linuxfoundation.org/servicedesk/customer/portal/2/IT-16573","username":"rjones","ts":"2019-06-26T13:38:06.578Z"}
{"msg":"Ah, I see you've submitted the ticket thanls!","username":"cbf","ts":"2019-06-26T13:47:30.107Z"}
{"msg":"Ah, I see you've submitted the ticket thanks","username":"cbf","ts":"2019-06-26T13:47:30.107Z"}
{"msg":"is gerrit down?","username":"guoger","ts":"2019-06-27T01:50:47.802Z"}
{"msg":"@guoger Not working for me","username":"jyellick","ts":"2019-06-27T02:25:20.713Z"}
{"msg":"There is a Maintainer Meeting scheduled for July 10th, but myself and several others will be out of office.  Any volunteers to facilitate the meeting?  If no agenda topics we could cancel.","username":"dave.enyeart","ts":"2019-07-01T23:40:39.731Z"}
{"msg":"We've talked about calling the meeting a Contributor Meeting instead and formalize the agenda topics beforehand. We could unveil the new format July 24th.","username":"dave.enyeart","ts":"2019-07-01T23:42:04.387Z"}
{"msg":"I'm out as well","username":"mastersingh24","ts":"2019-07-02T08:46:48.967Z"}
{"msg":"is there any plan to enhance the idemix feature, for example enabling custom attribute or enabling support in sdk other than JAVA? current implementation seems quite limited...","username":"huxiangdong","ts":"2019-07-02T10:41:28.479Z"}
{"msg":"Due to multiple maintainer vacations, we will cancel July 10th maintainer meeting. Next meeting is July 24th.","username":"dave.enyeart","ts":"2019-07-09T14:03:04.101Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-07-09T17:02:03.404Z","type":"ul"}
{"msg":"@rjones   Did you open issues to resolve the security warnings? If not, could you at least open a FAB for the *fabric-test* repo, to upgrade tools versions as @cbf suggested? Maybe it could be an epic, and I can create and link tasks for each of the tools warnings. Either that, or make it a task and we can create subtasks to address each one. Please include the full email you received. Assign it to me and I'll create tasks or subtasks and try to get some folks to resolve them in fabric-test.","username":"scottz","ts":"2019-07-10T13:41:42.360Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-07-10T13:41:43.085Z","type":"uj"}
{"msg":"@here Please review draft release notes for v1.4.2: https://gerrit.hyperledger.org/r/#/c/fabric/+/32240/ ","username":"dave.enyeart","ts":"2019-07-10T14:16:20.828Z"}
{"msg":"I haven't done a review of commits for important fixes yet, so I'm sure there's more to add to theh release notes. Go ahead and push subsequent patches to add other important notes.","username":"dave.enyeart","ts":"2019-07-10T14:16:24.624Z"}
{"msg":"I haven't done a review of commits for important fixes yet, so I'm sure there's more to add to the release notes. Go ahead and push subsequent patches to add other important notes.","username":"dave.enyeart","ts":"2019-07-10T14:16:24.624Z"}
{"msg":"We'll also want to add deprecation statements for the things we know will be changing in v2.0","username":"dave.enyeart","ts":"2019-07-10T14:17:16.918Z"}
{"msg":"We'll also want to add deprecation statements for the things we know will be changing in v2.0. And mention the new v1.4.2 capabilities.","username":"dave.enyeart","ts":"2019-07-10T14:17:16.918Z"}
{"msg":"@scottz I did not open bugs. Let me do that","username":"rjones","ts":"2019-07-10T14:42:35.363Z"}
{"msg":"@scottz like this? https://jira.hyperledger.org/browse/FAB-15912","username":"rjones","ts":"2019-07-10T14:47:41.078Z"}
{"msg":"@rjones ok, but I cannot read the pdf email","username":"scottz","ts":"2019-07-10T14:49:31.554Z"}
{"msg":"@scottz try now. I had to rename it, sorry","username":"rjones","ts":"2019-07-10T14:51:11.681Z"}
{"msg":"@rjones  better. but when I click the boxes \"Review all vulnerable dependencies\" in each section, it shows me 404 error when trying to connect to github.","username":"scottz","ts":"2019-07-10T14:59:06.134Z"}
{"msg":"what is your github username?","username":"rjones","ts":"2019-07-10T14:59:44.185Z"}
{"msg":"scottz64","username":"scottz","ts":"2019-07-10T15:02:01.054Z"}
{"msg":"invite sent.","username":"rjones","ts":"2019-07-10T15:02:47.958Z"}
{"msg":"Gonna review this important release!","username":"baohua","ts":"2019-07-11T02:20:45.339Z"}
{"msg":"Quick question, where is the list of Fabric maintainers maintained?  I looked at https://github.com/hyperledger/fabric/blob/release-1.4/CONTRIBUTING.md but didn't see a list there","username":"bbehlendorf","ts":"2019-07-12T17:29:09.425Z"}
{"msg":"Oh, nevermind, found it: https://hyperledger-fabric.readthedocs.io/en/latest/MAINTAINERS.html","username":"bbehlendorf","ts":"2019-07-12T17:30:16.308Z"}
{"msg":"Has joined the channel.","username":"medikent","ts":"2019-07-12T19:57:06.873Z","type":"uj"}
{"msg":"Hello, I would like to contribute to the GO sdk. What would be the best way for me to get started? I have accessed the JIRA and looked over the issues. I just want to learn the codebase a bit before I start trying to make any changes or take any major issues.","username":"medikent","ts":"2019-07-12T19:57:07.827Z"}
{"msg":"I'd at least like to make some docs contributions.","username":"medikent","ts":"2019-07-12T20:13:26.870Z"}
{"msg":" @troyronda ^ ","username":"yacovm","ts":"2019-07-12T20:16:15.321Z"}
{"msg":"@medikent of course, contributions are welcome - ping us on #fabric-sdk-go and we can review JIRA issues you create & when you have a Gerrit change submitted.","username":"troyronda","ts":"2019-07-12T20:38:59.336Z"}
{"msg":"v1.4.2 release update - early this week there is some final testing ongoing including testing the updated node OU support and dependency updates to couchdb, kafka, zookeeper (https://gerrit.hyperledger.org/r/#/c/fabric-baseimage/+/32176/). I will also be updating release notes.","username":"dave.enyeart","ts":"2019-07-15T14:49:40.582Z"}
{"msg":"If everything goes smoothly we expect to release v1.4.2 midweek.","username":"dave.enyeart","ts":"2019-07-15T14:49:42.272Z"}
{"msg":"Please post here if anybody knows of any remaining issues or tasks that need to be addressed before v1.4.2 release.","username":"dave.enyeart","ts":"2019-07-15T14:50:36.558Z"}
{"msg":"Has joined the channel.","username":"owenlilly","ts":"2019-07-15T15:44:26.852Z","type":"uj"}
{"msg":"Update - we have finished v1.4.2 testing.  The updates to 3rd party dependencies and node OU support have been deferred to v1.4.3. We'll begin v1.4.2 release process tomorrow. ","username":"dave.enyeart","ts":"2019-07-16T20:27:32.514Z"}
{"msg":"Let's free merges to release-1.4 release branch, except for minor things such as doc.","username":"dave.enyeart","ts":"2019-07-16T20:28:11.703Z"}
{"msg":"Let's freeze merges to release-1.4 release branch, except for minor things such as doc.","username":"dave.enyeart","ts":"2019-07-16T20:28:11.703Z"}
{"msg":"@dave.enyeart I think you meant 'freeze' instead of 'free'","username":"jyellick","ts":"2019-07-16T20:29:49.026Z"}
{"msg":"indeed!","username":"dave.enyeart","ts":"2019-07-17T01:26:36.900Z"}
{"msg":"@here Please see draft release notes for v1.4.2: https://gerrit.hyperledger.org/r/#/c/fabric/+/32240/","username":"dave.enyeart","ts":"2019-07-17T16:05:30.215Z"}
{"msg":"I included deprecation statements for the known functions being removed in v2.0.0. For functions that are proposed to be removed after v2.0.0, I did not include since we can use the v2.0.0 release notes to announce those deprecations, but if you feel strongly about other deprecations please go ahead and push another patch with your additions/edits.","username":"dave.enyeart","ts":"2019-07-17T16:08:05.914Z"}
{"msg":"LGTM","username":"yacovm","ts":"2019-07-17T16:12:00.281Z"}
{"msg":"I see a pending comment from Jay - https://gerrit.hyperledger.org/r/#/c/fabric/+/32240/2/release_notes/v1.4.2.txt@92","username":"manish-sethi","ts":"2019-07-17T16:27:19.904Z"}
{"msg":"@dave.enyeart - I see a pending comment from Jay - https://gerrit.hyperledger.org/r/#/c/fabric/+/32240/2/release_notes/v1.4.2.txt@92","username":"manish-sethi","ts":"2019-07-17T16:27:19.904Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-07-17T16:29:49.933Z","type":"ul"}
{"msg":"Addressed.","username":"dave.enyeart","ts":"2019-07-17T17:48:59.267Z"}
{"msg":"Addressed and merged.","username":"dave.enyeart","ts":"2019-07-17T17:48:59.267Z"}
{"msg":"Fabric release CR, please +2: https://gerrit.hyperledger.org/r/#/c/fabric/+/32380/","username":"dave.enyeart","ts":"2019-07-17T18:28:05.170Z"}
{"msg":"Fabric-CA release CR: https://gerrit.hyperledger.org/r/#/c/fabric-ca/+/32381/","username":"dave.enyeart","ts":"2019-07-17T19:22:40.701Z"}
{"msg":"Fabric and Fabric-CA v1.4.2 is published and tagged","username":"dave.enyeart","ts":"2019-07-17T22:31:18.009Z"}
{"msg":"We'll wait node.js and java chaincode to publish before announcing @mbwhite ","username":"dave.enyeart","ts":"2019-07-17T22:32:53.419Z"}
{"msg":"We'll wait for node.js and java chaincode to publish before announcing @mbwhite ","username":"dave.enyeart","ts":"2019-07-17T22:32:53.419Z"}
{"msg":"Prepare for next CRs could use +2s:","username":"dave.enyeart","ts":"2019-07-17T22:33:09.985Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/fabric/+/32383/","username":"dave.enyeart","ts":"2019-07-17T22:33:39.879Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/fabric-ca/+/32384/","username":"dave.enyeart","ts":"2019-07-17T22:33:55.455Z"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v1.4.2 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/6484\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2019-07-20T14:28:41.608Z"}
{"msg":"Has joined the channel.","username":"liurain","ts":"2019-07-23T04:53:03.971Z","type":"uj"}
{"msg":"On the rebranding of the meeting. It's too early for the Pacific Coast time.","username":"MHBauer","ts":"2019-07-23T15:51:55.347Z"}
{"msg":"I'm certainly open to moving the meeting later, though I expect we'll have trouble finding a time that is convenient for everyone.  We have a number of contributors in UTC +3, and UTC+2, vs. the pacific coast's UTC  -7, so with a 10 hour spread, I expect someone will be inconvenienced .","username":"jyellick","ts":"2019-07-23T16:07:40.756Z"}
{"msg":"Has joined the channel.","username":"rhall9090","ts":"2019-07-24T12:53:36.207Z","type":"uj"}
{"msg":"","username":"BrettLogan","ts":"2019-07-24T12:56:56.584Z","attachments":[{"type":"file","title":"CICD_Proposal.pdf","title_link":"/file-upload/qDgSxHpFGpiogDpYB/CICD_Proposal.pdf","url":"/file-upload/qDgSxHpFGpiogDpYB/CICD_Proposal.pdf","remote":false,"fileId":"qDgSxHpFGpiogDpYB","fileName":"CICD_Proposal.pdf"}]}
{"msg":"The slides for this mornings agenda topic","username":"BrettLogan","ts":"2019-07-24T12:57:23.935Z"}
{"msg":"@here Contributor's Meeting starting at the top of the hour: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-07-24T12:58:07.747Z"}
{"msg":"@here Thanks Brett. Contributor's Meeting starting at the top of the hour: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-07-24T12:58:07.747Z"}
{"msg":"@BrettLogan slide 12 makes me so happy","username":"sstone1","ts":"2019-07-24T13:01:53.051Z"}
{"msg":"Has joined the channel.","username":"heatherp","ts":"2019-07-24T13:07:12.078Z","type":"uj"}
{"msg":"good for you. I don't share your enthusiasm...","username":"lehors","ts":"2019-07-24T13:14:39.469Z"}
{"msg":"Much of the rationale for Gerrit was support for multiple reviews, and DCO check compliance.","username":"cbf","ts":"2019-07-24T13:19:55.472Z"}
{"msg":"GitHub has the latter (DCO bot) but only manual 2+2","username":"cbf","ts":"2019-07-24T13:20:25.128Z"}
{"msg":"GitHub has the ability to require >1 approving reviews?","username":"sstone1","ts":"2019-07-24T13:21:29.510Z"}
{"msg":"no, I stated the opposite - it can only be enforced manually to my understanding","username":"cbf","ts":"2019-07-24T13:22:20.211Z"}
{"msg":"nope, they added it recently","username":"sstone1","ts":"2019-07-24T13:22:45.696Z"}
{"msg":"ah - note I said \"to my knowledge\"","username":"cbf","ts":"2019-07-24T13:23:00.736Z"}
{"msg":"","username":"sstone1","ts":"2019-07-24T13:23:08.906Z","attachments":[{"type":"file","title":"Screenshot 2019-07-24 at 14.22.52.png","title_link":"/file-upload/E8XfcimCt86ZQD3oz/Screenshot%202019-07-24%20at%2014.22.52.png","image_url":"/file-upload/E8XfcimCt86ZQD3oz/Screenshot%202019-07-24%20at%2014.22.52.png","image_type":"image/png","image_size":82847,"url":"/file-upload/E8XfcimCt86ZQD3oz/Screenshot%202019-07-24%20at%2014.22.52.png","remote":false,"fileId":"E8XfcimCt86ZQD3oz","fileName":"Screenshot 2019-07-24 at 14.22.52.png"}]}
{"msg":"so this means that we have what we need","username":"cbf","ts":"2019-07-24T13:23:11.416Z"}
{"msg":"some projects have done this (partition off responsibility for sections of the code)","username":"cbf","ts":"2019-07-24T13:25:10.632Z"}
{"msg":"Docker did it","username":"cbf","ts":"2019-07-24T13:25:20.111Z"}
{"msg":"The 'debug with ssh' option, for me, is a real win.  Having tried to debug builds that only fail in CI systems, and not locally is really really hard..","username":"mbwhite","ts":"2019-07-24T13:25:33.542Z"}
{"msg":"@binhn basically we have a Git mirror","username":"cbf","ts":"2019-07-24T13:26:36.601Z"}
{"msg":"reluctantly support the recommendation","username":"lehors","ts":"2019-07-24T13:44:56.487Z"}
{"msg":"I agree with the rationale, I'm just not the github fanboy @sstone1 is :-)","username":"lehors","ts":"2019-07-24T13:45:52.791Z"}
{"msg":"@BrettLogan think we could handle like nominating new maintainer - submit a CR with  a link to the proposal, and we look to have a majority  of maintainers sign off","username":"cbf","ts":"2019-07-24T13:46:03.013Z"}
{"msg":"@BrettLogan  so to make sure I understood correctly... there will be a 1-1 between git and gerrit entries but the new git entries won't preserve any of the comments, CI history and the approvals ?","username":"muralisr","ts":"2019-07-24T13:54:27.552Z"}
{"msg":"I don't see why not, the pull request could be the update to the maintainers file, which includes a link to the proposal. Is this how it is handled today? Conversation can still happen in the pull request. If it ends up merged, it is part of the public history. Is there something special about how it is handled today that you are concerned may not be replicatable in github? I've only been here for Jay's nomination and didn't really follow it closely","username":"BrettLogan","ts":"2019-07-24T13:57:43.321Z"}
{"msg":"> If it ends up merged, it is part of the public history. Is there something special about how it is handled today that you are concerned may not be replicatable in github?\nthe only thing not replicated is the proof of who +2ed or +1ed the CR, I think","username":"yacovm","ts":"2019-07-24T14:01:01.722Z"}
{"msg":"and how many, etc.","username":"yacovm","ts":"2019-07-24T14:01:14.732Z"}
{"msg":"@muralisr There will be a one to one, but we could scrape the comments and post them on the corresponding Jira for ones which exist (which is a majority of them). Most of the CI history also already exists in the Commit Rollup in Jira, right? Realistically, we can do whatever we want with the existing data in gerrit by scraping it","username":"BrettLogan","ts":"2019-07-24T14:02:42.290Z"}
{"msg":"ok. There was some mention of comments. I ,might have misunderstood","username":"muralisr","ts":"2019-07-24T14:02:51.681Z"}
{"msg":"So I have to check to see if you can lock a thread after the change is merged, as I was able to go in and +1 a merged change in github. What I couldn't do was add a +2 after the fact, and the history of who +2 the change exists after the merge in the commit history","username":"BrettLogan","ts":"2019-07-24T14:03:56.421Z"}
{"msg":"sounds good... good to not to lose comments (the +2 and approvals not so important I think)","username":"muralisr","ts":"2019-07-24T14:04:35.717Z"}
{"msg":"And just to confirm, you can lock +1 at any point in Pull Request, and +2's can't be added after a merge. So we can preserve that for things like voting on maintainers","username":"BrettLogan","ts":"2019-07-24T15:17:17.442Z"}
{"msg":"It sounds like we may have no option, but, the biggest inadequacy I see with Github is how it handles dependent changes.  We say in our coding guidelines to \"keep change requests small\", and to break large changes into a series of smaller ones.  I do believe this is critical for doing meaningful code review.  However, Github PRs simply have no support for a \"PR Series\".  If you push one PR which contains commits of another, you simply end up with 2 PRs, one that is a subset of the other.  You can set the source branch manually, but then when the base PR merges, it breaks the child, and the child PR needs to be updated manually.\n\nThere are hacky, manual ways to approximate a change-series style Gerrit workflow like:\n\nhttps://graysonkoonce.com/stacked-pull-requests-keeping-github-diffs-small/\n\nBut this approach requires user and maintainer discipline in the authoring and merging of PRs which makes the complexity of Gerrit seem simple.  There is certainly community demand to allow PRs to stack:\n\nhttps://github.com/isaacs/github/issues/867\nhttps://github.com/isaacs/github/issues/950\nhttps://github.com/isaacs/github/issues/959\n\nThere are even some projects/plugins to make the manual PR stacking process less awful:\n\nhttps://github.com/ryanhiebert/probot-chain\nhttps://github.com/z0al/dep\n\nStill, if we move off of Gerrit, losing the ability to manage a CR series with a simple `git push` and instead having to do awkward backflips will be a serious regression.","username":"jyellick","ts":"2019-07-24T15:26:34.642Z"}
{"msg":"It sounds like we may have no option, but, the biggest inadequacy I see with Github is how it handles dependent changes.  We say in our coding guidelines to \"keep change requests small\", and to break large changes into a series of smaller ones.  I do believe this is critical for doing meaningful code review.  However, Github PRs simply have no support for a \"PR Series\".  If you push one PR which contains commits of another, you simply end up with 2 PRs, one that is a subset of the other.  You can set the source branch manually, but then when the base PR merges, it breaks the child, and the child PR needs to be updated manually.\n\nThere are hacky, manual ways to approximate a change-series style Gerrit workflow like:\n\nhttps://graysonkoonce.com/stacked-pull-requests-keeping-github-diffs-small/\n\nBut this approach requires user and maintainer discipline in the authoring and merging of PRs which makes the complexity of Gerrit seem simple.  There is certainly community demand to allow PRs to stack:\n\nhttps://github.com/isaacs/github/issues/867\nhttps://github.com/isaacs/github/issues/950\nhttps://github.com/isaacs/github/issues/959\n\nThere are even some projects/plugins to make the manual PR stacking process less awful:\n\nhttps://github.com/ryanhiebert/probot-chain\nhttps://github.com/z0al/dep\n\nBut, despite the demand, Github has no clean way to address the problem.  If we move off of Gerrit, losing the ability to manage a CR series with a simple `git push` and instead having to do awkward backflips will be a serious regression.","username":"jyellick","ts":"2019-07-24T15:26:34.642Z"}
{"msg":"@jyellick - I guess we'll have to resort to doing several commits in a single PR, and then have an all or nothing merge? ","username":"yacovm","ts":"2019-07-24T15:56:44.644Z"}
{"msg":" jyellick - I guess we'll have to resort to doing several commits in a single PR, and then have an all or nothing merge? ","username":"yacovm","ts":"2019-07-24T15:56:55.913Z"}
{"msg":"That is one option, though I do think this will hurt the quality of reviews.  It will be difficult to track which commits have actually been reviewed, whether the changes in them have been addressed etc.\n\nI haven't played with it too much, but I recall github also being rather ungraceful when it came to modifying a PR.  Either you stack a new commit on top (which, might end up being huge if the change ripples through the dependent commits), or you do a force push and rewrite the commit history, which as I recall the github UI doesn't handle particularly nicely.  I haven't played much with github in this respect recently though.","username":"jyellick","ts":"2019-07-24T15:59:45.114Z"}
{"msg":"yeah that's what I noticed too... it's a problem for people like me that always forget to `goimports` the code, etc. and they end up pushing commits on top that only get resolved when the merge is a squad-and-merge one.","username":"yacovm","ts":"2019-07-24T16:01:25.359Z"}
{"msg":"yeah that's what I noticed too... it's a problem for people like me that always forget to `goimports` the code, etc. and they end up pushing commits on top that only get resolved when the merge is a squash-and-merge one.","username":"yacovm","ts":"2019-07-24T16:01:25.359Z"}
{"msg":"I've worked on systems both with and without the concept of co-req and pre-req changes. \n\nAnd when the change control system has moved on the same codebase between systems with different approaches.\n\nLikewise the same discussion has occured. ","username":"mbwhite","ts":"2019-07-24T16:04:53.259Z"}
{"msg":"The only wisdom from those experiences is (a) never try and get one system to do exactly the same as something else, it hurts in the long run (b) the most important thing is the discussion so it's clear how the team develops as a whole and can tackle the issues clearly ","username":"mbwhite","ts":"2019-07-24T16:07:21.376Z"}
{"msg":"actually @mbwhite @jyellick - this makes me wonder - is it possible to do code reviews of stacked commits *without CI* in gerrit, and after code review has finished, promote that commit to github so it can pass CI ? ","username":"yacovm","ts":"2019-07-24T16:14:13.853Z"}
{"msg":"I know it sounds a bit complex, but if you can somehow verify (maybe using hash + automation) that the gerrit commit is the same commit as in git... then you can code review stacked CRs easily ","username":"yacovm","ts":"2019-07-24T16:15:28.705Z"}
{"msg":"I know it sounds a bit complex (and probably an overkill), but if you can somehow verify (maybe using hash + automation) that the gerrit commit is the same commit as in git... then you can code review stacked CRs easily ","username":"yacovm","ts":"2019-07-24T16:15:28.705Z"}
{"msg":"But if the commit doesn't pass CI in github, then what's your recourse? Having CI run before review (waste machine time instead of human) seems optimal.","username":"jyellick","ts":"2019-07-24T16:25:41.969Z"}
{"msg":"you can submit a PR to github, if it passes CI, gerrit picks up the change set, you review it in gerrit if you want (in case it's someone that likes to stack 20 commits ;) , not mandatory) and then you update the commits in github according to gerrit, and gerrit picks up these changes too.","username":"yacovm","ts":"2019-07-24T16:26:53.024Z"}
{"msg":"Definitely a better flow, but having two SCMs is still awkward.","username":"jyellick","ts":"2019-07-24T16:33:08.740Z"}
{"msg":"Has joined the channel.","username":"huxd","ts":"2019-07-25T05:37:38.133Z","type":"uj"}
{"msg":"I recently submitted a proposal to the community to contribute to the new project, but there seems to be some controversy about the comments on it. Based on the comments in the comments, I hope to discuss it at the next contributor meeting. You are also very welcome to comment on this proposal. https://wiki.hyperledger.org/display/HYP/Hyperledger+Justitia+Proposal","username":"liurain","ts":"2019-07-25T07:33:58.159Z"}
{"msg":"Has joined the channel.","username":"rolsonquadras","ts":"2019-07-25T19:42:43.412Z","type":"uj"}
{"msg":"Using two SCMs is a non-starter in my book ... the main reason to move to Github is primarily to improve our CI ... the current LF managed Jenkins is simply not working for us and the options we've been offered simply don't work with Gerrit and have no plans to integrate with Gerrit in the foreseeable future.\n\nThere are many fairly substantial projects which are using Github ... many of them are Apache projects which moved from using svn and various review tools to Github PRs (Kafka and Spark are 2 examples).\n\nOf course I think we need to set guidelines on how we want things to work (e.g. adding commits to address changes, force merge for rebase, squashing commits on merge, etc).\n\nI think there are ways to address differences, perceived shortcomings, etc .... ","username":"mastersingh24","ts":"2019-07-26T10:03:02.611Z"}
{"msg":"Agreed, if fixing our CI woes means we need to deal with a new workflow on Github, I think it will be worth it, and we'll figure out a new model.\n\nI'm just remembering the pre-Gerrit days when we were on Github and some of the workflow problems we had.","username":"jyellick","ts":"2019-07-26T13:57:57.227Z"}
{"msg":"Indeed ... I think we do need to \"get our act together\" and determine how we want things to work","username":"mastersingh24","ts":"2019-07-26T13:58:42.944Z"}
{"msg":"Has joined the channel.","username":"BrunoVavala","ts":"2019-08-01T18:55:05.898Z","type":"uj"}
{"msg":"Hello Fabric Maintainers,\nis it possible to schedule a playback session on Aug 20?\nWe (the contributors of the Hyperledger Labs Fabric Private Chaincode project) would like to give an overview of the FPC project (design, objectives, current status, integration with Fabric, deployment, use cases) and get some feedback from you.","username":"BrunoVavala","ts":"2019-08-01T18:55:06.563Z"}
{"msg":"@BrunoVavala sure, how about at the Aug 21st contributor meeting?","username":"dave.enyeart","ts":"2019-08-02T13:29:47.369Z"}
{"msg":"Anyone know where the process for requesting the creation of a new repository lives? The new LF JIRA system indicates that \"links to governing body approval\" are required.  So, assistance and direction to that portion is what I'm looking for.\n\nThis is related to the creation of the fabric-chaincode-go and fabric-protos repositories...","username":"sykesm","ts":"2019-08-02T15:38:25.142Z"}
{"msg":"If they are looking for governing body approval our two options are a CR vote (e.g. an update to fabric readme to list the intra project dependencies) or a Jira proposal with upvotes by majority of maintainers.","username":"dave.enyeart","ts":"2019-08-02T17:51:14.573Z"}
{"msg":"Previously the requests were not formalized, so this time around will set the new precedent.","username":"dave.enyeart","ts":"2019-08-02T17:52:57.338Z"}
{"msg":"@dave.enyeart sounds interesting, let me check and I will give you an answer on Monday","username":"BrunoVavala","ts":"2019-08-02T21:26:47.493Z"}
{"msg":"I already had them created","username":"mastersingh24","ts":"2019-08-05T12:23:22.595Z"}
{"msg":"fabric-chaincode-go\nfabric-protos\nfabric-protos-go ","username":"mastersingh24","ts":"2019-08-05T12:24:43.798Z"}
{"msg":"all created","username":"mastersingh24","ts":"2019-08-05T12:24:46.989Z"}
{"msg":"Gerrit repos though ... until we moe to Github","username":"mastersingh24","ts":"2019-08-05T12:25:02.236Z"}
{"msg":"Gerrit repos though ... until we move to Github","username":"mastersingh24","ts":"2019-08-05T12:25:02.236Z"}
{"msg":"Is there a mirror configured as well?","username":"sykesm","ts":"2019-08-05T13:35:09.000Z"}
{"msg":"yeah ... I asked them to do that ... but I don't think it's triggered until the first commit as I recall","username":"mastersingh24","ts":"2019-08-05T13:37:02.139Z"}
{"msg":"thanks","username":"sykesm","ts":"2019-08-05T13:37:11.193Z"}
{"msg":"@dave.enyeart Ok, we can schedule our session on Aug 21st at 9am EST. I suppose we'll use the hyperledger.community.3 zoom meeting.","username":"BrunoVavala","ts":"2019-08-05T17:51:18.399Z"}
{"msg":"@dave.enyeart Ok, we can schedule our session on Aug 21st at 9am EST. I suppose we'll use the hyperledger.community.3 zoom meeting.\nTitle: Fabric Private Chaincode: Enhancing Chaincode Privacy with Intel SGX\nPresenters: Marcus Brandenburger (IBM Zurich), Michael Steiner (Intel Labs), Bruno Vavala (Intel Labs)\nThanks!","username":"BrunoVavala","ts":"2019-08-05T17:51:18.399Z"}
{"msg":"@dave.enyeart Ok, we can schedule our session on Aug 21st at 9am EST. I suppose we'll use the hyperledger.community.3 zoom meeting. I hope we can use a 1h slot (~40 for presentation, the rest for questions)\nTitle: Fabric Private Chaincode: Enhancing Chaincode Privacy with Intel SGX\nPresenters: Marcus Brandenburger (IBM Zurich), Michael Steiner (Intel Labs), Bruno Vavala (Intel Labs)\nThanks!","username":"BrunoVavala","ts":"2019-08-05T17:51:18.399Z"}
{"msg":"Has joined the channel.","username":"msteiner","ts":"2019-08-06T04:05:50.817Z","type":"uj"}
{"msg":"will this meeting be posted in the public meeting calendar? interested in this topic...","username":"huxd","ts":"2019-08-06T05:45:36.959Z"}
{"msg":"Has joined the channel.","username":"bur","ts":"2019-08-06T07:45:39.139Z","type":"uj"}
{"msg":"Hello Fabric Maintainers,```\n\n``` ","username":"liurain","ts":"2019-08-06T08:50:20.569Z"}
{"msg":"```\nI want to briefly introduce one of my project proposals at the August 7th meeting. The entire introduction process may take up to 15 minutes. Do not know if it is ok?\n``` ","username":"liurain","ts":"2019-08-06T08:53:04.828Z"}
{"msg":"@liurain i believe you are talking about bi-weekly contributor meeting, and you are welcome to pitch the project. @dave.enyeart is there an agenda that @liurain should fill beforehand?","username":"guoger","ts":"2019-08-06T09:59:02.650Z"}
{"msg":"That's right, I am talking about that meeting. The relevant agenda has not yet been filled out.","username":"liurain","ts":"2019-08-06T10:02:13.258Z"}
{"msg":"@liurain I've added you to the agenda for tomorrow's Contributor Meeting: https://wiki.hyperledger.org/display/fabric/Contributor+Meetings","username":"dave.enyeart","ts":"2019-08-06T15:33:17.875Z"}
{"msg":"@BrunoVavala I've also added you to the agenda for August 21st","username":"dave.enyeart","ts":"2019-08-06T15:33:38.409Z"}
{"msg":"Thank you @dave.enyeart ","username":"BrunoVavala","ts":"2019-08-06T17:02:12.454Z"}
{"msg":"@here This has been discussed a few times but no Jira existed previously... I've created it:","username":"dave.enyeart","ts":"2019-08-06T20:47:49.111Z"}
{"msg":"Remove s390x support from Fabric in v2.0: https://jira.hyperledger.org/browse/FAB-16237","username":"dave.enyeart","ts":"2019-08-06T20:47:51.321Z"}
{"msg":"Please either upvote in Jira or add a comment so that we can gauge maintainer support to get this into v2.0","username":"dave.enyeart","ts":"2019-08-06T20:48:28.949Z"}
{"msg":"Please either upvote in Jira or add a comment with any concerns, so that we can gauge maintainer support to get this into v2.0","username":"dave.enyeart","ts":"2019-08-06T20:48:28.949Z"}
{"msg":"Thank you.","username":"liurain","ts":"2019-08-07T00:44:53.074Z"}
{"msg":"@dave.enyeart  I would ask a few mins to discuss fabric multi-language documentation proposal https://wiki.hyperledger.org/display/HYP/Multi-Language+Documentation","username":"richzhao","ts":"2019-08-07T01:39:14.976Z"}
{"msg":"Sure, it looks like we'll have about 15 more minutes available in today's contributor meeting. I've added you to the agenda at https://wiki.hyperledger.org/display/fabric/Contributor+Meetings","username":"dave.enyeart","ts":"2019-08-07T09:50:13.053Z"}
{"msg":"Today's contributor meeting agenda (9am US Eastern / 13:00 UTC)\n- Release update (10 minutes)\n- Fabric CI proposal update - Brett Logan (10 minutes)\n- Hyperledger Justitia proposal - https://wiki.hyperledger.org/display/HYP/Hyperledger+Justitia+Proposal - Rui Liu (25 minutes)\n- Hyperledger Fabric documentation translation proposal update - https://wiki.hyperledger.org/display/HYP/Multi-Language+Documentation - Rich Zhao (15 minutes)","username":"dave.enyeart","ts":"2019-08-07T09:53:44.296Z"}
{"msg":"Today's contributor meeting agenda (9am US Eastern / 13:00 UTC) https://zoom.us/my/hyperledger.community.3\n- Release update (10 minutes)\n- Fabric CI proposal update - Brett Logan (10 minutes)\n- Hyperledger Justitia proposal - https://wiki.hyperledger.org/display/HYP/Hyperledger+Justitia+Proposal - Rui Liu (25 minutes)\n- Hyperledger Fabric documentation translation proposal update - https://wiki.hyperledger.org/display/HYP/Multi-Language+Documentation - Rich Zhao (15 minutes)","username":"dave.enyeart","ts":"2019-08-07T09:53:44.296Z"}
{"msg":"@here meeting starting","username":"dave.enyeart","ts":"2019-08-07T12:59:49.326Z"}
{"msg":"@guoger @yacovm is this error something to do with CR 32428?\n\u001b[34m2019-08-07 12:33:14.020 UTC [orderer.common.server] Main -> INFO 008\u001b[0m Starting cluster listener on [::]:7050\n\u001b[35m2019-08-07 12:33:14.022 UTC [grpc] RegisterService -> FATA 009\u001b[0m grpc: Server.RegisterService after Server.Serve for \"orderer.AtomicBroadcast\"","username":"sstone1","ts":"2019-08-07T14:36:59.909Z"}
{"msg":"https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/458/artifact/fabcar/fabcar-go/orderer.example.com.log","username":"sstone1","ts":"2019-08-07T14:37:07.637Z"}
{"msg":"if you mean Jay's change set, then I would bet you're right because:\n> \u001b[35m2019-08-07 12:33:14.022 UTC [grpc] RegisterService -> FATA 009\u001b[0m grpc: Server.RegisterService after Server.Serve for \"orderer.AtomicBroadcast\"\nmust be related to these gRPC server line moving he did","username":"yacovm","ts":"2019-08-07T14:49:52.988Z"}
{"msg":"I'll take a look now","username":"yacovm","ts":"2019-08-07T14:49:57.855Z"}
{"msg":"thanks Yacov!","username":"sstone1","ts":"2019-08-07T14:51:50.788Z"}
{"msg":"ha i think i got it... if we use kafka/solo then `clusterGRPCServer` is `grpcServer` and then \n```\n\tif !reuseGrpcListener {\n\t\tlogger.Info(\"Starting cluster listener on\", clusterGRPCServer.Address())\n\t\tgo clusterGRPCServer.Start()\n\t}\n```\nactivates it i think","username":"yacovm","ts":"2019-08-07T14:55:30.945Z"}
{"msg":"@guoger ?","username":"yacovm","ts":"2019-08-07T14:55:41.334Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/fabric/+/32765/ @sstone1 ","username":"yacovm","ts":"2019-08-07T15:05:19.476Z"}
{"msg":"@yacovm yup, my bad. but can we just change it to `if !reuseGrpcListener && clusterType {`","username":"guoger","ts":"2019-08-07T15:23:22.011Z"}
{"msg":"so we have only one line change, and it is more explicit by checking `clusterType`, instead of checking something is nil","username":"guoger","ts":"2019-08-07T15:24:02.306Z"}
{"msg":"yeah.... that was my initial attempt but I hated it. Turns out, the 2nd attempt doesn't work because it gets carried by the registrar current and then blows up down the path. I reverted to patch set 1 as you suggest ","username":"yacovm","ts":"2019-08-07T17:26:21.844Z"}
{"msg":"Master seems to be broken from a compilation perspective again https://gerrit.hyperledger.org/r/c/fabric/+/32777","username":"jyellick","ts":"2019-08-07T20:29:01.845Z"}
{"msg":"I pushed a fix here: https://gerrit.hyperledger.org/r/c/fabric/+/32772","username":"wlahti","ts":"2019-08-07T20:29:48.908Z"}
{"msg":"I pushed a fix for that here. should be ready to go: https://gerrit.hyperledger.org/r/c/fabric/+/32772","username":"wlahti","ts":"2019-08-07T20:29:48.908Z"}
{"msg":"Great, thanks @wlahti ","username":"jyellick","ts":"2019-08-07T20:30:22.114Z"}
{"msg":"@dave.enyeart is there a recording available for yesterday's (8/7) contributor meeting?","username":"minollo","ts":"2019-08-08T17:23:55.058Z"}
{"msg":"Yes, posted at: https://wiki.hyperledger.org/display/fabric/Contributor+Meetings","username":"dave.enyeart","ts":"2019-08-08T20:05:24.646Z"}
{"msg":"Grazie","username":"minollo","ts":"2019-08-08T20:11:00.927Z"}
{"msg":"Has joined the channel.","username":"jambonrose","ts":"2019-08-09T16:30:50.686Z","type":"uj"}
{"msg":"anyone knows how to get a list of recently failed IT/UT logs from jenkins? Basically i'm trying to find a recent hit of a particular test flake, and I have to spend many clicks on open CRs with red cross to find logs. Thx!","username":"guoger","ts":"2019-08-12T03:15:45.533Z"}
{"msg":"@guoger The failed jobs can be seen in red on the left side of these pages:","username":"dave.enyeart","ts":"2019-08-12T12:34:50.090Z"}
{"msg":"https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-unit-tests-x86_64/","username":"dave.enyeart","ts":"2019-08-12T12:34:51.569Z"}
{"msg":"https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-integration-tests-x86_64/","username":"dave.enyeart","ts":"2019-08-12T12:35:06.524Z"}
{"msg":"thanks!","username":"guoger","ts":"2019-08-12T13:03:50.256Z"}
{"msg":"With the upcoming move off of Gerrit, is there any point in manually purging (abandoning) long-standing PRs? We have some that go way back (up to a year).","username":"kostas","ts":"2019-08-12T21:25:32.565Z"}
{"msg":"please abandon any personal CRs that are stale or unlikely to move forward","username":"cbf","ts":"2019-08-13T12:18:42.798Z"}
{"msg":"Right, the plan is to get all CRs either merged or abandoned before the change from Gerrit. We should start cleaning up now. Let's all try to chip away at it this week.","username":"dave.enyeart","ts":"2019-08-13T13:36:40.751Z"}
{"msg":"We can be more aggressive on the abandoning and site the CR Aging policy: https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#cr-aging-policy","username":"dave.enyeart","ts":"2019-08-13T13:37:08.381Z"}
{"msg":"We can be more aggressive on the abandoning and cite the CR Aging policy: https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#cr-aging-policy","username":"dave.enyeart","ts":"2019-08-13T13:37:08.381Z"}
{"msg":"We can be more aggressive on the abandoning and reference the CR Aging policy: https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#cr-aging-policy","username":"dave.enyeart","ts":"2019-08-13T13:37:08.381Z"}
{"msg":"Also an objective of the weekly triage role is to look for stale CRs and address, either by reviewing or abandoning or tagging some maintainers for help.","username":"dave.enyeart","ts":"2019-08-13T13:38:37.581Z"}
{"msg":"Also an objective of the weekly triage role is to look for stale CRs and address, either by reviewing themselves or tagging a maintainer for help with review/abandonment.","username":"dave.enyeart","ts":"2019-08-13T13:38:37.581Z"}
{"msg":"This week it is @wlahti . Next week it is @BrettLogan .","username":"dave.enyeart","ts":"2019-08-13T13:39:16.290Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-08-13T14:54:46.799Z","type":"uj"}
{"msg":"qq: what is Fabric's timeline to move? pre or post 2.0?","username":"rjones","ts":"2019-08-13T14:55:18.968Z"}
{"msg":"I am not talking about my own CRs.","username":"kostas","ts":"2019-08-13T15:49:17.536Z"}
{"msg":"Yea, there is a parallel conversation happening in #ci-pipeline that addresses this","username":"BrettLogan","ts":"2019-08-13T16:33:45.500Z"}
{"msg":"It is possible to move some of those pending ones directly, but I would not suggest it. If we turn on a full mirror to github, you end up with a branch per patch - look https://github.com/alljoyn/services-base for an example of the branch/commit ratio","username":"rjones","ts":"2019-08-13T16:45:29.431Z"}
{"msg":"Has joined the channel.","username":"rodolfoleal","ts":"2019-08-15T16:40:02.415Z","type":"uj"}
{"msg":"FYI: Fabric-Verify-Unit-Tests builds are broken in CI for a couple hours. We migrated to a new cloud image today built using a new process to support newer versions of Golang. There was a minor bug in it, that wasnt caught in our sandbox CI system. We are building the new image now and will have the change in within the next couple hours","username":"BrettLogan","ts":"2019-08-15T19:25:06.019Z"}
{"msg":"FYI: Fabric Unit Tests are broken for a couple hours. We migrated to a new cloud image today built using a new process to support newer versions of Golang. There was a minor bug in it, that wasnt caught in our sandbox CI system. We are building the new image now and will have the change in within the next couple hours ","username":"BrettLogan","ts":"2019-08-15T19:25:06.019Z"}
{"msg":"Before we start moving all projects over to github, we have three we want to start with:\n1. fabric-protos\n2. fabric-protos-go\n3. fabric-chaincode-go\n\nWe have pushed templates of the first two to the hyperledger-cicd project to play with some possible CI tooling. Regardless of that, we need to act on the move sooner rather than later.\n\nWho is or should be driving the definition of the PR review process? Setup of something like probot for DCO validation?","username":"sykesm","ts":"2019-08-19T13:36:39.815Z"}
{"msg":"Before we start moving all projects over to github, we have three we want to start with:\n1. fabric-protos\n2. fabric-protos-go\n3. fabric-chaincode-go\n\nWe have pushed templates of the first two to the hyperledger-cicd project to play with some possible CI tooling. Regardless of that, we need to act on the move sooner rather than later. There are no dependencies on these projects so it makes it easy to experiment there.\n\nWho is or should be driving the definition of the PR review process? Setup of something like probot for DCO validation?","username":"sykesm","ts":"2019-08-19T13:36:39.815Z"}
{"msg":"@sykesm If you are talking about policies, you can propose here and then we can discuss at the maintainer/contributor meeting this Wednesday. In terms of implementing it, previously Chris Ferris and Ramesh worked on these types of things, they have transitioned most of the these duties to Brett Logan.","username":"dave.enyeart","ts":"2019-08-19T14:45:26.690Z"}
{"msg":"@sykesm Excellent. It would be wonderful to have a fabric-protos-go in hyperledger, itself. (and then also have fabric-sdk-go import from it.) ","username":"troyronda","ts":"2019-08-19T14:54:11.364Z"}
{"msg":"Implementing is trivial - I need guidance through process.\n\nProposal is simple: the repositories live on github, PRs are required. \n PRs must be approved by one or more of the people listed in CODEOWNERS and builds must be successful.","username":"sykesm","ts":"2019-08-19T20:49:09.955Z"}
{"msg":"fabric-protos-go will be its own top level repo and include a go.mod. Same is true of fabric-chaincode-go. They will no longer be in the fabric repo once we get through the process exercise.","username":"sykesm","ts":"2019-08-19T20:50:01.816Z"}
{"msg":"Has joined the channel.","username":"galaxystar","ts":"2019-08-20T01:23:17.336Z","type":"uj"}
{"msg":"Will there also be built and published _fabric-protos-node_ and _fabric-protos-java_ projects that the Node and Java SDKs can just depend on?","username":"bestbeforetoday","ts":"2019-08-20T09:42:10.287Z"}
{"msg":"My understanding is that there will be published artifacts for Java (maven repo?) and JavaScript (npm module) - the go repo is just the go method of publishing. Happy to help get the build for those in place.","username":"jtonline","ts":"2019-08-20T09:45:35.275Z"}
{"msg":":thumbup: ","username":"bestbeforetoday","ts":"2019-08-20T09:46:06.494Z"}
{"msg":"@jtonline @bestbeforetoday that statement is only true if someone does the work.","username":"sykesm","ts":"2019-08-20T11:50:33.308Z"}
{"msg":"We are doing what is necessary to extract the go chaincode shim from the fabric repo in a sane way.","username":"sykesm","ts":"2019-08-20T11:51:22.195Z"}
{"msg":"There are no stories in our backlog for node/java at this time","username":"sykesm","ts":"2019-08-20T11:52:15.867Z"}
{"msg":"Just wanted to give a bit of a warning - over the next couple of days we're going to be pulling the protos and generated bindings out of the fabric repo. The fabric-protos and fabric-protos-go have already been populated with the assets.\nWe will also be putting the chaincode shim and extensions into fabric-chaincode-go at some point today and the package import will change.\nAfter everything is populated, we need to shift to using those new repositories for the go assets. I expect this will impact multiple repositories  - especially those that use go chaincode.","username":"sykesm","ts":"2019-08-20T11:52:15.867Z"}
{"msg":"I think it is time to advance the status of fabric-sdk-go. The SDK is being used in production and has had a stable client interface surface for several months. We sometimes receive questions about its status (e.g., Is it still alpha? Is it official?), and I think we need to be able to set a better direction to these community members. We also have been stuck numbering 1.0.0-alphax and we would like to get to a normalized versioning.","username":"troyronda","ts":"2019-08-20T11:55:05.456Z"}
{"msg":"(this is somewhat related to the fabric-protos-go discussion, as it would be preferable to switch our exposed protos to the common types exposed by the new repo.)","username":"troyronda","ts":"2019-08-20T11:56:12.494Z"}
{"msg":"@sykesm Is there an issue or anything I should link new stories to to get that in place? I'll double check here but I'm optimistic we can do the work :)","username":"jtonline","ts":"2019-08-20T13:17:00.715Z"}
{"msg":"As discussed - it is very much aligned with our interestes","username":"mbwhite","ts":"2019-08-20T15:07:50.768Z"}
{"msg":"We'd like to update some of the brief Fabric descriptions on the Hyperledger web pages, please give a thumbs up if you're good with these updates, or comment if you'd like to see some additional edits:","username":"dave.enyeart","ts":"2019-08-20T20:24:48.054Z"}
{"msg":"We'd like to update some of the brief Fabric descriptions on the Hyperledger web pages, please give a thumbs up if you're good with these updates, or comment if you'd like to see some additional edits. From short to longest brief description:","username":"dave.enyeart","ts":"2019-08-20T20:24:48.054Z"}
{"msg":"We'd like to update some of the brief Fabric descriptions on the Hyperledger web pages, please give a thumbs up if you're good with these updates, or comment if you'd like to see some additional edits. From shortest to longest brief description:","username":"dave.enyeart","ts":"2019-08-20T20:24:48.054Z"}
{"msg":"@here  We'd like to update some of the brief Fabric descriptions on the Hyperledger web pages, please give a thumbs up if you're good with these updates, or comment if you'd like to see some additional edits. From shortest to longest brief description:","username":"dave.enyeart","ts":"2019-08-20T20:24:48.054Z"}
{"msg":"","username":"dave.enyeart","ts":"2019-08-20T20:24:51.426Z","attachments":[{"type":"file","title":"Clipboard - August 20, 2019 4:24 PM","title_link":"/file-upload/L3raW8qcAKbrGE3ey/Clipboard%20-%20August%2020,%202019%204:24%20PM","image_url":"/file-upload/L3raW8qcAKbrGE3ey/Clipboard%20-%20August%2020,%202019%204:24%20PM","image_type":"image/png","image_size":4030,"url":"/file-upload/L3raW8qcAKbrGE3ey/Clipboard%20-%20August%2020,%202019%204:24%20PM","remote":false,"fileId":"L3raW8qcAKbrGE3ey","fileName":"Clipboard - August 20, 2019 4:24 PM"}]}
{"msg":"https://www.hyperledger.org/","username":"dave.enyeart","ts":"2019-08-20T20:25:21.570Z"}
{"msg":"Proposed Updated Text: `Enterprise grade DLT with privacy support`","username":"dave.enyeart","ts":"2019-08-20T20:25:56.417Z"}
{"msg":"https://www.hyperledger.org/projects","username":"dave.enyeart","ts":"2019-08-20T20:26:28.194Z"}
{"msg":"Proposed Updated Text: `An enterprise grade permissioned distributed ledger framework that offers modularity, versatility, and privacy options to satisfy a broad set of industry use cases ranging from finance, to healthcare, to supply-chain and more.`","username":"dave.enyeart","ts":"2019-08-20T20:27:02.719Z"}
{"msg":"https://www.hyperledger.org/projects/fabric","username":"dave.enyeart","ts":"2019-08-20T20:27:23.854Z"}
{"msg":"Proposed Updated Text: `Hyperledger Fabric is an enterprise grade permissioned distributed ledger framework for developing solutions and applications, that offers modularity and versatility, to satisfy a broad set of industry use cases. It offers a unique approach to consensus that enables performance at scale while preserving privacy. `","username":"dave.enyeart","ts":"2019-08-20T20:27:43.734Z"}
{"msg":"\"Enterprise grade\" is a compound modifier here, so a hyphen would be handy: enterprise-grade DLT. Other than that, LGTM.","username":"kostas","ts":"2019-08-20T22:37:40.430Z"}
{"msg":"```\nHyperledger Fabric is an enterprise-grade permissioned distributed ledger framework for developing solutions and applications. It's modular and versatile design satisfies a broad range of industry use cases. It offers a unique approach to consensus that enables performance at scale while preserving privacy. \n\n```","username":"mastersingh24","ts":"2019-08-21T09:44:51.353Z"}
{"msg":"ok, to summarize one more time, we've got these three:","username":"dave.enyeart","ts":"2019-08-21T11:32:46.398Z"}
{"msg":"ok, to summarize one more time, we've got these three for the short, medium, and long description:","username":"dave.enyeart","ts":"2019-08-21T11:32:46.398Z"}
{"msg":"`Enterprise-grade DLT with privacy support.`","username":"dave.enyeart","ts":"2019-08-21T11:32:57.208Z"}
{"msg":"`An enterprise-grade permissioned distributed ledger framework that offers modularity, versatility, and privacy options to satisfy a broad set of industry use cases ranging from finance, to healthcare, to supply-chain and more.`","username":"dave.enyeart","ts":"2019-08-21T11:33:08.142Z"}
{"msg":"`Hyperledger Fabric is an enterprise grade permissioned distributed ledger framework for developing solutions and applications, that offers modularity and versatility, to satisfy a broad set of industry use cases. It offers a unique approach to consensus that enables performance at scale while preserving privacy. `","username":"dave.enyeart","ts":"2019-08-21T11:33:15.932Z"}
{"msg":"`Hyperledger Fabric is an enterprise-grade permissioned distributed ledger framework for developing solutions and applications. It's modular and versatile design satisfies a broad range of industry use cases. It offers a unique approach to consensus that enables performance at scale while preserving privacy.`","username":"dave.enyeart","ts":"2019-08-21T11:33:15.932Z"}
{"msg":"@here Fabric Contributor Meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-08-21T12:58:50.943Z"}
{"msg":"Agenda topics for today:","username":"dave.enyeart","ts":"2019-08-21T12:59:04.035Z"}
{"msg":"- Release update (5 minutes)\n- Marketing update (5 minutes)\n- SCM update (5 minutes)\n- Fabric Private Chaincode: Enhancing Chaincode Privacy with Intel SGX - Marcus Brandenburger (IBM Zurich), Michael Steiner (Intel Labs), Bruno Vavala (Intel Labs) (45 minutes)","username":"dave.enyeart","ts":"2019-08-21T12:59:11.904Z"}
{"msg":"yeah, it should be 'its' even if it's very 'possessive'","username":"greg2git","ts":"2019-08-21T13:12:07.862Z"}
{"msg":"sorry ... yeah ... auto-correct got me on that one  ;)","username":"mastersingh24","ts":"2019-08-21T13:12:48.628Z"}
{"msg":"should be \"its\"","username":"mastersingh24","ts":"2019-08-21T13:12:53.383Z"}
{"msg":"FYI: I pushed a CR for fabric-sdk-go to use an external protos module (but we need to wait for the real repo, of course): https://gerrit.hyperledger.org/r/c/fabric-sdk-go/+/33084","username":"troyronda","ts":"2019-08-21T17:00:54.906Z"}
{"msg":"@troyronda One comment on that CR","username":"rjones","ts":"2019-08-21T17:04:58.372Z"}
{"msg":"Has joined the channel.","username":"metadata","ts":"2019-08-22T09:22:28.363Z","type":"uj"}
{"msg":"Has joined the channel.","username":"shitaibin","ts":"2019-08-22T12:17:40.883Z","type":"uj"}
{"msg":"I have tested the current master protos (from fabric-protos-go) using fabric-sdk-go against 1.4 with success. Is anyone aware of any breaking changes in the protos that will affect a client using 2.x protos targeting a 1.4 fabric network? (I assume not - so an upgraded SDK can target either 1.x or 2.x).","username":"troyronda","ts":"2019-08-22T12:41:03.660Z"}
{"msg":"Fyi, https://jira.hyperledger.org/browse/FAB-16388 and https://jira.hyperledger.org/browse/FAB-16387","username":"jtonline","ts":"2019-08-22T13:25:00.858Z"}
{"msg":"Has joined the channel.","username":"firas.qutishat","ts":"2019-08-22T13:35:47.447Z","type":"uj"}
{"msg":"Just wanted to give a bit of a warning - over the next couple of days we're going to be pulling the protos and generated bindings out of the fabric repo. The fabric-protos and fabric-protos-go have already been populated with the assets.\nWe will also be putting the chaincode shim and extensions into fabric-chaincode-go at some point today and the package import will change.\nAfter everything is populated, we need to shift to using those new repositories in fabric-test used by master for the go assets.","username":"sykesm","ts":"2019-08-22T14:12:21.337Z"}
{"msg":"Just wanted to give a bit of a warning - over the next couple of days we're going to be pulling the protos and generated bindings out of the fabric repo. The fabric-protos and fabric-protos-go have already been populated with the assets.\nWe will also be putting the chaincode shim and extensions into fabric-chaincode-go at some point today and the package import will change.\nAfter everything is populated, we need to shift to using those new repositories for the go assets that are expected to work with fabric master.","username":"sykesm","ts":"2019-08-22T14:12:21.337Z"}
{"msg":"hey, Fabric Maintainers, please beware that there is going to be \"Maintainers Summit\" in October, and all maintainers are encourage to attend. See: https://wiki.hyperledger.org/display/events/Maintainer+Summit+October+8-10%2C+2019","username":"lehors","ts":"2019-08-22T14:15:39.787Z"}
{"msg":"hey, Fabric Maintainers, please beware that there is going to be a \"Maintainers Summit\" in October, and all maintainers are encourage to attend. See: https://wiki.hyperledger.org/display/events/Maintainer+Summit+October+8-10%2C+2019","username":"lehors","ts":"2019-08-22T14:15:39.787Z"}
{"msg":"it's good to know who can attend the summit that we can plan some topics together","username":"binhn","ts":"2019-08-24T20:23:25.603Z"}
{"msg":"not sure what to do if merge build fails? i.e. https://gerrit.hyperledger.org/r/c/fabric/+/33036/3","username":"guoger","ts":"2019-08-26T09:24:02.877Z"}
{"msg":"thx","username":"guoger","ts":"2019-08-26T09:24:03.483Z"}
{"msg":"@guoger The merge job failure looks like a unit test flake.  The merge-end-2-end failure is a recurring problem from java sdk integration tests, hopefully @andrew-coleman @bestbeforetoday will get a fix this week.","username":"dave.enyeart","ts":"2019-08-26T10:34:04.722Z"}
{"msg":"I did a 'remerge' to rerun the jobs to see if they pass this time","username":"dave.enyeart","ts":"2019-08-26T10:34:19.872Z"}
{"msg":"The failures do not impact code getting merged, so sadly we've gotten accustomed to the failures in sdk integration tests","username":"dave.enyeart","ts":"2019-08-26T10:35:42.682Z"}
{"msg":"@caod (Danny) Has the weekly role of triaging CI failures this week.","username":"dave.enyeart","ts":"2019-08-26T10:37:02.802Z"}
{"msg":"Has joined the channel.","username":"caod","ts":"2019-08-26T10:37:02.841Z","type":"uj"}
{"msg":"@dave.enyeart i see, thx!","username":"guoger","ts":"2019-08-26T10:49:17.054Z"}
{"msg":"Has joined the channel.","username":"dan13","ts":"2019-08-26T15:26:32.370Z","type":"uj"}
{"msg":"@here trying to close to v1.4.3 release... i'm thinking we merge https://gerrit.hyperledger.org/r/#/c/fabric/+/33180/ first, but could use another pair of eyes","username":"dave.enyeart","ts":"2019-08-26T17:32:15.509Z"}
{"msg":"@here trying to close down v1.4.3 release... i'm thinking we merge https://gerrit.hyperledger.org/r/#/c/fabric/+/33180/ first, but could use another pair of eyes","username":"dave.enyeart","ts":"2019-08-26T17:32:15.509Z"}
{"msg":"trying to close down v1.4.3 release... i'm thinking we merge https://gerrit.hyperledger.org/r/#/c/fabric/+/33180/ first, but could use another pair of eyes","username":"dave.enyeart","ts":"2019-08-26T17:32:15.509Z"}
{"msg":"trying to close down v1.4.3 release... i'm thinking we merge ~https://gerrit.hyperledger.org/r/#/c/fabric/+/33180/~ first, but could use another pair of eyes","username":"dave.enyeart","ts":"2019-08-26T17:32:15.509Z"}
{"msg":"ah, Gari merged, thanks","username":"dave.enyeart","ts":"2019-08-26T17:33:09.604Z"}
{"msg":"so, i think the last CR to merge would be the upgrade doc and what's new doc: https://gerrit.hyperledger.org/r/#/c/fabric/+/32864/","username":"dave.enyeart","ts":"2019-08-26T17:34:55.300Z"}
{"msg":"so, i think the last CR to merge would be the upgrade doc and what's new doc: ~https://gerrit.hyperledger.org/r/#/c/fabric/+/32864/~","username":"dave.enyeart","ts":"2019-08-26T17:34:55.300Z"}
{"msg":"All release-1.4 CRs targeted for v1.4.3 are now merged.","username":"dave.enyeart","ts":"2019-08-26T18:31:36.314Z"}
{"msg":"@here Let's start MERGE FREEZE for release-1.4 branch so that we can release v1.4.3.","username":"dave.enyeart","ts":"2019-08-26T18:31:44.179Z"}
{"msg":"@here Please review release notes for v1.4.3: https://gerrit.hyperledger.org/r/#/c/fabric/+/33186/1/release_notes/v1.4.3.txt","username":"dave.enyeart","ts":"2019-08-26T19:21:34.887Z"}
{"msg":"and for fabric-ca: https://gerrit.hyperledger.org/r/#/c/fabric-ca/+/33188/","username":"dave.enyeart","ts":"2019-08-26T19:44:54.464Z"}
{"msg":"github","username":"swetha","ts":"2019-08-27T02:20:09.632Z"}
{"msg":"fabric, fabric-ca, fabric-samples v1.4.3 all tagged","username":"dave.enyeart","ts":"2019-08-27T03:42:32.689Z"}
{"msg":"MERGE FREEZE lifted","username":"dave.enyeart","ts":"2019-08-27T03:42:37.912Z"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v1.4.3 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/6709\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2019-08-27T03:42:51.282Z"}
{"msg":":thumbsup: ","username":"cbf","ts":"2019-08-27T18:41:23.210Z"}
{"msg":"FYI: Jenkins is currently experiencing severe performance issues, there is currently a backlog of jobs queued. Replying to your Gerrit changes to rerun builds that are already queued will only exacerbate the issue. We are investigating and working on resolution","username":"BrettLogan","ts":"2019-08-28T22:11:55.261Z"}
{"msg":"Are our nodes in San Jose or Montreal datacenter","username":"BrettLogan","ts":"2019-08-28T22:54:53.647Z"}
{"msg":"Montreal","username":"rjones","ts":"2019-08-29T04:54:15.636Z"}
{"msg":"Has joined the channel.","username":"Hengming","ts":"2019-08-29T13:46:08.512Z","type":"uj"}
{"msg":"fabric-sdk-node maintainers: there are two outgoing patch sets waiting for a while for CRs - 32205 and 32704 on Gerrit. Anyone can help to review them? Thanks a million.","username":"Hengming","ts":"2019-08-30T11:27:00.507Z"}
{"msg":"@bestbeforetoday @andrew-coleman @heatherp @bretharrison ^","username":"sstone1","ts":"2019-08-30T12:10:29.016Z"}
{"msg":"Note that channel #fabric-sdk-node is the best channel to use to get the attention of the fabric-sdk-node maintainers","username":"dave.enyeart","ts":"2019-08-30T13:05:20.422Z"}
{"msg":"In case you missed it - protos have been moved to hyperledger/fabric-protos-go this morning in https://gerrit.hyperledger.org/r/#/c/fabric/+/33279/. Many CRs will need to be rebased and re-verified with `VerifyBuild`","username":"dave.enyeart","ts":"2019-08-30T13:06:32.912Z"}
{"msg":"In case you missed it - protos have been moved to hyperledger/fabric-protos-go this morning in https://gerrit.hyperledger.org/r/#/c/fabric/+/33279/. Many CRs will need to be rebased and re-verified with trigger `VerifyBuild`","username":"dave.enyeart","ts":"2019-08-30T13:06:32.912Z"}
{"msg":"We can't count on the old verify +1s in these situations.","username":"dave.enyeart","ts":"2019-08-30T13:07:28.512Z"}
{"msg":"yay","username":"MHBauer","ts":"2019-08-31T00:19:58.963Z"}
{"msg":"I request reviews as appropriate please: https://gerrit.hyperledger.org/r/#/q/status:open+%22FAB-16489%22","username":"rjones","ts":"2019-08-31T17:22:55.016Z"}
{"msg":"I request reviews and merges as appropriate please: https://gerrit.hyperledger.org/r/#/q/status:open+%22FAB-16489%22","username":"rjones","ts":"2019-08-31T17:22:55.016Z"}
{"msg":"These are more urgent: https://gerrit.hyperledger.org/r/#/q/status:open+%22FAB-16487%22","username":"rjones","ts":"2019-08-31T17:23:35.273Z"}
{"msg":"thanks @kostas I made the updates you suggested more broadly :)","username":"rjones","ts":"2019-09-02T19:21:42.318Z"}
{"msg":"I pray before the fabric maintainers to merge these: https://gerrit.hyperledger.org/r/q/message:%252216489%2522+label:verified%253D1+status:open and consider merging these: https://gerrit.hyperledger.org/r/q/message:%252216489%2522+label:verified%253C1+status:open even though they are not V+1. Many of them never will be - there is no automation on those repos.","username":"rjones","ts":"2019-09-03T13:59:10.357Z"}
{"msg":"I took care of fabric-ca and fabric-lib-go","username":"sykesm","ts":"2019-09-03T14:55:39.537Z"}
{"msg":"+2-ed and or merged those that I have privs for","username":"jyellick","ts":"2019-09-03T18:51:27.883Z"}
{"msg":"thank you both","username":"rjones","ts":"2019-09-03T20:24:40.246Z"}
{"msg":"I don't know if you can merge https://gerrit.hyperledger.org/r/q/status:open+%22FAB-16487%22 but that is a security issue","username":"rjones","ts":"2019-09-03T20:25:27.194Z"}
{"msg":"Most of them merged now","username":"dave.enyeart","ts":"2019-09-04T11:11:26.386Z"}
{"msg":"Agenda for today's Contributor Meeting:\n- Release update\n- CI and SCM update - @sykesm @BrettLogan \n- Node.js SDK v2.0 roadmap - @bretharrison @andrew-coleman ","username":"dave.enyeart","ts":"2019-09-04T11:14:14.761Z"}
{"msg":"Anything else to discuss?","username":"dave.enyeart","ts":"2019-09-04T11:14:27.973Z"}
{"msg":"@dave.enyeart I think it'd be good to discuss the October maintainers meeting: https://wiki.hyperledger.org/display/events/Maintainer+Summit+October+8-10%2C+2019","username":"lehors","ts":"2019-09-04T12:58:33.843Z"}
{"msg":"all maintainers are encouraged to attend, and it'd be best if some specific topics were identified and added to the agenda","username":"lehors","ts":"2019-09-04T12:59:11.339Z"}
{"msg":"@here maintainer meeting starting https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-09-04T13:02:15.169Z"}
{"msg":"@here contributor meeting starting https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-09-04T13:02:15.169Z"}
{"msg":"Here is the NodeSDK refactored low level\nhttps://jira.hyperledger.org/browse/FABN-1347","username":"bretharrison","ts":"2019-09-04T14:40:34.490Z"}
{"msg":"thank you","username":"rjones","ts":"2019-09-04T14:40:51.809Z"}
{"msg":"dang, sorry I missed that call","username":"rjones","ts":"2019-09-04T14:42:16.288Z"}
{"msg":"Recording is published at https://wiki.hyperledger.org/display/fabric/Contributor+Meetings","username":"dave.enyeart","ts":"2019-09-04T15:00:18.782Z"}
{"msg":"Any note on a registration cost for the Oct 8-10 Maintainer summit?","username":"medikent","ts":"2019-09-05T00:31:07.474Z"}
{"msg":"it","username":"lehors","ts":"2019-09-05T16:01:59.738Z"}
{"msg":"it's free","username":"lehors","ts":"2019-09-05T16:01:59.738Z"}
{"msg":"@medikent it's free","username":"lehors","ts":"2019-09-05T16:01:59.738Z"}
{"msg":"there is no admission free, but in life nothing is free @lehors   LOL","username":"mastersingh24","ts":"2019-09-05T18:08:17.937Z"}
{"msg":"Has joined the channel.","username":"rallam","ts":"2019-09-05T18:33:26.901Z","type":"uj"}
{"msg":"Hi, I have an application which does batch updates. Right now, it process only one application, and ignores the other one. How does chaincode/sdkclient act to multiple transaction submitted at the sametime..does it have code in place to handle concurrency..? Thank you! ","username":"rallam","ts":"2019-09-05T19:32:54.010Z"}
{"msg":"Hi, I have an application which does batch updates. Right now, it process only one transaction, and ignores the other one. How does chaincode/sdkclient act to multiple transaction submitted at the sametime..does it have code in place to handle concurrency..? Thank you! ","username":"rallam","ts":"2019-09-05T19:32:54.010Z"}
{"msg":"Hi, I have an application which does batch updates to the chaincode. Right now, it process only one transaction, and ignores the other one. How does chaincode/sdkclient act to multiple transaction submitted at the sametime..does it have code in place to handle concurrency..? Thank you! ","username":"rallam","ts":"2019-09-05T19:32:54.010Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=4vXK6nf72n4iQMB6P) @mastersingh24 I almost wrote \"free to you\" but thought people would understand. I guess you're not in that category 😋","username":"lehors","ts":"2019-09-05T20:54:51.878Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4vXK6nf72n4iQMB6P","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=4vXK6nf72n4iQMB6P","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Folks - please remember to Close the Jira when merging a CR.","username":"dave.enyeart","ts":"2019-09-06T13:17:14.925Z"}
{"msg":"I have four changes I would like to get merged: https://gerrit.hyperledger.org/r/#/q/fab-16489+status:open these set a baseline CODEOWNERS as part of the move to GitHub. I would like to get these in so that once the move is made, the teams can manage themselves.","username":"rjones","ts":"2019-09-06T15:36:00.684Z"}
{"msg":"+2ed what I could. need another. also need @andrew-coleman @bestbeforetoday for https://gerrit.hyperledger.org/r/#/c/fabric-gateway-java/+/33320/","username":"dave.enyeart","ts":"2019-09-06T15:52:47.836Z"}
{"msg":"Done","username":"bestbeforetoday","ts":"2019-09-06T17:01:30.352Z"}
{"msg":"We've seen a falling off in the number of maintainers reviewing CRs proactively... Reminder that we could use all maintainers help, especially at this time since we plan to retire Gerrit.","username":"dave.enyeart","ts":"2019-09-07T13:13:22.311Z"}
{"msg":"@dave.enyeart do you, the maintainers, think a stepwise move from Gerrit to GitHub would work? Take the atomic projects, move those, prove everything out?","username":"rjones","ts":"2019-09-07T13:21:32.095Z"}
{"msg":"We've been talking about doing one first to learn any lessons, likely fabric-ca. @BrettLogan is driving a plan... I'll put some notes over on #fabric-ci to drive more discussion.","username":"dave.enyeart","ts":"2019-09-07T15:43:00.715Z"}
{"msg":"Hi, I have an application which does batch updates to the chaincode. Right now, it process only one transaction, and ignores the other one. How does chaincode/sdkclient act to multiple transaction submitted at the sametime..does it have code in place to handle concurrency..? Thank you!","username":"rallam","ts":"2019-09-09T17:56:15.608Z"}
{"msg":"We should apply the next release tag to the Fabric SDK Go (last tag was end of March). Fabric SDK Go Beta 1 CR has been proposed: https://gerrit.hyperledger.org/r/c/fabric-sdk-go/+/33455","username":"troyronda","ts":"2019-09-11T14:42:37.726Z"}
{"msg":"As a step to moving to a new CI system for Fabric, the following repos have been archived: fabric-docs and fabric-test-resources. The following repos will have their Gerrit -> GitHub mirrors broken, Gerrit will be marked read-only, and GitHub will become the main SCM system for these repos: fabric-amcl, fabric-chaintool and homebrew-fabric. This process has been initiated, and will happen once the team at Linux Foundation IT services act on the ticket","username":"BrettLogan","ts":"2019-09-11T19:35:28.450Z"}
{"msg":"Has joined the channel.","username":"dsessions","ts":"2019-09-11T20:29:56.479Z","type":"uj"}
{"msg":"ibm","username":"dsessions","ts":"2019-09-11T20:29:57.557Z"}
{"msg":"\\o/","username":"MHBauer","ts":"2019-09-12T00:07:17.213Z"}
{"msg":"*Announcement*: On Monday morning Fabric-CA will migrate to GitHub for SCM and Azure Pipelines for CI. The Gerrit -> GitHub mirror will be broken as early as 0600 EST. Following this change, we will begin serving Pull Request's directly through GitHub. PR's will be built and tested in Azure Pipeline's and the results will be published to the GitHub Pull Request Conversation's tab as well as the Pull Request's Check's tab. Azure will post status updates at the beginning of the CI cycle as well as updating successes and failures in realtime. Link's to the actual Azure Pipeline's Job page can be obtained in the Pull Request's Check's tab. Gerrit will be read-only from that time point on, and will no longer accept pushes.","username":"BrettLogan","ts":"2019-09-13T15:13:53.952Z"}
{"msg":"*Announcement*: On Monday morning *Fabric-CA* will migrate to GitHub for SCM and Azure Pipelines for CI. The *Fabric-CA* Gerrit -> GitHub mirror will be broken as early as 0600 EST. Following this change, we will begin serving Pull Request’s through GitHub. *Fabric-CA* Gerrit will be taken read-only at the same time, and will no longer accept pushes. PR’s will be built and tested in Azure Pipeline’s and the results will be published to the GitHub Pull Request Conversation’s tab as well as the Pull Request’s Check’s tab. Azure will post status updates at the beginning of the CI cycle as well as updating successes and failures in realtime. Link’s to the actual Azure Pipeline’s Job page (where realtime job output, log archives from containers, and documentation build artifacts can be obtained) can be obtained in the Pull Request’s Check’s tab.","username":"BrettLogan","ts":"2019-09-13T15:13:53.952Z"}
{"msg":"*Announcement*: On Monday morning Fabric-CA will migrate to GitHub for SCM and Azure Pipelines for CI. The Gerrit -> GitHub mirror will be broken as early as 0600 EST. Following this change, we will begin serving Pull Request' through GitHub. Gerrit will be taken read-only at the same time, and will no longer accept pushes. PR's will be built and tested in Azure Pipeline's and the results will be published to the GitHub Pull Request Conversation's tab as well as the Pull Request's Check's tab. Azure will post status updates at the beginning of the CI cycle as well as updating successes and failures in realtime. Link's to the actual Azure Pipeline's Job page can be obtained in the Pull Request's Check's tab.","username":"BrettLogan","ts":"2019-09-13T15:13:53.952Z"}
{"msg":"*Announcement*: On Monday morning Fabric-CA will migrate to GitHub for SCM and Azure Pipelines for CI. The Gerrit -> GitHub mirror will be broken as early as 0600 EST. Following this change, we will begin serving Pull Request' through GitHub. Gerrit will be taken read-only at the same time, and will no longer accept pushes. PR's will be built and tested in Azure Pipeline's and the results will be published to the GitHub Pull Request Conversation's tab as well as the Pull Request's Check's tab. Azure will post status updates at the beginning of the CI cycle as well as updating successes and failures in realtime. Link's to the actual Azure Pipeline's Job page (where job output, log archives from containers and documentation build artifacts can be obtained) can be obtained in the Pull Request's Check's tab.","username":"BrettLogan","ts":"2019-09-13T15:13:53.952Z"}
{"msg":"*Announcement*: On Monday morning Fabric-CA will migrate to GitHub for SCM and Azure Pipelines for CI. The Gerrit -> GitHub mirror will be broken as early as 0600 EST. Following this change, we will begin serving Pull Request's through GitHub. Gerrit will be taken read-only at the same time, and will no longer accept pushes. PR's will be built and tested in Azure Pipeline's and the results will be published to the GitHub Pull Request Conversation's tab as well as the Pull Request's Check's tab. Azure will post status updates at the beginning of the CI cycle as well as updating successes and failures in realtime. Link's to the actual Azure Pipeline's Job page (where job output, log archives from containers and documentation build artifacts can be obtained) can be obtained in the Pull Request's Check's tab.","username":"BrettLogan","ts":"2019-09-13T15:13:53.952Z"}
{"msg":"*Announcement*: On Monday morning Fabric-CA will migrate to GitHub for SCM and Azure Pipelines for CI. The Gerrit -> GitHub mirror will be broken as early as 0600 EST. Following this change, we will begin serving Pull Request's through GitHub. Gerrit will be taken read-only at the same time, and will no longer accept pushes. PR's will be built and tested in Azure Pipeline's and the results will be published to the GitHub Pull Request Conversation's tab as well as the Pull Request's Check's tab. Azure will post status updates at the beginning of the CI cycle as well as updating successes and failures in realtime. Link's to the actual Azure Pipeline's Job page (where realtime job output, log archives from containers and documentation build artifacts can be obtained) can be obtained in the Pull Request's Check's tab.","username":"BrettLogan","ts":"2019-09-13T15:13:53.952Z"}
{"msg":"*Announcement*: On Monday morning Fabric-CA will migrate to GitHub for SCM and Azure Pipelines for CI. The Gerrit -> GitHub mirror will be broken as early as 0600 EST. Following this change, we will begin serving Pull Request's through GitHub. Gerrit will be taken read-only at the same time, and will no longer accept pushes. PR's will be built and tested in Azure Pipeline's and the results will be published to the GitHub Pull Request Conversation's tab as well as the Pull Request's Check's tab. Azure will post status updates at the beginning of the CI cycle as well as updating successes and failures in realtime. Link's to the actual Azure Pipeline's Job page (where realtime job output, log archives from containers, and documentation build artifacts can be obtained) can be obtained in the Pull Request's Check's tab.","username":"BrettLogan","ts":"2019-09-13T15:13:53.952Z"}
{"msg":"This will be a learning process for both the migration process and the PR process. You should follow this closely as this migration will help redefine our PR process moving forward for all repos","username":"BrettLogan","ts":"2019-09-13T15:16:33.096Z"}
{"msg":"This will be a learning process for both the migration process and the PR process. You should follow this closely and provide input as this migration will help redefine our PR process moving forward for all repos. As a reminder, #fabric-ci exists for conversations related to CI","username":"BrettLogan","ts":"2019-09-13T15:16:33.096Z"}
{"msg":"cool!","username":"MHBauer","ts":"2019-09-13T16:52:04.481Z"}
{"msg":"When is the ETA of the Fabric core migration, and is there a plan to terminate gerrit for Fabric core (take offline completely)? I am asking because I think keeping a read only gerrit server for a while (a few months) would be good. @BrettLogan ","username":"yacovm","ts":"2019-09-13T17:46:35.202Z"}
{"msg":"@yacovm my expectation is that, like other projects, the Gerrit instance will live on read-only as long as the project is willing to pay for it.","username":"rjones","ts":"2019-09-13T17:47:29.645Z"}
{"msg":"^^^","username":"BrettLogan","ts":"2019-09-13T17:47:45.639Z"}
{"msg":"I have done exports of Gerrit to GitHub, and it is not pretty.","username":"rjones","ts":"2019-09-13T17:48:22.080Z"}
{"msg":"I am preparing a proposal for the Wednesday maintainers meeting to open the discussion around time-frames for the other repos","username":"BrettLogan","ts":"2019-09-13T17:48:27.105Z"}
{"msg":"Every change set is a new branch - so every repo has thousands of branches.","username":"rjones","ts":"2019-09-13T17:48:39.824Z"}
{"msg":"Here is an example: https://github.com/alljoyn/core-alljoyn 4600 commits, 6200 branches","username":"rjones","ts":"2019-09-13T17:49:45.613Z"}
{"msg":"@rjones if you don't need all of those branches, then you can trim them after migration","username":"dhuseby","ts":"2019-09-13T21:00:31.332Z"}
{"msg":"@dhuseby and you lose the code reviews.","username":"rjones","ts":"2019-09-13T21:31:11.545Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-09-16T15:36:12.257Z","type":"ul"}
{"msg":"Fabric CA has officially been migrated to GitHub. Code changes can be submitted through the PR process via the repo at https://github.com/hyperledger/fabric-ca","username":"BrettLogan","ts":"2019-09-17T01:30:44.323Z"}
{"msg":"CI is executed in Azure Pipelines and the UI can be found at https://dev.azure.com/Hyperledger/Fabric%20CA/_build\n","username":"BrettLogan","ts":"2019-09-17T01:30:49.818Z"}
{"msg":"CI is executed in Azure Pipelines and the UI can be found at https://dev.azure.com/Hyperledger/Fabric%CA/_build\n","username":"BrettLogan","ts":"2019-09-17T01:30:49.818Z"}
{"msg":"CI is executed in Azure Pipelines and the UI can be found at https://dev.azure.com/Hyperledger/Fabric CA/_build\n","username":"BrettLogan","ts":"2019-09-17T01:30:49.818Z"}
{"msg":"Have we outlined / documented the process we are using?  Typical flow where people fork and submit PRs?","username":"mastersingh24","ts":"2019-09-17T07:52:08.657Z"}
{"msg":"I am hoping to have a rough draft ready later today for the maintainers to look over and approve. Trying to make sure we cover as many bases in it as possible from the start","username":"BrettLogan","ts":"2019-09-17T12:32:27.081Z"}
{"msg":"What \"cases\" could there be? We need to pick one thing and do that. Not support multiple.","username":"MHBauer","ts":"2019-09-17T19:51:38.108Z"}
{"msg":"By cases I mean supporting both contributions from Gerrit and GitHub. Until we migrate everything, we have to interim support both, and make sure the doc is clear on processes for both, and that it is clear which repos are in which systems","username":"BrettLogan","ts":"2019-09-17T20:07:01.182Z"}
{"msg":"By \"bases\" I mean supporting both contributions from Gerrit and GitHub. Until we migrate everything, we have to interim support both, and make sure the doc is clear on processes for both, and that it is clear which repos are in which system","username":"BrettLogan","ts":"2019-09-17T20:07:01.182Z"}
{"msg":"We don't want to have to field dozens of questions about why pushes aren't being accepted in Gerrit as we migrate because we aren't clear enough in the doc, or don't make it accessible enough","username":"BrettLogan","ts":"2019-09-17T20:08:19.980Z"}
{"msg":":+1: ","username":"MHBauer","ts":"2019-09-17T20:08:39.412Z"}
{"msg":"@BrettLogan is there a doc in the process of moving from gerrit to github? I am curious mostly about how we convert our current ci/cd builds.","username":"swetha","ts":"2019-09-17T20:11:36.678Z"}
{"msg":"@BrettLogan is there a doc on the process of moving from gerrit to github? I am curious mostly about how we convert our current ci/cd builds.","username":"swetha","ts":"2019-09-17T20:11:36.678Z"}
{"msg":"There is not. It's fairly straightforward, the vast, vast majority of the work is handled by LFIT. In tomorrows Fabric's maintainers call I will go over what we did to migrate Fabric CA. I am reaching out to a maintainer in each project, who I am asking to discuss with the rest of the maintainers when they would like to migrate. Due to the tight timeline for getting this work done, I am offering to do the migration for several projects where their CI pipelines are trivial to replicate in Azure, so we can get them done asap. The remaining teams who I don't have the cycles to offer my help, I am scheduling meetings with their maintainers so I can give them the information they need to do this on their own.","username":"BrettLogan","ts":"2019-09-17T20:23:50.279Z"}
{"msg":"Thanks for the info! I am one of the maintainers for the fabric-chaincode-evm. I know in the past we have had ci/cd issues because our project was using pipelines instead of what fabric core was using. Do you know if that will be a problem for us?","username":"swetha","ts":"2019-09-17T20:25:19.523Z"}
{"msg":"With Azure you will have total ownership over your CI, you won't have a dependency on the CI-Management repo like you do today. You will handle all of your own dependency installation and configuring your pipeline in whatever manner you see fit ","username":"BrettLogan","ts":"2019-09-17T20:26:31.251Z"}
{"msg":"Oh great! I will wait for tomorrow's call to learn more then :) Thanks!","username":"swetha","ts":"2019-09-17T20:27:27.504Z"}
{"msg":"I'll probably catch the recording afterwards. Too early.","username":"MHBauer","ts":"2019-09-17T21:01:38.303Z"}
{"msg":"I can't seem to use the latest Docker images from master","username":"sstone1","ts":"2019-09-18T08:23:33.908Z"}
{"msg":"```\n$ docker run --rm -it hyperledger/fabric-orderer\nstandard_init_linux.go:211: exec user process caused \"no such file or directory\"\n\n$ docker run --rm -it hyperledger/fabric-orderer sh\n/ # orderer \nsh: orderer: not found\n/ # ls -lart $(which orderer)\n-rwxrwxr-x    1 root     root      40709240 Sep 18 00:38 /usr/local/bin/orderer\n/ # file $(which orderer)\n/usr/local/bin/orderer: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, Go BuildID=CwjXkg9GqLuUBAKs79oR/EufQYnLs5NH0atAf5YPD/PKXT7U_VQ4kyy1L4goin/VZX8KxoXgsd5xR49aDwb, BuildID[sha1]=f97518d7fc15fb7f8e0d47870b13883103e74f94, not stripped\n/ # /usr/local/bin/orderer \nsh: /usr/local/bin/orderer: not found\n/ # ldd /usr/local/bin/orderer \n\t/lib64/ld-linux-x86-64.so.2 (0x7eff1968e000)\n\tlibpthread.so.0 => /lib64/ld-linux-x86-64.so.2 (0x7eff1968e000)\n\tlibdl.so.2 => /lib64/ld-linux-x86-64.so.2 (0x7eff1968e000)\n\tlibc.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7eff1968e000)\n```","username":"sstone1","ts":"2019-09-18T08:23:48.821Z"}
{"msg":"@sstone1 my best guess is this is related to the changes merged yesterday that change the image build process. I will confer with the developer and we will fix and republish asap","username":"BrettLogan","ts":"2019-09-18T11:33:43.515Z"}
{"msg":":+1: thanks @BrettLogan ","username":"sstone1","ts":"2019-09-18T11:52:26.409Z"}
{"msg":"@sstone1 did you pull those images or build them locally","username":"BrettLogan","ts":"2019-09-18T12:16:27.784Z"}
{"msg":"pulled them from nexus","username":"sstone1","ts":"2019-09-18T12:17:25.080Z"}
{"msg":"@here  Agenda for today's Fabric Contributor Meeting - starting in 10 minutes:\n- v2.0 release update\n- CI and SCM update - Brett Logan\n- Fabric v2.0 - ledger data upgrade Manish Sethi, Wenjian Qiao\nAny other topics?","username":"dave.enyeart","ts":"2019-09-18T12:51:39.586Z"}
{"msg":"@here  Agenda for today's Fabric Contributor Meeting - starting in 10 minutes:\n- v2.0 release update\n- CI and SCM update - Brett Logan\n- Fabric v2.0 - ledger data upgrade - Manish Sethi, Wenjian Qiao\nAny other topics?","username":"dave.enyeart","ts":"2019-09-18T12:51:39.586Z"}
{"msg":"As a reminder anybody can propose topics for future meetings here, and then we'll update the schedule at https://wiki.hyperledger.org/display/fabric/Contributor+Meetings","username":"dave.enyeart","ts":"2019-09-18T12:53:03.365Z"}
{"msg":"Contributor Meeting web conference: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-09-18T12:59:30.668Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-09-18T13:52:02.837Z","type":"uj"}
{"msg":"@dave.enyeart let me know how or when I can help","username":"rjones","ts":"2019-09-18T15:07:59.026Z"}
{"msg":"","username":"BrettLogan","ts":"2019-09-19T01:32:18.253Z","attachments":[{"type":"file","title":"Clipboard - September 18, 2019 9:32 PM","title_link":"/file-upload/jLDqRq7R63PXkAMsJ/Clipboard%20-%20September%2018,%202019%209:32%20PM","image_url":"/file-upload/jLDqRq7R63PXkAMsJ/Clipboard%20-%20September%2018,%202019%209:32%20PM","image_type":"image/png","image_size":59414,"url":"/file-upload/jLDqRq7R63PXkAMsJ/Clipboard%20-%20September%2018,%202019%209:32%20PM","remote":false,"fileId":"jLDqRq7R63PXkAMsJ","fileName":"Clipboard - September 18, 2019 9:32 PM"}]}
{"msg":"@here Hello Fabric maintainers! As most of you are aware, earlier this week we migrated Fabric CA from Gerrit to GitHub for SCM and Jenkins to Azure Pipelines for CI. That changeover went off without any hiccups. In this morning’s maintainers call we have proposed moving Fabric as the next repository. With a deadline of 12/31 for migrating repos, and the Fabric 2.0 release slated for late Q4, waiting to migrate Fabric until after 2.0 is released is no longer a viable option. In a sooner-rather-than-later move, we are proposing to migrate the core Fabric repo from Gerrit to GitHub and Jenkins to Azure Pipelines on Friday, 9/27 at 0900 PST.","username":"BrettLogan","ts":"2019-09-19T01:33:27.088Z"}
{"msg":"Hello Fabric maintainers! As most of you are aware, earlier this week we migrated Fabric CA from Gerrit to GitHub for SCM and Jenkins to Azure Pipelines for CI. That changeover went off without any hiccups. In this morning’s maintainers call we have proposed moving Fabric as the next repository. With a deadline of 12/31 for migrating repos, and the Fabric 2.0 release slated for late Q4, waiting to migrate Fabric until after 2.0 is released is no longer a viable option. In a sooner-rather-than-later move, we are proposing to migrate the core Fabric repo from Gerrit to GitHub and Jenkins to Azure Pipelines on Friday, 9/27 at 0900 PST. With that in mind, this proposal includes the fact that the Fabric maintainers will need to cleanup existing CR’s in Gerrit. To accommodate this, we are proposing a “code freeze” starting Monday 9/23 at 0600 PST. This will give the maintainers the week to abandon, merge, or request changes to existing CR’s. During this time period we will ask developers to submit changes directly through GitHub’s pull request process (will communicate through mailing list, rocket chat, and comment on CR’s that are erroneously opened in Gerrit). These PR’s will remain in place until the migration has finished on Friday, then we will mass trigger these PR’s to run CI against them. This early migration will provide us an opportunity to build out release pipelines as well and test those release pipelines with a potential 2.0-beta release. Assuming no dissention we hope to move forward with this plan and look forward to lowering our barrier of entry for new contributors, by adopting these industry standards, and opening up Fabric to contributions from contributors who may have been turned off in the past to the CR process in Gerrit.","username":"BrettLogan","ts":"2019-09-19T01:33:27.088Z"}
{"msg":"Hello Fabric maintainers! As most of you are aware, earlier this week we migrated Fabric CA from Gerrit to GitHub for SCM and Jenkins to Azure Pipelines for CI. That changeover went off without any hiccups. In this morning’s maintainers call we have proposed moving Fabric as the next repository. With a deadline of 12/31 for migrating repos, and the Fabric 2.0 release slated for late Q4, waiting to migrate Fabric until after 2.0 is released is no longer a viable option. In a sooner-rather-than-later move, we are proposing to migrate the core Fabric repo from Gerrit to GitHub and Jenkins to Azure Pipelines on Friday, 9/27 at 0900 PST.","username":"BrettLogan","ts":"2019-09-19T01:33:27.088Z"}
{"msg":"With that in mind, this proposal includes the fact that the Fabric maintainers will need to cleanup existing CR’s in Gerrit. To accommodate this, we are proposing a “code freeze” starting Monday 9/23 at 0600 PST. This will give the maintainers the week to abandon, merge, or request changes to existing CR’s. During this time period we will ask developers to submit changes directly through GitHub’s pull request process (will communicate through mailing list, rocket chat, and comment on CR’s that are erroneously opened in Gerrit). These PR’s will remain in place until the migration has finished on Friday, then we will mass trigger these PR’s to run CI against them. This early migration will provide us an opportunity to build out release pipelines as well and test those release pipelines with a potential 2.0-beta release. Assuming no dissention we hope to move forward with this plan and look forward to lowering our barrier of entry for new contributors, by adopting these industry standards, and opening up Fabric to contributions from contributors who may have been turned off in the past due to the CR process in Gerrit.","username":"BrettLogan","ts":"2019-09-19T01:33:36.787Z"}
{"msg":"With that in mind, this proposal includes the fact that the Fabric maintainers will need to cleanup existing CR’s in Gerrit. To accommodate this, we are proposing a “code freeze” starting Monday 9/23 at 0600 PST. This will give the maintainers the week to abandon, merge, or request changes to existing CR’s. During this time period we will ask developers to submit changes directly through GitHub’s pull request process (will communicate through mailing list, rocket chat, and comment on CR’s that are erroneously opened in Gerrit). These PR’s will remain in place until the migration has finished on Friday, then we will mass trigger these PR’s to run CI against them. This early migration will provide us an opportunity to build out release pipelines as well and test those release pipelines with a potential 2.0-beta release. Assuming no dissention we hope to move forward with this plan and look forward to lowering our barrier of entry for new contributors, by adopting these industry standards, and opening up Fabric to contributions from contributors who may have been turned off in the past to the CR process in Gerrit.","username":"BrettLogan","ts":"2019-09-19T01:33:36.787Z"}
{"msg":"@here We ask that all maintainers pause their own work items for a week in order to focus all energy on getting through the fabric gerrit backlog.","username":"dave.enyeart","ts":"2019-09-19T11:11:33.358Z"}
{"msg":"For review comments that have been lingering, I think it is reasonable for us to upload patches to address review comments rather than continue to wait for the original submitter.","username":"dave.enyeart","ts":"2019-09-19T11:11:36.704Z"}
{"msg":"@here UPDATE: A few of the maintainers talked after the contributor meeting and we'd like to better understand the github PR review process before we open the flood gates for Fabric PRs.\nWe will take a deeper look at this next week and share here.\nWe will NOT code freeze Fabric in Gerrit September 23rd and will NOT cutover to github September 27th.\nWe will communicate an updated date after getting comfortable with the github PR review process.\nIn the meantime, it still makes sense to expedite getting through the Gerrit review backlog, so no change there.\nI would encourage trivial PRs to Fabric CA in Github so that everybody gets comfortable with the new flow.","username":"dave.enyeart","ts":"2019-09-19T19:36:35.864Z"}
{"msg":"@here Hyperledger has a test org. If you want to play with stuff, please let me know your GitHub ID. I am inviting everyone as an owner so you can see all the options available.","username":"rjones","ts":"2019-09-19T19:56:05.145Z"}
{"msg":"@BrettLogan and @sykesm also have the ability to add people to https://github.com/hyperledger-cicd - no need to block on me","username":"rjones","ts":"2019-09-19T19:56:58.475Z"}
{"msg":"litong01 is my id, @rjones ","username":"tongli","ts":"2019-09-19T20:05:05.189Z"}
{"msg":"you are a member since last week","username":"rjones","ts":"2019-09-19T20:11:57.817Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Migration+status I will hook this up and replace it with a JIRA query _soon_","username":"rjones","ts":"2019-09-19T20:22:40.061Z"}
{"msg":"nice page","username":"MHBauer","ts":"2019-09-19T20:29:40.597Z"}
{"msg":"thanks. I assume it is duplicating a JIRA query somewhere","username":"rjones","ts":"2019-09-19T20:52:40.159Z"}
{"msg":"ha","username":"MHBauer","ts":"2019-09-19T20:54:32.422Z"}
{"msg":"@dave.enyeart hi, wondering if the contributor meeting record is available now? thx!","username":"guoger","ts":"2019-09-20T03:41:29.055Z"}
{"msg":"@guoger https://wiki.hyperledger.org/display/fabric/Contributor+Meetings has them at the bottom of the page","username":"rjones","ts":"2019-09-20T05:11:21.093Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Migration+status Feel free to kibitz on this list","username":"rjones","ts":"2019-09-25T13:45:12.328Z"}
{"msg":"hi there, I'm surprised not to see any announcements about the move to github on the mailing list, did I miss it?","username":"lehors","ts":"2019-09-25T17:59:19.160Z"}
{"msg":"we should blast the mailing list with messages letting people know what's going on","username":"lehors","ts":"2019-09-25T17:59:38.531Z"}
{"msg":"the fabric-ca README still points to gerrit for contributions...","username":"lehors","ts":"2019-09-25T18:00:02.162Z"}
{"msg":"I heard on the recording of last week's contributors call that we would have special instructions until we can update readthedocs, when is that going to happen??","username":"lehors","ts":"2019-09-25T18:00:58.031Z"}
{"msg":"I love Dave's status reports on this channel and the recordings of the contributors calls because they help a lot in finding out what's up when I have been busy with other things but we can't rely on everyone to know to look into those to find out that there is a major change going on","username":"lehors","ts":"2019-09-25T18:03:18.986Z"}
{"msg":"we have to crank up our communication here","username":"lehors","ts":"2019-09-25T18:03:30.007Z"}
{"msg":"While I totally agree that we need to blast the mailing list about major happenings with the CI migration there are a few reasons we have elected not to do so just yet (we actually had major communications prepared for the mailing list last week, but decided to hold off). Chief among these reasons are that historically speaking we have had a large number of CI anti-patterns copied throughout the hyperledger org that have just made things impossible to maintain and update. We chose to move Fabric-CA first to learn the process, but to also make 100% sure we get it right before moving Fabric and engaging the larger community. A number of the Fabric-CA maintainers have been meeting several times a week to go over whats been done and make sure we get this right. Our fear is announcing too soon, and people being turned off by the lack of defined processes, or people replicating existing bad patterns and those spreading throughout the community. I do agree we can do several things better in the meantime: At the very least update the Fabric CONTRIBUTING doc to point to the CA readme and add minor GitHub contribution facts (with a 'beta'-like tag on that section that lets people know these aren't finalized) to the CA readme and second, send an email to the mailing list saying that we have retired Gerrit for CA and migrated to GitHub, and see the Fabric CA readme for contribution guidelines. Our intention has never been to hide whats happening, it was to at least be transparent in existing channels as we can, without replicating Fabric's history of bad practices in CI. And once we knew we had it right, then blast the email list.","username":"BrettLogan","ts":"2019-09-25T18:27:05.089Z"}
{"msg":"While I totally agree that we need to blast the mailing list about major happenings with the CI migration there are a few reasons we have elected not to do so just yet (we actually had major communications prepared for the mailing list last week, but decided to hold off). Chief among these reasons are that historically speaking we have had a large number of CI anti-patterns copied throughout the hyperledger org that have just made things impossible to maintain and update. We chose to move Fabric-CA first to learn the process, but to also make 100% sure we get it right before moving Fabric and engaging the larger community. A number of the Fabric-CA maintainers have been meeting several times a week to go over whats been done and make sure we get this right. Our fear is announcing too soon, and people being turned off by the lack of defined processes, or people replicating existing bad patterns and those spreading throughout the community. I do agree we can do several things better in the meantime: At the very least update the Fabric CONTRIBUTING doc to point to the CA readme and add minor GitHub contribution facts (with a 'beta' tag on that section) to the CA readme and second, send an email to the mailing list saying that we have retired Gerrit for CA and migrated to GitHub, and see the Fabric CA readme for contribution guidelines. Our intention has never been to hide whats happening, it was to at least be transparent in existing channels as we can, without replicating Fabric's history of bad practices in CI. And once we knew we had it right, then blast the email list.","username":"BrettLogan","ts":"2019-09-25T18:27:05.089Z"}
{"msg":"I will take it up as a task by end of week to finish updating the fabric-ca readme with a pointer from CONTRIBUTING docs, and to let the email list know this information is available and CA has migrated","username":"BrettLogan","ts":"2019-09-25T18:27:42.772Z"}
{"msg":"I will take it up as a task by end of week to finish updating the fabric readme with a pointer from CONTRIBUTING docs, and to let the email list know this information is available and CA has migrated","username":"BrettLogan","ts":"2019-09-25T18:27:42.772Z"}
{"msg":"the README should have a big banner with a warning","username":"lehors","ts":"2019-09-25T18:34:37.165Z"}
{"msg":"readthedocs too","username":"lehors","ts":"2019-09-25T18:34:37.192Z"}
{"msg":"I have no doubts that it's not because anyone is trying to hide anything","username":"lehors","ts":"2019-09-25T18:37:39.796Z"}
{"msg":"but I think the fear you are referring to is ill founded","username":"lehors","ts":"2019-09-25T18:37:55.892Z"}
{"msg":"I see zero reason not to say what you just stated here on the mailing list","username":"lehors","ts":"2019-09-25T18:38:11.372Z"}
{"msg":"people aren't stupid","username":"lehors","ts":"2019-09-25T18:38:17.050Z"}
{"msg":"they can understand","username":"lehors","ts":"2019-09-25T18:38:21.701Z"}
{"msg":"IF they are told what's going on","username":"lehors","ts":"2019-09-25T18:38:30.765Z"}
{"msg":"it's nice for the maintainers to be talking to one another but that's not enough","username":"lehors","ts":"2019-09-25T18:38:46.480Z"}
{"msg":"there should have been an announcement sent about the coming changes","username":"lehors","ts":"2019-09-25T18:39:32.970Z"}
{"msg":"and there should be on going updates being sent out","username":"lehors","ts":"2019-09-25T18:39:43.277Z"}
{"msg":"call me old school if you want but I don't think filling up RC's channels cuts it","username":"lehors","ts":"2019-09-25T18:40:21.476Z"}
{"msg":"this should be sent out to the mailing list","username":"lehors","ts":"2019-09-25T18:40:34.687Z"}
{"msg":"Worry not.... No one is pushing CRs to Fabric CA anyway","username":"yacovm","ts":"2019-09-25T18:56:29.779Z"}
{"msg":"come on Yacov, that's beside the point","username":"lehors","ts":"2019-09-25T18:56:59.835Z"}
{"msg":"sorry if I missed the sarcasm ;-)","username":"lehors","ts":"2019-09-25T18:57:22.245Z"}
{"msg":"I'm just saying that Brett's approach makes sense - let's be sure we have all the things in place before we do official announcements ","username":"yacovm","ts":"2019-09-25T18:57:40.907Z"}
{"msg":"I don't agree","username":"lehors","ts":"2019-09-25T18:58:05.318Z"}
{"msg":"if we move a repo we ought to let people know","username":"lehors","ts":"2019-09-25T18:58:18.917Z"}
{"msg":"whether it's fabric-ca or any other","username":"lehors","ts":"2019-09-25T18:58:26.541Z"}
{"msg":"the mere fact that we are working on it justifies letting people know","username":"lehors","ts":"2019-09-25T18:58:49.021Z"}
{"msg":"I see as no different than when I received an email from a sysadmin saying \"watch out we are going to do a maintenance upgrade on xxx on <date> - expect a disruption of the service blah blah\"","username":"lehors","ts":"2019-09-25T19:00:46.748Z"}
{"msg":"I see this as no different than when I received an email from a sysadmin saying \"watch out we are going to do a maintenance upgrade on xxx on <date> - expect a disruption of the service blah blah\"","username":"lehors","ts":"2019-09-25T19:00:46.748Z"}
{"msg":"I see this as no different than when I receive an email from a sysadmin saying \"watch out we are going to do a maintenance upgrade on xxx on <date> - expect a disruption of the service blah blah\"","username":"lehors","ts":"2019-09-25T19:00:46.748Z"}
{"msg":"then sometimes you get correcting announcements and the likes but at least you're informed","username":"lehors","ts":"2019-09-25T19:01:14.669Z"}
{"msg":"by the way, there is a repo that I didn't see listed on the slide: fabric-test-resources","username":"lehors","ts":"2019-09-25T19:06:20.563Z"}
{"msg":"I don't know whether it's actually sill used","username":"lehors","ts":"2019-09-25T19:07:00.159Z"}
{"msg":"it was removed","username":"rjones","ts":"2019-09-25T19:07:04.921Z"}
{"msg":"ah, but it says it's a mirror and points to gerrit","username":"lehors","ts":"2019-09-25T19:07:44.265Z"}
{"msg":"https://github.com/hyperledger-archives/fabric-test-resources-gerrit","username":"rjones","ts":"2019-09-25T19:07:49.356Z"}
{"msg":"ok, it may not matter","username":"lehors","ts":"2019-09-25T19:08:26.175Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/fabric-test-resources is the dashboard for that project","username":"rjones","ts":"2019-09-25T19:08:35.508Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Migration+status contains the fabric repos","username":"rjones","ts":"2019-09-25T19:08:48.167Z"}
{"msg":"good to know, thanks","username":"lehors","ts":"2019-09-25T19:09:11.922Z"}
{"msg":"how does one know about this wiki?","username":"lehors","ts":"2019-09-25T19:09:36.670Z"}
{"msg":"It is a page I created to work with Brett and Dave while we were plowing through the easy ones.","username":"rjones","ts":"2019-09-25T19:10:16.784Z"}
{"msg":"seems useful, I recommend letting people know about when the plan is announced (last week ;-)","username":"lehors","ts":"2019-09-25T19:11:02.639Z"}
{"msg":"seems useful, I recommend letting people know about it when the plan is announced (last week ;-)","username":"lehors","ts":"2019-09-25T19:11:02.639Z"}
{"msg":"I don't think I called anyone stupid. What I said was, historically people have copied existing code, for better or for worse, and that has lead to major problems. Unfortunately this is a fact. With every project in hyperledger currently revisiting CI, and Fabric being the most visible, we run a very real risk of people copying what we do. Our first revision to CA included things like `go get golint` which is the way it was done years ago. Having taken a step back, we realize this is a not the right approach anymore. These dependencies should be versioned. Unfortunately, every single repository that is Go-based has this anti-pattern copied in it's CI. If we blast the email list with every little thing that we do, we will never get a good CI system in place. Waiting until we are 100% ready to announce is logical when only 0.001% of the community is able to answer questions on CI and provide fixes for the current system. If I spent my workday and freetime and sleeptime doing nothing but answering CI questions (which is what I spend my time doing now) and sending emails, we would never get closer to getting this done. Again, I do agree we should have sent an email about the transition, and updated the readme by now, we will get that done","username":"BrettLogan","ts":"2019-09-25T19:16:20.897Z"}
{"msg":"I don't think I called anyone stupid. What I said was, historically people have copied existing code, for better or for worse, and that has lead to major problems. Unfortunately this is a fact. With every project in hyperledger currently revisiting CI, and Fabric being the most visible, we run a very real risk of people copying what we do. Our first revision to CA included things like `go get golint` which is the way it was done years ago. Having taken a step back, we realize this is a not the right approach anymore. These dependencies should be versioned. Unfortunately, every single repository that is Go-based has this anti-pattern copied in it's CI. If we blast the email list with every little thing that we do, we will never get a good CI system in place. Waiting until we are 100% ready to announce is logical when only 0.001% of the community is able to answer questions on CI. If I spent my workday and freetime and sleeptime doing nothing but answering CI questions (which is what I spend my time doing now) and sending emails, we would never get closer to getting this done. Again, I do agree we should have sent an email about the transition, and updated the readme by now, and I will get it done, this one-man-team only has so many cycles to contribute. I can only offer my apologies that these things haven't happened yet and promise to work towards getting them done","username":"BrettLogan","ts":"2019-09-25T19:16:20.897Z"}
{"msg":"I don't think I called anyone stupid. What I said was, historically people have copied existing code, for better or for worse, and that has lead to major problems. Unfortunately this is a fact. With every project in hyperledger currently revisiting CI, and Fabric being the most visible, we run a very real risk of people copying what we do. Our first revision to CA included things like `go get golint` which is the way it was done years ago. Having taken a step back, we realize this is a not the right approach anymore. These dependencies should be versioned. Unfortunately, every single repository that is Go-based has this anti-pattern copied in it's CI. If we blast the email list with every little thing that we do, we will never get a good CI system in place. Waiting until we are 100% ready to announce is logical when only 0.001% of the community is able to answer questions on CI and provide fixes for the current system. If I spent my workday and freetime and sleeptime doing nothing but answering CI questions (which is what I spend my time doing now) and sending emails, we would never get closer to getting this done. Again, I do agree we should have sent an email about the transition, and updated the readme by now, and I will get it done, this one-man-team only has so many cycles to contribute. I can only offer my apologies that these things haven't happened yet and promise to work towards getting them done","username":"BrettLogan","ts":"2019-09-25T19:16:20.897Z"}
{"msg":"I don't think I called anyone stupid. What I said was, historically people have copied existing code, for better or for worse, and that has lead to major problems. Unfortunately this is a fact. With every project in hyperledger currently revisiting CI, and Fabric being the most visible, we run a very real risk of people copying what we do. Our first revision to CA included things like `go get golint` which is the way it was done years ago. Having taken a step back, we realize this is a not the right approach anymore. These dependencies should be versioned. Unfortunately, every single repository that is Go-based has this anti-pattern copied in it's CI. If we blast the email list with every little thing that we do, we will never get a good CI system in place. Waiting until we are 100% ready to announce is logical when only 0.001% of the community is able to answer questions on CI and provide fixes for the current system. If I spent my workday and freetime and sleeptime doing nothing but answering CI questions (which is what I spend my time doing now) and sending emails, we would never get closer to getting this done. Again, I do agree we should have sent an email about the transition, and updated the readme by now, and I will get it done, this one-man-team only has so many cycles to contribute.","username":"BrettLogan","ts":"2019-09-25T19:16:20.897Z"}
{"msg":"@lehors I was trying to decide between a JIRA epic and a wiki page, and I wanted to get some experience with the Decisions macro for... reasons :)","username":"rjones","ts":"2019-09-25T19:24:05.124Z"}
{"msg":"Brett, I'm sorry if I sounded unappreciative of all the effort being put into all this. I really didn't mean that. I just think there is a desirable middle ground between \"blasting the list with every little thing\" and not saying anything.","username":"lehors","ts":"2019-09-25T19:42:43.539Z"}
{"msg":"I think this is such a major change that it deserves more communication","username":"lehors","ts":"2019-09-25T19:43:15.139Z"}
{"msg":"And this doesn't mean that *you* should be responsible for it","username":"lehors","ts":"2019-09-25T19:43:57.595Z"}
{"msg":"@BrettLogan thanks for answering us for the fabric-chaincode-evm ","username":"MHBauer","ts":"2019-09-25T19:44:30.219Z"}
{"msg":"@lehors You are correct that we should announce plans and contribution guidance. The gap is that we are still pulling together the plan and contribution guidance! The near-zero traffic fabric-ca repository was chosen as the guinea pig so that we could discover any issues, and nail down concrete plans and contribution guidance. These are currently being written down in a proposal that will go out to the mailing list.","username":"dave.enyeart","ts":"2019-09-25T20:47:19.715Z"}
{"msg":"Brett actually did draft a mailing list note for the fabric-ca transition, upon review by a few maintainers we thought it would be more effective to share the proposal for the next repositories in parallel with the announcement, otherwise it would lead to more questions than answers.","username":"dave.enyeart","ts":"2019-09-25T20:47:29.435Z"}
{"msg":"Shame on us - we gambled and didn't count on an astute contributor catching us in the days inbetween :) Point taken.","username":"dave.enyeart","ts":"2019-09-25T20:47:37.010Z"}
{"msg":"FYI: we are aware of the severe degradation of performance with Gerrit over the last 24 hours. We are actively working with the linux foundation to identify the issue and provide remedy as soon as possible","username":"BrettLogan","ts":"2019-09-27T12:46:42.564Z"}
{"msg":"https://status.linuxfoundation.org/incidents/y197yg8qpb4d","username":"rjones","ts":"2019-09-27T13:22:47.414Z"}
{"msg":"For those of you with pending CI builds, I am working to identify the issue with LFIT. Jenkin's went into an unplanned shutdown, and with no jobs pending, isn't executing the shutdown cycle. We will update you when we have more information.","username":"BrettLogan","ts":"2019-09-30T14:41:02.272Z"}
{"msg":"LFIT has fixed the issue","username":"BrettLogan","ts":"2019-09-30T15:04:36.759Z"}
{"msg":"Has joined the channel.","username":"EltonSearcy","ts":"2019-09-30T17:06:04.820Z","type":"uj"}
{"msg":"key","username":"dave.enyeart","ts":"2019-09-30T17:30:52.389Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/fabric/+/33817","username":"BrettLogan","ts":"2019-10-01T16:57:43.880Z"}
{"msg":"First draft of github contributions","username":"BrettLogan","ts":"2019-10-01T16:58:01.850Z"}
{"msg":"https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-docs-build-x86_64/2221/html/github/github.html","username":"BrettLogan","ts":"2019-10-01T16:58:22.677Z"}
{"msg":"As a reminder this is a stop gap for giving people a starting place for contributing via GitHub. It's not the be-all-end-all source of truth, that will be part of the much larger update coming soon with Fabric's migration","username":"BrettLogan","ts":"2019-10-01T16:59:38.321Z"}
{"msg":"As part of the migration, I need some help: https://gerrit.hyperledger.org/r/q/%2522%255Bin-68%255D%2522+status:open","username":"rjones","ts":"2019-10-01T20:37:30.675Z"}
{"msg":"Furthermore, I propose to you the maintainers, you might consider relaxing the 2+2 requirement and go for NACR","username":"rjones","ts":"2019-10-01T20:37:53.992Z"}
{"msg":"@here Please merge the github contribution doc: https://gerrit.hyperledger.org/r/#/c/fabric/+/33817/","username":"dave.enyeart","ts":"2019-10-02T02:35:49.856Z"}
{"msg":"It doesn't have to be perfect yet... but we want to get a draft into the docs so that we can request feedback from community.","username":"dave.enyeart","ts":"2019-10-02T02:36:14.829Z"}
{"msg":"This is not yet in mergeable state. Basic things doesn't work... have left a few comments.","username":"manish-sethi","ts":"2019-10-02T04:23:54.572Z"}
{"msg":"Addressed, good catch. Presumably none of us caught it because we were testing using release-1.4 (which already existed locally) and not master","username":"BrettLogan","ts":"2019-10-02T07:02:46.442Z"}
{"msg":"Thanks, let's get it merged now. We want to show at contributor meeting. We can make further edits in subsequent CR.","username":"dave.enyeart","ts":"2019-10-02T11:15:36.424Z"}
{"msg":"I feel like we've had that discussion before...","username":"sykesm","ts":"2019-10-02T12:39:51.821Z"}
{"msg":"@here Contributor Call starting","username":"dave.enyeart","ts":"2019-10-02T12:58:31.991Z"}
{"msg":"Agenda topics:","username":"dave.enyeart","ts":"2019-10-02T12:58:36.350Z"}
{"msg":"    Release update\n    CI and SCM update - Brett Logan\n    Fabric node config proposal - Matt Sykes","username":"dave.enyeart","ts":"2019-10-02T12:58:37.702Z"}
{"msg":"https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-10-02T12:58:44.527Z"}
{"msg":"https://gist.github.com/sykesm/3a841471ab24ff711540dd78af2bf01d","username":"sykesm","ts":"2019-10-02T13:02:52.916Z"}
{"msg":"thank you for the announcement :-)","username":"lehors","ts":"2019-10-02T13:05:04.342Z"}
{"msg":"just so you know I don't merely whine all the time ;-)","username":"lehors","ts":"2019-10-02T13:05:58.125Z"}
{"msg":"btw, GitHub just announced the ability to comment on multiple diff lines - WOOHOO - just like Gerrit has been able to do for years... ;-)","username":"lehors","ts":"2019-10-02T13:08:04.836Z"}
{"msg":"yeah, I know","username":"rjones","ts":"2019-10-02T21:09:59.757Z"}
{"msg":"last time I unofficially polled maintainers majority agreed to single +2 for all projects except core fabric.","username":"dave.enyeart","ts":"2019-10-03T02:23:30.448Z"}
{"msg":"the thinking was that we could relax things per directory after going to github... but upon looking at it, it looks like the number of reviewers (2 for fabric) is a project-wide setting, with only the ability to specify who the reviewers are per directory via CODEOWNERS file","username":"dave.enyeart","ts":"2019-10-03T02:25:58.864Z"}
{"msg":"correct. I only meant to do it on Gerrit until the migration is over","username":"rjones","ts":"2019-10-03T02:34:15.174Z"}
{"msg":"@dave.enyeart you should IMO pull the docs from the fabric core... ","username":"yacovm","ts":"2019-10-03T08:27:17.660Z"}
{"msg":"Has joined the channel.","username":"josephnicholas","ts":"2019-10-04T03:29:30.797Z","type":"uj"}
{"msg":"People often pick the default branch when doing PRs to github. Therefore we are talking about making the default branch 'master' instead of 'release-1.4' for each of the fabric projects. Any concerns?","username":"dave.enyeart","ts":"2019-10-09T14:11:41.533Z"}
{"msg":"I would imagine a lot of tutorials are encoded with that being stable/1.4 ","username":"MHBauer","ts":"2019-10-09T17:55:45.545Z"}
{"msg":"Otherwise, that's a pretty usual expectation.","username":"MHBauer","ts":"2019-10-09T17:56:02.316Z"}
{"msg":"And the tutorial thing can be solved with a hard reference on checkout `git clone XXXXXX --branch v1.4.3`","username":"MHBauer","ts":"2019-10-09T17:58:37.668Z"}
{"msg":"FYI - Node chaincode @ unstable should now be install-able again - please let me know if not... ","username":"mbwhite","ts":"2019-10-10T12:14:43.322Z"}
{"msg":"all, after discussion here at the maintainers summit, a few of us thought it would be a good idea to adopt the RFC process that other teams are using","username":"cbf","ts":"2019-10-10T17:55:18.361Z"}
{"msg":"I've drafted a proposal derived from Sawtooth https://github.com/christo4ferris/fabric-rfcs-proposal","username":"cbf","ts":"2019-10-10T17:55:33.818Z"}
{"msg":"I'll ask Ry to create a repo after we've kicked the tires on this for a while","username":"cbf","ts":"2019-10-10T17:56:04.167Z"}
{"msg":"please add comments or make proposed changes via PR","username":"cbf","ts":"2019-10-10T17:56:24.008Z"}
{"msg":"please add issues or make proposed changes via PR","username":"cbf","ts":"2019-10-10T17:56:24.008Z"}
{"msg":"I don't understand adding that on top of JIRA","username":"MHBauer","ts":"2019-10-10T21:04:53.018Z"}
{"msg":"Done and done.","username":"kostas","ts":"2019-10-11T00:41:55.616Z"}
{"msg":"@MHBauer The idea is that for proposals we discuss in fabric-rfcs and then merge the final design as a forever record of what was agreed to. This would be in place of Jira for proposals and feature designs, as those tend to get lost in the Jira abyss. Many other projects in Hyperledger and beyond have had good success with this approach.","username":"dave.enyeart","ts":"2019-10-11T12:32:01.090Z"}
{"msg":"Jira is better for tracking the actual implementation by decomposing stories/tasks across components.","username":"dave.enyeart","ts":"2019-10-11T12:33:09.758Z"}
{"msg":"Jira is better for tracking the actual implementation by decomposing stories/tasks across components, and then rolling up with other issues to understand a release.","username":"dave.enyeart","ts":"2019-10-11T12:33:09.758Z"}
{"msg":"As GitHub continues to mature, it MAY replace Jira at some point for everything, but I propose we take it one step at a time.","username":"dave.enyeart","ts":"2019-10-11T12:33:48.763Z"}
{"msg":"This and related topics will be a focus on contributor meeting next Wednesday.","username":"dave.enyeart","ts":"2019-10-11T12:34:10.440Z"}
{"msg":"Another proposal that we can discuss here or in contributor meeting, is that for small work items self contained in one PR, there would be no requirement to open a corresponding Jira.","username":"dave.enyeart","ts":"2019-10-11T12:36:38.770Z"}
{"msg":"Jira would track the backlog of future work items, including bugs, tasks, and implementation stories for larger work items.","username":"dave.enyeart","ts":"2019-10-11T12:38:22.943Z"}
{"msg":":thumbsup: ","username":"cbf","ts":"2019-10-11T12:58:59.382Z"}
{"msg":"thanks @kostas !","username":"cbf","ts":"2019-10-11T16:37:28.806Z"}
{"msg":"all, Kostas made some changes, encourage feedback on this RFC proposal from others as well","username":"cbf","ts":"2019-10-11T16:37:57.322Z"}
{"msg":"hope we can resolve by Weds maintainers call","username":"cbf","ts":"2019-10-11T16:38:08.809Z"}
{"msg":"as a reminder, the link to the proposal is here https://github.com/christo4ferris/fabric-rfcs-proposal","username":"cbf","ts":"2019-10-11T16:39:01.841Z"}
{"msg":"https://gerrit.hyperledger.org/r/c/fabric/+/33947 Proposal to add Pam Andrejko to maintainers   ","username":"cbf","ts":"2019-10-11T17:28:02.616Z"}
{"msg":"Shifting docs to its own repository has been discussed for a long time. We decided to defer further talks on that topic until after the transition to GitHub. So yeah, having Pam as a maintainer would be awesome. +1ed in the CR. Just wanted to mention this context in case others had similar thoughts.","username":"dave.enyeart","ts":"2019-10-11T17:54:00.177Z"}
{"msg":"Shifting docs to its own repository has been discussed for a long time. We decided to defer further talks on that topic until after the transition to GitHub. So yeah, having Pam as a maintainer would be awesome. +1ed in the CR. Just wanted to mention this context in case others had doubts for that reason.","username":"dave.enyeart","ts":"2019-10-11T17:54:00.177Z"}
{"msg":"yes, agreed but no need to wait for that IMO","username":"cbf","ts":"2019-10-11T17:55:18.580Z"}
{"msg":"right","username":"dave.enyeart","ts":"2019-10-11T17:55:26.459Z"}
{"msg":"I am not familiar with jira, but that just leads me to more questions. What were people doing before? Do we have no designs for anything?","username":"MHBauer","ts":"2019-10-11T21:30:36.583Z"}
{"msg":"JIRA for everything including the design doc. The rough process was something along the lines of (1) create a JIRA with an RFC, (2) present it on a maintainers/contributors meeting for comments/support, (3) advance the JIRA issue from there.","username":"kostas","ts":"2019-10-11T23:21:25.344Z"}
{"msg":"yeah.... and in between do community playback for feedback and comments","username":"yacovm","ts":"2019-10-11T23:25:19.491Z"}
{"msg":"Is there a way to filter the existing ones out?","username":"MHBauer","ts":"2019-10-11T23:28:37.313Z"}
{"msg":"Highly unlikely. Filtering for epics would be a good start but I doubt it's a 1:1 mapping.","username":"kostas","ts":"2019-10-11T23:39:24.935Z"}
{"msg":"Why do a lot of scripts point at dockerhub when we have a nexus instance where images are hosted? ","username":"MHBauer","ts":"2019-10-15T20:55:47.439Z"}
{"msg":"balancing off the load? ","username":"MHBauer","ts":"2019-10-15T20:55:57.763Z"}
{"msg":":+1: ","username":"MHBauer","ts":"2019-10-15T20:55:57.763Z"}
{"msg":"Very poor historical design","username":"BrettLogan","ts":"2019-10-15T21:08:33.593Z"}
{"msg":"Very poor historical design, though Nexus is for development consumption, not community consumption. You will find places where that rule isn't always applied","username":"BrettLogan","ts":"2019-10-15T21:08:33.593Z"}
{"msg":"Very poor historical design, though Nexus is for development consumption, not community consumption","username":"BrettLogan","ts":"2019-10-15T21:08:33.593Z"}
{"msg":"Once we get Fabric's repo's off of Gerrit, next on our plate is to make a decision about where Fabric's artifacts are stored, and where they come from when used in CI (or are built instead of pulled, and passed through stages in CI) and where the community consume them from","username":"BrettLogan","ts":"2019-10-15T21:10:08.652Z"}
{"msg":"Once we get Fabric's repo's off of Gerrit, next on our plate is to make a decision about where Fabric's artifacts are stored, and where they come from when used in CI (or are built instead of pulled) and where the community consume them from","username":"BrettLogan","ts":"2019-10-15T21:10:08.652Z"}
{"msg":"Once we get Fabric's repo's off of Gerrit, next on our plate is to make a decision about where Fabric's artifacts are stored, and where they come from through CI to community consumption","username":"BrettLogan","ts":"2019-10-15T21:10:08.652Z"}
{"msg":":+1: ","username":"MHBauer","ts":"2019-10-15T21:24:57.710Z"}
{"msg":"@here maintainer meeting starting - https://zoom.us/my/hyperledger.community.3 \n\nAgenda topics: \n\n*Release update* \nv1.4.4 targeted for November \n- bug fixes \n- Also shifts fabric docker images from ubuntu to debian:buster-20190910-slim - smaller images, more secure \n- note - v2.0 shifts to alpine images - even smaller, even more secure \nv2.0 targeted for December (if run out of time I'd propose at least do a v2.0.0-beta release). \nLargest v2.0 items remaining: \n- config updates for peer, orderer, fabric-ca (and downstream impacts to tests, samples, docs, etc) \n- external chaincode documentation \n- state database cache for improved performance \n- upgrade documentation \n- node sdk v2.0 refactoring - in master split fabric-client into fabric-base (for transactions) and fabric-admin (for v2.0 lifecycle support) \n\n*fabric-rfcs repository to capture new proposals* \n- see proposal at https://github.com/christo4ferris/fabric-rfcs-proposal \n\n*SCM and CI update* \n- Pull Request template - see https://github.com/hyperledger/fabric-ca/pull/53 \n- Change default branch to master in all repositories \n- Working through release process on fabric-ca \n- Once above items complete, shift core fabric repository to github \n- Other repositories (e.g. sdks, chaincodes, fabric-test) can transition at any time \n\nAnything else? ","username":"dave.enyeart","ts":"2019-10-16T12:59:42.286Z"}
{"msg":"@here maintainer meeting starting - https://zoom.us/my/hyperledger.community.3 \n\nAgenda topics: \n\n*Release update* \nv1.4.4 targeted for November \n- bug fixes \n- Also shifts fabric docker images from ubuntu to debian:buster-20190910-slim - smaller images, more secure \n- note - v2.0 shifts to alpine images - even smaller, even more secure \nv2.0 targeted for December (if run out of time I'd propose at least do a v2.0.0-beta release). \nLargest v2.0 items remaining: \n- config updates for peer, orderer, fabric-ca (and downstream impacts to tests, samples, docs, etc) \n- external chaincode documentation \n- state database cache for improved performance \n- upgrade documentation \n- node sdk v2.0 refactoring - in master split fabric-client into fabric-base (for transactions) and fabric-admin (for v2.0 lifecycle support) \n\n*fabric-rfcs repository to capture new proposals* \n- see proposal at https://github.com/christo4ferris/fabric-rfcs-proposal \n\n*SCM and CI update* \n- Pull Request template - see https://github.com/hyperledger/fabric-ca/pull/53 \n- Change default branch to master in all repositories \n- Working through release process on fabric-ca \n- Updating Contribution documentation for github\n- Once above items complete, shift core fabric repository to github \n- Other repositories (e.g. sdks, chaincodes, fabric-test) can transition at any time \n\nAnything else? ","username":"dave.enyeart","ts":"2019-10-16T12:59:42.286Z"}
{"msg":"Just on the topic of the move to github - we're blocked until we have credentials for publishing to npm, maven, dockerhub etc.","username":"mbwhite","ts":"2019-10-16T13:04:24.076Z"}
{"msg":"Correct, I opened a ticket yesterday to get the credentials installed in AZP. Hoping to have them by the end of the week","username":"BrettLogan","ts":"2019-10-16T13:05:14.512Z"}
{"msg":"No issues with the RFCs approach","username":"mbwhite","ts":"2019-10-16T13:15:01.730Z"}
{"msg":"sorry I missed the call this morning... what was the outcome of the RFCs discussion?","username":"cbf","ts":"2019-10-16T17:05:33.376Z"}
{"msg":"Friday, at 1600EST there will be a 2 hour outage on linux foundation hosted infrastructure. The outage is scheduled to occur as late in the day as possible, and during reasonable business hours so that in the event there is an issue with infrastructure upgrade teams within Linux Foundation can be brought in to help triage the issue while still in office. ","username":"BrettLogan","ts":"2019-10-16T19:48:33.287Z"}
{"msg":"The following infrastructure will be effected:","username":"BrettLogan","ts":"2019-10-16T19:48:48.717Z"}
{"msg":"The following infrastructure will be affected:","username":"BrettLogan","ts":"2019-10-16T19:48:48.717Z"}
{"msg":"```wiki.hyperledger.org\njira.hyperledger.org\nmembers.hyperledger.org\njenkins.hyperledger.org + sandbox\nchat.hyperledger.org\nnexus.hyperledger.org\ngerrit.hyperledger.org```","username":"BrettLogan","ts":"2019-10-16T19:48:51.062Z"}
{"msg":"```wiki.hyperledger.org\n     jira.hyperledger.org\n     members.hyperledger.org\n     jenkins.hyperledger.org + sandbox\n     chat.hyperledger.org\n     nexus.hyperledger.org\n     gerrit.hyperledger.org```","username":"BrettLogan","ts":"2019-10-16T19:48:51.062Z"}
{"msg":"```wiki.hyperledger.orgjira.hyperledger.org\n     members.hyperledger.org\n     jenkins.hyperledger.org + sandbox\n     chat.hyperledger.org\n     nexus.hyperledger.org\n     gerrit.hyperledger.org```","username":"BrettLogan","ts":"2019-10-16T19:48:51.062Z"}
{"msg":"```wiki.hyperledger.org\n     jira.hyperledger.org\n     members.hyperledger.org\n     jenkins.hyperledger.org + sandbox\n     chat.hyperledger.org\n     nexus.hyperledger.org\n     gerrit.hyperledger.org```","username":"BrettLogan","ts":"2019-10-16T19:48:51.062Z"}
{"msg":"@mbwhite @BrettLogan ah could we chat about what credentials are missing where? what ticket was opened?","username":"rjones","ts":"2019-10-16T22:00:33.383Z"}
{"msg":"no comments... which I assume means everybody is somewhere between agreement and ecstatic :)","username":"dave.enyeart","ts":"2019-10-17T03:44:57.748Z"}
{"msg":"I encouraged everybody to read the proposal in full and comment","username":"dave.enyeart","ts":"2019-10-17T03:45:16.806Z"}
{"msg":"Hello; the final publishing step requires us to be able to publish to NPM, DockerHub, Maven Central, (and also publish to GitHub pages).  The github repos can be used for staging purposes, but the final destinations need to be the main repos... it's the credentials for these that are required","username":"mbwhite","ts":"2019-10-17T07:55:40.225Z"}
{"msg":"@here Reminder: Starting in 2 hours (1600 EST) OS updates will take all Hyperledger infrastructure offline for approximately 2 hours. Starting at (1500 EST) the Jenkins queue will be disabled, and any newly submitted jobs will automatically run when the queue is re-enabled. The following infrastructure is affected by this outage:","username":"BrettLogan","ts":"2019-10-18T18:12:41.049Z"}
{"msg":"Reminder: Starting in 2 hours (1600 EST) OS updates will take all Hyperledger infrastructure offline for approximately 2 hours. Start at (1500 EST) the Jenkins queue will be disabled, and any newly submitted jobs will automatically run when the queue is re-enabled. The following infrastructure is affected by this outage:","username":"BrettLogan","ts":"2019-10-18T18:12:41.049Z"}
{"msg":"@here Reminder: Starting in 2 hours (1600 EST) OS updates will take all Hyperledger infrastructure offline for approximately 2 hours. Start at (1500 EST) the Jenkins queue will be disabled, and any newly submitted jobs will automatically run when the queue is re-enabled. The following infrastructure is affected by this outage:","username":"BrettLogan","ts":"2019-10-18T18:12:41.049Z"}
{"msg":"```wiki.hyperledger.org\njira.hyperledger.org\nmembers.hyperledger.org\njenkins.hyperledger.org + sandbox\nchat.hyperledger.org\nnexus.hyperledger.org\ngerrit.hyperledger.org```","username":"BrettLogan","ts":"2019-10-18T18:12:43.471Z"}
{"msg":"@here Do you still see a need to keep this historical pre-v1.0 doc topic: https://hyperledger-fabric.readthedocs.io/en/latest/arch-deep-dive.html ","username":"dave.enyeart","ts":"2019-10-23T20:52:57.028Z"}
{"msg":"It has old concepts such as ValidatedLedger and a Checkpoint which deviates from current Checkpoint thoughts.  The note at the top even says it is superseded by the v1.0 paper at https://arxiv.org/abs/1801.10228v2 , and frankly superseded by the rest of the doc now. We kept it as a historical reference, but I think we could delete from master (v2.0) and just keep in release-1.4 for historical reference.","username":"dave.enyeart","ts":"2019-10-23T20:52:58.686Z"}
{"msg":"no reason to keep an outdated document. Besides, I'm sure I'm not the only one triggered by seeing these runes (`⊥`) .","username":"yacovm","ts":"2019-10-23T20:56:44.440Z"}
{"msg":"some interesting insight here https://medium.com/open-source-communities/maintainer-vs-community-97edc28387ad","username":"cbf","ts":"2019-10-24T15:40:05.621Z"}
{"msg":"agreed we could nuke this","username":"cbf","ts":"2019-10-24T15:41:15.568Z"}
{"msg":"@here As most of you know, we have been looking into configuration improvements for peer and orderer.\nMatt, Gari, and I further discussed the various configuration fallout, and our opinion is that it may be too disruptive to a v2.0 release after all.\nWe're thinking that it would be better to simply proceed with the v2.0 release without the config updates, so that we can get back to a release cadence and start moving forward with some of the other important post-v2.0 features.\nWe would still like to deliver a code-complete v2.0 beta before the holidays, since a lot has changed in v2.0, and a lot has changed since the alpha.\nAnd then allow for a small period of feedback before cutting final v2.0 release in the new year.\nWe'll socialize further in the contributor meeting next Wednesday, but I suggest we start closing down the v2.0 release.\nThis also implies that the validation updates would get deferred to v2.1 - we could use Manish's help finalizing the state db cache, and could use Wenjian's help with upgrade test and documentation.","username":"dave.enyeart","ts":"2019-10-24T16:09:35.349Z"}
{"msg":"Has joined the channel.","username":"soumyanayak","ts":"2019-10-24T16:20:34.213Z","type":"uj"}
{"msg":"please also socialize via mailing list","username":"cbf","ts":"2019-10-24T16:24:25.954Z"}
{"msg":"Are there meeting notes or recordings I can use to come up to speed on the configuration changes so I can understand why there might be fallout?","username":"medikent","ts":"2019-10-24T20:18:12.463Z"}
{"msg":"@medikent  see https://jira.hyperledger.org/browse/FAB-16753","username":"lehors","ts":"2019-10-25T06:50:40.489Z"}
{"msg":"And at https://wiki.hyperledger.org/display/fabric/Contributor+Meetings you'll see that the config updates were a topic of discussion at the October 2nd meeting and you could listen to that recording (posted on the same page). But I'll tell you, that the discussion didn't really deviate from the posted design.","username":"dave.enyeart","ts":"2019-10-25T13:14:01.389Z"}
{"msg":"@medikent  And at https://wiki.hyperledger.org/display/fabric/Contributor+Meetings you'll see that the config updates were a topic of discussion at the October 2nd meeting and you could listen to that recording (posted on the same page). But I'll tell you, that the discussion didn't really deviate from the posted design.","username":"dave.enyeart","ts":"2019-10-25T13:14:01.389Z"}
{"msg":"Has joined the channel.","username":"CT123","ts":"2019-10-25T13:14:17.488Z","type":"uj"}
{"msg":"@C0rWin Anything of interest to report from Hyperledger Bootcamp in Moscow? I heard in prior bootcamps they had trouble getting Fabric up.","username":"dave.enyeart","ts":"2019-10-25T14:41:56.234Z"}
{"msg":"Build Your First Network tutorial/sample updates will be a topic for next Wednesday's contributor meeting... so we'd encourage anybody with feedback to attend.","username":"dave.enyeart","ts":"2019-10-25T14:43:10.792Z"}
{"msg":"@Silona ^^^","username":"rjones","ts":"2019-10-25T15:24:21.009Z"}
{"msg":"Has joined the channel.","username":"Silona","ts":"2019-10-25T15:24:21.051Z","type":"uj"}
{"msg":"@Silona I think you mentioned some general feedback for Fabric maintainers as well... you could mention here or attend the next contributors meeting.","username":"dave.enyeart","ts":"2019-10-25T17:29:37.360Z"}
{"msg":"We are aware of issues related to binary download requests and docker pulls from Nexus3 failing due to HTTPS handshakes, unfortunately we are unlikely to be able to do anything about it tonight (US EST timezone), but will pick up the work in the morning once sysadmins with LFIT get in. Requests for artifacts are being served around `26 B/s` for the last 48 hours","username":"BrettLogan","ts":"2019-10-28T00:44:39.848Z"}
{"msg":"We are aware of issues related to docker pulls to Nexus3 failing due to HTTPS handshakes, unfortunately we are unlikely to be able to do anything about it tonight (US EST timezone), but will pick up the work in the morning once sysadmins with LFIT get in. Requests for artifacts are being served around `26 B/s` for the last 48 hours","username":"BrettLogan","ts":"2019-10-28T00:44:39.848Z"}
{"msg":"We are aware of issues related to binary requests and docker pulls to Nexus3 failing due to HTTPS handshakes, unfortunately we are unlikely to be able to do anything about it tonight (US EST timezone), but will pick up the work in the morning once sysadmins with LFIT get in. Requests for artifacts are being served around `26 B/s` for the last 48 hours","username":"BrettLogan","ts":"2019-10-28T00:44:39.848Z"}
{"msg":"We are aware of issues related to binary download requests and docker pulls to Nexus3 failing due to HTTPS handshakes, unfortunately we are unlikely to be able to do anything about it tonight (US EST timezone), but will pick up the work in the morning once sysadmins with LFIT get in. Requests for artifacts are being served around `26 B/s` for the last 48 hours","username":"BrettLogan","ts":"2019-10-28T00:44:39.848Z"}
{"msg":"Has joined the channel.","username":"HLFPOC","ts":"2019-10-30T04:53:24.361Z","type":"uj"}
{"msg":"@here maintainer meeting starts in one hour - https://zoom.us/my/hyperledger.community.3 \n\nAgenda topics: \n\nRelease update \nv1.4.4 targeted for November \n- bug fixes \n- Also shifts fabric docker images from ubuntu to debian:buster-20190910-slim - smaller images, more secure \n- note - v2.0 shifts to alpine images - even smaller, even more secure \nv2.0.0-beta targeted for December, remaining items that we are trying to close down:\n- external chaincode documentation\n- external chaincode as a server\n- state database cache for improved performance \n- upgrade documentation \n- node sdk v2.0 refactoring - in master split fabric-client into fabric-base (for transactions) and fabric-admin (for v2.0 lifecycle support)\n- please go through Jira backlogs and help to highlight anything that needs to get in before v2.0\n\nSCM and CI update \n- Chaincode and SDK projects shifted from Gerrit to Github, and from Jenkins to Azure Pipelines (node sdk still in progress this week)\n- Change default branch to master in all repositories\n- We will attempt our first release from Azure Pipelines using fabric-baseimage (0.4.17 bumps go to 1.12.12)\n- Contribution documentation will shift focus entirely from Gerrit to Github\n- Checking on number of Azure Pipeline nodes for fabric\n- Once above items complete, shift core fabric repository to github \n\nToday's deep-dive:\n- Next generation enhancements for Build Your First Network tutorial and sample\n\nAnything else?","username":"dave.enyeart","ts":"2019-10-30T12:04:19.542Z"}
{"msg":"Hi, has the Request for Comments process been implemented? Or is this still being agreed on?","username":"awjh","ts":"2019-11-01T13:52:48.337Z"}
{"msg":"Hi, has the Request for Comments process been implemented? Or is this still being agred on?","username":"awjh","ts":"2019-11-01T13:52:48.337Z"}
{"msg":" https://github.com/christo4ferris/fabric-rfcs-proposal/issues <- There's still a number of outstanding items, though I think there was general support for implementing it, but it seems a bit stalled","username":"jyellick","ts":"2019-11-01T14:27:39.569Z"}
{"msg":"Okay, I am loooking to propose Go in the new contract programming model like exists for Java and Node. How is it best for me to go about this?","username":"awjh","ts":"2019-11-01T14:28:24.926Z"}
{"msg":"Good question -- maintainers, can we make an effort to settle this RFC proposal?","username":"jyellick","ts":"2019-11-01T15:15:38.975Z"}
{"msg":"There are three proposed changes at https://github.com/christo4ferris/fabric-rfcs-proposal/pulls . @cbf can you review these changes and help to drive the RFC proposal to completion?","username":"dave.enyeart","ts":"2019-11-01T15:57:06.891Z"}
{"msg":"will do","username":"cbf","ts":"2019-11-01T16:01:38.740Z"}
{"msg":"@kostas can you please amend PR #5 https://github.com/christo4ferris/fabric-rfcs-proposal/pull/5 to reduce the criteria from *all* to majority","username":"cbf","ts":"2019-11-01T16:17:59.290Z"}
{"msg":"Done.","username":"kostas","ts":"2019-11-02T21:46:07.313Z"}
{"msg":"fabric v1.4.4 update - we plan to get last commits in this week, do some additional system testing, and then release v1.4.4 next week\n- we're bumping go to v1.12.12\n- important fix for v1.4.4 was confirmed last week - *[FAB-16643] peer panic during a private data reconciliation scenario*\n- final v1.4.4 fixes for this week include: \n- *[FAB-15389] Endorsing peer is not honoring maxPeerCount for private data dissemination* - @danny working it)\n- *[FAB-16544] Need a way for new peers to know if orderer locations have changed* - @Jason working it)\n- *[FAB-16699] Gossip membership has conflict between pki-ids at the same address* - @yacov do you intend to CR?\n- *[FAB-16951] Alternative mechanisms to find pkcs11 key* - @gari did you intend for this one to go into v1.4.4?\n- I'll review Node OU issues FAB-16936 and FAB-16796\n- Any other mustfix in v1.4.4?","username":"dave.enyeart","ts":"2019-11-04T20:38:59.792Z"}
{"msg":"fabric v1.4.4 update - we plan to get last commits in this week, do some additional system testing, and then release v1.4.4 next week\n- we're bumping go to v1.12.12\n- important fix for v1.4.4 was confirmed last week - *[FAB-16643] peer panic during a private data reconciliation scenario*\n- final v1.4.4 fixes for this week include: \n- *[FAB-15389] Endorsing peer is not honoring maxPeerCount for private data dissemination* - @caod  working it)\n- *[FAB-16544] Need a way for new peers to know if orderer locations have changed* - @jyellick  working it)\n- *[FAB-16699] Gossip membership has conflict between pki-ids at the same address* - @yacovm  do you intend to CR?\n- *[FAB-16951] Alternative mechanisms to find pkcs11 key* - @mastersingh24  did you intend for this one to go into v1.4.4?\n- I'll review Node OU issues FAB-16936 and FAB-16796\n- Any other mustfix in v1.4.4?","username":"dave.enyeart","ts":"2019-11-04T20:38:59.792Z"}
{"msg":"fabric v1.4.4 update - we plan to get last commits in this week, do some additional system testing, and then release v1.4.4 next week\n- we're bumping go to v1.12.12\n- important fix for v1.4.4 was confirmed last week - *[FAB-16643] peer panic during a private data reconciliation scenario*\nfinal v1.4.4 fixes for this week include: \n- *[FAB-15389] Endorsing peer is not honoring maxPeerCount for private data dissemination* - @caod  working it)\n- *[FAB-16544] Need a way for new peers to know if orderer locations have changed* - @jyellick  working it)\n- *[FAB-16699] Gossip membership has conflict between pki-ids at the same address* - @yacovm  do you intend to CR?\n- *[FAB-16951] Alternative mechanisms to find pkcs11 key* - @mastersingh24  did you intend for this one to go into v1.4.4?\n- I'll review Node OU issues FAB-16936 and FAB-16796\n- Any other mustfix in v1.4.4?","username":"dave.enyeart","ts":"2019-11-04T20:38:59.792Z"}
{"msg":"> [FAB-16699] Gossip membership has conflict between pki-ids at the same address yacovm do you intend to CR?\nRead a few comments above... I claim that I solved it in FAB-16651 ","username":"yacovm","ts":"2019-11-04T20:42:31.871Z"}
{"msg":"> [FAB-16699] Gossip membership has conflict between pki-ids at the same address yacovm do you intend to CR?\nRead a few comments above... I claim to have solved it in FAB-16651 ","username":"yacovm","ts":"2019-11-04T20:42:31.871Z"}
{"msg":"I think his issue is the same problem, @dave.enyeart ","username":"yacovm","ts":"2019-11-04T20:42:50.637Z"}
{"msg":"as for FAB-16951 I saw a CR here: https://gerrit.hyperledger.org/r/#/c/fabric/+/34221/","username":"yacovm","ts":"2019-11-04T20:43:28.899Z"}
{"msg":"Has joined the channel.","username":"robmurgai","ts":"2019-11-04T21:11:51.632Z","type":"uj"}
{"msg":"Thanks @yacovm , so do you want to go ahead and close FAB-16699 ?","username":"dave.enyeart","ts":"2019-11-04T21:30:50.609Z"}
{"msg":"No, I want him to confirm it indeed solved his problem","username":"yacovm","ts":"2019-11-04T21:31:11.478Z"}
{"msg":"ok, I push the 'More Info Required' button","username":"dave.enyeart","ts":"2019-11-04T21:31:42.111Z"}
{"msg":"ok, I pushed the 'More Info Required' button to put it in 'Returned' state","username":"dave.enyeart","ts":"2019-11-04T21:31:42.111Z"}
{"msg":"ok, Kostas updated the last PR on the RFCs proposal... are we ready to approve?","username":"cbf","ts":"2019-11-05T14:10:27.895Z"}
{"msg":"@dave.enyeart @sykesm @mastersingh24 ","username":"cbf","ts":"2019-11-05T14:11:02.051Z"}
{"msg":"@yacovm @jyellick @kostas @muralisr @guoger @aso @binhn @C0rWin @JonathanLevi @manish-sethi @pandrejko ","username":"cbf","ts":"2019-11-05T14:15:05.285Z"}
{"msg":"https://github.com/christo4ferris/fabric-rfcs-proposal/pull/5 ","username":"cbf","ts":"2019-11-05T14:15:23.763Z"}
{"msg":"Please cast vote with a +1 here and I'll submit the CR","username":"cbf","ts":"2019-11-05T14:15:41.707Z"}
{"msg":"check that, submit the request to @ry to create the repo","username":"cbf","ts":"2019-11-05T14:16:11.122Z"}
{"msg":"@cbf ","username":"muralisr","ts":"2019-11-05T14:16:45.687Z"}
{"msg":"@cbf +1","username":"muralisr","ts":"2019-11-05T14:16:45.687Z"}
{"msg":"+1","username":"dave.enyeart","ts":"2019-11-05T14:28:57.595Z"}
{"msg":"+1","username":"manish-sethi","ts":"2019-11-05T14:37:49.393Z"}
{"msg":"+1","username":"guoger","ts":"2019-11-05T14:57:17.902Z"}
{"msg":"+1","username":"jyellick","ts":"2019-11-05T14:57:42.018Z"}
{"msg":"@cbf LMK when you're ready","username":"rjones","ts":"2019-11-05T21:28:37.330Z"}
{"msg":"+1","username":"C0rWin","ts":"2019-11-06T16:37:59.784Z"}
{"msg":"+1","username":"kostas","ts":"2019-11-06T20:19:40.411Z"}
{"msg":"+1","username":"pandrejko","ts":"2019-11-08T17:12:32.435Z"}
{"msg":"@rjones LMK how you want to do this... one way could be for me to transfer ownership of the repo to you so you can transfer it into hyperledger","username":"cbf","ts":"2019-11-11T15:24:56.272Z"}
{"msg":"@here  As you all know we are shifting from Jenkins to Azure Pipelines for our CI and release processes. For us to have found a partner who will provide us a managed solution totally free of cost to our open source project was more than we could have hoped for. Microsoft provides us with free infrastructure for running CI on Linux, MacOS and Windows. One trade off (frankly, for any of the CI solutions we were looking at), is that there is no support for s390x that would enable us to build s390x binaries and docker images.  With our first release from Azure Pipelines coming up (first for fabric-ca, and core fabric coming next), we are proposing that starting with v1.4.4 we will no longer publish s390x binaries or docker images as open source release artifacts. This change was expected for v2.0, but with Jenkins going away it looks like we will have to discontinue the s390x artifacts in v1.4.x as well. We have discussed with known s390x consumers, and they have confirmed that they build their own binaries and docker images regardless, and can continue to do so.\nWe intend to socialize on the Fabric mailing list, but wanted to first check with the maintainers in case anybody wanted to raise a concern and suggest an alternative.","username":"dave.enyeart","ts":"2019-11-11T20:22:37.103Z"}
{"msg":"@cbf please transfer the repo to me and I’ll move it under Hyperledger today.","username":"rjones","ts":"2019-11-11T23:23:13.490Z"}
{"msg":"cool, just so I don't screw up, your GH ID?","username":"cbf","ts":"2019-11-11T23:23:38.619Z"}
{"msg":"I’m in Singapore so apologies for my delayed response ","username":"rjones","ts":"2019-11-11T23:23:53.726Z"}
{"msg":"no worries","username":"cbf","ts":"2019-11-11T23:23:59.806Z"}
{"msg":"‘ryjones’","username":"rjones","ts":"2019-11-11T23:24:36.399Z"}
{"msg":"https://github.com/ryjones","username":"rjones","ts":"2019-11-11T23:25:10.771Z"}
{"msg":"ball is in your court","username":"cbf","ts":"2019-11-11T23:26:24.601Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/ @cbf ","username":"rjones","ts":"2019-11-12T00:29:46.605Z"}
{"msg":"In case this generally helps people with the PR process: https://gist.github.com/ryjones/c7616d42bc6ea65d9fb2a831eb26dd1f","username":"rjones","ts":"2019-11-12T00:31:51.490Z"}
{"msg":"is there a writeup that explains current process of building protos and use them in fabric? i fear i'm doing some weird hacks to get pieces work together (proto, proto-go, chaincode-go, fabric)","username":"guoger","ts":"2019-11-12T01:52:50.725Z"}
{"msg":"also, i suppose we will need to remove `protos` target from Fabric makefile?","username":"guoger","ts":"2019-11-12T07:05:00.478Z"}
{"msg":"I know some are published here: https://github.com/hyperledger/fabric-protos-go/","username":"rjones","ts":"2019-11-12T07:06:28.422Z"}
{"msg":"Thx for reply. it seems update on fabric-protos will be automatically made available in fabric-protos-go via azp. Although, what's the process of updating *local* repo during dev?","username":"guoger","ts":"2019-11-12T07:09:10.592Z"}
{"msg":"that I do not know :)","username":"rjones","ts":"2019-11-12T07:09:28.276Z"}
{"msg":"i believe there should be a script somewhere... :thinking: ","username":"guoger","ts":"2019-11-12T07:10:35.964Z"}
{"msg":"if you want to generate the protobuf locally for testing/development you can always use protoc to generate it and then move it to the vendored folder: `protoc --go_out=. <path to .proto> && mv github.com/fabric-protos-go/<path to .pb.go> $GOPATH/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-protos-go/<path to .pb.go>`","username":"caod","ts":"2019-11-12T16:01:33.952Z"}
{"msg":"if you want to generate the protobuf locally for testing/development you can always use protoc to generate it and then move it to the vendored folder: `protoc --go_out=. <path to .proto> && mv github.com/hyperledger/fabric-protos-go/<path to .pb.go> $GOPATH/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-protos-go/<path to .pb.go>`","username":"caod","ts":"2019-11-12T16:01:33.952Z"}
{"msg":"if you want to generate the protobuf locally for testing/development you can always use protoc to generate it to the vendored folder: `protoc --go_out=$GOPATH/src/github.com/hyperledger/fabric/vendor <path to .proto>`","username":"caod","ts":"2019-11-12T16:01:33.952Z"}
{"msg":"if you want to generate the protobuf locally for testing/development you can always use protoc (`go get -u github.com/golang/protobuf/protoc-gen-go`) to generate it to the vendored folder: `protoc --go_out=$GOPATH/src/github.com/hyperledger/fabric/vendor <path to .proto>`","username":"caod","ts":"2019-11-12T16:01:33.952Z"}
{"msg":"alternatively you could set the `--go_out` to point to the vendor folder in fabric repo","username":"caod","ts":"2019-11-12T16:03:16.369Z"}
{"msg":"`protoc --go_out=$GOPATH/src/github.com/hyperledger/fabric/vendor <path to .protot>`","username":"caod","ts":"2019-11-12T16:04:09.391Z"}
{"msg":"`protoc --go_out=$GOPATH/src/github.com/hyperledger/fabric/vendor <path to .proto>`","username":"caod","ts":"2019-11-12T16:04:09.391Z"}
{"msg":"could probably write your own simple script with that","username":"caod","ts":"2019-11-12T16:08:56.856Z"}
{"msg":"could probably write your own simple script with that to shorten it","username":"caod","ts":"2019-11-12T16:08:56.856Z"}
{"msg":"Looks like we're good to go on the fabric-rfcs. Thanks @cbf !","username":"dave.enyeart","ts":"2019-11-12T17:47:24.773Z"}
{"msg":"Who wants to be the first to suffer through the process?","username":"dave.enyeart","ts":"2019-11-12T17:47:33.481Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/","username":"dave.enyeart","ts":"2019-11-12T17:47:43.164Z"}
{"msg":"thx for reply. yes that's what i did, although was thinking if there's something available already. we used to do `make protos` (which i believe should be removed?)\n\nit's a bit painful to work with multiple repos (fabric, chaincode-go, proto-go), especially when two of them are using modules and i have to modify go.mod with `replace` directive to point to my local copy... so i'm wondering if there's a better way to do this","username":"guoger","ts":"2019-11-13T01:33:52.121Z"}
{"msg":"@here Agenda for contributor meeting next hour... anything else to add?\n\nv1.4.4\n- We are preparing for release this week.\n- Remaining CR that needs to get reviewed (raft orderering): https://gerrit.hyperledger.org/r/#/c/fabric/+/34324/\n- Draft release notes (now uses markdown syntax): https://gerrit.hyperledger.org/r/#/c/fabric/+/34364/\n\nv2.0.0-beta targeted for December, remaining items that we are trying to close down:\n- external chaincode documentation\n- external chaincode as a server\n- state database cache for improved performance \n- upgrade documentation \n- node sdk v2.0 refactoring - in master split fabric-client into fabric-base (for transactions) and fabric-admin (for v2.0 lifecycle support)\n\nSCM and CI update \n- We will attempt our first release from Azure Pipelines using fabric-ca v1.4.4\n- All Gerrit references being removed from contribution guide documentation\n- Azure increased our number of CI nodes to 50\n- We should be able to shift fabric repository from Gerrit to Github after the v1.4.4 release... let's make a final push to get Gerrit CRs merged or abandoned so that contributors won't be impacted.\n\nToday's deep-dive:\n- High level contract api for Go chaincode - Andy Hurt","username":"dave.enyeart","ts":"2019-11-13T13:00:03.273Z"}
{"msg":"@here Agenda for contributor meeting next hour... anything else to add?\n\nv1.4.4\n- We are preparing for release this week.\n- Remaining CR that needs to get reviewed (raft orderering): https://gerrit.hyperledger.org/r/#/c/fabric/+/34324/\n- Draft release notes (now uses markdown syntax): https://gerrit.hyperledger.org/r/#/c/fabric/+/34364/\n\nv2.0.0-beta targeted for December, remaining items that we are trying to close down:\n- external chaincode documentation\n- external chaincode as a server\n- state database cache for improved performance \n- upgrade documentation \n- node sdk v2.0 refactoring - in master split fabric-client into fabric-base (for transactions) and fabric-admin (for v2.0 lifecycle support)\n\nfabric-rfcs repository is live - we will post to mailing list as well: https://github.com/hyperledger/fabric-rfcs/\n\nSCM and CI update \n- We will attempt our first release from Azure Pipelines using fabric-ca v1.4.4\n- All Gerrit references being removed from contribution guide documentation\n- Azure increased our number of CI nodes to 50\n- We should be able to shift fabric repository from Gerrit to Github after the v1.4.4 release... let's make a final push to get Gerrit CRs merged or abandoned so that contributors won't be impacted.\n\nToday's deep-dive:\n- High level contract api for Go chaincode - Andy Hurt","username":"dave.enyeart","ts":"2019-11-13T13:00:03.273Z"}
{"msg":"@here Agenda for contributor meeting next hour... anything else to add?\n\nv1.4.4\n- We are preparing for release this week.\n- Remaining CR that needs to get reviewed (raft orderering): https://gerrit.hyperledger.org/r/#/c/fabric/+/34324/\n- Draft release notes (now uses markdown syntax): https://gerrit.hyperledger.org/r/#/c/fabric/+/34364/\n\nv2.0.0-beta targeted for December, remaining items that we are trying to close down:\n- external chaincode documentation\n- external chaincode as a server\n- state database cache for improved performance \n- upgrade documentation \n- node sdk v2.0 refactoring - in master split fabric-client into fabric-base (for transactions) and fabric-admin (for v2.0 lifecycle support)\n\nfabric-rfcs repository is live - we will post to mailing list as well: https://github.com/hyperledger/fabric-rfcs/\n\nSCM and CI update \n- We will attempt our first release from Azure Pipelines using fabric-ca v1.4.4\n- Changed fabric-ca default branch to master and confirmed pull request template is now active. Will make same change on other repositories (I don't have permissions on 'fabric'... we need to review permissions all around).\n- All Gerrit references being removed from contribution guide documentation\n- Azure increased our number of CI nodes to 50\n- We should be able to shift fabric repository from Gerrit to Github after the v1.4.4 release... let's make a final push to get Gerrit CRs merged or abandoned so that contributors won't be impacted.\n\nToday's deep-dive:\n- High level contract api for Go chaincode - Andy Hurt","username":"dave.enyeart","ts":"2019-11-13T13:00:03.273Z"}
{"msg":"@here Is anybody able to start the zoom meeting?  I cannot...","username":"dave.enyeart","ts":"2019-11-13T14:01:12.690Z"}
{"msg":"It says a host must start the meeting, this is new...","username":"dave.enyeart","ts":"2019-11-13T14:01:32.187Z"}
{"msg":"https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-11-13T14:01:47.916Z"}
{"msg":"Same error here ","username":"jyellick","ts":"2019-11-13T14:02:24.532Z"}
{"msg":"Same error here","username":"knagware9","ts":"2019-11-13T14:03:25.507Z"}
{"msg":"It say to wait for host to start a meeting","username":"C0rWin","ts":"2019-11-13T14:03:35.493Z"}
{"msg":"ok, let's use my webex instead this week: https://ibm.webex.com/join/enyeart","username":"dave.enyeart","ts":"2019-11-13T14:04:36.990Z"}
{"msg":"@Silona @rjones I wasn't authorized to start zoom https://zoom.us/my/hyperledger.community.3 today... does it really require host privilege to start now? how do i get such priv?","username":"dave.enyeart","ts":"2019-11-13T16:01:52.157Z"}
{"msg":"@dave.enyeart I sent you the code in the DM but it shouldn't REQUIRE it to open the room only to record.  ","username":"Silona","ts":"2019-11-13T17:02:57.026Z"}
{"msg":"I'll look into it this afternoon - solid meetings ATM","username":"Silona","ts":"2019-11-13T17:03:18.496Z"}
{"msg":"Hi, I am looking to get a repo for the contract api for go work. Preferably `fabric-contract-api-go`. @heatherp and myself would be maintainers. Do people approve of this repo being created for this purpose?","username":"awjh","ts":"2019-11-14T13:22:49.060Z"}
{"msg":"^ requested by Matt as per PR comment here: https://github.com/hyperledger/fabric-chaincode-go/pull/13#pullrequestreview-316407848","username":"sstone1","ts":"2019-11-14T13:28:26.189Z"}
{"msg":"please use the newly approved fabric-rfcs process https://github.com/hyperledger/fabric-rfcs/","username":"cbf","ts":"2019-11-14T15:47:14.860Z"}
{"msg":"@awjh  please use the https://github.com/hyperledger/fabric-rfcs/ process thanks","username":"cbf","ts":"2019-11-14T15:47:14.860Z"}
{"msg":"@awjh ","username":"cbf","ts":"2019-11-14T15:47:14.860Z"}
{"msg":"@awjh  ^^","username":"cbf","ts":"2019-11-14T15:47:14.860Z"}
{"msg":"Since Andrew @awjh  reviewed go programming model on contributor call before the fabric-rfcs process was announced, and since it doesn't deviate in design from the existing node and java chaincode implementations, we told Andrew he could be grandfathered in. But yeah, given the suggestion to create a new repository, makes sense to do an 'abridged' fabric-rfc that points to the reviewed material, if nothing else to make sure the new process is smooth and set a precedent.","username":"dave.enyeart","ts":"2019-11-14T16:10:17.859Z"}
{"msg":"Since Andrew @awjh  reviewed go programming model on contributor call before the fabric-rfcs process was announced, and since it doesn't deviate in design from the existing node and java chaincode implementations, we told Andrew he could be grandfathered in. But yeah, given the suggestion to create a new repository, makes sense to do an 'abridged' fabric-rfc that points to the reviewed material, if nothing else to make sure the new process is smooth.","username":"dave.enyeart","ts":"2019-11-14T16:10:17.859Z"}
{"msg":"We are proceeding with fabric and fabric-ca v1.4.4 releases today. One final CR for fabric: https://gerrit.hyperledger.org/r/#/c/fabric/+/34359/","username":"dave.enyeart","ts":"2019-11-14T16:11:38.144Z"}
{"msg":"fabric release notes: https://gerrit.hyperledger.org/r/#/c/fabric/+/34364/","username":"dave.enyeart","ts":"2019-11-14T16:12:01.327Z"}
{"msg":"fabric release notes: https://gerrit.hyperledger.org/r/#/c/fabric/+/34364/ (I'll update it for the above CR)","username":"dave.enyeart","ts":"2019-11-14T16:12:01.327Z"}
{"msg":"fabric-ca release notes: https://github.com/hyperledger/fabric-ca/pull/66","username":"dave.enyeart","ts":"2019-11-14T16:12:09.239Z"}
{"msg":"@dave.enyeart yeah, could be an abbreviated request that we merely document for this one. Would be good though to get used to this and to have a single model for @ryjones etc to follow for creating new repos","username":"cbf","ts":"2019-11-14T16:18:58.432Z"}
{"msg":"I've changed default branch to be `master` for all fabric repositories except for the chaincode and sdk repositories. @heatherp @mbwhite @andrew-coleman you can update those, and use the same pull request template if you like: https://github.com/hyperledger/fabric-ca/blob/master/.github/PULL_REQUEST_TEMPLATE.md","username":"dave.enyeart","ts":"2019-11-14T17:40:29.504Z"}
{"msg":"thanks Dave :) what permissions do you need on a repo to be able to do this? ","username":"heatherp","ts":"2019-11-14T17:42:18.270Z"}
{"msg":"@rjones Added me to a fabric-admins group, so I could do it for all the repositories if you like. Although I would like to understand from Ry the overall group permissions scheme... @rjones would you recommend to have a SDK/chaincode admin in fabric-admins, or use separate groups per sdk/chaincode language?","username":"dave.enyeart","ts":"2019-11-14T17:46:29.650Z"}
{"msg":"After talking to Heather I've gone ahead and changed all chaincode/sdk repositories to have master as default branch as well.","username":"dave.enyeart","ts":"2019-11-14T18:02:14.003Z"}
{"msg":"A thread on the state of `GitHub` persimmions as it relates to Fabric codebases and the like and etc etc","username":"rjones","ts":"2019-11-14T18:27:41.439Z"}
{"msg":"This is the parent team of all of the maintainer teams for Fabric repos on GitHub: https://github.com/orgs/hyperledger/teams/fabric-maintainers/teams","username":"rjones","ts":"2019-11-14T18:28:07.048Z"}
{"msg":"This is a work in progress, and there are certainly oversights and the like as @BrettLogan and I are creating groups ad hoc","username":"rjones","ts":"2019-11-14T18:28:53.839Z"}
{"msg":"This has lead to changes like this: https://gerrit.hyperledger.org/r/#/c/fabric-sdk-py/+/34362/","username":"rjones","ts":"2019-11-14T18:29:25.017Z"}
{"msg":"and bugs like this: https://jira.hyperledger.org/browse/FAB-16374","username":"rjones","ts":"2019-11-14T18:30:33.308Z"}
{"msg":"as we try to implement the MAINTAINERS.[rst|md] we find stuff like this","username":"rjones","ts":"2019-11-14T18:31:05.868Z"}
{"msg":"Also note: https://github.com/orgs/hyperledger/teams/fabric-maintainers/repositories","username":"rjones","ts":"2019-11-14T18:31:56.849Z"}
{"msg":"Release v1.4.4 update - Fabric-CA was completely released using Azure Pipelines, including generating the binaries, publishing to DockerHub, tagging, and created the GitHub release for us. You can check it out here https://github.com/hyperledger/fabric-ca/releases/tag/v1.4.4.","username":"dave.enyeart","ts":"2019-11-14T22:41:59.235Z"}
{"msg":"Thanks to @BrettLogan for all his hard work switching us to Azure Pipelines... it is already paying off big time!","username":"dave.enyeart","ts":"2019-11-14T22:43:29.100Z"}
{"msg":"Given that the fabric-ca binaries are published to Github rather than Nexus, we are going to do the same thing for the fabric binaries, and then update the bootstrap.sh script to pull from Github rather than Nexus.","username":"dave.enyeart","ts":"2019-11-14T22:44:18.959Z"}
{"msg":"Given that the fabric-ca binaries are published to Github rather than Nexus, we are going to do the same thing for the fabric binaries, and then update the bootstrap.sh script to pull binaries from Github rather than Nexus.","username":"dave.enyeart","ts":"2019-11-14T22:44:18.959Z"}
{"msg":"We'll try to finish that out tomorrow","username":"dave.enyeart","ts":"2019-11-14T22:44:48.567Z"}
{"msg":"We'll try to finish that out tomorrow and then announce on the mailing list","username":"dave.enyeart","ts":"2019-11-14T22:44:48.567Z"}
{"msg":"Thanks Dave;  The codeowners have the power to adjust the description and tags, and what 'merge policies' are possible only.  We can't update any branch protections etc. ","username":"mbwhite","ts":"2019-11-15T08:59:59.785Z"}
{"msg":"Has joined the channel.","username":"sanket1211","ts":"2019-11-15T09:12:00.553Z","type":"uj"}
{"msg":"@dave.enyeart @cbf Requested RFC for Go contract API -> https://github.com/hyperledger/fabric-rfcs/pull/13","username":"awjh","ts":"2019-11-15T10:45:27.549Z"}
{"msg":"fabric v1.4.4 released and tagged - https://github.com/hyperledger/fabric/releases/tag/v1.4.4","username":"dave.enyeart","ts":"2019-11-15T15:39:16.811Z"}
{"msg":"bootstrap.sh download script is being switched to pull binaries from Github instead of Nexus","username":"dave.enyeart","ts":"2019-11-15T15:40:38.590Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/c/fabric/+/34400/","username":"dave.enyeart","ts":"2019-11-15T15:40:44.367Z"}
{"msg":"We'll post the prior releases to Github as well","username":"dave.enyeart","ts":"2019-11-15T15:40:56.525Z"}
{"msg":"We'll post the prior release binaries to Github as well","username":"dave.enyeart","ts":"2019-11-15T15:40:56.525Z"}
{"msg":"@cbf could you review","username":"dave.enyeart","ts":"2019-11-15T15:41:23.519Z"}
{"msg":"@dave.enyeart  fabric- samples also released? Its not getting donwloaded & also cant see 1.4.4 tag","username":"knagware9","ts":"2019-11-15T15:47:09.957Z"}
{"msg":"We'll tag fabric-samples next","username":"dave.enyeart","ts":"2019-11-15T15:47:22.693Z"}
{"msg":"https://github.com/hyperledger/fabric-contract-api-go","username":"rjones","ts":"2019-11-15T18:02:52.703Z"}
{"msg":"All done with Fabric and Fabric-CA v1.4.4 releases.  Images published to dockerhub, binaries published to Github, bootstrap.sh download script updated to pull binaries from Github.","username":"dave.enyeart","ts":"2019-11-15T19:32:21.935Z"}
{"msg":"All looks good.","username":"dave.enyeart","ts":"2019-11-15T19:32:28.846Z"}
{"msg":"Thanks to @BrettLogan for making our first release using Azure Pipelines and Github releases a success!","username":"dave.enyeart","ts":"2019-11-15T19:33:03.941Z"}
{"msg":"Next week we intend to switch fabric repo from Gerrit to Github for source control. Let's get as many Gerrit CRs merged or abandoned as possible.","username":"dave.enyeart","ts":"2019-11-15T19:35:03.594Z"}
{"msg":"Next week we intend to switch 'fabric' core repo from Gerrit to Github for source control. Let's get as many Gerrit CRs merged or abandoned as possible.","username":"dave.enyeart","ts":"2019-11-15T19:35:03.594Z"}
{"msg":"All of the remaining repos?","username":"rjones","ts":"2019-11-15T19:35:51.006Z"}
{"msg":"'fabric' core next week. there's not many left after that.","username":"dave.enyeart","ts":"2019-11-15T19:36:42.512Z"}
{"msg":"OK.","username":"rjones","ts":"2019-11-15T20:34:21.826Z"}
{"msg":"@dave.enyeart https://jira.hyperledger.org/browse/FAB-16662 is where I'm keeping track :)","username":"rjones","ts":"2019-11-15T21:16:09.377Z"}
{"msg":"Would anyone be able to merge a couple of small fabric doc updates please? They should fix some broken links https://gerrit.hyperledger.org/r/c/fabric/+/34418 https://gerrit.hyperledger.org/r/c/fabric/+/34405 /cc @pandrejko ","username":"jtonline","ts":"2019-11-18T11:40:52.949Z"}
{"msg":"still getting this message===> Checking out v1.4.4 of hyperledger/fabric-samples\nerror: pathspec 'v1.4.4' did not match any file(s) known to git.\n","username":"knagware9","ts":"2019-11-18T18:27:35.978Z"}
{"msg":"it is tagged here: https://github.com/hyperledger/fabric-samples/tree/v1.4.4","username":"dave.enyeart","ts":"2019-11-18T18:31:41.510Z"}
{"msg":"maybe try a new local directory?","username":"dave.enyeart","ts":"2019-11-18T18:31:52.505Z"}
{"msg":"maybe try a new local directory for a fresh clone?","username":"dave.enyeart","ts":"2019-11-18T18:31:52.505Z"}
{"msg":"Thanks ,  I could see the 1.4.4 tag but while using curl to download 1.4.4 then fabric-samples not downloading","username":"knagware9","ts":"2019-11-18T18:33:39.596Z"}
{"msg":"it works when I used new directory any reason why its not working for same directory which is \"hyperledger\"","username":"knagware9","ts":"2019-11-18T18:35:58.683Z"}
{"msg":"The original clone should work as well if you fetch latest changes (which would include the tag)","username":"dave.enyeart","ts":"2019-11-18T18:37:24.498Z"}
{"msg":"okay Thanks","username":"knagware9","ts":"2019-11-18T18:54:52.662Z"}
{"msg":"How do I run a test network of fabric@master? I'm used to going to fabric-samples repo, but that seems hardcoded to deployed images and the last fabric 2.0 is from april.","username":"MHBauer","ts":"2019-11-19T20:26:22.839Z"}
{"msg":"the docker compose file has the references to the docker images, you can just build your own docker images and change the reference ","username":"yacovm","ts":"2019-11-19T20:43:08.682Z"}
{"msg":"i assume yacov means `make docker-clean docker` in fabric.","username":"dave.enyeart","ts":"2019-11-19T21:22:12.298Z"}
{"msg":"I do that fairly often, but even more often I just make the binaries and test with them.","username":"dave.enyeart","ts":"2019-11-19T21:23:14.327Z"}
{"msg":"I do that fairly often and then test with byfn and whatever extensions I'm currently trying out, but even more often I just make the binaries and test with them.","username":"dave.enyeart","ts":"2019-11-19T21:23:14.327Z"}
{"msg":"Not too difficult using a solo orderer and single peer with the /sampleconfig artifacts and SampleOrg... gets a lot more painful to bring up multiple orderers and peers.","username":"dave.enyeart","ts":"2019-11-19T21:25:04.603Z"}
{"msg":"Not too difficult using a solo orderer and single peer with the /sampleconfig artifacts and SampleOrg... gets a lot more painful to bring up multiple orderers and peers with multiple orgs","username":"dave.enyeart","ts":"2019-11-19T21:25:04.603Z"}
{"msg":"okay, how do I do that?","username":"MHBauer","ts":"2019-11-19T21:26:36.896Z"}
{"msg":"I've been thinking of writing up this approach, as I've helped had to help several people through it","username":"dave.enyeart","ts":"2019-11-19T21:26:44.520Z"}
{"msg":"I've been thinking of writing up this approach, as I've had to help several people through it","username":"dave.enyeart","ts":"2019-11-19T21:26:44.520Z"}
{"msg":"for the samples I'm having to move around all the binaries, and I'm still not there yet.","username":"MHBauer","ts":"2019-11-19T21:26:54.719Z"}
{"msg":"Happy to write it up.","username":"MHBauer","ts":"2019-11-19T21:27:42.863Z"}
{"msg":"Should start a blog anyawy","username":"MHBauer","ts":"2019-11-19T21:27:58.851Z"}
{"msg":"But I've never heard of the sampleOrg setup yet.","username":"MHBauer","ts":"2019-11-19T21:29:03.881Z"}
{"msg":"@MHBauer I can dump my notes to bootstrap it... where would you like to collaborate?","username":"dave.enyeart","ts":"2019-11-19T21:29:40.132Z"}
{"msg":"anywhere, everybody uses something different. ","username":"MHBauer","ts":"2019-11-19T21:30:06.897Z"}
{"msg":"wiki?","username":"MHBauer","ts":"2019-11-19T21:30:08.672Z"}
{"msg":"is there a hyperledger docs or ethernote?","username":"MHBauer","ts":"2019-11-19T21:30:26.768Z"}
{"msg":"how about https://wiki.hyperledger.org/display/fabric/Testing+with+Fabric+binaries","username":"dave.enyeart","ts":"2019-11-19T21:35:10.290Z"}
{"msg":"for starters","username":"dave.enyeart","ts":"2019-11-19T21:35:12.927Z"}
{"msg":"I'll dump some stuff there tonight","username":"dave.enyeart","ts":"2019-11-19T21:35:20.574Z"}
{"msg":"if we like it we could submit to github","username":"dave.enyeart","ts":"2019-11-19T21:35:31.720Z"}
{"msg":"I'll take a look, thanks.","username":"MHBauer","ts":"2019-11-19T21:42:53.793Z"}
{"msg":"@here Just discussed with @BrettLogan and @jyellick , looks like we are on track to switch over `fabric` and `fabric-baseimage` and `fabric-lib-go` repositories from Gerrit to Github on FRIDAY. ","username":"dave.enyeart","ts":"2019-11-20T15:39:38.509Z"}
{"msg":"We're getting the CI azure pipeline and doc CRs finalized currently. ","username":"dave.enyeart","ts":"2019-11-20T15:39:43.412Z"}
{"msg":"We'll get a message out to mailing list tomorrow with more details, including links to the updated contribution guide. ","username":"dave.enyeart","ts":"2019-11-20T15:39:52.119Z"}
{"msg":"MAINTAINERS - This is your last chance to review Gerrit CRs and get them merged. As of Friday we'll abandon all remaining CRs in Gerrit and ask contributors to re-submit to Github.","username":"dave.enyeart","ts":"2019-11-20T15:40:07.281Z"}
{"msg":"Will this change where the v2 Docker images are published to or do we continue to find them at nexus3.hyperledger.org?","username":"bestbeforetoday","ts":"2019-11-20T16:46:58.010Z"}
{"msg":"As far as I understand, it is fabric-test repo that does the publishing. That won't be shifting this week. When we do shift fabric-test, for the short term we'll continue publishing to nexus. Longer term, we are asking Hyperledger to make a decision on the repository of choice, and we'll likely shift the publishing from fabric-test to fabric and fabric-ca pipelines after successful interop job execution. We'll discuss interop test and pipeline proposals more in coming weeks, but did I capture all that correctly at a high level @BrettLogan ? ","username":"dave.enyeart","ts":"2019-11-20T16:58:48.200Z"}
{"msg":"As far as I understand, it is fabric-test repo that does the publishing. That won't be shifting this week. When we do shift fabric-test, for the short term we'll continue publishing to nexus. Longer term, we are asking Hyperledger to make a decision on the repository of choice, and we'll likely shift the publishing from fabric-test to fabric and fabric-ca pipelines after successful interop job execution. We'll discuss more in coming weeks, but did I capture all that correctly at a high level @BrettLogan ? ","username":"dave.enyeart","ts":"2019-11-20T16:58:48.200Z"}
{"msg":"Could someone take a look at https://jira.hyperledger.org/browse/FAB-17106 ? it's a security issue","username":"rjones","ts":"2019-11-20T17:41:28.593Z"}
{"msg":"i think that only 1-2 maintainers have access rights to see security issues","username":"yacovm","ts":"2019-11-20T18:26:52.772Z"}
{"msg":"That link is invalid Ry","username":"BrettLogan","ts":"2019-11-20T18:56:00.371Z"}
{"msg":"","username":"BrettLogan","ts":"2019-11-20T18:56:44.986Z","attachments":[{"type":"file","title":"Clipboard - November 20, 2019 1:56 PM","title_link":"/file-upload/iLwyCTaPgGHbkAbq9/Clipboard%20-%20November%2020,%202019%201:56%20PM","image_url":"/file-upload/iLwyCTaPgGHbkAbq9/Clipboard%20-%20November%2020,%202019%201:56%20PM","image_type":"image/png","image_size":60511,"url":"/file-upload/iLwyCTaPgGHbkAbq9/Clipboard%20-%20November%2020,%202019%201:56%20PM","remote":false,"fileId":"iLwyCTaPgGHbkAbq9","fileName":"Clipboard - November 20, 2019 1:56 PM"}]}
{"msg":"It doesn't even appear to have ever existed, is it hidden as a security issue, or did someone actually delete it","username":"BrettLogan","ts":"2019-11-20T18:57:03.168Z"}
{"msg":"@rjones ","username":"BrettLogan","ts":"2019-11-20T18:57:08.175Z"}
{"msg":"No permission to view that issue.  @rjones if you add me to the watchers, I'd be happy to take a look","username":"jyellick","ts":"2019-11-20T18:58:08.743Z"}
{"msg":"@BrettLogan as I said... it is a security issue.","username":"rjones","ts":"2019-11-20T19:14:34.789Z"}
{"msg":"@jyellick I assigned it to you, I can't seem to add you as a watcher. Can you see it now?","username":"rjones","ts":"2019-11-20T19:15:39.467Z"}
{"msg":"@rjones Yes, I can, will look now","username":"jyellick","ts":"2019-11-20T19:16:09.016Z"}
{"msg":"Thanks.","username":"rjones","ts":"2019-11-20T19:16:27.175Z"}
{"msg":"It's a bug, but not a security issue.  I've added a comment and removed the label so any other interested parties can view.","username":"jyellick","ts":"2019-11-20T19:32:33.302Z"}
{"msg":"Yea, I didn't realize security issues were hidden, that's what I was asking. Jason explained to me there is a tag for it and those are hidden","username":"BrettLogan","ts":"2019-11-20T19:58:02.208Z"}
{"msg":"so some of what I had an issue with was binaries being the wrong version, and my fabric-samples was out of date and on gerrit version still. \n\nI can start the networks. first-network is a bit big for me, but it starts. Now I'm stuck on the new lifecycle.","username":"MHBauer","ts":"2019-11-21T00:20:33.216Z"}
{"msg":"Effective immediately we would ask that all Change Requests for Fabric you would put into Gerrit instead be opened as Pull Requests using the fabric GitHub repository. We will be cutting Fabric over to GitHub on Friday morning EST. The maintainers need to get through the CR backlog today and as such any new CR that comes in will not be reviewed. Come Friday morning any CR","username":"BrettLogan","ts":"2019-11-21T05:46:05.996Z"}
{"msg":"Effective immediately we would ask that all Change Requests for Fabric you would put into Gerrit instead be opened as Pull Requests using the fabric GitHub repository. We will be cutting Fabric over to GitHub on Friday morning EST. The maintainers need to get through the CR backlog today and as such any new CR that comes in will not be reviewed. Come Friday morning any CR's still left in Gerrit will be abandoned, so if you can move your CR from Gerrit to GitHub today if you don't think it will get in before then please do so","username":"BrettLogan","ts":"2019-11-21T05:46:05.996Z"}
{"msg":"Effective immediately we would ask that all Change Requests for Fabric you would put into Gerrit instead be opened as Pull Requests using the fabric GitHub repository. We have configured CI to run against PR's opened in GitHub already. We will be cutting Fabric over to GitHub on Friday morning EST. The maintainers need to get through the CR backlog today and as such any new CR that comes in will not be reviewed. Come Friday morning any CR's still left in Gerrit will be abandoned, so if you can move your CR from Gerrit to GitHub today if you don't think it will get in before then please do so","username":"BrettLogan","ts":"2019-11-21T05:46:05.996Z"}
{"msg":"Are you sending this to the mailing list as well?","username":"jyellick","ts":"2019-11-21T05:46:39.097Z"}
{"msg":"Dave is going to send that in the morning, I just wanted to get something out there before I hung it up for the night so development teams in Europe could get a heads up before we get in in the morning","username":"BrettLogan","ts":"2019-11-21T05:48:21.978Z"}
{"msg":"Actually, I'll just do it now, so we blanket coverage as much as possible","username":"BrettLogan","ts":"2019-11-21T05:49:18.851Z"}
{"msg":"yay","username":"MHBauer","ts":"2019-11-21T20:04:36.325Z"}
{"msg":"Huge thank you to the Fabric maintainers for getting the Gerrit CR's down to less than 20 open, especially Dave Enyeart and Jason Yellick who really lead us through the home stretch on getting CR's reviewed and merged over the last 48 hours.","username":"BrettLogan","ts":"2019-11-22T04:02:35.377Z"}
{"msg":"Just a reminder, tomorrow morning EST we will be migrating to GitHub with Fabric","username":"BrettLogan","ts":"2019-11-22T04:03:10.454Z"}
{"msg":"Just a reminder, sometime tomorrow morning EST we will be migrating to GitHub with Fabric","username":"BrettLogan","ts":"2019-11-22T04:03:10.454Z"}
{"msg":"Down to 10. Any remaining will be abandoned upon switching.","username":"dave.enyeart","ts":"2019-11-22T06:47:58.088Z"}
{"msg":"Pull request template is ready for merge: https://gerrit.hyperledger.org/r/#/c/fabric/+/34448/","username":"dave.enyeart","ts":"2019-11-22T06:48:14.260Z"}
{"msg":"Pull request template is ready for another +2 and merge: https://gerrit.hyperledger.org/r/#/c/fabric/+/34448/","username":"dave.enyeart","ts":"2019-11-22T06:48:14.260Z"}
{"msg":"https://gerrit.hyperledger.org/r/#/q/project:fabric-test+status:open https://gerrit.hyperledger.org/r/#/q/status:open+project:fabric","username":"rjones","ts":"2019-11-22T10:46:36.151Z"}
{"msg":"```10: https://gerrit.hyperledger.org/r/#/q/project:fabric-test+status:open11: https://gerrit.hyperledger.org/r/#/q/status:open+project:fabric```","username":"rjones","ts":"2019-11-22T10:46:36.151Z"}
{"msg":"```10: https://gerrit.hyperledger.org/r/#/q/project:fabric-test+status:open\n\n11: https://gerrit.hyperledger.org/r/#/q/status:open+project:fabric```","username":"rjones","ts":"2019-11-22T10:46:36.151Z"}
{"msg":"`fabric` will be shifted today. `fabric-test` will not.","username":"dave.enyeart","ts":"2019-11-22T12:06:41.159Z"}
{"msg":"@rjones  `fabric` will be shifted today. `fabric-test` will not.","username":"dave.enyeart","ts":"2019-11-22T12:06:41.159Z"}
{"msg":"We are in the process of Migrating Fabric to GitHub. We will let everyone know when we are done. Maintainers please do not merge any changes in Gerrit or GitHub until we give the all clear","username":"BrettLogan","ts":"2019-11-22T15:31:18.548Z"}
{"msg":"Here are people with a commit bit to `fabric`: https://github.com/orgs/hyperledger/teams/fabric-maintainers/members","username":"rjones","ts":"2019-11-22T15:46:06.071Z"}
{"msg":"by proxy: https://github.com/orgs/hyperledger/teams/fabric-admins/members","username":"rjones","ts":"2019-11-22T15:46:37.809Z"}
{"msg":"And that is all, we are officially on GitHub. Maintainers can start the review process using GitHub moving forward","username":"BrettLogan","ts":"2019-11-22T15:51:52.862Z"}
{"msg":"@BrettLogan Great job leading the way on our transition... you've made it look very smooth, but we're all aware of just how much hard work went into making it look smooth. We've landed in a much more rational and understandable place in terms of contributions and CI. There's more to do, but let's celebrate this success for a moment!","username":"dave.enyeart","ts":"2019-11-22T17:17:52.923Z"}
{"msg":"@BrettLogan Great job leading the way on our transition... you've made it look very smooth, but we're all aware of just how much hard work went into making it look smooth. We've landed in a much more rational and understandable place in terms of contributions and CI. There's more to do, but let's celebrate this success for a moment!  Not to mention @rjones assistance around the clock, and guidance from @sykesm !","username":"dave.enyeart","ts":"2019-11-22T17:17:52.923Z"}
{"msg":"Let's also share tips as we find our way around. Brett and Danny shared two great resources already -","username":"dave.enyeart","ts":"2019-11-22T17:18:57.295Z"}
{"msg":"https://hub.github.com/ - hub is an extension to command-line git that helps you do everyday GitHub tasks without ever leaving the terminal. ","username":"dave.enyeart","ts":"2019-11-22T17:19:20.799Z"}
{"msg":"https://desktop.github.com/ GitHub desktop","username":"dave.enyeart","ts":"2019-11-22T17:19:47.380Z"}
{"msg":"And Yacov shared a linting and vetting option with great integration with GitHub: https://golangci.com/","username":"dave.enyeart","ts":"2019-11-22T17:22:20.746Z"}
{"msg":"https://dev.azure.com/Hyperledger/Fabric/_dashboards/dashboard/b5334ea6-f0a0-420a-905b-fab621a9f288 (should be visible even if you aren't AUTHN)","username":"rjones","ts":"2019-11-22T19:07:54.831Z"}
{"msg":"@BrettLogan @rjones I unchecked this one for Fabric","username":"dave.enyeart","ts":"2019-11-23T13:52:20.002Z"}
{"msg":"","username":"dave.enyeart","ts":"2019-11-23T13:52:24.784Z","attachments":[{"type":"file","title":"Clipboard - November 23, 2019 8:52 AM","title_link":"/file-upload/RevZuwXzFS2Zc6qeq/Clipboard%20-%20November%2023,%202019%208:52%20AM","image_url":"/file-upload/RevZuwXzFS2Zc6qeq/Clipboard%20-%20November%2023,%202019%208:52%20AM","image_type":"image/png","image_size":45758,"url":"/file-upload/RevZuwXzFS2Zc6qeq/Clipboard%20-%20November%2023,%202019%208:52%20AM","remote":false,"fileId":"RevZuwXzFS2Zc6qeq","fileName":"Clipboard - November 23, 2019 8:52 AM"}]}
{"msg":"Our policy to date has been that it is maintainer judgement whether a rebase and re-verify is required before merging.","username":"dave.enyeart","ts":"2019-11-23T13:53:19.693Z"}
{"msg":"Otherwise we'll need to run all checks again before every merge, and as we know there are still flakes around","username":"dave.enyeart","ts":"2019-11-23T13:54:23.818Z"}
{"msg":"I think we should uncheck for all repositories.  Any concerns?","username":"dave.enyeart","ts":"2019-11-23T13:54:38.515Z"}
{"msg":"I think we should keep uncheck for all repositories to align with our long standing policy of using maintainer judgement.  Any concerns?","username":"dave.enyeart","ts":"2019-11-23T13:54:38.515Z"}
{"msg":"I think we should keep unchecked for all repositories to align with our long standing policy of using maintainer judgement.  Any concerns?","username":"dave.enyeart","ts":"2019-11-23T13:54:38.515Z"}
{"msg":"I think we should keep unchecked for all repositories.  Any concerns?","username":"dave.enyeart","ts":"2019-11-23T13:54:38.515Z"}
{"msg":"That was checked? I didn't think that was enabled ","username":"BrettLogan","ts":"2019-11-23T13:55:15.304Z"}
{"msg":"yeah it was checked, maybe just by mistake","username":"dave.enyeart","ts":"2019-11-23T13:55:28.153Z"}
{"msg":"i couldn't merge PRs as a result","username":"dave.enyeart","ts":"2019-11-23T13:55:39.420Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/309","username":"BrettLogan","ts":"2019-11-23T15:44:34.362Z"}
{"msg":"This fixes a bug introduced by a cherrypick in release-1.4","username":"BrettLogan","ts":"2019-11-23T15:45:08.957Z"}
{"msg":"@dave.enyeart this is why I would like to get GitHub repo settings into the repo :)","username":"rjones","ts":"2019-11-23T18:55:28.329Z"}
{"msg":"any plans to go beyond the default message here (About this project)? https://dev.azure.com/Hyperledger/Fabric","username":"greg2git","ts":"2019-11-24T17:29:38.939Z"}
{"msg":"@MHBauer Here's the instructions for testing with Fabric binaries:","username":"dave.enyeart","ts":"2019-11-24T18:06:58.290Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Testing+with+Fabric+binaries","username":"dave.enyeart","ts":"2019-11-24T18:07:01.192Z"}
{"msg":"I was thinking of adding it to the contribution guide here: https://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/build.html#","username":"dave.enyeart","ts":"2019-11-24T18:07:18.527Z"}
{"msg":"Although, it could be used by end consumers as well, as a lightweight alternative to byfn sample","username":"dave.enyeart","ts":"2019-11-24T18:08:01.693Z"}
{"msg":"Although, it could be used by end consumers as well after they download the binaries, as a lightweight alternative to byfn sample","username":"dave.enyeart","ts":"2019-11-24T18:08:01.693Z"}
{"msg":"What does everybody think?","username":"dave.enyeart","ts":"2019-11-24T18:08:15.978Z"}
{"msg":"what should I put in there? I notice a lot of the repos on GitHub don't have descriptions and the like","username":"rjones","ts":"2019-11-24T18:09:05.224Z"}
{"msg":"seems like a full circle has been made with github, on, off, back on, and now on Azure, so maybe something to that effect?","username":"greg2git","ts":"2019-11-24T18:11:12.411Z"}
{"msg":"Ry, you could put our generic description:","username":"dave.enyeart","ts":"2019-11-24T18:18:51.612Z"}
{"msg":"```Hyperledger Fabric is an enterprise-grade permissioned distributed ledger framework for developing solutions and applications. Its modular and versatile design satisfies a broad range of industry use cases. It offers a unique approach to consensus that enables performance at scale while preserving privacy.```","username":"dave.enyeart","ts":"2019-11-24T18:18:55.100Z"}
{"msg":"dome","username":"rjones","ts":"2019-11-24T18:34:49.689Z"}
{"msg":"done","username":"rjones","ts":"2019-11-24T18:34:49.689Z"}
{"msg":"@MHBauer Here's the instructions for testing with Fabric binaries:","username":"dave.enyeart","ts":"2019-11-24T18:52:20.535Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Testing+with+Fabric+binaries","username":"dave.enyeart","ts":"2019-11-24T18:52:26.593Z"}
{"msg":"I was thinking of adding it to the contribution guide here: https://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/build.html#","username":"dave.enyeart","ts":"2019-11-24T18:52:33.042Z"}
{"msg":"What does everybody think?","username":"dave.enyeart","ts":"2019-11-24T18:52:38.952Z"}
{"msg":"Ah, good idea, I found the doc for it here: https://github.com/probot/settings  We'll look into it.","username":"dave.enyeart","ts":"2019-11-25T18:02:29.375Z"}
{"msg":"Ah, good idea, Brett found the doc for it here: https://github.com/probot/settings  We'll look into it.","username":"dave.enyeart","ts":"2019-11-25T18:02:29.375Z"}
{"msg":"GitHub tip: I've found the PR search filters to be not well documented. Here's how to filter on reviewable PRs - open non-draft PRs that have passed checks:","username":"dave.enyeart","ts":"2019-11-25T18:51:33.652Z"}
{"msg":"https://github.com/hyperledger/fabric/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+draft%3Afalse+status%3Asuccess","username":"dave.enyeart","ts":"2019-11-25T18:51:35.125Z"}
{"msg":"GitHub tip: The Reviewers list is the potential reviewers. You can also add Assignees if you'd like a specific person to review.","username":"dave.enyeart","ts":"2019-11-25T19:04:39.707Z"}
{"msg":"GitHub tip: The Reviewers list is the potential reviewers based on the CODEOWNERS file. You can also add Assignees if you'd like a specific person to review.","username":"dave.enyeart","ts":"2019-11-25T19:04:39.707Z"}
{"msg":"You could also make a much more granular CODEOWNERS file if you wanted.","username":"rjones","ts":"2019-11-25T19:07:07.959Z"}
{"msg":"GitHub tip: When merging, Click `Rebase and merge` rather than `Create a merge commit` so that our commit history looks clean.","username":"dave.enyeart","ts":"2019-11-25T19:15:40.024Z"}
{"msg":"Does anybody see a reason to ever `Create a merge commit` rather than `Rebase and merge`?  If not, @rjones reminded me that we can remove that option...","username":"dave.enyeart","ts":"2019-11-25T19:20:49.192Z"}
{"msg":"there is also the `squash and merge` option which, TBH, is not great","username":"rjones","ts":"2019-11-25T19:21:42.481Z"}
{"msg":"yeah, we'll typically suggest to the code contributor that they should squash their own commits, but thought we may want to leave that option just in case.","username":"dave.enyeart","ts":"2019-11-25T19:22:47.812Z"}
{"msg":"yeah, we'll typically suggest to the code contributor that they should squash their own commits (unless the stack of commits is actually interesting), but thought we may want to leave that option just in case.","username":"dave.enyeart","ts":"2019-11-25T19:22:47.812Z"}
{"msg":"I think we still want the squash and merge option (in case people don't squash when the should and a maintainer wants to make a judgement call","username":"mastersingh24","ts":"2019-11-25T20:17:09.447Z"}
{"msg":"is it still possible to run IT or UT individually? is there a list of /azp commands documented? thx","username":"guoger","ts":"2019-11-26T02:03:28.530Z"}
{"msg":"also, do we not require a jira in commit msg anymore? i see some PRs w/o it, and i don't see it in commit msg template..","username":"guoger","ts":"2019-11-26T02:17:04.848Z"}
{"msg":"@guoger As a maintainer, you can use the Checks tab to retrigger just UT or IT","username":"BrettLogan","ts":"2019-11-26T03:22:25.494Z"}
{"msg":"Your PR got caught in some strange limbo though, not sure what happened, I did open a ticket with Azure so they could note it. The 4 sets of tests passed, but there is a stray (old) integration test that got canceled","username":"BrettLogan","ts":"2019-11-26T03:23:31.887Z"}
{"msg":"thx!! i was quite puzzled... also, i don't see a `trigger rebuild` button in check tab? should i log into azure pipeline or something?","username":"guoger","ts":"2019-11-26T03:24:52.380Z"}
{"msg":"You won't","username":"BrettLogan","ts":"2019-11-26T03:24:59.466Z"}
{"msg":"Technically your 4 tests passed","username":"BrettLogan","ts":"2019-11-26T03:25:05.019Z"}
{"msg":"Or do you mean on other PR's","username":"BrettLogan","ts":"2019-11-26T03:25:14.220Z"}
{"msg":"ah, i see a little `re-run` button","username":"guoger","ts":"2019-11-26T03:25:57.346Z"}
{"msg":"yeah, i mean other PRs","username":"guoger","ts":"2019-11-26T03:26:03.951Z"}
{"msg":"Yea, as a maintainer you can use that to retrigger just the failed job","username":"BrettLogan","ts":"2019-11-26T03:26:31.029Z"}
{"msg":"Non-maintainers don't get that button unfortunately","username":"BrettLogan","ts":"2019-11-26T03:26:48.156Z"}
{"msg":"then i assume contributors would be using `/azp run` to trigger whole build?","username":"guoger","ts":"2019-11-26T03:26:56.513Z"}
{"msg":"I did open a feature request to AZP on that","username":"BrettLogan","ts":"2019-11-26T03:26:59.891Z"}
{"msg":"Actually /azp-run has the same limitation","username":"BrettLogan","ts":"2019-11-26T03:27:16.673Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/313","username":"BrettLogan","ts":"2019-11-26T03:27:33.774Z"}
{"msg":"This is my proposal to provide that functionality to authors who aren't maintainers","username":"BrettLogan","ts":"2019-11-26T03:27:51.156Z"}
{"msg":"I'm also looking for comments on this, I implemented Azure's parallel test strategy to split the load for integration tests, bring IT down to an hour instead of 1:45","username":"BrettLogan","ts":"2019-11-26T03:29:08.975Z"}
{"msg":"I'm also looking for comments on this, I implemented Azure parallel test strategy to split the load for integration tests, bring IT down to an hour instead of 1:45","username":"BrettLogan","ts":"2019-11-26T03:29:08.975Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/312","username":"BrettLogan","ts":"2019-11-26T03:29:10.052Z"}
{"msg":"i was looking at that but i guess i'll need to familiarize myself with azp to some extent... looks promising though!","username":"guoger","ts":"2019-11-26T03:30:11.265Z"}
{"msg":"also i assume parallel IT wouldn't interfere each other in terms of listening ports?","username":"guoger","ts":"2019-11-26T03:31:01.670Z"}
{"msg":"Correct, they run on discreet VM's","username":"BrettLogan","ts":"2019-11-26T03:31:12.743Z"}
{"msg":"They have an intelligent load balancer as well (takes historical runtimes to load balance your test suite for you) but there is no adapter for GoLang yet","username":"BrettLogan","ts":"2019-11-26T03:31:50.661Z"}
{"msg":"i see, that's nice :)","username":"guoger","ts":"2019-11-26T03:32:21.941Z"}
{"msg":"are we planning to take down gerrit server any time soon? would be nice to have an archive of it. i sometimes find it useful to dig into some history comments","username":"guoger","ts":"2019-11-26T03:33:31.993Z"}
{"msg":"We asked to keep it running for a few months into next year, but we should probably follow up on that request, that would give us some time to collect the data and archive it","username":"BrettLogan","ts":"2019-11-26T03:34:46.998Z"}
{"msg":"I do believe we asked to keep it running for a few months into next year, but we should probably follow up on that request with Chris, that would give us some time to collect the data and archive it","username":"BrettLogan","ts":"2019-11-26T03:34:46.998Z"}
{"msg":"I do believe we asked to keep it running for a few months into next year, but we should probably follow up on that request, that would give us some time to collect the data and archive it","username":"BrettLogan","ts":"2019-11-26T03:34:46.998Z"}
{"msg":"Scrape it, put it into a json object and cache it in github so people can clone the repo and query it with jq","username":"BrettLogan","ts":"2019-11-26T03:36:22.852Z"}
{"msg":"Scrape it, put it into a json object and cache it in an archive github repo so people can clone the archiv erepo and query it with jq","username":"BrettLogan","ts":"2019-11-26T03:36:22.852Z"}
{"msg":"Scrape it, put it into a json object and cache it in an archive github repo so people can clone the archive repo and query it with jq","username":"BrettLogan","ts":"2019-11-26T03:36:22.852Z"}
{"msg":"this might sound dumb but is it possible to comment on lines that are not modified in a PR? (those collapsed ones)","username":"guoger","ts":"2019-11-26T03:46:20.386Z"}
{"msg":"Hmmm, it actually doesn't seem like it","username":"BrettLogan","ts":"2019-11-26T03:50:42.507Z"}
{"msg":"Apparently GitHub's position is, since you can use git blame in the UI when doing a review, you should do a Git Blame and comment on the commit that last modified that line, which is something github allows","username":"BrettLogan","ts":"2019-11-26T03:54:38.964Z"}
{"msg":"oh i didn't know that.. and that comment will be included in current PR? (instead of history PR that actually contained that commit)","username":"guoger","ts":"2019-11-26T03:58:49.536Z"}
{"msg":"Doesn't propogate to the PR, looks like it just leaves it on the commit and sends an email to the parties involved in that commit https://github.com/btl5037/fabric/commit/a0032984b1e1bc8cb356788f1cdb6b054f5b5e7a","username":"BrettLogan","ts":"2019-11-26T04:02:37.839Z"}
{"msg":"Scroll to the bottom","username":"BrettLogan","ts":"2019-11-26T04:02:45.975Z"}
{"msg":"And for clarity, its the commit, not the PR, as we didn't have PR's for 3 years until this week in Fabric","username":"BrettLogan","ts":"2019-11-26T04:03:12.291Z"}
{"msg":"Jason's going to wake up wondering why I commented on a 2 year old commit","username":"BrettLogan","ts":"2019-11-26T04:04:04.703Z"}
{"msg":"Doesn't propogate to the PR, looks like it just leaves it on the commit and sends an email to the parties involved in that commit https://github.com/btl5037/fabric/commit/a0032984b1e1bc8cb356788f1cdb6b054f5b5e7a\nScroll to the bottom\nAnd for clarity, its the commit, not the PR, as we didn't have PR's for 3 years until this week in Fabric\nJason's going to wake up wondering why I commented on a 2 year old commit","username":"BrettLogan","ts":"2019-11-26T04:05:29.658Z"}
{"msg":"no need to scrape it at all. I have a 500 meg JSON export of Gerrit that's up-to-date for this weekend. I'll re-run the export when fabric-test is read-only","username":"rjones","ts":"2019-11-26T08:03:55.146Z"}
{"msg":"I've been trying to figure out how to use jq to get anything useful","username":"rjones","ts":"2019-11-26T08:04:55.949Z"}
{"msg":"https://github.com/ryjones/hyperledger-gerrit-export","username":"rjones","ts":"2019-11-26T08:47:29.748Z"}
{"msg":"Once fabric-test is read-only, I'll add one more commit and archive the repo","username":"rjones","ts":"2019-11-26T08:47:44.918Z"}
{"msg":"@rjones what are the options for querying the gerrit export?  Is it possible to stand up a Gerrit server 'on the side', either central or on our local machines?","username":"dave.enyeart","ts":"2019-11-26T12:55:22.450Z"}
{"msg":"GitHub recently released `Autolinking References` so we can setup GitHub to automatically parse and link FAB numbers like we have historically so we get links to Jira in  Commit messages, Commit headers and PR Descriptions: https://help.github.com/en/github/administering-a-repository/configuring-autolinks-to-reference-external-resources","username":"BrettLogan","ts":"2019-11-26T16:35:31.872Z"}
{"msg":"I've tested it and it works well https://github.com/btl5037/fabric/pull/5/commits/43c5804d2bd4d3f40294ad6f709f6325ab26095b","username":"BrettLogan","ts":"2019-11-26T16:37:10.808Z"}
{"msg":"@dave.enyeart we have a lot of options. What do fabric maintainers want? One option, the most expensive, is to leave Gerrit in readonly mode.","username":"rjones","ts":"2019-11-26T17:31:00.610Z"}
{"msg":"@BrettLogan cool. That option doesn't exist for `hyperledger` repos for some reason - I'll dig into it later","username":"rjones","ts":"2019-11-26T17:37:08.850Z"}
{"msg":"@dave.enyeart one I worked on for a while uses scapy: https://github.com/ryjones/gerrit-static-archive it needs some work to support the Gerrit version we're running, and I didn't make the progress I wanted.","username":"rjones","ts":"2019-11-26T17:45:00.362Z"}
{"msg":"https://review.source.kitware.com/%23/q/status:open/ is an example of the type of export that tool generates","username":"rjones","ts":"2019-11-26T17:45:46.546Z"}
{"msg":"@here While we'll likely have a small turnout for the contributor meeting on Wednesday due to the US holiday, I'd like to proceed with the meeting since we have the v2.0 beta quickly coming up, not to mention all the recent SCM and CI activity. Agenda topics so far:\n\n*Release update*\nI suggest we target v2.0 beta for December 13th. There's about two weeks of close down work, and we don't want to butt up against the holidays.\nRemaining items that we are closing down:\n- finalize doc for items we'd like to showcase in the beta (lifecycle done, external chaincode and private data enhancements in progress)\n- external chaincode as a server\n- state database cache for improved performance (merged for couchdb, performance assessment to determine if it should be applied to leveldb as well)\n- upgrade documentation and test (won't gate a beta, but would be nice-to-have for people to preview)\n- Jira cleanup to ensure we don't overlook something half-baked - we haven't been very disciplined lately... 291 open issues with FixVersion of v2.0.0. Please clean up items in your respective wheelhouses... either Close or set FixVersion to Future of v2.1.0 so that we can see what is truly remaining.\n\n*SCM and CI update*\n- Switched `fabric` and `fabric-baseimage` and `fabric-sdk-node` repository from Gerrit to Github last week. Nice job closing down the Fabric review backlog. Kudos to Brett Logan for a smooth transition.\n- Last Gerrit repo to switch over in December is fabric-test\n- Mailing list discussion wrt creation of fabric-docs repository\n\nThis week Deep Dive in preparation for v2.0 beta is *External chaincode - Matt Sykes*","username":"dave.enyeart","ts":"2019-11-26T19:47:53.163Z"}
{"msg":"@here While we'll likely have a small turnout for the contributor meeting on Wednesday due to the US holiday, I'd like to proceed with the meeting since we have the v2.0 beta quickly coming up, not to mention all the recent SCM and CI activity. Agenda topics so far:\n\n*Release update*\nI suggest we target v2.0 beta for December 13th. There's about two weeks of close down work, and we don't want to butt up against the holidays.\nRemaining items that we are closing down:\n- finalize doc for items we'd like to showcase in the beta (lifecycle done, external chaincode and private data enhancements in progress)\n- external chaincode as a server\n- state database cache for improved performance (merged for couchdb, performance assessment to determine if it should be applied to leveldb as well)\n- upgrade documentation and test (won't gate a beta, but would be nice-to-have for people to preview)\n- Jira cleanup to ensure we don't overlook something half-baked - we haven't been very disciplined lately... 291 open issues with FixVersion of v2.0.0. Please clean up items in your respective wheelhouses... either Close or set FixVersion to Future of v2.1.0 so that we can see what is truly remaining.\nhttps://jira.hyperledger.org/issues/?jql=fixVersion%20%3D%20v2.0.0%20AND%20status%20!%3D%20closed%20ORDER%20BY%20key%20ASC&startIndex=250\n\n*SCM and CI update*\n- Switched `fabric` and `fabric-baseimage` and `fabric-sdk-node` repository from Gerrit to Github last week. Nice job closing down the Fabric review backlog. Kudos to Brett Logan for a smooth transition.\n- Last Gerrit repo to switch over in December is fabric-test\n- Mailing list discussion wrt creation of fabric-docs repository\n\nThis week Deep Dive in preparation for v2.0 beta is *External chaincode - Matt Sykes*","username":"dave.enyeart","ts":"2019-11-26T19:47:53.163Z"}
{"msg":"@here While we'll likely have a small turnout for the contributor meeting on Wednesday due to the US holiday, I'd like to proceed with the meeting since we have the v2.0 beta quickly coming up, not to mention all the recent SCM and CI activity. Agenda topics so far:\n\n*Release update*\nI suggest we target v2.0 beta for December 13th. There's about two weeks of close down work, and we don't want to butt up against the holidays.\nRemaining items that we are closing down:\n- finalize doc for items we'd like to showcase in the beta (lifecycle done, external chaincode and private data enhancements in progress)\n- external chaincode as a server\n- state database cache for improved performance (merged for couchdb, performance assessment to determine if it should be applied to leveldb as well)\n- upgrade documentation and test (won't gate a beta, but would be nice-to-have for people to preview)\n- Jira cleanup to ensure we don't overlook something half-baked - we haven't been very disciplined lately... 291 open issues with FixVersion of v2.0.0. Please clean up items in your respective wheelhouses... either Close or set FixVersion to Future or v2.1.0 so that we can see what is truly remaining.\nhttps://jira.hyperledger.org/issues/?jql=fixVersion%20%3D%20v2.0.0%20AND%20status%20!%3D%20closed%20ORDER%20BY%20key%20ASC&startIndex=250\n\n*SCM and CI update*\n- Switched `fabric` and `fabric-baseimage` and `fabric-sdk-node` repository from Gerrit to Github last week. Nice job closing down the Fabric review backlog. Kudos to Brett Logan for a smooth transition.\n- Last Gerrit repo to switch over in December is fabric-test\n- Mailing list discussion wrt creation of fabric-docs repository\n\nThis week Deep Dive in preparation for v2.0 beta is *External chaincode - Matt Sykes*","username":"dave.enyeart","ts":"2019-11-26T19:47:53.163Z"}
{"msg":"@here While we'll likely have a small turnout for the contributor meeting on Wednesday due to the US holiday, I'd like to proceed with the meeting since we have the v2.0 beta quickly coming up, not to mention all the recent SCM and CI activity. Agenda topics so far:\n\n*Release update*\nI suggest we target v2.0 beta for December 13th. There's about two weeks of close down work, and we don't want to butt up against the holidays.\nRemaining items that we are closing down:\n- finalize doc for items we'd like to showcase in the beta (lifecycle done, external chaincode and private data enhancements in progress)\n- external chaincode as a server\n- state database cache for improved performance (merged for couchdb, performance assessment to determine if it should be applied to leveldb as well)\n- upgrade documentation and test (won't gate a beta, but would be nice-to-have for people to preview)\n- Jira cleanup to ensure we don't overlook something half-baked - we haven't been very disciplined lately... 291 open issues with FixVersion of v2.0.0. Please clean up items in your respective wheelhouses... either Close or set FixVersion to Future or v2.1.0 so that we can see what is truly remaining.\nhttps://jira.hyperledger.org/issues/?jql=fixVersion%20%3D%20v2.0.0%20AND%20status%20!%3D%20closed%20ORDER%20BY%20key%20ASC\n\n*SCM and CI update*\n- Switched `fabric` and `fabric-baseimage` and `fabric-sdk-node` repository from Gerrit to Github last week. Nice job closing down the Fabric review backlog. Kudos to Brett Logan for a smooth transition.\n- Last Gerrit repo to switch over in December is fabric-test\n- Mailing list discussion wrt creation of fabric-docs repository\n\nThis week Deep Dive in preparation for v2.0 beta is *External chaincode - Matt Sykes*","username":"dave.enyeart","ts":"2019-11-26T19:47:53.163Z"}
{"msg":"@here While we'll likely have a small turnout for the contributor meeting on Wednesday due to the US holiday, I'd like to proceed with the meeting since we have the v2.0 beta quickly coming up, not to mention all the recent SCM and CI activity. Agenda topics so far:\n\n*Release update*\nI suggest we target v2.0 beta for December 13th. There's about two weeks of close down work, and we don't want to butt up against the holidays.\nRemaining items that we are closing down:\n- finalize doc for items we'd like to showcase in the beta (lifecycle done, external chaincode and private data enhancements in progress)\n- external chaincode as a server\n- state database cache for improved performance (merged for couchdb, performance assessment to determine if it should be applied to leveldb as well)\n- upgrade documentation and test (won't gate a beta, but would be nice-to-have for people to preview)\n- Jira cleanup to ensure we don't overlook something half-baked - we haven't been very disciplined lately... 291 open issues with FixVersion of v2.0.0. Please clean up items in your respective wheelhouses... either Close or set FixVersion to Future or v2.1.0 so that we can see what is truly remaining.\nhttps://jira.hyperledger.org/issues/?jql=fixVersion%20%3D%20v2.0.0%20AND%20status%20!%3D%20closed\n\n*SCM and CI update*\n- Switched `fabric` and `fabric-baseimage` and `fabric-sdk-node` repository from Gerrit to Github last week. Nice job closing down the Fabric review backlog. Kudos to Brett Logan for a smooth transition.\n- Last Gerrit repo to switch over in December is fabric-test\n- Mailing list discussion wrt creation of fabric-docs repository\n\nThis week Deep Dive in preparation for v2.0 beta is *External chaincode - Matt Sykes*","username":"dave.enyeart","ts":"2019-11-26T19:47:53.163Z"}
{"msg":"@here While we'll likely have a small turnout for the contributor meeting on Wednesday due to the US holiday, I'd like to proceed with the meeting since we have the v2.0 beta quickly coming up, not to mention all the recent SCM and CI activity. Agenda topics so far:\n\n*Release update*\nI suggest we target v2.0 beta for December 13th. There's about two weeks of close down work, and we don't want to butt up against the holidays.\nRemaining items that we are closing down:\n- finalize doc for items we'd like to showcase in the beta (lifecycle done, external chaincode and private data enhancements in progress)\n- external chaincode as a server\n- state database cache for improved performance (merged for couchdb, performance assessment to determine if it should be applied to leveldb as well)\n- upgrade documentation and test (won't gate a beta, but would be nice-to-have for people to preview)\n- Jira cleanup to ensure we don't overlook something half-baked - we haven't been very disciplined lately... 291 open issues with FixVersion of v2.0.0. Please clean up items in your respective wheelhouses... either Close or set FixVersion to Future or v2.1.0 so that we can see what is truly remaining.\nhttps://jira.hyperledger.org/issues/?jql=fixVersion%20%3D%20v2.0.0%20AND%20status%20!%3D%20closed\n\n*SCM and CI update*\n- Switched `fabric` and `fabric-baseimage` and `fabric-sdk-node` repository from Gerrit to Github last week. Nice job closing down the Fabric review backlog. Kudos to Brett Logan for a smooth transition.\n- Last Gerrit repo to switch over in December is fabric-test\n- Mailing list discussion wrt creation of fabric-docs repository\n\nThis weeks Deep Dive in preparation for v2.0 beta is *External chaincode - Matt Sykes*","username":"dave.enyeart","ts":"2019-11-26T19:47:53.163Z"}
{"msg":"@here While we'll likely have a small turnout for the contributor meeting on Wednesday due to the US holiday, I'd like to proceed with the meeting since we have the v2.0 beta quickly coming up, not to mention all the recent SCM and CI activity. Agenda topics so far:\n\n*Release update*\nI suggest we target v2.0 beta for December 13th. There's about two weeks of close down work, and we don't want to butt up against the holidays.\nRemaining items that we are closing down:\n- finalize doc for items we'd like to showcase in the beta (lifecycle done, external chaincode and private data enhancements in progress)\n- external chaincode as a server\n- state database cache for improved performance (merged for couchdb, performance assessment to determine if it should be applied to leveldb as well)\n- upgrade documentation and test (won't gate a beta, but would be nice-to-have for people to preview)\n- Jira cleanup to ensure we don't overlook something half-baked - we haven't been very disciplined lately... 291 open issues with FixVersion of v2.0.0. Please clean up items in your respective wheelhouses... either Close or set FixVersion to Future or v2.1.0 so that we can see what is truly remaining.\nhttps://jira.hyperledger.org/issues/?jql=fixVersion%20%3D%20v2.0.0%20AND%20status%20!%3D%20closed\n\n*SCM and CI update*\n- Switched `fabric` and `fabric-baseimage` and `fabric-sdk-node` repository from Gerrit to Github last week. Nice job closing down the Fabric review backlog. Kudos to Brett Logan for a smooth transition.\n- Last Gerrit repo to switch over in December is fabric-test\n- Mailing list discussion wrt creation of fabric-docs repository\n\n*Deep Dive*\nThis weeks Deep Dive in preparation for v2.0 beta is *External chaincode - Matt Sykes*","username":"dave.enyeart","ts":"2019-11-26T19:47:53.163Z"}
{"msg":"@here While we'll likely have a small turnout for the contributor meeting on Wednesday due to the US holiday, I'd like to proceed with the meeting since we have the v2.0 beta quickly coming up, not to mention all the recent SCM and CI activity. Agenda topics so far:\n\n*Release update*\nI suggest we target v2.0 beta for December 13th. There's about two weeks of close down work, and we don't want to butt up against the holidays.\nRemaining items that we are closing down:\n- finalize doc for items we'd like to showcase in the beta (lifecycle done, external chaincode and private data enhancements in progress)\n- external chaincode as a server\n- state database cache for improved performance (merged for couchdb, performance assessment to determine if it should be applied to leveldb as well)\n- upgrade documentation and test (won't gate a beta, but would be nice-to-have for people to preview)\n- Jira cleanup to ensure we don't overlook something half-baked - we haven't been very disciplined lately... 291 open issues with FixVersion of v2.0.0. Please clean up items in your respective wheelhouses... either Close or set FixVersion to Future or v2.1.0 so that we can see what is truly remaining.\nhttps://jira.hyperledger.org/issues/?jql=fixVersion%20%3D%20v2.0.0%20AND%20status%20!%3D%20closed\n\n*SCM and CI update*\n- Switched `fabric` and `fabric-baseimage` and `fabric-sdk-node` repository from Gerrit to Github last week. Nice job closing down the Fabric review backlog. Kudos to Brett Logan for a smooth transition.\n- Last Gerrit repo to switch over in December is fabric-test\n- We expect to shift from Nexus to Azure Artifacts for storage of non-release artifacts\n- Mailing list discussion wrt creation of fabric-docs repository\n\n*Deep Dive*\nThis weeks Deep Dive in preparation for v2.0 beta is *External chaincode - Matt Sykes*","username":"dave.enyeart","ts":"2019-11-26T19:47:53.163Z"}
{"msg":"We like golangci-lint but we ended up just running it inside GitHub Actions / AZP.","username":"troyronda","ts":"2019-11-26T20:40:53.061Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=PNZjibuybXaRhbfod) do we want to advocate for addressing review comments in *separate commits*, and squash merge when approved? So it's easier to view what have been changed, whether it actually resolves comments, and new changes.","username":"guoger","ts":"2019-11-27T04:41:31.904Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=PNZjibuybXaRhbfod","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=PNZjibuybXaRhbfod","remote":true,"fileId":null,"fileName":null}]}
{"msg":"instead of amending current commit and `push -f`","username":"guoger","ts":"2019-11-27T04:41:50.538Z"}
{"msg":"@here contributor meeting starting https://zoom.us/my/hyperledger.community.3 ... looks like phone dial-in has been disabled ","username":"dave.enyeart","ts":"2019-11-27T14:01:00.875Z"}
{"msg":"if there is some extreme case like a big PR (over 500 lines), the first commit is library|functional change signed by author A, the second commit is correspondingly test covering this change while signed by collaborator author B. ","username":"davidkhala","ts":"2019-11-27T16:08:33.536Z"}
{"msg":"if there is some corner case like a big PR (over 500 lines), the first commit is library|functional change signed by author A, the second commit is correspondingly test covering this change while signed by collaborating author B. ","username":"davidkhala","ts":"2019-11-27T16:08:33.536Z"}
{"msg":"I can't find the channel where we were discussing jira linking. That is a paid feature and it would cost about $3500/month to enable. Sorry.","username":"rjones","ts":"2019-11-27T19:36:29.757Z"}
{"msg":"We have merged the change to the make the `/ci-run` comment active. Maintainers and the Pull Request author can comment `/ci-run` to retrigger failed CI. *Note:* It does retrigger all of the jobs, maintainers, next week after the holiday, I will get instructions out on how to create Azure DevOps accounts so you can trigger individual jobs rather than all of them. For those maintainers whose companies have Azure Active Directories, and your github email being one that is registered in Azure AD using SSO, this causes a minor headache in that Microsoft doesn't let you use your GitHub ID to login (which is required to make all of the functionality work), but there is a very, very simple work around. In the meantime, I ask that you not use the \"re-run\" option on the Checks tab, as it seems to have a flake in it that causes multiple jobs to register, but only one succeeds and thus prevents PR's from being merged. ","username":"BrettLogan","ts":"2019-11-27T23:00:58.029Z"}
{"msg":"@davidkhala i'd like to see incremental changes for fat PR, as you described. But what i was saying is actually about *how to address review comments*. IMO, they should be made as explicit commits as well, and squashed at very end when ready to merge.","username":"guoger","ts":"2019-11-28T06:52:09.505Z"}
{"msg":"(simply due to the fact that Github, unlike gerrit, cannot display diff between pushes)","username":"guoger","ts":"2019-11-28T06:52:53.446Z"}
{"msg":"@guoger I think for larger changes we'd encourage multiple commits and then use judgement whether to squash or not upon merge. For smaller commits just amend the commit. But this is my first time using GitHub at scale...","username":"dave.enyeart","ts":"2019-11-28T13:51:45.578Z"}
{"msg":"Besides making it easy for people shifting from Gerrit, one of my objectives of creating https://hyperledger-fabric.readthedocs.io/en/latest/github/github.html#updating-a-pull-request was to put our own spin on it... feel free to edit and add the multi-commit recommendation...","username":"dave.enyeart","ts":"2019-11-28T13:52:52.242Z"}
{"msg":"Besides making it easy for newcomers and people shifting from Gerrit, one of my objectives of creating https://hyperledger-fabric.readthedocs.io/en/latest/github/github.html#updating-a-pull-request was to put our own spin on it... feel free to edit and add the multi-commit recommendation...","username":"dave.enyeart","ts":"2019-11-28T13:52:52.242Z"}
{"msg":"for beginner or git GUI tool fans (indeed I am), the multi-commit is more natural since some of GUI tools don't allow us to do this. They consider  `force push`is a bit dangerous, causing the remote to lose commit\n\n","username":"davidkhala","ts":"2019-11-28T14:46:05.089Z"}
{"msg":"for beginner or git GUI tool fan (indeed I am), the multi-commit is more natural since some of GUI tools don't allow us to do this. They consider `force push`is a bit dangerous, causing the remote to lose commit\n\n","username":"davidkhala","ts":"2019-11-28T14:46:05.089Z"}
{"msg":"Beside squash, we could emphasis a bit about run `git push -f` in CLI. A funny story happened to me that I had squashed my edited commits into one, but forget adding force token to git push,. Boom.","username":"davidkhala","ts":"2019-11-28T14:50:40.263Z"}
{"msg":"just learned that you can click on `force-pushed` to view diff between old and new commits, just like gerrit: https://github.com/isaacs/github/issues/999#issuecomment-441028146","username":"guoger","ts":"2019-12-02T04:24:09.778Z"}
{"msg":"Nice! Didn't know this either.","username":"BrettLogan","ts":"2019-12-02T04:36:28.652Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppxqmkwGcZQnePXHj) i think we should emphasize on adding details to commit messages, *not only* PR message. Commit message goes to git history, which should be one click away from linked JIRA issue. Especially if no merge commit is created, in which case PR msg get lost.","username":"guoger","ts":"2019-12-02T06:07:27.717Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppxqmkwGcZQnePXHj","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppxqmkwGcZQnePXHj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppxqmkwGcZQnePXHj) i think we should emphasize on adding details to commit messages, *not only* PR message. Commit message goes to git history, which should be one click away from linked JIRA issue. Especially if no merge commit is created, in which case PR msg get lost. created https://github.com/hyperledger/fabric/pull/340","username":"guoger","ts":"2019-12-02T06:07:27.717Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppxqmkwGcZQnePXHj","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=ppxqmkwGcZQnePXHj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"santmukh","ts":"2019-12-02T14:36:30.026Z","type":"uj"}
{"msg":"Hi, I tried to create network with one static organization and 5 orderer based on Raft consensus. Peer is not able to connect to orderer. Attached is the file of errors.","username":"santmukh","ts":"2019-12-02T14:38:26.557Z"}
{"msg":"","username":"santmukh","ts":"2019-12-02T14:39:54.641Z","attachments":[{"type":"file","title":"Error-1.txt","title_link":"/file-upload/QYuiR7FTBbTbdeTCB/Error-1.txt","url":"/file-upload/QYuiR7FTBbTbdeTCB/Error-1.txt","remote":false,"fileId":"QYuiR7FTBbTbdeTCB","fileName":"Error-1.txt"}]}
{"msg":"Please move this question to #fabric or #fabric-questions ","username":"BrettLogan","ts":"2019-12-02T14:40:27.199Z"}
{"msg":"Sure","username":"santmukh","ts":"2019-12-02T14:46:35.153Z"}
{"msg":"Can I get meeting notes for this meeting? I am interested in the upgrades to BYFN.","username":"medikent","ts":"2019-12-02T23:38:15.495Z"}
{"msg":"I'd like to help with this. What work, if any, remains to be done?","username":"medikent","ts":"2019-12-02T23:41:49.519Z"}
{"msg":"@medikent here's links to contributor meeting recording, the doc workgroup where byfn updates are being discussed, and app developer workgroup where contract apis are being discussed","username":"dave.enyeart","ts":"2019-12-02T23:47:03.428Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Contributor+Meetings","username":"dave.enyeart","ts":"2019-12-02T23:47:07.333Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/2019+11+22+DWG+Agenda","username":"dave.enyeart","ts":"2019-12-02T23:47:30.031Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Meeting+Agendas%3A+Fabric+Application+Developer+Community+Call","username":"dave.enyeart","ts":"2019-12-02T23:48:12.738Z"}
{"msg":"https://wiki.hyperledger.org/display/fabric/Meeting+Agendas%3A+Fabric+Application+Developer+Community+Call - see nov 28th recording","username":"dave.enyeart","ts":"2019-12-02T23:48:12.738Z"}
{"msg":"thanks!","username":"medikent","ts":"2019-12-03T02:40:55.418Z"}
{"msg":"I didn't see the nov 28th recording on the community call list.","username":"medikent","ts":"2019-12-03T02:45:38.839Z"}
{"msg":"Hi;  I've just  started work on a RFC; though I like github I admit I find the default format for Markdown a little 'confining'.  We've done a lot with gh-pages in the past... so I wondered if we could use gh-pages to help with the RFCs.\n\nAs I'd forked the RFC repo anyway I thought a quick experiment was in order.  https://mbwhite.github.io/fabric-rfcs/  is the result\n\nVery simple navigation, with search!\nChanges are 1 simple config file, and an index.md file\nVery simple front matter needed on the markdown files.  \n\nThoughts welcome!","username":"mbwhite","ts":"2019-12-03T17:34:39.016Z"}
{"msg":"Hi;  I've just  started work on a RFC; though I like github I admit I find the default format for Markdown a little 'confining'.  We've done a lot with gh-pages in the past... so I wondered if we could use gh-pages to help with the RFCs.\n\nAs I'd forked the RFC repo anyway I thought a quick experiment was in order.  https://mbwhite.github.io/fabric-rfcs/  is the result\n\nVery simple navigation, with search!\nChanges are 1 simple config file, and an index.md file\nVery simple front matter needed on the markdown files.  \n\nThoughts welcome!  (FYI @cbf )","username":"mbwhite","ts":"2019-12-03T17:34:39.016Z"}
{"msg":"(oh click on RFCs on the left for a list of all the currently accept ones... think I need to rename that!)","username":"mbwhite","ts":"2019-12-03T17:35:09.553Z"}
{"msg":"The Hyperledger Fabric Developer (CHFD) exam is scheduled to launch in late Q1 2020 and we are now looking for Beta testers. Interested parties should complete the CHFD Beta Sign-up Form by January 15, 2020. The CHFD Beta is FREE for the first 20 who qualify and after that it will be available at the low discount of $100. \nhttps://training.linuxfoundation.org/certification/certified-hyperledger-fabric-developer/\nhttps://docs.google.com/forms/d/e/1FAIpQLScPxgBt6GvuTcrtjYCkWqW2D6o-2YrNd4vR--KXFGUw-5Ctsw/viewform","username":"Silona","ts":"2019-12-03T17:50:40.367Z"}
{"msg":"@mbwhite nice! I like it. Seems like a simple tweak. What do others think? @all ","username":"cbf","ts":"2019-12-04T14:05:53.862Z"}
{"msg":"Thanks for the thumbs=up... is it worth creating a PR for just the changes? can be reviewed and discussed as needed?","username":"mbwhite","ts":"2019-12-04T16:42:18.607Z"}
{"msg":"Many of these repos are missing tags, descriptions, etc. If you have `maintain` or `admin` permissions, you should be able to edit them directly. https://github.com/hyperledger?utf8=%E2%9C%93&q=fabric&type=&language=","username":"rjones","ts":"2019-12-04T19:02:05.722Z"}
{"msg":"@mbwhite yep, go ahead and PR, thanks!","username":"dave.enyeart","ts":"2019-12-04T19:19:08.190Z"}
{"msg":"well... the bad thing is if you amend *and* rebase in one push, it shows all files touched in those intermediate commits... :(","username":"guoger","ts":"2019-12-05T04:11:22.901Z"}
{"msg":"Yes, I ran into this very problem earlier today.  It's is a raw diff between the two commits, not what you would expect/want","username":"jyellick","ts":"2019-12-05T04:41:45.863Z"}
{"msg":"RFC for implementation of fabric programming model in the Go SDK:\nhttps://github.com/hyperledger/fabric-rfcs/pull/14","username":"andrew-coleman","ts":"2019-12-05T11:21:35.045Z"}
{"msg":"PR for the gh-pages updates. \nhttps://github.com/hyperledger/fabric-rfcs/pull/15","username":"mbwhite","ts":"2019-12-05T13:22:12.720Z"}
{"msg":"Does anybody see a compelling reason to release a fabric-ca v2.0 concurrent with fabric v2.0?","username":"dave.enyeart","ts":"2019-12-05T14:18:40.103Z"}
{"msg":"No important changes in fabric-ca master... and all bugs have been going into release-1.4 branch regardless","username":"dave.enyeart","ts":"2019-12-05T14:19:06.983Z"}
{"msg":"No important changes in fabric-ca master... and all bug fixes have been going into release-1.4 branch regardless","username":"dave.enyeart","ts":"2019-12-05T14:19:06.983Z"}
{"msg":"The only significant change I see in fabric-ca master that is not in release-1.4, is the shift to apline images","username":"dave.enyeart","ts":"2019-12-05T14:27:33.332Z"}
{"msg":"I have completed mirroring Gerrit to GitHub: https://github.com/hyperledger-gerrit-archive I'm interested in feedback if this is _good enough_.","username":"rjones","ts":"2019-12-05T18:40:06.663Z"}
{"msg":"@rjones I think we'd need some story for querying gerrit review history","username":"dave.enyeart","ts":"2019-12-05T19:37:11.934Z"}
{"msg":"Has joined the channel.","username":"icarrascol","ts":"2019-12-05T20:32:49.981Z","type":"uj"}
{"msg":"@dave.enyeart  One of community developer complained about fabric-ca 1.4 has dependency tagged with fabric 2.0-alpha. What is your idea?","username":"davidkhala","ts":"2019-12-06T03:41:05.729Z"}
{"msg":"@rjones we still can not track issues from github now for fabric projects now?","username":"wangdong","ts":"2019-12-06T09:04:37.141Z"}
{"msg":"gerrit stil the choice?","username":"wangdong","ts":"2019-12-06T09:06:43.311Z"}
{"msg":"Hi, can any one share the link of how to create RAFT over cluster VMs?","username":"santmukh","ts":"2019-12-06T11:36:58.127Z"}
{"msg":"Please provide a link to show what you are talking about","username":"dave.enyeart","ts":"2019-12-06T12:18:24.681Z"}
{"msg":"Issue tracking is still done in Jira https://jira.hyperledger.org/issues/?jql=project%20%3D%20FAB","username":"dave.enyeart","ts":"2019-12-06T12:20:50.100Z"}
{"msg":"OK","username":"wangdong","ts":"2019-12-06T23:15:56.648Z"}
{"msg":"https://github.com/btl5037/fabric-gerrit","username":"BrettLogan","ts":"2019-12-07T00:26:44.243Z"}
{"msg":"https://github.com/btl5037/fabric-gerrit/tree/master/fabric","username":"BrettLogan","ts":"2019-12-07T00:26:44.243Z"}
{"msg":"I wrote a small program to parse and convert the Gerrit server output into markdown","username":"BrettLogan","ts":"2019-12-07T00:27:20.527Z"}
{"msg":"I have to split up the directories into logic units of 100 each, but this is the gerrit server converted into markdown, wrote a small program to parse and convert it","username":"BrettLogan","ts":"2019-12-07T00:27:20.527Z"}
{"msg":"I have to split up the directories into logical units of 100 each, but this is the gerrit server converted into markdown, wrote a small program to parse and convert it","username":"BrettLogan","ts":"2019-12-07T00:27:20.527Z"}
{"msg":"The file names are the gerrit ID and you can search the repo using the standard search box at the top","username":"BrettLogan","ts":"2019-12-07T00:27:57.665Z"}
{"msg":"The file names are the gerrit ID, and they are sorted into directories of 100, where the directory names are the range of the gerrit ID's inside the directory. You can search the repo using the standard search box at the top","username":"BrettLogan","ts":"2019-12-07T00:27:57.665Z"}
{"msg":"Ran it against all projects, so everything should be there","username":"BrettLogan","ts":"2019-12-07T00:28:40.404Z"}
{"msg":"Need to do some clean up on it as well, to fix minor formatting errors when data isn't present as well, but you get the idea","username":"BrettLogan","ts":"2019-12-07T00:33:29.153Z"}
{"msg":"","username":"BrettLogan","ts":"2019-12-07T03:24:01.861Z","attachments":[{"type":"file","title":"Clipboard - December 6, 2019 10:23 PM","title_link":"/file-upload/5CRRAaxBnWQAdPKFw/Clipboard%20-%20December%206,%202019%2010:23%20PM","image_url":"/file-upload/5CRRAaxBnWQAdPKFw/Clipboard%20-%20December%206,%202019%2010:23%20PM","image_type":"image/png","image_size":39045,"url":"/file-upload/5CRRAaxBnWQAdPKFw/Clipboard%20-%20December%206,%202019%2010:23%20PM","remote":false,"fileId":"5CRRAaxBnWQAdPKFw","fileName":"Clipboard - December 6, 2019 10:23 PM"}]}
{"msg":"When you do a search, if you want to limit it to the raw JSON data (which is easier to read in the search than looking at markdown and html), you can select JSON on the left after searching","username":"BrettLogan","ts":"2019-12-07T03:24:44.859Z"}
{"msg":"@BrettLogan looking good! I'm able to search by FAB number which is probably the most common pattern. The only thing I see missing in the markdown is inline review comments.","username":"dave.enyeart","ts":"2019-12-07T13:45:29.759Z"}
{"msg":"I see the problem, there is a comment block in the PatchSet block I missed, I'll add that","username":"BrettLogan","ts":"2019-12-07T16:16:17.580Z"}
{"msg":"@dave.enyeart I was thinking this could go to a GitHub pages site off of the archive org - do you think that would be OK?","username":"rjones","ts":"2019-12-08T18:04:59.808Z"}
{"msg":"think so, i like the idea of capturing the old reviews in markdown","username":"dave.enyeart","ts":"2019-12-08T18:56:34.915Z"}
{"msg":"The data is there to point to the lines where the comments were. I was thinking an iframe or something to embed the diff at the place of a comment? I'm not sure how much work should be put into this","username":"rjones","ts":"2019-12-08T19:02:00.179Z"}
{"msg":"Did you look at Brett's archive with reviews in markdown?","username":"dave.enyeart","ts":"2019-12-08T19:21:09.038Z"}
{"msg":"Yes. I was suggesting the GitHub pages/iframe solution in public; it was one I was already discussing with @BrettLogan in private","username":"rjones","ts":"2019-12-08T19:23:46.455Z"}
{"msg":"https://github.com/btl5037/fabric-gerrit/blob/master/fabric/34246-34448/34350.md","username":"BrettLogan","ts":"2019-12-08T20:27:02.899Z"}
{"msg":"Newest revision has all comments pertaining to an individual patchset in it. The comments also have links to that commit in GitHub, so if you click it, it will take you to the exact commit and line that the comment was made on","username":"BrettLogan","ts":"2019-12-08T20:28:04.194Z"}
{"msg":"would you be willing to re-license this as Apache 2 so we could move this to the Hyperledger org?","username":"rjones","ts":"2019-12-08T21:30:35.277Z"}
{"msg":"Added the LICENSE file","username":"BrettLogan","ts":"2019-12-08T23:18:14.578Z"}
{"msg":"I saw a reference to ISC in one of the files","username":"rjones","ts":"2019-12-09T14:36:00.324Z"}
{"msg":"https://github.com/btl5037/fabric-gerrit/blob/459efb78810be514a60a9de6161f25013d354d21/package.json#L11","username":"rjones","ts":"2019-12-09T14:41:36.175Z"}
{"msg":"Let me address that","username":"BrettLogan","ts":"2019-12-09T15:22:34.625Z"}
{"msg":"Fixed, thanks Ry","username":"BrettLogan","ts":"2019-12-09T15:27:29.724Z"}
{"msg":"We are working on a v2.0.0-beta this week for announcement next week, remaining items that we are trying to close down by EOD Wednesday:\n- external chaincode as a server - @muralisr could you help with the docs? anything else must-do for beta in this area?\n- external chaincode documentation - @sykesm is working on docs.\n- state database cache for improved performance - confirmed cache improves performance, but looking into other v2.0 performance regressions\n- finalize upgrade doc - https://github.com/hyperledger/fabric/pull/299\n- finalize private data doc - https://github.com/hyperledger/fabric/pull/380\n- what's new for beta, release notes (Dave with doc team)\n- new sample test network to replace BYFN (Nik will present progress at contributor meeting on Wednesday) https://github.com/hyperledger/fabric-samples/pull/80 https://github.com/hyperledger/fabric/pull/369\n- any other high priorities for beta?","username":"dave.enyeart","ts":"2019-12-09T15:59:17.276Z"}
{"msg":"We are working on a v2.0.0-beta this week for announcement next week, remaining items that we are trying to close down by EOD Wednesday:\n- external chaincode as a server - @muralisr could you help with the docs? anything else must-do for beta in this area?\n- external chaincode documentation - @sykesm is working on docs.\n- state database cache for improved performance - confirmed cache improves performance for read-heavy workloads on couchdb, but looking into other v2.0 performance regressions\n- finalize upgrade doc - https://github.com/hyperledger/fabric/pull/299\n- finalize private data doc - https://github.com/hyperledger/fabric/pull/380\n- what's new for beta, release notes (Dave with doc team)\n- new sample test network to replace BYFN (Nik will present progress at contributor meeting on Wednesday) https://github.com/hyperledger/fabric-samples/pull/80 https://github.com/hyperledger/fabric/pull/369\n- any other high priorities for beta?","username":"dave.enyeart","ts":"2019-12-09T15:59:17.276Z"}
{"msg":"@BrettLogan do you want to set up a GitHub pages branch or no?","username":"rjones","ts":"2019-12-09T17:08:08.788Z"}
{"msg":"or I can just dump it into the other org and we can point people to it. @dave.enyeart is where it is good enough?","username":"rjones","ts":"2019-12-09T17:08:46.976Z"}
{"msg":"@dave.enyeart will get the docs by Thursday... also trying to get an example into fabric-samples. ","username":"muralisr","ts":"2019-12-09T17:48:17.043Z"}
{"msg":"I assume the sample can go in after the beta cut ?","username":"muralisr","ts":"2019-12-09T17:49:02.662Z"}
{"msg":"Reminder if you haven't submitted yet the Hyperledger Fabric Developer (CHFD) exam is scheduled to launch in late Q1 2020 and we are now looking for Beta testers. Interested parties should complete the CHFD Beta Sign-up Form by January 15, 2020. \nhttps://training.linuxfoundation.org/certification/certified-hyperledger-fabric-developer/\nhttps://docs.google.com/forms/d/e/1FAIpQLScPxgBt6GvuTcrtjYCkWqW2D6o-2YrNd4vR--KXFGUw-5Ctsw/viewform","username":"Silona","ts":"2019-12-09T21:47:15.044Z"}
{"msg":"Yes...samples and doc updates can be made at any time... we'd like to have at least an anchor for the docs pre-beta... we can always extend afterwards if needed.","username":"dave.enyeart","ts":"2019-12-10T04:05:43.755Z"}
{"msg":"i'm getting a bit lost about about the \"it\" and the \"other org\"... could you reset all of us on the details of the current proposal?","username":"dave.enyeart","ts":"2019-12-10T04:07:32.210Z"}
{"msg":"I propose to either copy or transfer @BrettLogan 's repo that has .md files to the https://github.com/hyperledger-gerrit-archive org; pointing at the repos in that org (which have all of the unmerged commits)","username":"rjones","ts":"2019-12-10T04:17:32.865Z"}
{"msg":"@BrettLogan has added pointers in the new .md files to point to unmerged commits by line.","username":"rjones","ts":"2019-12-10T04:18:07.905Z"}
{"msg":"@BrettLogan @rjones When looking at an abandoned change such as https://github.com/btl5037/fabric-gerrit/blob/17b9fd79fb8e318821bfdd071b1e586ee9459838/fabric/33151-33431/33257.md , how to navigate to the corresponding unmerged commit?","username":"dave.enyeart","ts":"2019-12-10T12:34:16.810Z"}
{"msg":"I see the links for inline comments to the unmerged commit, but is there a general link to the unmerged commit?","username":"dave.enyeart","ts":"2019-12-10T12:35:41.902Z"}
{"msg":"Under the Patchset, there is a field called, unmergedRevision","username":"BrettLogan","ts":"2019-12-10T13:04:35.311Z"}
{"msg":"cool, the repo has everything i was looking for then","username":"dave.enyeart","ts":"2019-12-10T13:34:22.231Z"}
{"msg":"@BrettLogan is there a trivial way to wrap lines? some of the comments leave the page to the right. If there isn't a completely trivial solution, don't spend any time on it","username":"rjones","ts":"2019-12-10T17:58:22.707Z"}
{"msg":"like the last comment on https://github.com/btl5037/fabric-gerrit/blob/17b9fd79fb8e318821bfdd071b1e586ee9459838/fabric/33151-33431/33257.md from jyellick, on my display I have to scroll to the right to see all of it","username":"rjones","ts":"2019-12-10T17:59:23.920Z"}
{"msg":"There isn't a trivial way. I wrapped the output in <pre> tags to preserve the formatting, but the commenter didn't hit return at all when typing the comment, so there is no `\\n` for it to format on, I suppose I could force wrap it on a character cound","username":"BrettLogan","ts":"2019-12-10T18:16:01.102Z"}
{"msg":"There isn't a trivial way. I wrapped the output in <pre> tags to preserve the formatting, but the commenter didn't hit return at all when typing the comment, so there is no `\\n` for it to format on, I suppose I could force wrap it on a character count","username":"BrettLogan","ts":"2019-12-10T18:16:01.102Z"}
{"msg":"OK. sounds like a _wrap_ to me lol","username":"rjones","ts":"2019-12-10T18:19:24.156Z"}
{"msg":"https://www.tutorialspoint.com/How-do-I-wrap-text-in-a-pre-tag-in-HTML","username":"BrettLogan","ts":"2019-12-10T18:26:53.014Z"}
{"msg":"So maybe it wont be as hard as I made it out to be lol","username":"BrettLogan","ts":"2019-12-10T18:27:01.669Z"}
{"msg":"This is a thread about the wonderful world of NPM","username":"rjones","ts":"2019-12-10T18:30:43.620Z"}
{"msg":"@mastersingh24 @BrettLogan @dave.enyeart please tell me exactly which packages at NPM I have broken and how I can resolve this.","username":"rjones","ts":"2019-12-10T18:31:18.555Z"}
{"msg":"When I look here: https://www.npmjs.com/settings/hyperledger/packages?page=0&perPage=100","username":"rjones","ts":"2019-12-10T18:33:59.184Z"}
{"msg":"I see some packages published as `@hyperledger` and some that are not.","username":"rjones","ts":"2019-12-10T18:34:20.084Z"}
{"msg":"If I understand, even the ones without the `@hyperledger` decoration are still published as `@hyperledger/something`, right?","username":"rjones","ts":"2019-12-10T18:35:41.688Z"}
{"msg":"like, when I go here: https://www.npmjs.com/package/fabric-protos","username":"rjones","ts":"2019-12-10T18:36:07.045Z"}
{"msg":"if I understand correctly, someone could name squat that package?","username":"rjones","ts":"2019-12-10T18:36:22.167Z"}
{"msg":"compared to https://www.npmjs.com/settings/hyperledger-lf/packages?page=0&perPage=100 ","username":"rjones","ts":"2019-12-10T18:38:07.341Z"}
{"msg":"@mbwhite @sstone1 ","username":"BrettLogan","ts":"2019-12-10T18:42:49.785Z"}
{"msg":"The @hyperledger prefix forms part of the unique name of the package...   @hyperledger/foo is different from just  foo.\n\nWhat a developer has to install is different","username":"mbwhite","ts":"2019-12-10T18:52:21.059Z"}
{"msg":"OK. To the point: what have I broken, and what do I need to do to unbreak things.","username":"rjones","ts":"2019-12-10T18:52:54.487Z"}
{"msg":"We're going to need changes to all the examples and samples, developer docs etc to reflect a name change","username":"mbwhite","ts":"2019-12-10T18:54:17.900Z"}
{"msg":"if this is about the two PRs I submitted, I do not care if those are rejected. I was trying to do the thing Burrow was doing.","username":"rjones","ts":"2019-12-10T18:57:00.309Z"}
{"msg":"if this is about a change I made to NPM recently when I was trying to sort out package ownership, I need to fix it.","username":"rjones","ts":"2019-12-10T18:57:23.744Z"}
{"msg":"It's purely the name in the PRs.. so long as the pipelines can still publish to NPM I'm not worried \n","username":"mbwhite","ts":"2019-12-10T19:00:03.606Z"}
{"msg":"OK so reject those PRs and this is over?","username":"rjones","ts":"2019-12-10T19:00:23.438Z"}
{"msg":"How those credentials are created managed etc is not an issue for me.. ","username":"mbwhite","ts":"2019-12-10T19:01:16.506Z"}
{"msg":"OK. I closed the two PRs.","username":"rjones","ts":"2019-12-10T19:01:31.891Z"}
{"msg":"All sorted 😀","username":"mbwhite","ts":"2019-12-10T19:01:52.559Z"}
{"msg":"My understanding was that I had broken things by trying to transfer them to the Hyperledger org in the UI.","username":"rjones","ts":"2019-12-10T19:01:53.197Z"}
{"msg":"thank goodness :)","username":"rjones","ts":"2019-12-10T19:01:59.536Z"}
{"msg":"thank you @mbwhite I was worried I had broken something in the past, not caused future problems :u6307: ","username":"rjones","ts":"2019-12-10T19:03:18.106Z"}
{"msg":"thank you @mbwhite I was worried I had broken something in the past, not caused future problems :)","username":"rjones","ts":"2019-12-10T19:03:18.106Z"}
{"msg":"Hi,\n\nI had mentioned a change in documentation (https://jira.hyperledger.org/browse/FAB-13176). But as I got to know Fabric has removed system chaincode plugins.\nThe thing is we have developed an application using System chaincode plugin and now it's almost ready to release. This is really important for all of us here. Could anyone please help us, if fabric stops system chaincode plugin then how should we plan our application's future releases. Will fabric have any alternative for system chaincode?\n","username":"Rajatsharma","ts":"2019-12-11T09:02:59.232Z"}
{"msg":"Hi Everyone,\n\nI had mentioned a change in documentation (https://jira.hyperledger.org/browse/FAB-13176). But as I got to know Fabric has removed system chaincode plugins.\nThe thing is we have developed an application using System chaincode plugin and now it's almost ready to release. This is really important for all of us here. Could anyone please help us, if fabric stops system chaincode plugin then how should we plan our application's future releases. Will fabric have any alternative for system chaincode?\n","username":"Rajatsharma","ts":"2019-12-11T09:02:59.232Z"}
{"msg":"@jyellick @mastersingh24 could you help me with this. This is really important for all of us here.","username":"Rajatsharma","ts":"2019-12-11T10:01:20.610Z"}
{"msg":"We removed plugins but not the concept of system chaincode.\n\nYou can still build your own peer binary  which includes your system chaincode.\n\nhttps://github.com/hyperledger/fabric/blob/master/internal/peer/node/start.go#L713","username":"mastersingh24","ts":"2019-12-11T10:09:18.624Z"}
{"msg":"So instead of plugins, I'll have to use it the way we have lsscc ,vscc ? ","username":"Rajatsharma","ts":"2019-12-11T10:29:53.039Z"}
{"msg":"correct ... which is how system chaincode worked originally","username":"mastersingh24","ts":"2019-12-11T10:30:36.089Z"}
{"msg":"Okay !! Thanks a lot !! \nWe all got a bit concerned on seeing that ticket. ","username":"Rajatsharma","ts":"2019-12-11T10:31:27.693Z"}
{"msg":"FYI - submitted a RFC PR for Ledger API (https://github.com/hyperledger/fabric-rfcs/pull/16)\n\nalso the RFC GH-Pages update PR (https://github.com/hyperledger/fabric-rfcs/pull/15)","username":"mbwhite","ts":"2019-12-11T11:05:12.148Z"}
{"msg":"Contributor meeting topics for today:\n\nv2.0.0-beta release update  \n- We are trying to get everything merged for beta by end of day today, so that we can verify release process in Azure by end of week and announce next week.  Closing down a few documentation tasks today including:\n- external chaincode https://github.com/hyperledger/fabric/pull/386 \n- upgrade  https://github.com/hyperledger/fabric/pull/299 \n- what's new and release notes - I'll open a PR based on https://docs.google.com/document/d/1-rFiQy9VhqzZCz7ZPwk4sysRbn8x7vPSCovWVUTZPm8/edit?usp=sharing\n- any other high priority PRs for beta? \n\nFabric Sample Test Network - Nik Gupta\nHigh level programming model for Go SDK - Andrew Coleman \nIntroduction to ledger-api - Matthew White ","username":"dave.enyeart","ts":"2019-12-11T14:01:04.860Z"}
{"msg":"@here meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2019-12-11T14:01:47.065Z"}
{"msg":"Has joined the channel.","username":"ravinayag","ts":"2019-12-11T14:06:54.837Z","type":"uj"}
{"msg":"We'll plan to skip the next meeting due to the holidays, next meeting therefore would be January 8.","username":"dave.enyeart","ts":"2019-12-11T14:52:21.100Z"}
{"msg":"@dave.enyeart  missed the meeting this AM (apologize..!). Will get a google doc on chaincode-as-service by this PM and ping @pandrejko @joe-alewine  ... @binhn and I are still working on it but here's the WIP https://docs.google.com/document/d/1WhJmbHt7JXNCStXWyM7eaTxUaA9PAlfHwVPI5RUnOAQ","username":"muralisr","ts":"2019-12-11T15:40:48.067Z"}
{"msg":"@jyellick ^^^","username":"muralisr","ts":"2019-12-11T15:41:21.843Z"}
{"msg":"It takes time to format and edit a doc to make it ready to be merged into the docs, so this PM seems way too late to me. @muralisr @dave.enyeart @pandrejko ","username":"joe-alewine","ts":"2019-12-11T15:45:45.981Z"}
{"msg":"ok","username":"muralisr","ts":"2019-12-11T15:46:10.715Z"}
{"msg":"Also we are already heads down trying to finish our other docs","username":"joe-alewine","ts":"2019-12-11T15:46:10.860Z"}
{"msg":"understood","username":"muralisr","ts":"2019-12-11T15:46:35.896Z"}
{"msg":"What's the best approach for RFC approval do we think?  Process says there is a period of discussion, then a final week.","username":"mbwhite","ts":"2019-12-11T15:48:53.703Z"}
{"msg":"@muralisr Can you grant me access to the google doc so I can take a look? patestibm@gmail.com","username":"pandrejko","ts":"2019-12-11T15:52:35.784Z"}
{"msg":"I've also requested access ^^^","username":"joe-alewine","ts":"2019-12-11T15:52:56.573Z"}
{"msg":"or consider putting it in the wiki please","username":"rjones","ts":"2019-12-11T15:53:13.553Z"}
{"msg":"of course... let me first grant access and I'll put it in wiki in a bit @rjones ","username":"muralisr","ts":"2019-12-11T15:53:55.176Z"}
{"msg":"@joe-alewine your email pl. ?","username":"muralisr","ts":"2019-12-11T15:54:10.845Z"}
{"msg":"shared @pandrejko ","username":"muralisr","ts":"2019-12-11T15:57:06.584Z"}
{"msg":"@muralisr jalewine@gmail.com","username":"joe-alewine","ts":"2019-12-11T15:57:43.088Z"}
{"msg":"on its way, Joe","username":"muralisr","ts":"2019-12-11T15:58:09.791Z"}
{"msg":"@here Please review What's New in v2.0 Beta doc: https://github.com/hyperledger/fabric/pull/395","username":"dave.enyeart","ts":"2019-12-11T18:37:20.484Z"}
{"msg":"Formatted version: https://github.com/hyperledger/fabric/blob/0d743efc7a428b643d80668dd6b3917304324c0d/docs/source/whatsnew.rst","username":"dave.enyeart","ts":"2019-12-11T18:39:02.338Z"}
{"msg":"Fabric doc builds are failing in Azure due to an Azure outage... I can force merge any PRs that are failing due to doc build","username":"dave.enyeart","ts":"2019-12-11T22:03:16.692Z"}
{"msg":"Please highlight here any PRs that you'd like reviewed for v2.0 beta","username":"dave.enyeart","ts":"2019-12-11T22:04:54.143Z"}
{"msg":"I'll start a list here...","username":"dave.enyeart","ts":"2019-12-11T22:05:03.517Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/299 upgrade doc","username":"dave.enyeart","ts":"2019-12-11T22:05:09.099Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/upgrade.html upgrade doc MERGED","username":"dave.enyeart","ts":"2019-12-11T22:05:09.099Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/395 what's new doc","username":"dave.enyeart","ts":"2019-12-11T22:05:22.691Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html what's new doc","username":"dave.enyeart","ts":"2019-12-11T22:05:22.691Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html what's new doc MERGED","username":"dave.enyeart","ts":"2019-12-11T22:05:22.691Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html what's new doc MERGED. Need to add links.","username":"dave.enyeart","ts":"2019-12-11T22:05:22.691Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/386 external launcher doc","username":"dave.enyeart","ts":"2019-12-11T22:05:42.181Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/399 chaincode as external service doc","username":"dave.enyeart","ts":"2019-12-11T22:05:58.348Z"}
{"msg":"what else is important for beta?","username":"dave.enyeart","ts":"2019-12-11T22:06:42.935Z"}
{"msg":"when will it show up here: https://github.com/hyperledger/fabric ?","username":"greg2git","ts":"2019-12-11T23:02:42.221Z"}
{"msg":"We hope to tag the release by end of week","username":"dave.enyeart","ts":"2019-12-12T01:47:06.875Z"}
{"msg":"We'll work through release process tomorrow, expect to tag v2.0.0-beta in the coming days.","username":"dave.enyeart","ts":"2019-12-12T01:47:06.875Z"}
{"msg":"@mastersingh24 , I know it's under development. But would you reccomend shifting to https://github.com/hyperledger/fabric-contract-api-go even in our system chaincode. Once v2.0.0 rolls out ?","username":"Rajatsharma","ts":"2019-12-12T08:01:38.327Z"}
{"msg":"on the system chaincode side, it would be up to you ... you can likley reduce some of the \"boilerplate\" code you use to dispatch functions via Invoke but other than that you are probably better off using the stright chaincode API as you'll have less depedencies moving forward","username":"mastersingh24","ts":"2019-12-12T08:39:35.660Z"}
{"msg":"on the system chaincode side, it would be up to you ... you can likely reduce some of the \"boilerplate\" code you use to dispatch functions via Invoke but other than that you are probably better off using the stright chaincode API as you'll have less depedencies moving forward","username":"mastersingh24","ts":"2019-12-12T08:39:35.660Z"}
{"msg":"@mastersingh24 thanks !!\nWe'll like to go ahead with chaincode API only. As we won't need to change the code too much.","username":"Rajatsharma","ts":"2019-12-12T08:42:26.210Z"}
{"msg":"@dave.enyeart Could we get this one in the beta if Nik addresses the comments? https://github.com/hyperledger/fabric/pull/369","username":"pandrejko","ts":"2019-12-12T14:51:21.055Z"}
{"msg":"Yes, that's desired.","username":"dave.enyeart","ts":"2019-12-12T14:52:28.319Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/403 v2.0.0-beta release notes for review ","username":"dave.enyeart","ts":"2019-12-12T15:40:22.644Z"}
{"msg":"@here  https://github.com/hyperledger/fabric/pull/403 v2.0.0-beta release notes for review ","username":"dave.enyeart","ts":"2019-12-12T15:40:22.644Z"}
{"msg":"Not as comprehensive as I'd like... ran out of time... we can add more details for the final release, but please review for any glaring omissions.","username":"dave.enyeart","ts":"2019-12-12T15:40:25.534Z"}
{"msg":"Besides a few final doc PRs coming in... does anybody else have a PR to merge before we start v2.0.0-beta release?","username":"dave.enyeart","ts":"2019-12-12T16:05:02.409Z"}
{"msg":"","username":"BrettLogan","ts":"2019-12-12T16:05:36.732Z","attachments":[{"type":"file","title":"Clipboard - December 12, 2019 11:05 AM","title_link":"/file-upload/RPFLbPjcN9EnKdCPn/Clipboard%20-%20December%2012,%202019%2011:05%20AM","image_url":"/file-upload/RPFLbPjcN9EnKdCPn/Clipboard%20-%20December%2012,%202019%2011:05%20AM","image_type":"image/png","image_size":3109,"url":"/file-upload/RPFLbPjcN9EnKdCPn/Clipboard%20-%20December%2012,%202019%2011:05%20AM","remote":false,"fileId":"RPFLbPjcN9EnKdCPn","fileName":"Clipboard - December 12, 2019 11:05 AM"}]}
{"msg":"For those viewing Dave's doc, there is a button in the top right corner of the diff page to convert it to Rich Format which will render it in markdown for you (it the button to the right of the angle brackets)","username":"BrettLogan","ts":"2019-12-12T16:06:15.296Z"}
{"msg":"features like these dull our programming skills... ","username":"yacovm","ts":"2019-12-12T16:07:41.119Z"}
{"msg":"features like these dull our programming skills...  what's next? HTML rendering? :rolling_eyes: ","username":"yacovm","ts":"2019-12-12T16:07:41.119Z"}
{"msg":"hmmm, I guess GitHub is better than Gerrit after all.","username":"dave.enyeart","ts":"2019-12-12T16:09:03.101Z"}
{"msg":"Nah, text-to-speech, it just reads you the diff","username":"BrettLogan","ts":"2019-12-12T16:09:13.673Z"}
{"msg":"https://github.com/hyperledger/fabric/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+404+405","username":"BrettLogan","ts":"2019-12-12T19:05:07.922Z"}
{"msg":"Two minor doc changes for fabric samples","username":"BrettLogan","ts":"2019-12-12T19:05:17.987Z"}
{"msg":"Two minor doc changes in fabric for byfn","username":"BrettLogan","ts":"2019-12-12T19:05:17.987Z"}
{"msg":"merged","username":"dave.enyeart","ts":"2019-12-12T19:21:25.906Z"}
{"msg":"MERGE FREEZE IN MASTER","username":"dave.enyeart","ts":"2019-12-12T19:21:56.628Z"}
{"msg":"We got all the docs merged, so.... MERGE FREEZE IN MASTER","username":"dave.enyeart","ts":"2019-12-12T19:21:56.628Z"}
{"msg":"v2.0.0-beta release PR: https://github.com/hyperledger/fabric/pull/406/files","username":"dave.enyeart","ts":"2019-12-12T19:22:05.260Z"}
{"msg":"@here i've done a lot of force merging today.... but would ask for a NACR on the final beta release PR above.","username":"dave.enyeart","ts":"2019-12-12T20:03:27.474Z"}
{"msg":"that is, if i've screwed the whole thing up today, i'd like to bring somebody else down with me","username":"dave.enyeart","ts":"2019-12-12T20:04:06.059Z"}
{"msg":"Thanks Chris!","username":"BrettLogan","ts":"2019-12-12T20:04:49.214Z"}
{"msg":"sucker","username":"dave.enyeart","ts":"2019-12-12T20:05:37.510Z"}
{"msg":"merged","username":"dave.enyeart","ts":"2019-12-12T20:05:37.510Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/409","username":"BrettLogan","ts":"2019-12-12T20:45:07.994Z"}
{"msg":"One more +2 so we can get a merge when this is done in CI","username":"BrettLogan","ts":"2019-12-12T20:45:23.805Z"}
{"msg":"bootstrap.sh won't work with the current release until this gets in","username":"BrettLogan","ts":"2019-12-12T20:46:11.016Z"}
{"msg":"merged","username":"dave.enyeart","ts":"2019-12-12T21:08:40.900Z"}
{"msg":"fabric v2.0.0-beta release all good, tagged","username":"dave.enyeart","ts":"2019-12-12T21:10:28.904Z"}
{"msg":"MERGE FREEZE LIFTED","username":"dave.enyeart","ts":"2019-12-12T21:10:46.264Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/411 Prepare for next release","username":"dave.enyeart","ts":"2019-12-12T21:11:09.306Z"}
{"msg":"This commit should be able to fix the flakiness of release-1.4 branch:\n```\ncommit 02d9adc86ff4a212a726baff3791a899482d8d78\nAuthor: Will Lahti <wtlahti@us.ibm.com>\nDate:   Tue Feb 5 11:51:52 2019 -0500\n\n    Deliver can send multiple blocks when seeking newest\n\n    When seeking just the newest block (i.e. starting and stopping\n    at newest), there is a timing bug that can lead to more than\n    one block being sent. This happens if a block is committed just\n    after Deliver acquires a ledger iterator. The logic for newest\n    would then set the stop number to the ledger height minus one,\n    which has changed since the iterator logic evaluated the ledger\n    height.\n\n    FAB-14063 #done\n\n    Change-Id: I34da107938980f2834def9ea6e3adac48c44dbaf\n    Signed-off-by: Will Lahti <wtlahti@us.ibm.com>\n```\ncreated https://github.com/hyperledger/fabric/pull/413 to cherry-pick. cc @wlahti ","username":"guoger","ts":"2019-12-13T04:03:04.617Z"}
{"msg":"a few more words on the flake - deliver server sends a `STATUS_SUCCESS` to client after sending blocks, which is flushed by client via an additional call to `Recv()`. However, if an extra block is sent by server, that flush call actually gets a `BLOCK`. When next request is sent by client on the same stream, it would get the leftover `STATUS` prior to the block expected, and fails the test","username":"guoger","ts":"2019-12-13T04:08:00.693Z"}
{"msg":"Great post for this year’s Mentorship Program. Thanks Hyperledger community! https://www.hyperledger.org/blog/2019/12/12/2019-summer-mentee-project-update-hyperledger-fabric-sdk-for-node-js-security-extension","username":"Hengming","ts":"2019-12-13T04:08:29.424Z"}
{"msg":"hopefully this cherry-pick would relieve the pain of rerunning 1.4 CI","username":"guoger","ts":"2019-12-13T04:08:33.204Z"}
{"msg":"https://github.com/hyperledger/fabric/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+391+413","username":"BrettLogan","ts":"2019-12-13T04:39:35.109Z"}
{"msg":"To piggy back off that, these are the two cherry-pick fixes to address flakiness in 1.4. Jay's cherry pick failed on something Jason's attempts to address. Hopefully between the two of them it helps stabilize it","username":"BrettLogan","ts":"2019-12-13T04:41:04.010Z"}
{"msg":"@guoger If you could review Jason's cherry-pick :)","username":"BrettLogan","ts":"2019-12-13T04:42:19.151Z"}
{"msg":"I think both of these will help, master has been quite a bit less flaky since Jason got that change in. There is still an open flake in common/cluster that we are hitting (it has 3 open Jira's, and 6 closed ones that were meant to address it over the last year) frequently enough to be annoying","username":"BrettLogan","ts":"2019-12-13T04:46:39.004Z"}
{"msg":"@BrettLogan thx! right, i think both of them are addressing top 2 frequent flakes on release-1.4. I'll put them into single PR so we make CI green again :P","username":"guoger","ts":"2019-12-13T05:15:34.874Z"}
{"msg":"actually... how can i do that? cherry-pick a commit to @jyellick 's PR","username":"guoger","ts":"2019-12-13T05:20:43.265Z"}
{"msg":"anyway, cherry-picked to my PR: https://github.com/hyperledger/fabric/pull/413","username":"guoger","ts":"2019-12-13T05:28:30.903Z"}
{"msg":"should I do `git push origin pull/xxx/head` ?","username":"guoger","ts":"2019-12-13T05:28:46.113Z"}
{"msg":"You would want to check Jasons out and then push to his branch","username":"BrettLogan","ts":"2019-12-13T05:29:18.454Z"}
{"msg":"if you have `hub` installed its `hub fetch` `hub checkout <jasons pr number>` `hub commit <your stuff>` `hub push`","username":"BrettLogan","ts":"2019-12-13T05:30:03.948Z"}
{"msg":"is you have `hub` installed its `hub fetch` `hub checkout <jasons pr number` `hub commit <your stuff` `hub push`","username":"BrettLogan","ts":"2019-12-13T05:30:03.948Z"}
{"msg":"if you have `hub` installed its `hub fetch` `hub checkout <jasons pr number` `hub commit <your stuff` `hub push`","username":"BrettLogan","ts":"2019-12-13T05:30:03.948Z"}
{"msg":"if you have `hub` installed its `hub fetch` `hub checkout <jasons pr number` `hub commit <your stuff>` `hub push`","username":"BrettLogan","ts":"2019-12-13T05:30:03.948Z"}
{"msg":"but i shouldn't have permission to push to the branch of Jason's repo, no?","username":"guoger","ts":"2019-12-13T05:30:33.326Z"}
{"msg":"You're a maintainer, by default they can, when you open a PR you have to explicitly disable that checkbox if you don't want maintainers to push to your branch","username":"BrettLogan","ts":"2019-12-13T05:31:21.658Z"}
{"msg":"","username":"BrettLogan","ts":"2019-12-13T05:32:41.257Z","attachments":[{"type":"file","title":"Clipboard - December 13, 2019 12:32 AM","title_link":"/file-upload/PqDgFfHeF4J47ECAP/Clipboard%20-%20December%2013,%202019%2012:32%20AM","image_url":"/file-upload/PqDgFfHeF4J47ECAP/Clipboard%20-%20December%2013,%202019%2012:32%20AM","image_type":"image/png","image_size":13213,"url":"/file-upload/PqDgFfHeF4J47ECAP/Clipboard%20-%20December%2013,%202019%2012:32%20AM","remote":false,"fileId":"PqDgFfHeF4J47ECAP","fileName":"Clipboard - December 13, 2019 12:32 AM"}]}
{"msg":"You have to use your judgement, but its not quite as big of a deal as it was in gerrit. Since you can't chain PR's together like you chained CR's in gerrit, your push on top of it won't affect child PR's (because there is no such thing)","username":"BrettLogan","ts":"2019-12-13T05:34:24.758Z"}
{"msg":"that works! thank you","username":"guoger","ts":"2019-12-13T05:35:48.040Z"}
{"msg":"closed mine","username":"guoger","ts":"2019-12-13T05:36:21.080Z"}
{"msg":"Awesome, thanks Jay, appreciate the help tracking this down. I am leaving on vacation next Tuesday, and the current state of CI flakes has me a little stressed","username":"BrettLogan","ts":"2019-12-13T05:37:44.003Z"}
{"msg":"Awesome, thanks Jay, appreciate the help tracking this down. I am leaving on vacation next Tuesday, and the current state of CI flakes has me a little worried","username":"BrettLogan","ts":"2019-12-13T05:37:44.003Z"}
{"msg":"sorry for bothering you at midnight :)","username":"guoger","ts":"2019-12-13T05:39:07.471Z"}
{"msg":"And you hit the only other flake 😂","username":"BrettLogan","ts":"2019-12-13T06:46:15.421Z"}
{"msg":":joy: i think that test is actually completed, but teardown was failed...","username":"guoger","ts":"2019-12-13T07:51:47.288Z"}
{"msg":"wait... it's actually the `peer chaincode instantiate` process that did not exit...","username":"guoger","ts":"2019-12-13T07:57:17.213Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/pulls there is no code owners for this repo, I'm not sure who that would be so I won't create one","username":"rjones","ts":"2019-12-13T16:42:45.971Z"}
{"msg":"Since nobody raised a need for `Create a merge commit`, we've removed that option to help keep commit history clean. You can now choose `Rebase and merge` or `Squash and merge` (although it is recommended that the contributor squash their own commits if there is not a good reason to keep them separate)","username":"dave.enyeart","ts":"2019-12-13T19:03:02.366Z"}
{"msg":"Since nobody raised a need for \"Create a merge commit\", we've removed that option to help keep commit history clean.","username":"dave.enyeart","ts":"2019-12-13T19:03:02.366Z"}
{"msg":"You can now choose \"Rebase and merge\" ","username":"dave.enyeart","ts":"2019-12-13T19:04:08.184Z"}
{"msg":"or \"Squash and merge\" (although it is recommended that the contributor squash their own commits if there is not a good reason to keep them separate)","username":"dave.enyeart","ts":"2019-12-13T19:04:11.344Z"}
{"msg":"did you roll this out over `*fabric*` or a subset?","username":"rjones","ts":"2019-12-13T19:10:57.205Z"}
{"msg":"yes, all `*fabric*` are consistent now","username":"dave.enyeart","ts":"2019-12-13T19:11:45.165Z"}
{"msg":"yes, all `*fabric*` are consistent now for these two merge options","username":"dave.enyeart","ts":"2019-12-13T19:11:45.165Z"}
{"msg":"did you enable linear history?","username":"rjones","ts":"2019-12-13T19:13:20.861Z"}
{"msg":"didnt touch that","username":"dave.enyeart","ts":"2019-12-13T19:13:31.312Z"}
{"msg":"cool.","username":"rjones","ts":"2019-12-13T19:13:55.254Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/391","username":"BrettLogan","ts":"2019-12-15T14:45:17.567Z"}
{"msg":"Can we get a look at this, its a cherry-pick of two flake fixes from master into 1.4","username":"BrettLogan","ts":"2019-12-15T14:45:40.319Z"}
{"msg":"Hello - we've this JIRA https://jira.hyperledger.org/browse/FABCJ-128 to provide a cross chaincode test suite; primary purpose to ensure consistency in function, and also act as a reference for any new chaincode implementations.\n\nWe'd like to create a new repo to hold this - as it's effectively a test tool.  With the RFCs process in place - what are the thoughts if this will need an RFC - or we're happy to request a new repo on fabric-ci?","username":"mbwhite","ts":"2019-12-16T08:50:20.811Z"}
{"msg":"@mbwhite fabric-test is the repository that has cross-repo tests... why not put it in there?","username":"dave.enyeart","ts":"2019-12-16T14:58:41.245Z"}
{"msg":"I wouldn't think an RFC is needed for tests...","username":"dave.enyeart","ts":"2019-12-16T14:59:01.123Z"}
{"msg":"We'll check into fabric-test thanks.","username":"mbwhite","ts":"2019-12-16T15:02:51.979Z"}
{"msg":"So despite the deprecation of Kafka and Solo support, the ordering service concept doc still mentions them: https://hyperledger-fabric.readthedocs.io/en/master/orderer/ordering_service.html\n\nShould we remove references to Solo and Kafka in master (2.0 beta, in other words) or mention them with the caveat they've been deprecated?","username":"joe-alewine","ts":"2019-12-16T15:18:20.316Z"}
{"msg":"@joe-alewine I'd keep them in for now, with a mention that they've been deprecated and that Raft is recommended.","username":"dave.enyeart","ts":"2019-12-16T16:22:36.502Z"}
{"msg":"@here Here's a draft of the v2.0 Beta announcement that I'll send out... let me know in the next couple hours if you'd like any edits...","username":"dave.enyeart","ts":"2019-12-16T16:23:18.927Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the Fabric v2.0 Beta release.\n\nSince the time of the v2.0 Alpha release, the scope of the Fabric v2.0 release has changed. While decentralized chaincode governance is still a primary release theme, the native token functionality has been removed so that token features can be further evaluated for a potential future release. The ability to build and launch chaincode on the technology platform of your choice has been added, as well as private data enhancements and performance improvements. There is also a new test network to try out, and instructions for how to upgrade to the eventual v2.0 release.\n\nSee details of these new features in the What's New documentation:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\nIn addition to core Fabric, the Fabric programming model SDKs have also been released for this beta, with the following versions; gateway-java: 2.0.0-SNAPSHOT and node-sdk: 2.0.0-beta.2. They both contain a simplified wallet structure, providing a pluggable persistent data format which is portable across the different language implementations. Finally, the java and node contract APIs have been updated to support LTS releases of Java 11 and Node.js 12, respectively. \n\nPlease give the v2.0 Beta a try and let us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n \nWe expect to release version 2.0 early in 2020 after Beta feedback is evaluated. Note that the v1.4.x long term support release will continue to receive maintenance even after v2.0 is released so that current users will have time to evaluate their eventual upgrade to v2.0. \n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-12-16T16:23:23.997Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the Fabric v2.0 Beta release.\n\nSince the time of the v2.0 Alpha release, the scope of the Fabric v2.0 release has changed. While decentralized chaincode governance is still a primary release theme, the native token functionality has been removed so that token features can be further evaluated for a potential future release. The ability to build and launch chaincode on the technology platform of your choice has been added, as well as private data enhancements and performance improvements. There is also a new test network to try out, and instructions for how to upgrade to the eventual v2.0 release.\n\nSee details of these new features and links to the release notes in the What's New documentation:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\nIn addition to core Fabric, the Fabric programming model SDKs have also been released for this beta, with the following versions; gateway-java: 2.0.0-SNAPSHOT and node-sdk: 2.0.0-beta.2. They both contain a simplified wallet structure, providing a pluggable persistent data format which is portable across the different language implementations. Finally, the java and node contract APIs have been updated to support LTS releases of Java 11 and Node.js 12, respectively. \n\nPlease give the v2.0 Beta a try and let us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n \nWe expect to release version 2.0 early in 2020 after Beta feedback is evaluated. Note that the v1.4.x long term support release will continue to receive maintenance even after v2.0 is released so that current users will have time to evaluate their eventual upgrade to v2.0. \n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-12-16T16:23:23.997Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the Fabric v2.0 Beta release.\n\nInitially introduced in the Fabric v2.0 Alpha, the new decentralized chaincode governance remains a primary release theme. The Beta brings a few other significant additions to Fabric -  the ability to build and launch chaincode on the technology platform of your choice has been added, as well as private data enhancements and performance improvements. There is also a new test network to try out in the fabric-samples repository, and instructions for how to upgrade to the eventual v2.0 release. Note that the native token prototype that was available in the v2.0 Alpha release has been removed so that token features can be further evaluated for a potential future release.\n\nSee details of these new features and links to the release notes in the What's New documentation:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\nIn addition to core Fabric, the Fabric programming model SDKs have also been released for this beta, with the following versions; gateway-java: 2.0.0-SNAPSHOT and node-sdk: 2.0.0-beta.2. They both contain a simplified wallet structure, providing a pluggable persistent data format which is portable across the different language implementations. Finally, the java and node contract APIs have been updated to support LTS releases of Java 11 and Node.js 12, respectively. \n\nPlease give the v2.0 Beta a try and let us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n \nWe expect to release version 2.0 early in 2020 after Beta feedback is evaluated. Note that the v1.4.x long term support release will continue to receive maintenance even after v2.0 is released so that current users will have time to evaluate their eventual upgrade to v2.0. \n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-12-16T16:23:23.997Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the Fabric v2.0 Beta release.\n\n\nInitially introduced in the Fabric v2.0 Alpha, the new decentralized chaincode governance remains a primary release theme. The Beta brings a few other significant additions to Fabric -  the ability to build and launch chaincode on the technology platform of your choice has been added, as well as private data enhancements and performance improvements. There is also a new test network to try out in the fabric-samples repository, and instructions for how to upgrade to the eventual v2.0 release. Note that the native token prototype that was available in the v2.0 Alpha release has been removed so that token features can be further evaluated for a potential future release.\n\nSee details of these new features and links to the release notes in the What's New documentation:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\nIn addition to core Fabric, the Fabric programming model SDKs have also been released for this beta, with the following versions; gateway-java: 2.0.0-SNAPSHOT and node-sdk: 2.0.0-beta.2. They both contain a simplified wallet structure, providing a pluggable persistent data format which is portable across the different language implementations. Finally, the java and node contract APIs have been updated to support LTS releases of Java 11 and Node.js 12, respectively. \n\nPlease give the v2.0 Beta a try and let us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n \nWe expect to release version 2.0 early in 2020 after Beta feedback is evaluated. Note that the v1.4.x long term support release will continue to receive maintenance even after v2.0 is released so that current users will have time to evaluate their eventual upgrade to v2.0. \n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-12-16T16:23:23.997Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the Fabric v2.0 Beta release.\n\n\nInitially introduced in the Fabric v2.0 Alpha, the new decentralized chaincode governance remains a primary release theme. The Beta also brings a few other significant additions to Fabric -  the ability to build and launch chaincode on the technology platform of your choice has been added, as well as private data enhancements and performance improvements. There is also a new test network to try out in the fabric-samples repository, and instructions for how to upgrade to the eventual v2.0 release. Note that the native token prototype that was available in the v2.0 Alpha release has been removed so that token features can be further evaluated for a potential future release.\n\nSee details of these new features and links to the release notes in the What's New documentation:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\nIn addition to core Fabric, the Fabric programming model SDKs have also been released for this beta, with the following versions; gateway-java: 2.0.0-SNAPSHOT and node-sdk: 2.0.0-beta.2. They both contain a simplified wallet structure, providing a pluggable persistent data format which is portable across the different language implementations. Finally, the java and node contract APIs have been updated to support LTS releases of Java 11 and Node.js 12, respectively. \n\nPlease give the v2.0 Beta a try and let us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n \nWe expect to release version 2.0 early in 2020 after Beta feedback is evaluated. Note that the v1.4.x long term support release will continue to receive maintenance even after v2.0 is released so that current users will have time to evaluate their eventual upgrade to v2.0. \n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-12-16T16:23:23.997Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the Fabric v2.0 Beta release.\n\n\nInitially introduced in the Fabric v2.0 Alpha, the new decentralized chaincode governance remains a primary release theme. The Beta also brings a few other significant additions to Fabric -  the ability to build and launch chaincode on the technology platform of your choice has been added, as well as private data enhancements and performance improvements. There is also a new test network to try out in the fabric-samples repository, and instructions for how to upgrade to the eventual v2.0 release. Note that the native token prototype that was available in the v2.0 Alpha release has been removed so that token features can be further evaluated for a potential future release.\n\nSee details of these new features and links to the release notes in the What's New documentation:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\nIn addition to core Fabric, the Fabric programming model SDKs have also been released for this beta, with the following versions; gateway-java: 2.0.0-SNAPSHOT and node-sdk: 2.0.0-beta.2. They both contain a simplified wallet structure, providing a pluggable persistent data format which is portable across the different language implementations. Finally, the java and node contract APIs have been updated to support LTS releases of Java 11 and Node.js 12, respectively. \n\nPlease give the v2.0 Beta a try and let us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n \nWe expect to release version 2.0 early in 2020 after Beta feedback is evaluated. Note that the v1.4.x long term support release will continue to receive maintenance and bug fixes even after v2.0 is released so that current users will have time to evaluate their eventual upgrade to v2.0. \n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-12-16T16:23:23.997Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of the Fabric v2.0 Beta release!\n\n\nInitially introduced in the Fabric v2.0 Alpha, the new decentralized chaincode governance remains a primary release theme. The Beta also brings a few other significant additions to Fabric -  the ability to build and launch chaincode on the technology platform of your choice has been added, as well as private data enhancements and performance improvements. There is also a new test network to try out in the fabric-samples repository, and instructions for how to upgrade to the eventual v2.0 release. Note that the native token prototype that was available in the v2.0 Alpha release has been removed so that token features can be further evaluated for a potential future release.\n\nSee details of these new features and links to the release notes in the What's New documentation:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/whatsnew.html\n\nDownload instructions:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\nIn addition to core Fabric, the Fabric programming model SDKs have also been released for this beta, with the following versions; gateway-java: 2.0.0-SNAPSHOT and node-sdk: 2.0.0-beta.2. They both contain a simplified wallet structure, providing a pluggable persistent data format which is portable across the different language implementations. Finally, the java and node contract APIs have been updated to support LTS releases of Java 11 and Node.js 12, respectively. \n\nPlease give the v2.0 Beta a try and let us know what you think! Contact us via this Hyperledger Fabric mailing list ( https://lists.hyperledger.org/g/fabric ) or RocketChat ( https://chat.hyperledger.org/ ) should you have any feedback or questions. We will also be watching for any issues reported to Hyperledger JIRA ( https://jira.hyperledger.org/ ).\n \nWe expect to release version 2.0 early in 2020 after Beta feedback is evaluated. Note that the v1.4.x long term support release will continue to receive maintenance and bug fixes even after v2.0 is released so that current users will have time to evaluate their eventual upgrade to v2.0. \n\n\nThank you,\n\nThe Hyperledger Fabric maintainers```","username":"dave.enyeart","ts":"2019-12-16T16:23:23.997Z"}
{"msg":"Has joined the channel.","username":"tsharris","ts":"2019-12-16T16:27:49.526Z","type":"uj"}
{"msg":"I'm ok with this ... although I think it would be better to move the token stuff to somewhere later in the statement ... you want to kick things off with what we have not what we don't","username":"mastersingh24","ts":"2019-12-16T16:42:57.567Z"}
{"msg":"makes sense, edited above","username":"dave.enyeart","ts":"2019-12-16T16:55:40.810Z"}
{"msg":"Also  ` While decentralized chaincode governance is still a primary release theme, the native token functionality has been removed so that token features can be further evaluated for a potential future release.`  seems tying token and decentralized chaincode governance together ... not sure if that was intended","username":"muralisr","ts":"2019-12-16T16:55:41.085Z"}
{"msg":"addressed","username":"dave.enyeart","ts":"2019-12-16T16:55:50.860Z"}
{"msg":"@dave.enyeart Ok pushed here: https://github.com/hyperledger/fabric/pull/425/","username":"joe-alewine","ts":"2019-12-16T17:33:53.857Z"}
{"msg":"Release announcement sent!","username":"dave.enyeart","ts":"2019-12-16T19:47:18.489Z"}
{"msg":"Release announcement sent!  https://lists.hyperledger.org/g/fabric/message/7427","username":"dave.enyeart","ts":"2019-12-16T19:47:18.489Z"}
{"msg":"💯","username":"mbwhite","ts":"2019-12-16T19:48:46.056Z"}
{"msg":"posted in #fabric-orderer-dev but would appreciate some inputs from others as well:\nhttps://chat.hyperledger.org/channel/fabric-orderer-dev?msg=mrMYZ6G3sXEiLGJMF","username":"guoger","ts":"2019-12-17T02:23:48.112Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=mrMYZ6G3sXEiLGJMF","url":"https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=mrMYZ6G3sXEiLGJMF","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi Team, I am not able to find balance-transfer app in fabric-samples of v2.0 beta. Is it removed ?\nIs there is any other sample app which explains the use of new features (specifically interested in chaincode lifecycle feature) using node sdk?","username":"HLFPOC","ts":"2019-12-17T05:01:55.476Z"}
{"msg":"@guoger I added some debug statements around the `Eventually` which lead me to the problem. The issue ended up being we are deploying the 3 chaincodes in parallel which is stressing the cpu and essentially deadlocking the process. I was able to recreate the problem by deploying it to a VM with 2CPU/4GB. I pushed a PR to change deploying the chaincode to a serial process instead. Doing it serially only adds about 15 seconds to the test, presumably because the processor isn't under such heavy load","username":"BrettLogan","ts":"2019-12-17T06:21:40.044Z"}
{"msg":"@guoger I added some debug statements around the eventually which let me to the problem. The issue ended up being we are deploying the 3 chaincodes in parallel which is stressing the cpu and essentially deadlocking the process. I was able to recreate the problem by deploying it to a VM with 2CPU/4GB. I pushed a change to change deploying the chaincode to a serial process instead. Doing it serially only adds about 15 seconds to the test, presumably because the processor isn't under heavy load","username":"BrettLogan","ts":"2019-12-17T06:21:40.044Z"}
{"msg":"@guoger I added some debug statements around the eventually which lead me to the problem. The issue ended up being we are deploying the 3 chaincodes in parallel which is stressing the cpu and essentially deadlocking the process. I was able to recreate the problem by deploying it to a VM with 2CPU/4GB. I pushed a change to change deploying the chaincode to a serial process instead. Doing it serially only adds about 15 seconds to the test, presumably because the processor isn't under heavy load","username":"BrettLogan","ts":"2019-12-17T06:21:40.044Z"}
{"msg":"@guoger I added some debug statements around the eventually which lead me to the problem. The issue ended up being we are deploying the 3 chaincodes in parallel which is stressing the cpu and essentially deadlocking the process. I was able to recreate the problem by deploying it to a VM with 2CPU/4GB. I pushed a PR to change deploying the chaincode to a serial process instead. Doing it serially only adds about 15 seconds to the test, presumably because the processor isn't under heavy load","username":"BrettLogan","ts":"2019-12-17T06:21:40.044Z"}
{"msg":"@guoger I added some debug statements around the eventually which lead me to the problem. The issue ended up being we are deploying the 3 chaincodes in parallel which is stressing the cpu and essentially deadlocking the process. I was able to recreate the problem by deploying it to a VM with 2CPU/4GB. I pushed a PR to change deploying the chaincode to a serial process instead. Doing it serially only adds about 15 seconds to the test, presumably because the processor isn't under such heavy load","username":"BrettLogan","ts":"2019-12-17T06:21:40.044Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/426","username":"BrettLogan","ts":"2019-12-17T06:21:56.046Z"}
{"msg":"looks reasonable, though i wonder why did CI seem to complete tests successfully","username":"guoger","ts":"2019-12-17T06:33:41.146Z"}
{"msg":"I think its because we defer the `GinkgoRecover()` which tells ginkgo the test fails, but allow it to succeed. We shouldn't have used it as we use the --keepGoing flag","username":"BrettLogan","ts":"2019-12-17T06:36:01.535Z"}
{"msg":"I think its because we defer the `GinkgoRecover()` which tells ginkgo the test fails, but allow it to \"succeed\". We shouldn't have used it as we use the --keepGoing flag","username":"BrettLogan","ts":"2019-12-17T06:36:01.535Z"}
{"msg":"I think its because we defer the `GinkgoRecover()`. It looks like a collision between using GinkgoRecover and the fact we use the `--keepGoing` flag when we invoke Ginkgo","username":"BrettLogan","ts":"2019-12-17T06:36:01.535Z"}
{"msg":"I think its because we defer the `GinkgoRecover()` which tells ginkgo the test fails, but allow it to \"succeed\". It looks like a collision between using GinkgoRecover and the fact we use the `--keepGoing` flag when we invoke Ginkgo","username":"BrettLogan","ts":"2019-12-17T06:36:01.535Z"}
{"msg":"So even on a true failure, we do a ginkgorecover","username":"BrettLogan","ts":"2019-12-17T06:36:36.734Z"}
{"msg":"i was expecting the test to explicitly fail when we assert on the invocations on chiancodes?","username":"guoger","ts":"2019-12-17T06:38:51.556Z"}
{"msg":"that test seemed to run till the last step (`deployChaincode` returned), however we did have a `wg.Wait()`. This was the point that puzzled me..","username":"guoger","ts":"2019-12-17T06:40:56.081Z"}
{"msg":"(not saying your solution doesn't work :P obviously you reprodeced it and solved it there), just trying to understand it better","username":"guoger","ts":"2019-12-17T06:42:06.245Z"}
{"msg":"I see what you're saying now, I missed the part that the test actually ran to full completion","username":"BrettLogan","ts":"2019-12-17T06:58:03.015Z"}
{"msg":"And of course, the integrations passed on the first try, but I hit the one outstanding Unit test flake we have :grin: ","username":"BrettLogan","ts":"2019-12-17T06:59:29.070Z"}
{"msg":"And of course, the integrations finally passed, but I hit the one outstanding Unit test flake we have lol","username":"BrettLogan","ts":"2019-12-17T06:59:29.070Z"}
{"msg":"And of course, the integrations finally passed, but I hit the one outstanding Unit test flake we have :grin: ","username":"BrettLogan","ts":"2019-12-17T06:59:29.070Z"}
{"msg":"actually, is history ci output visible somewhere?","username":"guoger","ts":"2019-12-17T07:14:26.945Z"}
{"msg":"It is. If you go to your run, you can see previous attempts","username":"BrettLogan","ts":"2019-12-17T07:15:15.718Z"}
{"msg":"https://dev.azure.com/Hyperledger/Fabric/_build/results?buildId=3847&view=logs&jobId=4c66e10c-0fd8-5a92-dd62-668e591d0491","username":"BrettLogan","ts":"2019-12-17T07:16:17.833Z"}
{"msg":"On this page, scroll down in the left tab to \"Previous Attempts\"","username":"BrettLogan","ts":"2019-12-17T07:16:35.708Z"}
{"msg":"gotcha, thx!","username":"guoger","ts":"2019-12-17T07:17:56.515Z"}
{"msg":"yes,, its removed. You can refer commercial sample app now","username":"knagware9","ts":"2019-12-17T09:13:55.998Z"}
{"msg":"Thanks, but I am not able to see any commands related to chaincode lifecycle in this sample. Is it updated as per v2.0 beta changes ? ","username":"HLFPOC","ts":"2019-12-17T10:27:13.492Z"}
{"msg":"In 2.0 Beta test-network has cli node ? I cant see any CLI container running & even not in docker-compose file. Read the docs have instruction to use cli to commuicate with peer node using cli. Can someone please confirm about this","username":"knagware9","ts":"2019-12-17T11:31:01.927Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#install-define-chaincode","username":"knagware9","ts":"2019-12-17T11:33:39.624Z"}
{"msg":"@BrettLogan In jenkins on LF VMs it always worked fine for a year. Is AZP running on RPi or something ","username":"yacovm","ts":"2019-12-17T11:33:40.549Z"}
{"msg":"?","username":"yacovm","ts":"2019-12-17T11:33:50.200Z"}
{"msg":"https://hyperledger-fabric.readthedocs.io/en/latest/commands/peerlifecycle.html","username":"knagware9","ts":"2019-12-17T11:34:04.607Z"}
{"msg":"I mean its running on a system with 2CPU/8GB. I had absolutely no problem invoking the problem on an AWS VM of the same specs (using dedicated hardware, not shared). Our old hardwaree was 4cores/16GB (which we will get back to next year when they introduce scale sets). But to be fair, we did hit this problem, there are at least 3 Jiras that were opened for this test in the last year","username":"BrettLogan","ts":"2019-12-17T15:01:39.497Z"}
{"msg":"I'm sure we just did what we always did, ignore it and type `Run UnitTest`, now people are being forced to actually look at things and solve them because of the hardware, and the fact its not as simple to retrigger runs","username":"BrettLogan","ts":"2019-12-17T15:03:33.696Z"}
{"msg":"I'm sure we hit the problem more frequently, we just did what we always did, ignore it and type `Run UnitTest`, now people are being forced to actually look at things and solve them because of the hardware, and the fact its not as simple to retrigger runs","username":"BrettLogan","ts":"2019-12-17T15:03:33.696Z"}
{"msg":"@BrettLogan , Isn't 2 cores with  8GB of RAM a bit low? :/ ","username":"yacovm","ts":"2019-12-17T15:45:46.013Z"}
{"msg":"Imo, yes, which is why tests take a little longer than in Jenkins, but we were able to get around that by splitting the tests. That is the only system available to us right now, and it's the only option for dynamic nodes, otherwise we would have to use static nodes and maintain them. Early next year they are adding support for Azure Scale Sets to bring your own dynamic nodes. So we will be able to use that then to choose our own size nodes. @yacovm ","username":"BrettLogan","ts":"2019-12-17T15:59:31.251Z"}
{"msg":"cool","username":"yacovm","ts":"2019-12-17T15:59:54.339Z"}
{"msg":"https://github.com/microsoft/azure-pipelines-agent/blob/master/docs/design/byos.md","username":"BrettLogan","ts":"2019-12-17T16:01:27.971Z"}
{"msg":"but these commands are executed through CLI, do we have any sample app which executes chaincode lifecycle commands using Node SDK? @BrettLogan ","username":"HLFPOC","ts":"2019-12-17T16:09:55.930Z"}
{"msg":"The new lifecycle isnt supported yet in the SDKs, watch the mailing list for an announcement regarding it's availability","username":"BrettLogan","ts":"2019-12-17T16:14:33.912Z"}
{"msg":"They are working to make an announcement about it","username":"BrettLogan","ts":"2019-12-17T16:14:58.099Z"}
{"msg":"Sure, thanks for informing","username":"HLFPOC","ts":"2019-12-17T16:15:15.597Z"}
{"msg":"Regarding support for the new chaincode lifecycle and the java/node SDKs: For node, we are in the process of separating out admin capabilities, into a new fabric-admin package, which will support the new chaincode lifecycle feature. We’re tracking this work under https://jira.hyperledger.org/browse/FABN-1416. The 2.0 java-sdk supports the new chaincode lifecycle feature in the Fabric v2.0-beta.","username":"heatherp","ts":"2019-12-17T16:27:26.777Z"}
{"msg":"Has joined the channel.","username":"negupta","ts":"2019-12-17T21:23:51.204Z","type":"uj"}
{"msg":"Hey @knagware9 You can use the peer CLI to communicate with the peer without the tools container. You can see more info here: https://hyperledger-fabric.readthedocs.io/en/latest/test_network.html#interacting-with-the-network","username":"negupta","ts":"2019-12-17T21:23:53.522Z"}
{"msg":"I am going to be out on vacation starting today until January 6th. I will be in Russia, so I will not be entirely glued to RocketChat like I normally am all hours of the night. I think we’ve done all we can to stabilize CI and flakes. I ask that any flakes you encounter moving forward, please start opening Jira’s again so we can triage and get the right resources on it. I will finish the Nexus to Artifactory migration in the coming days, so maintainers, please look out for those changes. If your builds are failing, please comment `/ci-run` to retrigger the builds. Let’s get through the holidays and then look forward to fine-tuning and polishing CI on the other side of the new year.","username":"BrettLogan","ts":"2019-12-18T05:51:18.969Z"}
{"msg":"okay let me try","username":"knagware9","ts":"2019-12-18T06:16:38.464Z"}
{"msg":"Has joined the channel.","username":"atirekg","ts":"2019-12-18T10:23:13.665Z","type":"uj"}
{"msg":"Has joined the channel.","username":"andreevym","ts":"2019-12-25T17:41:17.563Z","type":"uj"}
{"msg":"Has joined the channel.","username":"konda.kalyan","ts":"2019-12-26T06:00:18.807Z","type":"uj"}
{"msg":"I wanted to use discovery service on a multi-host network(which we're using for production).  But I wanted to run the node service in such a way, that even if I don't run the service in the same docker swarm, all the request go through. So I had looked the way people normally use  fabric discovery :\n```\nawait channel.initialize({discover:true, asLocalhost:true})\n```\nI can't use it this as `asLocalhost`, replaces the hostname with localhost. Moreover, even if the port for peer is not mapped at 7051 the code does not work. \nSo ideally I was looking for a way to map the returning hostname and port, with one in configuration. I looked inside the code https://github.com/hyperledger/fabric-sdk-node/blob/v1.4.4/fabric-client/lib/Channel.js#L253, I found out that if we're using service discovery there's no flag or a way to change the url mapping. So using fabric's service discovery with multi-host network is not possible ?  ","username":"Rajatsharma","ts":"2020-01-02T17:48:27.090Z"}
{"msg":"@Rajatsharma This channel is for Fabric maintainer discussion. Please direct usage questions to #fabric-questions or SDK specific questions to #fabric-sdk-node , or use fabric mailing list.","username":"dave.enyeart","ts":"2020-01-02T19:08:28.232Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/fabric-maintainers?msg=7tGX3JjeFu4E4mAAt) @ I thought this was really important. That's why I had messaged this here. \nAnyways I've removed this. Thanks for your suggestion !! ","username":"Rajatsharma","ts":"2020-01-02T19:16:01.757Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=7tGX3JjeFu4E4mAAt","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=7tGX3JjeFu4E4mAAt","remote":true,"fileId":null,"fileName":null}]}
{"msg":"the channel #fabric-questions would be better for this discussion","username":"rjones","ts":"2020-01-02T19:39:18.224Z"}
{"msg":"do we plan to auto close inactive PRs after certain period of time? (or it's already the case?)","username":"guoger","ts":"2020-01-06T03:28:25.226Z"}
{"msg":"During migration I think Stalebot was disabled, so it's a question of if we should reenable it and what settings do we want to use (how long until a stale notification is sent, and how long until autoclose)","username":"BrettLogan","ts":"2020-01-06T04:27:12.182Z"}
{"msg":"We have agreed to and documented an aging policy: https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#pr-aging-policy","username":"dave.enyeart","ts":"2020-01-06T12:33:48.495Z"}
{"msg":"So yeah, now that we are migrated, I think we could simply configure stale bot for 14 days until stale, and 14 more days until auto-close","username":"dave.enyeart","ts":"2020-01-06T12:34:23.811Z"}
{"msg":"It looks like any PR comment will make it un-stale again.","username":"dave.enyeart","ts":"2020-01-06T12:34:47.606Z"}
{"msg":"So I think the biggest open question is whether to configure some kind of nagging for reviews... anybody know if there are bots for that?","username":"dave.enyeart","ts":"2020-01-06T12:35:30.723Z"}
{"msg":"nag maintainers or nag PR owners? ","username":"yacovm","ts":"2020-01-06T13:26:29.368Z"}
{"msg":"PR owners would be nagged by the stale bot automatically... I'm talking about whether we want to nag maintainers about the outstanding PRs...","username":"dave.enyeart","ts":"2020-01-06T14:25:06.922Z"}
{"msg":"With the move to single +2, one thing I suggested was that anybody could add named 'Assignees' to a PR to indicate a review request... that could be enough nagging for maintainers...","username":"dave.enyeart","ts":"2020-01-06T14:27:10.812Z"}
{"msg":"To be honest, with all maintainers on the Reviewers list, I get more emails than I can monitor.","username":"dave.enyeart","ts":"2020-01-06T14:28:06.354Z"}
{"msg":"To be honest, with all maintainers on the 'Reviewers' list for every PR automatically, I get more emails than I can monitor.","username":"dave.enyeart","ts":"2020-01-06T14:28:06.354Z"}
{"msg":"Thoughts?","username":"dave.enyeart","ts":"2020-01-06T14:29:25.734Z"}
{"msg":"@rjones Hi Ry, we've noticed that the Fabric maintainer lists have been refactored in GitHub... could you keep us informed of your objectives, what's been done, what remains?","username":"dave.enyeart","ts":"2020-01-06T15:34:55.666Z"}
{"msg":"I recall he just removed the gerrit nicknames ","username":"yacovm","ts":"2020-01-06T15:50:59.963Z"}
{"msg":"pretty much. I was tasked with removing references to Gerrit. On a couple of the lists, they had pointers to missing documentation. On a couple, they weren't in alpha order.","username":"rjones","ts":"2020-01-06T18:33:25.521Z"}
{"msg":"I talked with Ry earlier. A number of sub-groups were added to the fabric maintainers group. That resulted in us losing the \"core\" group. That's been addressed by adding a new group.\n\nTomorrow I'll go through the repositories and update the CODEOWNERS as appropriate to use the correct group(s).\n\nIf done correctly, nothing will break; if not, just yell at me.","username":"sykesm","ts":"2020-01-06T21:22:16.683Z"}
{"msg":"I also went and changed the pending requests to only update the maintainers file itself","username":"rjones","ts":"2020-01-06T21:30:32.517Z"}
{"msg":"@sykesm I think I have a fix that won't involve a lot of effort.","username":"rjones","ts":"2020-01-06T22:03:39.939Z"}
{"msg":"basically, move the teams under the existing \"maintainers\" group over to the \"contributors\" group.","username":"rjones","ts":"2020-01-06T22:05:51.333Z"}
{"msg":"then the pointer to fabric-maintainers and fabric-core-maintainers becomes moot until another cleanup pass","username":"rjones","ts":"2020-01-06T22:06:24.423Z"}
{"msg":"Several of us have discussed that the requirement for 'majority of maintainers' is too high a burden for an RFC to enter final comment period. Also it was unclear which Fabric repositories should be considered when determining the majority. Here's a PR proposing to change the language from 'majority' to at least three interested maintainers.  This is just for entrance into the final comment period week. Any maintainer or community member may still raise objectives during final comment period, so the intent here is to simply lower a process bar, not to lower the bar on general consensus around RFCs.  Please indicate your approval or concerns within the PR:  https://github.com/hyperledger/fabric-rfcs/pull/17","username":"dave.enyeart","ts":"2020-01-07T04:54:23.665Z"}
{"msg":"Several of us have discussed that the requirement for 'majority of maintainers' is too high a burden for an RFC to enter final comment period. Also it was unclear which Fabric repositories should be considered when determining the majority. Here's a PR proposing to change the language from 'majority' to at least three interested maintainers.  This is just for entrance into the final comment period week. Any maintainer or community member may still raise objections during final comment period, so the intent here is to simply lower a process bar, not to lower the bar on general consensus around RFCs.  Please indicate your approval or concerns within the PR:  https://github.com/hyperledger/fabric-rfcs/pull/17","username":"dave.enyeart","ts":"2020-01-07T04:54:23.665Z"}
{"msg":"On the subject of RFCs - could I propose the gh-pages support RFC I put up goes into 'final review please'","username":"mbwhite","ts":"2020-01-07T15:22:52.362Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/pull/15","username":"mbwhite","ts":"2020-01-07T15:22:53.770Z"}
{"msg":"@mbwhite since it is essentially a metadata change to fabric-rfcs, rather than a change to a fabric repo, I don't think it needs to go through formal RFC process.  I commented in the PR:","username":"dave.enyeart","ts":"2020-01-07T18:19:21.445Z"}
{"msg":"I'm happy to get this merged, review the usage experience, and then tweak as needed.\n\nA sample of the experience would be found at: https://mbwhite.github.io/fabric-rfcs/","username":"dave.enyeart","ts":"2020-01-07T18:19:27.700Z"}
{"msg":"Also, does anybody know why there is a 0000-template.md at root of fabric-rfcs, as well as a text/0000-dummy.md file? They seem to have same content...","username":"dave.enyeart","ts":"2020-01-07T18:22:49.462Z"}
{"msg":"Has joined the channel.","username":"dexhunter","ts":"2020-01-08T02:03:58.874Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mrudav.shukla","ts":"2020-01-08T05:56:27.880Z","type":"uj"}
{"msg":"I wondered the same thing about the template files..","username":"mbwhite","ts":"2020-01-08T09:23:17.347Z"}
{"msg":"@here contributor meeting at the top of the hour: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-01-08T13:53:51.838Z"}
{"msg":"Agenda items below... anything else?\nRelease update\nCI and SCM update\nMaintainer housekeeping topics\n- release-2.0 branch\n- release cadence and LTS\n- fabric-rfcs\n- Process for merging doc content","username":"dave.enyeart","ts":"2020-01-08T13:54:00.826Z"}
{"msg":"Has joined the channel.","username":"ZainabM","ts":"2020-01-09T11:51:06.044Z","type":"uj"}
{"msg":"Last chance! The Linux Foundation worked with Hyperledger Fabric Developer subject matter expert volunteers to identify the core domains and competencies for the Certified Hyperledger Fabric Developer (CHFD) exam, scheduled to launch in March 2020.  Are you interested in participating in the Beta and receiving an early peek? The CHFD Beta is FREE for the first 100 who take the exam.  Complete the CHFD Beta Sign-up Form by January 15, 2020 for your chance.  If you pass you will be CHFD Certified! ","username":"Silona","ts":"2020-01-09T20:17:50.842Z"}
{"msg":"Announce: the gh-pages fabric-rfc PR has been merged... the site URL is  https://hyperledger.github.io/fabric-rfcs  \nHope is provide cleaner way to read and search RFCs.\n\n@rjones could you modify the description of the repo to include the docs url please?","username":"mbwhite","ts":"2020-01-10T11:11:27.267Z"}
{"msg":"Done!","username":"dave.enyeart","ts":"2020-01-10T14:11:55.246Z"}
{"msg":"Update to RFC maintainer language merged!","username":"dave.enyeart","ts":"2020-01-10T14:12:51.934Z"}
{"msg":"Thank you, Dave","username":"rjones","ts":"2020-01-10T15:42:25.625Z"}
{"msg":"fabric-protos  repository has only a master branch, yet we are about to release v2.0 and then v2.1\nHow does that work with protobuf changes that should go into v2.1 but not into v2.0 ? :thinking: \nI want to merge https://github.com/hyperledger/fabric-protos/pull/23 into the only branch in fabric-protos  and this change only adds boolean fields to a discovery message, so it should be safe to merge even if someone updated v2.0 branch with the protobuf. \nShould I wait for v2.0 to be released, or  can we merge it into the `fabric-protos` under the assumption that we won't update the master branch of fabric until v2.0 is cut with new protobufs ?","username":"yacovm","ts":"2020-01-13T17:15:17.425Z"}
{"msg":"Proto changes should always be forward and backwards compatible. To help consumers determine the \"right\" version, I expect we'll tag the commit we consume in fabric proper for each of the minor releases.\n\nIf we need branches in protos, we can do it, but I don't think it really adds much and may make incompatible changes more likely. Instead of aggressively creatnig branches here, I'd like to defer that until we need it. If I'm wrong (and I may be), it seems fixable.","username":"sykesm","ts":"2020-01-13T17:22:40.803Z"}
{"msg":"I am definitely interested in this.","username":"medikent","ts":"2020-01-13T18:29:23.957Z"}
{"msg":"Where is the beta sign up form?","username":"medikent","ts":"2020-01-13T18:30:28.162Z"}
{"msg":"Found it. Thanks!","username":"medikent","ts":"2020-01-13T18:36:43.060Z"}
{"msg":"Just to repeat the mailing list announcements I sent out this morning, I'm requesting we enter the final comment period for both the Ledger-api and Programming Model Go SDK updates RFCs. I'm proposing that they are merged in a week. We're looking for any final comments, objections, or even support :), from other fabric maintainers. \n\nProgramming Model Updates for Go SDK RFC: https://github.com/hyperledger/fabric-rfcs/pull/14, contact @andrew-coleman \n\nLedger api RFC: https://github.com/hyperledger/fabric-rfcs/pull/16, contact @mbwhite ","username":"heatherp","ts":"2020-01-14T13:04:25.873Z"}
{"msg":"Help Us Help you!  Attend the Developer Relationship Meeting with Myself and our Marketing Dept. tomorrow at 9:00am Pacific Time. \n\nFor the agenda and Dial in info\nhttps://wiki.hyperledger.org/display/Marketing/2020-01-15+Meeting+notes ","username":"Silona","ts":"2020-01-14T16:49:51.566Z"}
{"msg":"Calling all Projects!  We will have a special Kiosk setup at Hyperledger Global Forum for Projects.  We are asking that all projects sign up to do 10 minute presentations.  https://wiki.hyperledger.org/display/HGF/Projects+Kiosk  We will close this page on Feb 28 for printing reasons. ","username":"Silona","ts":"2020-01-14T17:01:16.683Z"}
{"msg":"Has joined the channel.","username":"YashShukla","ts":"2020-01-15T02:28:23.955Z","type":"uj"}
{"msg":"Is there any Inbuilt solution to this\n\nThree organizations A, B, and C are on the same channel. All 3 organizations perform a transaction with a value x. There is a chaincode that chooses the organization whose value of x is the highest and declares it as a winner.\n\nAll the organizations are the endorsers to keep the system decentralized.\n\nThe problem is that the organizations will be able to see what the value x of other organizations and input there value accordingly.\n\nIs there any solution to it, which allows every organization to see other organization's input x only after the winner is declared while keeping the system decentralized with trust? and want it to do everything in 100 ms (real-time).","username":"YashShukla","ts":"2020-01-15T02:33:29.246Z"}
{"msg":"Hi, I am looking to resolve https://jira.hyperledger.org/browse/FAB-17382 which is around the creation of an NPM module which chaincode implementations e.g. fabric-chaincode-java would import as part of their azure test runs and run as a CLI. It will provide a standardised set of integration tests so we can know that all our chaincode implementations work as expected and remove duplicate workload of creating an integration test setup for each of the chaincode implementations (node, java and go + future languages). \n\nIt had been suggested that the best location for this would be to put it in the fabric-test repo however having looked at that repo it seems that there is not a natural place to put it as the repo is structured to be one large testing tool and this would be a seperate package requiring its own release cycle. It also seems to function in the inverse of how fabric-test is used which seems itself to take in repos at a certain level rather than have the other repos take it in. \n\nIt would be great to have maintainers' opinions on the best course of action for resolving this JIRA and getting the tool ready. If it should go in the fabric-test repo where is the best place for it, or should it have its own repository?","username":"awjh","ts":"2020-01-15T09:45:55.773Z"}
{"msg":"@BrettLogan @scottz would appreciate your thoughts, this was what I was poorly articulating on the squad leads calls on Monday :) ","username":"heatherp","ts":"2020-01-15T09:54:39.065Z"}
{"msg":"@YashShukla With a trusted 3rd party to run the auction, you can have a private data collection between each organization and the 3rd party. Each org would submit their bid to their pairwise collection (and perhaps also to the 3rd party's own collection to ease the bid evaluation). 3rd party would name the winner in a subsequent transaction and mention the winning bid. The other parties can compare the winning bid to the hash from the winning orgs collection, to verify that they really placed the bid before the auction ended. For more details about these types of solutions see https://hyperledger-fabric.readthedocs.io/en/latest/private-data/private-data.html#sharing-private-data. Without a trusted 3rd party to run the auction, there may be truly decentralized options using homomorphic encryption in the chaincode. But please, keep this channel reserved for maintainer topics. Follow-on questions should use a different channel or Fabric mailing list.","username":"dave.enyeart","ts":"2020-01-15T10:26:15.102Z"}
{"msg":"@YashShukla With a trusted 3rd party to run the auction, you can have a private data collection between each organization and the 3rd party. Each org would submit their bid to their pairwise collection (and perhaps also to the 3rd party's own collection to ease the bid evaluation). 3rd party would name the winner in a subsequent transaction and mention the winning bid. The other parties can compare the winning bid to the hash from the winning orgs collection, to verify that they really placed the bid before the auction ended. For more details about these types of solutions see https://hyperledger-fabric.readthedocs.io/en/latest/private-data/private-data.html#sharing-private-data. Without a trusted 3rd party to run the auction, there may be truly decentralized options using homomorphic encryption in the chaincode to find the maximum of the encrypted public bids. But please, keep this channel reserved for maintainer topics. Follow-on questions should use a different channel or Fabric mailing list.","username":"dave.enyeart","ts":"2020-01-15T10:26:15.102Z"}
{"msg":"@YashShukla With a trusted 3rd party to run the auction, you can have a private data collection between each organization and the 3rd party. Each org would submit their bid to their pairwise collection (and perhaps also to the 3rd party's own collection to ease the bid evaluation). 3rd party would name the winner in a subsequent transaction and mention the winning bid. The other parties can compare the winning bid to the hash from the winning orgs collection, to verify that they really placed the bid before the auction ended. For more details about these types of solutions see https://hyperledger-fabric.readthedocs.io/en/latest/private-data/private-data.html#sharing-private-data. But please, keep this channel reserved for maintainer topics. Follow-on questions should use a different channel or Fabric mailing list.","username":"dave.enyeart","ts":"2020-01-15T10:26:15.102Z"}
{"msg":"Thank you so much. Thanks.","username":"YashShukla","ts":"2020-01-15T10:32:28.836Z"}
{"msg":"Hey Dave, thanks for the answer.\n\nI just wanted to know that according to you which will be the best way to make it completely decentralized i.e every one will be able to see each other's bid without a trusted 3rd party.\nwhile keeping it a real-time system (under 50ms)","username":"YashShukla","ts":"2020-01-15T10:41:05.125Z"}
{"msg":"I asked for you to please use the mailing list rather than fabric-maintainers channel: https://lists.hyperledger.org/g/fabric","username":"dave.enyeart","ts":"2020-01-15T10:42:30.114Z"}
{"msg":"Let me talk to Dave on this one","username":"BrettLogan","ts":"2020-01-15T14:37:37.574Z"}
{"msg":"Repos are free. If you need another one just to publish to NPM, we could do that","username":"rjones","ts":"2020-01-15T17:11:48.355Z"}
{"msg":"like the fabric-photos and fabric-photos-go setup","username":"rjones","ts":"2020-01-15T17:12:08.927Z"}
{"msg":"We use fabric-test to house tools and tests, and import the images and things to be tested from various fabric family project repositories. It is a great place for a tool to exist that can run an acceptance test, for example to run a standard test scenario using different versions of fabric, or a chaincode written in different languages. We recently removed some outdated or maintenance-heavy tools, and focus on using go and ginkgo to drive some test suites - which explains where there are not a lot of tools there anymore - but anyone can certainly add a new tool under the fabric-test/tools/ directory. It so far is not a place to store artifacts or libraries to be used elsewhere. I suppose if you are planning to copy or import it to a selection of other repos and just run it, then it might make sense to put here.","username":"scottz","ts":"2020-01-15T21:57:00.460Z"}
{"msg":"More comprehensive response provided on mailing list: https://lists.hyperledger.org/g/fabric/message/7554","username":"dave.enyeart","ts":"2020-01-15T22:01:29.209Z"}
{"msg":"Seems like it suits being put in that test folder, we can then either have the other repos clone it in and use it or work out a process for publishing the tool to NPM when needed.","username":"awjh","ts":"2020-01-16T10:05:36.573Z"}
{"msg":"I've created a jira board to track the sdk/chaincode backlogs and I'm looking to create sprints, but I don't have permissions to do so: \"You need the Manage Sprints permission for all projects in the origin board to create a sprint. Learn more\". Can someone help me out with permissions. The projects I'm interested in tracking are: Chaincode Java, Chaincode Node, Contract API Go, Gateway Java, SDK Java, SDK Node and SDK Go. Thanks","username":"heatherp","ts":"2020-01-16T13:03:17.998Z"}
{"msg":"I've created a jira board to track the sdk/chaincode backlogs and I'm looking to create sprints, but I don't have permissions to do so: \"You need the Manage Sprints permission for all projects in the origin board to create a sprint. Learn more\". Can someone help me out with permissions? The projects I'm interested in tracking are: Chaincode Java, Chaincode Node, Contract API Go, Gateway Java, SDK Java, SDK Node and SDK Go. Thanks","username":"heatherp","ts":"2020-01-16T13:03:17.998Z"}
{"msg":"@heatherp , @rjones can likely help, although the official answer is to open a ticket at https://jira.linuxfoundation.org/servicedesk/customer/portals . The ","username":"dave.enyeart","ts":"2020-01-16T14:46:17.141Z"}
{"msg":"@heatherp , @rjones can likely help, although the official answer is to open a ticket at https://jira.linuxfoundation.org/servicedesk/customer/portals . ","username":"dave.enyeart","ts":"2020-01-16T14:46:17.141Z"}
{"msg":"give me a bit","username":"rjones","ts":"2020-01-16T15:33:54.269Z"}
{"msg":"","username":"rjones","ts":"2020-01-16T15:41:25.894Z","attachments":[{"type":"file","title":"roles.png","title_link":"/file-upload/gwcxw696bByrf95da/roles.png","image_url":"/file-upload/gwcxw696bByrf95da/roles.png","image_type":"image/png","image_size":155735,"url":"/file-upload/gwcxw696bByrf95da/roles.png","remote":false,"fileId":"gwcxw696bByrf95da","fileName":"roles.png"}]}
{"msg":"@dave.enyeart (and maintainers in general): do more admin-type functions need delegated in JIRA? When I was adding @heatherp to the \"Maintainer\" role for those projects, I noticed many of them only have one other person with any admin capabilities","username":"rjones","ts":"2020-01-16T15:45:23.466Z"}
{"msg":"@rjones I'd be happy to an admin on all Fabric* projects, if you can make that happen","username":"dave.enyeart","ts":"2020-01-16T16:07:52.487Z"}
{"msg":"Done","username":"rjones","ts":"2020-01-16T16:17:33.729Z"}
{"msg":"I just scheduled my exam for Saturday. What do you recommend I study? I've written Go and Java chaincode (in Kotlin) and connected to Fabric with both the Go and Java SDKs. I've installed, instantiated, and upgraded chaincode as well as read through the majority of the documentation on Hyperledger Fabric.","username":"medikent","ts":"2020-01-16T21:30:44.832Z"}
{"msg":"I'm thinking I might be ok though I'd like to fill in the missing gaps.","username":"medikent","ts":"2020-01-16T21:30:55.882Z"}
{"msg":"How far along is the Idemix ZKP imeplementation in Fabric? I'd like to help it along.","username":"medikent","ts":"2020-01-16T22:09:40.869Z"}
{"msg":"Who would I work with to help along the Idemix implementation? I'd like to help with Revocation","username":"medikent","ts":"2020-01-16T22:11:18.827Z"}
{"msg":"I'd also like to help with the Idemix Peer endorsement implementation.","username":"medikent","ts":"2020-01-16T22:11:44.455Z"}
{"msg":"Just for the avoidance of doubt; when the 2.0.0 GA is released will the tag 'latest' for docker images be mapped to the 2.0 or the 1.4 LTS images?","username":"mbwhite","ts":"2020-01-17T10:34:51.448Z"}
{"msg":"@mbwhite This issue first came up when we did the 2.0.0-alpha back in April. At that time there was general agreement that `latest` tag in docker hub caused too much confusion, and we decided to stop using it as of v2.0.","username":"dave.enyeart","ts":"2020-01-17T11:46:32.156Z"}
{"msg":"So, we will not tag v2.0 as latest, not now, nor when v2.x becomes LTS.","username":"dave.enyeart","ts":"2020-01-17T11:47:05.651Z"}
{"msg":"We will likely remove the existing `latest` tag on v1.4.x images sometime before v2.x goes LTS","username":"dave.enyeart","ts":"2020-01-17T11:48:14.111Z"}
{"msg":"We will likely remove the existing `latest` tag on v1.4.x images sometime before v2.x goes LTS, to avoid all confusion","username":"dave.enyeart","ts":"2020-01-17T11:48:14.111Z"}
{"msg":"So the next question is what to do with the `latest` tag for chaincode images in core.yaml: https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L510-L519","username":"dave.enyeart","ts":"2020-01-17T11:49:40.339Z"}
{"msg":"My opinion is that users should not rely on automatic dockerhub pulling. Rather, they should pull the exact version they want, which gets tagged locally as `latest`","username":"dave.enyeart","ts":"2020-01-17T11:50:57.100Z"}
{"msg":"My opinion is that users should not rely on automatic dockerhub pulling. Rather, they should pull the exact version they want (bootstrap.sh script automatically pulls javaenv and nodeenv tag matching the requested fabric version, e.g. 2.0.0) , which then gets tagged locally as `latest` after the pull.","username":"dave.enyeart","ts":"2020-01-17T11:50:57.100Z"}
{"msg":"Therefore, I think the core.yaml entries can remain as-is.  And we should document that users should update them to point to the exact javaenv and nodeenv tags that they want to use.  I think you took a todo to document this at one point.","username":"dave.enyeart","ts":"2020-01-17T11:52:35.587Z"}
{"msg":"What do you think?","username":"dave.enyeart","ts":"2020-01-17T11:52:49.057Z"}
{"msg":"@dave.enyeart ... first impression is that I'm good with that approach.  npm module tags only have official meaning for 'latest' - so wanted to follow the same definition of latest.. 1.4 or 2.  But if the docker isn't being tagged, then I suspect we'll tag 2 with latest, maybe an lts tag for 1.4","username":"mbwhite","ts":"2020-01-17T12:46:59.392Z"}
{"msg":"Also related to tagging... we tag each x.y.z release in docker hub also as x.y, e.g. 1.4.4 and 1.4 tags point to the same thing. SDK team requested this so that SDK tests could pull 1.4 and always get the latest. I wasn't thrilled with the x.y tag. Is it sill needed/useful @BrettLogan @heatherp ?","username":"dave.enyeart","ts":"2020-01-17T15:19:39.614Z"}
{"msg":"Specifically, the 2.0 tag created for fabric-ca 2.0.0-alpha is very misleading, and minimally that one should be deleted since we won't deliver fabric-ca 2.0","username":"dave.enyeart","ts":"2020-01-17T15:20:21.254Z"}
{"msg":"Specifically, the 2.0 tag created for fabric-ca 2.0.0-alpha is very misleading, and minimally that one should be deleted since we won't deliver fabric-ca 2.0 at this point","username":"dave.enyeart","ts":"2020-01-17T15:20:21.254Z"}
{"msg":"@dave.enyeart I can't answer the needed/useful question, but why are you opposed to the x.y tag? Lots of projects on Docker Hub publish tags like this, e.g. Node.js (https://hub.docker.com/_/node/) publishes x, x.y, and x.y.z tags","username":"sstone1","ts":"2020-01-17T15:28:42.271Z"}
{"msg":"ok, if it is well trod pattern i guess it's ok, it just seems that it would cause confusion between 1.4.0 and 1.4","username":"dave.enyeart","ts":"2020-01-17T15:29:30.216Z"}
{"msg":"I agree with Simon, is a very common pattern that 1.4 would mean the latest 1.4.x image","username":"BrettLogan","ts":"2020-01-17T15:30:17.902Z"}
{"msg":"ok, are we at least in agreement that fabric-ca 2.0 tag should be deleted at this point?","username":"dave.enyeart","ts":"2020-01-17T15:30:46.849Z"}
{"msg":"yeah if there's no 2.0.0 release of the CA then the 2.0 tag doesn't make sense","username":"sstone1","ts":"2020-01-17T15:31:10.055Z"}
{"msg":"I do think that having a mix of Fabric versions (1.4 for CA, 2.0 for everything else) is a bit confusing but I'm guessing that discussion has already occurred?","username":"sstone1","ts":"2020-01-17T15:31:33.208Z"}
{"msg":"yes, it was discussed on contributor call last week... the consensus was that having a v2.0 fabric ca release with no changes since v1.4.4 would be even more confusing.","username":"dave.enyeart","ts":"2020-01-17T15:32:15.046Z"}
{"msg":"yes, it was discussed on contributor call last week... the consensus was that having a v2.0 fabric ca release with no changes since v1.4.4 would be even more misleading.","username":"dave.enyeart","ts":"2020-01-17T15:32:15.046Z"}
{"msg":"Do you want to have it removed now Dave? It doesn't make sense to leave it around if we arent releasing 2.0 CA","username":"BrettLogan","ts":"2020-01-17T15:33:05.111Z"}
{"msg":"I say delete fabric ca 2.0 tag now","username":"dave.enyeart","ts":"2020-01-17T15:33:23.996Z"}
{"msg":"I say delete fabric ca 2.0 tag next week","username":"dave.enyeart","ts":"2020-01-17T15:33:23.996Z"}
{"msg":"If the removal will break any test pipelines (e.g. sdk integration tests), speak up today!","username":"dave.enyeart","ts":"2020-01-17T15:34:27.086Z"}
{"msg":"I was gonna mention this next monday but we discussed on scrum today that in line with this, we won't do a fabric-ca-client v2.0.0 release, which is one of the modules fabric-sdk-node publishes","username":"heatherp","ts":"2020-01-17T15:56:26.340Z"}
{"msg":"I think this will break the Node and Java SDK master branch builds where they pull down v2 Docker images for all the Fabric components. It's too late in the day for me to change those builds now","username":"bestbeforetoday","ts":"2020-01-17T18:18:50.856Z"}
{"msg":"As we approach v2.0 release the week of Jan. 27th, we need to use some extra caution when merging PRs. As such I've created `release-2.0` branch in fabric and fabric-chaincode-go. PRs should continue to be opened against `master` branch, and then upon merge to master, consider whether you'd like to cherry pick to `release-2.0` to get the commit into v2.0.","username":"dave.enyeart","ts":"2020-01-20T04:42:57.779Z"}
{"msg":"The cherry pick decision should be based on a conversation between the PR owner and maintainer that merges the PR (if both sides take the responsibility to follow up, there is less chance for a missed cherry pick).","username":"dave.enyeart","ts":"2020-01-20T04:48:31.884Z"}
{"msg":"Who owns the fabric-rfcs repo?","username":"kostas","ts":"2020-01-20T23:31:29.070Z"}
{"msg":"The Linux Foundation","username":"BrettLogan","ts":"2020-01-20T23:59:29.332Z"}
{"msg":"The Linux Foundation, why?","username":"BrettLogan","ts":"2020-01-20T23:59:29.332Z"}
{"msg":"Touché. Let me rephrase: who's got administrator rights on that repo?","username":"kostas","ts":"2020-01-21T00:05:17.544Z"}
{"msg":"I wasn't being smart, Chris owned the original iteration. What are you looking to do to it, I would assume Chris, Gari and Dave have admin privileges on it, but that assumes Ry added the fabric admins team to the repo. ","username":"BrettLogan","ts":"2020-01-21T00:06:45.975Z"}
{"msg":"And not all functionality is available to them, so assuming it's in the scope of their permissions they could can do it ","username":"BrettLogan","ts":"2020-01-21T00:07:31.870Z"}
{"msg":"This team has maintain: https://github.com/orgs/hyperledger/teams/fabric-release-maintainers/members","username":"rjones","ts":"2020-01-21T01:05:10.138Z"}
{"msg":"This team has admin: https://github.com/orgs/hyperledger/teams/fabric-admins/members","username":"rjones","ts":"2020-01-21T01:05:32.749Z"}
{"msg":"I'd suggest reaching out to @aso or @adc for pointers.","username":"sykesm","ts":"2020-01-21T20:00:29.943Z"}
{"msg":"For commits merged into master that we want in release-2.0, instead of the cherry pick approach, submitter can simply open PR in fabric and choose their fork and feature branch as the source, like this:","username":"dave.enyeart","ts":"2020-01-21T21:32:46.085Z"}
{"msg":"","username":"dave.enyeart","ts":"2020-01-21T21:32:50.275Z","attachments":[{"type":"file","title":"Clipboard - January 21, 2020 4:32 PM","title_link":"/file-upload/9FXmeYiQhMuFC5abS/Clipboard%20-%20January%2021,%202020%204:32%20PM","image_url":"/file-upload/9FXmeYiQhMuFC5abS/Clipboard%20-%20January%2021,%202020%204:32%20PM","image_type":"image/png","image_size":25976,"url":"/file-upload/9FXmeYiQhMuFC5abS/Clipboard%20-%20January%2021,%202020%204:32%20PM","remote":false,"fileId":"9FXmeYiQhMuFC5abS","fileName":"Clipboard - January 21, 2020 4:32 PM"}]}
{"msg":"@wlahti you've got two that were merged today that should go to release-2.0","username":"dave.enyeart","ts":"2020-01-21T21:33:23.437Z"}
{"msg":"Do we have any thoughts on how we can better track what commits should go into what branches? I've definitely had zero fun finding closed jiras and missing commits in branches they were needed in","username":"heatherp","ts":"2020-01-22T09:50:07.680Z"}
{"msg":"I think it's easier to look at the `git log` than to look in JIRA.\nAs for \"what commits should go into what branches\" - usually, if it's a bug fix it's backported, if it's an easy  and trivial usability enhancement like a logging message improvement, it is also backported. other stuff usually don't. ","username":"yacovm","ts":"2020-01-22T11:31:36.102Z"}
{"msg":"I understand the process for when we should backport, but currently we're relying on people to remember to do it. I'd prefer an automated process that doesn't rely on people remembering, because it's caused me pain the past. I don't have a solution though","username":"heatherp","ts":"2020-01-22T12:05:31.269Z"}
{"msg":"I'm not sure about a fully automated solution, but, there are a number of bots out there that can do a cherry pick for you. So a maintainer, while doing review on a PR, can simply comment `/cherry-pick release-2.0` and it will add a `cherry-pick-release-2-0` label to the PR, then when the original PR is closed, it will open a PR for you against the 2.0 branch. This would lower the effort to get a cherry-pick in and take the oneous off any one person (the original commiter) to remember to cherry pick their change ","username":"BrettLogan","ts":"2020-01-22T12:25:09.677Z"}
{"msg":"I'm not sure about a fully automated solution, but, there are a number of bots out there that can do a cherry pick for you. So a maintainer, while doing review on a PR, can simply comment `/cherry-pick release-2.0` and it will open a PR for you against the 2.0 branch. This would lower the effort to get a cherry-pick in and take the oneous off the any one person (the original commuter) to remember to cherry pick their change ","username":"BrettLogan","ts":"2020-01-22T12:25:09.677Z"}
{"msg":"I'm not sure about a fully automated solution, but, there are a number of bots out there that can do a cherry pick for you. So a maintainer, while doing review on a PR, can simply comment `/cherry-pick release-2.0` and it will open a PR for you against the 2.0 branch. This would lower the effort to get a cherry-pick in and take the oneous off any one person (the original commuter) to remember to cherry pick their change ","username":"BrettLogan","ts":"2020-01-22T12:25:09.677Z"}
{"msg":"I'm not sure about a fully automated solution, but, there are a number of bots out there that can do a cherry pick for you. So a maintainer, while doing review on a PR, can simply comment `/cherry-pick release-2.0` and it will open a PR for you against the 2.0 branch. This would lower the effort to get a cherry-pick in and take the oneous off any one person (the original commiter) to remember to cherry pick their change ","username":"BrettLogan","ts":"2020-01-22T12:25:09.677Z"}
{"msg":"The bots can even be configured to not generate the PR until the merge of the source PR happens, so you are certain you have the final revision of the code ","username":"BrettLogan","ts":"2020-01-22T12:27:52.823Z"}
{"msg":"This does have DCO implications now that I think about it ","username":"BrettLogan","ts":"2020-01-22T12:52:26.518Z"}
{"msg":"With some afterthought, this does not solve the problem we were trying to avoid, we still need to cherry pick, as we can see in Will's PR it presents the same problem","username":"BrettLogan","ts":"2020-01-22T13:49:43.691Z"}
{"msg":"Contributor meeting agenda for today... anything else?","username":"dave.enyeart","ts":"2020-01-22T13:53:10.717Z"}
{"msg":"@here  Contributor meeting agenda for today... anything else?","username":"dave.enyeart","ts":"2020-01-22T13:53:10.717Z"}
{"msg":"Release update\nRelease cadence and LTS\nProcess for merging doc content\nDeep dive: Decentralized application patterns in Fabric v2.0","username":"dave.enyeart","ts":"2020-01-22T13:53:55.864Z"}
{"msg":"https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-01-22T13:54:27.241Z"}
{"msg":"FYI: Jira is undergoing maintenance at the moment, should be up within the hour","username":"BrettLogan","ts":"2020-01-22T15:04:08.508Z"}
{"msg":"I argue cherry picking is better than merging since you are explicitly bringing in that one commit","username":"rjones","ts":"2020-01-22T16:53:59.302Z"}
{"msg":"I haven't heard any dissent on the 'doc maintainer' proposal... if you agree please add your 'endorsement' to https://github.com/hyperledger/fabric/pull/526 so that we can get the process moving","username":"dave.enyeart","ts":"2020-01-24T20:31:22.959Z"}
{"msg":"I've added the `mergify` tool per request from @BrettLogan , so once 526 is in, a small bit of yaml and `mergify` will be there for you","username":"rjones","ts":"2020-01-24T20:33:02.603Z"}
{"msg":"`fabric-core-doc-maintainers` added and has rights to repo: https://github.com/orgs/hyperledger/teams/fabric-core-doc-maintainers/repositories","username":"rjones","ts":"2020-01-28T00:07:00.854Z"}
{"msg":"`fabric-core-doc-maintainers` populated, added, and has rights to repo: https://github.com/orgs/hyperledger/teams/fabric-core-doc-maintainers/repositories","username":"rjones","ts":"2020-01-28T00:07:00.854Z"}
{"msg":"@BrettLogan Any ideas why this would be happening for tool/chaincode-integration in fabric-test? It says cannot merge as it never gets a result from the base fabric-test CI.\n\nExample: https://github.com/hyperledger/fabric-test/pull/66","username":"awjh","ts":"2020-01-28T10:07:08.772Z"}
{"msg":"I'm working on that. I need to finish setting up mergify which will handle it for you. I did merge the change for you ","username":"BrettLogan","ts":"2020-01-28T12:59:00.767Z"}
{"msg":"I saw that, thanks :)","username":"awjh","ts":"2020-01-28T13:00:35.454Z"}
{"msg":"I did not pass. The exam was somewhat surprising. Is there a way I could give it another go?","username":"medikent","ts":"2020-01-28T14:23:15.694Z"}
{"msg":"Who are @aso and @adc?","username":"medikent","ts":"2020-01-28T14:26:45.156Z"}
{"msg":"@BrettLogan Do you have any recomendations around how I could setup a deployment pipeline for the chaincode-integration test tool? Other fabric projects I've worked on use the github release and tagging process but since this will be a pipeline just for one part rather than releasing everything I am unsure on how we could target just that folder?","username":"awjh","ts":"2020-01-28T14:48:23.978Z"}
{"msg":"@BrettLogan Do you have any recomendations around how I could setup a deployment pipeline for the chaincode test tool? Other fabric projects I've worked on use the github release and tagging process but since this will be a pipeline just for one part rather than releasing everything I am unsure on how we could target just that folder?","username":"awjh","ts":"2020-01-28T14:48:23.978Z"}
{"msg":"What artifacts come out of this? An NPM module? Anything else?","username":"BrettLogan","ts":"2020-01-28T15:09:38.829Z"}
{"msg":"Also, how often do you intend to release the artifacts, on every merge, or only when you are ready to release ","username":"BrettLogan","ts":"2020-01-28T15:10:22.208Z"}
{"msg":"Just an npm module, just want to get it published to npm. Ideally we would have it publish an unstable on each merge to chaincode-integration and also release a specific version when we are ready","username":"awjh","ts":"2020-01-28T15:11:12.218Z"}
{"msg":"So for the unstable, obviously we can put that in the regular pipeline. For the release version Fabric and Fabric-CA have a separate release pipeline which we trigger manually","username":"BrettLogan","ts":"2020-01-28T15:13:04.222Z"}
{"msg":"Which is trivial to do","username":"BrettLogan","ts":"2020-01-28T15:13:50.291Z"}
{"msg":"Okay cool :) How do they do that?","username":"awjh","ts":"2020-01-28T15:14:07.785Z"}
{"msg":"Is it via PRs or a github tag?","username":"awjh","ts":"2020-01-28T15:14:22.690Z"}
{"msg":"Something else?","username":"awjh","ts":"2020-01-28T15:14:25.948Z"}
{"msg":"You can do it via the Azure Pipelines UI. We just need to grant permission to the tool Maintainers to trigger the pipeline. And then it's just click one button ","username":"BrettLogan","ts":"2020-01-28T15:16:06.236Z"}
{"msg":"Guess thats just a config in the YAML to make it release on that button then? And that'll use NPM credentials from azure","username":"awjh","ts":"2020-01-28T15:19:33.580Z"}
{"msg":"https://github.com/hyperledger/fabric/blob/master/ci/azure-pipelines-release.yml","username":"BrettLogan","ts":"2020-01-28T15:22:12.423Z"}
{"msg":"Actually, you need only specify:","username":"BrettLogan","ts":"2020-01-28T15:22:25.766Z"}
{"msg":"```trigger: none\npr: none```","username":"BrettLogan","ts":"2020-01-28T15:22:28.865Z"}
{"msg":"So it wont run on merge or PR","username":"BrettLogan","ts":"2020-01-28T15:22:42.332Z"}
{"msg":"And then when we enable the pipeline we restrict access to who can run it","username":"BrettLogan","ts":"2020-01-28T15:23:06.833Z"}
{"msg":"And then when we restrict access to who can run it","username":"BrettLogan","ts":"2020-01-28T15:23:06.833Z"}
{"msg":"Nice thanks :)","username":"awjh","ts":"2020-01-28T15:23:48.455Z"}
{"msg":"I assume the script will need to access the NPM credentials, are these already existent in the azure-pipeline env for fabric-test or will these needed to be added also","username":"awjh","ts":"2020-01-28T15:38:51.107Z"}
{"msg":"I gave fabric-test the same access and credentials fabric-sdk-node has to NPM","username":"BrettLogan","ts":"2020-01-28T15:43:45.598Z"}
{"msg":"So you should be able to follow their model","username":"BrettLogan","ts":"2020-01-28T15:43:52.139Z"}
{"msg":"Cool thanks a lot","username":"awjh","ts":"2020-01-28T15:46:29.911Z"}
{"msg":"Though I would much prefer we use the simplified service connection model: https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/npm?view=azure-devops&tabs=yaml","username":"BrettLogan","ts":"2020-01-28T15:48:37.387Z"}
{"msg":"In this one you just set the working directory as the root of the project (which needs a .npmrc file pointing to npmjs.org) and then you just call that task","username":"BrettLogan","ts":"2020-01-28T15:50:09.211Z"}
{"msg":":thumbsup: ","username":"awjh","ts":"2020-01-28T15:51:01.725Z"}
{"msg":"So theoretically, that would just look like this:","username":"BrettLogan","ts":"2020-01-28T15:55:03.286Z"}
{"msg":"```- task: Npm@1\n  inputs:\n    command: publish\n    workingDir: $(Agent.BuildDirectory)/tools/chaincode-integration\n    publishEndpoint: 'npm'```","username":"BrettLogan","ts":"2020-01-28T15:55:05.126Z"}
{"msg":"Everything is configured for that to work as well","username":"BrettLogan","ts":"2020-01-28T15:55:35.556Z"}
{"msg":"Awesome!","username":"awjh","ts":"2020-01-28T15:55:59.202Z"}
{"msg":"@here  I'm preparing for fabric v2.0 release... please limit changes in release-2.0.0 to those truly required. This morning I'm working on some final doc and release note updates, e.g. https://github.com/hyperledger/fabric/pull/588 . Then we'll tag and cut release this afternoon.","username":"dave.enyeart","ts":"2020-01-29T14:13:32.613Z"}
{"msg":"@here  I'm preparing for fabric v2.0 release... please limit changes in release-2.0 to those truly required. This morning I'm working on some final doc and release note updates, e.g. https://github.com/hyperledger/fabric/pull/588 . Then we'll tag and cut release this afternoon.","username":"dave.enyeart","ts":"2020-01-29T14:13:32.613Z"}
{"msg":"ok, i believe this is the second to last PR for the release, needed on master and release-2.0: https://github.com/hyperledger/fabric/pull/594","username":"dave.enyeart","ts":"2020-01-29T17:40:51.204Z"}
{"msg":"the final PR will be to increment the release number and tweak release notes in release-2.0","username":"dave.enyeart","ts":"2020-01-29T17:46:02.631Z"}
{"msg":"any other final changes needed?","username":"dave.enyeart","ts":"2020-01-29T17:46:27.161Z"}
{"msg":"@dave.enyeart Add one comment on suggesting to have a fabric ca v2.0.0 release, too, instead of using v1.4.4.","username":"baohua","ts":"2020-01-29T18:34:12.418Z"}
{"msg":"@dave.enyeart Add one comment on suggesting to have a fabric ca v2.0.0 release, too, instead of using v1.4.4. Thanks!","username":"baohua","ts":"2020-01-29T18:34:12.418Z"}
{"msg":"Thanks Baohua, understand the concern, however in prior contributor meeting the maintainers decided not to keep releasing Fabric CA concurrently, as we don't expect changes each quarter.","username":"dave.enyeart","ts":"2020-01-29T18:57:31.397Z"}
{"msg":"@here I've extended the release notes and switched to md format. Please take a look and comment if you think anything else needs to be mentioned. https://github.com/hyperledger/fabric/pull/595","username":"dave.enyeart","ts":"2020-01-29T18:58:04.091Z"}
{"msg":"Fabric v2.0 release is now available. There will be a series of announcements tomorrow, including blog and mailing list.","username":"dave.enyeart","ts":"2020-01-29T22:55:23.658Z"}
{"msg":":woo: :fabric: :woo: ","username":"JonathanLevi","ts":"2020-01-29T22:56:27.164Z"}
{"msg":"Is there a plan to release fabric-chaincode-go?","username":"awjh","ts":"2020-01-30T10:22:11.305Z"}
{"msg":"Or is the plan people will just use the latest master rather than a git tagged version?","username":"awjh","ts":"2020-01-30T10:22:54.707Z"}
{"msg":"Likewise with fabric-protos-go","username":"awjh","ts":"2020-01-30T10:43:58.686Z"}
{"msg":"At this point, there is no intent to create a release branch in these repos. There is intent to use a tag so that people know which commit level has been tested with a given Fabric release, but they should be able to use latest master.  If there comes a time that we need to support/maintain a specific version of these libraries, we can always create a release branch at that time.","username":"dave.enyeart","ts":"2020-01-30T13:46:25.968Z"}
{"msg":"In terms of the actual tag that we use, I'm open to ideas. I believe @sykesm mentioned to use version 0.x format, rather than align with Fabric version","username":"dave.enyeart","ts":"2020-01-30T13:47:15.355Z"}
{"msg":"Okay thanks, I ask as I am looking to release fabric-contract-api-go at some point so was looking to pin down a version in the go.mod file. I shall wait until the tags have occurred and people can use master of that module as well for now","username":"awjh","ts":"2020-01-30T13:48:44.152Z"}
{"msg":"Okay thanks, I ask as I am looking to release fabric-contract-api-go at some point so was looking to pin down a version in the go.mod file. I shall wait until the tags have occurred and people can use master of that repo as well until then","username":"awjh","ts":"2020-01-30T13:48:44.152Z"}
{"msg":"Okay thanks, I ask as I am looking to release fabric-contract-api-go at some point so was looking to pin down a version in the go.mod file. I shall wait until the tags have occurred and people can use master of that repo as well for now","username":"awjh","ts":"2020-01-30T13:48:44.152Z"}
{"msg":"The Hyperledger blog post is live: https://www.hyperledger.org/blog/2020/01/30/welcome-hyperledger-fabric-2-0:-enterprise-dlt-for-production","username":"dave.enyeart","ts":"2020-01-30T13:58:34.679Z"}
{"msg":"I'll send the mailing list announcement out in a bit, but in case other maintainers want to review the message, here's a draft: https://docs.google.com/document/d/1-RwBEe2NdhLO13CmW2ljUNC5t3WPE475-m2R9MobLvA/edit?usp=sharing","username":"dave.enyeart","ts":"2020-01-30T13:59:05.629Z"}
{"msg":"Announcement sent to mailing list: https://lists.hyperledger.org/g/fabric/message/7662","username":"dave.enyeart","ts":"2020-01-30T14:56:30.911Z"}
{"msg":"https://old.reddit.com/r/hyperledger/comments/ew6uj5/announcement_email_hyperledger_fabric_v20_is_now/","username":"rjones","ts":"2020-01-30T15:13:57.911Z"}
{"msg":"I imagine there is room for a lot of supporting documentation, examples, tutorials, and guides to assist with the transition to 2.0. What is the best way to contribute to that?","username":"medikent","ts":"2020-01-30T17:38:22.829Z"}
{"msg":"Interested to see whether it is possible to upgrade HLF v1.4 to v2.0.0, certainly with Raft consensus.","username":"baohua","ts":"2020-01-30T18:32:31.114Z"}
{"msg":"Upgrade documentation is here: https://hyperledger-fabric.readthedocs.io/en/release-2.0/upgrade.html We welcome your contributions!","username":"pandrejko","ts":"2020-01-30T21:46:45.006Z"}
{"msg":"@medikent Upgrade documentation is here: https://hyperledger-fabric.readthedocs.io/en/release-2.0/upgrade.html We welcome your contributions!","username":"pandrejko","ts":"2020-01-30T21:46:45.006Z"}
{"msg":"In addition to upgrade, it would be good to get more eyes on the new test network sample and doc.","username":"dave.enyeart","ts":"2020-01-31T15:57:31.705Z"}
{"msg":"In addition to upgrade, it would be good to get more eyes on the new test network sample and doc. Does it work for you? Is it clear? Are there gaps that you'd like to plug?","username":"dave.enyeart","ts":"2020-01-31T15:57:31.705Z"}
{"msg":"See upgrade info starting here https://hyperledger-fabric.readthedocs.io/en/release-2.0/whatsnew.html#upgrading-to-fabric-v2-0","username":"dave.enyeart","ts":"2020-01-31T15:58:37.071Z"}
{"msg":"@BrettLogan @rjones With Gerrit gone, can you remind us where to find the historical review info?","username":"dave.enyeart","ts":"2020-01-31T16:00:26.442Z"}
{"msg":"@dave.enyeart https://github.com/hyperledger-gerrit-archive","username":"rjones","ts":"2020-01-31T16:03:14.820Z"}
{"msg":"For versioning of the go items, I'm recommending we avoid using a vXXX tag or label because of the implication to the go tooling. While we want to avoid incompatible changes, if we go with a vXXX tag, the tools will assume we're using proper semver. (I don't think we're quite there yet.)\n\nStepping back even further, I initially said that I didn't think we needed branches cut and I think that was hasty. I believe it makes sense to have a release-2.0 and master branch for fabric-chaincode-go, fabric-protos, and fabric-protos-go. While we still want changes to be versioned, it will be nicer for consumers to depend on a branch associated with their target instead of pinning to commits.\n","username":"sykesm","ts":"2020-01-31T16:03:23.834Z"}
{"msg":"https://github.com/btl5037/fabric-gerrit I'm not sure if we ever moved it to the hyperledger or, but this is it","username":"BrettLogan","ts":"2020-01-31T16:03:49.165Z"}
{"msg":"https://github.com/btl5037/fabric-gerrit I'm not sure if we ever moved it to the hyperledger or, but this is it","username":"BrettLogan","ts":"2020-01-31T16:04:58.048Z"}
{"msg":"You might say I was wrong; others would say that my thinking has evolved...","username":"sykesm","ts":"2020-01-31T16:05:41.495Z"}
{"msg":"I unarchived https://github.com/hyperledger-gerrit-archive/hyperledger-gerrit-export if you want to do a PR or a github pages thing","username":"rjones","ts":"2020-01-31T16:06:40.949Z"}
{"msg":"added you as an admin.","username":"rjones","ts":"2020-01-31T16:09:09.430Z"}
{"msg":"Thank you, I'll open a PR to add the content to it","username":"BrettLogan","ts":"2020-01-31T16:23:47.086Z"}
{"msg":"Ok, maybe I'm just slow... the btl5037 link holds the review histories (it should really be moved to a hyperledger project rather than btl5037). What does Ry's link hold?","username":"dave.enyeart","ts":"2020-01-31T16:31:02.231Z"}
{"msg":"My link is the data Brett's link is based on","username":"rjones","ts":"2020-01-31T16:34:12.845Z"}
{"msg":"Ry's is the export of the data, which I then used to generate the markdown files. I need to migrate my markdown to his repo so the raw data and the markdown are next to each other and in a hyperledger repo","username":"BrettLogan","ts":"2020-01-31T16:34:14.968Z"}
{"msg":"everything is hiding in the git repos on Gerrit-named branches. Brett's code exposes it in a nicer way","username":"rjones","ts":"2020-01-31T16:35:00.087Z"}
{"msg":"got it.  yeah, being next to each other, and having logical names, would really help!","username":"dave.enyeart","ts":"2020-01-31T16:36:19.628Z"}
{"msg":"Brett: if you want to make a new repo over there, that just has one commit, that's fine. ","username":"rjones","ts":"2020-01-31T16:37:12.666Z"}
{"msg":"OK. You're all org owners now. Please tread lightly :)","username":"rjones","ts":"2020-01-31T16:39:18.435Z"}
{"msg":"I see. I'll start by taking a look at the test network.","username":"medikent","ts":"2020-01-31T16:47:05.850Z"}
{"msg":"A question after review the 20200122 contributor meeting video record. \nIn Transaction2 diagram, how could OrgA client know the content inside colB about AgreeToBuy? Does it mean the new `Implicit Collecion` feature can index `Asset1` across collections automatically?","username":"davidkhala","ts":"2020-02-05T03:55:36.682Z"}
{"msg":"test","username":"dave.enyeart","ts":"2020-02-05T05:37:16.000Z"}
{"msg":"@davidkhala Various options. Often times the transactors will agree on details out of band first, and then just settle the transaction on chain. If you want all the communication done on chain, then B can allow A to query on B's peer, or B can write the agreement to both B and A private collections. For a description of options, see https://hyperledger-fabric.readthedocs.io/en/release-2.0/private-data/private-data.html#private-data-sharing-patterns","username":"dave.enyeart","ts":"2020-02-05T05:38:37.942Z"}
{"msg":"for some reason, i couldn't reply in thread...","username":"dave.enyeart","ts":"2020-02-05T05:39:20.620Z"}
{"msg":"for some reason, i couldn't reply in thread...400 error","username":"dave.enyeart","ts":"2020-02-05T05:39:20.620Z"}
{"msg":"@here contributor meeting starting https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-02-05T13:59:43.326Z"}
{"msg":"Has joined the channel.","username":"mauricio","ts":"2020-02-05T14:01:06.297Z","type":"uj"}
{"msg":"I remember with gerrit I could issue commands to make builds rebuild by adding a comment on the CR, is there something similar with github and azure?","username":"awjh","ts":"2020-02-07T11:06:59.476Z"}
{"msg":"/azp run","username":"BrettLogan","ts":"2020-02-07T13:31:14.775Z"}
{"msg":"Has joined the channel.","username":"CarlitoIBM","ts":"2020-02-10T14:27:41.938Z","type":"uj"}
{"msg":"@BrettLogan reminder to move the gerrit markdown archive to hyperledger... multiple people have said they can't find the link... e.g @Senthil1 ","username":"dave.enyeart","ts":"2020-02-11T16:34:24.225Z"}
{"msg":"Thanks, I'll do it now @dave.enyeart ","username":"BrettLogan","ts":"2020-02-11T16:35:41.983Z"}
{"msg":"After about three years I thought it was time to add dockerhub information for our images :)","username":"dave.enyeart","ts":"2020-02-11T21:37:16.944Z"}
{"msg":"See the Overview section at https://hub.docker.com/r/hyperledger/fabric-peer","username":"dave.enyeart","ts":"2020-02-11T21:37:24.324Z"}
{"msg":"I've also pushed a PR to manage this content going forward: https://github.com/hyperledger/fabric/pull/662","username":"dave.enyeart","ts":"2020-02-11T21:37:51.166Z"}
{"msg":"Please provide your feedback in the PR and I'll make any edits, then apply it to the other images as well.","username":"dave.enyeart","ts":"2020-02-11T21:38:12.426Z"}
{"msg":"I'm also promoting the pattern of providing a core.yaml file to the container, rather than passing in a hundred environment variables :)","username":"dave.enyeart","ts":"2020-02-11T21:38:51.932Z"}
{"msg":"@dave.enyeart I added two comments that I don't feel super strong about.","username":"rjones","ts":"2020-02-11T21:56:17.968Z"}
{"msg":"Anybody know why the existing fabric samples mount volume `- /var/run/:/host/var/run/` ?","username":"dave.enyeart","ts":"2020-02-11T22:11:25.081Z"}
{"msg":"https://github.com/hyperledger/fabric-samples/blob/master/test-network/docker/docker-compose-e2e.yaml#L127","username":"dave.enyeart","ts":"2020-02-11T22:11:29.101Z"}
{"msg":"I did not include that mount in the new docker instructions... didnt seem necessary","username":"dave.enyeart","ts":"2020-02-11T22:12:08.756Z"}
{"msg":"talk to docker socket?","username":"MHBauer","ts":"2020-02-11T22:12:11.926Z"}
{"msg":"I believe Morgan is correct, its so the peer can make use of the hosts docker socket","username":"BrettLogan","ts":"2020-02-11T22:40:14.018Z"}
{"msg":"ok, i'll add it","username":"dave.enyeart","ts":"2020-02-11T22:42:48.004Z"}
{"msg":"I don't know why they mount all of `/var/run` across though, the only thing needed is docker.sock `-v /var/run/docker.sock:/var/run/docker.sock`","username":"BrettLogan","ts":"2020-02-11T22:46:23.804Z"}
{"msg":"I don't know why they mount the whole thing across though, the correct volume is `-v /var/run/docker.sock:/var/run/docker.sock`","username":"BrettLogan","ts":"2020-02-11T22:46:23.804Z"}
{"msg":"I don't know why they mount the whole `/var/run` across though, the correct volume is `-v /var/run/docker.sock:/var/run/docker.sock`","username":"BrettLogan","ts":"2020-02-11T22:46:23.804Z"}
{"msg":"I don't know why they mount the whole `/var/run` across though, the only thing needed is docker.sock `-v /var/run/docker.sock:/var/run/docker.sock`","username":"BrettLogan","ts":"2020-02-11T22:46:23.804Z"}
{"msg":"That would also make it explicit for people to what is being mounted, instead of it being magic","username":"BrettLogan","ts":"2020-02-11T22:47:55.053Z"}
{"msg":"docker is literally the only thing I know about, and I've seen it enough to be my first guess. no idea if it's correct.","username":"MHBauer","ts":"2020-02-11T22:59:53.218Z"}
{"msg":"I tried running the test network while mounting only docker.sock - I hit an error when trying to commit the chaincode definition","username":"negupta","ts":"2020-02-12T03:11:47.588Z"}
{"msg":"Error: failed to retrieve endorser client for commit: endorser client failed to connect to localhost:9051: failed to create new connection: context deadline exceeded","username":"negupta","ts":"2020-02-12T03:12:21.392Z"}
{"msg":"Did you mount it to `/var/run/docker.sock` or `/host/var/run/docker.sock`? Wondering, as I noticed they were mounting it to /host","username":"BrettLogan","ts":"2020-02-12T03:54:26.610Z"}
{"msg":"Did you mount it to /var/run/docker.sock or /host/var/run/docker.sock? Wondering, as I noticed they were mounting it to /host","username":"BrettLogan","ts":"2020-02-12T03:54:26.610Z"}
{"msg":"Some quick googling, it looks like it looks for it in /host when a client connects to the socket","username":"BrettLogan","ts":"2020-02-12T03:59:11.668Z"}
{"msg":"I mounted ` - /var/run/docker.sock:/host/var/run/docker.sock`","username":"negupta","ts":"2020-02-12T14:16:52.233Z"}
{"msg":"Hello All,\nDoes Fabric supports chinese letters in enrollment id during enrollment?\nI tried to register & enroll a user with the name 苏南 on Fabric-CA. The registration is getting successful but getting below error\n```\nerror: [FabricCAClientService.js]: Failed to enroll 苏南, error:%o message=Enrollment failed with errors [[{\"code\":0,\"message\":\"asn1: invalid UTF-8 string\"}]], stack=Error: Enrollment failed with errors [[{\"code\":0,\"message\":\"asn1: invalid UTF-8 string\"}]]\n```\nThe error clearly says that the letters are not supported in UTF-8 encoding. Can I change the default encoding while enrolling? If yes, which enoding scheme do I've to use to support chinese letters?","username":"KartikChauhan","ts":"2020-02-13T11:36:19.010Z"}
{"msg":"Howdy Contributors and Maintainers!  Are you wondering about tapping into Developer marketing for your group or project?  Do you have a blog post idea?  An awesome announcement? Please attend our Contributor/marketing meeting!  https://wiki.hyperledger.org/display/Marketing/2020-02-19+Meeting+notes","username":"Silona","ts":"2020-02-13T18:23:48.836Z"}
{"msg":"Can we create channels dynamically? I mean we create channel.tx file using cryptogen tool first which is a manual process. Can we do it using SDK? ","username":"ZainabM","ts":"2020-02-14T06:06:44.501Z"}
{"msg":"Can we create channels dynamically? I mean we create channel.tx file using cryptogen tool first which is a manual process. Can we do it using SDK?  \nAny other idea is also welcome.","username":"ZainabM","ts":"2020-02-14T06:06:44.501Z"}
{"msg":"Can we create channels dynamically? I mean we create channel.tx file using configtxgen tool first which is a manual process. Can we do it using SDK?  \nAny other idea is also welcome.","username":"ZainabM","ts":"2020-02-14T06:06:44.501Z"}
{"msg":"Has joined the channel.","username":"japidei","ts":"2020-02-14T07:32:57.237Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Satoshi24","ts":"2020-02-14T07:47:18.254Z","type":"uj"}
{"msg":"@KartikChauhan @ZainabM Good questions, but please reserve this channel for maintainer topics. If you cannot get an answer in other channels, you could use stackoverflow or mailing list.","username":"dave.enyeart","ts":"2020-02-14T13:31:16.938Z"}
{"msg":"v1.4.5 release notes for review - https://github.com/hyperledger/fabric/pull/670","username":"dave.enyeart","ts":"2020-02-14T13:31:53.470Z"}
{"msg":"We expect to release v1.4.5 next week.","username":"dave.enyeart","ts":"2020-02-14T13:32:08.224Z"}
{"msg":"Are you wondering about tapping into Developer marketing for your group or project?  Do you have a blog post idea?  An awesome announcement? Please attend TOMORROW!  https://wiki.hyperledger.org/display/Marketing/2020-02-19+Meeting+notes","username":"Silona","ts":"2020-02-17T22:18:13.393Z"}
{"msg":"Has joined the channel.","username":"nekia","ts":"2020-02-18T03:22:50.534Z","type":"uj"}
{"msg":"Hi, can I propose an agenda topic for the next contributors meeting?","username":"nekia","ts":"2020-02-18T03:26:35.765Z"}
{"msg":"Topic is about the proposal of block archiving for Hyperledger Fabric, that is one of projects in Labs. [HLF Block Archiving - Google Slides](https://docs.google.com/presentation/d/1tzD6l8VwLUeDytYeEChqigsIaqMw4Z2NQj9pNah8Msc/edit?usp=sharing&authuser=0)","username":"nekia","ts":"2020-02-18T03:29:41.622Z"}
{"msg":"Presenter is Anand Konchery and Atsushi Neki. It will be enough 15 - 20 min for sharing and discussing.","username":"nekia","ts":"2020-02-18T03:51:18.839Z"}
{"msg":"[In this discussion at Mailing list](https://lists.hyperledger.org/g/fabric/topic/58600016?p=Created,,,20,1,0,0), it’s pointed out that our assumption is incorrect. So now we’ve redesigned the logic and we’re about to move forward to development. Before moving on to the development, we think it had better to have more feedback for the new approach from the community.\n","username":"nekia","ts":"2020-02-18T03:56:53.394Z"}
{"msg":"@dave.enyeart ","username":"nekia","ts":"2020-02-18T03:57:01.297Z"}
{"msg":"We are in AEDT.","username":"nekia","ts":"2020-02-18T04:00:06.601Z"}
{"msg":"Has joined the channel.","username":"anand.fast","ts":"2020-02-18T05:55:39.610Z","type":"uj"}
{"msg":"@nekia Good timing, there is a contributor meeting tomorrow (9am US Eastern). would you be ready for that one?","username":"dave.enyeart","ts":"2020-02-18T15:03:00.471Z"}
{"msg":"@dave.enyeart We would like to talk about Fabric Private Chaincode and our upcoming RFC on the meeting tomorrow. Presenters will be Jeb Linton, Marcus Brandenburger. They will need about 20 min. WIll that be possible to add to the agenda? One of the presenters has a conflict, so earlier in the meeting schedule would be preferable.","username":"swetha","ts":"2020-02-18T16:56:02.304Z"}
{"msg":"@swetha yep, you all can go first after we do some quick maintainer business","username":"dave.enyeart","ts":"2020-02-18T17:02:15.819Z"}
{"msg":"Thanks!","username":"swetha","ts":"2020-02-18T18:56:49.350Z"}
{"msg":"Thanks, we are ready for the meeting tomorrow.","username":"nekia","ts":"2020-02-18T22:55:23.222Z"}
{"msg":"Ok @swetha @nekia , you are both on in one hour!","username":"dave.enyeart","ts":"2020-02-19T13:04:36.009Z"}
{"msg":"@here Contributor Meeting starting in a few minutes: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-02-19T13:57:49.066Z"}
{"msg":"We plan to release fabric and fabric-ca v1.4.5 today... does anybody have any final PRs to go in?","username":"dave.enyeart","ts":"2020-02-19T17:01:41.512Z"}
{"msg":"fabric release PR - please approve: https://github.com/hyperledger/fabric/pull/695","username":"dave.enyeart","ts":"2020-02-19T19:45:53.016Z"}
{"msg":"@BrettLogan who will trigger this job? https://dev.azure.com/Hyperledger/Fabric/_build?definitionId=52&_a=summary ","username":"rjones","ts":"2020-02-19T21:11:03.199Z"}
{"msg":"@rjones I do, but Dave and Matt also have permission.","username":"BrettLogan","ts":"2020-02-19T21:12:09.486Z"}
{"msg":"Starting the release process now","username":"BrettLogan","ts":"2020-02-19T21:15:54.088Z"}
{"msg":"the stages view is nice","username":"rjones","ts":"2020-02-19T21:18:12.256Z"}
{"msg":"Very, I always enjoy watching it","username":"BrettLogan","ts":"2020-02-19T21:19:13.801Z"}
{"msg":"Release is done","username":"BrettLogan","ts":"2020-02-19T21:35:14.094Z"}
{"msg":"@nekia Where can I find more info about HLF Block Archiving?","username":"KartikChauhan","ts":"2020-02-21T09:18:23.582Z"}
{"msg":"You can find more info at [Github repo](https://github.com/hyperledger-labs/fabric-block-archiving) besides [the above slide](https://docs.google.com/presentation/d/1tzD6l8VwLUeDytYeEChqigsIaqMw4Z2NQj9pNah8Msc/edit?usp=sharing) @KartikChauhan ","username":"nekia","ts":"2020-02-21T13:26:33.745Z"}
{"msg":"I cloned binaries and fabric-samples repo for v1.4.5 from the documentation and I don't see any basic-network directory there. Could you please provide any reason to why it has been removed in this version?","username":"KartikChauhan","ts":"2020-02-24T10:43:07.000Z"}
{"msg":"We had first-network, basic-network, and now test-network. The intent is to consolidate all three into test-network in master. Actually release-1.4 branch still has it: https://github.com/hyperledger/fabric-samples/tree/release-1.4/basic-network. Your issue is probably that we haven't tagged fabric-samples v1.4.5 yet, so you've probably got master. You can checkout v1.4.4 or just release-1.4 until we tag it.","username":"dave.enyeart","ts":"2020-02-24T12:52:48.601Z"}
{"msg":"@sstone1 @heatherp Can we tag fabric-samples v1.4.5 now? Anything else you want merged there first?","username":"dave.enyeart","ts":"2020-02-24T12:53:37.921Z"}
{"msg":"Not that I can think of","username":"heatherp","ts":"2020-02-24T13:06:29.268Z"}
{"msg":"Since releasing v1.4.5 last week, a few more fixes have come in. I think it would be good to scoop these fixes up in a v1.4.6 release... no need to wait a couple months.","username":"dave.enyeart","ts":"2020-02-25T11:26:44.304Z"}
{"msg":"v1.4.6 release notes: https://github.com/hyperledger/fabric/pull/736","username":"dave.enyeart","ts":"2020-02-25T11:26:52.616Z"}
{"msg":"We also expect a v2.0.1 release this week to deliver the first set of fixes on v2.0","username":"dave.enyeart","ts":"2020-02-25T11:27:49.660Z"}
{"msg":"@dave.enyeart was there a decision on homebrew? I have this pending: https://github.com/hyperledger/homebrew-fabric/pull/12 but if Fabric is going to curtail support, we could put the repo into the archive.","username":"rjones","ts":"2020-02-25T15:42:51.783Z"}
{"msg":"@cbf do you have thoughts on this? I think the homebrew came from you?","username":"dave.enyeart","ts":"2020-02-25T17:38:21.332Z"}
{"msg":"could i get a review for v1.4.6 release notes: https://github.com/hyperledger/fabric/pull/736","username":"dave.enyeart","ts":"2020-02-25T17:38:46.060Z"}
{"msg":"We initially proposed archiving homebrew, but Gari asked that we keep it. So updating it is should probably be done","username":"BrettLogan","ts":"2020-02-25T18:01:58.733Z"}
{"msg":"OK. Feel free to merge 12 and I can do the next update or you can add it to CI","username":"rjones","ts":"2020-02-25T18:07:26.364Z"}
{"msg":"Fabric and Fabric CA v1.4.6 released today. All good.","username":"dave.enyeart","ts":"2020-02-25T23:20:48.283Z"}
{"msg":"To continue our release saga... there are some important fixes in release-2.0 since fabric v2.0.0 release, so we'll release v2.0.1 this week. Does anybody have any important PRs to merge before we release v2.0.1?","username":"dave.enyeart","ts":"2020-02-26T14:29:56.655Z"}
{"msg":"And as a reminder...we're back on track with minor releases each quarter, so that means v2.1 is scheduled for April.","username":"dave.enyeart","ts":"2020-02-26T14:30:27.649Z"}
{"msg":"v2.0.1 release PR https://github.com/hyperledger/fabric/pull/748","username":"dave.enyeart","ts":"2020-02-26T19:57:13.049Z"}
{"msg":"v2.0.1 release PR https://github.com/hyperledger/fabric/pull/750","username":"dave.enyeart","ts":"2020-02-26T19:57:13.049Z"}
{"msg":"please review release notes","username":"dave.enyeart","ts":"2020-02-26T19:57:35.065Z"}
{"msg":"v2.0.1 released. all good.","username":"dave.enyeart","ts":"2020-02-26T22:20:54.511Z"}
{"msg":"With several people traveling next week to Hyperledger Global Forum, I propose we cancel the March 4th contributor meeting. Are there any topics that can't wait for the March 18th meeting?","username":"dave.enyeart","ts":"2020-02-28T21:56:15.631Z"}
{"msg":"We merged Joe's new Deploying a production network overview topic last week. Here's the first attempt at describing the process to deploy a CA using the binaries: https://github.com/hyperledger/fabric/pull/764. Comments welcome!","username":"pandrejko","ts":"2020-02-28T22:09:48.546Z"}
{"msg":"Reminder - Fabric contributor meeting canceled this week.","username":"dave.enyeart","ts":"2020-03-03T13:59:28.246Z"}
{"msg":"I've cleaned up the 'roadmap' dashboard for v2.x items: https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104","username":"dave.enyeart","ts":"2020-03-03T13:59:59.872Z"}
{"msg":"Has joined the channel.","username":"ahmedsajid","ts":"2020-03-04T13:57:05.131Z","type":"uj"}
{"msg":"Hello, I'm using basic network sample of 1.4.2 binaries. I did chain code upgrades multiple times. I need a help on this.\n1. Can we remove/delete  old cc containers after cc upgrade ? E.x. mycc version 1.0 later mycc version 1.1 , 1.2\nCan I delete version 1.0 container ? \n2. Its vague , My cc   upgrade taking/ creating random containers from previously deployed chain code.  I don't know why ? Don't know how to trace it.\nThe current  workaround i do, full  fab network down with volume prune  and   remove containers from docker image rm  commands. Then start again from fresh...\nAppreciate you help","username":"ravinayag","ts":"2020-03-07T03:47:29.037Z"}
{"msg":"Hello, I'm using basic network sample of 1.4.2 binaries. I did chain code upgrades multiple times. I need a help on this.\n1. Can we remove/delete  old cc containers after cc upgrade ? E.x. mycc version 1.0 later mycc version 1.1 , 1.2\nCan I delete version 1.0 container ? \n2. Its vague , My cc   upgrade taking/ creating random containers from previously deployed chain code.  I don't know why ? Don't know how to trace it.\nThe current  workaround i do, full  fab network down with volume prune  and   remove containers from docker image rm  commands. Then start again from fresh... Is it expected behaviour. ? \nAppreciate your help","username":"ravinayag","ts":"2020-03-07T03:47:29.037Z"}
{"msg":"I posted last year about starting efforts on our TrustBloc project. I thought it might be interesting to some to see an update about our Fabric-related progress. I’ve shared the update and links to the repos at https://docs.google.com/document/d/1b5AHZyklexolzUIZ4Yz_Ma1atKM2mudpD6-SNplGJu0/","username":"troyronda","ts":"2020-03-12T19:34:24.872Z"}
{"msg":"Has joined the channel.","username":"Abhishekkishor","ts":"2020-03-12T19:41:03.884Z","type":"uj"}
{"msg":"```\nWhat’s still upcoming?\nCluster and cache optimizations.\nInvestigate local collection policy.   <------ \nInvestigate Fabric 2.0 chaincode lifecycle.\nFormal release efforts including performance and resiliency.\nUpdate Sidetree implementation as formal spec is being created.\n```","username":"yacovm","ts":"2020-03-12T19:49:12.739Z"}
{"msg":"What do you mean by that, @troyronda  \"Investigate local collection policy\" ? ","username":"yacovm","ts":"2020-03-12T19:49:25.671Z"}
{"msg":"Data that is kept to an organization. Might have named that wrong in the doc.","username":"troyronda","ts":"2020-03-12T20:02:14.042Z"}
{"msg":"Agenda for March 18th Contributor Meeting:","username":"dave.enyeart","ts":"2020-03-18T01:16:36.981Z"}
{"msg":"- Release update - Dave Enyeart\n- Update on channel config APIs - Danny Cao\n- Hedera Consensus Service - Donald Thibeau","username":"dave.enyeart","ts":"2020-03-18T01:16:53.120Z"}
{"msg":"- Release update, LTS RFC https://github.com/hyperledger/fabric-rfcs/pull/23/files?short_path=2816768#diff-28167684f06775a34bcbd29070fc8f4a - Dave Enyeart\n- Update on channel config APIs - Danny Cao\n- Hedera Consensus Service - Donald Thibeau","username":"dave.enyeart","ts":"2020-03-18T01:16:53.120Z"}
{"msg":"As always, agendas, details, and recordings available at https://wiki.hyperledger.org/display/fabric/Contributor+Meetings","username":"dave.enyeart","ts":"2020-03-18T01:17:21.810Z"}
{"msg":"@here Contributor meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-03-18T12:59:21.864Z"}
{"msg":"Hello maintainers, here is an RFC for your review:\nhttps://github.com/hyperledger/fabric-rfcs/pull/24","username":"tock","ts":"2020-03-22T07:50:34.129Z"}
{"msg":"Hello maintainers, here is an RFC for your review:\nhttps://github.com/hyperledger/fabric-rfcs/pull/24\nChannel participation API without system channel","username":"tock","ts":"2020-03-22T07:50:34.129Z"}
{"msg":"Hello maintainers, here is an RFC for your review:\nhttps://github.com/hyperledger/fabric-rfcs/pull/24\nChannel participation API without system channel - joining, removing, and listing channels without the system channel.","username":"tock","ts":"2020-03-22T07:50:34.129Z"}
{"msg":"@here Release update - this is the last week for dev work for the Fabric end-of-Q1 release. We expect to create branch release-2.1 next week, and then release 2.1 in mid-April as soon as we are comfortable with the release from a system test perspective (e..g. automated upgrade tests are being updated currently).\nAs we approach a release boundary, be cautious about merges, you may want to hold off on any big changes for master until after we create the release-2.1 branch.\nI'll highlight three RFCs - we welcome feedback comments from all, and require maintainers to review:","username":"dave.enyeart","ts":"2020-03-23T15:00:52.292Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/pull/25 config transaction library - we'd like to fast-track this so that we can remove the  new config library code from Fabric repo before creating release-2.1 branch. The config library would go to a different repo since it is not tied to Fabric releases.","username":"dave.enyeart","ts":"2020-03-23T15:00:59.565Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/pull/25 config transaction library - intent is to shift the library from Fabric to a new repo where clients can consume it","username":"dave.enyeart","ts":"2020-03-23T15:00:59.565Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/pull/25 config transaction library - intent is to shift the library from Fabric to a new repo, since it is not tied to fabric releases and so that clients can more easily consume it","username":"dave.enyeart","ts":"2020-03-23T15:00:59.565Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/pull/23 LTS release stratgy - we need to finalize this RFC and then move on to the discussion of which release will be LTS for v2.x.","username":"dave.enyeart","ts":"2020-03-23T15:01:05.884Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/pull/24 Channel participation API without system channel - Not for 2.1 timeframe, but we ned to make progress on the RFC.","username":"dave.enyeart","ts":"2020-03-23T15:01:11.306Z"}
{"msg":"https://github.com/hyperledger/fabric-rfcs/pull/24 Channel participation API without system channel - Not for 2.1 timeframe, but we need to make progress on the RFC.","username":"dave.enyeart","ts":"2020-03-23T15:01:11.306Z"}
{"msg":"Nominate Danny Cao and Brett Logan as Fabric maintainers","username":"dave.enyeart","ts":"2020-03-26T14:15:36.778Z"}
{"msg":"@here  Nominate Danny Cao and Brett Logan as Fabric maintainers","username":"dave.enyeart","ts":"2020-03-26T14:15:36.778Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/921","username":"dave.enyeart","ts":"2020-03-26T14:15:38.287Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/920","username":"dave.enyeart","ts":"2020-03-26T14:15:47.038Z"}
{"msg":"Please add your approval if you agree","username":"dave.enyeart","ts":"2020-03-26T14:15:52.273Z"}
{"msg":"Is https://jira.hyperledger.org/browse/FAB-10562 still a relevant issue? Is there discussion somewhere?","username":"MHBauer","ts":"2020-03-27T18:54:59.998Z"}
{"msg":"@sykesm is our expert in this area, so I've mentioned him in the Jira comment","username":"dave.enyeart","ts":"2020-03-28T12:06:53.864Z"}
{"msg":"Concerning the maintainer nominations, I've realized that the Contribution guide does not mention anything about criteria for becoming a maintainer. So, what is the criteria?","username":"dave.enyeart","ts":"2020-03-28T12:59:33.593Z"}
{"msg":"First, what is a maintainer? \"Maintainers are responsible for reviewing and merging all patches submitted for review, and they guide the overall technical direction of the project\".","username":"dave.enyeart","ts":"2020-03-28T12:59:40.549Z"}
{"msg":"Therefore, what we look for is a demonstrated track record of PR reviews (both quality and quantity), demonstrated thought leadership in the project, and demonstrated shepherding of project work and contributors.","username":"dave.enyeart","ts":"2020-03-28T12:59:52.535Z"}
{"msg":"Basically, if you are already acting like a maintainer, the nomination should be a mere formality to enable the commit privileges.","username":"dave.enyeart","ts":"2020-03-28T12:59:57.167Z"}
{"msg":"I've also opened a PR to clarify the criteria, please add your feedback/comments to the PR so that we guide future maintainers and nominations: https://github.com/hyperledger/fabric/pull/931","username":"dave.enyeart","ts":"2020-03-28T13:00:39.354Z"}
{"msg":"an attempt\nhttps://github.com/hyperledger/fabric/pull/954 \nlast case stuck on is externalbuilder. looking for some ideas.","username":"MHBauer","ts":"2020-03-31T15:22:14.670Z"}
{"msg":"@here I've created release-2.1 branch for fabric, fabric-protos, fabric-protos-go repositories","username":"dave.enyeart","ts":"2020-03-31T18:12:12.217Z"}
{"msg":"We intend to do the same for fabric-test and fabric-samples","username":"dave.enyeart","ts":"2020-03-31T18:12:31.074Z"}
{"msg":"Obviously new work continues to go into master, and we judicially backport anything important to release-2.1","username":"dave.enyeart","ts":"2020-03-31T18:16:00.200Z"}
{"msg":"Obviously new work continues to go into master, and we judiciously backport anything important to release-2.1","username":"dave.enyeart","ts":"2020-03-31T18:16:00.200Z"}
{"msg":"As of now, I see no point in a v2.0.2, so I consider release-2.0 'done', no need for backports to it","username":"dave.enyeart","ts":"2020-03-31T18:16:09.884Z"}
{"msg":"As of now, I see no point in a v2.0.2, so I consider release-2.0 'done' from code perspective (I expect any further backports would be for things like doc fixes) ","username":"dave.enyeart","ts":"2020-03-31T18:16:09.884Z"}
{"msg":"is there a way to enable the azure build on my fork so I don't have to push a PR to see what happens? It's also way faster than building locally.","username":"MHBauer","ts":"2020-03-31T20:41:01.285Z"}
{"msg":"you can set it up on your own, if that's what you mean. Anyone with a GitHub account can create an Azure org for free - it's what I've done to test some stuff","username":"rjones","ts":"2020-03-31T20:51:35.399Z"}
{"msg":"Enabling builds on forks makes exfiltration of secrets easy","username":"rjones","ts":"2020-03-31T20:52:34.200Z"}
{"msg":"@here Contributor meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-04-01T12:58:52.065Z"}
{"msg":"Agenda:","username":"dave.enyeart","ts":"2020-04-01T12:58:58.974Z"}
{"msg":"Release and RFC update","username":"dave.enyeart","ts":"2020-04-01T12:59:02.074Z"}
{"msg":"Channel participation API without system channel - Yoav Tock","username":"dave.enyeart","ts":"2020-04-01T12:59:09.448Z"}
{"msg":"Are slides from Yoav available? ","username":"VipinB","ts":"2020-04-01T13:36:11.613Z"}
{"msg":"@tock Thanks for today's review. It sounds like there is consensus on the RFC, just need to close out the RFC comments and then we can put it in Final Comment Period. Therefore I think you could go ahead and open a Jira Epic and link the related Stories to it. You could post the charts in the Epic.","username":"dave.enyeart","ts":"2020-04-01T16:32:46.194Z"}
{"msg":"@caod @BrettLogan Congratulations on the maintainer nomination approval! @rjones let us know if we need to submit a formal request for adding the permissions.","username":"dave.enyeart","ts":"2020-04-01T16:34:52.347Z"}
{"msg":"Thank you Dave, especially for the nomination!","username":"BrettLogan","ts":"2020-04-01T16:42:34.464Z"}
{"msg":"Ry will need to update the core-maintainers and core-release-managers teams in GitHub","username":"BrettLogan","ts":"2020-04-01T16:43:49.289Z"}
{"msg":"eh?","username":"rjones","ts":"2020-04-01T16:47:17.611Z"}
{"msg":"@dave.enyeart @BrettLogan @caod added","username":"rjones","ts":"2020-04-01T16:47:17.611Z"}
{"msg":"Thanks Ry!","username":"BrettLogan","ts":"2020-04-01T16:50:05.168Z"}
{"msg":"thank you for being a contributor!","username":"rjones","ts":"2020-04-01T16:50:30.008Z"}
{"msg":"Thanks Dave. Will do.","username":"tock","ts":"2020-04-02T06:02:34.177Z"}
{"msg":"I'll post the slides in the Epic I am going to open.","username":"tock","ts":"2020-04-02T06:03:12.233Z"}
{"msg":"Has joined the channel.","username":"nileshv","ts":"2020-04-02T06:09:23.920Z","type":"uj"}
{"msg":"Thanks! ","username":"VipinB","ts":"2020-04-02T14:19:27.784Z"}
{"msg":"Ry, it doesn't seem that Danny and I have been added to the `fabric-core-maintainers` team in github","username":"BrettLogan","ts":"2020-04-02T14:50:03.809Z"}
{"msg":"My addition to release-managers worked","username":"BrettLogan","ts":"2020-04-02T14:50:25.271Z"}
{"msg":"I didn't know that your nominations succeeded","username":"rjones","ts":"2020-04-02T14:51:05.517Z"}
{"msg":"Ah, sorry, should have mentioned that, home confinement is getting to me","username":"BrettLogan","ts":"2020-04-02T14:52:19.717Z"}
{"msg":"Here it is: https://jira.hyperledger.org/browse/FAB-17712","username":"tock","ts":"2020-04-05T07:51:13.240Z"}
{"msg":"Here it is: https://jira.hyperledger.org/browse/FAB-17712","username":"tock","ts":"2020-04-05T07:51:56.798Z"}
{"msg":"Has joined the channel.","username":"jramps9","ts":"2020-04-07T15:50:54.081Z","type":"uj"}
{"msg":"Hello Fabric maintainers! Friendly reminder to pls join us for the Marketing Committee-DevRel call tomorrow, 4/8 at 9am PT. This is a great opportunity to learn how you can get involved in many aspects of Hyperledger marketing including overall messaging, events, content, social media, PR etc. Feel free to add items to the agenda: https://wiki.hyperledger.org/x/_QjcAQ Hope to see you there :slight_smile: ","username":"jramps9","ts":"2020-04-07T15:50:55.085Z"}
{"msg":"@here Proposal to retire inactive maintainers: https://github.com/hyperledger/fabric/pull/1028\nPlease add your approval if you agree.\nThis is not a role that I enjoy, but our policy is to retire inactive maintainers since it is often challenging to get a majority opinion on important maintainer decisions.","username":"dave.enyeart","ts":"2020-04-08T16:08:40.726Z"}
{"msg":"@here Proposal to retire inactive maintainers: https://github.com/hyperledger/fabric/pull/1028\nPlease add your approval if you agree.\nThis is not a task that I enjoy, but our policy is to retire inactive maintainers since it is often challenging to get a majority opinion on important maintainer decisions.","username":"dave.enyeart","ts":"2020-04-08T16:08:40.726Z"}
{"msg":"Hi - talking with @BrettLogan about putting the org in the code; I ran `peribolos` against our orgs. [The output here may be of interest](https://github.com/ryjones/orgstuff). We're also discussing how to use Probot to put the org in the org for other parts - peribolos and Probot serve similar, but not identical, roles, and I think we'd need both","username":"rjones","ts":"2020-04-10T17:34:37.220Z"}
{"msg":"What Ry and I are trying to achieve here is GitHub configuration as code. So the repository settings would be managed by a configuration file contained within the repo. This way instead of people just changing repository settings behind the scenes (and no one knowing who did it), a PR is submitted to do things like: enable GitHub actions, change the rules for requirements for a merge, or what branches are covered under the checks policies, and what those policies are. This would also cover the members of teams. So when we need to add or remove people from team (like the maintainers) instead of going to Ry and asking him to add people, we could simply open a PR to edit the team configuration.","username":"BrettLogan","ts":"2020-04-10T18:52:17.318Z"}
{"msg":"What Ry and I are trying to achieve here is GitHub configuration as code. So the repository settings would be managed by a configuration file contained within the repo. This way instead of people just changing repository settings behind the scenes, a PR is submitted to do things like: enable GitHub actions, change the rules for requirements for a merge, or what branches are covered under the checks policies, and what those policies are. This would also cover the members of teams. So when we need to add or remove people from team (like the maintainers) instead of going to Ry and asking him to add people, we could simply open a PR to edit the team configuration.","username":"BrettLogan","ts":"2020-04-10T18:52:17.318Z"}
{"msg":"+100","username":"cbf","ts":"2020-04-14T13:16:57.245Z"}
{"msg":"@here Any topics you want to add to the contributor meeting agenda for tomorrow?","username":"dave.enyeart","ts":"2020-04-14T19:16:07.066Z"}
{"msg":"Can I share the latest status of our block archiving project to get feedback on it from the community? It'll be enough 10-15min . Anand Konchery and Atsushi Neki will attend it.","username":"nekia","ts":"2020-04-15T00:44:49.289Z"}
{"msg":"@dave.enyeart ","username":"nekia","ts":"2020-04-15T00:44:55.980Z"}
{"msg":"@nekia sure thing","username":"dave.enyeart","ts":"2020-04-15T11:52:41.201Z"}
{"msg":"Thanks","username":"nekia","ts":"2020-04-15T12:02:57.074Z"}
{"msg":"https://docs.google.com/presentation/d/10yBF0Nrprdp2qjtBqJY7un_HU40FjQFVX86UVsuvSHA/edit?usp=sharing\nThis is slide of the topic we'd like to share.","username":"nekia","ts":"2020-04-15T12:48:29.055Z"}
{"msg":"For those who usually expect @dave.enyeart to poste it here (likie myself) contributor meeting starting https://zoom.us/my/hyperledger.community.3","username":"jyellick","ts":"2020-04-15T13:04:04.839Z"}
{"msg":"For those who usually expect @dave.enyeart to post it here (like myself) contributor meeting starting https://zoom.us/my/hyperledger.community.3","username":"jyellick","ts":"2020-04-15T13:04:04.839Z"}
{"msg":"https://adlrocha.substack.com/p/adlrocha-performance-best-practices","username":"lehors","ts":"2020-04-15T13:11:26.399Z"}
{"msg":"Here is the reference to the series Jessica referred to: https://adlrocha.substack.com/p/adlrocha-performance-best-practices","username":"lehors","ts":"2020-04-15T13:11:26.399Z"}
{"msg":"@dave.enyeart was the host issue figured out?","username":"rjones","ts":"2020-04-15T13:38:14.068Z"}
{"msg":"@rjones sadly no... not able to record today's since we didn't have a host code","username":"dave.enyeart","ts":"2020-04-15T13:47:14.407Z"}
{"msg":"the host code is the same, I verified in the UI. What is different is apparently you have to log in with your zoom account to use it. I'll document this.","username":"rjones","ts":"2020-04-15T14:55:02.605Z"}
{"msg":"(I wasn't able to claim host, either)","username":"rjones","ts":"2020-04-15T14:55:14.482Z"}
{"msg":"I just realized that we haven't tagged fabric-samples for 2.x since 2.0.0-beta, as we release fabric 2.1 I think we should tag and have a 2.1 release for fabric-samples as well","username":"lehors","ts":"2020-04-16T13:52:36.045Z"}
{"msg":"a lot of the samples have been updated for 2.0 and won't even work with 1.4 anymore","username":"lehors","ts":"2020-04-16T13:52:55.572Z"}
{"msg":"@lehors several of us discussed today and our plan is to tag current fabric-samples master with v2.1.0, but not create a release-2.1 branch. Basically just keep master going and only create a release branch if/when something incompatible comes up.","username":"dave.enyeart","ts":"2020-04-16T19:48:24.654Z"}
{"msg":"people that download fabric using our curl/bootstrap script would get the known working v2.1.0 tag","username":"dave.enyeart","ts":"2020-04-16T19:48:56.169Z"}
{"msg":"i can also tag for v2.0.0... we've been waiting to do that until some of the recent test network PRs merged, which is done now","username":"dave.enyeart","ts":"2020-04-16T19:49:47.887Z"}
{"msg":"sound good?","username":"dave.enyeart","ts":"2020-04-16T19:49:50.117Z"}
{"msg":"I think this is the final commit needed before tagging fabric-samples:  https://github.com/hyperledger/fabric-samples/pull/161","username":"dave.enyeart","ts":"2020-04-16T20:54:18.579Z"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v2.1 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/8091\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2020-04-17T03:08:10.799Z"}
{"msg":"we alwast get that error while running script .error: pathspec 'v2.1.0' did not match any file(s) known to git.thesre should be tag with relevent version on fabric-samples. Is fabric-sample master branch is pointed to 2.1.0 ? \n","username":"knagware9","ts":"2020-04-17T12:23:01.364Z"}
{"msg":"yes, fabric-samples now uses v2.1.0 dependencies, we'll tag as v2.1.0 shortly so that the error message goes away...","username":"dave.enyeart","ts":"2020-04-17T12:36:18.860Z"}
{"msg":"yes, fabric-samples now uses v2.1.0 dependencies, it is now tagged so you should be all good now.","username":"dave.enyeart","ts":"2020-04-17T12:36:18.860Z"}
{"msg":"Hey, all. Paul O'Mahoney figured out why people couldn't claim host: you need to be running the most recent Zoom client. @dave.enyeart ","username":"rjones","ts":"2020-04-17T17:20:57.971Z"}
{"msg":"This explains why I was unable to claim host last Friday and was able to on Monday with no account settings changed.","username":"rjones","ts":"2020-04-17T17:21:40.296Z"}
{"msg":"yep, updating my Zoom client worked!","username":"dave.enyeart","ts":"2020-04-17T20:18:17.818Z"}
{"msg":"yep, updating my Zoom client fixed it!","username":"dave.enyeart","ts":"2020-04-17T20:18:17.818Z"}
{"msg":"Has left the channel.","username":"ahmedsajid","ts":"2020-04-21T20:56:27.990Z","type":"ul"}
{"msg":"@rjones Looks like you just created a v1.0.6 branch which is just master?","username":"jyellick","ts":"2020-04-22T13:49:58.800Z"}
{"msg":"@rjones Looks like you just created a v1.0.6 branch which is just master? (Or maybe I accidentally did, I was just checking something on v1.0.6, seems like an odd coincidence that it suddenly appeared)","username":"jyellick","ts":"2020-04-22T13:49:58.800Z"}
{"msg":"Actually, I'm really pretty sure this was me who accidentally created this branch.  Apparently if you type a branch name and hit enter in the UI, and it doesn't match any branch name, it creates that branch.  Seems like kind of undesirable behavior.","username":"jyellick","ts":"2020-04-22T13:54:14.498Z"}
{"msg":"yeah, such is life.","username":"rjones","ts":"2020-04-22T13:55:20.298Z"}
{"msg":"I saw you do that, and I wondered what was going on :)","username":"rjones","ts":"2020-04-22T13:55:35.988Z"}
{"msg":"Looks like I actually have two branches out there, also a `,release-1.4` (I guess a typo when I was searching at one point)","username":"jyellick","ts":"2020-04-22T13:56:03.353Z"}
{"msg":"~Looks like I actually have two branches out there, also a `,release-1.4` (I guess a typo when I was searching at one point)~ Maybe not... I guess I will delete the v1.0.6 branch, anyone know if there's a way to make it harder to accidentally create these branches","username":"jyellick","ts":"2020-04-22T13:56:03.353Z"}
{"msg":"You want them gone? ","username":"rjones","ts":"2020-04-22T13:57:41.470Z"}
{"msg":"Looks like I can delete it myself","username":"jyellick","ts":"2020-04-22T13:57:53.955Z"}
{"msg":"When I look here I don't see it: https://github.com/hyperledger/fabric/branches","username":"rjones","ts":"2020-04-22T13:57:59.364Z"}
{"msg":"Just wanted to make sure I wasn't undoing something purposeful","username":"jyellick","ts":"2020-04-22T13:58:02.192Z"}
{"msg":"err https://github.com/hyperledger/fabric/branches/all","username":"rjones","ts":"2020-04-22T13:58:28.700Z"}
{"msg":"I've deleted them, thanks","username":"jyellick","ts":"2020-04-22T13:58:41.134Z"}
{"msg":"For PRs that reference a Jira, please remember to close them when you merge/close the PR. I'm seeing an increased number of Jiras left orphaned.","username":"dave.enyeart","ts":"2020-04-24T15:58:04.059Z"}
{"msg":"well if we used github for issues... ;)","username":"heatherp","ts":"2020-04-27T12:29:22.204Z"}
{"msg":"Now that https://github.com/hyperledger/fabric-rfcs/pull/25 is merged anyone have objections on the naming for the new repo containing the configtx package to be named `hyperledger/fabric-config`?","username":"caod","ts":"2020-04-27T17:19:52.747Z"}
{"msg":"Now that https://github.com/hyperledger/fabric-rfcs/pull/25 is merged anyone have objections on the naming for the new repo containing the configtx package to be named `hyperledger/fabric-config` per the RFC?","username":"caod","ts":"2020-04-27T17:19:52.747Z"}
{"msg":"@caod is this starting with a blank repo?","username":"rjones","ts":"2020-04-27T17:43:54.366Z"}
{"msg":"https://github.com/hyperledger/fabric-config","username":"rjones","ts":"2020-04-27T17:59:52.049Z"}
{"msg":"are the maintainers for this repo the same as for `hyperledger/fabric' ?","username":"rjones","ts":"2020-04-27T18:01:28.913Z"}
{"msg":"are the maintainers for this repo the same as for `hyperledger/fabric` ?","username":"rjones","ts":"2020-04-27T18:01:28.913Z"}
{"msg":"yep","username":"caod","ts":"2020-04-27T18:05:58.373Z"}
{"msg":"Thanks @rjones!","username":"caod","ts":"2020-04-27T18:07:17.555Z"}
{"msg":"if you could do a PR to update the description here: `https://github.com/hyperledger/fabric-config/blob/master/.github/settings.yml` I'd appreciate it. :)","username":"rjones","ts":"2020-04-27T18:07:59.530Z"}
{"msg":"Will do","username":"caod","ts":"2020-04-27T18:08:17.720Z"}
{"msg":"I pushed the PR if you could merge it, I have a followup one soon that will add CODEOWNERS as well as other necessary files for CI/contributing ","username":"caod","ts":"2020-04-27T18:18:59.038Z"}
{"msg":"actually I guess I can just merge it for now","username":"caod","ts":"2020-04-27T18:19:20.987Z"}
{"msg":"oh I see you already added CODEOWNERS just now","username":"caod","ts":"2020-04-27T18:20:33.905Z"}
{"msg":"Im quick on the PR draw","username":"BrettLogan","ts":"2020-04-27T18:20:44.171Z"}
{"msg":"everything should work now","username":"rjones","ts":"2020-04-27T18:21:00.189Z"}
{"msg":"@here Agenda items for Contributor Meeting next hour:\n- Roadmap update - I'll ask people working on roadmap items to give a quick update\n- Ledger Checkpoint RFC Deep Dive - Manish Sethi","username":"dave.enyeart","ts":"2020-04-29T12:04:43.953Z"}
{"msg":"Anything else to add?","username":"dave.enyeart","ts":"2020-04-29T12:04:49.932Z"}
{"msg":"Common repo structure :)","username":"lehors","ts":"2020-04-29T12:55:24.198Z"}
{"msg":"plus https://chat.hyperledger.org/channel/fabric-pr-review?msg=Nzu44wA4cmkc5YBbs","username":"lehors","ts":"2020-04-29T12:56:01.468Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=Nzu44wA4cmkc5YBbs","url":"https://chat.hyperledger.org/channel/fabric-pr-review?msg=Nzu44wA4cmkc5YBbs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@here meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-04-29T13:00:39.997Z"}
{"msg":"hey maintainers, I'm proposing to add Nik Gupta as a maintainer of fabric-samples, I think he largely deserves it and in fact has been much more active than many of the existing maintainers, see: https://github.com/hyperledger/fabric-samples/pull/180","username":"lehors","ts":"2020-05-07T16:26:38.262Z"}
{"msg":"@bretharrison @cbf @dave.enyeart @mastersingh24 @jyellick @mbwhite @sstone1 ^^^","username":"lehors","ts":"2020-05-07T18:11:10.047Z"}
{"msg":"Already approved 👍","username":"sstone1","ts":"2020-05-07T18:11:33.719Z"}
{"msg":"Hello Fabric maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT TODAY, 5/13! Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-05-13+Meeting+notes","username":"jramps9","ts":"2020-05-13T12:13:03.583Z"}
{"msg":"@here Contributor Meeting in 30 minutes. Agenda:\n- Release Update\n- Doc Update\n- Config transaction library overview and demo – Danny Cao and Tiffany Harris\nAnything else?","username":"dave.enyeart","ts":"2020-05-13T12:34:25.202Z"}
{"msg":"@here Contributor Meeting in 30 minutes. Agenda:\n- Release Update\n- Samples Update\n- Doc Update\n- Config transaction library overview and demo – Danny Cao and Tiffany Harris\nAnything else?","username":"dave.enyeart","ts":"2020-05-13T12:34:25.202Z"}
{"msg":"@here meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-05-13T12:59:24.779Z"}
{"msg":"Release notes for v1.4.7: https://github.com/hyperledger/fabric/pull/1264","username":"dave.enyeart","ts":"2020-05-14T08:01:46.886Z"}
{"msg":"Does anybody have any other PRs before we release v1.4.7?","username":"dave.enyeart","ts":"2020-05-14T08:02:08.483Z"}
{"msg":"ok, proceeding with fabric and fabric-ca v1.4.7 release...","username":"dave.enyeart","ts":"2020-05-14T17:09:24.132Z"}
{"msg":"FAB-17778: Fix policy support of multiple signatures from single organization\n\nFix de-duplication logic to ensure sufficient number of signatures are received to satisfy\npolicies that require multiple signatures from the same organization.\nThis problem is rare since most users have policies that require signatures from different\norganizations, not policies that require multiple signatures from the same organization. \n\n","username":"knagware9","ts":"2020-05-15T04:11:22.664Z"}
{"msg":"How I can test it ? Not much details in JIRA","username":"knagware9","ts":"2020-05-15T04:12:11.968Z"}
{"msg":"fabric-maintainers, I would like to consider adopting the Fabric-docs-CN lab  https://github.com/hyperledger-labs/fabric-docs-cn and the new Fabric-docs-ML one (https://github.com/hyperledger-labs/fabric-docs-ml as part of Fabric proper","username":"lehors","ts":"2020-05-18T19:52:58.894Z"}
{"msg":"fabric-maintainers, I would like us to consider adopting the Fabric-docs-CN lab  https://github.com/hyperledger-labs/fabric-docs-cn and the new Fabric-docs-ML one (https://github.com/hyperledger-labs/fabric-docs-ml as part of Fabric proper","username":"lehors","ts":"2020-05-18T19:52:58.894Z"}
{"msg":"fabric-maintainers, I would like us to consider adopting the Fabric-docs-CN lab  https://github.com/hyperledger-labs/fabric-docs-cn and the new Fabric-docs-ML one https://github.com/hyperledger-labs/fabric-docs-ml as part of Fabric proper","username":"lehors","ts":"2020-05-18T19:52:58.894Z"}
{"msg":"there is no good reason for these doc efforts to not be part of Fabric","username":"lehors","ts":"2020-05-18T19:53:16.166Z"}
{"msg":"we can just adopt them as separate repos with the same maintainers they already have","username":"lehors","ts":"2020-05-18T19:53:54.024Z"}
{"msg":"it will only increase the overall number of Fabric maintainers and diversity","username":"lehors","ts":"2020-05-18T19:54:18.218Z"}
{"msg":"and properly recognize these efforts","username":"lehors","ts":"2020-05-18T19:54:40.907Z"}
{"msg":"when the chinese one was first created people were reluctant to making part of Fabric proper for fear of inheriting something that we couldn't understand and manage","username":"lehors","ts":"2020-05-18T19:55:54.847Z"}
{"msg":"when the chinese one was first created people were reluctant to making it part of Fabric proper for fear of inheriting something that we couldn't understand and manage","username":"lehors","ts":"2020-05-18T19:55:54.847Z"}
{"msg":"but we need to get over that fear and trust the community who knows and cares about it","username":"lehors","ts":"2020-05-18T19:56:14.462Z"}
{"msg":"they've already demonstrated their commitment","username":"lehors","ts":"2020-05-18T19:56:28.694Z"}
{"msg":"there is no reason to worry that they will suddenly disappear and leave us holding the bag","username":"lehors","ts":"2020-05-18T19:56:44.086Z"}
{"msg":"please, @dave.enyeart , put this on the agenda of the next maintainers call","username":"lehors","ts":"2020-05-18T20:00:05.079Z"}
{"msg":"thanks","username":"lehors","ts":"2020-05-18T20:00:42.752Z"}
{"msg":"@here Always sad to see our colleagues move on, but we're due for another round of inactive maintainer retirement:","username":"dave.enyeart","ts":"2020-05-20T03:42:18.553Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/1296","username":"dave.enyeart","ts":"2020-05-20T03:42:21.888Z"}
{"msg":"https://github.com/hyperledger/fabric-ca/pull/158","username":"dave.enyeart","ts":"2020-05-20T03:42:48.619Z"}
{"msg":"Please hit approve if you agree","username":"dave.enyeart","ts":"2020-05-20T03:43:51.678Z"}
{"msg":"For contributor meeting today, I know @lehors wanted to discuss doc translation, and @mbwhite may want to discuss Wasm. ","username":"dave.enyeart","ts":"2020-05-27T06:34:55.555Z"}
{"msg":"I'm out of office and won't be available at that time, can anybody volunteer to facilitate the meeting?","username":"dave.enyeart","ts":"2020-05-27T06:35:01.809Z"}
{"msg":"Same meeting id as always: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-05-27T06:35:19.562Z"}
{"msg":"I'll take care of it Dave","username":"BrettLogan","ts":"2020-05-27T06:36:08.068Z"}
{"msg":"there is a risk I may not be able to make the call today unfortunately. I will try but don't be surprised if I'm MIA. Sorry about that.","username":"lehors","ts":"2020-05-27T08:40:11.286Z"}
{"msg":"Community call starting now: https://zoom.us/my/hyperledger.community.3","username":"BrettLogan","ts":"2020-05-27T12:58:42.886Z"}
{"msg":"Per the proposal on the community call this morning, the proposal has been brought forward to make the documentation translation work part of the official fabric repository and remove it from the Hyperledger Labs where it is currently hosted. We will open this up for discussion here for anyone who would like to comment","username":"BrettLogan","ts":"2020-05-27T19:03:12.683Z"}
{"msg":"No objections here, though I'd feel better with a vote of approval from @pandrejko or other doc maintainers.","username":"jyellick","ts":"2020-05-27T19:23:47.213Z"}
{"msg":"it would be nice if it was alongside the other docs, so tools like Transifex could work","username":"rjones","ts":"2020-05-27T19:26:19.791Z"}
{"msg":"I can relay what the original decision was based on from my recollection:\n- There was a concern about the the additional GitHub PR and Issue tracking \"noise\", potentially in other languages, that it would introduce to Fabric repo. \n- Also, there was a concern about the translate effort being abandoned in any language. But maybe that is normal for open source? See an example of  Mozilla translation status here https://pontoon.mozilla.org/projects/mdn/\n- We have no way to validate or address the quality of the translations. \n\nThe Chinese translation was done as a POC and now we see some traction being gained with other languages which is fantastic. I'm not entirely opposed to merging it into the Fabric docs as long as the Fabric Maintainers understand the considerations listed above.\n\nI'm unclear though how the maintainers list would work for each language. (Sorry I was not able to be on the call this morning due to a conflict with another standing meeting at the same time.)\n","username":"pandrejko","ts":"2020-05-27T20:00:50.227Z"}
{"msg":"Hello, we are about ready to release v2.1.1 with some fixes on top of v2.1, does anybody else want to merge anything before releasing?","username":"dave.enyeart","ts":"2020-05-29T12:53:20.903Z"}
{"msg":"@baohua @yacovm @jyellick @guoger I see https://github.com/hyperledger/fabric/pull/1311 is about ready on master... what's your assessment of criticality/risk of getting it backported to release-2.1? ","username":"dave.enyeart","ts":"2020-05-29T12:54:54.241Z"}
{"msg":"it can only be reproduced (deterministically though) in a very corner case, which IMO is not critical enough to block release. We could use some more time to massage the tests. @dave.enyeart ","username":"guoger","ts":"2020-05-29T16:28:56.003Z"}
{"msg":"It's not critical since you need to shoot yourself in the foot to reproduce it ;) ","username":"yacovm","ts":"2020-05-29T22:19:18.624Z"}
{"msg":"Ok, since the PR hasn't moved since last week, we'll go ahead with v2.1.1 release now.","username":"dave.enyeart","ts":"2020-06-01T11:56:47.411Z"}
{"msg":"v2.1.1 release commit: https://github.com/hyperledger/fabric/pull/1357","username":"dave.enyeart","ts":"2020-06-01T11:57:14.859Z"}
{"msg":"Fabric v2.1.1 released: https://github.com/hyperledger/fabric/releases/tag/v2.1.1","username":"dave.enyeart","ts":"2020-06-01T11:57:14.859Z"}
{"msg":"Hi Fabric maintainers! Reminder the Marketing Committee-Dev Relations call is tomorrow, 6/10 at 9am PT. Hope to see you there! https://wiki.hyperledger.org/display/Marketing/2020-06-010+Meeting+notes","username":"jramps9","ts":"2020-06-09T15:53:14.149Z"}
{"msg":"@here contributor meeting in 15 minutes","username":"dave.enyeart","ts":"2020-06-10T12:45:27.203Z"}
{"msg":"Agenda - Release Update, Samples Update, WASM RFC. Anything else?","username":"dave.enyeart","ts":"2020-06-10T12:45:40.099Z"}
{"msg":"@here meeting starting https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-06-10T13:00:25.972Z"}
{"msg":"Has joined the channel.","username":"rmnattas","ts":"2020-06-10T17:17:24.809Z","type":"uj"}
{"msg":"Hello; based on the contributor call yesterday, I've added a couple of comments to the Wasm Smart Contract RFC based on discussion. Based on this can ask the maintainers to indicate agreement on the PR as-per the RFC process; thanks!! https://github.com/hyperledger/fabric-rfcs/pull/28","username":"mbwhite","ts":"2020-06-11T09:29:14.264Z"}
{"msg":"Has joined the channel.","username":"dtomczyk","ts":"2020-06-11T15:46:51.015Z","type":"uj"}
{"msg":"Hi, @pandrejko @odowdaibm @nikhilgupta @cmgabriel @joe-alewine - any reason not to merge the Chinese, Japanese, and Malayalam doc translations into the main repo? I think it would be great to bring all the docs under one roof, so-to-speak. I've pestered @lehors about it before","username":"rjones","ts":"2020-06-12T20:23:23.149Z"}
{"msg":"Has joined the channel.","username":"cmgabriel","ts":"2020-06-12T20:23:23.226Z","type":"uj"}
{"msg":"I see it was on the agenda for the 27-MAY-2020 meeting, but there's no recording AFAIK","username":"rjones","ts":"2020-06-12T20:25:39.267Z"}
{"msg":"Hi Ry. We did discuss this and agreed it would be better to keep the languages in their own Fabric documentation internationalization repo instead.","username":"pandrejko","ts":"2020-06-12T20:31:30.504Z"}
{"msg":"Hi Ry. We did discuss this and agreed it would be better to keep the languages in their own Fabric documentation internationalization repo instead. So we would use that instead of the Hyperledger Labs repo.","username":"pandrejko","ts":"2020-06-12T20:31:30.504Z"}
{"msg":"@rjones, I don't know that we want it all in the same repo but when I presented the idea of having all the translations within the fabric umbrella instead of labs the idea was well received","username":"lehors","ts":"2020-06-12T20:32:35.490Z"}
{"msg":"OK, will all of the docs split off into that repo?","username":"rjones","ts":"2020-06-12T20:33:14.081Z"}
{"msg":"My concern is a second-class-citizen for the translations if they're kept apart.","username":"rjones","ts":"2020-06-12T20:33:31.306Z"}
{"msg":"English will remain the reference - just like W3C for instance has translations for several of its specifications but the English version is always the reference","username":"lehors","ts":"2020-06-12T20:35:06.186Z"}
{"msg":"this is so that in case of conflict between two versions there is no ambiguity","username":"lehors","ts":"2020-06-12T20:35:26.507Z"}
{"msg":"one needs to know which version \"wins\"","username":"lehors","ts":"2020-06-12T20:35:57.941Z"}
{"msg":"OK. Should I create a new repo for this, so that the code currently elsewhere can be under one umbrella?","username":"rjones","ts":"2020-06-12T20:36:16.206Z"}
{"msg":"I would expect each of the existing repo under the labs to then move within the fabric umbrella, each keeping the same set of maintainers it already has","username":"lehors","ts":"2020-06-12T20:37:11.690Z"}
{"msg":"I would expect each of the existing repos under the labs to then move within the fabric umbrella, each keeping the same set of maintainers it already has","username":"lehors","ts":"2020-06-12T20:37:11.690Z"}
{"msg":"so a new repo for each language?","username":"rjones","ts":"2020-06-12T20:39:47.679Z"}
{"msg":"well, is it \"new\" if it already exists in the labs?","username":"lehors","ts":"2020-06-12T20:41:33.793Z"}
{"msg":"but yes, one for each language","username":"lehors","ts":"2020-06-12T20:41:49.636Z"}
{"msg":"OK - tell me when to start moving stuff and I'll do it","username":"rjones","ts":"2020-06-12T20:47:22.160Z"}
{"msg":"@lehors I was looking to the future, where a new language comes on board","username":"rjones","ts":"2020-06-12T20:47:52.326Z"}
{"msg":"ah ok","username":"lehors","ts":"2020-06-12T20:48:13.652Z"}
{"msg":"@BrettLogan who chaired the call I presented this to brought this up for discussion here, see https://chat.hyperledger.org/channel/fabric-maintainers?msg=9rywFxfZWyeHcjBZH but the discussion didn't go very far","username":"lehors","ts":"2020-06-12T20:53:21.910Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=9rywFxfZWyeHcjBZH","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=9rywFxfZWyeHcjBZH","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I think @pandrejko's recollection of the initial hesitation is correct https://chat.hyperledger.org/channel/fabric-maintainers?msg=CjEL5q2L5dWSjdf3g","username":"lehors","ts":"2020-06-12T20:54:53.149Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=CjEL5q2L5dWSjdf3g","url":"https://chat.hyperledger.org/channel/fabric-maintainers?msg=CjEL5q2L5dWSjdf3g","remote":true,"fileId":null,"fileName":null}]}
{"msg":"but I think it is time to move beyond our fear","username":"lehors","ts":"2020-06-12T20:55:15.802Z"}
{"msg":"the Chinese translation group has shown dedication and there is no reason not to trust them to continue","username":"lehors","ts":"2020-06-12T20:56:07.379Z"}
{"msg":"of course there is always a risk for a translation effort to wind down but it's no different for this than it is for any project","username":"lehors","ts":"2020-06-12T20:57:17.259Z"}
{"msg":"and as long as we make it clear that the English version is the absolute reference the risk of confusion is pretty low","username":"lehors","ts":"2020-06-12T20:58:27.305Z"}
{"msg":"if one translation effort were to fall behind, people would be able to see that and revert to using the English version","username":"lehors","ts":"2020-06-12T20:59:14.065Z"}
{"msg":"I think we wanted 1 Fabric docs internationalization repo with each language in a folder under that.","username":"pandrejko","ts":"2020-06-12T23:25:16.301Z"}
{"msg":"I think we wanted 1 Fabric docs internationalization repo with each language in a folder under that. But I am not sure how the maintainer approvals would work for that","username":"pandrejko","ts":"2020-06-12T23:25:16.301Z"}
{"msg":"I think we wanted 1 Fabric docs internationalization repo with each language in a folder under that. But I am not sure how the maintainer approvals would work for that, because we would want different maintainers for each language. I would suggest we think through this and make sure we can do what we want before we create any new repos.","username":"pandrejko","ts":"2020-06-12T23:25:16.301Z"}
{"msg":"I think we wanted 1 Fabric docs internationalization repo with each language in a folder under that. But I am not sure how the maintainer approvals would work for that, because we would want different maintainers for each language. I would suggest we think through this and make sure we can do what we want before we create any new repos. English docs would stay in the main Fabric docs repo","username":"pandrejko","ts":"2020-06-12T23:25:16.301Z"}
{"msg":"I agree with this sentiment. The original request was that it didn't make sense for the internationalization work to be part of Hyperledger Labs. From a maintenance perspective it would be far simpler to have this be a standalone repo `fabric-docs-i18n` or something of the sort. Each language would be its directory within the repo, and maintainers could be handled the CODEOWNERS process. For each language we create a GitHub team, and each team is made up of its maintainers. And then within the CODEOWNERS files, we set ownership by directory to the relevant team. We can then use mergify like we do within the Fabric repo to have them attach a `merge` label and let mergify do it's magic","username":"BrettLogan","ts":"2020-06-13T03:02:58.747Z"}
{"msg":"I agree with this sentiment. The original request was that it didn't make sense for the internationalization work to be part of Hyperledger Labs. Pulling it our of the `hyperledger-labs` org and moving it to its own repo in `hyperledger` makes way more sense from a maintenance perspective. It would be far simpler to have this be a standalone repo `fabric-docs-i18n` or something of the sort. Each language would be its directory within the repo, and maintainers could be handled the CODEOWNERS process. For each language we create a GitHub team, and each team is made up of its maintainers. And then within the CODEOWNERS files, we set ownership by directory to the relevant team. We can then use mergify like we do within the Fabric repo to have them attach a `merge` label and let mergify do it's magic","username":"BrettLogan","ts":"2020-06-13T03:02:58.747Z"}
{"msg":"Thanks @BrettLogan I was hoping for confirmation that that was possible.","username":"pandrejko","ts":"2020-06-15T12:18:14.195Z"}
{"msg":"@here  Nominate Senthil as Fabric maintainer: https://github.com/hyperledger/fabric/pull/1400 , please approve if you agree.","username":"dave.enyeart","ts":"2020-06-15T13:26:46.899Z"}
{"msg":"Slightly frustrating constantly changing the approach.  I would like to see this converged under a single repo, though we will need to work with quite a few teams who have started down another path under HL Labs.","username":"odowdaibm","ts":"2020-06-15T13:32:22.055Z"}
{"msg":"Let's create the repo @BrettLogan @lehors @pandrejko and then we can discuss this week how we populate, and build.  Don't get me wrong, I'm in favour -- it's just a shame we could have decided this at the outset - it's not like international languages are a surprise ;) ?","username":"odowdaibm","ts":"2020-06-15T13:34:40.583Z"}
{"msg":":-)","username":"lehors","ts":"2020-06-15T13:35:43.485Z"}
{"msg":"I suggested just moving the existing repos from the labs because I thought it would be less disruptive than forcing a merge into a single repo","username":"lehors","ts":"2020-06-15T13:36:27.384Z"}
{"msg":"I'd propose that we start the process with Renato and Br_Pt and then fold the other languages like ML etc in underneath.","username":"odowdaibm","ts":"2020-06-15T13:36:35.617Z"}
{"msg":"but I'm fine either with either approach","username":"lehors","ts":"2020-06-15T13:37:13.104Z"}
{"msg":"but I'm fine with either approach","username":"lehors","ts":"2020-06-15T13:37:13.104Z"}
{"msg":"Sure -- moving existing is just fine, but I think we'd like to converge","username":"odowdaibm","ts":"2020-06-15T13:37:16.838Z"}
{"msg":"ty @lehors","username":"odowdaibm","ts":"2020-06-15T13:37:30.932Z"}
{"msg":"I totally agree. Sometime we let process get in the way of progress, and this was one of those times. But better to correct our past mistakes now, rather than putting it off another year I suppose. I will work with Ry to get the repo setup and configured with GitHub, read-the-docs, and CI. Can we get a vote on a name for the repo, I proposed `fabric-docs-i18n`, does this make sense, or does someone want to propose something else?","username":"BrettLogan","ts":"2020-06-15T13:58:32.991Z"}
{"msg":"SGTM","username":"lehors","ts":"2020-06-15T13:59:26.991Z"}
{"msg":"OK, we're agreed - let's use that and we can start by incorporating Br_Pt. Once you have it in place, let me know, and I will do a doc update for this new process.  Ty @BrettLogan @lehor","username":"odowdaibm","ts":"2020-06-15T14:04:53.286Z"}
{"msg":"OK, we're agreed - let's use that and we can start by incorporating Br_Pt. Once you have it in place, let me know, and I will do a doc update for this new process.  Ty @BrettLogan @lehors @pandrejko","username":"odowdaibm","ts":"2020-06-15T14:04:53.286Z"}
{"msg":"benchamrk file you mean?","username":"odowdaibm","ts":"2020-06-15T16:35:22.745Z"}
{"msg":"@odowdaibm pt_BR ?","username":"rjones","ts":"2020-06-15T17:09:44.936Z"}
{"msg":"https://lh.2xlibre.net/locale/pt_BR/ for instance","username":"rjones","ts":"2020-06-15T17:10:07.663Z"}
{"msg":"@SaraG here is the discussion on i18n for Fabric - Iroha might use this model?","username":"rjones","ts":"2020-06-15T17:17:14.969Z"}
{"msg":"Has joined the channel.","username":"SaraG","ts":"2020-06-15T17:17:15.024Z","type":"uj"}
{"msg":"@rjones yes that's right.  Renato is staring  a Pt_Br translation but hasn't yet requested a HL Labs repo -- would could populate the i18n repo with his as a pro-forma for others -- to get us going with an examplar.  I've asked Renato to join the chat","username":"odowdaibm","ts":"2020-06-15T18:17:09.723Z"}
{"msg":"@rjones yes that's right.  Renato is staring  a Pt_Br translation but hasn't yet requested a HL Labs repo -- we could populate the i18n repo with his as a pro-forma for others -- to get us going with an exemplar.  I've asked Renato to join the chat","username":"odowdaibm","ts":"2020-06-15T18:17:09.723Z"}
{"msg":"https://github.com/hyperledger/fabric-docs-i18n ?","username":"rjones","ts":"2020-06-15T19:13:35.040Z"}
{"msg":"https://github.com/hyperledger/fabric-docs-i18n","username":"rjones","ts":"2020-06-15T19:13:38.183Z"}
{"msg":"Thank you @rjones, I will get CI and stuff set up for it","username":"BrettLogan","ts":"2020-06-15T19:20:10.978Z"}
{"msg":"Great - this looks fine @rjones I will update docs with @pandrejko later in the week, and create some instructions. Thanks.","username":"odowdaibm","ts":"2020-06-16T06:08:25.553Z"}
{"msg":"Making @renatost aware, as leader for Br-Pt","username":"odowdaibm","ts":"2020-06-16T07:26:09.339Z"}
{"msg":"Has joined the channel.","username":"renatost","ts":"2020-06-16T07:26:09.386Z","type":"uj"}
{"msg":"Thanks Anthony and hello everyone! I will glad to work on this action and we can use the pt_BR translantion as a pilot for this new process for sure.","username":"renatost","ts":"2020-06-16T12:11:15.065Z"}
{"msg":"let me know if you need a hand, or if you're blocked.","username":"rjones","ts":"2020-06-16T17:06:51.187Z"}
{"msg":"Hi @rjones , I really appreciate have your support in this moment.\n\nI created a fork and added the last version of pt_BR translation code (https://github.com/rst77/fabric-docs-i18n) in it. Now I just need to create a PR asking the merge?","username":"renatost","ts":"2020-06-16T18:30:17.910Z"}
{"msg":"Or I need to create on JIRA issue also?","username":"renatost","ts":"2020-06-16T18:36:10.438Z"}
{"msg":"just create a PR","username":"rjones","ts":"2020-06-16T18:47:10.541Z"}
{"msg":"@renatost as far as JIRA issues - that's a fabric thing; the code merge is via PR. I defer to Andrew and Pam on JIRA","username":"rjones","ts":"2020-06-16T18:48:31.307Z"}
{"msg":"Done, any questions let me know...","username":"renatost","ts":"2020-06-16T18:55:51.845Z"}
{"msg":"OK. I see that the code reviewers have been added. https://github.com/hyperledger/fabric-docs-i18n/pull/2 shows two groups added","username":"rjones","ts":"2020-06-16T18:59:50.681Z"}
{"msg":"Yes, was defined automatically. I only filled the PR description.","username":"renatost","ts":"2020-06-16T19:05:25.178Z"}
{"msg":"Right now, a single JIRA might help mark the work item, but I wouldn't worry too much about it.  Later it will help to organize translation activities into separate JIRAs.  Maybe a single placeholder right help -- Something a bit like this Renato: https://jira.hyperledger.org/browse/FAB-17967","username":"odowdaibm","ts":"2020-06-17T08:50:56.538Z"}
{"msg":"Right now, a single JIRA might help mark the work item, but I wouldn't worry too much about it.  Later it will help to organize translation activities into separate JIRAs.  Maybe a single placeholder might help for your work right now Renato. Something a bit like this https://jira.hyperledger.org/browse/FAB-17967 You can then refer to it in your PRs, and notify others as you make progress.","username":"odowdaibm","ts":"2020-06-17T08:50:56.538Z"}
{"msg":"Here's my plan for v2.2 timing...","username":"dave.enyeart","ts":"2020-06-18T19:29:34.760Z"}
{"msg":"End of dev and create release-2.2 branch Friday June 26th.","username":"dave.enyeart","ts":"2020-06-18T19:29:42.011Z"}
{"msg":"Soft landing - don't drop any bombs the days before.","username":"dave.enyeart","ts":"2020-06-18T19:29:50.760Z"}
{"msg":"Stabilization and final fixes in release-2.2 branch by Friday July 3rd (holiday in US).","username":"dave.enyeart","ts":"2020-06-18T19:29:56.912Z"}
{"msg":"Cut release July 8th.","username":"dave.enyeart","ts":"2020-06-18T19:30:02.805Z"}
{"msg":"Thank you!","username":"SaraG","ts":"2020-06-19T08:36:39.938Z"}
{"msg":"Hi! So do I understand it correctly that it was decided on not using any CATs?","username":"SaraG","ts":"2020-06-19T08:37:11.887Z"}
{"msg":"@here Contributor meeting in 30 minutes.","username":"dave.enyeart","ts":"2020-06-24T12:29:57.937Z"}
{"msg":"Agenda topics\n- Release update\n- Deprecations\n- Documentation update","username":"dave.enyeart","ts":"2020-06-24T12:30:01.283Z"}
{"msg":"Agenda topics\n- Release update\n- Deprecations discussion\n- Documentation update","username":"dave.enyeart","ts":"2020-06-24T12:30:01.283Z"}
{"msg":"Anything else?","username":"dave.enyeart","ts":"2020-06-24T12:30:04.227Z"}
{"msg":"@here meeting starting : https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-06-24T13:00:01.918Z"}
{"msg":"Can we please follow the instructions noted here https://techcrunch.com/2020/03/20/psa-yes-you-can-join-a-zoom-meeting-in-the-browser/ to fix our host settings to display a link to join from a browser rather than requiring a random closed source app to participate?  I stumbled across joining in the browser when the old client refused to join new meetings -- a much nicer experience.\n\nWith a little fighting, it's possible to do this manually, by rewriting the `*.zoom.us/j/<meeting-id>/*` to `*.zoom.us/wc/<meeting-id>/join`, but it would make everyone's life easier if the join link actually displayed this option.","username":"jyellick","ts":"2020-06-24T13:21:28.436Z"}
{"msg":"I'll ask Ry to do this for us","username":"BrettLogan","ts":"2020-06-24T15:49:14.141Z"}
{"msg":"I'll ask LF to do this for us","username":"BrettLogan","ts":"2020-06-24T15:49:14.141Z"}
{"msg":"Hi! I'm LF. do what?","username":"rjones","ts":"2020-06-24T15:51:12.569Z"}
{"msg":"I turned on \"require zoom account\" for web joining a while ago.","username":"rjones","ts":"2020-06-24T15:52:12.118Z"}
{"msg":"Looks like you can enable the LF zoom account to display \"join via the web\" links, so that in order to join the community calls, you can just use a browser, rather than install the Zoom client (which is pretty awful on Linux, for instance, and closed source).","username":"jyellick","ts":"2020-06-24T15:52:13.993Z"}
{"msg":"because... reasons.","username":"rjones","ts":"2020-06-24T15:52:17.214Z"}
{"msg":"At least in my browser, when you click on a link like https://zoom.us/my/hyperledger.community.3 it basically says \"open in the zoom app, or download the zoom app\"","username":"jyellick","ts":"2020-06-24T15:53:17.815Z"}
{"msg":"But we should be able to make it say \"Or join via the web\" or something like that","username":"jyellick","ts":"2020-06-24T15:53:32.005Z"}
{"msg":"Which, especially for an OSS project, requiring the zoom app to participate seems like an unnecessary barrier, when the web client works just fine.","username":"jyellick","ts":"2020-06-24T15:54:12.884Z"}
{"msg":"That was already enabled on 2 of the 3 zoom accounts, I've enabled it on the other","username":"rjones","ts":"2020-06-24T15:55:40.930Z"}
{"msg":"You _can_ join via the web client, if you go through the web client, and explicitly enter the meeting ID.  But, it's sufficiently hard, and you have to know to do it.  At least according to the original link, there's an account setting which will provide web links in addition to app links (whereas only the latter is available by default).","username":"jyellick","ts":"2020-06-24T15:55:42.597Z"}
{"msg":"Great, thanks @rjones","username":"jyellick","ts":"2020-06-24T15:55:56.547Z"}
{"msg":"of course, only `.3` didn't have it","username":"rjones","ts":"2020-06-24T15:56:29.288Z"}
{"msg":"Thank Ry!","username":"BrettLogan","ts":"2020-06-24T15:58:32.381Z"}
{"msg":"Thanks Ry!","username":"BrettLogan","ts":"2020-06-24T15:58:32.381Z"}
{"msg":"The fact that there was only 1 of 3 accounts that didn't have that set was the source of my confusion above","username":"rjones","ts":"2020-06-24T16:09:54.079Z"}
{"msg":"so do we need to provide people a different link?","username":"dave.enyeart","ts":"2020-06-24T17:11:26.741Z"}
{"msg":"","username":"BrettLogan","ts":"2020-06-24T17:12:03.573Z","attachments":[{"type":"file","title":"Clipboard - June 24, 2020 1:12 PM","title_link":"/file-upload/cHtHyg9iAbswp2XMt/Clipboard%20-%20June%2024,%202020%201:12%20PM","image_url":"/file-upload/cHtHyg9iAbswp2XMt/Clipboard%20-%20June%2024,%202020%201:12%20PM","image_type":"image/png","image_size":37604,"url":"/file-upload/cHtHyg9iAbswp2XMt/Clipboard%20-%20June%2024,%202020%201:12%20PM","remote":false,"fileId":"cHtHyg9iAbswp2XMt","fileName":"Clipboard - June 24, 2020 1:12 PM"}]}
{"msg":"No, the link now appears on the launch page","username":"BrettLogan","ts":"2020-06-24T17:12:11.392Z"}
{"msg":"It did not before","username":"BrettLogan","ts":"2020-06-24T17:12:23.140Z"}
{"msg":"hmmm, i still don't see that browser option when i click on https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-06-24T17:13:53.457Z"}
{"msg":"maybe because i already have the client?","username":"dave.enyeart","ts":"2020-06-24T17:14:27.265Z"}
{"msg":"You have the client installed, in order to see it you have to click `launch meeting` on that page and then you will be able to see it","username":"BrettLogan","ts":"2020-06-24T17:14:45.966Z"}
{"msg":"huh. I opened it in a private window and it didn't show a link","username":"rjones","ts":"2020-06-24T17:15:04.088Z"}
{"msg":"I'm seeing what happens on a VM without the client installed at all","username":"BrettLogan","ts":"2020-06-24T17:16:22.250Z"}
{"msg":"i had to use a different browser, select don't allow, then select launch meeting, then cancel out the client, and now I see the web link :)","username":"dave.enyeart","ts":"2020-06-24T17:20:31.595Z"}
{"msg":"Yea, so if you dont have the client, you still need to click the launch meeting button","username":"BrettLogan","ts":"2020-06-24T17:26:01.813Z"}
{"msg":"Yeah, you apparently have to click \"If you have the zoom client installed, launch meeting\"","username":"jyellick","ts":"2020-06-24T17:26:06.985Z"}
{"msg":"Which seems like just awful UX, since... you can launch the meeting without the client","username":"jyellick","ts":"2020-06-24T17:26:17.331Z"}
{"msg":"Guess thats better than nothing","username":"BrettLogan","ts":"2020-06-24T17:26:18.081Z"}
{"msg":"But a least now I won't have to manually rewrite the URL","username":"jyellick","ts":"2020-06-24T17:26:31.630Z"}
{"msg":"But at least now I won't have to manually rewrite the URL","username":"jyellick","ts":"2020-06-24T17:26:31.630Z"}
{"msg":"Does Zoom have a linux client?","username":"BrettLogan","ts":"2020-06-24T17:26:53.934Z"}
{"msg":"It does, and it's awful","username":"jyellick","ts":"2020-06-24T17:27:00.210Z"}
{"msg":"what are your thoughts about setting up an actual Zoom meeting instead of using the personal meeting room?","username":"rjones","ts":"2020-06-24T17:27:45.144Z"}
{"msg":"It tries to float a preview of the UI when I switch to other workspaces.  Then, when I switch back, it doesn't notice that the window has focus, and I have to manually return it.","username":"jyellick","ts":"2020-06-24T17:27:45.366Z"}
{"msg":"I'm not sure what the difference between \"an actual Zoom meeting\", and the \"personal meeting room\" is?","username":"jyellick","ts":"2020-06-24T17:28:16.006Z"}
{"msg":"It becomes a recurring event, and with that I think the output of the meeting actually includes all the relevant info in the invite","username":"BrettLogan","ts":"2020-06-24T17:28:56.919Z"}
{"msg":"It would have a new URL, and have distinct settings. I'm thinking about doing it with the TSC call","username":"rjones","ts":"2020-06-24T17:28:59.031Z"}
{"msg":"I don't want to make the world worse, so I won't do anything this week","username":"rjones","ts":"2020-06-24T17:29:17.759Z"}
{"msg":"Cant be worse than when we got locked out of Zoom and had to use our IBM WebEx to host the meetings lol","username":"BrettLogan","ts":"2020-06-24T17:29:52.148Z"}
{"msg":"i personally like the personal meeting https://zoom.us/my/hyperledger.community.3 , very simple (at least for those of us not using linux)","username":"dave.enyeart","ts":"2020-06-24T17:29:57.820Z"}
{"msg":"and it is not used much by other projects so we can use it often","username":"dave.enyeart","ts":"2020-06-24T17:30:44.028Z"}
{"msg":"and it is not used much by other projects so we can re-use it often","username":"dave.enyeart","ts":"2020-06-24T17:30:44.028Z"}
{"msg":"That link would still work, as the meeting is specific to a room, isn't it Ry? Its a recurring event on the room","username":"BrettLogan","ts":"2020-06-24T17:30:58.971Z"}
{"msg":"I could be wrong, just going off my experience of setting it up for my mother in law to host here classes online","username":"BrettLogan","ts":"2020-06-24T17:31:29.176Z"}
{"msg":"I could be wrong, just going off my experience of setting it up for my mother in law to host her classes online","username":"BrettLogan","ts":"2020-06-24T17:31:29.176Z"}
{"msg":"well I don't know and I'm super not into more Zoom tech support :)","username":"rjones","ts":"2020-06-24T17:32:06.014Z"}
{"msg":"HA","username":"BrettLogan","ts":"2020-06-24T17:32:11.699Z"}
{"msg":"WRT your call this morning - might [minifab](https://github.com/litong01/minifabric) solve some of the \"play with it\" space?","username":"rjones","ts":"2020-06-24T18:03:08.855Z"}
{"msg":"I wasn't able to chime in, because the zoom android client (which I was using until I could figure out the web-client link) wouldn't let my audio through, but you absolutely can migrate from Solo to Raft.  In fact, we have an integration test that covers it.","username":"jyellick","ts":"2020-06-24T18:21:19.332Z"}
{"msg":"We don't advertise this feature in the doc, because it's more work to migrate from Solo to Raft, than to just start as a single node Raft, but, I do think it's worth noting that users haven't entirely backed themselves into an inescapable corner if they use Solo for a production system accidentally.","username":"jyellick","ts":"2020-06-24T18:22:17.419Z"}
{"msg":"I really don't have an issue with removing solo, if that's what we decide we want to do.  But I think we need to clearly articulate why we're doing it.  It is simply not a burden from a code perspective.  The only real 'code' in it is about 50 lines.  And its dependencies are quite limited.  It's been hit a few times when import paths of protos have changed, but the last actual code change was from Sept 2018.","username":"jyellick","ts":"2020-06-24T18:29:49.300Z"}
{"msg":"It seems the concern is that solo \"confuses\" users.  And that we find people out there running solo who shouldn't.  But, I'd suggest that this is also evidence that users find it easy to configure a solo network than a Raft network, which implies that it is providing some value to those users.","username":"jyellick","ts":"2020-06-24T18:30:49.878Z"}
{"msg":"It seems the concern is that solo \"confuses\" users.  And that we find people out there running solo who shouldn't.  But, I'd suggest that this is also evidence that users find it easier to configure a solo network than a Raft network, which implies that it is providing some value to those users.","username":"jyellick","ts":"2020-06-24T18:30:49.878Z"}
{"msg":"The doc and orderer startup warning are pretty clear not to use Solo for production, so I'm good with keeping it. It is also nice to have at least one other simple option besides Raft, if you don't want to configure TLS, or you want to compare with Raft behavior for some reason (e.g. if you suspect a Raft bug).","username":"dave.enyeart","ts":"2020-06-24T18:36:49.866Z"}
{"msg":"For \"play with it\" users, the new Test Network has proved pretty effective... it automatically brings up a small toy network if you like, and the scripts are pretty simple if you want to see how it is working or modify it.","username":"dave.enyeart","ts":"2020-06-24T18:39:11.212Z"}
{"msg":"Tong is going to demonstrate Minifab at the next contributor meeting, so that will be a good chance to evaluate and discuss it.","username":"dave.enyeart","ts":"2020-06-24T18:39:43.578Z"}
{"msg":"Hi. I propose archiving homebrew-fabric: the stats @BrettLogan showed me show that almost all of the downloads are me testing it out. https://github.com/hyperledger/homebrew-fabric/pull/21","username":"rjones","ts":"2020-06-25T14:45:37.780Z"}
{"msg":"ReadTheDocs now has a `Build Pull Requests` feature. It will build your doc for all Pull Requests (including on every push) and will report a check back to GitHub, and allows you to view your doc directly in readthedocs before we approve and merge anything.","username":"BrettLogan","ts":"2020-06-26T20:23:54.508Z"}
{"msg":"","username":"BrettLogan","ts":"2020-06-26T20:24:08.854Z","attachments":[{"type":"file","title":"Clipboard - June 26, 2020 4:24 PM","title_link":"/file-upload/hmdDq5gncB4BmKdAK/Clipboard%20-%20June%2026,%202020%204:24%20PM","image_url":"/file-upload/hmdDq5gncB4BmKdAK/Clipboard%20-%20June%2026,%202020%204:24%20PM","image_type":"image/png","image_size":61853,"url":"/file-upload/hmdDq5gncB4BmKdAK/Clipboard%20-%20June%2026,%202020%204:24%20PM","remote":false,"fileId":"hmdDq5gncB4BmKdAK","fileName":"Clipboard - June 26, 2020 4:24 PM"}]}
{"msg":"https://hyperledger-fabric--1473.org.readthedocs.build/en/1473/","username":"BrettLogan","ts":"2020-06-26T20:24:29.064Z"}
{"msg":"Example of the check, and when you click Details, it takes you to the ReadTheDoc build for your doc","username":"BrettLogan","ts":"2020-06-26T20:24:41.532Z"}
{"msg":"Example of the check, and when you click `Details`, it takes you to the ReadTheDoc build for your doc","username":"BrettLogan","ts":"2020-06-26T20:24:41.532Z"}
{"msg":"I've opened this PR as a place to make comment on this (I am also going to post in RC): https://github.com/hyperledger/fabric/pull/1473","username":"BrettLogan","ts":"2020-06-26T20:24:47.755Z"}
{"msg":"I've opened this PR as a place to make comment on this: https://github.com/hyperledger/fabric/pull/1473","username":"BrettLogan","ts":"2020-06-26T20:24:47.755Z"}
{"msg":"I've opened this PR as a place to comment on this: https://github.com/hyperledger/fabric/pull/1473","username":"BrettLogan","ts":"2020-06-26T20:24:47.755Z"}
{"msg":"I've enabled it as a test and opened this PR as a place to comment on this: https://github.com/hyperledger/fabric/pull/1473","username":"BrettLogan","ts":"2020-06-26T20:24:47.755Z"}
{"msg":"https://tinyurl.com/y82f45ux I'm working on affiliation.","username":"rjones","ts":"2020-06-27T04:13:30.349Z"}
{"msg":"fabric v2.2 release notes for review: https://github.com/hyperledger/fabric/pull/1512","username":"dave.enyeart","ts":"2020-07-01T13:04:46.030Z"}
{"msg":"We've talked about v2.2 being the next LTS release. Any concerns with announcing that with the release?","username":"dave.enyeart","ts":"2020-07-01T13:05:38.710Z"}
{"msg":"We've talked about v2.2 being the next LTS release. Any concerns with announcing that with the release next week?","username":"dave.enyeart","ts":"2020-07-01T13:05:38.710Z"}
{"msg":"We discussed deprecations on the June 24th contributor call. These deprecations have now been added to proposed v2.2 release notes, please review: https://github.com/hyperledger/fabric/pull/1512","username":"dave.enyeart","ts":"2020-07-01T19:36:14.391Z"}
{"msg":"wonderful, thanks Brett @BrettLogan","username":"odowdaibm","ts":"2020-07-02T17:58:08.578Z"}
{"msg":"Last call for release note and deprecation feedback: https://github.com/hyperledger/fabric/pull/1512   Release v2.2 on target for Wednesday.","username":"dave.enyeart","ts":"2020-07-06T11:16:12.142Z"}
{"msg":"Last call for release note and deprecation feedback: https://github.com/hyperledger/fabric/pull/1512   Release v2.2 on target for Thursday.","username":"dave.enyeart","ts":"2020-07-06T11:16:12.142Z"}
{"msg":"@here Contributor meeting next hour. Agenda - quick release update, minifabric from Tong Li. Anything else?","username":"dave.enyeart","ts":"2020-07-08T12:10:24.131Z"}
{"msg":"@here meeting starting - https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-07-08T12:59:43.604Z"}
{"msg":"Fabric v2.2 released, all good, I'll put together the announcement","username":"dave.enyeart","ts":"2020-07-09T15:34:07.490Z"}
{"msg":"@here I want to make sure I position LTS correctly in the release announcement, please respond if you have any edits:","username":"dave.enyeart","ts":"2020-07-09T16:20:00.597Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of Fabric v2.2.0!\n\nv2.2 continues to build on the v2.0 foundation with additional improvements and fixes. For details, check out the release notes:\nhttps://github.com/hyperledger/fabric/releases/tag/v2.2.0\n\nAdditionally we are happy to announce that v2.2 is the next long-term support (LTS) release for Hyperledger Fabric. This means that v2.2.x will be the be the target release for most fix backports, while the most important fixes will continue to be backported to v1.4.x as well.\n\nMore details of the LTS strategy can be found in the RFC that was merged earlier this year:\nhttps://github.com/hyperledger/fabric-rfcs/blob/master/text/0000-lts-release-strategy.md\n\nFinally, it is worth noting that the 'latest' tag on dockerhub images has been retired. We felt that the tag was too confusing, given that there is a combination of regular releases and LTS releases available now - the definition of 'latest' may not be the same for everyone. \n\nGive v2.2 a try and let us know what you think!\nhttps://hyperledger-fabric.readthedocs.io/en/release-2.2/install.html```","username":"dave.enyeart","ts":"2020-07-09T16:20:05.095Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of Fabric v2.2.0!\n\nv2.2 continues to build on the v2.0 foundation with additional improvements and fixes. For details, check out the release notes:\nhttps://github.com/hyperledger/fabric/releases/tag/v2.2.0\n\nAdditionally we are happy to announce that v2.2 is the next long-term support (LTS) release for Hyperledger Fabric. v2.2.x will be the be the target release for most fix backports, while the most important fixes will continue to be backported to v1.4.x as well.\n\nMore details of the LTS strategy can be found in the RFC that was merged earlier this year:\nhttps://github.com/hyperledger/fabric-rfcs/blob/master/text/0000-lts-release-strategy.md\n\nFinally, it is worth noting that the 'latest' tag on dockerhub images has been retired. We felt that the tag was too confusing, given that there is a combination of regular releases and LTS releases available now - the definition of 'latest' may not be the same for everyone. \n\nGive v2.2 a try and let us know what you think!\nhttps://hyperledger-fabric.readthedocs.io/en/release-2.2/install.html```","username":"dave.enyeart","ts":"2020-07-09T16:20:05.095Z"}
{"msg":"```The Hyperledger Fabric maintainers are pleased to announce the availability of Fabric v2.2.0!\n\nv2.2 continues to build on the v2.0 foundation with additional improvements and fixes. For details, check out the release notes:\nhttps://github.com/hyperledger/fabric/releases/tag/v2.2.0\n\nAdditionally we are happy to announce that v2.2 is the next long-term support (LTS) release for Hyperledger Fabric. v2.2.x will be the target release for most fix backports, while the most important fixes will continue to be backported to v1.4.x as well.\n\nMore details of the LTS strategy can be found in the RFC that was merged earlier this year:\nhttps://github.com/hyperledger/fabric-rfcs/blob/master/text/0000-lts-release-strategy.md\n\nFinally, it is worth noting that the 'latest' tag on dockerhub images has been retired. We felt that the tag was too confusing, given that there is a combination of regular releases and LTS releases available now - the definition of 'latest' may not be the same for everyone. \n\nGive v2.2 a try and let us know what you think!\nhttps://hyperledger-fabric.readthedocs.io/en/release-2.2/install.html```","username":"dave.enyeart","ts":"2020-07-09T16:20:05.095Z"}
{"msg":"grammar here: `This means that v2.2.x will be the be the target release for most fix backports`","username":"caod","ts":"2020-07-09T16:21:22.835Z"}
{"msg":"fixed","username":"dave.enyeart","ts":"2020-07-09T16:22:35.631Z"}
{"msg":"otherwise looks good :)","username":"caod","ts":"2020-07-09T16:22:37.311Z"}
{"msg":"Great to see v2.2 LTS is here!","username":"baohua","ts":"2020-07-09T17:35:08.157Z"}
{"msg":"announcement sent to mailing list: https://lists.hyperledger.org/g/fabric/message/8643","username":"dave.enyeart","ts":"2020-07-09T20:42:46.597Z"}
{"msg":"Hello Guys, Hope you are doing well.\nI need your help and guidance in Hyperledger Fabric.\nCan you please suggest me good resources on how to generate crypto materials (manualy) using fabric ca in hyperledger?\nAlso the answers of few questions\n\nMy questions are:\n1) which testing framework to use for fabric contract api chaincode (node.js) testing?\n2) How to handle crypto certificates in production projects? How to generate certificates ? Where & how to store certificates ?\n\nI'll be waiting for your all your response and suggestions.\n\nThanks & regards,\nAbhishek","username":"Abhishekkishor","ts":"2020-07-10T05:26:37.333Z"}
{"msg":"@Abhishekkishor ask it in #fabric group","username":"metadata","ts":"2020-07-10T05:42:35.115Z"}
{"msg":"Has joined the channel.","username":"AbhishekAadi","ts":"2020-07-10T05:42:53.006Z","type":"uj"}
{"msg":"@metadata sure","username":"AbhishekAadi","ts":"2020-07-10T05:43:33.463Z"}
{"msg":"Hey Abhishek, we are working on an example for unit-testing node chaincode. I recently publish an example for Go chaincode using `mocks` in the fabric-samples repo. We are working on the node one though. You should watch: https://github.com/hyperledger/fabric-samples/tree/master/asset-transfer-basic/chaincode-javascript","username":"BrettLogan","ts":"2020-07-10T15:30:35.108Z"}
{"msg":"This is where the example tests will be published","username":"BrettLogan","ts":"2020-07-10T15:30:45.358Z"}
{"msg":"You can take a look at: https://github.com/hyperledger/fabric-samples/blob/master/asset-transfer-basic/chaincode-go/chaincode/smartcontract_test.go","username":"BrettLogan","ts":"2020-07-10T15:31:03.859Z"}
{"msg":"Which is the Go example. Essentially new the new programming model uses mocks to perform testing. In NodeJS this is achieved using: https://sinonjs.org/","username":"BrettLogan","ts":"2020-07-10T15:31:56.109Z"}
{"msg":"Has joined the channel.","username":"chintanr11","ts":"2020-07-13T04:41:02.926Z","type":"uj"}
{"msg":"Github crashs at this moment.","username":"davidkhala","ts":"2020-07-13T06:47:15.917Z"}
{"msg":"yes? that's not Fabric's problem.","username":"rjones","ts":"2020-07-13T06:54:58.550Z"}
{"msg":"https://www.githubstatus.com/","username":"rjones","ts":"2020-07-13T06:55:32.648Z"}
{"msg":"Sure, it is purely Github infra problem. I posted it as a reminder","username":"davidkhala","ts":"2020-07-15T05:02:58.871Z"}
{"msg":"Has joined the channel.","username":"AurelienGasser1","ts":"2020-07-16T02:23:23.924Z","type":"uj"}
{"msg":"> Finally, it is worth noting that the 'latest' tag on dockerhub images has been retired.\n\nAlthough I absolutely understand the rationale behind this change, this sudden change caught us by surprise and caused significant disruption in our production environment running HLF 1.4. Naturally, this happened at the worst possible moment for us: during a scheduled test session involving 15+ people over multiple countries. \n\nMaybe this retiring was announced before, in which case we unfortunately missed it.","username":"AurelienGasser1","ts":"2020-07-16T02:23:24.091Z"}
{"msg":"> Finally, it is worth noting that the 'latest' tag on dockerhub images has been retired.\n\n\nAlthough I absolutely understand and share the rationale behind this change, this sudden removal caught us by surprise and caused significant disruption in our production environment running HLF 1.4. Naturally, this happened at the worst possible moment for us: during a scheduled test session involving 15+ people over multiple countries. \n\nMaybe this retiring was announced before, in which case we unfortunately missed it.\n\nI thought this feedback might be valuable as we might not be the only having faced this inconvenience.","username":"AurelienGasser1","ts":"2020-07-16T02:23:24.091Z"}
{"msg":"> Finally, it is worth noting that the 'latest' tag on dockerhub images has been retired.\n\n\nAlthough I absolutely understand and share the rationale behind this change, this sudden removal caught us by surprise and caused significant disruption in our production environment running HLF 1.4. Naturally, this happened at the worst possible moment for us: during a scheduled test session involving 15+ people over multiple countries. \n\nMaybe this retiring was announced at a prior date; if that's the case then we unfortunately missed it.\n\nI thought this feedback might be valuable to you, as we might not be the only having faced this inconvenience.\n\nThanks again for the good work.","username":"AurelienGasser1","ts":"2020-07-16T02:23:24.091Z"}
{"msg":"> Finally, it is worth noting that the 'latest' tag on dockerhub images has been retired.\n\n\nAlthough I absolutely understand and share the rationale behind this change, this sudden removal caught us by surprise and caused significant disruption in our production environment running HLF 1.4. Naturally, this happened at the worst possible moment for us: during a scheduled test session involving 15+ people over multiple countries. \n\nMaybe this retiring was announced at a prior date; if that's the case then we unfortunately missed it.\n\nI thought this feedback might be valuable to you, as we might not be the only users having faced this inconvenience.\n\nThanks again for the good work.","username":"AurelienGasser1","ts":"2020-07-16T02:23:24.091Z"}
{"msg":"> Finally, it is worth noting that the 'latest' tag on dockerhub images has been retired.\n\n\nAlthough I absolutely understand and share the rationale behind this change, this sudden removal caught us by surprise and caused significant disruption in our production environment running HLF 1.4. Naturally, this happened at the worst possible moment for us: during a scheduled test session involving 15+ people over multiple countries. \n\nMaybe this retiring was announced at a prior date; if that's the case then we unfortunately missed it.\n\nI thought this feedback might be valuable to you as we might not be the only users having faced this inconvenience.\n\nWe'll be migrating to HLF 2.x as soon as time permits.\n\nThanks again for the good work.","username":"AurelienGasser1","ts":"2020-07-16T02:23:24.091Z"}
{"msg":"@dave.enyeart You wrote:\n\n> Finally, it is worth noting that the 'latest' tag on dockerhub images has been retired.\n\n\nAlthough I absolutely understand and share the rationale behind this change, this sudden removal caught us by surprise and caused significant disruption in our production environment running HLF 1.4. Naturally, this happened at the worst possible moment for us: during a scheduled test session involving 15+ people over multiple countries. \n\nMaybe this retiring was announced at a prior date; if that's the case then we unfortunately missed it.\n\nI thought this feedback might be valuable to you as we might not be the only users having faced this inconvenience.\n\nWe'll be migrating to HLF 2.x as soon as time permits.\n\nThanks again for the good work.","username":"AurelienGasser1","ts":"2020-07-16T02:23:24.091Z"}
{"msg":"Has joined the channel.","username":"Kelvin_Moutet","ts":"2020-07-16T12:37:31.066Z","type":"uj"}
{"msg":"For working with the Fabric CA, try this: https://hyperledger-fabric-ca.readthedocs.io/en/latest/","username":"cmgabriel","ts":"2020-07-20T17:31:31.792Z"}
{"msg":"@cmgabriel thanks","username":"AbhishekAadi","ts":"2020-07-20T18:39:20.988Z"}
{"msg":"The retirement of `latest` tag on dockerhub has tripped up some v1.4 deployments since by default peer tries to use `fabric-ccenv:latest` for building chaincode. Therefore we're thinking we'll go ahead and release a Fabric v1.4.8 to get the default updated to use `fabric-ccenv:1.4` (plus there's some other minor fixes since v1.4.7 got released two months ago)","username":"dave.enyeart","ts":"2020-07-20T20:46:18.933Z"}
{"msg":"See release notes: https://github.com/hyperledger/fabric/pull/1621","username":"dave.enyeart","ts":"2020-07-20T20:46:27.777Z"}
{"msg":"At the contributor meeting on Wednesday we'll see if there are any last minute backports for release-1.4, then plan to release v1.4.8","username":"dave.enyeart","ts":"2020-07-21T21:15:41.684Z"}
{"msg":"Any other topics for contributor meeting?","username":"dave.enyeart","ts":"2020-07-21T21:15:51.817Z"}
{"msg":"@here Fabric contributor meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-07-22T12:59:54.367Z"}
{"msg":"Has joined the channel.","username":"kleebeard","ts":"2020-07-22T20:53:16.839Z","type":"uj"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v1.4.8 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/8703\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2020-07-22T21:41:35.982Z"}
{"msg":"Has joined the channel.","username":"egits","ts":"2020-08-04T15:03:25.319Z","type":"uj"}
{"msg":"Could I add a topic to contributor meeting 10 hours later?","username":"davidkhala","ts":"2020-08-05T04:51:47.446Z"}
{"msg":"proposed topic: a npm package as admin capability portion\npresenter name: yuxiang Liu, David\nExpected duration: 30 mins","username":"davidkhala","ts":"2020-08-05T05:57:51.646Z"}
{"msg":"@davidkhala sounds good","username":"dave.enyeart","ts":"2020-08-05T12:02:44.232Z"}
{"msg":"@here At today's contributor meeting in one hour, we'll quickly review the Fabric Roadmap at https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104#Filter-Results/12436 , then move on to David's proposal.","username":"dave.enyeart","ts":"2020-08-05T12:03:52.881Z"}
{"msg":"Thanks Dave, I will keep it slim.","username":"davidkhala","ts":"2020-08-05T12:42:27.934Z"}
{"msg":"@here Contributor meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-08-05T12:59:00.149Z"}
{"msg":"https://youtu.be/cyUalVLx3xU","username":"rjones","ts":"2020-08-05T15:20:22.302Z"}
{"msg":"[05 AUG 2020 contributor call video](https://youtu.be/cyUalVLx3xU)","username":"rjones","ts":"2020-08-05T15:20:22.302Z"}
{"msg":"@rjones  I post all contributor meetings here: https://wiki.hyperledger.org/display/fabric/Contributor+Meetings+2020. Are you going to post all meetings to youtube going forward?","username":"dave.enyeart","ts":"2020-08-05T18:30:44.135Z"}
{"msg":"I haven't made a decision, but youtube can't be exclusive due to market restrictions.","username":"rjones","ts":"2020-08-05T18:35:10.900Z"}
{"msg":"I thought the YouTube link is easier to digest, add links to timestamps, and the like.","username":"rjones","ts":"2020-08-05T18:35:25.243Z"}
{"msg":"If the videos don't get any traction, I'm not going to do extra work :)","username":"rjones","ts":"2020-08-05T18:35:38.120Z"}
{"msg":"Hello Fabric maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT this Weds 8/12. Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-08-12+Meeting+notes","username":"jramps9","ts":"2020-08-11T00:09:16.066Z"}
{"msg":"@dave.enyeart \nproposed topic: modular interface for crypto service in Fabric\npresenter name: yuxiang Liu, David; jiannan Guo, Jay\nExpected duration: 40 mins","username":"davidkhala","ts":"2020-08-16T14:14:53.137Z"}
{"msg":"@here  Contributor meeting at the top of the hour","username":"dave.enyeart","ts":"2020-08-19T12:36:55.030Z"}
{"msg":"We'll do a ledger checkpoint early playback","username":"dave.enyeart","ts":"2020-08-19T12:37:07.473Z"}
{"msg":"@davidkhala you could present yours afterwards, or in two weeks, your choice","username":"dave.enyeart","ts":"2020-08-19T12:37:38.481Z"}
{"msg":"Any other agenda topics?","username":"dave.enyeart","ts":"2020-08-19T12:37:51.077Z"}
{"msg":"emm, I am discussing with Jay","username":"davidkhala","ts":"2020-08-19T12:41:53.243Z"}
{"msg":"We prefer to present our topics in the call two weeks later","username":"davidkhala","ts":"2020-08-19T12:57:24.717Z"}
{"msg":"@dave.enyeart We prefer to present our topics in the call two weeks later","username":"davidkhala","ts":"2020-08-19T12:57:24.717Z"}
{"msg":"ok","username":"dave.enyeart","ts":"2020-08-19T12:59:39.576Z"}
{"msg":"@here contributor meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-08-19T13:01:25.595Z"}
{"msg":"Hi. I've been asked to enable org-level projects on GitHub - you can have up to 25 repos linked to a project. You might take a look? It would delegate a lot of management away from, well, me. https://github.com/orgs/hyperledger/projects","username":"rjones","ts":"2020-08-20T16:42:56.849Z"}
{"msg":"Github Project is good one but to me it is somehow works similar to JIRA issue. So I think maintainer will chose either one of it as focus.","username":"davidkhala","ts":"2020-08-21T02:01:04.448Z"}
{"msg":"Github Project is good one but to me it somehow works similar as JIRA issue. So I think maintainer will chose either one of it as focus.","username":"davidkhala","ts":"2020-08-21T02:01:04.448Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=Gpt4hS2tXxbMTFhW2","username":"troyronda","ts":"2020-08-26T13:37:48.458Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=Gpt4hS2tXxbMTFhW2","url":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=Gpt4hS2tXxbMTFhW2","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"donnie.stewart","ts":"2020-08-27T16:16:03.782Z","type":"uj"}
{"msg":"Hey everyone, I am Setting up the development environment to build fabric and I keep getting this error:`DEP: Checking for dependency issues..\n./scripts/check_deps.sh\nBuilding golang.org/x/tools/cmd/goimports -> goimports\nLINT: Running code checks..\n./scripts/golinter.sh\nChecking with gofmt\nChecking with goimports\n./scripts/golinter.sh: line 29: goimports: command not found\nmake: *** [linter] Error 127\n` Can anyone help with solving this issue?","username":"donnie.stewart","ts":"2020-08-28T19:10:14.514Z"}
{"msg":"@here Fabric Contributor meeting next hour, agaenda:\nModular interface for crypto service in Fabric - David Liu, Jay Guo @davidkhala  @guoger \nFabric doc, peer deployment guide - Joe Alewine @joe-alewine","username":"dave.enyeart","ts":"2020-09-02T12:19:19.068Z"}
{"msg":"@here Fabric Contributor meeting next hour, agenda:\nModular interface for crypto service in Fabric - David Liu, Jay Guo @davidkhala  @guoger \nFabric doc, peer deployment guide - Joe Alewine @joe-alewine","username":"dave.enyeart","ts":"2020-09-02T12:19:19.068Z"}
{"msg":"@here meeting starting - https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-09-02T12:59:50.490Z"}
{"msg":"@dave.enyeart Sorry to everyone, I am occupied in another meeting until this moment .:disappointed_relieved:","username":"davidkhala","ts":"2020-09-02T14:22:21.662Z"}
{"msg":"Could we have another chance to speak at next time?","username":"davidkhala","ts":"2020-09-02T16:35:17.527Z"}
{"msg":"@davidkhala yes, I pushed yours to the Sept 16th meeting - https://wiki.hyperledger.org/display/fabric/Contributor+Meetings+2020","username":"dave.enyeart","ts":"2020-09-04T14:45:31.620Z"}
{"msg":"@dave.enyeart I'd like some guidance on which meetings you, the maintainers, want in the `/dev/weekly` email announcements.","username":"rjones","ts":"2020-09-04T15:14:20.270Z"}
{"msg":"Hello Fabric Maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 9/16 this week. Take a look at the agenda and add items here: https://wiki.hyperledger.org/display/Marketing/2020-09-16+Meeting+notes","username":"jramps9","ts":"2020-09-14T17:36:37.711Z"}
{"msg":"Do you want recurring meetings in that announcement? probably the most important is the every other week Fabric contributor meeting, but there are also recurring meetings for Fabric app developers, documentation workgroup, and samples workgroup.","username":"dave.enyeart","ts":"2020-09-15T11:34:43.018Z"}
{"msg":"@here We intend to release v2.2.1 and v1.4.9 fix releases in the coming days, aligned with our LTS release strategy. There are also some fixes queued up in release-2.1, so we could do a final v2.1.2 release as well. Alternatively just recommend everybody shift to v2.2 LTS since there are no breaking changes. Thoughts?","username":"dave.enyeart","ts":"2020-09-15T11:37:41.605Z"}
{"msg":"@dave.enyeart Does it mean there are some fixes done in 2.2.x back ported to v2.1.x?","username":"davidkhala","ts":"2020-09-15T12:34:28.105Z"}
{"msg":"take a look at the archive - I've been adding samples, docs, and app dev","username":"rjones","ts":"2020-09-15T14:01:28.470Z"}
{"msg":"https://wiki.hyperledger.org/display/HYP/2020","username":"rjones","ts":"2020-09-15T14:01:51.560Z"}
{"msg":"https://wiki.hyperledger.org/pages/viewpage.action?pageId=39618472 is the most recent","username":"rjones","ts":"2020-09-15T14:02:21.680Z"}
{"msg":"yes, the most important fixes were also backported to release-2.1 branch, since we know some deployments went to v2.1 prior to v2.2 LTS release, so we could cut a v2.1.2, but at the same time we want to encourage all production users to be on a LTS release.","username":"dave.enyeart","ts":"2020-09-15T15:12:22.402Z"}
{"msg":"Probably should have been doing this all along... but for Fabric Contributor Meeting reminder and agenda I'll start posting to mailing list","username":"dave.enyeart","ts":"2020-09-16T11:07:47.535Z"}
{"msg":"Today's meeting: https://lists.hyperledger.org/g/fabric/message/9020","username":"dave.enyeart","ts":"2020-09-16T11:07:52.605Z"}
{"msg":"@here  Contributor meeting starting: https://zoom.us/my/hyperledger.community.3","username":"dave.enyeart","ts":"2020-09-16T12:59:47.955Z"}
{"msg":"frustrating, I can hear you guys just fine...","username":"lehors","ts":"2020-09-16T13:17:07.328Z"}
{"msg":"I'm fine with the plan and will open a Jira for it","username":"lehors","ts":"2020-09-16T13:17:22.189Z"}
{"msg":"we do have a sample for the external builder with an extensive README that should give a good starting point for the doc","username":"lehors","ts":"2020-09-16T13:17:59.572Z"}
{"msg":"thanks","username":"lehors","ts":"2020-09-16T13:18:30.945Z"}
{"msg":"[ANN] We've formally released the Tech Preview of the Rust Smart Contracts and Wasm Chaincode Today; read more here https://lists.hyperledger.org/g/fabric/message/9031 and watch the demo https://www.youtube.com/watch?v=9QChDsuKwgc&feature=youtu.be","username":"mbwhite","ts":"2020-09-18T13:19:37.024Z"}
{"msg":"Howdy, folks. Any blockers for setting up https://github.com/hyperledger/fabric-website to render on https://fabric.hyperledger.org? should I put some placeholder content there?","username":"rjones","ts":"2020-09-22T14:39:42.853Z"}
{"msg":"Howdy. Currently, the permissions on https://github.com/hyperledger/fabric-rfcs/ only allow merges from admins and release managers, not Fabric maintainers. Is this on purpose, or an oversight? @C0rWin is trying to merge https://github.com/hyperledger/fabric-rfcs/pull/35 but doesn't have the permissions he expects.","username":"rjones","ts":"2020-09-24T14:57:09.407Z"}
{"msg":"I have figured it out, the merge policy requires 3 maintainers to review and approve, I've overlooked that part","username":"C0rWin","ts":"2020-09-24T14:59:20.080Z"}
{"msg":"Well, maybe it should, but it doesn't. The current permissions only require one approval.","username":"rjones","ts":"2020-09-24T14:59:43.834Z"}
{"msg":"em, this what I was told","username":"C0rWin","ts":"2020-09-24T15:02:43.238Z"}
{"msg":"two groups have merge bits: fabric-admins, fabric-release-managers. The current settings require one approval to merge any change.","username":"rjones","ts":"2020-09-24T15:03:24.540Z"}
{"msg":"if it is supposed to be three, I need to change that.","username":"rjones","ts":"2020-09-24T15:03:36.057Z"}
{"msg":"@rjones Since maintainers of any Fabric repo can approve RFCs, we didn't want to use only the Fabric project maintainers. So we kept it judgement based, with the recommendation that we get three maintainers from any project to approve before merging. If it is not difficult for you to enforce that by adding all the existing maintainer groups, that would be fine. Otherwise the admins and release managers can watch over it.","username":"dave.enyeart","ts":"2020-09-30T12:02:16.011Z"}
{"msg":"@rjones Since maintainers of any Fabric repo can approve RFCs, we didn't want to use only the core Fabric project maintainers. So we kept it judgement based, with the recommendation that we get three maintainers from any project to approve before merging. If it is not difficult for you to enforce that by adding all the existing maintainer groups, that would be fine. Otherwise the admins and release managers can watch over it.","username":"dave.enyeart","ts":"2020-09-30T12:02:16.011Z"}
{"msg":"@rjones Since maintainers of any Fabric repo can approve RFCs, we didn't want to use only the core Fabric project maintainers. So we kept it judgement based, with the recommendation that we get three maintainers from any project to approve before merging (one author/sponsor and two others). If it is not difficult for you to enforce that by adding all the existing maintainer groups, that would be fine. Otherwise the admins and release managers can watch over it.","username":"dave.enyeart","ts":"2020-09-30T12:02:16.011Z"}
{"msg":"Note - We are expecting to release Fabric v1.4.9 and v2.2.1, and Fabric CA v1.4.9 this afternoon.","username":"dave.enyeart","ts":"2020-09-30T12:16:41.614Z"}
{"msg":"@here Contributor meeting starting - https://zoom.us/j/5184947650?pwd=UE90WHhEaHRqOGEyMkV3cldKa2d2dz09","username":"dave.enyeart","ts":"2020-09-30T12:59:03.475Z"}
{"msg":"Note that passwords are now required","username":"dave.enyeart","ts":"2020-09-30T12:59:13.993Z"}
{"msg":"@dave.enyeart OK","username":"rjones","ts":"2020-09-30T13:16:21.276Z"}
{"msg":"@dave.enyeart I'll leave the permissions on `fabric-rfcs` as is","username":"rjones","ts":"2020-09-30T13:27:14.029Z"}
{"msg":"In today's contributor call during the gateway service topic, I mentioned that we have built a transaction service into our (extended) Fabric peers. This service (based on fabric-sdk-go) enables a peer to sign proposals, collect endorsements, and submit to an orderer. The base transaction service code is here: https://github.com/trustbloc/fabric-peer-ext/tree/master/pkg/txn\n\nOne of our uses of this service is to enable decentralized identifier (DID) operations. We have a higher layer REST API for decentralized identifier operations that is exposed by the peer. These operations result in peers obtaining endorsement for batches of these operations and submitting to the orderer. As such, the signing is performed by the peer. Here is the API for these decentralized identifiers: https://trustbloc.github.io/sidetree-fabric/docs/api/","username":"troyronda","ts":"2020-09-30T13:59:45.488Z"}
{"msg":"In today's contributor call during the gateway service topic, I mentioned that we have built a transaction service into our (extended) Fabric peers. This service (based on fabric-sdk-go) enables a peer to sign proposals, collect endorsements, and submit to an orderer. The base transaction service code is here: https://github.com/trustbloc/fabric-peer-ext/tree/master/pkg/txn\n\nOne of our uses of this service is to enable decentralized identifier (DID) operations. We have a higher layer REST API for decentralized identifier operations that is exposed by the peer. These operations result in peers obtaining endorsement for batches of these operations and submitting to the orderer. Here is the API for these decentralized identifiers: https://trustbloc.github.io/sidetree-fabric/docs/api/","username":"troyronda","ts":"2020-09-30T13:59:45.488Z"}
{"msg":"Thanks for sharing, Troy. That's really interesting","username":"bestbeforetoday","ts":"2020-09-30T14:59:15.401Z"}
{"msg":"One significant difference jumping out at me between this and the Fabric Gateway proposal is that (if I'm understanding correctly?) the transaction service has its own identity and is signing transactions on behalf of many clients. The intent with Fabric Gateway is that clients still sign their own proposals and transactions, with the gateway just doing the legwork of getting those proposals endorsed and \"queries\" executed by the right peers","username":"bestbeforetoday","ts":"2020-09-30T15:14:09.444Z"}
{"msg":"@jmason900 I think you requested the presentation on the Fabric Gateway proposal from today's contributor call? There is now a link to an epic with the presentation attached in the meeting minutes wiki page: https://wiki.hyperledger.org/display/fabric/Contributor+Meetings+2020","username":"bestbeforetoday","ts":"2020-09-30T16:16:54.872Z"}
{"msg":"@bestbeforetoday The transaction service code has the capability of orchestrating the full transaction flow (create proposal, collect endorsements, commit/send to ordering). Note: the service is also capable of doing only the commit phase: https://github.com/trustbloc/fabric-peer-ext/blob/65f6ce7fed7d1df6bdb9b0e91263be21e16f8ac6/pkg/txn/api/service.go#L26","username":"troyronda","ts":"2020-09-30T18:22:20.111Z"}
{"msg":"In the case of the decentralized identifier scenario I mentioned, the peer is performing the full transaction flow.","username":"troyronda","ts":"2020-09-30T18:28:19.021Z"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v1.4.9 and v2.2.1 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/9088\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2020-09-30T22:40:59.307Z"}
{"msg":"good news, but that makes me 0.0.5 releases behind","username":"greg2git","ts":"2020-10-01T14:28:55.368Z"}
{"msg":"While trying to better inform myself on the differences between Rust, Go, and other modern stacks, I came across this piece: https://matklad.github.io//2020/09/20/why-not-rust.html\n\nThis was written by a senior Rust developer, one who might ordinarily be expected to be highly defensive about their chosen language and dismissive of alternatives, or quick to couch Rust deficiencies as actually advantages or the cost of doing things \"right\". Instead, it's a very honest comparison that addresses both the technical issues (opinionated build system) with the more social issues (such as maturity, lack of stable ABI or specification, etc). While I've programmed in neither Rust nor Go nor plan to any time soon, I feel like if I were about to jump into a new project I'd be much better informed about whether or not to pick Rust. It's sort of like the Wikipedian \"neutral point of view\". It makes me much more confident that were I to pick Rust, I wouldn't be pushed into it by unreasonable claims and left holding the bag when reality hits. I can imagine a senior Go, C++, or LLVM developer reading that essay and having few things to counter or add, but not disagreeing with most of it. And, such essays are likely pretty useful when read by other core Rust devs to understand where to take the language next.\n\nNow I'm hungering for similar essays regarding other technologies... and of course, our own. Like, what would such an essay look like re Fabric? What are the valid reasons someone very well versed in Fabric might concede a different tool is better for someone or their needs? It may feel counter-intuitive for someone deep in Fabric to write a \"Why Not Fabric\" essay, but it would also likely be helpful to nudge more users into becoming contributors. Anyone interested in working on this, if it's not already been done?","username":"bbehlendorf","ts":"2020-10-11T18:21:08.373Z"}
{"msg":"For Fabric it's pretty easy- it lacks fundamental blockchain features like BFT, tokens, full anonymity, etc.","username":"yacovm","ts":"2020-10-12T07:46:18.290Z"}
{"msg":"I think a good essay would help folks understand whether those are intentional omissions based on some overarching project-wide perspective, or features that are yet to be implemented and followed other critical needs but aren't fundamentally at odds with how Fabric is architected or with that project-wide perspective.","username":"bbehlendorf","ts":"2020-10-12T16:13:10.570Z"}
{"msg":"Fabric's architecture is extremely modular and flexible, so there is really not technical reason why all 3 aspects I listed can't be successfully integrated. In fact, native token support was there in v2.0-alpha and then was reverted, and I know of at least one fork of Fabric [which has successfully integrated BFT](https://github.com/SmartBFT-Go/fabric/). For anonymity, I know of private forks that have integrated a PoC of full anonymity.","username":"yacovm","ts":"2020-10-12T18:31:08.924Z"}
{"msg":"Fabric's architecture is extremely modular and flexible, so there is really no technical reason why all 3 aspects I listed can't be successfully integrated. In fact, native token support was there in v2.0-alpha and then was reverted, and I know of at least one fork of Fabric [which has successfully integrated BFT](https://github.com/SmartBFT-Go/fabric/). For anonymity, I know of private forks that have integrated a PoC of full anonymity.","username":"yacovm","ts":"2020-10-12T18:31:08.924Z"}
{"msg":"It reminds me some often dicussed topics. Basically it step back to question\n\"What does Fabric refer to when \ncritic review and comment Fabric. \"\nCan any forks of Fabric or commerial product based on Fabric  could be taken into concern?\nCan some in or out side of Hyperledger open source projects playing, orchestrating, helping usage of Fabric be taken in to concern? \n\nI believe it is also intented strategic position of Fabric, to trade-off between Fabric community and Fabric maintainer. \n\nAnd I also believe a proper response to critics can be provide a Fabric \"awesome\" list of these reviewed and selected third-party projects and product, right inside Fabric core documentation and timely updated by maintainers.","username":"davidkhala","ts":"2020-10-13T01:46:18.895Z"}
{"msg":"Has left the channel.","username":"BrunoVavala","ts":"2020-10-13T23:34:10.128Z","type":"ul"}
{"msg":"That would be very helpful, I think it will set a base on what fabric is not ready at this moment and what can be improved in the future. Also, would help a bit other potential users to acknowledge what fabric is not good at in choosing a blockchain framework for their use case.","username":"vanitas92","ts":"2020-10-14T10:11:12.635Z"}
{"msg":"@here contributor meeting starting - https://zoom.us/j/5184947650?pwd=UE90WHhEaHRqOGEyMkV3cldKa2d2dz09","username":"dave.enyeart","ts":"2020-10-14T13:01:00.595Z"}
{"msg":"Matklad's piece is quite interesting. Most of the piece can be tagged as problems due to the lack of maturity. It takes time and effort to create IDEs, tooling, better compilers even with loads of practitioners-  \n\nTemplate programming in C++ needs a high degree of sophistication for example. I know because I have done it, badly in the beginning, when template support was inadequate and my own understanding was limited. As templates matured, more IDE support was available, so was standards support. In the end, I wrote several critical and generic functions using templates.  \n\nI concur 100% that systems programming need not be used everywhere. Appropriate tools for the appropriate job. Similar to the use of blockchains.\n\nIn this vein, Fabric as with the rest of blockchain space needs to mature with time and effort. More of the core functions of blockchain can be more easily integrated and disappears into lower layers of the stack. But a feature like tokens which is in direct conflict with the concept of channels (or in Corda the bilateral or even multi-lateral flows) may never be implemented in the substrate- but somehow riding on top. ... Eager to see a honest evaluation from a Fabric maintainer or practitioner.","username":"VipinB","ts":"2020-10-14T14:02:40.318Z"}
{"msg":"Hello Fabric Maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT TODAY. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-10-14+Meeting+notes","username":"jramps9","ts":"2020-10-14T14:07:15.480Z"}
{"msg":"@here contributor meeting starting - https://zoom.us/j/5184947650?pwd=UE90WHhEaHRqOGEyMkV3cldKa2d2dz09","username":"dave.enyeart","ts":"2020-10-28T12:59:48.206Z"}
{"msg":"Hello! we're low on project news and updates for the dev/weekly newsletter going out tomorrow 10/30. If there's anything you'd like to suggest, please do so in the comments here: https://wiki.hyperledger.org/pages/viewpage.action?pageId=41584474","username":"jramps9","ts":"2020-10-29T13:53:19.088Z"}
{"msg":"fyi: we updated our fabric peer extension's content addressable storage (CAS) implementation to store objects and files into a Fabric network using IPFS encodings (and chunking) and using IPFS content identifiers (CIDs). https://github.com/trustbloc/fabric-peer-ext/commit/b3fd86c182126293da4e16f7e306ee90740685f8","username":"troyronda","ts":"2020-10-30T18:47:30.825Z"}
{"msg":"we are using this capability in our implementation of a decentralized identifier (DID) registry based on DIF Sidetree.","username":"troyronda","ts":"2020-10-30T18:52:00.627Z"}
{"msg":"we are using this capability in our implementation of a decentralized identifier (DID) registry based on DIF Sidetree. (https://github.com/trustbloc/sidetree-fabric).","username":"troyronda","ts":"2020-10-30T18:52:00.627Z"}
{"msg":"@troyronda interesting topic!","username":"davidkhala","ts":"2020-11-04T14:14:57.010Z"}
{"msg":"@troyronda interesting topic! Troy, will you consider host a sharing session in coming contributor meeting about this cross-over?","username":"davidkhala","ts":"2020-11-04T14:14:57.010Z"}
{"msg":"Hello Fabric maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 11/11 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-11-11+Meeting+notes","username":"jramps9","ts":"2020-11-09T18:13:26.221Z"}
{"msg":"Has joined the channel.","username":"Jemal","ts":"2020-11-11T05:31:24.080Z","type":"uj"}
{"msg":"@here contributor meeting starting - https://zoom.us/j/5184947650?pwd=UE90WHhEaHRqOGEyMkV3cldKa2d2dz09","username":"dave.enyeart","ts":"2020-11-11T13:58:47.046Z"}
{"msg":"Has left the channel.","username":"Jemal","ts":"2020-11-11T14:07:43.940Z","type":"ul"}
{"msg":"A future sharing session makes sense - we are first hoping to finish our milestone and docs.","username":"troyronda","ts":"2020-11-11T14:09:31.789Z"}
{"msg":"Has joined the channel.","username":"nnAb","ts":"2020-11-16T06:49:38.340Z","type":"uj"}
{"msg":"`release-2.3` branch created from `master`. `master` will now be used for v2.4 development.","username":"dave.enyeart","ts":"2020-11-18T04:07:21.356Z"}
{"msg":"Reminder, if there higher risk things to do, it is better to do it in master early in a release cycle. e.g. any higher risk refactoring. We also plan to update Go version and open source dependencies, @Brett  has volunteered to start looking into that.","username":"dave.enyeart","ts":"2020-11-18T04:07:37.294Z"}
{"msg":"Reminder, if there higher risk things to do, it is better to do it in master early in a release cycle. e.g. any higher risk refactoring. We also plan to update Go version and open source dependencies, Brett has volunteered to start looking into that.","username":"dave.enyeart","ts":"2020-11-18T04:07:37.294Z"}
{"msg":"We haven't talked about which release will be the next LTS release yet. Probably will be 2.4 or 2.5. That allows us to get some feedback on the new features like channel participation api and ledger snapshot.","username":"dave.enyeart","ts":"2020-11-18T04:07:57.618Z"}
{"msg":"Fix PRs should generally be backported to `release-2.2`.  You can also backport to `release-2.3` at your discretion, for example any channel participation api or ledger snapshot fixes would make sense to backport to `release-2.3`.","username":"dave.enyeart","ts":"2020-11-18T04:08:22.494Z"}
{"msg":"Fix PRs should generally be backported to `release-2.2`.  You can also backport to `release-2.3` at your discretion, for example any channel participation api or ledger snapshot fixes would make sense to backport to `release-2.3`. And any critical fixes should go to `release-1.4`.","username":"dave.enyeart","ts":"2020-11-18T04:08:22.494Z"}
{"msg":"Fix PRs should generally be backported to `release-2.2` (latest LTS release).  You can also backport to `release-2.3` at your discretion, for example any channel participation api or ledger snapshot fixes would make sense to backport to `release-2.3`. And any critical fixes should go to `release-1.4` (prior LTS release).","username":"dave.enyeart","ts":"2020-11-18T04:08:22.494Z"}
{"msg":"2.3.0 will be tagged and released on Wednesday.","username":"dave.enyeart","ts":"2020-11-18T04:08:30.515Z"}
{"msg":"We'll likely do v1.4.10 and v2.2.2 in mid-December.","username":"dave.enyeart","ts":"2020-11-18T04:08:35.877Z"}
{"msg":"----------------------------------------------------------------------\nHyperledger Fabric v2.3.0 RELEASE ANNOUNCEMENT:\nhttps://lists.hyperledger.org/g/fabric/message/9302\n----------------------------------------------------------------------","username":"dave.enyeart","ts":"2020-11-18T20:36:17.704Z"}
{"msg":"congrats - We'll add to dev/weekly tomorrow @dave.enyeart","username":"jramps9","ts":"2020-11-19T17:46:54.896Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=RXM9tumF6w44JiRwL","username":"troyronda","ts":"2020-12-03T15:08:22.780Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=RXM9tumF6w44JiRwL","url":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=RXM9tumF6w44JiRwL","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi, we are happy to share the new Fabric Private Chaincode (FPC) RFC. We have updated the FPC architecture addressing the concerns from previous discussions. Please have a look! We welcome your feedback!\nhttps://github.com/hyperledger/fabric-rfcs/pull/40","username":"bur","ts":"2020-12-04T13:53:24.464Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=iNmPD637CC2sSfaLs","username":"troyronda","ts":"2020-12-07T15:06:43.675Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=iNmPD637CC2sSfaLs","url":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=iNmPD637CC2sSfaLs","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hello Fabric maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 12/9 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2020-12-09+Meeting+notes","username":"jramps9","ts":"2020-12-07T17:59:41.859Z"}
{"msg":"Has joined the channel.","username":"SamYuan1990","ts":"2020-12-09T11:20:27.297Z","type":"uj"}
{"msg":"@dave.enyeart Dear Dave, I can not find recent 2 contributor meetings video record in confluence wiki. Have they been uploaded yet?","username":"davidkhala","ts":"2020-12-10T04:25:13.362Z"}
{"msg":"Hi all appreciated maintainers, i have a question regarding gossip protocol. Since v2.2 the gossip block dissemination has been deprecated in favour of pulling blocks directly from the orderer. I would like to know the reason behind this or some document documenting this decision if that is possible? Thank you very much!","username":"vanitas92","ts":"2020-12-14T09:24:20.868Z"}
{"msg":"Gossip based data dissemination is meant for huge networks with thousands of nodes, such as bitcoin. \nFabric users usually deploy two-three peers in an organization, and there are not that many organizations in a typical network. It is simply not worthwhile to use gossip to send blocks because it is wasteful. You get a lot of duplication of information sent over the wire in the push/forwarding approach, and in any method that compares digests, it is slower than just pulling blocks from the orderer hence increases latency.","username":"yacovm","ts":"2020-12-14T17:23:37.693Z"}
{"msg":"Has joined the channel.","username":"qpqp","ts":"2020-12-17T13:49:11.139Z","type":"uj"}
{"msg":"Hello there everyone, like many I am coming here to seek help from other fellow hyperledger developers, I am glad I found such a place.\nI was wondering if any of you is familiar with the following warnings and errors inside orderers containers' logs :\n\n\"slow fdata sync\"\n\"Your disk is too slow and may cause loss of quorum and trigger leadership election\"\n\"Fail to send StepRequest because send queue overflown\"\n\nBut then the election fails and you have no Raft leader and there is no new elections and your network isn't working until your restart your orderer containers...\nI am working on Hlf1.4, is anyone familiar with such a problem ?","username":"qpqp","ts":"2020-12-17T13:49:11.551Z"}
{"msg":"Howdy. [A new automerge feature is in beta at GitHub](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/automatically-merging-a-pull-request); feel free to enable it per-repo if you desire.","username":"rjones","ts":"2020-12-21T16:16:45.063Z"}
{"msg":"m getting an error as ....SSL certificates cannot be trusted for orderer and peer service .....can anyone help me out to understand why is this vulnerability caused? is it something to do with docker?","username":"sanket1211","ts":"2021-01-06T06:37:03.075Z"}
{"msg":"Hello Fabric maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 1/13 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2021-01-13+Meeting+notes","username":"jramps9","ts":"2021-01-11T15:27:37.171Z"}
{"msg":"@dave.enyeart take a look: https://github.com/hyperledger/fabric-website/settings/access","username":"rjones","ts":"2021-01-11T17:46:26.702Z"}
{"msg":"Hello, Fabric Maintainers. As I sent a message to the Fabric mailing list, we just released a smart contract-based system operation tool for Hyperledger Fabric-based systems named \"OpsSC\", which aims to enable efficient decentralized system operations across multiple organizations. https://lists.hyperledger.org/g/fabric/message/9464\n\nWe would like to contribute to the Fabric community with this OpsSC. As the first step, we want to start this as a \"hyperledger-labs\" project. So, now we are looking for a sponsor who could help us open a repository in hyperledger-labs.\n\nAlso, we would like to introduce this OpsSC in the contributor meeting (Expected duration: 30 mins).","username":"tatsu-sato","ts":"2021-01-12T22:42:55.983Z"}
{"msg":"Hi. @dave.enyeart , others: are there any [projects here that I could mark as read-only](https://jira.hyperledger.org/secure/project/BrowseProjects.jspa?selectedCategory=all&selectedProjectType=all&contains=fabric&sortColumn=projectCategoryId&sortOrder=ascending&s=view_projects)? Are the project owners correct (I suspect no)","username":"rjones","ts":"2021-01-14T15:35:45.299Z"}
{"msg":"@rjones the projects all look valid with correct owner","username":"dave.enyeart","ts":"2021-01-14T16:47:37.825Z"}
{"msg":"@dave.enyeart thanks. @BrettLogan jumped in and gave me a hand to update them :)","username":"rjones","ts":"2021-01-14T16:48:54.492Z"}
{"msg":"PR for fabric-sdk-go 1.0.0: https://github.com/hyperledger/fabric-sdk-go/pull/160","username":"troyronda","ts":"2021-01-14T17:57:43.875Z"}
{"msg":"Following up from the announcement on the mailing list: https://lists.hyperledger.org/g/fabric/message/9367","username":"troyronda","ts":"2021-01-14T17:58:13.454Z"}
{"msg":"zoom","username":"pandrejko","ts":"2021-01-14T19:07:58.579Z"}
{"msg":"@tatsu-sato sorry i missed your message last week - could you present at contributor meeting tomorrow (January 20th)","username":"dave.enyeart","ts":"2021-01-19T16:39:21.484Z"}
{"msg":"@dave.enyeart Thank you for you response. We are going to join the contributor meeting tomorrow to introduce our OpsSC.\n\nWe will present this with the following materials:\n- Slides: https://github.com/satota2/fabric-opssc-materials/blob/main/materials/OpsSC_for_Hyperledger_Fabric_v2.x_pub.pdf\n- Demo movies: https://github.com/satota2/fabric-opssc-materials#demo-movies","username":"tatsu-sato","ts":"2021-01-19T22:15:44.237Z"}
{"msg":"Great, talk to you in 9 hours!","username":"dave.enyeart","ts":"2021-01-20T05:19:58.095Z"}
{"msg":"@dave.enyeart \nThank you for today's meeting and helping us open a repository for OpsSC in the labs.\n\nI'm preparing the proposal of OpsSC to the labs as follows:\nhttps://github.com/satota2/hyperledger-labs.github.io/blob/fabric-opssc/labs/fabric-opssc.md\n\nI would appreciate it if you would give us any comment on the contents of the proposal.\nIf it's OK, I'm going to submit the PR to the labs repository later.","username":"tatsu-sato","ts":"2021-01-20T16:04:28.210Z"}
{"msg":"Hi, the following repos still use `master` as the default branch: `fabric, fabric-amcl, fabric-baseimage, fabric-ca, fabric-chaincode-go, fabric-chaincode-java, fabric-chaincode-node, fabric-chaintool, fabric-cli, fabric-config, fabric-contract-api-go, fabric-gateway, fabric-gateway-java, fabric-lib-go, fabric-protos, fabric-protos-go, fabric-rfcs, fabric-samples, fabric-sdk-go, fabric-sdk-java, fabric-sdk-node, fabric-sdk-py, fabric-test`. `main` [is the current guidance for naming](https://github.com/github/renaming).","username":"rjones","ts":"2021-01-25T18:32:39.913Z"}
{"msg":"Hi, I _think_ I have a PR ready for review to make a start on implementing the Fabric Gateway RFC - https://github.com/hyperledger/fabric-rfcs/blob/master/text/0000-fabric-gateway.md - in the peer. This is just to get a feature flag in so that we can start development without surfacing the new feature to everyone until it's ready. Let me know if there's anything I missed/should have done differently. Thanks v much. https://github.com/hyperledger/fabric/pull/2314","username":"jtonline","ts":"2021-01-27T14:22:44.530Z"}
{"msg":"So the decision is to embed the gateway inside the peer and not be decoupled from it?","username":"yacovm","ts":"2021-01-27T14:38:41.037Z"}
{"msg":"Yes, the decision was to start with the embedded implementation first","username":"jtonline","ts":"2021-01-27T14:41:30.599Z"}
{"msg":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=YKdRb4FKS7g8WKNt7","username":"troyronda","ts":"2021-02-02T11:54:37.321Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=YKdRb4FKS7g8WKNt7","url":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=YKdRb4FKS7g8WKNt7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=92yaWX9GMPatJxf5r","username":"troyronda","ts":"2021-02-02T15:15:03.977Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=92yaWX9GMPatJxf5r","url":"https://chat.hyperledger.org/channel/fabric-sdk-go?msg=92yaWX9GMPatJxf5r","remote":true,"fileId":null,"fileName":null}]}
{"msg":"The recording of today's contributor call is now available on the wiki: https://wiki.hyperledger.org/display/fabric/Contributor+Meetings+2021","username":"bestbeforetoday","ts":"2021-02-03T16:01:05.280Z"}
{"msg":"Hello Fabric maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT on 2/10 this week. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/display/Marketing/2021-02-10+Meeting+notes","username":"jramps9","ts":"2021-02-08T15:15:21.822Z"}
{"msg":"Hi. Is there any plan for another Fabric LTS this year? From JIRA, it doesn't look like it.","username":"rjones","ts":"2021-02-12T19:30:19.240Z"}
{"msg":"Ry, the big thing being worked in 2021 is the Fabric Gateway integration into the peer to make submitting transactions from client applications simpler. When that stabilizes, we'll likely release it in a new LTS, likely sometime this year.","username":"dave.enyeart","ts":"2021-02-16T06:27:35.192Z"}
{"msg":"If you'd like more details on that one, see the Feb 3 contributor meeting recording: https://wiki.hyperledger.org/display/fabric/Contributor+Meetings+2021","username":"dave.enyeart","ts":"2021-02-16T06:36:35.919Z"}
{"msg":"thank you.","username":"rjones","ts":"2021-02-16T15:54:37.763Z"}
{"msg":"Hi, fabric maintainers. While working on the `maintainers` email list, I found a couple invalid emails: ```$ grep -Rl guojiannan hyperledger/*\nhyperledger/fabric/MAINTAINERS.md\nhyperledger/fabric-amcl/MAINTAINERS.md\nhyperledger/fabric-chaincode-evm/MAINTAINERS.md```","username":"rjones","ts":"2021-02-17T19:21:10.570Z"}
{"msg":"```$ grep -Rl slanka hyperledger/*\nhyperledger/fabric-test/MAINTAINERS.rst\n```","username":"rjones","ts":"2021-02-17T19:21:41.308Z"}
{"msg":"Has joined the channel.","username":"Helen_Garneau","ts":"2021-02-17T20:00:31.840Z","type":"uj"}
{"msg":"@guoger is the email correct at https://github.com/hyperledger/fabric/blob/master/MAINTAINERS.md ?","username":"dave.enyeart","ts":"2021-02-18T05:54:45.971Z"}
{"msg":"i think my email addr is correct there. @rjones was your mail rejected?","username":"guoger","ts":"2021-02-18T05:57:35.654Z"}
{"msg":"@guoger actually it looks like only https://github.com/hyperledger/fabric-chaincode-evm/blob/main/MAINTAINERS.md is incorrect, could you PR that file?","username":"dave.enyeart","ts":"2021-02-18T06:59:00.730Z"}
{"msg":"https://github.com/hyperledger/fabric-chaincode-evm/pull/33","username":"guoger","ts":"2021-02-18T07:02:45.126Z"}
{"msg":"Thanks. Invite sent","username":"rjones","ts":"2021-02-18T13:03:44.473Z"}
{"msg":"Hi, I'm looking to merge my two separate github accounts. I have one which is used for hyperledger awjh-ibm and am looking to instead move my maintainerships across to my other account awjh. I remember everything is now based around CODEOWNERS and I think I need to add my other account to the teams for the respective repos. That account however seems to need to be in the hyperledger organization before I can add it to the team. I do not seem to be able to do this myself does anyone know who can?","username":"awjh","ts":"2021-02-22T15:02:40.988Z"}
{"msg":"@awjh invite sent","username":"rjones","ts":"2021-02-22T15:44:26.759Z"}
{"msg":"If you're going to delete your other GitHub account, be sure to associate the email addresses from that account with your new one first.","username":"rjones","ts":"2021-02-22T15:45:20.003Z"}
{"msg":"Thanks :) I'm likely to rename the old one and keep it around incase something has gone horribly wrong","username":"awjh","ts":"2021-02-22T15:47:00.338Z"}
{"msg":"Hello Fabric Maintainers: Reminder to please join the DevRel Marketing Committee call at 9am PT today. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/x/Nqx6Ag","username":"Helen_Garneau","ts":"2021-03-10T13:00:17.236Z"}
{"msg":"(Please note new zoom info!)","username":"Helen_Garneau","ts":"2021-03-10T14:44:43.099Z"}
{"msg":"Contributors call now starting","username":"andrew-coleman","ts":"2021-03-31T13:01:36.419Z"}
{"msg":"https://zoom.us/j/5184947650?pwd=UE90WHhEaHRqOGEyMkV3cldKa2d2dz09","username":"andrew-coleman","ts":"2021-03-31T13:01:37.525Z"}
{"msg":"Hi Fabric Maintainers. We are dealing with the following setting that i want to bring your awareness in that maybe some defaults on peer config can be made or in some documentation. We have 3 fabric networks that represent 3 different environments, a test environment with 5 peers, a second UAT environment with 13 peers and the production one with 25 org, 2 peers per org which amounts to 50 peers. We use a single channel and private data in a way its is mapped that we have a PDC mapping of one org to another one, so in production we have almost 80+ pdc collections defined. \n\nAs we have been progressing in the environments and the applications that consume fabric, we have been aware of many warning messages about the gossip network not being able to keep up with all the alive checks that the peers are making between each other to check whether a peer is alive or not, although the peer is up and running fine. The pattern of messages are as follows on the peers:\n\n```\n2021-04-13 07:50:26.215 UTC [gossip.discovery] getDeadMembers -> WARN 089 Haven't heard from [124 66 156 88 222 183 251 2 97 95 87 184 199 246 173 36 189 251 65 131 112 195 81 133 47 188 127 16 1 146 156 60] for 25.211143745s\n2021-04-13 07:50:26.216 UTC [gossip.discovery] expireDeadMembers -> WARN 08a Entering [7c429c58deb7fb02615f57b8c7f6ad24bdfb418370c351852fbc7f1001929c3c]\n2021-04-13 07:50:26.216 UTC [gossip.discovery] expireDeadMembers -> WARN 08b Closing connection to Endpoint: peer0-org10:7051, InternalEndpoint: , PKI-ID: 7c429c58deb7fb02615f57b8c7f6ad24bdfb418370c351852fbc7f1001929c3c, Metadata: \n2021-04-13 07:50:26.217 UTC [gossip.discovery] expireDeadMembers -> WARN 08c Exiting\n2021-04-13 07:50:26.217 UTC [comm.grpc.server] 1 -> INFO 08d streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=192.168.169.196:36774 grpc.peer_subject=\"CN=peer0-org10,L=San Francisco,ST=California,C=US\" grpc.code=OK grpc.call_duration=6m53.18863927s\n2021-04-13 07:50:27.168 UTC [gossip.channel] reportMembershipChanges -> INFO 08e [[mychannel] Membership view has changed. peers went offline:  [[peer0-org10:7051 ]] , current view:  [[peer0-org8:7051 ] [peer0-org6:7051 ] [peer0-org1:7051 ] [peer0-org4:7051 ] [peer0-org11:7051 ] [peer0-org7:7051 ] [peer0-org2:7051 ] [peer0-org9:7051 ] [peer0-org3:7051 ]]]\n2021-04-13 07:50:37.167 UTC [gossip.channel] reportMembershipChanges -> INFO 091 [[mychannel] Membership view has changed. peers went online:  [[peer0-org10:7051 ]] , current view:  [[peer0-org1:7051 ] [peer0-org4:7051 ] [peer0-org11:7051 ] [peer0-org8:7051 ] [peer0-org6:7051 ] [peer0-org10:7051 ] [peer0-org9:7051 ] [peer0-org3:7051 ] [peer0-org7:7051 ] [peer0-org2:7051 ]]]\n```","username":"vanitas92","ts":"2021-04-13T08:30:42.489Z"}
{"msg":"Hi Fabric Maintainers. We are dealing with the following setting that i want to bring your awareness in that maybe some defaults on peer config can be made or in some documentation. We have 3 fabric networks that represent 3 different environments, a test environment with 5 peers, a second UAT environment with 13 peers and the production one with 25 org, 2 peers per org which amounts to 50 peers. We use a single channel and private data in a way its is mapped that we have a PDC mapping of one org to another one, so in production we have almost 80+ pdc collections defined. \n\nAs we have been progressing in the environments and the applications that consume fabric, we have been aware of many warning messages about the gossip network not being able to keep up with all the alive checks that the peers are making between each other to check whether a peer is alive or not, although the peer is up and running fine. The pattern of messages are as follows on the peers:\n\n```\n2021-04-13 07:50:26.215 UTC [gossip.discovery] getDeadMembers -> WARN 089 Haven't heard from [124 66 156 88 222 183 251 2 97 95 87 184 199 246 173 36 189 251 65 131 112 195 81 133 47 188 127 16 1 146 156 60] for 25.211143745s\n2021-04-13 07:50:26.216 UTC [gossip.discovery] expireDeadMembers -> WARN 08a Entering [7c429c58deb7fb02615f57b8c7f6ad24bdfb418370c351852fbc7f1001929c3c]\n2021-04-13 07:50:26.216 UTC [gossip.discovery] expireDeadMembers -> WARN 08b Closing connection to Endpoint: peer0-org10:7051, InternalEndpoint: , PKI-ID: 7c429c58deb7fb02615f57b8c7f6ad24bdfb418370c351852fbc7f1001929c3c, Metadata: \n2021-04-13 07:50:26.217 UTC [gossip.discovery] expireDeadMembers -> WARN 08c Exiting\n2021-04-13 07:50:26.217 UTC [comm.grpc.server] 1 -> INFO 08d streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=192.168.169.196:36774 grpc.peer_subject=\"CN=peer0-org10,L=San Francisco,ST=California,C=US\" grpc.code=OK grpc.call_duration=6m53.18863927s\n2021-04-13 07:50:27.168 UTC [gossip.channel] reportMembershipChanges -> INFO 08e [[mychannel] Membership view has changed. peers went offline:  [[peer0-org10:7051 ]] , current view:  [[peer0-org8:7051 ] [peer0-org6:7051 ] [peer0-org1:7051 ] [peer0-org4:7051 ] [peer0-org11:7051 ] [peer0-org7:7051 ] [peer0-org2:7051 ] [peer0-org9:7051 ] [peer0-org3:7051 ]]]\n2021-04-13 07:50:37.167 UTC [gossip.channel] reportMembershipChanges -> INFO 091 [[mychannel] Membership view has changed. peers went online:  [[peer0-org10:7051 ]] , current view:  [[peer0-org1:7051 ] [peer0-org4:7051 ] [peer0-org11:7051 ] [peer0-org8:7051 ] [peer0-org6:7051 ] [peer0-org10:7051 ] [peer0-org9:7051 ] [peer0-org3:7051 ] [peer0-org7:7051 ] [peer0-org2:7051 ]]]\n```\nThis makes us believe that either the default values of fabric in gossip alive are too aggressive or the peers might be under-resourced on CPU, since gossip protocol uses TLS and may create a bit of overhead. Interestingly, we don't see this messages in test environment with 5 peers, we see some happening in UAT with 13 peers and lots of this in production with 50 peers. I have checked the defaults on this and might be a bit aggressive the defaults when we are dealing with a lots of peers (reference https://github.com/hyperledger/fabric/blob/main/sampleconfig/core.yaml#L158):\n\n```\n        # Alive check interval(unit: second)\n        aliveTimeInterval: 5s\n        # Alive expiration timeout(unit: second)\n        aliveExpirationTimeout: 25s\n        # Reconnect interval(unit: second)\n        reconnectInterval: 25s\n```\nI am thinking that these default values might work fine for low density networks but not on large ones as it creates overheads of the checks that fabric is making between peers. The consequence on that \"disconnections\" is that we see quite a lot of private data errors on the client with failed dissemination errors like this:\n\n```\nChaincode status Code: (500) UNKNOWN. Description: error in simulation: failed to distribute private collection, txID 13cb711c9f12a5830ebe1798359c7fec14ccfc133e356e198521327d645029d4, channel mychannel: Failed disseminating 1 out of 34 private dissemination plans\n```\n\nDoes anybody have experience with that when dealing with large networks? All perspectives will be welcomed here :)","username":"vanitas92","ts":"2021-04-13T08:30:42.489Z"}
{"msg":"Hi Fabric Maintainers. We are dealing with the following setting that i want to bring your awareness in that maybe some defaults on peer config can be made or in some documentation. We have 3 fabric networks that represent 3 different environments, a test environment with 5 peers, a second UAT environment with 13 peers and the production one with 25 org, 2 peers per org which amounts to 50 peers. We use a single channel and private data in a way its is mapped that we have a PDC mapping of one org to another one, so in production we have almost 80+ pdc collections defined. \n\nAs we have been progressing in the environments and the applications that consume fabric, we have been aware of many warning messages about the gossip network not being able to keep up with all the alive checks that the peers are making between each other to check whether a peer is alive or not, although the peer is up and running fine. The pattern of messages are as follows on the peers:\n\n```\n2021-04-13 07:50:26.215 UTC [gossip.discovery] getDeadMembers -> WARN 089 Haven't heard from [124 66 156 88 222 183 251 2 97 95 87 184 199 246 173 36 189 251 65 131 112 195 81 133 47 188 127 16 1 146 156 60] for 25.211143745s\n2021-04-13 07:50:26.216 UTC [gossip.discovery] expireDeadMembers -> WARN 08a Entering [7c429c58deb7fb02615f57b8c7f6ad24bdfb418370c351852fbc7f1001929c3c]\n2021-04-13 07:50:26.216 UTC [gossip.discovery] expireDeadMembers -> WARN 08b Closing connection to Endpoint: peer0-org10:7051, InternalEndpoint: , PKI-ID: 7c429c58deb7fb02615f57b8c7f6ad24bdfb418370c351852fbc7f1001929c3c, Metadata: \n2021-04-13 07:50:26.217 UTC [gossip.discovery] expireDeadMembers -> WARN 08c Exiting\n2021-04-13 07:50:26.217 UTC [comm.grpc.server] 1 -> INFO 08d streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=192.168.169.196:36774 grpc.peer_subject=\"CN=peer0-org10,L=San Francisco,ST=California,C=US\" grpc.code=OK grpc.call_duration=6m53.18863927s\n2021-04-13 07:50:27.168 UTC [gossip.channel] reportMembershipChanges -> INFO 08e [[mychannel] Membership view has changed. peers went offline:  [[peer0-org10:7051 ]] , current view:  [[peer0-org8:7051 ] [peer0-org6:7051 ] [peer0-org1:7051 ] [peer0-org4:7051 ] [peer0-org11:7051 ] [peer0-org7:7051 ] [peer0-org2:7051 ] [peer0-org9:7051 ] [peer0-org3:7051 ]]]\n2021-04-13 07:50:37.167 UTC [gossip.channel] reportMembershipChanges -> INFO 091 [[mychannel] Membership view has changed. peers went online:  [[peer0-org10:7051 ]] , current view:  [[peer0-org1:7051 ] [peer0-org4:7051 ] [peer0-org11:7051 ] [peer0-org8:7051 ] [peer0-org6:7051 ] [peer0-org10:7051 ] [peer0-org9:7051 ] [peer0-org3:7051 ] [peer0-org7:7051 ] [peer0-org2:7051 ]]]\n```\nThis makes us believe that either the default values of fabric in gossip alive are too aggressive or the peers might be under-resourced on CPU, since gossip protocol uses TLS and may create a bit of overhead. Interestingly, we don't see this messages in test environment with 5 peers, we see some happening in UAT with 13 peers and lots of this in production with 50 peers. I have checked the defaults on this and might be a bit aggressive the defaults when we are dealing with a lots of peers (reference https://github.com/hyperledger/fabric/blob/main/sampleconfig/core.yaml#L158):\n\n```\n        # Alive check interval(unit: second)\n        aliveTimeInterval: 5s\n        # Alive expiration timeout(unit: second)\n        aliveExpirationTimeout: 25s\n        # Reconnect interval(unit: second)\n        reconnectInterval: 25s\n```\nI am thinking that these default values might work fine for low density networks but not on large ones as it creates overheads of the checks that fabric is making between peers. The consequence on these \"disconnections\" is that we see quite a lot of private data errors on the client with failed dissemination errors like this:\n\n```\nChaincode status Code: (500) UNKNOWN. Description: error in simulation: failed to distribute private collection, txID 13cb711c9f12a5830ebe1798359c7fec14ccfc133e356e198521327d645029d4, channel mychannel: Failed disseminating 1 out of 34 private dissemination plans\n```\n\nDoes anybody have experience with that when dealing with large networks? All perspectives will be welcomed here :)","username":"vanitas92","ts":"2021-04-13T08:30:42.489Z"}
{"msg":"Hi Fabric Maintainers. We are dealing with the following setting that i want to bring your awareness in that maybe some defaults on peer config can be made or in some documentation. We have 3 fabric networks that represent 3 different environments, a test environment with 5 peers, a second UAT environment with 13 peers and the production one with 25 org, 2 peers per org which amounts to 50 peers. We use a single channel and private data in a way its is mapped that we have a Private Data Collections (PDC) mapping of one org to another one, so in production we have almost 80+ PDCs defined. \n\nAs we have been progressing in the environments and the applications that consume fabric, we have been aware of many warning messages about the gossip network not being able to keep up with all the alive checks that the peers are making between each other to check whether a peer is alive or not, although the peer is up and running fine. The pattern of messages are as follows on the peers:\n\n```\n2021-04-13 07:50:26.215 UTC [gossip.discovery] getDeadMembers -> WARN 089 Haven't heard from [124 66 156 88 222 183 251 2 97 95 87 184 199 246 173 36 189 251 65 131 112 195 81 133 47 188 127 16 1 146 156 60] for 25.211143745s\n2021-04-13 07:50:26.216 UTC [gossip.discovery] expireDeadMembers -> WARN 08a Entering [7c429c58deb7fb02615f57b8c7f6ad24bdfb418370c351852fbc7f1001929c3c]\n2021-04-13 07:50:26.216 UTC [gossip.discovery] expireDeadMembers -> WARN 08b Closing connection to Endpoint: peer0-org10:7051, InternalEndpoint: , PKI-ID: 7c429c58deb7fb02615f57b8c7f6ad24bdfb418370c351852fbc7f1001929c3c, Metadata: \n2021-04-13 07:50:26.217 UTC [gossip.discovery] expireDeadMembers -> WARN 08c Exiting\n2021-04-13 07:50:26.217 UTC [comm.grpc.server] 1 -> INFO 08d streaming call completed grpc.service=gossip.Gossip grpc.method=GossipStream grpc.peer_address=192.168.169.196:36774 grpc.peer_subject=\"CN=peer0-org10,L=San Francisco,ST=California,C=US\" grpc.code=OK grpc.call_duration=6m53.18863927s\n2021-04-13 07:50:27.168 UTC [gossip.channel] reportMembershipChanges -> INFO 08e [[mychannel] Membership view has changed. peers went offline:  [[peer0-org10:7051 ]] , current view:  [[peer0-org8:7051 ] [peer0-org6:7051 ] [peer0-org1:7051 ] [peer0-org4:7051 ] [peer0-org11:7051 ] [peer0-org7:7051 ] [peer0-org2:7051 ] [peer0-org9:7051 ] [peer0-org3:7051 ]]]\n2021-04-13 07:50:37.167 UTC [gossip.channel] reportMembershipChanges -> INFO 091 [[mychannel] Membership view has changed. peers went online:  [[peer0-org10:7051 ]] , current view:  [[peer0-org1:7051 ] [peer0-org4:7051 ] [peer0-org11:7051 ] [peer0-org8:7051 ] [peer0-org6:7051 ] [peer0-org10:7051 ] [peer0-org9:7051 ] [peer0-org3:7051 ] [peer0-org7:7051 ] [peer0-org2:7051 ]]]\n```\nThis makes us believe that either the default values of fabric in gossip alive are too aggressive or the peers might be under-resourced on CPU, since gossip protocol uses TLS and may create a bit of overhead, but we have reserved almost a 1 vCPU per each peer. Interestingly, we don't see this messages in test environment with 5 peers, we see some happening in UAT with 13 peers and lots of this in production with 50 peers. I have checked the defaults on this and might be a bit aggressive the defaults when we are dealing with a lots of peers (reference https://github.com/hyperledger/fabric/blob/main/sampleconfig/core.yaml#L158):\n\n```\n        # Alive check interval(unit: second)\n        aliveTimeInterval: 5s\n        # Alive expiration timeout(unit: second)\n        aliveExpirationTimeout: 25s\n        # Reconnect interval(unit: second)\n        reconnectInterval: 25s\n```\nI am thinking that these default values might work fine for low density networks but not on large ones as it creates overheads of the checks that fabric is making between peers. The consequence on these \"disconnections\" is that we see quite a lot of private data errors on the client with failed dissemination errors like this:\n\n```\nChaincode status Code: (500) UNKNOWN. Description: error in simulation: failed to distribute private collection, txID 13cb711c9f12a5830ebe1798359c7fec14ccfc133e356e198521327d645029d4, channel mychannel: Failed disseminating 1 out of 34 private dissemination plans\n```\n\nDoes anybody have experience with that when dealing with large networks? All perspectives will be welcomed here :)","username":"vanitas92","ts":"2021-04-13T08:30:42.489Z"}
{"msg":">  This makes us believe that either the default values of fabric in gossip alive are too aggressive or the peers might be under-resourced on CPU, since gossip protocol uses TLS and may create a bit of overhead,\n\nThis has nothing to do with TLS, gossip uses long lasting TLS connections, and TLS only uses lots of CPU during the handshake, but afterwards it's just symmetric encryption (either AES GCM or ChaCha20-Poly1305) which is super cheap","username":"yacovm","ts":"2021-04-13T09:26:36.857Z"}
{"msg":"The issue, is that gossip sends heart beats that contain signatures, and peers verify these signatures.","username":"yacovm","ts":"2021-04-13T09:27:00.471Z"}
{"msg":"If you have lots of peers you need to tune the heart beat intervals","username":"yacovm","ts":"2021-04-13T09:27:10.435Z"}
{"msg":"otherwise your CPU will get overloaded with verifying ECDSA signatures","username":"yacovm","ts":"2021-04-13T09:27:21.921Z"}
{"msg":"There is a similar issue with channel heartbeats, so if you have lots of channels it is also amplified","username":"yacovm","ts":"2021-04-13T09:29:28.990Z"}
{"msg":"50 peers and a heartbeat every 5 second means verifying a heartbeat once per 100 milliseconds, it's not that much.","username":"yacovm","ts":"2021-04-13T09:30:51.828Z"}
{"msg":"50 peers and a heartbeat every 5 second means verifying a heartbeat once per 100 milliseconds on average, it's not that much.","username":"yacovm","ts":"2021-04-13T09:30:51.828Z"}
{"msg":"But what Fabric version are you using ?","username":"yacovm","ts":"2021-04-13T09:32:45.468Z"}
{"msg":"We are using latest LTS 2.2.2","username":"vanitas92","ts":"2021-04-13T10:31:29.664Z"}
{"msg":"ok","username":"yacovm","ts":"2021-04-13T10:41:40.955Z"}
{"msg":"We are now going to try to change the above setting to at least `aliveTimeInterval: 60s`, `aliveExpirationTimeout: 40s` and `reconnectInterval: 30s` and see if we can decrease a bit the CPU consumption, as this environment we see that the peers are consuming more cpu than other environments when idle","username":"vanitas92","ts":"2021-04-13T11:16:22.295Z"}
{"msg":"I suggest that expiration will be higher than alive interval","username":"yacovm","ts":"2021-04-13T11:52:34.432Z"}
{"msg":"preserve the ratio of 5 or make it 3 times more at least","username":"yacovm","ts":"2021-04-13T11:52:53.836Z"}
{"msg":"Thank you we will set to 180s then, i will let you know if there is results","username":"vanitas92","ts":"2021-04-13T12:09:43.383Z"}
{"msg":"We applied all peers the recommended configuration `aliveTimeInterval: 60s`, `aliveExpirationTimeout: 180s` and `reconnectInterval: 30s` and the logs output way less errors than before so that is good news, thanks for the recommendation on the ratio. CPU, on the other hand, we do not appreciate a considerate reduction so we will look deeper on what is causing this high consumption while network is idle. Thank you!","username":"vanitas92","ts":"2021-04-13T14:56:04.558Z"}
{"msg":"Hi, Fabric Maintainers. What language is best supported for Chaincode development?","username":"tkuhrt","ts":"2021-04-16T18:40:48.992Z"}
{"msg":"Go","username":"yacovm","ts":"2021-04-16T19:04:08.222Z"}
{"msg":"Now Dave K will say \"javascript\" but don't believe him","username":"yacovm","ts":"2021-04-16T19:04:52.044Z"}
{"msg":"I was going to say my order of preference would go/typescript/javascript/java from a performance point of view","username":"davidkel","ts":"2021-04-16T19:05:42.574Z"}
{"msg":"I agree that Java would be last","username":"yacovm","ts":"2021-04-16T19:06:02.375Z"}
{"msg":"Go is a great language for chaincode but equally I think typescript is as well","username":"davidkel","ts":"2021-04-16T19:06:31.042Z"}
{"msg":"Not that I hate java, it's just that I think it's the implementation that got the least \"friction\" in the community, therefore probably less bugs were discovered","username":"yacovm","ts":"2021-04-16T19:06:53.545Z"}
{"msg":"In contrast, when we introduce a new feature to chaincode, we do it for Golang first, and also the Fabric core integration tests use Golang by default, and it was the first chaincode to be used, so it is the most \"tested\" implementation there is.","username":"yacovm","ts":"2021-04-16T19:07:58.755Z"}
{"msg":"Perfect. Thank you yacovm and davidkel.","username":"tkuhrt","ts":"2021-04-16T19:08:33.060Z"}
{"msg":"Has joined the channel.","username":"ankitm123","ts":"2021-05-06T18:28:30.269Z","type":"uj"}
{"msg":"Has joined the channel.","username":"nao","ts":"2021-05-10T07:58:58.154Z","type":"uj"}
{"msg":"Hi Fabric Maintainers,could we accept some PR about bump some vendor version on release-1.4 branch to support chaincode developer to use `go mod vendor`?","username":"davidkhala","ts":"2021-05-26T04:05:50.009Z"}
{"msg":"Hi Fabric Maintainers,could we accept some PR about bumping some vendor package version on release-1.4 branch to better support chaincode developer using `go mod vendor`?","username":"davidkhala","ts":"2021-05-26T04:05:50.009Z"}
{"msg":"Since 1.4 is not actively in support anymore, the recommendation is to move to Fabric v2.2.x. But could you summarize the issue you see?","username":"dave.enyeart","ts":"2021-05-26T10:17:13.414Z"}
{"msg":"Basically it is due to hard pinning `github.com/fsouza/go-dockerclient` to 1.3.0 and if developer did not following and repeat this hard version pin in his own `go.mod` file, go module will automatically assign 1.7.2 to it, which has a different data property type and will fail a simple `go test` or `go build`","username":"davidkhala","ts":"2021-05-27T02:54:52.341Z"}
{"msg":"Basically it is due to hard pinning `github.com/fsouza/go-dockerclient` to 1.3.0 and if developer did not recognize this and repeat this hard version pin in his own `go.mod` file, go module will automatically assign 1.7.2 to you, which has a different data property type and will fail a simple `go test` or `go build`","username":"davidkhala","ts":"2021-05-27T02:54:52.341Z"}
{"msg":"I finally come up with a workaround yesterday, by both of \n- a touch function to prevent `go mod tidy` clean it up https://github.com/davidkhala/fabric-common-chaincode-golang/blob/release-1.4/workaround.go\n- follow the hard versioning in my own `go.mod` https://github.com/davidkhala/fabric-common-chaincode-golang/blob/release-1.4/go.mod","username":"davidkhala","ts":"2021-05-27T02:58:22.237Z"}
{"msg":"What happens if you just use a replace directive, I don't think replace affects transitive dependencies:","username":"BrettLogan","ts":"2021-05-31T00:49:48.111Z"}
{"msg":"```module github.com/davidkhala/fabric-common-chaincode-golang\n\ngo 1.14\n\nreplace github.com/fsouza/go-dockerclient v1.3.0 => github.com/fsouza/go-dockerclient v1.7.2\n\nrequire (\n\tgithub.com/Knetic/govaluate v3.0.0+incompatible // indirect\n\tgithub.com/Shopify/sarama v1.28.0 // indirect\n\tgithub.com/davidkhala/goutils v1.4.0\n\tgithub.com/fsouza/go-dockerclient v1.3.0 // indirect\n\tgithub.com/golang/protobuf v1.4.3\n\tgithub.com/hashicorp/go-version v1.3.0 // indirect\n\tgithub.com/hyperledger/fabric v1.4.12\n\tgithub.com/hyperledger/fabric-amcl v0.0.0-20210319225857-000ace5745f9 // indirect\n\tgithub.com/hyperledger/fabric-lib-go v1.0.0 // indirect\n\tgithub.com/miekg/pkcs11 v1.0.3 // indirect\n\tgithub.com/onsi/ginkgo v1.16.1 // indirect\n\tgithub.com/onsi/gomega v1.11.0 // indirect\n\tgithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7 // indirect\n\tgithub.com/spf13/viper v1.4.0 // indirect\n\tgithub.com/sykesm/zap-logfmt v0.0.4 // indirect\n\tgithub.com/syndtr/goleveldb v1.0.0 // indirect\n)\n```","username":"BrettLogan","ts":"2021-05-31T00:49:51.226Z"}
{"msg":"I believe the replace directive will only affect your top level and not the transitive dep in fabric","username":"BrettLogan","ts":"2021-05-31T00:50:23.606Z"}
{"msg":"I have done so in transitive dependencies. It can works for its own build, but later if we build a top app upon it the top app build process will fail, since the stupid go module auto versioning cannot take care of our 1.3.0 pinning and it believe `1.7.2 should be OK`","username":"davidkhala","ts":"2021-05-31T01:47:27.918Z"}
{"msg":"I will have a try for it. \nBut still it is another workaround, so won't help too much.","username":"davidkhala","ts":"2021-05-31T01:47:27.918Z"}
{"msg":"I will have a try for it. \nBut still it is another workaround, so won't help too much.\n\npinning to 1.7.2 or 1.3.0 are both pinning.","username":"davidkhala","ts":"2021-05-31T01:47:27.918Z"}
{"msg":"The fundamental problem is go module. Go module cannot smartly detect fabric's version pinning during go mod tidy or go mod vendor","username":"davidkhala","ts":"2021-05-31T01:52:36.400Z"}
{"msg":"Well it can, if the underlying dependency uses Go Modules. 1.4 fabric unfortunately didn't use go modules, we used `govendor` to manage our deps back then. If you Fabric had used modules in 1.4 none of this would be happening","username":"BrettLogan","ts":"2021-05-31T02:06:52.237Z"}
{"msg":"Well it can, if the underlying dependency uses v2 Go Modules. 1.4 fabric unfortunately didn't use go modules, we used `govendor` to manage our deps back then. If you Fabric had used modules in 1.4 none of this would be happening","username":"BrettLogan","ts":"2021-05-31T02:06:52.237Z"}
{"msg":"Well it can, if the underlying dependency uses v2 Go Modules. 1.4 fabric unfortunately didn't use go modules, we used `govendor` to manage our deps back then. If Fabric had used modules in 1.4 none of this would be happening","username":"BrettLogan","ts":"2021-05-31T02:06:52.237Z"}
{"msg":"@BrettLogan indeed.","username":"davidkhala","ts":"2021-06-09T11:55:37.539Z"}
{"msg":"Issue while Upgrading fabric from 1.4.4 to 2.2\n\nwe are able to update peer and orderer components to the latest version but while updating the channel capababilities to fetch the config block,peers are not able to connect with the orderer\n\nError: could not not connect to ordering service:could not dial endpoint:dial tcp:lookup orderer.example.com on 192.168.0.1:53 :no such host channel=mychannel\n\n\nattaching the logs for more details","username":"sanket1211","ts":"2021-06-15T10:10:39.115Z"}
{"msg":"","username":"sanket1211","ts":"2021-06-15T10:10:51.936Z","attachments":[{"type":"file","title":"Screenshot from 2021-06-14 14-39-30.png","title_link":"/file-upload/HhuhQgGL4fDzdTQvz/Screenshot%20from%202021-06-14%2014-39-30.png","image_url":"/file-upload/HhuhQgGL4fDzdTQvz/Screenshot%20from%202021-06-14%2014-39-30.png","image_type":"image/png","image_size":622687,"url":"/file-upload/HhuhQgGL4fDzdTQvz/Screenshot%20from%202021-06-14%2014-39-30.png","remote":false,"fileId":"HhuhQgGL4fDzdTQvz","fileName":"Screenshot from 2021-06-14 14-39-30.png"}]}
{"msg":"","username":"sanket1211","ts":"2021-06-15T10:10:52.225Z","attachments":[{"type":"file","title":"Screenshot from 2021-06-14 14-39-41.png","title_link":"/file-upload/4b4MRtojartxyt9cr/Screenshot%20from%202021-06-14%2014-39-41.png","image_url":"/file-upload/4b4MRtojartxyt9cr/Screenshot%20from%202021-06-14%2014-39-41.png","image_type":"image/png","image_size":388155,"url":"/file-upload/4b4MRtojartxyt9cr/Screenshot%20from%202021-06-14%2014-39-41.png","remote":false,"fileId":"4b4MRtojartxyt9cr","fileName":"Screenshot from 2021-06-14 14-39-41.png"}]}
{"msg":"Can someone explain the rationale of removing the management and administrative functions from the Node.js SDK? Requiring using a CLI is a huge step backward.","username":"toddinpal","ts":"2021-06-21T15:46:27.728Z"}
{"msg":"@mbwhite  / @bestbeforetoday  :arrow_double_up:","username":"yacovm","ts":"2021-06-21T16:24:21.022Z"}
{"msg":"My understanding is that the burden of duplicating admin capability across multiple language SDKs was too high. There is a finite amount of community development resource to do this work. So the focus is on maintaining CLI commands for admin tasks and not investing further in admin capabilities in the SDKs","username":"bestbeforetoday","ts":"2021-06-22T08:54:56.554Z"}
{"msg":"The internals of the Node SDK specifically were significantly re-written for the v2 release, which is why the admin capabilities disappeared from the v2 Node SDK. In contrast, the Java SDK internals were not re-written so some admin capability still exists there, although it may be lacking some v2 features","username":"bestbeforetoday","ts":"2021-06-22T08:56:40.583Z"}
{"msg":"You can still continue to use the v1.4 admin capabilities in the v1.4 Node SDK with v2 Fabric","username":"bestbeforetoday","ts":"2021-06-22T08:57:21.941Z"}
{"msg":"Thanks for the explanation.  Do you have a rough idea of the effort to add back in the admin capabilities to the Node SDK?  We may be able to find the resources to work on it.","username":"toddinpal","ts":"2021-06-23T14:24:10.025Z"}
{"msg":"I'm curious as to how others are planning on supporting admin APIs?  We have a console used to manage and administer our Fabric instances.  Spawning CLI commands from our API server seems precarious at best.","username":"toddinpal","ts":"2021-06-23T17:27:55.654Z"}
{"msg":"@davidkhala has already re-implemented many (if not all?) of the admin capability on top of the v2.2 Node SDK internals, so he probably has a good feel for how much (if any!) work there is to be done: https://github.com/davidkhala/fabric-common/tree/master/nodejs/admin","username":"bestbeforetoday","ts":"2021-06-24T08:20:29.266Z"}
{"msg":"I guess for me the main concern about rolling this into the existing SDK is ongoing maintenance and development of those admin capabilities. I really don't have the bandwidth to take that on. Others might have other opinions of course :)","username":"bestbeforetoday","ts":"2021-06-24T08:22:26.909Z"}
{"msg":"Just to expand on what Mark said, the existing SDKs have evolved over time in parallel with the development of the Fabric core.  The SDKs were owned by different maintainer groups with different requirements and different ideas on what abstractions (if any) should be exposed.  Consequently, they diverged in capability and user complexity, but in general they were fairly low level and mixed client application and administrative capabilities into the same classes.  Bottom line is that they are hard to use and even harder to maintain.  We started a strategy about 3 years ago to build some higher level abstractions across all SDKs specifically aimed at making it easier for client application developers to submit and evaluate (query) transactions.  Originally built as a layer on top of the existing SDKs, this ‘gateway’ programming model is currently being written into the peer for version 2.4 with new lightweight SDKs on the client side (which expose these same high level abstractions).  You can find out more about this at github.com/hyperledger/fabric-gateway \nAdministrative tasks don’t fit into this gateway model, nor should they be in the new SDK libraries because they have different abstractions and different end users.  I have no problem at all with the idea of a fabric-admin library (and David’s could be the basis for that), but that’s not on the roadmap at the moment, hence we recommend the CLI.","username":"andrew-coleman","ts":"2021-06-24T09:10:09.275Z"}
{"msg":"Hi I am the David mentioned here. around more than 1 year ago I create some alternative way to do so and welcome comment and usage.\n\nI would like to contribute it in the Apache way but so far I have not got enough thumbs for my work. so it is not in high priority in my open source time. but it is still under actively maintained as my personal project. \n\n\nthe project is nodejs only and also under Apache license\n\nAnyone can create issue, star or fork to show your interest","username":"davidkhala","ts":"2021-06-24T11:44:29.536Z"}
{"msg":"Actually it is all in my mind except for external chain code\n and legacy chaincode lifecycle","username":"davidkhala","ts":"2021-06-24T11:47:06.985Z"}
{"msg":"@andrew-coleman I guess I'm somewhat at a loss for words.  I agree the admin APIs (such as those provided by the fabric-client module) aren't necessarily used by a consumer of a Fabric network, they are absolutely required by the provider of a Fabric network.  We need tools that can manage, administer, etc., a Fabric network and forcing those tools to use a CLI interface makes integration extremely difficult.  Trying to sanitize the arguments to the CLI to prevent injection attacks, interpreting the output of the CLI, and that this output may change is subtle ways that won't affect human users of the CLI but likely break servers trying to understand that output is insane.  APIs first, CLIs second where the CLIs are built on the APIs, but those same APIs are available to OA&M  servers.","username":"toddinpal","ts":"2021-06-24T18:35:43.962Z"}
{"msg":"@andrew-coleman I guess I'm somewhat at a loss for words.  I agree the admin APIs (such as those provided by the fabric-client module) aren't necessarily used by a consumer of a Fabric network, they are absolutely required by the provider of a Fabric network.  We need tools that can manage, administer, etc., a Fabric network and forcing those tools to use a CLI interface makes integration extremely difficult.  Trying to sanitize the arguments to the CLI to prevent injection attacks, interpreting the output of the CLI, and that this output may change in subtle ways that won't affect human users of the CLI but likely break servers trying to understand that output is insane.  APIs first, CLIs second where the CLIs are built on the APIs, but those same APIs are available to OA&M  servers.","username":"toddinpal","ts":"2021-06-24T18:35:43.962Z"}
{"msg":"So you always have an option like what I chose: build admin sdk on your own, if you dislike CLI. All admin task is based on playing grpc and protobuf which are ready to use in npm `fabric-protos`. I spent 2 months as individual to work out.","username":"davidkhala","ts":"2021-06-25T07:11:29.418Z"}
{"msg":"There is also a package here that is embedded inside the IBM Blockchain Platform VS Code extension, which does Fabric v2 lifecycle chain installation, although I'm not sure how easy it would be to extract or reuse this code outside of that VS Code extension: https://github.com/IBM-Blockchain/blockchain-vscode-extension/tree/master/packages/blockchain-fabric-admin","username":"bestbeforetoday","ts":"2021-06-25T08:12:45.518Z"}
{"msg":"There is also a package here that is embedded inside the IBM Blockchain Platform VS Code extension, which does Fabric v2 lifecycle chaincode installation, although I'm not sure how easy it would be to extract or reuse this code outside of that VS Code extension: https://github.com/IBM-Blockchain/blockchain-vscode-extension/tree/master/packages/blockchain-fabric-admin","username":"bestbeforetoday","ts":"2021-06-25T08:12:45.518Z"}
{"msg":"Very minor PR up for review: https://github.com/hyperledger/fabric-samples/pull/459 (Just a minor yaml simplification of `configtx.yaml`)","username":"ankitm123","ts":"2021-07-07T10:44:13.913Z"}
{"msg":"Has joined the channel.","username":"jmaric","ts":"2021-07-12T16:38:55.522Z","type":"uj"}
{"msg":"Hello Fabric maintainers! Reminder to please join the DevRel Marketing Committee call at 9am PT tomorrow- 7/14. Take a look at the agenda and add items if you'd like here: https://wiki.hyperledger.org/x/sANCAw","username":"Helen_Garneau","ts":"2021-07-13T13:24:20.838Z"}
{"msg":"Has joined the channel.","username":"Maginaro","ts":"2021-07-21T10:04:10.518Z","type":"uj"}
{"msg":"Has joined the channel.","username":"gentios","ts":"2021-07-27T12:07:43.504Z","type":"uj"}
{"msg":"while trying to trigger build with `/ci-run`, i got gh action failure saying\n```\nRun org=$(jq -r \".repository.owner.login\" \"${GITHUB_EVENT_PATH}\")\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n100 19097    0 19097    0     0  46351      0 --:--:-- --:--:-- --:--:-- 46351\nWARNING: Extension 'azure-devops' is already installed.\nERROR: Failed to authenticate using the supplied token.\nError: Process completed with exit code 1.\n```\nnot exactly what's going on, any help? https://github.com/hyperledger/fabric/pull/2707#issuecomment-887424616","username":"guoger","ts":"2021-07-27T16:34:27.477Z"}
{"msg":"I started looking at this issue: https://jira.hyperledger.org/browse/FAB-18409 \nIs there a reason why `peer lifecycle chaincode package` or `peer lifecycle chaincode install` does not have (chaincode) name as a flag? I can install chaincodes with invalid names, and only get notified of the error, when executing - `peer lifecycle chaincode approveformyorg`. I think it makes sense to validate the name from the packaging stage, and tell the end user (will prevent invalid chaincode to be installed on the peers). Also I see that `peer chaincode install` had a name flag. I am thinking about opening a PR with the name flag added, does that sound right?","username":"ankitm123","ts":"2021-07-27T18:46:42.994Z"}
{"msg":"https://github.com/hyperledger/fabric/pull/2795 - opened a PR on adding a validation check for chaincode name when creating a package.","username":"ankitm123","ts":"2021-07-28T01:22:48.504Z"}
{"msg":"Would be nice to get some reviews from the maintainers (is it's even worth having this change)","username":"ankitm123","ts":"2021-07-29T15:44:55.206Z"}
{"msg":"Would be nice to get some reviews from the maintainers (if it's even worth having this change)","username":"ankitm123","ts":"2021-07-29T15:44:55.206Z"}
{"msg":"thanks for the contribution @ankitm123 ! I explained why name is not included in the package step in the Jira issue and the PR.","username":"dave.enyeart","ts":"2021-07-29T20:23:15.183Z"}
{"msg":"I see, that makes sense!","username":"ankitm123","ts":"2021-07-29T20:28:57.197Z"}
{"msg":"Has joined the channel.","username":"pritam_01","ts":"2021-08-03T19:52:14.831Z","type":"uj"}
{"msg":"opened a PR , to support async signing of message \nhttps://github.com/hyperledger/fabric-sdk-node/pull/479","username":"pritam_01","ts":"2021-08-04T16:26:04.879Z"}
{"msg":"opened a PR for fabric-sdk-node, to support async signing of message \nhttps://github.com/hyperledger/fabric-sdk-node/pull/479","username":"pritam_01","ts":"2021-08-04T16:26:04.879Z"}
{"msg":"Good morning maintainers. GitHub recently launched a set of new tools called Codespaces. As part of that they launched `github.dev` which is a fully-fledged VSCode instance running in your browser. One of the cool features of it is you can launch it from anywhere in your repo by pressing `.` (period) and it will launch VSCode running completely in your browser. You can also launch it to review a PR. Simply navigate to any Pull Request (for example https://github.com/hyperledger/fabric/pull/2783) and press `.` (period). VSCode will launch in your browser in the context of the PR. On the left you will now see only the files that are part of the PR. When you select one, you will see a rich diff on the right, where you can make PR comments and reviews just like you would have in the browser, but now you have the power of VS Code to aid you in reviewing.","username":"BrettLogan","ts":"2021-08-12T15:38:50.974Z"}
{"msg":"@lehors : this is a lot like Gerrit :)","username":"rjones","ts":"2021-08-12T16:48:49.369Z"}
{"msg":"This sounds great. I just tried it on a PR I was reviewing and got lots of messages like this but things did eventually load OK:\n> Error loading webview: Error: Could not register service workers: NotSupportedError: Failed to register a ServiceWorker for scope ('https://0a30bbaa-df14-48bd-8079-2d993ce8eb02.vscode-webview.net/stable/379476f0e13988d90fab105c5c19e7abc8b1dea8/out/vs/workbench/contrib/webview/browser/pre/') with script ('https://0a30bbaa-df14-48bd-8079-2d993ce8eb02.vscode-webview.net/stable/379476f0e13988d90fab105c5c19e7abc8b1dea8/out/vs/workbench/contrib/webview/browser/pre/service-worker.js?id=0a30bbaa-df14-48bd-8079-2d993ce8eb02&swVersion=2&extensionId=vscode.markdown-language-features&platform=browser&vscode-resource-base-authority=vscode-resource.vscode-webview.net'): The user denied permission to use Service Worker..","username":"bestbeforetoday","ts":"2021-08-12T17:38:10.810Z"}
{"msg":"It works for me in Safari and Edge, but there are a lot of console errors","username":"rjones","ts":"2021-08-12T17:41:54.528Z"}
{"msg":"Many thanks for the contribution and sorry holiday got in the way of reviewing earlier! A signing implementation that needed an async Node implementation was something I suspected existed, but it's nice to have Vault Transit Engine/PKCS#11 Proxy confirmed as a specific use case. That's exactly why I defined an async signing implementation for the Fabric Gateway client API currently under development: https://hyperledger.github.io/fabric-gateway/main/api/node/modules.html#signer","username":"bestbeforetoday","ts":"2021-08-12T17:47:26.539Z"}
{"msg":"Indeed! Amazing, GitHub is slowly catching up! ;-)","username":"lehors","ts":"2021-08-12T18:08:18.309Z"}
{"msg":"Happy to hear this was in TODO.\n\nActually I'm one of the mentee under hyperledger mentorship for this year. Currently I am working on supporting multiple type of message. For now I'm able to implement vault transit engine. And planning to supporting singing by transport layer such as websockit, grpc ( bidirectional streaming).\n\n By supporting singing via a transport layer, I am trying to achieve a metamask like singing capabilites, wherein private key will be stored with client's extension . Organisations's Node applications will get the messages signed via back n forth messing between client's extension and server.\n\nYou can find more details here\n\nhttps://github.com/Zzocker/blockchain-carbon-accounting/tree/secureFabric/secure-fabric\n\nThank and hope you enjoyed your holiday 🙏","username":"pritam_01","ts":"2021-08-12T21:05:46.331Z"}
{"msg":"Happy to hear this was in TODO.\n\nActually I'm one of the mentee under hyperledger mentorship for this year. Currently I am working on supporting multiple type of message signing . For now I'm able to implement vault transit engine. And planning to supporting singing by transport layer such as websockit, grpc ( bidirectional streaming).\n\n By supporting singing via a transport layer, I am trying to achieve a metamask like singing capabilites, wherein private key will be stored with client's extension . Organisations's Node applications will get the messages signed via back n forth messing between client's extension and server.\n\nYou can find more details here\n\nhttps://github.com/Zzocker/blockchain-carbon-accounting/tree/secureFabric/secure-fabric\n\nThank and hope you enjoyed your holiday 🙏","username":"pritam_01","ts":"2021-08-12T21:05:46.331Z"}
{"msg":"Happy to hear this was in TODO.\n\nActually I'm one of the mentee under hyperledger mentorship for this year. Currently I am working on supporting multiple type of message signing . For now I'm able to implement vault transit engine. And planning to supporting singing by transport layer such as websockit, grpc ( bidirectional streaming).\n\n By supporting signing via a transport layer, I am trying to achieve a metamask like signing capabilites, wherein private key will be stored with client's extension . Organisations's Node applications will get the messages signed via back n forth messing between client's extension and server.\n\nYou can find more details here\n\nhttps://github.com/Zzocker/blockchain-carbon-accounting/tree/secureFabric/secure-fabric\n\nThank and hope you enjoyed your holiday 🙏","username":"pritam_01","ts":"2021-08-12T21:05:46.331Z"}
{"msg":"Happy to hear this was in TODO.\n\nActually I'm one of the mentee under hyperledger mentorship for this year. Currently I am working on supporting multiple type of message signing . For now I'm able to implement vault transit engine. And planning to supporting singing by transport layer such as websockit, grpc ( bidirectional streaming).\n\n By supporting signing via a transport layer, I am trying to achieve a metamask like signing capabilites, wherein private key will be stored with client's extension . Organisations's Node applications will get the messages signed via back n forth messing between client's extension and server.\n\nYou can find more details here\n\nhttps://github.com/Zzocker/blockchain-carbon-accounting/tree/secureFabric/secure-fabric\n\nThanks and hope you enjoyed your holiday 🙏","username":"pritam_01","ts":"2021-08-12T21:05:46.331Z"}
{"msg":"Launch day was a little more overwhelming than they were expecting. Given that they weren't advertising this feature, they weren't expecting it get the demand it did. once Reddit and Twitter caught wind of it though and it started trending it took off like crazy. While the instance runs in your browser, some of the setup work occurs on our servers. Demand was so high, our Azure scale sets weren't quite able to keep up with demand. Things h as be stabilized and they deployed more scale sets to handle spikes in demand now ","username":"BrettLogan","ts":"2021-08-13T04:42:23.225Z"}
{"msg":"The launch was a little more overwhelming than they were expecting, even with us slowly rolling it our over 2 days to 80 million users. Given that they weren't advertising this feature, they weren't expecting it get the demand it did. once Reddit and Twitter caught wind of it though and it started trending it took off like crazy. While the instance runs in your browser, some of the setup work occurs on our servers. Demand was so high, our Azure scale sets weren't quite able to keep up with demand. Things h as be stabilized and they deployed more scale sets to handle spikes in demand now ","username":"BrettLogan","ts":"2021-08-13T04:42:23.225Z"}
{"msg":"The launch was a little more overwhelming than they were expecting, even with us slowly rolling it our over 2 days to all 80 million users. Given that they weren't advertising this feature, they weren't expecting it get the demand it did. once Reddit and Twitter caught wind of it though and it started trending it took off like crazy. While the instance runs in your browser, some of the setup work occurs on our servers. Demand was so high, our Azure scale sets weren't quite able to keep up with demand. Things h as be stabilized and they deployed more scale sets to handle spikes in demand now ","username":"BrettLogan","ts":"2021-08-13T04:42:23.225Z"}
{"msg":"The launch was a little more overwhelming than they were expecting, even with us slowly rolling it our over 2 days to all 80 million users. Given that they weren't advertising this feature, they weren't expecting it get the demand it did. once Reddit and Twitter caught wind of it though and it started trending it took off like crazy. While the instance runs in your browser, some of the setup work occurs on our servers. Demand was so high, our Azure scale sets weren't quite able to keep up with demand. Things have been stabilized and they deployed more scale sets to handle spikes in demand now ","username":"BrettLogan","ts":"2021-08-13T04:42:23.225Z"}
{"msg":"Hi Guys,\nI am not sure here is right place for questions below or not, please forgive me for any mistakes.\n- I hearing from Jay before, for https://github.com/hyperledger/fabric-rfcs/pull/34 this pr, we'd better to have a online meeting for discussion.\nMay I know what should be prepared for the online meeting?\n\n- Ref to result for the strategic survey, I want to know is there any tools we uesd for fabric performance?\nor if we plan to do any or performance improvements for commit phase, is there any tools we planned and will used to make benmark?\ncaliper? tape? golang benmark testing?\nhttps://github.com/Hyperledger-TWGC/tape\n\nThanks\nSam Yuan","username":"SamYuan1990","ts":"2021-10-14T13:54:33.838Z"}
{"msg":"Hi, @SamYuan1990 . The next meeting is in a little less than two weeks: https://lists.hyperledger.org/g/fabric/viewevent?repeatid=24800&eventid=1272126&calstart=2021-10-27 I would email fabric@ or see if you can get on the agenda here: https://wiki.hyperledger.org/display/fabric/Contributor+Meetings+2021","username":"rjones","ts":"2021-10-14T14:14:55.482Z"}
{"msg":"hi rjones, before apply for coming meeting, I want to know what should I prepared for the meeting, for example, if I need to go through the RFC, by any slides or draft codes/POC?","username":"SamYuan1990","ts":"2021-10-14T14:17:06.335Z"}
{"msg":"my currently plan is\n1. figure out what need to be prepared for the meeting \n1. together with other twgc members get ready \n1. schedule the meeting with you and we can go through it\nmake sense?","username":"SamYuan1990","ts":"2021-10-14T14:21:16.973Z"}
{"msg":"I would reach out to @dave.enyeart  - he runs those meetings - his email is enyeart@us.ibm.com. please include email to community-architects@hyperledger.org","username":"rjones","ts":"2021-10-14T14:27:56.586Z"}
{"msg":"thanks","username":"SamYuan1990","ts":"2021-10-14T14:28:26.029Z"}
{"msg":"sure thing.","username":"rjones","ts":"2021-10-14T14:28:47.956Z"}
{"msg":"Hi Guys, we plan to introduce https://github.com/hyperledger/fabric-rfcs/pull/34 on 8th Dec meeting. cc: @davidkhala","username":"SamYuan1990","ts":"2021-12-03T13:00:39.207Z"}
{"msg":"meeting agenda confirmed!","username":"dave.enyeart","ts":"2021-12-07T21:10:25.010Z"}
{"msg":"hello fabric maintainers, can anyone take a look at https://github.com/hyperledger/fabric-rfcs/pull/34#issuecomment-991047119 before Christmas ? (and I also send a mail about it)","username":"SamYuan1990","ts":"2021-12-10T15:11:13.487Z"}
{"msg":"Has joined the channel.","username":"SeanBohan","ts":"2021-12-17T20:01:35.152Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rlnrajesh","ts":"2022-01-08T02:22:35.399Z","type":"uj"}
{"msg":"hi","username":"rlnrajesh","ts":"2022-01-08T02:22:35.830Z"}
{"msg":"Has joined the channel.","username":"s.vahidi","ts":"2022-01-22T10:03:50.021Z","type":"uj"}
{"msg":"hello fabric maintainers, An error occurred while installing the chaincode and then chaincode wasn't installed completely and we want to uninstall it, please help me?","username":"s.vahidi","ts":"2022-01-22T10:15:06.255Z"}
{"msg":"@s.vahidi the mailing list is probably a better place to ask. https://lists.hyperledger.org/g/fabric","username":"rjones","ts":"2022-01-22T16:49:17.800Z"}
{"msg":"thanks","username":"s.vahidi","ts":"2022-01-23T12:18:09.549Z"}
{"msg":"Sure thing","username":"rjones","ts":"2022-01-24T01:10:33.850Z"}
{"msg":"Has joined the channel.","username":"sbohanlf","ts":"2022-01-25T15:20:14.700Z","type":"uj"}
{"msg":"hi Guys, could you please take a look at https://github.com/hyperledger/fabric/pull/3202 ?","username":"SamYuan1990","ts":"2022-02-05T02:41:24.277Z"}
{"msg":"this chat has moved to [discord](https://discord.gg/hyperledger)","username":"rjones","ts":"2022-02-11T23:24:53.312Z"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:24:57.643Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:24:57.652Z","type":"room_changed_description"}
