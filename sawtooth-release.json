{"msg":"amundson","username":"rjones","ts":"2018-06-17T16:27:07.621Z","type":"subscription-role-added"}
{"msg":"Has left the channel.","username":"rjones","ts":"2018-06-17T16:27:18.699Z","type":"ul"}
{"msg":"Has joined the channel.","username":"honeyjills","ts":"2018-06-19T09:10:54.151Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tungdt_socoboy","ts":"2018-06-19T09:34:46.540Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rootDistress","ts":"2018-06-27T07:24:19.956Z","type":"uj"}
{"msg":"Has joined the channel.","username":"formax","ts":"2018-07-09T19:08:44.867Z","type":"uj"}
{"msg":"Has joined the channel.","username":"LeonardoCarvalho","ts":"2018-08-17T00:22:02.772Z","type":"uj"}
{"msg":"Has joined the channel.","username":"benoit.razet","ts":"2018-08-17T01:12:05.349Z","type":"uj"}
{"msg":"Has joined the channel.","username":"RealDeanZhao","ts":"2018-08-17T02:05:09.316Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rkrish82","ts":"2018-08-17T03:03:09.884Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jsmitchell","ts":"2018-08-17T03:24:26.579Z","type":"uj"}
{"msg":"Has joined the channel.","username":"zac","ts":"2018-08-17T03:50:47.679Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kelly_","ts":"2018-08-17T15:10:27.459Z","type":"uj"}
{"msg":"Has joined the channel.","username":"danintel","ts":"2018-08-17T16:13:18.971Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rberg2","ts":"2018-08-17T16:13:55.605Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Dan","ts":"2018-08-17T16:14:23.096Z","type":"uj"}
{"msg":"Is this where we want to talk about 1.1 release?","username":"Dan","ts":"2018-08-17T16:14:33.942Z"}
{"msg":"Has joined the channel.","username":"TomBarnes","ts":"2018-08-17T16:14:48.683Z","type":"uj"}
{"msg":"looks like a good place to me","username":"TomBarnes","ts":"2018-08-17T16:15:06.428Z"}
{"msg":"Has joined the channel.","username":"mfford","ts":"2018-08-17T18:30:25.970Z","type":"uj"}
{"msg":"Has joined the channel.","username":"agunde","ts":"2018-08-17T19:00:07.331Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Gabe","ts":"2018-08-17T20:26:13.621Z","type":"uj"}
{"msg":"Hey everyone, release 1.1 any updates, timelines, features?","username":"Gabe","ts":"2018-08-17T20:26:59.056Z"}
{"msg":"Also is this where we talk about SDKs? Interested in maturity of Java SDK","username":"Gabe","ts":"2018-08-17T20:27:28.488Z"}
{"msg":"#sawtooth-sdk-dev ","username":"mfford","ts":"2018-08-17T20:29:11.404Z"}
{"msg":"Has joined the channel.","username":"pschwarz","ts":"2018-08-17T22:05:23.134Z","type":"uj"}
{"msg":"Thank you","username":"Gabe","ts":"2018-08-17T23:10:28.761Z"}
{"msg":"we probably want a branch point for 1.1 branch somewhere around 0edde5778c647ffc9f424297e59d6ad14cb2e98d","username":"amundson","ts":"2018-08-20T18:39:29.860Z"}
{"msg":"we probably want a branch point for sawtooht-core 1.1 branch somewhere around 0edde5778c647ffc9f424297e59d6ad14cb2e98d","username":"amundson","ts":"2018-08-20T18:39:29.860Z"}
{"msg":"we probably want a branch point for sawtooth-core 1.1 branch somewhere around 0edde5778c647ffc9f424297e59d6ad14cb2e98d","username":"amundson","ts":"2018-08-20T18:39:29.860Z"}
{"msg":"maybe a little ahead of that, 4814be165df4973c65589deab75f41602202b4fa, to pick up some doc commits. then everything else we want as backports (poet removal for example)","username":"amundson","ts":"2018-08-20T18:41:44.479Z"}
{"msg":"@Gabe yes, this is a good place to talk about any release stuff","username":"amundson","ts":"2018-08-20T18:43:08.383Z"}
{"msg":"@boydjohnson ^ does that make sense to you?","username":"amundson","ts":"2018-08-20T18:43:57.993Z"}
{"msg":"Has joined the channel.","username":"boydjohnson","ts":"2018-08-20T18:43:58.099Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kirkwood","ts":"2018-08-21T04:39:01.414Z","type":"uj"}
{"msg":"even one further looks safe c79b34318396ac2ab0023009472ba50978530752\nBut only @boydjohnson can say for sure.","username":"Dan","ts":"2018-08-22T13:27:24.544Z"}
{"msg":"Has joined the channel.","username":"achenette","ts":"2018-08-22T19:26:52.246Z","type":"uj"}
{"msg":"`4814be` seems conservative, but conservative is probably good, since we can always backport later fixes.  Commits that would be nice to backport are the commits added in `d864b2f59` and `4c80898d7`.","username":"boydjohnson","ts":"2018-08-23T12:40:37.833Z"}
{"msg":"Has joined the channel.","username":"alchmeina","ts":"2018-08-23T14:18:03.703Z","type":"uj"}
{"msg":"I'd rather be aggressive .. backports seem like they take 10x longer than getting them in initially.","username":"Dan","ts":"2018-08-23T14:56:14.284Z"}
{"msg":"I'll look later today for an aggressive option.","username":"boydjohnson","ts":"2018-08-23T15:35:30.825Z"}
{"msg":"Don't look too hard though ;) I'll channel Tom and say conservative is good.\nI just meant if you were on the fence for the two you listed I'd nudge you over there. :)\nIf we branch before Monday it's good timing to start an LR7 on the first candidate build. ","username":"Dan","ts":"2018-08-24T18:17:03.216Z"}
{"msg":"Can I get some help in confirming that the f0llowing list contains all of the current Rust run-time dependencies for Sawtooth-core, sawtooth-poet, and sawtooth-raft?","username":"TomBarnes","ts":"2018-08-25T01:14:46.386Z"}
{"msg":"","username":"TomBarnes","ts":"2018-08-25T01:17:08.371Z","attachments":[{"type":"file","title":"Clipboard - August 24, 2018 6:17 PM","title_link":"/file-upload/PJtggHKrcCvDXaeqD/Clipboard%20-%20August%2024,%202018%206:17%20PM","image_url":"/file-upload/PJtggHKrcCvDXaeqD/Clipboard%20-%20August%2024,%202018%206:17%20PM","image_type":"image/png","image_size":161917,"url":"/file-upload/PJtggHKrcCvDXaeqD/Clipboard%20-%20August%2024,%202018%206:17%20PM","remote":false,"fileId":"PJtggHKrcCvDXaeqD","fileName":"Clipboard - August 24, 2018 6:17 PM"}]}
{"msg":"Can I get some help in confirming that the following list contains all of the current Python run-time dependencies for sawtooth-core, sawtooth-poet, and sawtooth-raft?","username":"TomBarnes","ts":"2018-08-25T01:17:38.810Z"}
{"msg":"","username":"TomBarnes","ts":"2018-08-25T01:17:55.958Z","attachments":[{"type":"file","title":"Clipboard - August 24, 2018 6:17 PM","title_link":"/file-upload/KhC22de3ffdi8CMCq/Clipboard%20-%20August%2024,%202018%206:17%20PM","image_url":"/file-upload/KhC22de3ffdi8CMCq/Clipboard%20-%20August%2024,%202018%206:17%20PM","image_type":"image/png","image_size":145247,"url":"/file-upload/KhC22de3ffdi8CMCq/Clipboard%20-%20August%2024,%202018%206:17%20PM","remote":false,"fileId":"KhC22de3ffdi8CMCq","fileName":"Clipboard - August 24, 2018 6:17 PM"}]}
{"msg":"Are we still using lmdb (py-lmdb) now that we've moved to Rust? Are there other Python packages still called out in setup.py files that are no longer being used?\nthew py-lmdb project no longer has a maintainer, so its probably not a good component to be using in the long term.","username":"TomBarnes","ts":"2018-08-25T01:18:19.370Z"}
{"msg":"Are we still using lmdb (py-lmdb) now that we've moved to Rust?   The py-lmdb project no longer has a maintainer, so its probably not a good component to be using in the long term.","username":"TomBarnes","ts":"2018-08-25T01:18:19.370Z"}
{"msg":"Are there other Python packages still called out in setup.py files that are no longer being used?","username":"TomBarnes","ts":"2018-08-25T01:18:57.191Z"}
{"msg":"`4f5bd10a4` would be a good aggressive option. The block manager commits before it don't use the block manager in the actual validator.","username":"boydjohnson","ts":"2018-08-27T15:15:10.934Z"}
{"msg":"We don't really want an aggressive option - I believe Adam selected that initial commit based on a bunch of testing that we have already done at that specific point. That's attractive if we want a release in September.","username":"amundson","ts":"2018-08-27T16:14:17.356Z"}
{"msg":"@Dan ^","username":"amundson","ts":"2018-08-27T16:16:32.137Z"}
{"msg":"That commit comes up as July 31 and I know we've had LR7 success all month.","username":"Dan","ts":"2018-08-27T16:17:32.592Z"}
{"msg":"My preference is to go with Adam's suggestion and then do backports that we feel are super important and/or won't cause stability issues that cause a longer testing cycle.","username":"amundson","ts":"2018-08-27T16:17:35.938Z"}
{"msg":"If there's some specific risk like there was cache debugging subsequent to that then I'm easily persuaded to the more conservative path.","username":"Dan","ts":"2018-08-27T16:18:09.823Z"}
{"msg":"Unfortunately, Adam is on vacation and he made that initial recommendation and is probably in the best position to describe why he picked it.","username":"amundson","ts":"2018-08-27T16:20:00.350Z"}
{"msg":"Well I guess we can pick the conservative option and play backport or we can roll the dice on the aggressive commit and fall back to the conservative if we have instability.\nI'm in favor of including block manager as it alleviated race conditions. So I feel like conservative isn't necessarily more stable.","username":"Dan","ts":"2018-08-27T19:24:49.874Z"}
{"msg":"@Dan Are you just advocating for taking current master then?","username":"amundson","ts":"2018-08-27T19:30:20.454Z"}
{"msg":"I was leaning towards commit 4f5bd10a4 as the aggressive commit. I think that's still about 3 weeks back in the history.","username":"Dan","ts":"2018-08-27T19:32:04.686Z"}
{"msg":"I know we've had stable LR7 runs since that went in.","username":"Dan","ts":"2018-08-27T19:32:19.262Z"}
{"msg":"When we choose the sawtooth-core 1.1 branch, I think we will also want to choose the sawtooth-poet and sawtooth-raft branch so that all can be tested together.","username":"TomBarnes","ts":"2018-08-28T16:15:43.333Z"}
{"msg":"@pschwarz how stable is BlockManager at that point? I believe there were some fixes in the last couple weeks. Would we want to grab that commit `4f5bd10a4` and then backport other BlockManager commits. Or is it so not stable at 4f5bd10a4 that we are better taking one of the earlier suggested commits and not including BlockManager at all? ","username":"Dan","ts":"2018-08-28T16:16:26.961Z"}
{"msg":"Could you link to those commits?  I couldn't tell you what's in them by hash. I'm not _that_ good","username":"pschwarz","ts":"2018-08-28T17:18:40.720Z"}
{"msg":"@TomBarnes probably no need to branch poet or raft yet. the reason for branching core is that master will become 1.2","username":"amundson","ts":"2018-08-28T18:10:56.807Z"}
{"msg":"we probably a stable pre-psefree poet branch at some point, but probably not necessary yet","username":"amundson","ts":"2018-08-28T18:12:03.019Z"}
{"msg":"no plans to do multiple lines of development on raft, AFAIK, so no branching required there","username":"amundson","ts":"2018-08-28T18:12:27.624Z"}
{"msg":"@amundson so then we run LR tests with the 1.1 branch of sawtooth_core and the head of sawtooth-poet and sawtooth-raft?","username":"TomBarnes","ts":"2018-08-29T15:24:45.652Z"}
{"msg":"@pschwarz that commit is actually removing the java sdk, but I gather from @boydjohnson that it is the commit after blockstore is enabled\nhttps://github.com/hyperledger/sawtooth-core/pull/1734\nProbably best to just look at git log.\nBesides 4f5bd10a4 as the aggressive commit, other more conservative commits were listed here:https://chat.hyperledger.org/channel/sawtooth-release?msg=Ra7Pu6cFamcKqhJxR","username":"Dan","ts":"2018-08-29T17:19:35.791Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=Ra7Pu6cFamcKqhJxR","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=Ra7Pu6cFamcKqhJxR","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@TomBarnes yes, and in the short term we could start LR tests against main of all three and then switch over the core pieces to the branch when we get everyone on the same page for the branch point. those LR tests would be useful to inform the branch point decision too, though I don't want to wait too long before branching since we have a lot tasks to do after we branch.","username":"amundson","ts":"2018-08-29T20:11:14.380Z"}
{"msg":"@amundson i think we are already running LR tests on main  - will provide updates this week.","username":"TomBarnes","ts":"2018-08-29T20:12:17.478Z"}
{"msg":"@TomBarnes ok, I would be interested to know what commit ids from core and the associated results","username":"amundson","ts":"2018-08-29T20:13:15.420Z"}
{"msg":"Has joined the channel.","username":"nubirstein","ts":"2018-08-30T10:18:58.269Z","type":"uj"}
{"msg":"Hi there. Do you know the reason why the HL Sawtooth has by default lmdb setting WRITEMAP set to True? It doesn't help much on OSX, when linking volume with blockchain content (no sufficient disk space error). On Ubuntu and WIndows works fine. If there is a good reason behind it, i'll understand, but if not, then i'm curious if it can be changed in next releases.","username":"nubirstein","ts":"2018-08-30T10:25:21.585Z"}
{"msg":"@nubirstein that's a good question for #sawtooth this channel we are trying to focus on release process. In general though settings are designed for deployment on ubuntu. Many of us develop on other platforms but the deployment target is ubuntu.","username":"Dan","ts":"2018-08-30T14:45:31.033Z"}
{"msg":"As far as what commits to test on, current master is pretty stable: https://github.com/hyperledger/sawtooth-core/commit/795699545bf285d817700d03e352d0ba72ef5679","username":"pschwarz","ts":"2018-08-30T21:26:02.921Z"}
{"msg":"great so let's just branch there then","username":"Dan","ts":"2018-08-31T01:18:28.384Z"}
{"msg":"@amundson @jsmitchell @adamludvik @agunde do you have any counter proposal? If not I'd say let's branch at that commit and start LR7 on Monday.","username":"Dan","ts":"2018-08-31T01:20:38.068Z"}
{"msg":"Has joined the channel.","username":"adamludvik","ts":"2018-08-31T01:20:38.608Z","type":"uj"}
{"msg":"@Dan I'd like to hear from a few others, specifically @adamludvik (who is on vacation until Tuesday). Once we have consensus, I'll create the branch and we will start churning through the tasks (creating repos, etc.). Monday is a holiday, so maybe better to target mid-week for having the first artifacts available in the new repos.","username":"amundson","ts":"2018-08-31T01:29:23.472Z"}
{"msg":"Yeah he's in the @ list :). \n@pankajgoyal Please treat this coming Monday's nightly master as a 1.1 candidate. I think you'd be using that for LR7 anyway.","username":"Dan","ts":"2018-08-31T01:31:27.361Z"}
{"msg":"Yeah he's in the @ list :). \n@pankajgoyal  Please treat this coming Monday's nightly master as a 1.1 candidate. I think you'd be using that for LR7 anyway.","username":"Dan","ts":"2018-08-31T01:31:27.361Z"}
{"msg":"Has joined the channel.","username":"pankajgoyal","ts":"2018-08-31T01:31:27.602Z","type":"uj"}
{"msg":"@pankajgoyal ","username":"Dan","ts":"2018-08-31T01:33:38.225Z"}
{"msg":"@amundson I'm still not sure I understand why we wont need a branch for raft and poet - will we simply test with poet/master and raft/master and continue to make changes to them?","username":"TomBarnes","ts":"2018-08-31T01:36:22.873Z"}
{"msg":"it seems we'd want to tag them or something","username":"Dan","ts":"2018-08-31T01:37:37.646Z"}
{"msg":"we will tag them as necessary to stamp a version number on them when the time comes","username":"amundson","ts":"2018-08-31T01:39:07.765Z"}
{"msg":"@TomBarnes the reason for branching is so we can maintain an additional version of the code. we can have multiple releases on master, and only need to branch when we are considering two separate releases being managed in parallel. so for example, in sawtooth-core's master, we have been working toward 1.1.x - thus, we have needed the 1-0 branch because in parallel we have been doing 1.0.x releases.","username":"amundson","ts":"2018-08-31T01:41:34.333Z"}
{"msg":"when we consider raft, the same version/release will work against both sawtooth-core 1.1.x and 1.2.x; so no need to branch raft. if at some point we need to manage multiple releases of raft at the same time, we can create a branch.","username":"amundson","ts":"2018-08-31T01:43:44.604Z"}
{"msg":"same for applications; almost all can support running on sawtooth core 1.0 or sawtooth core 1.1, so no reason to branch them even if we cut releases for them","username":"amundson","ts":"2018-08-31T01:48:49.029Z"}
{"msg":"it seems likely we will want to branch poet once pse-free is active in master, simply because we might want to do releases of the \"older\" poet as it currently exists. I don't perceive that as important this week.","username":"amundson","ts":"2018-08-31T01:53:45.425Z"}
{"msg":"this also presumes we can keep our PRs under control and don't wildly go merging in things that would interfere with our release timeline","username":"amundson","ts":"2018-08-31T01:55:08.122Z"}
{"msg":"@amundson Perhaps I'm asking for the wrong thing.  What I want is to have a well defined instance of Raft to test against, and when the release goes out be able to identify which instances were tested together. So maybe that's not a branch - is it a version number?  How will we identify which versions of the various component of a 1.1 release were tested and verified to work together?","username":"TomBarnes","ts":"2018-08-31T15:00:38.426Z"}
{"msg":"Has joined the channel.","username":"rbuysse","ts":"2018-08-31T15:48:50.519Z","type":"uj"}
{"msg":"@TomBarnes early next week, we plan to dump builds of all the various pieces into an apt repository - will that work for your purposes? we can update that on whatever schedule works best for our testing.","username":"amundson","ts":"2018-08-31T16:06:28.132Z"}
{"msg":"yes - that works perfectly","username":"TomBarnes","ts":"2018-08-31T16:10:53.022Z"}
{"msg":"@amundson yes - that works perfectly","username":"TomBarnes","ts":"2018-08-31T16:10:53.022Z"}
{"msg":"@amundson yes - that works perfectly - thanks","username":"TomBarnes","ts":"2018-08-31T16:10:53.022Z"}
{"msg":"Has joined the channel.","username":"sureshtedla","ts":"2018-08-31T17:32:56.082Z","type":"uj"}
{"msg":"iirc we tag the commit and the build grabs the tag from git and sets the version string in the build artifact using that tag string.","username":"Dan","ts":"2018-08-31T20:00:46.090Z"}
{"msg":"Has joined the channel.","username":"zZz","ts":"2018-09-03T08:14:46.817Z","type":"uj"}
{"msg":"I am up to speed on this discussion, will give my two cents shortly.","username":"adamludvik","ts":"2018-09-04T16:36:46.405Z"}
{"msg":"@Dan @amundson @jsmitchell @agunde:\n\nI suggested using 0edde5778c647ffc9f424297e59d6ad14cb2e98d because it includes the new consensus api changes and is the commit that @pschwarz , @boydjohnson, and myself have done the most long-running testing with. I am fine with jumping ahead to include doc changes and the separation of the PoET repo.\n\nI am less comfortable recommending the release of the subsequent changes to integrate the block manager and rewrite the block validator in Rust. There is a known performance issue with these changes that we have been investigating and that should be resolved before including these changes in a release. I would like to include these changes in a 1.1.2 or 1.2 release once the issue has been resolved.\n","username":"adamludvik","ts":"2018-09-04T17:01:21.261Z"}
{"msg":"@Dan @amundson @jsmitchell @agunde:\n\nI suggested using 0edde5778c647ffc9f424297e59d6ad14cb2e98d because it includes the new consensus api changes and is the commit that @peterschwarz, @boydjohnson, and myself have done the most long-running testing with. I am fine with jumping ahead to include doc changes and the separation of the PoET repo.\n\nI am less comfortable recommending the release of the subsequent changes to integrate the block manager and rewrite the block validator in Rust. There is a known performance issue with these changes that we have been investigating and that should be resolved before including these changes in a release. I would like to include these changes in a 1.1.2 or 1.2 release once the issue has been resolved.\n","username":"adamludvik","ts":"2018-09-04T17:01:21.261Z"}
{"msg":"Has anyone gotten back to @TomBarnes wrt current python and rust dependencies?","username":"adamludvik","ts":"2018-09-04T17:02:23.363Z"}
{"msg":"fwiw, 1.2 is likely in the december timeframe. we can do 1.1.x point releases would be driven by our testing turnaround time","username":"amundson","ts":"2018-09-04T18:07:13.363Z"}
{"msg":"I am (and have been) fine with Adam’s proposed branch point. @Dan and others, can we agree on that as an initial branch and have further discussion as backport proposals? I can prepare some backport branches (docs, poet, etc.).","username":"amundson","ts":"2018-09-04T19:22:42.534Z"}
{"msg":"We have a lot of things held up on this from a build perspective so it would be good if I can create the branch today so tomorrow we can start on the next todo.","username":"amundson","ts":"2018-09-04T19:24:52.817Z"}
{"msg":"We could even pull in block manager, etc. later if we want to continue that as a backport discussion","username":"amundson","ts":"2018-09-04T19:26:35.848Z"}
{"msg":"@adamludvik I havent heard back since posting my original request.  Let me refresh that request here - I'l do it today.","username":"TomBarnes","ts":"2018-09-04T19:58:01.643Z"}
{"msg":"@adamludvik I see several consensus engine updates after `0edde5778c`\n@pschwarz could thumbs up/down `0aa154c7e23bd887c7496d54806e78b929feb4d9` and `4c80898d7ab045d18c414dd28e40067fdc710ad6` which seem to impact back pressure.\n\nThere's a couple block store commits @boydjohnson could thumbs up/down (`c2c2f8f544ac50fb38edc7c78bce02e69472fbf2`, `a7a1bf55cd7a2b0995d2ed7fc36fe081c5e23145`).\nIf those are in the clear there's lots more commits (build system, docs, etc.) we could fast forward through.. \nthen I start seeing blockmanager commits around here `3f3c469c550c65841fbd80b966ca33eaebd66452`","username":"Dan","ts":"2018-09-04T22:04:49.745Z"}
{"msg":"@Dan `0edde5778c` is the commit I am most confident in from a performance and stability perspective. If the goal is to get as far forward as possible without getting ensnared in the issue I mentioned above, I think we could safely go as far as `8440e8702afdec4d538d928d14674b392d17994a`, though I don't know whether that commit has been run in a long running environment before.\n\nThis would include a number of nice things such as:\n- doc updates\n- removal of poet\n- workload debs\n- a couple consensus api fixes not used by poet","username":"adamludvik","ts":"2018-09-04T22:43:13.345Z"}
{"msg":"@Dan `0edde5778c` is the commit I am most confident in from a performance and stability perspective. If the goal is to get as far forward as possible without getting ensnared in the issue I mentioned above, I think we could safely go as far as `8440e8702afdec4d538d928d14674b392d17994a`, though I don't know whether that commit has been run in a long running environment before.\n\nThis would include a number of nice things such as:\n- doc updates","username":"adamludvik","ts":"2018-09-04T22:43:13.345Z"}
{"msg":"@Dan `0edde5778c` is the commit I am most confident in from a performance and stability perspective. If the goal is to get as far forward as possible without getting ensnared in the issue I mentioned above, I think we could safely go as far as `8440e8702afdec4d538d928d14674b392d17994a`, though I don't know whether that commit has been run in a long running environment before.\n\nThis would include a number of nice things such as:\n- doc updates\n- removal of poet\n- workload debs","username":"adamludvik","ts":"2018-09-04T22:43:13.345Z"}
{"msg":"Looking through the commit messages between those two though, I don't see anything that should cause any big problems.","username":"adamludvik","ts":"2018-09-04T22:45:27.927Z"}
{"msg":"Looking through the commit messages between those two though, I don't see anything that could cause any big problems.","username":"adamludvik","ts":"2018-09-04T22:45:27.927Z"}
{"msg":"Is that a more agreeable commit to branch from?","username":"adamludvik","ts":"2018-09-04T22:45:59.063Z"}
{"msg":"yeah that would include way more goodness :)","username":"Dan","ts":"2018-09-04T22:55:28.074Z"}
{"msg":"are we agreeing on 844 then?","username":"amundson","ts":"2018-09-04T23:59:33.019Z"}
{"msg":"@adamludvik here is the 3rd-party run-time dependency list for all modules installed by the sawtoooth debian package:","username":"TomBarnes","ts":"2018-09-05T00:24:31.770Z"}
{"msg":"","username":"TomBarnes","ts":"2018-09-05T00:24:49.626Z","attachments":[{"type":"file","title":"Clipboard - September 4, 2018 5:24 PM","title_link":"/file-upload/Xya5XbYkHzB2AbN4n/Clipboard%20-%20September%204,%202018%205:24%20PM","image_url":"/file-upload/Xya5XbYkHzB2AbN4n/Clipboard%20-%20September%204,%202018%205:24%20PM","image_type":"image/png","image_size":10668,"url":"/file-upload/Xya5XbYkHzB2AbN4n/Clipboard%20-%20September%204,%202018%205:24%20PM","remote":false,"fileId":"Xya5XbYkHzB2AbN4n","fileName":"Clipboard - September 4, 2018 5:24 PM"}]}
{"msg":"Here is the rust dependency list:","username":"TomBarnes","ts":"2018-09-05T00:25:16.560Z"}
{"msg":"","username":"TomBarnes","ts":"2018-09-05T00:35:46.921Z","attachments":[{"type":"file","title":"Clipboard - September 4, 2018 5:35 PM","title_link":"/file-upload/MQooLLSAZziAimTTK/Clipboard%20-%20September%204,%202018%205:35%20PM","image_url":"/file-upload/MQooLLSAZziAimTTK/Clipboard%20-%20September%204,%202018%205:35%20PM","image_type":"image/png","image_size":10825,"url":"/file-upload/MQooLLSAZziAimTTK/Clipboard%20-%20September%204,%202018%205:35%20PM","remote":false,"fileId":"MQooLLSAZziAimTTK","fileName":"Clipboard - September 4, 2018 5:35 PM"}]}
{"msg":"These are for sawtooth-core, sawtooth-poet, and sawtooth-raft","username":"TomBarnes","ts":"2018-09-05T00:36:12.817Z"}
{"msg":"@amundson yes let's go with `8440e8702afdec4d538d928d14674b392d17994a`\n@agunde @jsmitchell @pschwarz plz chime in quick if you disagree.","username":"Dan","ts":"2018-09-05T13:49:15.598Z"}
{"msg":"@TomBarnes Your python list looks correct. Your Rust list is missing clap and libc, and \"sawtooth_sdk\" is not a 3rd-party library.","username":"adamludvik","ts":"2018-09-05T15:22:29.674Z"}
{"msg":"@adamludvik thanks for reviewing Adam. I've got clap and libc - that was a cut a paste error on my part.  and agreed Sawtooth-sdk should not be on that list.","username":"TomBarnes","ts":"2018-09-05T16:51:12.166Z"}
{"msg":"@adamludvik are we still using python3-lmdb? I thought all of the LMDB interfaces moved to Rust.  I ask because the Python LMDB adapter project is no longer being maintained, and it represents a  security concern since without a maintainer, there is no way to get anything fixed if a vulnerability in that component is identified.","username":"TomBarnes","ts":"2018-09-05T17:16:17.963Z"}
{"msg":"Yes, we are still using python3-lmdb.","username":"adamludvik","ts":"2018-09-05T17:20:07.705Z"}
{"msg":"Pyhton LMDB adapter is not currently being maintained: https://github.com/dw/py-lmdb","username":"TomBarnes","ts":"2018-09-05T17:24:22.831Z"}
{"msg":"@adamludvik Python LMDB adapter is not currently being maintained: https://github.com/dw/py-lmdb","username":"TomBarnes","ts":"2018-09-05T17:24:22.831Z"}
{"msg":"ok, we now have a sawtooth-core 1-1 branch","username":"amundson","ts":"2018-09-05T17:42:58.712Z"}
{"msg":"master will soon become 1.2.x","username":"amundson","ts":"2018-09-05T17:43:14.791Z"}
{"msg":"@amolk @pankajgoyal ^","username":"Dan","ts":"2018-09-05T18:25:51.966Z"}
{"msg":"Has joined the channel.","username":"amolk","ts":"2018-09-05T18:25:52.244Z","type":"uj"}
{"msg":"@TomBarnes there is still a bit of effort needed to remove python-lmdb completely","username":"pschwarz","ts":"2018-09-05T19:39:22.643Z"}
{"msg":"And, if I recall correctly, it is used by PoET","username":"pschwarz","ts":"2018-09-05T19:40:11.583Z"}
{"msg":"@pschwarz Thanks.  Do you think it will be removed by the time we get to Sawtooth 1.2 release in December?  I will check on PoET 2 - I think it has eliminated dependency on Python access to LMDB.","username":"TomBarnes","ts":"2018-09-05T19:49:49.329Z"}
{"msg":"I don't think it's a big lift to get it out of there - we replaced one usage, but need to replace two more, which require a little bit more FFI work on our part","username":"pschwarz","ts":"2018-09-05T19:52:21.315Z"}
{"msg":"PoET1 uses its own lmdb for managing key state (iirc) ","username":"Dan","ts":"2018-09-05T19:52:37.387Z"}
{"msg":"Yep","username":"pschwarz","ts":"2018-09-05T19:52:45.176Z"}
{"msg":"Which might be Overkill, really","username":"pschwarz","ts":"2018-09-05T19:53:10.890Z"}
{"msg":"That is the best kind of kill though.","username":"Dan","ts":"2018-09-05T19:53:29.887Z"}
{"msg":"Sorry I missed the commit discussion. I'm out on vacation","username":"pschwarz","ts":"2018-09-05T19:53:47.716Z"}
{"msg":"no worries. you can blame it all on ludvik now.","username":"Dan","ts":"2018-09-05T19:54:10.101Z"}
{"msg":"master is now future 1.2.x","username":"amundson","ts":"2018-09-05T20:25:13.286Z"}
{"msg":"question about unit test coverage: are these unit test coverage reports still meaningful? https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/master/lastSuccessfulBuild/artifact/coverage/html/index.html","username":"TomBarnes","ts":"2018-09-06T00:27:35.956Z"}
{"msg":"...that is, are all of these unit tests still exercising active Sawtooth code (and not legacy Python code that's been replaced by Rust code)?","username":"TomBarnes","ts":"2018-09-06T00:29:39.621Z"}
{"msg":"@TomBarnes it is still meaningful for the python code (code gets removed from the repo when its been replaced)","username":"amundson","ts":"2018-09-06T14:28:07.743Z"}
{"msg":"@amundson doesn't seem to be limited to Python - i notice that a number of the tests exercise underlying Rust code via ffi.  Trying to think about how to characterize that coverage.  ","username":"TomBarnes","ts":"2018-09-06T16:17:23.457Z"}
{"msg":"@amundson ... and good to know that the tests are not executing dead code - thanks","username":"TomBarnes","ts":"2018-09-06T16:18:09.918Z"}
{"msg":"sure, the rust code is getting tested. but that tool is definitely not aware enough to report on it.","username":"amundson","ts":"2018-09-06T17:15:02.231Z"}
{"msg":"```\nagreed\n``` ","username":"TomBarnes","ts":"2018-09-06T17:15:13.385Z"}
{"msg":"There are 398 pub rust functions.  Only 71 pub unsafe (ffi) functions.  So even if there were python tests for every pub unsafe function, the code coverage would not be great.","username":"TomBarnes","ts":"2018-09-06T17:23:58.565Z"}
{"msg":"functions call other functions though, so I'm not sure I follow that logic","username":"amundson","ts":"2018-09-06T17:24:51.871Z"}
{"msg":"agreed - when i get some time i'll see if I can improve my metric","username":"TomBarnes","ts":"2018-09-06T17:26:08.375Z"}
{"msg":"keep in mind the \"unit tests\" include running a validator with intkey smoke, so almost certainly the code coverage is high","username":"amundson","ts":"2018-09-06T17:26:22.417Z"}
{"msg":"good point","username":"TomBarnes","ts":"2018-09-06T17:26:37.786Z"}
{"msg":"Here is the unit test coverage for the five Python files that expose Rust functionality.","username":"TomBarnes","ts":"2018-09-06T18:06:48.789Z"}
{"msg":"","username":"TomBarnes","ts":"2018-09-06T18:07:00.711Z","attachments":[{"type":"file","title":"Clipboard - September 6, 2018 11:06 AM","title_link":"/file-upload/zkNTQyLuep5jcWany/Clipboard%20-%20September%206,%202018%2011:06%20AM","image_url":"/file-upload/zkNTQyLuep5jcWany/Clipboard%20-%20September%206,%202018%2011:06%20AM","image_type":"image/png","image_size":15062,"url":"/file-upload/zkNTQyLuep5jcWany/Clipboard%20-%20September%206,%202018%2011:06%20AM","remote":false,"fileId":"zkNTQyLuep5jcWany","fileName":"Clipboard - September 6, 2018 11:06 AM"}]}
{"msg":"overall coverage is fairly good.  coverage of chain and publisher interfaces is weak and could bear some improvement","username":"TomBarnes","ts":"2018-09-06T18:07:44.201Z"}
{"msg":"overall coverage is fairly good.  coverage of chain and publisher interfaces is weak and could bear some improvement. clearly even with integration tests, some of these interfaces are not getting touched.","username":"TomBarnes","ts":"2018-09-06T18:07:44.201Z"}
{"msg":"@amundson Per table above, overall coverage of rust functions used by Python is fairly good.  Coverage of chain and publisher interfaces is weak and could bear some improvement. Clearly even with integration tests, some of these interfaces are not getting touched.","username":"TomBarnes","ts":"2018-09-06T18:07:44.201Z"}
{"msg":"@rberg2 uh trying to put this into a question... uh what's a bumper? :)","username":"Dan","ts":"2018-09-10T20:48:39.472Z"}
{"msg":"I vital component to any pinball game ","username":"rberg2","ts":"2018-09-10T20:49:19.486Z"}
{"msg":"s/I/A/","username":"rberg2","ts":"2018-09-10T20:49:27.165Z"}
{"msg":"walked into that","username":"Dan","ts":"2018-09-10T20:49:28.327Z"}
{"msg":"https://github.com/hyperledger/sawtooth-poet/pull/3/commits/ce3724e7fe0b98acf4d05e610093f7808197699a","username":"Dan","ts":"2018-09-10T20:49:39.663Z"}
{"msg":"bumper is the code name for the release featuring sawtooth-core 1.1.","username":"rberg2","ts":"2018-09-10T20:50:21.630Z"}
{"msg":"I think I missed that meeting. ","username":"Dan","ts":"2018-09-10T20:51:13.203Z"}
{"msg":"I approved that PR.","username":"Dan","ts":"2018-09-10T20:51:59.113Z"}
{"msg":":thumbsup: I have this one up too, I had to a bit of work on the poet docker-compose file for 1.1. Its still building though. https://github.com/hyperledger/sawtooth-core/pull/1852","username":"rberg2","ts":"2018-09-10T20:54:29.960Z"}
{"msg":"Has joined the channel.","username":"arsulegai","ts":"2018-09-11T18:59:34.157Z","type":"uj"}
{"msg":"@pankajgoyal @amolk were you able to start LR 7 for the candidate branch?","username":"Dan","ts":"2018-09-12T12:46:50.061Z"}
{"msg":"@pankajgoyal @amolk were you able to start LR 7 for the candidate branch","username":"Dan","ts":"2018-09-12T12:46:50.061Z"}
{"msg":"@Dan build.sawtooth.me is down. So we cannot pull the debs from there.","username":"pankajgoyal","ts":"2018-09-12T13:50:52.012Z"}
{"msg":"yeah network outage problem there\nYou should also be aware of repo.sawtooth.me/ubuntu/bumper/stable ","username":"Dan","ts":"2018-09-12T13:53:37.089Z"}
{"msg":"so,instead of pulling the debs from jenkins, the debs for release branch can be pulled from this repo?","username":"pankajgoyal","ts":"2018-09-12T13:57:50.394Z"}
{"msg":"build.sawtooth.me is back online.","username":"Dan","ts":"2018-09-12T13:59:07.221Z"}
{"msg":"And yeah the debs that we 'release' should be on the repo server that you access with the repo keys for apt.\nIntermediate builds / other artifacts will only be on the build server. ","username":"Dan","ts":"2018-09-12T14:00:19.773Z"}
{"msg":"what is the key for this apt repo?","username":"pankajgoyal","ts":"2018-09-12T14:10:37.668Z"}
{"msg":"LR7 started with packages from repo.sawtooth.me/ubuntu/bumper/stable on AWS. You can see the grafana at http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-15m&to=now&var-DATASOURCE=metrics_lr7","username":"pankajgoyal","ts":"2018-09-12T15:21:10.751Z"}
{"msg":"with 10TPS input (5 TPS intkey + 5 TPS smallbank)","username":"pankajgoyal","ts":"2018-09-12T15:22:10.476Z"}
{"msg":"awesome!","username":"Dan","ts":"2018-09-12T15:57:38.228Z"}
{"msg":"FYI the `bumper/stable` repo won't be populated until we release bumper (1.1) until then use `bumper/nightly` with the usual nightly key `44FC67F19B2466EA`","username":"rberg2","ts":"2018-09-12T19:43:24.010Z"}
{"msg":"I'm confused .. Looks like @pankajgoyal found bits in there @rberg2 .","username":"Dan","ts":"2018-09-12T20:01:17.105Z"}
{"msg":"I'm confused .. Looks like @pankajgoyal found bits in there @rberg2.","username":"Dan","ts":"2018-09-12T20:01:17.105Z"}
{"msg":"I should have mentioned that I brought that up with @pankajgoyal this morning.","username":"rberg2","ts":"2018-09-12T21:16:23.416Z"}
{"msg":"ok so is he running LR7 off of nightly then?","username":"Dan","ts":"2018-09-12T21:23:55.888Z"}
{"msg":"yeah. I just double checked and there is no stable repo yet.","username":"rberg2","ts":"2018-09-12T21:43:21.820Z"}
{"msg":"Has joined the channel.","username":"adamgering","ts":"2018-09-14T19:29:13.732Z","type":"uj"}
{"msg":"@Dan @amolk @pankajgoyal what's the latest word on your LR testing?","username":"amundson","ts":"2018-09-17T16:39:23.052Z"}
{"msg":"hitting the url above the graphs look clean to me. I will defer to @pankajgoyal though to say if he's seeing anything in the error logs on those platforms or any other signs of `danger`.","username":"Dan","ts":"2018-09-17T16:41:32.580Z"}
{"msg":"I see a lot of \"No data points\" in that URL. looks like the OS level collector (whatever it is called) isn't setup properly","username":"amundson","ts":"2018-09-17T16:45:31.838Z"}
{"msg":"telegraf: https://www.influxdata.com/time-series-platform/telegraf/","username":"adamludvik","ts":"2018-09-17T16:51:17.569Z"}
{"msg":"@Dan @pschwarz @ltseeley @amundson I would like to get this PR merged, so that the Raft repo is setup to do releases from: https://github.com/hyperledger/sawtooth-raft/pull/26 @rberg2 has pointed out that merging the PR would implicitly create a 0.1.0 \"release\". I think it makes sense to merge this PR now and have 0.1.0 be a \"soft-release\", meaning we don't do the normal release tasks like publishing debs to stable, publishing docs, etc., and have 0.1.1 be the first \"hard-release\". Does anyone have opinions on this or am I thinking about it wrong?","username":"adamludvik","ts":"2018-09-18T15:57:05.426Z"}
{"msg":"Has joined the channel.","username":"ltseeley","ts":"2018-09-18T15:57:05.521Z","type":"uj"}
{"msg":"I'm fine w/ merging and 'soft' release.\nI do think we need debs published from this repo/component associated with sawtooth 1.1.","username":"Dan","ts":"2018-09-18T16:04:15.064Z"}
{"msg":"Yes to publishing with 1.1, that is the plan","username":"adamludvik","ts":"2018-09-18T16:14:43.659Z"}
{"msg":"@adamludvik @rberg2 you have to tag to do a release. does this actually work without any tags?","username":"amundson","ts":"2018-09-18T16:15:55.674Z"}
{"msg":"this is what I suggest: merge the PR, then create a v0.1.0 tag and then bump version to 0.1.1. this will make get_version operate properly and it is consistent with what we have done everywhere else.","username":"amundson","ts":"2018-09-18T16:17:00.136Z"}
{"msg":"thats what I was getting at when I brought this stuff up with Adam.","username":"rberg2","ts":"2018-09-18T16:17:43.478Z"}
{"msg":"do we do the 0.1.0 tag now and release 0.1.1?","username":"rberg2","ts":"2018-09-18T16:19:07.013Z"}
{"msg":"that sounds like what Amundson is suggesting","username":"rberg2","ts":"2018-09-18T16:20:44.788Z"}
{"msg":"@amundson So we do the merge/0.1.0 tag, and a follow up PR to set the version to 0.1.1 now. That completes the 0.1.0 \"soft-release\". Later when we are ready to release 0.1.1 we do something similar?","username":"adamludvik","ts":"2018-09-18T16:21:46.472Z"}
{"msg":"@adamludvik I would let @rberg2 or myself do the actual tag and increment commit. we tend to avoid PRs to make sure it's atomic and that requires convincing github temporarily to allow it.","username":"amundson","ts":"2018-09-18T16:27:23.784Z"}
{"msg":"Gotcha. Is there anything blocking that from being done now, or any reason to wait?","username":"adamludvik","ts":"2018-09-18T16:28:11.622Z"}
{"msg":"you _could_ merge in the commit, but if the history is non-linear then the commit-since-tag math is wack","username":"amundson","ts":"2018-09-18T16:28:30.861Z"}
{"msg":"no reason I know of","username":"amundson","ts":"2018-09-18T16:28:51.298Z"}
{"msg":"Alright, I think we should go ahead as soon as priorities allow.","username":"adamludvik","ts":"2018-09-18T16:30:30.700Z"}
{"msg":"We had some discussion about a sawtooth 1.1 meta-package. What is that artifact (a deb? a repo?) and do we have clarity on what it contains? (sawtooth-core 1.1, sawtooth-raft 0.1.1, sawtooth-poet x.y.z, ...)","username":"Dan","ts":"2018-09-18T16:37:30.595Z"}
{"msg":"at a \"distribution level\", the bumper repo will contain all the individually versioned components compatible with core 1.1.x. if we stick with \"Sawtooth 1.1\" as the marketing name, then that refers to the bumper repo basically. It will also apply to anything else cross-cutting like docker compose files and website content.","username":"amundson","ts":"2018-09-18T16:42:08.931Z"}
{"msg":"@amundson Are you suggesting the meta-package and repo are synonymous? I would expect that \"meta-package\" refers to an \"empty\" deb package that has as its dependencies a semi-opinionated set of other sawtooth-packages that you can install with one command.","username":"adamludvik","ts":"2018-09-18T16:45:27.937Z"}
{"msg":"So maybe `apt-get install sawtooth` gets you everything you need to run a devmode validator with an intkey workload.","username":"adamludvik","ts":"2018-09-18T16:46:13.042Z"}
{"msg":"no, I'm not suggesting they are the same. we also have a 'sawtooth' meta package for convenience but the way it works is too dumb to really care about versions","username":"amundson","ts":"2018-09-18T16:47:18.618Z"}
{"msg":"I support @amundson's view of what the bumper repo should contain. I think we should discuss what is installed with the meta package in that repo.","username":"adamludvik","ts":"2018-09-18T17:06:39.889Z"}
{"msg":"probably the same as previously minus poet","username":"amundson","ts":"2018-09-18T17:07:36.091Z"}
{"msg":"(if poet was even on the list before)","username":"amundson","ts":"2018-09-18T17:07:48.364Z"}
{"msg":"if it is essentially \"all the stuff from core to run sawtooth\" then that makes the versioning make more sense","username":"amundson","ts":"2018-09-18T17:08:35.390Z"}
{"msg":"Unrelated question, sorry if this was already discussed: why are we publishing the 1.1 repos to `http://repo.sawtooth.me/ubuntu/bumper/*` and not `http://repo.sawtooth.me/ubuntu/1.1/*`?","username":"adamludvik","ts":"2018-09-18T17:08:54.825Z"}
{"msg":"there was a brief thread about it a while ago. basically, it is confusing to talk about version numbers at the distribution level, especially when they match some components and not others. so we adopted the standard convention to use a code name instead (pinball theme, thus bumper). this lets us switch to 'Sawtooth 18.10\" or \"Sawtooth 2\" or another top-level version scheme without changing our repo URL. (separation of concerns). @Dan is still advocating for \"Sawtooth 1.1\" as the top-level name. I'm not sure it benefits us to stick to that version scheme at that level. But, this way, we can debate it on marketing grounds solely as it won't impact the mechanics.","username":"amundson","ts":"2018-09-18T17:18:31.902Z"}
{"msg":"So basically the advantage of a named release is decoupling: the release becomes a set of (package, version) pairs instead of a set of packages all with the same version?","username":"adamludvik","ts":"2018-09-18T17:25:42.675Z"}
{"msg":"correct, the release is a distribution of software, not a single piece. the same version of supply chain and such might end up in both the 1.0 and bumper repos because they work with both.","username":"amundson","ts":"2018-09-18T17:27:33.172Z"}
{"msg":"most of the SDKs will not get a 1.1.x version bump as they are still 1.0-compatible because of our stable APIs","username":"amundson","ts":"2018-09-18T17:28:15.768Z"}
{"msg":"Makes sense to me.","username":"adamludvik","ts":"2018-09-18T17:29:45.458Z"}
{"msg":"Will `http://repo.sawtooth.me/ubuntu/nightly` continue to track master?","username":"adamludvik","ts":"2018-09-18T17:29:58.705Z"}
{"msg":"sounds correct","username":"amundson","ts":"2018-09-18T17:33:59.421Z"}
{"msg":"Back to the bumper discussion, how will people know which versions of which packages are compatible with each other? Will this be a requirement for membership in the apt repo? Do we need to differentiate between named releases (cross-package distros?) and version releases (single package changes) to avoid community confusion?","username":"adamludvik","ts":"2018-09-18T17:37:25.621Z"}
{"msg":"```\nbumper repo {\n   sawtooth 1.1 meta-package {\n      <can someone enumerate this>\n   }\n   sawtooth-poet <version> {\n       poet-simulator //CFT\n       // Not poet-sgx //BFT\n   }\n   sawtooth-raft <version> {}\n}\n```","username":"Dan","ts":"2018-09-18T17:41:51.674Z"}
{"msg":"@adamludvik well, everything in the bumper repo will work together. or do you mean when it's not in the repo?","username":"amundson","ts":"2018-09-18T17:56:31.894Z"}
{"msg":"currently for bumper it's really a sawtooth-core centric release, so it's stuff compatible with sawtooth-core 1.1. I could see a future release where core stays the same but we have other components like sabre or not-yet-written driving the distribution release compatibility","username":"amundson","ts":"2018-09-18T17:58:07.747Z"}
{"msg":"It sounds like it is important clarify what is meant by \"Sawtooth Release\". For the sake of argument, I will take the position that it should mean a versioned core release: 1.0, 1.1, 2.0, etc. In that case, I don't think it makes sense to do another \"big release\" in order to add new components, you would just release that component with whatever version you want and then add it to the apt repo. Maybe you call this a sawtooth \"distro\" or something.","username":"adamludvik","ts":"2018-09-18T18:03:32.291Z"}
{"msg":"Let me know if I am retreading old ground and need to go read an earlier conversation","username":"adamludvik","ts":"2018-09-18T18:12:06.542Z"}
{"msg":"So we could say something like \"Every versioned release of sawtooth has an accompanying distro which encompasses a set of packages compatible with that release, and this is what the code name refers to.\"","username":"adamludvik","ts":"2018-09-18T18:17:07.069Z"}
{"msg":"you are retreading unwritten ground","username":"Dan","ts":"2018-09-18T18:30:01.920Z"}
{"msg":"Okay, so does everyone already have the above in mind then?","username":"adamludvik","ts":"2018-09-18T18:33:13.504Z"}
{"msg":"Almost certainly not.","username":"Dan","ts":"2018-09-18T20:13:03.298Z"}
{"msg":"Minus poet???","username":"achenette","ts":"2018-09-18T21:00:53.145Z"}
{"msg":"The Sys Admin guide has steps to install Sawtooth software.  I'm changing the `add-apt-repository` step to include \"`bumper`\".  Do they need to get the poet software elsewhere?  ","username":"achenette","ts":"2018-09-18T21:03:13.269Z"}
{"msg":"The Sys Admin guide has steps to install Sawtooth software.  I'm changing the `add-apt-repository` step to include `bumper`.  Will the sys admin need to get the poet software elsewhere?  (That is, in a separate step that references a different repo, package, or metapackage?)","username":"achenette","ts":"2018-09-18T21:03:13.269Z"}
{"msg":"Similar question for actually installing the software.  Will `sudo apt-get install -y sawtooth` include the necessary stuff for a PoET consensus engine? ","username":"achenette","ts":"2018-09-18T21:04:18.775Z"}
{"msg":"I think minus poet meant that the deb meta-package for sawtooth wouldn't include any consensus except devmode. Separately you would install poet with something like `apt-get install sawtooth-poet`.","username":"Dan","ts":"2018-09-19T12:57:12.816Z"}
{"msg":"Or similiarly `apt-get install sawtooth-raft`","username":"Dan","ts":"2018-09-19T12:57:39.811Z"}
{"msg":"Greetings! I am pleased to announce sawtooth-raft has been tagged for release of version 0.1.0!","username":"rberg2","ts":"2018-09-19T14:32:33.397Z"}
{"msg":"@Dan yes, that is what I meant","username":"amundson","ts":"2018-09-19T16:13:52.657Z"}
{"msg":"@rberg2 do you know what the sawtooth deb meta-package includes? (either current state or 'bumper' state)","username":"Dan","ts":"2018-09-19T16:36:08.521Z"}
{"msg":"hey all, I was gonna write one of (hopefully) a number of community blog posts for 1.1","username":"kelly_","ts":"2018-09-19T16:57:40.905Z"}
{"msg":"I wanted to maybe talk about new features and also some forward looking roadmap","username":"kelly_","ts":"2018-09-19T16:58:00.909Z"}
{"msg":"I was discussing with @Dan and we thought good new features to call out 1) start of conversion to rust 2) highlight sabre 3) consensus engine redesign","username":"kelly_","ts":"2018-09-19T16:59:10.530Z"}
{"msg":"any thoughts on other things that would be worth calling out?","username":"kelly_","ts":"2018-09-19T16:59:50.703Z"}
{"msg":"and then i was thinking about maybe alluding to some potential updates in 1.2 which could include further rust, and consensus engines like raft/pbft/poet2-sgx","username":"kelly_","ts":"2018-09-19T17:00:26.152Z"}
{"msg":"open to feedback","username":"kelly_","ts":"2018-09-19T17:00:34.528Z"}
{"msg":"Those all seem good to me","username":"adamludvik","ts":"2018-09-19T17:02:54.552Z"}
{"msg":"cool, also if anyone wanted to write the above article, or is looking for a topic, i was thinking one talking about the different companies/applications building on sawtooth","username":"kelly_","ts":"2018-09-19T17:47:05.547Z"}
{"msg":"though that could probably come some time after 1.1","username":"kelly_","ts":"2018-09-19T17:47:10.737Z"}
{"msg":"@Dan Here are the dependencies for the sawtooth package https://github.com/hyperledger/sawtooth-core/blob/master/ci/ns-control#L28","username":"rberg2","ts":"2018-09-19T17:47:11.187Z"}
{"msg":"> Depends: python3-sawtooth-cli, python3-sawtooth-intkey, python3-sawtooth-poet-cli, python3-sawtooth-poet-common, python3-sawtooth-poet-core, python3-sawtooth-poet-families, python3-sawtooth-poet-simulator, python3-sawtooth-rest-api, python3-sawtooth-sdk, python3-sawtooth-settings, python3-sawtooth-signing, python3-sawtooth-validator, python3-sawtooth-xo","username":"rberg2","ts":"2018-09-19T17:47:37.870Z"}
{"msg":"@kelly_ That seems like a cool topic, of a round up of companies and their use-cases.","username":"boydjohnson","ts":"2018-09-19T17:48:26.402Z"}
{"msg":"@kelly_ I am hoping to have time soon to do a more thorough job of documenting consensus. I should be able to roll a blog post into that, provided nothing starts on fire.","username":"adamludvik","ts":"2018-09-19T18:19:09.903Z"}
{"msg":"@pankajgoyal can you report LR7 status here for 1.1/bumper?","username":"Dan","ts":"2018-09-19T18:58:04.630Z"}
{"msg":"Here is the LR7 report summary of  sawtooth 1.1 release branch. Configuration parameters are:\nLR7(AWS): 10 validator nodes, 10 TPS applied transaction rate(intkey 5TPS + smallbank 5TPS)\nEC2: m4.2xlarge ( 8 CPUs, 32GB RAM), 100 GB SSD 5000 IOPS\n","username":"pankajgoyal","ts":"2018-09-19T19:04:05.181Z"}
{"msg":"","username":"pankajgoyal","ts":"2018-09-19T19:05:46.769Z","attachments":[{"type":"file","title":"LR-status-19Sept.docx","title_link":"/file-upload/qhuFRgc2nmPPLZ5kg/LR-status-19Sept.docx","url":"/file-upload/qhuFRgc2nmPPLZ5kg/LR-status-19Sept.docx","remote":false,"fileId":"qhuFRgc2nmPPLZ5kg","fileName":"LR-status-19Sept.docx"}]}
{"msg":"@pankajgoyal thanks!\nIt appears this build passes the portion of the release criteria around LR7. Does anyone see differently?","username":"Dan","ts":"2018-09-19T19:15:26.493Z"}
{"msg":"@rberg2 when I look at the setup.py in the poet engine directory I see.. ```    name='sawtooth-poet-engine' ```","username":"Dan","ts":"2018-09-19T19:16:32.403Z"}
{"msg":"Does that mean that the current depdns in the ns-control file above are out of date? i.e. should we be expecting to see `python3-sawtooth-poet-engine` in that list somewhere?","username":"Dan","ts":"2018-09-19T19:17:44.033Z"}
{"msg":"Does that mean that the current depends in the ns-control file above are out of date? i.e. should we be expecting to see `python3-sawtooth-poet-engine` in that list somewhere?","username":"Dan","ts":"2018-09-19T19:17:44.033Z"}
{"msg":"hmm yeah that package should be in there. I can add that.","username":"rberg2","ts":"2018-09-19T19:29:03.209Z"}
{"msg":"@Dan should we create a `sawtooth-poet` meta package instead of adding poet-engine to the sawtooth meta package? And remove poet from the meta package?","username":"adamludvik","ts":"2018-09-19T20:30:04.895Z"}
{"msg":"@adamludvik and @Dan - Does that imply that there might eventually be other metapackages like `sawtooth-raft`? And if someone wanted to install Sawtooth with their own consensus, would they create their own `sawtooth-MyConsensus` metapackage?","username":"achenette","ts":"2018-09-19T20:42:19.095Z"}
{"msg":"The meta package pattern is just for convenience when there are many packages to install. With sawtooth-core and sawtooth-poet, this makes sense since there multiple packages that need to be installed to get a functional system. This is not a necessary pattern for consensus engines though, but there is nothing stopping the maintainers of that consensus package from doing so. For example, right now there is only one package for sawtooth-raft, so a meta package wouldn't make sense.","username":"adamludvik","ts":"2018-09-19T20:45:07.760Z"}
{"msg":"It seems we're documenting the metapackage approach in the sys admin guide (and, presumably, in the app dev guide eventually).  I was hoping that the doc would be generic enough that people could use it as a model if they wanted to install a different consensus mechanism/algorithm.","username":"achenette","ts":"2018-09-19T20:53:04.923Z"}
{"msg":"In other words, I'm hoping for a consistent approach for the metapackages that are under our control.","username":"achenette","ts":"2018-09-19T20:59:11.226Z"}
{"msg":"Has joined the channel.","username":"nhrishi","ts":"2018-09-20T08:38:41.004Z","type":"uj"}
{"msg":"I'm inclined to keep PoET in the sawtooth meta package for ease of use. Just one install command that way. If raft and eventually pbft are small then maybe just add those too.","username":"Dan","ts":"2018-09-20T12:02:21.111Z"}
{"msg":"*sawtooth-mega package","username":"adamludvik","ts":"2018-09-20T14:35:05.881Z"}
{"msg":"@Dan I'd rather not have to remove poet on every install","username":"amundson","ts":"2018-09-20T15:17:46.520Z"}
{"msg":":)","username":"amundson","ts":"2018-09-20T15:17:52.204Z"}
{"msg":"seriously though, the problem with removing things is it's not as trivial to cleanup the dependencies that get pulled in (all those python packages, etc.)","username":"amundson","ts":"2018-09-20T15:21:21.569Z"}
{"msg":"though, the same problem may exist with examples, at least those are all within the core repo","username":"amundson","ts":"2018-09-20T15:22:36.450Z"}
{"msg":"Yeah I think it's cleaner with a smaller package but messier for writing install directions.","username":"Dan","ts":"2018-09-20T15:24:13.272Z"}
{"msg":"is \"apt-get install -y sawtooth sawtooth-poet\" messy?","username":"amundson","ts":"2018-09-20T15:24:48.312Z"}
{"msg":"`apt-get instally -y sawtooth-core sawtooth-poet`?","username":"adamludvik","ts":"2018-09-20T15:27:19.786Z"}
{"msg":"sawtooth-core => install everything in sawtooth-core?","username":"adamludvik","ts":"2018-09-20T15:27:48.892Z"}
{"msg":"seems ill-defined in that the definition of core keeps changing. like, if we split out the examples, would that list change?","username":"amundson","ts":"2018-09-20T15:36:45.721Z"}
{"msg":"if 'sawtooth' pulls in poet, raft, and pbft, it should also probably pull in sabre and seth. should it pull in supply chain, mktplace, and next directory? that would be \"everything in the repo\" quite literally","username":"amundson","ts":"2018-09-20T15:38:00.739Z"}
{"msg":"we could do 'sawtooth' (default packages that are used in almost every install), 'sawtooth-all' or 'sawtooth-everything' (everything in the repo), sawtooth-poet, sawtooth-raft, sawtooth-pbft, sawtooth-sabre, all separately","username":"amundson","ts":"2018-09-20T15:40:13.703Z"}
{"msg":"the most common combination for us going forward will probably be core, raft, and sabre","username":"amundson","ts":"2018-09-20T15:41:46.609Z"}
{"msg":"the most common combination for us going forward will probably be core, pbft, and sabre","username":"amundson","ts":"2018-09-20T15:41:46.609Z"}
{"msg":"(as pbft becomes stable, obviously)","username":"amundson","ts":"2018-09-20T15:42:44.595Z"}
{"msg":"though, we deploy using docker primarily too, so this is already an edge-case","username":"amundson","ts":"2018-09-20T15:43:54.205Z"}
{"msg":"I think the \"everything in core\" definition is compelling because of its simplicity. Makes it much easier to decide what should go in it for everyone involved. I'm not sure that \"core keeps changing\" is a valid counterargument. I was under the impression we were mostly done with taking things out of core, but maybe this is not the case?","username":"adamludvik","ts":"2018-09-20T15:46:59.263Z"}
{"msg":"I think given where the industry is today, I think ease of install is preferable to optimal/lean install","username":"kelly_","ts":"2018-09-20T16:08:34.427Z"}
{"msg":"e.g. optimize for the 100 people that may want to experiment with sawtooth vs the 20 core devs","username":"kelly_","ts":"2018-09-20T16:10:01.916Z"}
{"msg":"yeah i guess I'm fine with ```sudo apt-get install -y sawtooth sawtooth-poet```","username":"Dan","ts":"2018-09-20T16:37:37.641Z"}
{"msg":"^ This works well for the docs.  It's easy for users to see how to change the command if they want different consensus software.","username":"achenette","ts":"2018-09-20T17:15:28.058Z"}
{"msg":"I feel like 1.1 build passing LR7 should be a bigger deal. Is everyone cool that those bits are stable?","username":"Dan","ts":"2018-09-20T19:21:03.991Z"}
{"msg":"Totally missed that comment somehow","username":"adamludvik","ts":"2018-09-20T19:23:54.407Z"}
{"msg":"@Dan That report looks good overall. There is memory leak though, hard to tell how bad from the screenshot.","username":"adamludvik","ts":"2018-09-20T19:43:18.712Z"}
{"msg":"I think we need to backport 44530a761905d06cc3533e4987bd5c6b264fb5fc","username":"adamludvik","ts":"2018-09-20T19:52:00.418Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/commit/44530a761905d06cc3533e4987bd5c6b264fb5fc","username":"adamludvik","ts":"2018-09-20T19:55:05.216Z"}
{"msg":"so as a matter of process what would be a good way to share the LR data so that we aren't restricted to screenshot interpretation? the grafana site is publicly accessible btw, but this particular run was already stopped. @pankajgoyal has started a new run with the same bits and I've asked that run continue past 7 days if possible.\nAs far as another backport, that's probably fine. If we got it in tomorrow (maybe along with some necessary rustfmt change that boyd just posted) then we could still get in another LR7 before end of month.","username":"Dan","ts":"2018-09-20T20:30:13.378Z"}
{"msg":"I prefer to look at the data on grafana myself if it is publicly available, because it gives you some tools for diving deeper on the data. In the past we have kept the data around for awhile after the run ended for people to review it posthumously.\n\nFor long term archiving, we could figure out how to export the data for a specific run out of influxdb so we can restore the view later.","username":"adamludvik","ts":"2018-09-20T20:53:42.645Z"}
{"msg":"You can export a particular chart to csv","username":"boydjohnson","ts":"2018-09-20T20:56:36.608Z"}
{"msg":"@Dan here's that backport PR: https://github.com/hyperledger/sawtooth-core/pull/1869","username":"adamludvik","ts":"2018-09-20T22:38:08.916Z"}
{"msg":"@adamludvik https://chat.hyperledger.org/channel/sawtooth-release?msg=hfiZBneDnCtAvDo67","username":"Dan","ts":"2018-09-21T15:09:43.929Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=hfiZBneDnCtAvDo67","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=hfiZBneDnCtAvDo67","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"henrytill","ts":"2018-09-21T15:28:53.035Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=dSHtxargTPiZmTJQ9) @Dan I started LR7 (ubuntu/bumper/nightly) on 19th 23:45 Hrs (IST). The run will stop on 26th at the same time. The previous LR7 was started on 12th at around 20:00 Hrs. That also can be viewed in the same grafana dashboard. Its just that someone needs to modify time to view the data. http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-228h&to=now&var-DATASOURCE=metrics_lr7 ","username":"pankajgoyal","ts":"2018-09-22T04:18:42.855Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=dSHtxargTPiZmTJQ9","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=dSHtxargTPiZmTJQ9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"LR7 (ubuntu/bumper/nightly), that I started on 19th is still running. Network looks fine. You can have a look at grafana dashboard http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-116h&to=now&var-DATASOURCE=metrics_lr7","username":"pankajgoyal","ts":"2018-09-24T15:25:13.386Z"}
{"msg":"@Dan @boydjohnson this PR is blocking releases and getting the memory leak fix backported. What needs to be done to resolve it? Looks like our options are 1. Merge it as is, possibly opening a new PR to peg lint version, 2. Add a new commit to peg the lint version, 3. Drop the PR and add a commit to peg to the pre-breaking lint version.","username":"adamludvik","ts":"2018-09-24T15:40:12.567Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/pull/1867","username":"adamludvik","ts":"2018-09-24T15:40:21.057Z"}
{"msg":"From offline discussion, sounds like we want to merge the formatting fixes, and follow up with a separate PR to peg the lint versions on the 1-1 branch.","username":"adamludvik","ts":"2018-09-24T16:21:18.582Z"}
{"msg":"I commented on the PR accordingly.","username":"Dan","ts":"2018-09-24T16:24:39.738Z"}
{"msg":"@adamludvik PR merged with fmt fixes for 1-1.","username":"boydjohnson","ts":"2018-09-24T17:07:08.934Z"}
{"msg":"Just checking if anyone else is going to do the pinning of the version? If not, I will do so.","username":"boydjohnson","ts":"2018-09-24T17:24:47.729Z"}
{"msg":"@rberg2 Merged this dockerfile for releasing a sawtooth raft engine docker image when we do the full bumper release.","username":"adamludvik","ts":"2018-09-24T21:10:45.846Z"}
{"msg":"Forgot to link you: https://github.com/hyperledger/sawtooth-raft/blob/master/ci/Dockerfile-release","username":"adamludvik","ts":"2018-09-26T16:01:50.276Z"}
{"msg":"@pankajgoyal can you launch an LR7 using the binaries from this PR https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1869/4/artifact/build/debs/","username":"Dan","ts":"2018-09-26T16:37:27.481Z"}
{"msg":"It has a proposed backport for a memory fix. We want to verify that it doesn't regress vs existing 1-1 branch.","username":"Dan","ts":"2018-09-26T16:38:10.618Z"}
{"msg":"okay...and consensus is PoET-SIM?","username":"pankajgoyal","ts":"2018-09-26T16:56:37.353Z"}
{"msg":"I think yes","username":"adamludvik","ts":"2018-09-26T17:32:48.376Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=nzbvFo6PBEsF5evQk) @Dan LR7 started... Grafana dashboard can be seen at http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&var-DATASOURCE=metrics_lr7_nightly&from=now-5m&to=now","username":"pankajgoyal","ts":"2018-09-26T19:32:52.396Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=nzbvFo6PBEsF5evQk","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=nzbvFo6PBEsF5evQk","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Awesome @pankajgoyal !","username":"Dan","ts":"2018-09-26T19:33:46.014Z"}
{"msg":"The dashboard for the previous run seems slow to load for me, so can't compare directly, but the RAM on this latest run looks good so far.","username":"adamludvik","ts":"2018-09-26T20:57:33.837Z"}
{"msg":"Those bumps are most likely forks being purged from the block manager.","username":"adamludvik","ts":"2018-09-26T20:58:11.386Z"}
{"msg":"slow for me too. i assume it's a hosting locale thing.","username":"Dan","ts":"2018-09-27T04:47:25.513Z"}
{"msg":"sometimes if you just let it stew in the background it's all painted after you are done with email. :)","username":"Dan","ts":"2018-09-27T04:47:49.342Z"}
{"msg":"@Dan LR1 for Raft (1.1 release repo + Raft) is started today. You can take a look at grafana @ http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-6h&to=now&var-DATASOURCE=Raft_new","username":"pankajgoyal","ts":"2018-09-27T15:36:42.263Z"}
{"msg":"I started LR1 for Raft (1.1 release repo + Raft) on 27th Sept at 16:00Hrs approx (IST) . I setup the following raft consensus parameters:\nsawtooth.consensus.raft.period=3000\nsawtooth.consensus.raft.election_tick=20\nsawtooth.consensus.raft.heartbeat_tick=2\nObservation: After approx 15 hrs of run, I'm getting queue full on all rest end points. You can have a look at grafana at http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-18h&to=now&var-DATASOURCE=Raft_new . I'm also attaching the snapshot of grafana dashboard for your reference. ","username":"pankajgoyal","ts":"2018-09-28T09:55:29.354Z"}
{"msg":"","username":"pankajgoyal","ts":"2018-09-28T09:56:52.697Z","attachments":[{"type":"file","title":"Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png","title_link":"/file-upload/ihxBvjWtCvY7emFjQ/Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png","image_url":"/file-upload/ihxBvjWtCvY7emFjQ/Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png","image_type":"image/png","image_size":2416149,"url":"/file-upload/ihxBvjWtCvY7emFjQ/Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png","remote":false,"fileId":"ihxBvjWtCvY7emFjQ","fileName":"Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png"}]}
{"msg":"I started LR1 for Raft (1.1 release repo + Raft) on 26th Sept at 22:00Hrs approx (IST) . I setup the following raft consensus parameters:\nsawtooth.consensus.raft.period=3\nsawtooth.consensus.raft.election_tick=1500\nsawtooth.consensus.raft.heartbeat_tick=150\nObservation: After approx 2 hrs of run, I'm getting queue full on all rest end points except the leader node. You can have a look at grafana at http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-42h&to=now-32h&var-DATASOURCE=Raft . I'm also attaching the snapshot of grafana dashboard for your reference.","username":"pankajgoyal","ts":"2018-09-28T10:04:58.685Z"}
{"msg":"","username":"pankajgoyal","ts":"2018-09-28T10:06:21.949Z","attachments":[{"type":"file","title":"1Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png","title_link":"/file-upload/Y2AHEpmJHtNcJEudh/1Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png","image_url":"/file-upload/Y2AHEpmJHtNcJEudh/1Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png","image_type":"image/png","image_size":1641342,"url":"/file-upload/Y2AHEpmJHtNcJEudh/1Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png","remote":false,"fileId":"Y2AHEpmJHtNcJEudh","fileName":"1Grafana-Dashboard-AWS-1.1-Raft-intkey5TPS-smallbank5TPS.png"}]}
{"msg":"@pankajgoyal It looks like the network is still committing blocks though, is that correct? Seems like something is holding back the transaction throughput below whatever the workload rate is. What is the workload rate? What is the max block size? You could try increasing max block size and/or decreasing the raft period to increase throughput.","username":"adamludvik","ts":"2018-09-28T19:43:20.169Z"}
{"msg":"@adamludvik I posted two grafana sessions above. For one of the sessions, the transactions are getting accepted only at Leader node's rest end point. The details for that are as below:\nsawtooth.consensus.raft.period=3\nsawtooth.consensus.raft.election_tick=1500\nsawtooth.consensus.raft.heartbeat_tick=150\nmax_batches_per_block = 500\nInput Rate: 10 TPS (5 TPS intkey + 5 TPS smallbank) \nGrafana: http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-42h&to=now-32h&var-DATASOURCE=Raft\n","username":"pankajgoyal","ts":"2018-10-01T02:59:35.918Z"}
{"msg":"@adamludvik I tried modifying the max_batches_per_block and sawtooth.consensus.raft.period but rest end point throws error Bad Request (400)","username":"pankajgoyal","ts":"2018-10-01T06:46:36.141Z"}
{"msg":"Started LR1 (1.1 + raft) with below parameters:\nsawtooth.consensus.raft.period=5000\nmax_batches_per_block = 500\nInput Rate: 10 TPS (5 TPS intkey + 5 TPS smallbank) \nGrafana: http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-5m&to=now&var-DATASOURCE=Raft_new ","username":"pankajgoyal","ts":"2018-10-01T08:42:30.652Z"}
{"msg":"@kelly_ What is your plan for getting these blog posts out the door?","username":"adamludvik","ts":"2018-10-01T16:25:44.332Z"}
{"msg":"Probably start coordination with hl folks this week","username":"kelly_","ts":"2018-10-01T17:06:56.996Z"}
{"msg":"I was thinking yours could be a follow on to the 1.1 release, thoughts?","username":"kelly_","ts":"2018-10-01T17:07:16.531Z"}
{"msg":"Was thinking we could mention a few features and then try to do a blog about each","username":"kelly_","ts":"2018-10-01T17:07:30.842Z"}
{"msg":"E.g. rust, consensus, sabre","username":"kelly_","ts":"2018-10-01T17:07:38.277Z"}
{"msg":"That makes sense.","username":"adamludvik","ts":"2018-10-01T18:16:05.528Z"}
{"msg":"i submitted a PR against the sawtooth-poet NOTICES file.  The build failed.  Log says \"TEST_DYNAMIC_NETWORK - failed\".  I don't think my changes caused that. Can you remind me of how to restart a PR build?  Its been a while.","username":"TomBarnes","ts":"2018-10-01T18:27:28.886Z"}
{"msg":"I submitted a NOTICES file to sawtooth-raft.  It appears to have the required approvals and passed tests, but I do not see a merge option.  Do I have write access to the repo? Alternatively, can someone merge it for me?","username":"TomBarnes","ts":"2018-10-01T18:31:32.940Z"}
{"msg":"@TomBarnes When you are logged in and viewing a build there is a button to the right, \"Replay\".","username":"boydjohnson","ts":"2018-10-01T19:13:27.141Z"}
{"msg":"@TomBarnes When you are logged in and viewing a build there is a button to the left, \"Replay\".","username":"boydjohnson","ts":"2018-10-01T19:13:27.141Z"}
{"msg":"@boydjohnson Thanks for re-running that for me. I notice that it failed in exactly the same place.","username":"TomBarnes","ts":"2018-10-01T21:27:05.421Z"}
{"msg":"Ryan helped me out and now I have started a 3rd run.  If it fails again, I'll see if Ashish can help.","username":"TomBarnes","ts":"2018-10-01T21:28:48.397Z"}
{"msg":"No problem, Tom.","username":"boydjohnson","ts":"2018-10-01T22:12:13.650Z"}
{"msg":"@adamludvik why is openssl installed in sawtooth-raft?  I cant find any place where it is actually used.","username":"TomBarnes","ts":"2018-10-01T23:00:05.509Z"}
{"msg":"It is probably being pulled in with the rust sdk, which installs it.  ","username":"adamludvik","ts":"2018-10-01T23:29:17.897Z"}
{"msg":"so it should be installed by the sawtooth SDK, not the raft build - correct?  ","username":"TomBarnes","ts":"2018-10-01T23:30:40.652Z"}
{"msg":"[dependencies]\nclap = \"2\"\nhex = \"0.3\"\nlog = \"0.4\"\nlog4rs = \"0.8\"\nlog4rs-syslog = \"3.0\"\nprotobuf = \"2\"\nraft = \"0.3.1\"\nsawtooth_sdk = { git = \"https://github.com/hyperledger/sawtooth-core.git\" }\nserde_json = \"1\"\nuluru = \"0.2\"","username":"TomBarnes","ts":"2018-10-01T23:30:47.066Z"}
{"msg":"but instead it installs it explicitly","username":"TomBarnes","ts":"2018-10-01T23:30:59.701Z"}
{"msg":"Actually, it is more complicated than that. We are using openssl as a shared\nlibrary. The SDK is calling into that library through FFI. (Previously this was\ndone using a small C function I had written, but we are now using the full\nopenssl rust library bindings. The story is basically the same though). \n\nIf you are getting the rust sdk through github or crates.io, then there isn't a\ngood way to have the SDK install it for you because it is a deb package in an\napt repo. If you were getting it through a deb package, then you could just\nspecify it as a dependency, but there is not good way to package Rust libraries\nthat aren't shared libraries as deb packages.\n\nThere is one last alternative, which is to vender openssl with the SDK, but there are separate licensing considerations there I think.\nhttps://github.com/sfackler/rust-openssl#vendored","username":"adamludvik","ts":"2018-10-02T00:35:16.312Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=CkLWvfcQcH3i9CesG) @adamludvik The newly started Raft LR1 session is completely blocked after ~ 15hrs. ","username":"pankajgoyal","ts":"2018-10-02T04:56:23.286Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=CkLWvfcQcH3i9CesG","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=CkLWvfcQcH3i9CesG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Are you able to glean anything from the logs?","username":"adamludvik","ts":"2018-10-02T16:05:01.656Z"}
{"msg":"@adamludvik thanks for the details on openssl - since Raft  clearly uses it, I will leave OpenSSL in the NOTICES file and corresponding documentation. ","username":"TomBarnes","ts":"2018-10-02T16:11:08.830Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=r2Y6iwBSwyHha3fro) @adamludvik I just observed QUEUE_FULL in rest_api_debug.logs file\n\n[2018-10-02 16:26:11.877 [MainThread] route_handlers DEBUG] Received CLIENT_BATCH_SUBMIT_RESPONSE response from validator with status QUEUE_FULL\n[2018-10-02 16:26:11.878 [MainThread] helpers INFO] POST /batches HTTP/1.1: 429 status, 375 size, in 0.003290 s\n","username":"pankajgoyal","ts":"2018-10-02T16:57:31.464Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=r2Y6iwBSwyHha3fro","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=r2Y6iwBSwyHha3fro","remote":true,"fileId":null,"fileName":null}]}
{"msg":"QUEUE_FULL indicates that the validator's batch queue is full. The limit is calculated based on the historical throughput of the network. This could indicate that for some reason, the validator is not able to process batches anymore. This is likely because of one of the following:\n- Crashed/missing TP\n- Crashed/missing consensus engine\n- Internal validator problem\n- No remaining system resources\n\nYou will need to look at the status and logs for each of those to determine the root cause. ","username":"adamludvik","ts":"2018-10-02T17:01:11.945Z"}
{"msg":"@amundson in response to your comments on this PR about backwards compatibility and 1.1 https://github.com/hyperledger/sawtooth-core/pull/1889, I have a few thoughts.\n\nFirst, since we haven't actually released 1.1, I think this PR should be considered for backporting immediately.\n\nSecond, the Consensus API has not gone through any sort of stabilization and committing to backwards compatibility without an effort to stabilize the API implementation as we did with the TP API would be a mistake in my opinion. If there is a requirement that the Consensus API implementation be stabilized before the 1.1 release, then that is a big gap.\n\nThird, without this change, BFT consensus algorithms that depend on signed message passing would not actually be BFT with 1.1, which seems like a significant loss. An example of such an algorithm would be PBFT. An example of an algorithm that is not affected by this is Raft.","username":"adamludvik","ts":"2018-10-04T16:33:18.652Z"}
{"msg":"I like the first, backporting","username":"amundson","ts":"2018-10-04T16:34:14.575Z"}
{"msg":"because we want to use pbft with 1.1","username":"amundson","ts":"2018-10-04T16:35:22.074Z"}
{"msg":"@ltseeley what kind of uptime are you getting with Raft? On bumper the LR tests are failing after ~15 hours (see a few posts above ^). \nAlso can you copy @pankajgoyal on what settings you are using?","username":"Dan","ts":"2018-10-09T14:01:55.539Z"}
{"msg":"@Dan @pankajgoyal it's been quite some time since I did more long-term testing of Raft; most of my testing involved shorter runs since we were more concerned with measuring performance. As far as settings for a 10 node network running 10TPS, I would recommend these settings:\n\nsawtooth.consensus.raft.period=0\nsawtooth.consensus.raft.election_tick=100\nsawtooth.consensus.raft.heartbeat_tick=10\nmax_batches_per_block = 150","username":"ltseeley","ts":"2018-10-09T14:43:06.393Z"}
{"msg":"@Dan @pankajgoyal it's been quite some time since I did more long-term testing of Raft; most of my testing involved shorter runs since we were more concerned with measuring performance. As far as settings for a 10 node network running 10TPS, I would recommend these settings:\n\nsawtooth.consensus.raft.period=0\nsawtooth.consensus.raft.election_tick=10\nsawtooth.consensus.raft.heartbeat_tick=100\nmax_batches_per_block = 150","username":"ltseeley","ts":"2018-10-09T14:43:06.393Z"}
{"msg":"As @adamludvik pointed out, there are a number of reasons performance degradation could happen, but it is hard to determine without examining the logs","username":"ltseeley","ts":"2018-10-09T14:44:55.209Z"}
{"msg":"Yeah just for setting expectations have you seen raft survive a full LR1? ","username":"Dan","ts":"2018-10-09T16:49:11.436Z"}
{"msg":"I have not","username":"ltseeley","ts":"2018-10-09T17:58:37.026Z"}
{"msg":"@pankajgoyal can you provide the full logs to me? You can DM me if it's a private location.","username":"Dan","ts":"2018-10-09T18:54:46.731Z"}
{"msg":"@ltseeley Oct 10 07:37:56 ip-10-66-0-198 sawtooth-raft: INFO  | sawtooth_raft::engin | Raft Engine Config Loaded: RaftEngineConfig { peers: [02acbf587a1703e9651c45b320fc21f43edc7b7d368dbf2616e6b1f812b9944014, 03e312f7b11c81aa005eb059fa78551f263a5d74a996ddc9fd844279038dff1f9d, 03d04238b164f1525ab68bab2672bc6e26172d0fc454944b729095b41720f16961, 0399b6a79fb6d7a499c9e30581419ad49e80ec3f9bfc93702f1471e639063884f5, 021af1d132aa0298d37d57e2a066ea5e682229c627fc13bb180e2e0ad0a218f37e, 03bfa33ee39e307efb5f6d51d92de96503a0ab0fecb9061fba31bdf5f56f14188a, 0279db4fe60020ba9c3f331e6db4178bb4d92030acaa2552238701999de257f70b, 02b99ecfec338b4ce54b0b689c3cd02cf389f0c3775fbe8c3fb12ffee165d66d70, 02303e56fe4a7f2975c804d0fc1fe19dc2e50dfeac86b04982eeac83683ca6df0f, 038752422eaf62224e2f97b10bd0b3cfd3078d347277e92427f93d49914b37ca0f], period: 0ns, raft: { election_tick: 10, heartbeat_tick: 100, applied: 0 }, storage: cached storage: file-system backed persistent storage }\nOct 10 07:37:56 ip-10-66-0-198 sawtooth-raft[7220]: thread 'main' panicked at 'configuration is invalid: ConfigInvalid(\"election tick must be greater than heartbeat tick\")', libcore/result.rs:945:5\n","username":"pankajgoyal","ts":"2018-10-10T07:42:00.611Z"}
{"msg":"@ltseeley I tried with configuration mentioned by you and got the error mentioned above.","username":"pankajgoyal","ts":"2018-10-10T07:42:29.508Z"}
{"msg":"@pankajgoyal oh that was a mistake on my part, sorry for that. The election tick should be 100 and the heartbeat tick should be 10","username":"ltseeley","ts":"2018-10-10T21:22:43.675Z"}
{"msg":"@pankajgoyal oh that was a mistake on my part, sorry for that. The election tick should be 100 and the heartbeat tick should be 10 (just edited the original message for posterity's sake)","username":"ltseeley","ts":"2018-10-10T21:22:43.675Z"}
{"msg":"build.sawtooth.me is not available...I want to fetch sawtooth-raft debians from there","username":"pankajgoyal","ts":"2018-10-17T18:18:36.158Z"}
{"msg":"@rberg2 Can you check sawtooth build server","username":"pankajgoyal","ts":"2018-10-17T18:19:15.771Z"}
{"msg":"Started the LR1 for sawtooth-core(master) + Raft.\n\nGrafana link: http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&var-DATASOURCE=nightly_raft_new&from=now-30m&to=now\n\nParameters:\n----------------\nsawtooth.consensus.raft.period=0\nsawtooth.consensus.raft.election_tick=100\nsawtooth.consensus.raft.heartbeat_tick=10\nsawtooth.publisher.max_batches_per_block=150\n\nI/P TPS: 10 (5 intkey + 5 smallbank)","username":"pankajgoyal","ts":"2018-10-17T19:11:30.667Z"}
{"msg":"@pankajgoyal looks like it is dead ^","username":"kelly_","ts":"2018-10-17T19:45:06.120Z"}
{"msg":"@jsmitchell fyi this is a master+raft run pankaj just started","username":"kelly_","ts":"2018-10-17T19:45:36.065Z"}
{"msg":"well, there goes that theory. thanks for testing.","username":"jsmitchell","ts":"2018-10-17T19:46:16.179Z"}
{"msg":"@pankajgoyal can probably tell you more about what they have seen with raft. I know they had a 12 hour run but that one looks like it went ~30 minutes","username":"kelly_","ts":"2018-10-17T19:47:29.125Z"}
{"msg":"Another run for sawtooth-core(master) + Raft.\nGrafana link: http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=now-30m&to=now&var-DATASOURCE=nightly_raft&refresh=5s\n\nParameters:\n----------------\nsawtooth.consensus.raft.period=3000\nsawtooth.consensus.raft.election_tick=20\nsawtooth.consensus.raft.heartbeat_tick=2\nsawtooth.publisher.max_batches_per_block=500\n\nI/P TPS: 10 (5 intkey + 5 smallbank)\n\nWith these settings and I/P parameters, It ran for ~12Hrs in Sawtooth-1.1 + Raft.","username":"pankajgoyal","ts":"2018-10-17T19:58:46.482Z"}
{"msg":"@pankajgoyal have you looked in the logs for anything out of the normal?","username":"amundson","ts":"2018-10-17T20:13:01.392Z"}
{"msg":"I looked at logs Pankaj saved from a run last week and there were no errors. I didn't find anything that jumped out. You could see backpressure kick in but I assume that was a consequence of the defect and not the source. The replica was dropping a fair amount of duplicate blocks but that seemed expected and unrelated.\nThe main observed failure was that the replicas stopped accepting transactions and only the leader was 'live'.","username":"Dan","ts":"2018-10-17T21:21:37.178Z"}
{"msg":"probably a good next step is to figure out how to repeat it outside of that environment (like in docker)","username":"amundson","ts":"2018-10-17T22:29:00.460Z"}
{"msg":"@Dan given the list of things to do yet prior to release, which we should be able to post here in some reasonable form on Monday, we are probably a couple weeks out for the release","username":"amundson","ts":"2018-10-19T16:23:56.158Z"}
{"msg":"@Dan re:PBFT/consensus API - I'd consider PBFT support (compatibility?) a blocker for 1.1, and I don't think we want to support two PBFT branches","username":"amundson","ts":"2018-10-19T16:35:29.396Z"}
{"msg":"Not clear. the consensus API needs this https://github.com/hyperledger/sawtooth-core/pull/1909 for PBFT.\nIf you are talking about the event pattern for communicating settings changes to a consensus engine, that's not even defined yet so I don't think we would want to hold up 1.1 for weeks / months.  ","username":"Dan","ts":"2018-10-19T17:04:36.573Z"}
{"msg":"well, maybe we say \"PBFT needs to target core 1.1\" and the question I'm asking is \"do we need changes in 1.1 for that to be workable?\"","username":"amundson","ts":"2018-10-19T17:10:49.677Z"}
{"msg":"@adamludvik ^","username":"amundson","ts":"2018-10-19T17:11:22.235Z"}
{"msg":"My preference is to not break the consensus API once it is published on the 1.1 branch. I think that means we should have https://github.com/hyperledger/sawtooth-core/pull/1909 merged before releasing 1.1. I do not believe the settings push-notifications would be a breaking change (I see it as more of an optimization), and I don't think it is required to make the PBFT implementation stable.","username":"adamludvik","ts":"2018-10-19T17:19:41.715Z"}
{"msg":"ok, that's the opinion I was looking for :)","username":"amundson","ts":"2018-10-19T17:22:17.761Z"}
{"msg":"Can I get a rocketchat badge that says \"The Opinionator\"?","username":"adamludvik","ts":"2018-10-19T17:59:30.424Z"}
{"msg":"sure, I think you just email helpdesk","username":"amundson","ts":"2018-10-19T18:07:59.442Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=6ZaH3SFK6CjHkEmHQ) @TomBarnes ^","username":"Dan","ts":"2018-10-19T20:15:34.515Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=6ZaH3SFK6CjHkEmHQ","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=6ZaH3SFK6CjHkEmHQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@pankajgoyal @adamludvik fyi, i just merged this memory leak backport https://github.com/hyperledger/sawtooth-core/pull/1869\nWhich I had been inadvertently sitting on for a long time. ","username":"Dan","ts":"2018-10-22T19:22:07.525Z"}
{"msg":"@amundson Hey Shawn - that list would certainly be helpful - looking forward to seeing it.  In the meantime, we (Intel) are planning to re-run LR7 with PoET sim and LR1 with Raft as soon as backports are complete, and we are working to address missing license headers in sawtooth-core, sawtooth-poet, and sawtooth-raft.","username":"TomBarnes","ts":"2018-10-23T00:33:23.034Z"}
{"msg":"@TomBarnes perfect, we should have backports wrapped up this week","username":"amundson","ts":"2018-10-23T00:36:45.568Z"}
{"msg":"@rberg2  build.sawtooth.me is not accessible. I need to pull raft debian for LR run","username":"pankajgoyal","ts":"2018-10-23T02:32:19.373Z"}
{"msg":"@pankajgoyal it is back up. ","username":"agunde","ts":"2018-10-23T14:07:10.350Z"}
{"msg":"Thanks @agunde ","username":"pankajgoyal","ts":"2018-10-23T14:07:34.070Z"}
{"msg":"The following tasks are being undertaken to prepare for the Sawtooth 1.1 release:\n-Identify & apply core backports (Shawn, Adam, Ryan, Anne, others) [1 week]\n-Final LR7 testing (Pankaj) [1 week]\n-Create release notes for 1.1 (Shawn, Adam, Andi, Ryan, Anne, others) [1 week]\n-Website enhancements, automation (Ben, Shawn) [1-2 weeks]\n-Official FAQ & Community page integrated into website (Ben, Dan A, Shawn) [2 days]\n-Kubernetes updates (Richard) [3 days]\n-Release Artifact builds, Tagging, Publishing (Ryan, Richard, Ken, Boyd, Shawn) [2 weeks]\n-Release announcement (Kelly, maintainers) [1 week]\n-Post-release blog entries (various topics and authors) [weekly]\n-Coordination w/HL Marketing (Mark, Dan, Shawn, Kelly) [ongoing until release]\n-Determine release date (root team: Adam, Andi, Dan, James, Kelly, Peter, Shawn, Tom) [ongoing until release]\n\nAt request of HL, release date will be discussed privately by the root team prior to announcement. Except for the date, everything else will be discussed in #sawtooth-release.\n\nThe activity durations are engineering estimates. Activities are expected to happen in parallel.\n\nLet us know if there are any release preparation activities not listed in the items shown.\n","username":"mfford","ts":"2018-10-23T18:36:26.659Z"}
{"msg":"If I have some release notes text where should I drop that? (it's about poet and sgx in 1.1)\nIf I have some thoughts on the webpage where should I share that?","username":"Dan","ts":"2018-10-23T21:10:27.651Z"}
{"msg":"For now, @Dan send release notes text to me, as I will be collecting them","username":"mfford","ts":"2018-10-23T21:42:08.689Z"}
{"msg":"@Dan if the website thoughts are deep, we can have a discussion about it in #sawtooth-outreach . if it's tactical (tasks to do before release), maybe here?","username":"amundson","ts":"2018-10-24T15:07:28.257Z"}
{"msg":"Are we backporting the bionic upgrade to 1.1?","username":"adamludvik","ts":"2018-10-24T23:24:13.575Z"}
{"msg":"Has joined the channel.","username":"duncanjw","ts":"2018-10-24T23:45:50.611Z","type":"uj"}
{"msg":"currently no plan to backport bionic changes","username":"amundson","ts":"2018-10-25T00:03:01.552Z"}
{"msg":"10-4","username":"adamludvik","ts":"2018-10-25T00:05:23.045Z"}
{"msg":"Initial backport PR up for validator and consensus: https://github.com/hyperledger/sawtooth-core/pull/1918","username":"adamludvik","ts":"2018-10-25T02:08:30.091Z"}
{"msg":"I left a comment about why it's the \"initial\" one.","username":"adamludvik","ts":"2018-10-25T02:08:37.370Z"}
{"msg":"57 commits .. whaaaa?! :astonished: ","username":"Dan","ts":"2018-10-25T13:20:57.294Z"}
{"msg":"@Dan you weren't expecting them to be squashed were you? :)","username":"amundson","ts":"2018-10-25T15:30:47.511Z"}
{"msg":"yes that would have been sooo much better :P","username":"Dan","ts":"2018-10-25T15:48:57.459Z"}
{"msg":"Has joined the channel.","username":"Sutrannu","ts":"2018-10-25T15:52:34.677Z","type":"uj"}
{"msg":"@amundson @Dan et. al, any thoughts on this comment in the backports PR:\n> Note that I think we should also backport the change in 20e2265 as it fixes a known bug with the consensus API. However, this change depends on two components in the validator not being backported (block manager and fork cache) so I will need to rewrite part of the fix for 1-1.","username":"adamludvik","ts":"2018-10-26T17:13:52.348Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/commit/20e2265083fdc059c6660d19c59e5c75f045ae4f","username":"adamludvik","ts":"2018-10-26T17:14:06.187Z"}
{"msg":"i think based on our branch point we are already pretty aggressive with backports. I'd rather see us get 1.1 out and then 1.2 before EOY than add more risk/time to 1.1. ","username":"Dan","ts":"2018-10-26T18:51:27.331Z"}
{"msg":"If you change your mind, here is the PR with more details. I'll let you and @amundson decide if we should include it.","username":"adamludvik","ts":"2018-10-26T20:01:38.079Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/pull/1921","username":"adamludvik","ts":"2018-10-26T20:01:41.369Z"}
{"msg":"63 commits ?!  you are a machine.","username":"Dan","ts":"2018-10-26T20:49:30.591Z"}
{"msg":"Oh I see that's incremental on the other ginormous backport. You still might be a machine though. ","username":"Dan","ts":"2018-10-26T20:59:23.418Z"}
{"msg":"Some sort of cherry picking bot. :robot: :cherries: ","username":"Dan","ts":"2018-10-26T20:59:53.354Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/pull/1922 @Dan @amundson asked me to do the documentation backports for 1-1. None of these commits affect code, but these are backports to the docs directory.","username":"boydjohnson","ts":"2018-10-29T14:32:42.800Z"}
{"msg":"thanks!","username":"Dan","ts":"2018-10-29T14:33:03.493Z"}
{"msg":"@Dan @adamludvik I think we should put in Adam's fix for that known bug before we start re-running LR testing, since we have to do the LR runs anyway.","username":"amundson","ts":"2018-10-29T14:49:42.939Z"}
{"msg":"so use the builds from the #1921?","username":"Dan","ts":"2018-10-29T14:50:08.226Z"}
{"msg":"for LR testing? I think we are going to spin some builds specifically for that once we get all the backporting done","username":"amundson","ts":"2018-10-29T14:50:43.599Z"}
{"msg":"i.e. in the appropriate repos, not out of a jenkins PR. ","username":"amundson","ts":"2018-10-29T14:51:21.258Z"}
{"msg":"ideally we make sure that we have everything in the repo that is consistent to test with (core, poet, etc.) so we know the release will be consistent","username":"amundson","ts":"2018-10-29T14:52:51.538Z"}
{"msg":"Sure. If we want to start evaluating the blockmanager stuff today, though, then we should spin up an LR using the bits out of #1921?","username":"Dan","ts":"2018-10-29T14:53:20.760Z"}
{"msg":"the change in #1921 is not the block manager. it's a more targeted fix that is 1-1 specific because we didn't want to risk of backporting more","username":"amundson","ts":"2018-10-29T14:55:38.876Z"}
{"msg":"to the question though, my hope is that those testable artifacts are not too far behind merging in these backport PRs, and that they would be available later in the day","username":"amundson","ts":"2018-10-29T14:56:39.316Z"}
{"msg":"@rberg2 has a kubernetes fix that will need to be backported","username":"amundson","ts":"2018-10-29T14:57:48.726Z"}
{"msg":"@rberg2 boyd's doc PR has some kubernetes stuff that references 1.0 - is that fixed in your PR from last week?","username":"amundson","ts":"2018-10-29T14:58:26.599Z"}
{"msg":"@amundson that PR is needed first then this one https://github.com/hyperledger/sawtooth-core/pull/1915","username":"rberg2","ts":"2018-10-29T15:00:19.691Z"}
{"msg":"the one is building now with the lint fix, as soon as thats done I will merge and make the backport PR","username":"rberg2","ts":"2018-10-29T15:00:53.800Z"}
{"msg":"@amundson @rberg2's commits to change kubernetes files from 1.0 -> 1.1 are included now in my 1-1 backports PR.","username":"boydjohnson","ts":"2018-10-29T15:56:59.897Z"}
{"msg":"@boydjohnson ping me after Anne has reviewed the PR and I'll approve it","username":"amundson","ts":"2018-10-29T15:58:22.812Z"}
{"msg":"Cool, thanks.","username":"boydjohnson","ts":"2018-10-29T15:58:44.982Z"}
{"msg":"@Dan @amundson one more backport I think we want in 1-1: https://github.com/hyperledger/sawtooth-core/pull/1924\n\nThis stabilizes the consensus p2p messaging API to something similar in spirit to https://github.com/hyperledger/sawtooth-rfcs/pull/23 and is required for implementing this https://github.com/hyperledger/sawtooth-rfcs/pull/30","username":"adamludvik","ts":"2018-10-29T16:45:25.349Z"}
{"msg":"You're just playing a game with me aren't you @adamludvik ","username":"Dan","ts":"2018-10-29T17:40:26.294Z"}
{"msg":":camel: ","username":"adamludvik","ts":"2018-10-29T17:46:02.647Z"}
{"msg":"@adamludvik finding commits to cherry-pick! https://giant.gfycat.com/HilariousSophisticatedGlowworm.gif","username":"rberg2","ts":"2018-10-29T17:58:24.414Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/pull/1925 @Dan This PR built and has 2 green check marks. I'm going to cherry-pick the commit to my 1-1 backports pr.","username":"boydjohnson","ts":"2018-10-29T19:37:45.591Z"}
{"msg":"@amundson @Dan If we decide we want all three of these PRs I suggest we close the first two and just merge the third. Merging them one at a time will require rebasing and waiting for Jenkins to rebuild but the result will be identical to merging just the last one.\n (https://github.com/hyperledger/sawtooth-core/pull/1918, https://github.com/hyperledger/sawtooth-core/pull/1921, https://github.com/hyperledger/sawtooth-core/pull/1924)","username":"adamludvik","ts":"2018-10-29T19:45:16.208Z"}
{"msg":"Or if we just want the first two, we just merge the second one.","username":"adamludvik","ts":"2018-10-29T20:03:43.474Z"}
{"msg":"right.. been sorting out some other stuff and haven't gotten to finish reviewing options 2 and 3 yet.","username":"Dan","ts":"2018-10-29T21:23:27.198Z"}
{"msg":"Has joined the channel.","username":"kodonnel","ts":"2018-10-29T22:04:32.304Z","type":"uj"}
{"msg":"@adamludvik do you have the master commit handy which #1924 comes from?","username":"Dan","ts":"2018-10-29T23:10:55.164Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/commit/a23a73838892df8015e19941b02c86a9e51a2784","username":"adamludvik","ts":"2018-10-29T23:19:00.449Z"}
{"msg":"@amundson @Dan still need you to approve this for merging: https://github.com/hyperledger/sawtooth-core/pull/1921\n\nI recommend we merge that branch and start LR testing off of the result.","username":"adamludvik","ts":"2018-10-30T00:28:26.559Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/pull/1924 still needs a little work. Seems I missed a couple things in my haste to get it through. It is entirely API related and should have no effect on stability/performance for an LR run.","username":"adamludvik","ts":"2018-10-30T00:29:53.450Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=k8H2dPWLJRFpZvwt7) Actually it may just be an issue with protobuf updating this weekend","username":"adamludvik","ts":"2018-10-30T00:48:12.620Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=k8H2dPWLJRFpZvwt7","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=k8H2dPWLJRFpZvwt7","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I can't find that commit for 1924 in master. Is it in some other branch?","username":"Dan","ts":"2018-10-30T05:34:35.597Z"}
{"msg":"1921 is approved now","username":"Dan","ts":"2018-10-30T05:35:08.412Z"}
{"msg":"oh, i see, it's not yet merged in master https://github.com/hyperledger/sawtooth-core/pull/1923","username":"Dan","ts":"2018-10-30T13:02:00.453Z"}
{"msg":"The 1-1 documentation backports PR, 1922, has been merged.","username":"boydjohnson","ts":"2018-10-30T14:30:59.580Z"}
{"msg":"1921 (option 2) is merged. Will rebase the p2p messaging stabilization PR. Can we deploy an LR network from the HEAD of the 1-1 branch? @Dan @rberg2 @pankajgoyal ?","username":"adamludvik","ts":"2018-10-30T15:31:08.214Z"}
{"msg":"sure, I will monitor the docker outage thats causing builds to fail right now and will get a network deployed as soon as we get 1-1 built with all these changes","username":"rberg2","ts":"2018-10-30T15:50:47.670Z"}
{"msg":"do we have an existing jenkins job for the 1-1 branch?","username":"Dan","ts":"2018-10-30T15:51:31.450Z"}
{"msg":"yes","username":"rberg2","ts":"2018-10-30T15:51:37.565Z"}
{"msg":"cool. i don't see it on the overview tab.. where would i find that?","username":"Dan","ts":"2018-10-30T15:52:25.066Z"}
{"msg":"https://build.sawtooth.me/view/all/job/Sawtooth-Hyperledger/job/sawtooth-core/job/1-1/","username":"rberg2","ts":"2018-10-30T15:52:57.959Z"}
{"msg":"`all/sawtooth - official builds/ sawtooth-core` will have all branches and PRs","username":"rberg2","ts":"2018-10-30T15:53:31.251Z"}
{"msg":"thx!","username":"Dan","ts":"2018-10-30T15:53:42.011Z"}
{"msg":"@amundson & @Dan - FYI, I'm doing a handful of quick doc changes to fix broken links and annoying errors.  I'd like to backport these changes to 1.1 so that the released docs are clean and all links work.  \n\nQuestion: Should I backport each one individually as soon as it's merged into master? Or should I batch them into a single PR once I've finished my link-checking pass? ","username":"achenette","ts":"2018-10-30T19:44:51.807Z"}
{"msg":"batch please","username":"Dan","ts":"2018-10-30T19:45:21.791Z"}
{"msg":"I'm cool with either approach (batch or quick)","username":"amundson","ts":"2018-10-30T20:42:29.960Z"}
{"msg":"My last backport PR is merged: https://github.com/hyperledger/sawtooth-core/pull/1924","username":"adamludvik","ts":"2018-10-31T01:53:38.045Z"}
{"msg":"Has joined the channel.","username":"chainsaw","ts":"2018-10-31T14:30:48.891Z","type":"uj"}
{"msg":"@Dan @PankajKulkarni the apt repo `bumper/stable` now exists, and is populated with the latest 1-1 release candidate. can you please get that running an LR test? Thanks!","username":"rberg2","ts":"2018-10-31T20:48:21.282Z"}
{"msg":"Has joined the channel.","username":"PankajKulkarni","ts":"2018-10-31T20:48:21.424Z","type":"uj"}
{"msg":"oops - wrong pankaj! You are looking for @pankajgoyal \n(this is what's refered to as a pankajing failure) ","username":"Dan","ts":"2018-10-31T21:00:23.098Z"}
{"msg":"whoops, sorry PankajKulkarni!","username":"rberg2","ts":"2018-10-31T21:14:43.827Z"}
{"msg":"@rberg2 so, the repo is ubuntu/bumper/stable and the key is 8AA7AF1F1091A5FD. right?","username":"pankajgoyal","ts":"2018-11-01T11:44:53.134Z"}
{"msg":"yep! everything in the stable repos will be signed with that key.","username":"rberg2","ts":"2018-11-01T14:37:28.309Z"}
{"msg":"@rberg2 I've installed sawtooth-core (from ubuntu/bumper/stable) and Raft from jenkins. Facing some issue while applying Transaction Access policy. ","username":"pankajgoyal","ts":"2018-11-01T16:35:00.989Z"}
{"msg":"TASK [Apply Transaction Access Policy] ******************************************************************************************************************************************************\nfatal: [13.232.245.120]: FAILED! => {\"changed\": true, \"cmd\": \"sh /tmp/transactionpolicy.sh\", \"delta\": \"0:05:00.388717\", \"end\": \"2018-11-01 12:01:53.808888\", \"msg\": \"non-zero return code\", \"rc\": 1, \"start\": \"2018-11-01 11:56:53.420171\", \"stderr\": \"Error: (503): Service Unavailable\", \"stderr_lines\": [\"Error: (503): Service Unavailable\"], \"stdout\": \"\", \"stdout_lines\": []}\n\n","username":"pankajgoyal","ts":"2018-11-01T16:35:01.791Z"}
{"msg":"@pankajgoyal  Is there anything interesting in the sawtooth logs on the genesis node? also check `journalctl` ","username":"rberg2","ts":"2018-11-01T16:44:06.124Z"}
{"msg":"@rberg2 yes, I'm doing that. Also want to know if this apt repo contains the poet packages also?","username":"pankajgoyal","ts":"2018-11-01T16:45:10.505Z"}
{"msg":"yes poet is in there. I have a lr network running poet-sim from bumper.","username":"rberg2","ts":"2018-11-01T16:45:46.053Z"}
{"msg":"@rberg2 In genesis validator_debug.log, I got this:\n\n[2018-11-01 11:56:39.127 [Thread-44] permission_verifier WARNING] No public key found, ca3132fd32f623a1db7344f1e3b5e2e96fcb0d39500dd03dd09c15b0e3c84a95b4f955a574fd376c0bcb1fbf33264ad6e582fabde2fd9a9b83228e6f58b5dd92 is not permitted. Close connection.","username":"pankajgoyal","ts":"2018-11-01T16:59:38.549Z"}
{"msg":"LR7 run for 1.1 (ubuntu/bumper/nightly) + PoET-SIM. \nGrafana Link: http://52.197.237.0:3000/d/bV0QF0xik/1-1_run?orgId=1&var-DATASOURCE=metrics_lr7_11&from=now-216h&to=now-48h\nObservation: In one of the nodes, there is backpressure since quite long time. I don't have access to logs so can't comment on this yet. The session was started by someone else.\nAttaching the grafana snapshot as well.","username":"pankajgoyal","ts":"2018-11-02T17:09:49.014Z"}
{"msg":"","username":"pankajgoyal","ts":"2018-11-02T17:11:38.400Z","attachments":[{"type":"file","title":"Grafana-Dashboard-AWS-1.1-poet-sim.png","title_link":"/file-upload/qw7Hmg34Y5LiamCda/Grafana-Dashboard-AWS-1.1-poet-sim.png","image_url":"/file-upload/qw7Hmg34Y5LiamCda/Grafana-Dashboard-AWS-1.1-poet-sim.png","image_type":"image/png","image_size":1785057,"url":"/file-upload/qw7Hmg34Y5LiamCda/Grafana-Dashboard-AWS-1.1-poet-sim.png","remote":false,"fileId":"qw7Hmg34Y5LiamCda","fileName":"Grafana-Dashboard-AWS-1.1-poet-sim.png"}]}
{"msg":"There is website discussion going on in #sawtooth-outreach prior to the 1.1 release.","username":"Sutrannu","ts":"2018-11-02T20:44:15.464Z"}
{"msg":"@pankajgoyal the missing core metrics (eg execution rate) suggest that your grafana setup is out of sync with the metric types the validators are reporting. Also, you should configure telegraf so you can report system metrics.","username":"jsmitchell","ts":"2018-11-04T20:44:45.463Z"}
{"msg":"@amundson & @Dan - This final doc backport PR needs 2 official reviewers. (It fixes a number of errors and typos.)  I'm hoping that there's still time to get it into the 1.1 release. If not, it should be in the next point release.\nhttps://github.com/hyperledger/sawtooth-core/pull/1947","username":"achenette","ts":"2018-11-14T17:43:10.081Z"}
{"msg":"@achenette seems odd that rust SDK is shown as experimental in the SDK table when the whole of sawtooth is moving to rust","username":"TomBarnes","ts":"2018-11-14T17:46:47.385Z"}
{"msg":"That's a question for the people who determined the \"status\" of each SDK.  I recall that Shawn, Peter, Adam, and Dan were deeply invested in how to mark each SDK.  ","username":"achenette","ts":"2018-11-14T17:48:03.676Z"}
{"msg":"I made a change recently, and none of them said anything about changing the Rust status...","username":"achenette","ts":"2018-11-14T17:48:21.457Z"}
{"msg":"I made a (minor) change to this page recently, and none of them said anything about changing the Rust status...","username":"achenette","ts":"2018-11-14T17:48:21.457Z"}
{"msg":"@amundson @Dan @pschwarz Is the SDK table in PR 1947 correct in showing rust SDK status as \"experimental\"?  We've moved a lot of code to rust this year so I was expecting that the Rust SDK would be one fo the best maintained and most up to date.","username":"TomBarnes","ts":"2018-11-14T17:50:20.199Z"}
{"msg":"That's probably an outdated designation. ","username":"Dan","ts":"2018-11-14T17:57:31.975Z"}
{"msg":"I'll need info (and agreement) on what corrections should be made. \nhttps://sawtooth.hyperledger.org/docs/core/nightly/master/app_developers_guide/sdk_table.html\n\nFor example, is the Rust SDK a 1 for client signing?  Transaction processor?  Can we check any other boxes, like Stable API or State Delta? ","username":"achenette","ts":"2018-11-14T18:20:03.899Z"}
{"msg":"client signing and TP should be 1s\n@pschwarz can you comment on rust sdk's state delta maturity?","username":"Dan","ts":"2018-11-15T16:02:23.889Z"}
{"msg":"client signing and TP should be 1s\n@pschwarz can you comment on rust sdk's state delta maturity?","username":"Dan","ts":"2018-11-15T16:02:23.889Z"}
{"msg":"Yes, they're 1s","username":"pschwarz","ts":"2018-11-15T16:31:42.246Z"}
{"msg":"The event stuff is stable and used heavily, yes","username":"pschwarz","ts":"2018-11-15T16:51:35.830Z"}
{"msg":"yes, all 1s but not API stable. it wont' be API stable until we go through some form of review process, at which point we could make it 1.0.","username":"amundson","ts":"2018-11-15T18:56:47.929Z"}
{"msg":"Has joined the channel.","username":"JayeshJawale2","ts":"2018-11-19T09:12:58.284Z","type":"uj"}
{"msg":"To confirm: For Rust, the SDK table should change as follows:\n- Change all three Maturity #s to 1\n- Add checkmarks in all three  Complete columns (Client Signing, Transaction Processor, and State Delta)\n- Leave the existing checkmark in the State Delta/Stable API column.\n- Do not add checkmarks for Client Signing/Stable API and State Delta/Stable API.  \n\nIs that correct, @amundson & @Dan & @pschwarz?","username":"achenette","ts":"2018-11-19T23:09:22.501Z"}
{"msg":"To confirm: For Rust, the SDK table should change as follows:\n- Change all three Maturity #s to 1\n- Add checkmarks in all three  *Complete* columns (Client Signing, Transaction Processor, and State Delta)\n- Leave the existing checkmark in the State Delta/Stable API column.\n- Do not add checkmarks for Client Signing/Complete and State Delta/Complete.  \n\nIs that correct, @amundson & @Dan? ","username":"achenette","ts":"2018-11-19T23:09:22.501Z"}
{"msg":"To confirm: For Rust, the SDK table should change as follows:\n- Change all three Maturity #s to 1\n- Add checkmarks in all three  Complete columns (Client Signing, Transaction Processor, and State Delta)\n- Leave the existing checkmark in the State Delta/Stable API column.\n- Do not add checkmarks for Client Signing/Complete and State Delta/Complete.  \n\nIs that correct, @amundson & @Dan? ","username":"achenette","ts":"2018-11-19T23:09:22.501Z"}
{"msg":"To confirm: For Rust, the SDK table should change as follows:\n- Change all three Maturity #s to 1\n- Add checkmarks in all three  Complete columns (Client Signing, Transaction Processor, and State Delta)\n- Leave the existing checkmark in the State Delta/Stable API column.\n- Do not add checkmarks for Client Signing/Complete and State Delta/Complete.  \n\nIs that correct, @amundson & @Dan & @pschwarz? ","username":"achenette","ts":"2018-11-19T23:09:22.501Z"}
{"msg":"I think you meant to type \"Do not add checkmarks for client signing / *stable* and *transaction processor stable* \"","username":"Dan","ts":"2018-11-19T23:15:43.140Z"}
{"msg":"I think you meant to type \"Do not add checkmarks for client signing/*stable* and *transaction processor stable* \"","username":"Dan","ts":"2018-11-19T23:15:43.140Z"}
{"msg":"I think you meant to type \"Do not add checkmarks for client signing / *stable* and *transaction processor stable* \"","username":"Dan","ts":"2018-11-19T23:15:43.140Z"}
{"msg":"Yup.  (Edited my message.) Thanks!","username":"achenette","ts":"2018-11-19T23:30:56.841Z"}
{"msg":"_Now_ is the above list correct?","username":"achenette","ts":"2018-11-19T23:31:24.678Z"}
{"msg":"almost :) state delta <--> transaction processor","username":"Dan","ts":"2018-11-19T23:53:16.686Z"}
{"msg":"Sorry - I went to Toronto over the weekend and came down with a bad case of jet lag.  (That one-hour difference is a killer!)","username":"achenette","ts":"2018-11-20T16:14:55.431Z"}
{"msg":"Has joined the channel.","username":"bochuxt","ts":"2018-11-26T07:10:31.701Z","type":"uj"}
{"msg":"@Dan @amundson @pschwarz @TomBarnes \nPlease check out my proposed Rust changes for the SDK table in the following image.  If these changes look good, I'll create a PR with the goal of backporting it to 1.1. \n","username":"achenette","ts":"2018-11-26T17:48:50.840Z"}
{"msg":"","username":"achenette","ts":"2018-11-26T17:49:15.116Z","attachments":[{"type":"file","title":"SDK-table_Rust-changes_2018-11-26.png","title_link":"/file-upload/JmPzjqaL2kNTDb3JX/SDK-table_Rust-changes_2018-11-26.png","image_url":"/file-upload/JmPzjqaL2kNTDb3JX/SDK-table_Rust-changes_2018-11-26.png","image_type":"image/png","image_size":200765,"url":"/file-upload/JmPzjqaL2kNTDb3JX/SDK-table_Rust-changes_2018-11-26.png","remote":false,"fileId":"JmPzjqaL2kNTDb3JX","fileName":"SDK-table_Rust-changes_2018-11-26.png"}]}
{"msg":"@achenette uncheck stable api from 'State Delta'","username":"amundson","ts":"2018-11-26T17:50:06.112Z"}
{"msg":"OK","username":"achenette","ts":"2018-11-26T17:50:17.305Z"}
{"msg":"","username":"achenette","ts":"2018-11-26T17:53:13.817Z","attachments":[{"type":"file","title":"SDK-table_corrected-Rust-changes_2018-11-26.png","title_link":"/file-upload/hyEXFohhwrEnCuh8c/SDK-table_corrected-Rust-changes_2018-11-26.png","image_url":"/file-upload/hyEXFohhwrEnCuh8c/SDK-table_corrected-Rust-changes_2018-11-26.png","image_type":"image/png","image_size":200279,"url":"/file-upload/hyEXFohhwrEnCuh8c/SDK-table_corrected-Rust-changes_2018-11-26.png","remote":false,"fileId":"hyEXFohhwrEnCuh8c","fileName":"SDK-table_corrected-Rust-changes_2018-11-26.png"}]}
{"msg":"@amundson why aren't the other 2 APIs stable? Are there planned changes? Seemed like there were already a lot of new TPs and the old fundamental TPs ported to rust.","username":"Dan","ts":"2018-11-26T18:00:27.182Z"}
{"msg":"needs a final review which hasn't been done yet. after we do that, we will increment the rust sdk version to 1.0.","username":"amundson","ts":"2018-11-26T18:01:44.768Z"}
{"msg":"don't expect any radical changes between 0.1.x and 1.0.x and the existing TPs can/should use 0.1.x crate until they explicitly support 1.0","username":"amundson","ts":"2018-11-26T18:05:16.079Z"}
{"msg":"for example, one discussion point on that will be whether we would like to purge the use of Box in parts of the API and take the approach Ursa has taken (strong opinions were stated against this, but its worth the discussion before we lock it down)","username":"amundson","ts":"2018-11-26T18:11:59.836Z"}
{"msg":"The updated SDK table is in PR 1953. It's not building because of a lint problem (not a doc issue), but it's available for review.\nhttps://github.com/hyperledger/sawtooth-core/pull/1953","username":"achenette","ts":"2018-11-28T16:01:48.002Z"}
{"msg":"^ The build has succeeded, thanks to @adamludvik's pylint fix. Thanks, Adam!","username":"achenette","ts":"2018-11-28T19:12:41.463Z"}
{"msg":"Calling @amundson or @TomBarnes or @pschwarz or @jsmitchell for a second review.","username":"achenette","ts":"2018-11-28T19:14:09.994Z"}
{"msg":"Thanks, @Dan and @jsmitchell for the quick reviews!","username":"achenette","ts":"2018-11-28T19:16:11.469Z"}
{"msg":":turtle:","username":"TomBarnes","ts":"2018-11-30T17:10:37.400Z"}
{"msg":"@mfford @amundson - do we have a calendar for sawtooth blogs yet? In addition to slotting Mic in, I'd like to reach out to others (e.g. BTP, T-mo, etc.). It would also probably be useful to provide to Jessica. If such a thing doesn't exist I'm happy to get one started","username":"kelly_","ts":"2018-12-05T23:46:35.710Z"}
{"msg":"yes, @mfford has a list","username":"amundson","ts":"2018-12-06T05:38:43.009Z"}
{"msg":"awesome thanks!","username":"kelly_","ts":"2018-12-06T17:12:36.343Z"}
{"msg":"Nice work everyone !! - https://www.hyperledger.org/blog/2018/12/06/announcing-hyperledger-sawtooth-1-1","username":"kelly_","ts":"2018-12-06T17:12:58.372Z"}
{"msg":"I'll be going into an internal webcast for the next couple hours but looks the links are right in the blog and tweet anouncement","username":"kelly_","ts":"2018-12-06T17:13:20.965Z"}
{"msg":"that's a very blurry image","username":"amundson","ts":"2018-12-06T17:52:12.179Z"}
{"msg":"release page - https://sawtooth.hyperledger.org/release/bumper/","username":"amundson","ts":"2018-12-06T17:53:07.748Z"}
{"msg":"the release page looks impressive! that's exciting!","username":"benoit.razet","ts":"2018-12-06T18:20:45.242Z"}
{"msg":"@mfford - would you mind sharing the list when you get a chance?","username":"kelly_","ts":"2018-12-06T18:56:59.520Z"}
{"msg":"the blog post/date list","username":"kelly_","ts":"2018-12-06T18:57:08.253Z"}
{"msg":"and/or just tell me what weeks are available and i'll try to slot some more in","username":"kelly_","ts":"2018-12-06T18:57:23.261Z"}
{"msg":"@kelly_ Will do","username":"mfford","ts":"2018-12-06T20:21:10.758Z"}
{"msg":"thanks @mfford - saw it come through","username":"kelly_","ts":"2018-12-06T22:35:01.470Z"}
{"msg":"Has joined the channel.","username":"MohitJuneja","ts":"2019-01-16T00:09:13.697Z","type":"uj"}
{"msg":"We would like to make it possible to request doing a release. This came up because Anne has some doc commits in the 1-1 branch that haven't been released yet, and its caused some frustration.","username":"amundson","ts":"2019-01-24T17:11:24.298Z"}
{"msg":"So, what we are planning to do is watch this channel on Tuesdays for requests for a release of a component. If a reasonable case has been made to do a release of that component, then we will do the release on Thursday. This lets the folks doing the release expect some level of potential work on Thursdays, and gives everyone the ability to request it.","username":"amundson","ts":"2019-01-24T17:14:09.686Z"}
{"msg":"This is, of course, for minor point releases. There remains much more governance overhead for X.Y releases.","username":"amundson","ts":"2019-01-24T17:14:52.230Z"}
{"msg":"Is there a requirement that the changes are already back-ported (merged into the correct branch) before making the request? For example how Anne's Doc updates are already in the 1-1 branch?  ","username":"agunde","ts":"2019-01-24T17:16:43.607Z"}
{"msg":"(I would assume so but clarifying)","username":"agunde","ts":"2019-01-24T17:17:00.120Z"}
{"msg":"Yes, that seems like a good requirement to me. And also, no breaking things between tuesday and thursday.","username":"amundson","ts":"2019-01-24T17:17:12.166Z"}
{"msg":"We should do this all pragmatically and not get caught up in the rules unless they matter. And adjust it if we learn this wasn't the best approach.","username":"amundson","ts":"2019-01-24T17:19:07.575Z"}
{"msg":"Also, this is always per-component and not \"release everything\", since only so much time will be available to do these things on Thursdays.","username":"amundson","ts":"2019-01-24T17:20:26.282Z"}
{"msg":":thumbsup:","username":"agunde","ts":"2019-01-24T17:22:19.468Z"}
{"msg":":thumbsup:  :thumbsup:  :thumbsup: ","username":"achenette","ts":"2019-01-24T17:38:48.805Z"}
{"msg":"Shall we discuss a release?","username":"pschwarz","ts":"2019-01-29T16:35:44.851Z"}
{"msg":"The following PR's have been included in the 1-1 branch and should be released:\nhttps://github.com/hyperledger/sawtooth-core/pull/1982\nhttps://github.com/hyperledger/sawtooth-core/pull/1984\nhttps://github.com/hyperledger/sawtooth-core/pull/1985\nhttps://github.com/hyperledger/sawtooth-core/pull/1986","username":"pschwarz","ts":"2019-01-29T18:37:22.339Z"}
{"msg":"The TL;DR of the above is several bug fixes related to event processing and the genesis block","username":"pschwarz","ts":"2019-01-29T18:38:03.387Z"}
{"msg":"The following documentation PRs have been included in the 1-1 branch and should be released:\n\nhttps://github.com/hyperledger/sawtooth-core/pull/1947\nhttps://github.com/hyperledger/sawtooth-core/pull/1960\nhttps://github.com/hyperledger/sawtooth-core/pull/1996\nhttps://github.com/hyperledger/sawtooth-core/pull/2005\nhttps://github.com/hyperledger/sawtooth-core/pull/2009\nhttps://github.com/hyperledger/sawtooth-core/pull/2011\n\nPlus a related PR that is required by the doc PRs:\nhttps://github.com/hyperledger/sawtooth-core/pull/2003\n\nSummary: These doc PRs contain consensus-related updates for the procedures in the App Dev Guide and Sys Admin Guide, an update to Rust maturity in the SDK table (App Dev Guide), and several corrections for errors and broken links. ","username":"achenette","ts":"2019-01-29T18:56:35.753Z"}
{"msg":"The following documentation PRs have been included in the 1-1 branch and should be released:\n\nhttps://github.com/hyperledger/sawtooth-core/pull/1947\nhttps://github.com/hyperledger/sawtooth-core/pull/1960\nhttps://github.com/hyperledger/sawtooth-core/pull/1996\nhttps://github.com/hyperledger/sawtooth-core/pull/2005\nhttps://github.com/hyperledger/sawtooth-core/pull/2009\nhttps://github.com/hyperledger/sawtooth-core/pull/2011\n\nPlus a related PR that is required by the doc PRs:\nhttps://github.com/hyperledger/sawtooth-core/pull/2003\n\nSummary: These doc PRs contain consensus-related updates for the procedures in the App Dev Guide and Sys Admin Guide, an update to Rust maturity in the SDK table (App Dev Guide), and several corrections for errors and broken links. ","username":"achenette","ts":"2019-01-29T18:56:35.753Z"}
{"msg":"@pschwarz That logger bug fix that is in master should be backported to 1-1.","username":"boydjohnson","ts":"2019-01-29T19:03:43.309Z"}
{"msg":"Should that be done for the next release? Andi and Shawn mentioned above that PRs should already be backported by Tuesday in order to be considered for release on Thursday.","username":"achenette","ts":"2019-01-29T19:33:54.942Z"}
{"msg":"Should that be done for the next release? Andi and Shawn mentioned above that PRs should already be backported before Tuesday in order to be considered for release on Thursday.","username":"achenette","ts":"2019-01-29T19:33:54.942Z"}
{"msg":"@boydjohnson let's get that backported on Friday, and it can get into next week's release","username":"pschwarz","ts":"2019-01-29T19:54:12.685Z"}
{"msg":"Only half the code correctly logs without this fix.","username":"boydjohnson","ts":"2019-01-29T19:55:12.387Z"}
{"msg":"But it would be good to have it tested in 1-1, in case that fix doesn't address all of 1-1's issues w.r.t. logging","username":"pschwarz","ts":"2019-01-29T19:57:19.721Z"}
{"msg":"It wasn't broken in master, so there could be another reason","username":"pschwarz","ts":"2019-01-29T19:59:03.428Z"}
{"msg":"yeah, that change fixed some segfault stuff in 1-1 right?","username":"amundson","ts":"2019-01-29T19:59:29.671Z"}
{"msg":"maybe \"fixed\" if it wasn't actually the cause","username":"amundson","ts":"2019-01-29T19:59:37.195Z"}
{"msg":"The original fix in 1-1 fixed some segfault stuff","username":"pschwarz","ts":"2019-01-29T20:00:26.457Z"}
{"msg":"The master fix addressed an observed issue where the code would panic.  I don't know if they are related, now that you describe it as a segfault issue. ","username":"pschwarz","ts":"2019-01-29T20:01:37.029Z"}
{"msg":"maybe it was panic. @boydjohnson do you recall?","username":"amundson","ts":"2019-01-29T20:02:03.110Z"}
{"msg":"So I think it needs some more time to be tested against the 1-1 codebase","username":"pschwarz","ts":"2019-01-29T20:02:04.450Z"}
{"msg":"That seems fine to me. We should err on the side of not introducing regressions.","username":"amundson","ts":"2019-01-29T20:03:06.126Z"}
{"msg":"I don't recall whether the 1-1 original fix was a panic or a segfault. It wasn't clean, whatever it was.","username":"boydjohnson","ts":"2019-01-29T20:04:04.016Z"}
{"msg":"Thinking back about it the second init of the logger caused a panic.","username":"boydjohnson","ts":"2019-01-29T20:04:39.175Z"}
{"msg":"now you can test how good your commit messages are :)","username":"amundson","ts":"2019-01-29T20:04:42.035Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/commit/81121bac2572fc90001b7dda8b74e88c3cf24ceb","username":"amundson","ts":"2019-01-29T20:05:59.474Z"}
{"msg":"It almost tells us :)","username":"amundson","ts":"2019-01-29T20:06:06.567Z"}
{"msg":"so, if its a panic it should be easy to test, but don't we expect the same result we got before?","username":"amundson","ts":"2019-01-29T20:06:57.996Z"}
{"msg":"Just a second. I'm going to look at @pschwarz fix to see if it is just a revert.","username":"boydjohnson","ts":"2019-01-29T20:08:20.555Z"}
{"msg":"https://github.com/hyperledger/sawtooth-core/commit/c2e5e2b69b41f798179ce8e630e19d7e5fe8392c This is the fix that we need, as well as the revert.","username":"boydjohnson","ts":"2019-01-29T20:09:28.786Z"}
{"msg":"Peter's message is more thorough than mine.","username":"boydjohnson","ts":"2019-01-29T20:10:02.069Z"}
{"msg":"It does explain why we won't get the same result","username":"pschwarz","ts":"2019-01-29T20:14:11.106Z"}
{"msg":"if it was panicking ","username":"pschwarz","ts":"2019-01-29T20:14:20.454Z"}
{"msg":"Which, guessing by Boyd's message, it probably was","username":"pschwarz","ts":"2019-01-29T20:14:46.755Z"}
{"msg":"@boydjohnson If it hasn't fixed it, was it a failure that appeared during the tests?","username":"pschwarz","ts":"2019-01-29T22:18:35.465Z"}
{"msg":"I was apparent in all integration tests that used the validator, since the validator would panic on startup.","username":"boydjohnson","ts":"2019-01-30T21:28:22.377Z"}
{"msg":"Ok.  Will create a backport PR for it, but it probably won't get in until next week","username":"pschwarz","ts":"2019-01-30T21:29:34.502Z"}
{"msg":"Ok.","username":"boydjohnson","ts":"2019-01-30T21:29:44.222Z"}
{"msg":"Hello folks! I am going through my check list for a release of sawtooth-core this afternoon and wanted to check in and make sure all pull requests we wish to have in are merged. I see one still out there https://github.com/hyperledger/sawtooth-core/pull/2013","username":"rberg2","ts":"2019-01-31T15:33:06.204Z"}
{"msg":"@rberg2 that one will go into the next release. ","username":"agunde","ts":"2019-01-31T15:35:10.536Z"}
{"msg":":thumbsup: ","username":"rberg2","ts":"2019-01-31T15:35:21.284Z"}
{"msg":"We'll be postpoining the release of the 1.1 branch until tomorrow.","username":"rbuysse","ts":"2019-01-31T21:14:05.553Z"}
{"msg":"We'll be postpoining the release of the 1.1 branch until next thursday, 2/7.","username":"rbuysse","ts":"2019-01-31T21:14:05.553Z"}
{"msg":"The reason for the postponement is build-related around linting errors.","username":"amundson","ts":"2019-02-01T17:32:37.622Z"}
{"msg":"The linting issues on the 1-1 branch have been resolved. We should be able to do a release this thursday (2/7/2019)","username":"pschwarz","ts":"2019-02-05T22:48:28.792Z"}
{"msg":"@amundson @rberg2 @rbuysse ","username":"pschwarz","ts":"2019-02-05T22:48:53.620Z"}
{"msg":"@amundson @rberg2 @rbuysse :point_up: ","username":"pschwarz","ts":"2019-02-05T22:48:53.620Z"}
{"msg":"This was resolved with the merging of https://github.com/hyperledger/sawtooth-core/pull/2015","username":"pschwarz","ts":"2019-02-05T22:50:41.858Z"}
{"msg":"Has joined the channel.","username":"Gandalf","ts":"2019-02-06T18:19:51.321Z","type":"uj"}
{"msg":"@pschwarz Will the logging fix you made to master be back ported to 1-1?","username":"boydjohnson","ts":"2019-02-07T16:28:15.048Z"}
{"msg":"No, because the build was busted, so it will have to go into the next one still","username":"pschwarz","ts":"2019-02-07T16:30:02.183Z"}
{"msg":"I.e. it couldn't be tested","username":"pschwarz","ts":"2019-02-07T16:30:14.814Z"}
{"msg":"I'll merge it after the release and we can test it a bit more thoroughly ","username":"pschwarz","ts":"2019-02-07T16:31:09.355Z"}
{"msg":"looks like that logging PR mentioned above got merged. we should do a release to get that published. ","username":"rbuysse","ts":"2019-02-12T17:29:29.144Z"}
{"msg":"Has joined the channel.","username":"colincmcc","ts":"2019-02-12T22:39:00.535Z","type":"uj"}
{"msg":"Yes, we should","username":"pschwarz","ts":"2019-02-13T17:07:35.088Z"}
{"msg":"(Probably should have said that yesterday - but we talked offline)","username":"pschwarz","ts":"2019-02-13T17:07:51.612Z"}
{"msg":"to be clear, we are talking about doing a 1.1.x release of sawtooth-core on friday?","username":"amundson","ts":"2019-02-13T18:58:08.209Z"}
{"msg":"nope, we're gonna shoot for tomorrow.","username":"rbuysse","ts":"2019-02-13T22:22:50.575Z"}
{"msg":"right, Thursday, that's what I meant :)","username":"amundson","ts":"2019-02-13T23:00:27.619Z"}
{"msg":"Greetings! I am writing to inform you that I have begun the release process for sawtooth-core v1.1.4","username":"rberg2","ts":"2019-02-14T17:12:19.632Z"}
{"msg":"I don't think it was mentioned here, but @rbuysse published a 0.2.0 of the Rust SDK","username":"amundson","ts":"2019-02-14T17:18:46.202Z"}
{"msg":"Hello folks! I am wrapping up the sawtooth-core 1.1.4 release. deb packages. docker images, and the python-sdk are all done. all that is left is to publish the documentation and this should be completed within the hour.","username":"rberg2","ts":"2019-02-14T21:02:29.328Z"}
{"msg":"now is within the hour so I am not a liar :)","username":"rberg2","ts":"2019-02-14T21:03:23.416Z"}
{"msg":"Is there a changelog for the 0.2.0 version of the Rust SDK?","username":"colincmcc","ts":"2019-02-15T00:34:23.686Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=FjKrr9QNeQtHcMBG9) @colincmcc No, I have not seen one. See https://github.com/hyperledger/sawtooth-sdk-rust/commits/master","username":"danintel","ts":"2019-02-15T16:33:36.295Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=FjKrr9QNeQtHcMBG9","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=FjKrr9QNeQtHcMBG9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=FjKrr9QNeQtHcMBG9) @colincmcc See https://lists.hyperledger.org/g/sawtooth/message/555 ","username":"danintel","ts":"2019-02-15T16:33:36.295Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=FjKrr9QNeQtHcMBG9","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=FjKrr9QNeQtHcMBG9","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@colincmcc I'll have something for you in just a sec!","username":"rbuysse","ts":"2019-02-15T17:27:25.013Z"}
{"msg":"Hyperledger Sawtooth Rust SDK release 0.2.0 is now available.\n\nThe release is available on creates at https://crates.io/crates/sawtooth-sdk/ or via the git repository on the 0-2 branch at https://github.com/hyperledger/sawtooth-sdk-rust/tree/0-2.\n\nNew and changed features in Rust SDK 0.2.0 (since 0.1.0):\n\nNon-breaking changes:\nDerive PartialEq, Eq, and Hash traits for PeerInfo and Block. This enables comparison and hashing of PeerInfo and Blocks so they can be used in HashSets and HashMaps\nCorrected response to ping requests from the validator.\n","username":"rbuysse","ts":"2019-02-15T17:31:53.100Z"}
{"msg":"Hyperledger Sawtooth core release 1.1.4 is now available (bug fixes only):\nhttps://lists.hyperledger.org/g/sawtooth/message/554","username":"danintel","ts":"2019-02-15T18:36:30.508Z"}
{"msg":"@danintel @rbuysse  Thanks!","username":"colincmcc","ts":"2019-02-16T16:01:20.502Z"}
{"msg":"[?]: We are planning to have next dot release of Raft consensus. So far we are using nightly (bionic) branch of sawtooth-core to test Raft. So, we want to ask if there is a tagged bionic branch of sawtooth-core nightly which we can use now and perform Raft release activities.","username":"pankajgoyal","ts":"2019-02-18T06:47:45.086Z"}
{"msg":"Has joined the channel.","username":"manojgop","ts":"2019-02-18T09:34:00.080Z","type":"uj"}
{"msg":"@pankajgoyal there are no 1.2.x core releases yet. the intent would be that poet, pbft, and raft all have to support both 1.1 and master. so you should to test against 1.1 as well.","username":"amundson","ts":"2019-02-18T14:53:24.205Z"}
{"msg":"@amundson agreed. The question was whether there is a branch for bionic we can peg our release activities to. The master is a moving target. Is it OK to tag the master?","username":"amolk","ts":"2019-02-19T09:27:15.302Z"}
{"msg":"@amolk my impression is that poet+core master has issues passing liveness tests. I don't think we would want to do a release of core while that remains the case (tag == release).","username":"amundson","ts":"2019-02-19T14:25:11.350Z"}
{"msg":"@amundson Is the release of core dependent/blocked on sawtooth-poet ? Can we have a sawtooth-core release for bionic which will work with PBFT and RAFT ?","username":"manojgop","ts":"2019-02-20T06:07:23.606Z"}
{"msg":"@amundson Could you please share more info on what's the issue w/ PoET? AFAIK it hasn't changed in a while. The last meaningful changes were in December, before the 1.1 release.","username":"amolk","ts":"2019-02-20T10:02:54.578Z"}
{"msg":"@amolk I don't think root cause is known yet, but its an interaction between PoET and core master. It could be a bug in master.","username":"amundson","ts":"2019-02-20T14:39:37.011Z"}
{"msg":"It is informative though if your RAFT testing is against core master and it is stable.","username":"amundson","ts":"2019-02-20T14:40:18.886Z"}
{"msg":"@ltseeley @rbuysse @pschwarz do you guys have any more commentary on this that would help describe the issue?","username":"amundson","ts":"2019-02-20T14:41:07.194Z"}
{"msg":"From what I've been able to tell (and @pschwarz may be able to clarify some of the finer points), it seems that the issue is caused by changes to the way the validator manages blocks. There are certain scenarios that occur with PoET that the validator didn't have a problem with before, but now it takes exception to. We aren't totally sure yet if it's the validator that's incorrect or PoET (or quite possibly a bit of both).","username":"ltseeley","ts":"2019-02-20T15:10:43.127Z"}
{"msg":"Specifically, it seems like an issue with the fork resolution and how the validator keeps track of references to blocks. That's why we're seeing issues with PoET and not the non-forking algorithms Raft and PBFT.","username":"ltseeley","ts":"2019-02-20T15:12:51.045Z"}
{"msg":"Has joined the channel.","username":"HarshaIntel","ts":"2019-02-21T09:15:59.554Z","type":"uj"}
{"msg":"How to reproduce it and see what's happening? Will running PoET for some duration get us to the issue point?","username":"arsulegai","ts":"2019-02-24T05:09:56.646Z"}
{"msg":"@ltseeley do you have any plans to fix the PoET issue? It seems like a significant change to the validator behavior.","username":"amolk","ts":"2019-02-24T09:38:02.364Z"}
{"msg":"Has joined the channel.","username":"satelander","ts":"2019-02-26T18:41:47.599Z","type":"uj"}
{"msg":"@rbuysse @rberg2 @pankajgoyal Is sawtooth-raft latest debian available from repository?","username":"arsulegai","ts":"2019-02-27T08:11:21.461Z"}
{"msg":"@rbuysse @rberg2 @pankajgoyal Is sawtooth-raft latest docker image available from dockerhub?","username":"arsulegai","ts":"2019-02-27T08:11:21.461Z"}
{"msg":"https://hub.docker.com/r/hyperledger/sawtooth-raft-engine","username":"rbuysse","ts":"2019-02-27T15:22:41.184Z"}
{"msg":"we're not currently doing nightly images for that, but it's planned","username":"rbuysse","ts":"2019-02-27T15:22:57.449Z"}
{"msg":"Ok","username":"arsulegai","ts":"2019-02-27T15:38:46.007Z"}
{"msg":"@amundson @rberg2 We have been testing sawtooth-raft against sawtooth-core master branch (hash: 0cf2e8c0cd908e68cf1453c8160468736a1323aa). Can a tag be placed at this hash of master branch which will be the reference of sawtooth-core for raft release?","username":"pankajgoyal","ts":"2019-03-11T17:45:39.029Z"}
{"msg":"@pankajgoyal the consensus engines shouldn't depend on a specific version of the core repo right? if you want to test against a stable version, why not use 1.1.x?","username":"amundson","ts":"2019-03-11T21:42:41.163Z"}
{"msg":"a release of core right now needs more discussion, because PoET tests fail against it","username":"amundson","ts":"2019-03-11T21:44:07.412Z"}
{"msg":"I think we either make a decision to fully deprecate PoET (which seems unlikely) or we hold the release until everything is working together again","username":"amundson","ts":"2019-03-11T21:44:55.617Z"}
{"msg":"@amundson There is an important patch that is needed for raft. This is PR from seeley (https://github.com/hyperledger/sawtooth-core/pull/2019). And this patch is on top of sawtooth-core master (0cf2e8c0cd908e68cf1453c8160468736a1323aa). And we have been testing raft by applying seeley's patch on top of this master hash. So, we want a TAG on this master hash without worrying about any further changes that keep coming into master branch. And yes, we are testing raft against 1.1.x also.","username":"pankajgoyal","ts":"2019-03-12T04:12:51.497Z"}
{"msg":"@amundson This patch disables the gossip n/w and it s proven to work for long hours (LR runs) without backpressure, hence this patch is needed to be taken on top of teh master shared above.","username":"HarshaIntel","ts":"2019-03-12T04:17:28.158Z"}
{"msg":"@HarshaIntel back pressure is good. the only way to avoid back pressure is to have a really low workload, which means the test isn’t stressing the network. glad this patch helps. curious if you also get stable results if you load the network with a workload just above what it can handle.","username":"amundson","ts":"2019-03-12T04:46:19.353Z"}
{"msg":"@pankajgoyal are you saying raft is not stable against 1.1? I believe pbft is, and I would expect raft could be as well.","username":"amundson","ts":"2019-03-12T04:48:38.284Z"}
{"msg":"It is stable on 1.1 but performs better with the patch. Would request you to merge it and backport to 1.1","username":"amolk","ts":"2019-03-12T04:51:22.773Z"}
{"msg":"It seems possible that this patch helps raft because it makes it less likely to trigger performance/timing bugs, and for solely functional reasons. thoughts?","username":"amundson","ts":"2019-03-12T04:52:25.979Z"}
{"msg":"in terms of tags, we only do them for releases (our versioning code would be potentially sensitive to arbitrary tags), which is why I am interpreting your tag request as a request for a release. And like I said before, releasing while poet tests are failing seems like the wrong path forward.","username":"amundson","ts":"2019-03-12T04:55:26.366Z"}
{"msg":"We just need a fixed point of reference to run our final Raft validation and point anyone interested in running Raft on Bionic. If a tag isn't the right way to go about it, we'll be happy to have some other point of reference. BTW, there's a 1.2 tag that seems to have been created back in September :)","username":"amolk","ts":"2019-03-12T04:59:41.943Z"}
{"msg":"And you're right about the patch. It makes the processing of consensus messages a bit more efficient and reduces some of the timing dependent issues we see under heavy loads. The right long term solution would be to eliminate the GIL related bottlenecks on queue processing.","username":"amolk","ts":"2019-03-12T05:04:07.167Z"}
{"msg":"@amolk that bottleneck comment is inconsistent with all the performance data I have seen in the past (which suggested a primary bottleneck in the predecessor tree). if you have data that shows something different, that would be good info for #sawtooth-core-dev. the use of python is going away, and so thus will the GIL. the transact library should address both the GIL and predecessor tree performance when we get to using it later in the year.","username":"amundson","ts":"2019-03-12T05:14:43.082Z"}
{"msg":"you should only test under heavy loads if thats what exposes the raft bugs. assuming you want to get to a stable raft release.","username":"amundson","ts":"2019-03-12T05:17:11.865Z"}
{"msg":"@amolk do you mean literally only raft on bionic as in a docker container, or do you mean sawtooth?","username":"amundson","ts":"2019-03-12T05:18:54.633Z"}
{"msg":"the 1.2.0 tag exists at the branch point; it is an artifact of the branching and versioning process.","username":"amundson","ts":"2019-03-12T05:24:07.527Z"}
{"msg":"backporting isn’t going to help w/bionic","username":"amundson","ts":"2019-03-12T05:24:47.779Z"}
{"msg":"@amolk I'd like to start considering a feature cut-off date for 1.2 so we can start to do testing. Do you have a sense for how long the remaining features desired for 1.2 that have RFCs in-progress for will take to implement?","username":"amundson","ts":"2019-03-14T18:20:51.411Z"}
{"msg":"@amundson Raft is mostly done. We'll restart work on PoET 2 once Raft is done and aim to be ready later in Q2.","username":"amolk","ts":"2019-03-18T09:23:35.927Z"}
{"msg":"regarding your earlier comment, backporting that PR would help with Raft on 1.1. That's separate from the Bionic requirement.","username":"amolk","ts":"2019-03-18T09:25:48.792Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=xEY5HFBizlRnOVbD3s) @amundson Could you give some more details on \"transact library\" ?","username":"manojgop","ts":"2019-03-18T09:40:50.281Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=xEY5HFBizlRnOVbD3s","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=xEY5HFBizlRnOVbD3s","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@manojgop basically, a rust re-implementation of the tep within sawtooth (schedulers, context management, execution, and state)","username":"amundson","ts":"2019-03-18T14:06:08.990Z"}
{"msg":"Thanks @amundson . Could you please clarify what is predecessor tree and what is the bottleneck there ?","username":"manojgop","ts":"2019-03-18T15:43:59.990Z"}
{"msg":"@manojgop the predecessor tree is a component of the parallel scheduler which helps determine implicit dependencies between transactions. the bottleneck is CPU.","username":"amundson","ts":"2019-03-18T16:00:16.361Z"}
{"msg":"@amundson So if I understand correctly, Rust implementation will make sawtooth core multi threaded and performance can improve on multi core CPUs.  That's very encouraging if we can make Sawtooth performance (in terms of TPS) competitive with other ledgers for various workloads","username":"manojgop","ts":"2019-03-18T16:09:08.500Z"}
{"msg":"@manojgop we are already competitive in apples-to-apples comparisons, AFAIK. but yeah, it is going to be a substantial performance increase.","username":"amundson","ts":"2019-03-18T16:24:17.939Z"}
{"msg":"I'd like to propose a new 1.1 release to incorporate the latest bugfixes and updates. The following PRs have been merged since the last release:\nhttps://github.com/hyperledger/sawtooth-core/pull/2034 (Python lint update)\nhttps://github.com/hyperledger/sawtooth-core/pull/2036 (chain controller bug fix)","username":"ltseeley","ts":"2019-04-02T15:46:47.790Z"}
{"msg":"I'd like to propose a new 1.1 release to incorporate the latest bugfixes and updates. The following PRs have been merged since the last release:\nhttps://github.com/hyperledger/sawtooth-core/pull/2034 (Python lint update)\nhttps://github.com/hyperledger/sawtooth-core/pull/2036 (chain controller bug fix)","username":"ltseeley","ts":"2019-04-02T15:46:47.790Z"}
{"msg":"I'd like to propose a new 1.1 release to incorporate the latest bugfixes and updates. The following PRs have been merged since the last release:\nhttps://github.com/hyperledger/sawtooth-core/pull/2034 (Python lint update)\nhttps://github.com/hyperledger/sawtooth-core/pull/2036 (chain controller bug fix)\nhttps://github.com/hyperledger/sawtooth-core/pull/2038 (consensus proxy bug fix)\nhttps://github.com/hyperledger/sawtooth-core/pull/2039 (docs update)\nhttps://github.com/hyperledger/sawtooth-core/pull/2048 (gossip/consensus messaging bug fix)\nhttps://github.com/hyperledger/sawtooth-core/pull/2052 (grafana docker image fix)","username":"ltseeley","ts":"2019-04-02T15:48:49.326Z"}
{"msg":"Sounds good to me","username":"pschwarz","ts":"2019-04-02T17:53:22.517Z"}
{"msg":"seems prudent","username":"rbuysse","ts":"2019-04-02T23:15:11.080Z"}
{"msg":"Has joined the channel.","username":"donalddw","ts":"2019-04-15T15:42:30.623Z","type":"uj"}
{"msg":"Want to reiterate my request for a 1.1 release. Two more fixes have been backported:\nhttps://github.com/hyperledger/sawtooth-core/pull/2058 (fix documentation building)\nhttps://github.com/hyperledger/sawtooth-core/pull/2068 (fix bug with transaction receipts)","username":"ltseeley","ts":"2019-04-15T15:44:49.508Z"}
{"msg":"Has joined the channel.","username":"sah","ts":"2019-04-16T04:19:53.358Z","type":"uj"}
{"msg":"@amundson I don't see any unmerged backport PRs. Is there anything blocking from your perspective?","username":"Dan","ts":"2019-04-16T14:10:38.275Z"}
{"msg":"@Dan we changed the procedure slighly in your absence","username":"amundson","ts":"2019-04-16T14:11:57.207Z"}
{"msg":"the new procedure is basically: anyone can requests a point release of a component on tuesday, and if there is no objection, then it will be done on thursday","username":"amundson","ts":"2019-04-16T14:12:22.826Z"}
{"msg":"I was waiting for the note that \"we fixed the glitch\"","username":"Dan","ts":"2019-04-16T14:12:24.226Z"}
{"msg":"@ltseeley is specifically requesting a sawtooth-core release. other components won't be released.","username":"amundson","ts":"2019-04-16T14:14:47.365Z"}
{"msg":"(unless requested)","username":"amundson","ts":"2019-04-16T14:14:57.200Z"}
{"msg":"cool","username":"Dan","ts":"2019-04-16T14:15:45.997Z"}
{"msg":"also, I don't have any objection. I think there are some critical fixes for a few users in these backports.","username":"amundson","ts":"2019-04-16T14:19:32.607Z"}
{"msg":"how do we communicate that? are we hitting the list with a bug fix release note?","username":"Dan","ts":"2019-04-16T14:21:14.557Z"}
{"msg":"We send out release notes to the mailing list","username":"pschwarz","ts":"2019-04-16T16:57:13.840Z"}
{"msg":"Hello all, I will be releasing sawtooth-core 1.1.5 shortly.","username":"rberg2","ts":"2019-04-18T16:26:12.257Z"}
{"msg":"FYI: deb packages, docker images and the python SDK V1.1.5 has been released. still up to do Documentation and release notes.","username":"rberg2","ts":"2019-04-18T17:14:32.886Z"}
{"msg":"@eugene-babichenko @donalddw I believe you both were waiting for the v1.1.5 release for fixes to bugs you were experiencing.","username":"ltseeley","ts":"2019-04-18T17:21:14.973Z"}
{"msg":"Has joined the channel.","username":"eugene-babichenko","ts":"2019-04-18T17:21:15.394Z","type":"uj"}
{"msg":"Hyperledger Sawtooth Core release 1.1.5 is now available.\n\nDocumentation is available at https://sawtooth.hyperledger.org/docs/core/releases/1.1.5/\n\nNew and changed features in Hyperledger Sawtooth Core 1.1.5 (since 1.1.4):\n\nNon-breaking changes:\n\n- Fixed a bug in fork resolution where the resulting chain was empty\n- Fixed a consensus registration bug caused by peering delays\n- Updated documentation of consensus settings\n- Fixed a gossip bug that could prevented consensus message delivery\n- Updated broken Grafana docker image\n- Fixed doc building error caused by unicode\n- Corrected transaction receipt data field","username":"rbuysse","ts":"2019-04-18T20:10:14.558Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=iAmWavcPDam9x8mQt) @ltseeley That helped. Thanks the team for that!","username":"eugene-babichenko","ts":"2019-04-19T14:44:59.791Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=iAmWavcPDam9x8mQt","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=iAmWavcPDam9x8mQt","remote":true,"fileId":null,"fileName":null}]}
{"msg":"thanks @ltseeley and team for this release, will try it out as soon as possible!","username":"donalddw","ts":"2019-04-21T09:38:30.016Z"}
{"msg":"@amundson @ltseeley Can we tag sawtooth-raft based on latest code in master branch and release it independently from Sawtooth 1.2. As I understand as part of sawtooth-raft release , the Docker and Debian image will also be released and available to download. Let me know if there are any concerns","username":"manojgop","ts":"2019-04-22T15:29:30.040Z"}
{"msg":"@Dan @amolk :point_up_2:","username":"manojgop","ts":"2019-04-22T15:30:03.326Z"}
{"msg":"Yes that's fine. I support a new point release of this component.","username":"Dan","ts":"2019-04-22T15:33:31.370Z"}
{"msg":"Before dot release of Raft, the PR https://github.com/hyperledger/sawtooth-raft/pull/58 would be good.","username":"arsulegai","ts":"2019-04-22T15:34:53.915Z"}
{"msg":"@arsulegai I just merged PR 58 ^","username":"ltseeley","ts":"2019-04-22T15:52:02.117Z"}
{"msg":"Thanks, we request for dot release / tag for sawtooth-raft","username":"arsulegai","ts":"2019-04-22T16:01:57.024Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=bRDjNB9G76cNXTdLG) @rbuysse A little question about this release. When a node receive a new consensus message is that message broadcasted to its peers?","username":"eugene-babichenko","ts":"2019-04-23T16:35:47.537Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=bRDjNB9G76cNXTdLG","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=bRDjNB9G76cNXTdLG","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@eugene-babichenko no, consensus messages are not gossiped currently","username":"rbuysse","ts":"2019-04-23T16:39:48.041Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=BZEehqtTueKXqB2LK) @rbuysse So there is no changes. Just wanted to make sure. Thanks!","username":"eugene-babichenko","ts":"2019-04-23T16:58:04.020Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=BZEehqtTueKXqB2LK","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=BZEehqtTueKXqB2LK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Per question at Monday's contributor meeting, stake holders interested in delete by prefix do *not* view that as a blocking item for sawtooth core 1.2 release.","username":"Dan","ts":"2019-04-24T14:08:04.082Z"}
{"msg":"@Dan ah, great, thanks! I assume they are still interest in it post-1.2 though?","username":"amundson","ts":"2019-04-24T15:07:30.469Z"}
{"msg":"Yeah. I think they have a workaround today so they wouldn't hold up the release for it.","username":"Dan","ts":"2019-04-24T15:07:56.729Z"}
{"msg":"I wonder if we actually have any blocking features then.","username":"amundson","ts":"2019-04-24T15:47:21.820Z"}
{"msg":"For those that could not attend, here is the link to the notes taken from the 4/22 Hyperledger Sawtooth Contributor Meeting: https://wiki.hyperledger.org/pages/viewpage.action?pageId=9110236","username":"mfford","ts":"2019-04-24T16:03:58.976Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=evgbrvqfiA5zJRejC) @amundson Please consider raw transaction header a part of 1.2","username":"arsulegai","ts":"2019-04-25T02:25:39.844Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=evgbrvqfiA5zJRejC","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=evgbrvqfiA5zJRejC","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Greetings! sawtooth-raft 0.1.2 has been released!","username":"rberg2","ts":"2019-04-25T20:26:13.016Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-release?msg=45Sfs8GWG7rmqGvua) @rberg2 Does that mean the on-chain setting `sawtooth.consensus.algorithm.version` has to be updated before (or maybe after) upgrading to RAFT 0.1.2 from 0.1?","username":"danintel","ts":"2019-04-26T16:14:43.777Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-release?msg=45Sfs8GWG7rmqGvua","url":"https://chat.hyperledger.org/channel/sawtooth-release?msg=45Sfs8GWG7rmqGvua","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@danintel no, it shouldn't. The version for that setting should still be `0.1`","username":"ltseeley","ts":"2019-04-26T16:16:42.513Z"}
{"msg":"The convention we've used is to only include the major.minor version, not the .patch number. But whatever the engine reports its version as, that's what the setting has to match. Here's where Raft's is set: https://github.com/hyperledger/sawtooth-raft/blob/master/src/engine.rs#L110","username":"ltseeley","ts":"2019-04-26T16:18:55.723Z"}
{"msg":"FYI - @wkatsak mentioned adding ipv6 support prior to the 1.2 release","username":"amundson","ts":"2019-04-26T17:08:19.050Z"}
{"msg":"Has joined the channel.","username":"wkatsak","ts":"2019-04-26T17:08:20.083Z","type":"uj"}
{"msg":"@ltseeley Thanks. The Raft documentation stays to use version `0.0.1`. Or It used to say that--now it says to use the current version but now that is (unhelpfully) removed. It would be nice, at least, to have a link to the source code or some obscure command line syntax so the user can somehow discover what version to use. :slight_smile:","username":"danintel","ts":"2019-04-26T17:54:49.353Z"}
{"msg":"specifically, the sawtooth.consensus.algorithm.version setting is the _protocol_ level and has nothing to do really with software version conceptually","username":"amundson","ts":"2019-04-26T17:55:08.465Z"}
{"msg":"a critical bug fix might be conceptually a protocol version change in that you don't want people attaching broken nodes to the network even if the wireline is the same.","username":"Dan","ts":"2019-04-26T19:28:56.481Z"}
{"msg":"That sounds like it would be effectively a behaviour change, so sounds reasonable to bump the version presented to the validator, via settings ","username":"pschwarz","ts":"2019-04-29T14:30:00.289Z"}
{"msg":"Has joined the channel.","username":"rllalloshi","ts":"2019-04-30T11:58:23.746Z","type":"uj"}
{"msg":"Hello, as @amundson mentioned, I (and Taekion) have a patchset for 1.1 that enables running Sawtooth on IPv6 networks.  We are in the process of \"smoothing out\" the patches and validating it on master.","username":"wkatsak","ts":"2019-04-30T12:02:18.460Z"}
{"msg":"What is the timeframe for getting it into 1.2, and what type of testing would you like to see? It essentially consists of a zmq flag, and other small changes (rest api, etc) to correct assumptions that only work for ipv4 addresses.","username":"wkatsak","ts":"2019-04-30T12:03:16.999Z"}
{"msg":"We have a testnet that ONLY has ipv6 connectivity (but has local ipv4 stack for localhost, etc), so this was the motivation.","username":"wkatsak","ts":"2019-04-30T12:03:49.997Z"}
{"msg":"@wkatsak this week would be good","username":"amundson","ts":"2019-04-30T14:32:57.876Z"}
{"msg":"Hello, I am trying to make sure the tests run with my patches in place, as per the contributing guide.","username":"wkatsak","ts":"2019-05-02T13:16:26.840Z"}
{"msg":"and I am getting a failure: \"ERROR:__main__:Test UNIT-SIGNING failed\", even without my patches (even on tag v1.1.5, actually)","username":"wkatsak","ts":"2019-05-02T13:16:56.981Z"}
{"msg":"Am I doing something stupid?","username":"wkatsak","ts":"2019-05-02T13:17:01.529Z"}
{"msg":"@wkatsak can you see any errors or other reasons for that failure? usually there is an error printed a page or two up in the scroll back.","username":"rberg2","ts":"2019-05-02T14:06:44.676Z"}
{"msg":"```\nINFO:__main__:Getting result with: ['docker', 'inspect', '-f', '{{.State.ExitCode}}', 'latest_unit-signing_1']\nError: No such object: latest_unit-signing_1\nERROR:__main__:Failed to retrieve exit status of test.\nERROR:__main__:Command '['docker', 'inspect', '-f', '{{.State.ExitCode}}', 'latest_unit-signing_1']' returned non-zero exit status 1.\nTraceback (most recent call last):\n  File \"/local/sawtooth-core/bin/run_docker_test\", line \n``` ","username":"wkatsak","ts":"2019-05-02T14:07:36.615Z"}
{"msg":"thanks! I am going to see if I can replicate that here","username":"rberg2","ts":"2019-05-02T14:10:06.594Z"}
{"msg":"@wkatsak Would you mind creating a JIRA ticket for your patchset for enablement of Sawtooth on IPV6? We are tracking items intended for version 1.2 together on Jira for Sawtooth. In addition to the instructions for \"Tracking Issues\" in the community doc, also create it as issue type= improvement, indicate Sawtooth Version 1.2 in the \"Fix Version/s\" field and assign it to yourself. If you need help, you can DM me directly. Here is the link: https://sawtooth.hyperledger.org/docs/core/releases/latest/community/issue_tracking.html","username":"mfford","ts":"2019-05-02T14:13:41.339Z"}
{"msg":"@mfford Ok, I've done it.","username":"wkatsak","ts":"2019-05-02T14:25:07.098Z"}
{"msg":"Looks good! Thanks @wkatsak ","username":"mfford","ts":"2019-05-02T14:39:50.088Z"}
{"msg":"@mfford I noticed the test build on github failed, but it seems its a permissions issue (didn't like my username).","username":"wkatsak","ts":"2019-05-02T18:19:08.704Z"}
{"msg":"that's an unrelated issue.","username":"rberg2","ts":"2019-05-02T19:01:27.865Z"}
{"msg":"I'd like to request a new release for PBFT to include the latest improvements and bugfixes","username":"ltseeley","ts":"2019-05-07T16:15:50.948Z"}
{"msg":"I'd like to request a new release for PBFT to include the latest improvements and bug fixes","username":"ltseeley","ts":"2019-05-07T16:15:50.948Z"}
{"msg":"PBFT release is complete! version 0.1.3 has been published to the bumper apt repo and dockerhub","username":"rbuysse","ts":"2019-05-09T21:21:04.642Z"}
{"msg":"Intel has an internally hosted regression test environment. They would like to help validate the 1.2 candidate (extended regression tests, LR testing of all 3 consensus protocols). Probably the minimal coordination is just awareness of the 1.2 branch point. @amolk on point for that.","username":"Dan","ts":"2019-05-15T15:28:15.198Z"}
{"msg":"@amundson remind me the of the code name nomenclature.. are code names for major releases or minor releases?","username":"Dan","ts":"2019-05-15T15:36:48.508Z"}
{"msg":"@Dan code names are for project-level releases. Sawtooh 1.0, 1.1, 1.2, etc.","username":"amundson","ts":"2019-05-15T16:14:10.171Z"}
{"msg":"So in terms of semver that would be minor versions (and implicitly major versions).","username":"Dan","ts":"2019-05-15T16:16:38.979Z"}
{"msg":"two separate things - version numbers on components (very semver, have minor versions, etc.) and project-level releases which are essentially sawtooth distributions","username":"amundson","ts":"2019-05-15T16:20:13.394Z"}
{"msg":"two separate things - version numbers on components (very semver, have X.Y.Z versions, etc.) and project-level releases which are essentially sawtooth distributions","username":"amundson","ts":"2019-05-15T16:20:13.394Z"}
{"msg":"So a tangible aspect of that distinction is that if I were to pull apt packages for any sawtooth component, I would pull from a unified repo for that distribution e.g. ubuntu/multiball/\nWhich itself could include python3-sawtooth-poet-cli 1.45.2 and python3-sawtooth-intkey 27.1.2","username":"Dan","ts":"2019-05-15T16:50:00.667Z"}
{"msg":"yes","username":"amundson","ts":"2019-05-15T17:55:09.716Z"}
{"msg":"in fact, many of the components will be the same version between bumper and chime","username":"amundson","ts":"2019-05-15T17:56:10.353Z"}
{"msg":"@TomBarnes ^ regarding versioning and \"sawtooth 1.2\"","username":"Dan","ts":"2019-05-15T18:26:15.759Z"}
{"msg":"Current plan is to create a sawtooth-core 1-2 branch next week 6/5","username":"amundson","ts":"2019-05-29T18:09:07.290Z"}
{"msg":"we've just released a new version of the sabre-sdk! https://crates.io/crates/sabre-sdk/0.3.0","username":"rbuysse","ts":"2019-06-03T21:23:32.428Z"}
{"msg":"Please let us know when the 1.2 branch is created. We'll get doing regression testing and run LR tests on it.","username":"amolk","ts":"2019-06-06T05:48:31.752Z"}
{"msg":"I believe the branch is created now. A note to this channel would have been good.\nhttps://github.com/hyperledger/sawtooth-core/tree/1-2","username":"Dan","ts":"2019-06-06T13:12:49.213Z"}
{"msg":"We are going through the tasks on the board in JIRA - @rbuysse @rberg2 maybe you can drop notes here as the more important items complete","username":"amundson","ts":"2019-06-06T13:17:20.290Z"}
{"msg":"We created the `chime` nightly and stable apt repositories yesterday. Currently those repos are only populated with the Sawtooth dependencies ","username":"rberg2","ts":"2019-06-06T14:14:20.310Z"}
{"msg":"@amolk I've not been watching Jira as frequently as I used to. I need to get back on that. Good for others to be engaged there too.","username":"Dan","ts":"2019-06-06T14:42:32.871Z"}
{"msg":"Agree","username":"amolk","ts":"2019-06-06T14:42:54.021Z"}
{"msg":"@amolk do you have any LR testing plans or thoughts on communicating results/analysis to share?","username":"Dan","ts":"2019-06-10T15:58:00.140Z"}
{"msg":"Regression tests have been run on PBFT. LR1 tests have started on PoET, PBFT and Raft. LR7 tests will start later this week or early next. We will provide regular updates on the results here on this channel.","username":"amolk","ts":"2019-06-12T07:00:59.098Z"}
{"msg":"@amolk great you are testing too","username":"amundson","ts":"2019-06-12T15:45:31.307Z"}
{"msg":"what specifically do you mean by \"Regression tests have been run on PBFT.\"?","username":"amundson","ts":"2019-06-12T15:45:51.724Z"}
{"msg":"In general, PBFT is very well-tested at this point and passes LR7s. We maybe see a slow increase in memory usage over time, but we think it is more pronounced in 1.2 because we Sawtooth+PBFT is faster.","username":"amundson","ts":"2019-06-12T15:47:38.372Z"}
{"msg":"AFAIK, Raft may not pass the same level of testing under load, but it does not matter for the upcoming release of Sawtooth because we aren't planning on making any claims about Raft stability.","username":"amundson","ts":"2019-06-12T15:48:46.554Z"}
{"msg":"PoET on the other hand... it needs more LR7 testing for sure, and work to fix some apparent issues with poet-engine. Nodes drop out of the network.","username":"amundson","ts":"2019-06-12T15:50:26.483Z"}
{"msg":"@amundson We have a test suite that's meant to exercise Sawtooth via the REST interface. By and large most test cases are applicable across the board and not dependent on the consensus mechanism. The outcome of some of the tests depends on the consensus being used (e.g. a RAFT follower may keep an invalid transaction in queue and not return a transaction failure unlike a PoET validator). We've used this test suite for the 1.1 release, for Raft and now for PBFT on the 1.2 branch. The only findings to note are that for some malformed messages trying to read state, the client gets back an 'Internal Server Error' instead of a meaningful return code. These are not new and we've classified them as low severity.","username":"amolk","ts":"2019-06-12T16:08:53.380Z"}
{"msg":"@amolk have you entered tasks in JIRA for them, or do you mean internally?","username":"amundson","ts":"2019-06-12T16:12:30.545Z"}
{"msg":"Has joined the channel.","username":"rranjan3","ts":"2019-06-12T16:22:00.757Z","type":"uj"}
{"msg":"STL-1371, although now that I look at it, the description needs to be meaningful","username":"amolk","ts":"2019-06-12T16:24:08.670Z"}
{"msg":"RAFT and PBFT are stable so far 12+ hours into the LR1. Both are on 10 node networks.","username":"amolk","ts":"2019-06-12T16:24:52.469Z"}
{"msg":"@amolk what load?","username":"amundson","ts":"2019-06-12T16:25:16.416Z"}
{"msg":"Nominal load of 10TPS","username":"amolk","ts":"2019-06-12T16:25:32.124Z"}
{"msg":"that's not high enough IMO","username":"amundson","ts":"2019-06-12T16:25:40.152Z"}
{"msg":"but, like I said, we did PBFT under the max load it can handle. it's good. but I think that low load is why Raft is succeeding?","username":"amundson","ts":"2019-06-12T16:26:29.976Z"}
{"msg":"the load should be set right below what it's capable of processing on the given hardware configuration (all the bugs seem to come out then)","username":"amundson","ts":"2019-06-12T16:27:02.659Z"}
{"msg":"(but again, I'm less worried about Raft passing)","username":"amundson","ts":"2019-06-12T16:27:29.726Z"}
{"msg":"We'll keep increasing the load in subsequent runs. We're running PBFT for the first time and haven't run Raft in a while so not sure how any validator changes might affect it.","username":"amolk","ts":"2019-06-12T16:28:16.350Z"}
{"msg":"for PoET, maybe at least do 20TPS? can you replicate problems with it at 10TPS?","username":"amundson","ts":"2019-06-12T16:28:17.402Z"}
{"msg":"We're seeing some intermittent failures in summarize block for PoET. Had seen them in Raft as well long ago.","username":"amolk","ts":"2019-06-12T16:29:33.619Z"}
{"msg":"what workload generator are you using? intkey?","username":"amundson","ts":"2019-06-12T16:29:37.861Z"}
{"msg":"intkey mainly. On another test network we're using intkey+smallbank","username":"amolk","ts":"2019-06-12T16:30:08.320Z"}
{"msg":"increasing the load might help the failures come out faster","username":"amundson","ts":"2019-06-12T16:30:12.893Z"}
{"msg":"I'm curious if there is a difference between 1.1 and 1.2 in this respect","username":"amundson","ts":"2019-06-12T16:31:17.557Z"}
{"msg":"some of our comparison testing between 1.1 and 1.2 wsn't possible as 1.1 can't handle the same level of testing as we are now doing in 1.2","username":"amundson","ts":"2019-06-12T16:32:21.974Z"}
{"msg":"but I'm not sure that comparison has been done w/PoET engine","username":"amundson","ts":"2019-06-12T16:32:43.688Z"}
{"msg":"Have witnessed the FutureTimeoutError on summarize call (@Amol pointed) in 1.1.5. Yet to verify on latest(1.2).","username":"rranjan3","ts":"2019-06-12T16:35:16.392Z"}
{"msg":"PoET error:\n```Jun 07 21:19:10 lr7b-node0 sawtooth-validator[5616]: [2019-06-07 21:19:10.805 ERROR    (unknown file)] [src/journal/chain.rs: 1060] An error occurred while committing block Block(id: 531fad52d0f934b48358f50e9ef58e25ca646e8c2e9a6545672a26bda885f3ca59b07bd0721ec5f3882fb8755af1b7c9589b1accbef225c82e85f9706f0a6a3c, block_num: 75, state_root_hash: 5de40966fbc596127acaf7b2fab15ff6dfee9cd4dba32c9e0c893f9238d9271e, previous_block_id: 63f903f4aa5ef8391f22153aeb10d0cec1f69510a864a60a8c897c89d14d23d36dd135b1892c91fa20bc8e50e067af4e9d656f398d09b1f7e9e94dae747b8b20): ConsensusError(\"Consensus has already decided on this block\")\nJun 07 21:20:30 lr7b-node0 sawtooth-validator[5616]: [2019-06-07 21:20:30.454 WARNING  (unknown file)] [src/journal/block_validator.rs: 272] Block 80682f1c9877cbf455db8b5e0974a5e359414f9a1565864d28f51a4a4e67399d139356a10b9d9fa41e0e50de0c84cf6e5a90fbecbc7f5050c18195bba6e8d2b2 failed validation: Validation failure, duplicate batch 2676315dfaea044b00670920c52fe6e6c3a540b794fb53ccba9542f4940640e1457092a884b2255c0606b1de9ad33cc74fd167d440bbc77aad8116ba05d400ac```","username":"Dan","ts":"2019-06-12T16:36:33.593Z"}
{"msg":"@amundson what are the recommended settings for PBFT for load and configuration?","username":"amolk","ts":"2019-06-12T17:10:29.122Z"}
{"msg":"try 40 tps","username":"amundson","ts":"2019-06-12T17:12:28.590Z"}
{"msg":"depending on your hardware, might be able to push that up","username":"amundson","ts":"2019-06-12T17:12:55.511Z"}
{"msg":"@amolk for PBFT (and Raft), you'll definitely want to set `sawtooth.gossip.time_to_live=1` to disable broadcasting (since the networks are fully peered).","username":"ltseeley","ts":"2019-06-12T18:03:16.244Z"}
{"msg":"@amolk for PBFT (and Raft), you'll definitely want to set `sawtooth.gossip.time_to_live=1` to disable re-broadcasting (since the networks are fully peered).","username":"ltseeley","ts":"2019-06-12T18:03:16.244Z"}
{"msg":"Has joined the channel.","username":"VishalBatra","ts":"2019-06-13T02:19:04.424Z","type":"uj"}
{"msg":"Hi, may I request the team here to publish the next version of Java SDK? This upcoming version has APIs for deleting State and application-specific events which we need urgently in our project. Thanks.","username":"VishalBatra","ts":"2019-06-13T05:15:18.765Z"}
{"msg":"Raft and PBFT have passed the initial LR1 runs. No issues detected in either of the networks.","username":"amolk","ts":"2019-06-13T06:16:49.331Z"}
{"msg":"@Dan This is different from what we've observed in our runs, did you observe it in long run tests? How do we get more info to debug?","username":"arsulegai","ts":"2019-06-13T08:38:56.236Z"}
{"msg":"@ltseeley setting sawtooth.gossip.time_to_live=0 should also work, the issue with it is fixed in 1.2","username":"arsulegai","ts":"2019-06-13T10:20:35.605Z"}
{"msg":"@arsulegai , i got it from @jsmitchell ","username":"Dan","ts":"2019-06-13T13:38:17.188Z"}
{"msg":"An updated LR1 for PBFT on a 10 node network at 40TPS has completed successfully. ","username":"amolk","ts":"2019-06-14T13:31:15.547Z"}
{"msg":"👏🏻","username":"jsmitchell","ts":"2019-06-14T16:18:36.221Z"}
{"msg":"@amolk any progress on testing poet w/1.2?","username":"amundson","ts":"2019-06-24T18:21:16.570Z"}
{"msg":"I'm going to be tagging most of the sawtooth github repos in the next couple days. ","username":"rbuysse","ts":"2019-06-26T18:00:54.188Z"}
{"msg":"If anyone's doing development and comes across an error like `ERROR: VERSION file and (bumped?) git describe versions differ:`, after fetching tags and rebasing on master you should be good to go.","username":"rbuysse","ts":"2019-06-26T18:01:23.860Z"}
{"msg":"Isn't it normal for a block to be rejected, then the sender of the block needs to fork to the version which other nodes are at.","username":"arsulegai","ts":"2019-06-27T05:17:57.922Z"}
{"msg":"LR run status on PBFT:\n====================\nHardware: NUC, ubuntu 18.04\nI/P TPS: 40 TPS (20 intkey + 20 smallbank)\nsawtooth packages version: 1.2.1~dev615-1\npbft package version: 0.1.4-dev24\npython sdk version: 1.2.2~dev15-1\n\nPBFT settings:\n=============\nsawtooth.consensus.algorithm.name=pbft\nsawtooth.consensus.algorithm.version=0.1\nsawtooth.gossip.time_to_live=1\nsawtooth.consensus.pbft.block_duration=100\nsawtooth.consensus.pbft.view_change_timeout=4000\nsawtooth.consensus.pbft.message_timeout=10\nsawtooth.consensus.pbft.max_log_size=1000\n\nObservation: One node had backpressure after ~4.5 hours of run and got out of network. Pending batches is increasing for all other nodes. \nGrafana: http://52.66.91.194:3000/d/dRHP9TDik/dashboard?orgId=1&from=1561558284895&to=1561601484000&var-DATASOURCE=metrics_sawtooth_1_2\n","username":"pankajgoyal","ts":"2019-06-27T06:37:28.485Z"}
{"msg":"","username":"pankajgoyal","ts":"2019-06-27T06:38:47.529Z","attachments":[{"type":"file","title":"40TPS-sawtooth1.2-pbft.png","title_link":"/file-upload/sjvGvkeXg9fcrBqqQ/40TPS-sawtooth1.2-pbft.png","image_url":"/file-upload/sjvGvkeXg9fcrBqqQ/40TPS-sawtooth1.2-pbft.png","image_type":"image/png","image_size":3175385,"url":"/file-upload/sjvGvkeXg9fcrBqqQ/40TPS-sawtooth1.2-pbft.png","remote":false,"fileId":"sjvGvkeXg9fcrBqqQ","fileName":"40TPS-sawtooth1.2-pbft.png"}]}
{"msg":"Seeing some issues with PBFT ","username":"amolk","ts":"2019-06-27T06:41:24.818Z"}
{"msg":"Anything interesting in the logs around the time the first node stopped making progress?","username":"ltseeley","ts":"2019-06-27T12:55:23.399Z"}
{"msg":"It is back pressure that occurred. Message like:\n[00:11:49.455 [ThreadPoolExecutor-7_0] ffi INFO] [src/journal/chain.rs: 557] Failed block Block(id: 41c55363519ceb0aa5a2db33073ea5088d6410f20fbf4e39065905e9b94591e82a6fc7f02cf2efcbe5e4224c979e5f000f9583139e76a0da04bca920d295d044, block_num: 15303, state_root_hash: fe42e39a015b2f08e2214253bd13ef907f3c389bf3a6235364b33aa9ab256d05, previous_block_id: 9f7800201df2e95d29055453b845691db9b2077408cec0f41961f8eb66cd08ac71806f2296d662b598ddb0c2761e1d11a671c686fd4b4de607bffdf300200cfe)\n[00:11:49.537 [ThreadPoolExecutor-2_4] back_pressure_handlers INFO] Applying back pressure on client submitted batches: current depth: 500, limit: 500","username":"pankajgoyal","ts":"2019-06-28T03:32:59.978Z"}
{"msg":"Backpressure is usually symptom of something else going wrong; the node can't commit blocks/batches for some reason. Can you check the PBFT logs to see what happened around that time? Also, are there any errors in the validator?","username":"ltseeley","ts":"2019-06-28T13:16:18.480Z"}
{"msg":"I'm curious if the validator was restarted there","username":"amundson","ts":"2019-06-28T14:20:34.423Z"}
{"msg":"","username":"amolk","ts":"2019-06-28T21:33:31.037Z","attachments":[{"type":"file","title":"validator-debug.zip","title_link":"/file-upload/gXLWZisXaYmgzRJiA/validator-debug.zip","url":"/file-upload/gXLWZisXaYmgzRJiA/validator-debug.zip","remote":false,"fileId":"gXLWZisXaYmgzRJiA","fileName":"validator-debug.zip"}]}
{"msg":"Validator wasn't restarted. Attaching logs for the validator that fell out of sync. Look from Block number 15400. ","username":"amolk","ts":"2019-06-28T21:33:35.601Z"}
{"msg":"It starts failing all blocks starting at block 15293. Can you see why PBFT failed block 15293?","username":"ltseeley","ts":"2019-07-01T17:16:34.937Z"}
{"msg":"@amolk ","username":"ltseeley","ts":"2019-07-01T17:16:39.344Z"}
{"msg":"Hi, any news of sawtooth 1.2? When will it be released?","username":"RealDeanZhao","ts":"2019-07-10T06:06:05.176Z"}
{"msg":"Soon :relaxed: ","username":"arsulegai","ts":"2019-07-10T06:07:03.243Z"}
{"msg":":grinning: ","username":"RealDeanZhao","ts":"2019-07-10T06:08:56.122Z"}
{"msg":"@RealDeanZhao the release is blocked on a regression which shows up during PoET long-running network testing (PBFT runs do not exhibit the same issue). once that's resolved, it should not take long for the release to be official.","username":"amundson","ts":"2019-07-10T15:51:41.045Z"}
{"msg":"There are interesting observations with 1.2 release candidate","username":"arsulegai","ts":"2019-07-10T16:42:33.016Z"}
{"msg":"1. We observe a KeyError issue (a side effect of validator sending duplicate block to consensus engine) in validator version 1.2 but not on latest master build or earlier 1.1 validator","username":"arsulegai","ts":"2019-07-10T16:43:55.759Z"}
{"msg":"2. There are too many forks on 1.2 when compared to 1.1, with same PoET binary","username":"arsulegai","ts":"2019-07-10T16:44:34.175Z"}
{"msg":"I want to make sure we are aligned on what build is being tested. It looks like we've continued to have doc backports but the last coding change is ~June 28. https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/1-2/changes\n@arsulegai do you know which build your LR is executing?","username":"Dan","ts":"2019-07-10T16:59:27.105Z"}
{"msg":"I will take a step back here before commenting more. However as pasted in #sawtooth-core-dev along with logs, the KeyError issue logs I have is for validator version 1.3.1-dev12-dirty","username":"arsulegai","ts":"2019-07-10T18:19:00.197Z"}
{"msg":"1.3.1 sounds like master","username":"Dan","ts":"2019-07-10T18:30:22.258Z"}
{"msg":"1.2: https://github.com/hyperledger/sawtooth-core/blob/1-2/VERSION\nmaster: https://github.com/hyperledger/sawtooth-core/blob/master/VERSION","username":"Dan","ts":"2019-07-10T18:30:58.182Z"}
{"msg":"There's one more log with version version 1.2.1-dev615-dirty which has seen the KeyError issue","username":"arsulegai","ts":"2019-07-10T18:54:25.217Z"}
{"msg":"Ok, now I am confident on receiving the duplicate block from validator. It's seen in yesterday's nightly 1.2 build as well","username":"arsulegai","ts":"2019-07-11T08:22:24.920Z"}
{"msg":"I created an issue in Jira to track it https://jira.hyperledger.org/browse/STL-1664","username":"arsulegai","ts":"2019-07-11T14:24:46.629Z"}
{"msg":"Clarification on point 1 of my earlier message. The validator sends duplicate block on latest master as well, just that it didn't end up in KeyError issue. It's however messing up the state machine in the PoET. https://github.com/hyperledger/sawtooth-poet/pull/38 handles and solves the issue because of validator's changed behavior.","username":"arsulegai","ts":"2019-07-12T03:17:34.200Z"}
{"msg":"Clarification on point 2: We found a suitable configuration settings for the 10 node network to run smoothly.","username":"arsulegai","ts":"2019-07-12T03:22:57.140Z"}
{"msg":"Reviewed and merged #38. I guess we need to backport that to 1-2.","username":"Dan","ts":"2019-07-12T19:22:38.864Z"}
{"msg":"1-1, 1-2, master all share the same PoET and this change has no effect on 1-1. With earlier versions of Sawtooth, this issue doesn't occur at Validator. However doesn't harm to backport to 1.0, shall I?","username":"arsulegai","ts":"2019-07-13T05:40:45.593Z"}
{"msg":"oh I don't know what I was thinking. no need to backport.","username":"Dan","ts":"2019-07-14T15:55:32.875Z"}
{"msg":"Are we all set now for Chime / 1.2 with PoET LR success or is there still some regression to be resolved?","username":"Dan","ts":"2019-07-14T15:56:41.889Z"}
{"msg":"PoET-SGX shows stability at 10tps","username":"arsulegai","ts":"2019-07-15T11:23:13.048Z"}
{"msg":"How long of a run?","username":"pschwarz","ts":"2019-07-15T15:35:45.473Z"}
{"msg":"LR1 completed","username":"arsulegai","ts":"2019-07-15T15:46:56.651Z"}
{"msg":"(with the pending patches in sawtooth-poet repository)","username":"arsulegai","ts":"2019-07-15T15:47:11.224Z"}
{"msg":"@arsulegai reports that the LR testing is looking good. We have one PR in sawtooth-poet that needs a tweak and then that is the last thing on my end that is holding up `chime`.","username":"Dan","ts":"2019-07-16T14:17:11.408Z"}
{"msg":"Question: It came up during app developers' forum and somebody asked a update procedure. There was a PR raised for it and merged to sawtooth-website but it's not reflected in website still. Anything wrong? https://github.com/hyperledger/sawtooth-website/commit/fc691c8e1b084fddb2f35c52b003a013049231f3\n","username":"arsulegai","ts":"2019-07-18T09:15:45.141Z"}
{"msg":"Question: It came up during app developers' forum and somebody asked a question on points to consider while updating Sawtooth. There was a PR raised for it and merged to sawtooth-website but it's not reflected in website still. Anything wrong? https://github.com/hyperledger/sawtooth-website/commit/fc691c8e1b084fddb2f35c52b003a013049231f3\n","username":"arsulegai","ts":"2019-07-18T09:15:45.141Z"}
{"msg":"Hm, isn't this it? https://sawtooth.hyperledger.org/faq/upgrade/","username":"rbuysse","ts":"2019-07-18T14:36:10.028Z"}
{"msg":"I couldn't find it from FAQ main page https://sawtooth.hyperledger.org/faq/","username":"arsulegai","ts":"2019-07-18T14:55:39.316Z"}
{"msg":"* find a link for it from","username":"arsulegai","ts":"2019-07-18T14:55:53.006Z"}
{"msg":"Thanks","username":"arsulegai","ts":"2019-07-18T14:56:03.236Z"}
{"msg":"@arsulegai If your PR added a page, you need to add it to https://github.com/hyperledger/sawtooth-website/blob/master/generator/source/faq/faq.rst\nAlso updates to sawtooth-website are not immediate.","username":"danintel","ts":"2019-07-18T23:54:23.248Z"}
{"msg":"Right, I realised it late","username":"arsulegai","ts":"2019-07-19T03:00:51.419Z"}
{"msg":"I should have caught it when reviewing it--sorry.","username":"danintel","ts":"2019-07-19T16:22:42.565Z"}
{"msg":"Hello all, transact 0.1.5 has been released to crates.io","username":"rberg2","ts":"2019-08-06T18:46:06.294Z"}
{"msg":"@rberg2 you should mention that is #transact ","username":"amundson","ts":"2019-08-06T20:07:09.330Z"}
{"msg":"Hi, any update on when the next version of the Java SDK for Sawtooth planned for release? The new version has support for two important features - deleting an address and application-specific events.","username":"VishalBatra","ts":"2019-08-08T03:22:35.524Z"}
{"msg":"@VishalBatra The SDK should appear with the rest of the Sawtooth release","username":"danintel","ts":"2019-08-08T09:26:43.438Z"}
{"msg":"Ok, thank you very much. Is there a tentative date planned for this release?","username":"VishalBatra","ts":"2019-08-08T09:41:19.212Z"}
{"msg":"August 13 was the earlier planned date, but now it's postponed by 2 weeks.","username":"arsulegai","ts":"2019-08-08T09:51:11.471Z"}
{"msg":"(a minimum of 2 weeks, we haven't picked a new date yet)","username":"amundson","ts":"2019-08-08T14:25:20.672Z"}
{"msg":"but, the SDK point releases are actually independent of the overall release. @rberg2 ^ java sdk release request","username":"amundson","ts":"2019-08-08T14:27:39.511Z"}
{"msg":"Hello, I did a release of the java sdk version 0.1.3 on Jun 28 2019. I do not see any code changes since that release. Is anything missing from 0.1.3 that you expect to be there?","username":"rberg2","ts":"2019-08-08T18:16:32.441Z"}
{"msg":"@VishalBatra ^","username":"arsulegai","ts":"2019-08-09T09:27:00.895Z"}
{"msg":"I see the tag v0.1.3, withe the VERSION bumped to 0.1.3, but the POM and Readme showing v0.1.2 ,,,","username":"LeonardoCarvalho","ts":"2019-08-10T17:10:24.405Z"}
{"msg":"I believe the POM is changed with the command `mvn versions:set -DnewVersion=v0.1.3` during release","username":"rberg2","ts":"2019-08-12T14:16:38.577Z"}
{"msg":"Still, the versions should be kept in sync. To match what we do everywhere else, the version in the repo at HEAD should be the next version (the one not yet released).","username":"amundson","ts":"2019-08-12T15:18:08.022Z"}
{"msg":"kk I made a note in the release docs to do that. looking at one of the released pom files it did get updated during release, so I don't think that's a problem. https://repo1.maven.org/maven2/org/hyperledger/sawtooth/sawtooth-sdk-protos/v0.1.3/sawtooth-sdk-protos-v0.1.3.pom","username":"rberg2","ts":"2019-08-12T16:07:20.493Z"}
{"msg":"Is PBFT deb available?","username":"arsulegai","ts":"2019-08-23T14:44:20.833Z"}
{"msg":"yep, it should be in all the repos except 1.0","username":"rbuysse","ts":"2019-08-23T14:53:58.997Z"}
{"msg":"👍 thanks","username":"arsulegai","ts":"2019-08-23T15:58:31.606Z"}
{"msg":"Has joined the channel.","username":"Atlowell","ts":"2019-09-23T18:14:03.581Z","type":"uj"}
{"msg":"Hello all, is there a release notes document somewhere which describes the major features/fixes of each release?","username":"Atlowell","ts":"2019-09-23T18:14:48.691Z"}
{"msg":"@Atlowell here you go https://sawtooth.hyperledger.org/release/","username":"arsulegai","ts":"2019-09-24T05:39:36.798Z"}
{"msg":"@arsulegai Thanks!","username":"Atlowell","ts":"2019-09-24T14:28:53.374Z"}
{"msg":"Does anyone know when it will be updated with 1.2 or 1.3?","username":"Atlowell","ts":"2019-09-24T14:29:02.858Z"}
{"msg":"I am facing a strange issue with Jenkins today. If I want to make a change in Manage Jenkins -> Configure System and tries to save it, it doesn't save that. It tries for some time and then throws network error. I tried to create Jenkins server on 2 different machines and both have the same behaviour. Any leads will be appreciated.","username":"pankajgoyal","ts":"2019-09-30T12:57:30.113Z"}
{"msg":"PBFT 1.0.2 has been released. You can read the release notes here: https://github.com/hyperledger/sawtooth-pbft/blob/v1.0.2/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-07T20:04:11.036Z"}
{"msg":"^ @VishalBatra ","username":"arsulegai","ts":"2020-02-08T09:52:28.438Z"}
{"msg":"Thank you @arsulegai Upgraded our nodes to use the latest version","username":"VishalBatra","ts":"2020-02-10T05:39:40.338Z"}
{"msg":"I'd like to request a new Rust SDK release (v0.4.1) to make changes from https://github.com/hyperledger/sawtooth-sdk-rust/pull/39 and https://github.com/hyperledger/sawtooth-sdk-rust/pull/40 available","username":"ltseeley","ts":"2020-02-11T18:15:52.154Z"}
{"msg":"Also a Sawtooth Sabre (v0.5) release","username":"ltseeley","ts":"2020-02-11T18:16:41.435Z"}
{"msg":"Also want to request a libsawtooth release","username":"ltseeley","ts":"2020-02-12T15:48:59.177Z"}
{"msg":"I'll get that taken care of this week.","username":"rbuysse","ts":"2020-02-12T16:21:01.230Z"}
{"msg":"A new version (0.5.0) of sawtooth-sabre has been released. You can view the release notes at https://github.com/hyperledger/sawtooth-sabre/blob/v0.5.0/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-12T23:00:29.979Z"}
{"msg":"A new version (0.5.1) of sawtooth-sabre has been released. You can view the release notes at https://github.com/hyperledger/sawtooth-sabre/blob/v0.5.1/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-13T21:25:05.233Z"}
{"msg":"A new version (0.4.1) of the sawtooth-rust-sdk has been released. You can view the release notes at https://github.com/hyperledger/sawtooth-sdk-rust/blob/v0.4.1/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-14T19:58:52.973Z"}
{"msg":"A new version (0.2.2) of Transact has been released. You can view the release notes at https://github.com/hyperledger/transact/blob/v0.2.2/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-18T21:31:38.122Z"}
{"msg":"A new version (0.2.3) of Transact has been released. You can view the release notes at https://github.com/hyperledger/transact/blob/v0.2.3/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-20T21:17:01.811Z"}
{"msg":"Requesting a new sabre release because of the fixes here: https://github.com/hyperledger/sawtooth-sabre/pull/102/","username":"ltseeley","ts":"2020-02-25T17:37:26.066Z"}
{"msg":"Requesting a new tag for PoET repository with this commit included https://github.com/hyperledger/sawtooth-poet/commit/754766d35fe24837d68afe9e848568b26fb1065b","username":"arsulegai","ts":"2020-03-09T11:21:41.693Z"}
{"msg":"@lucgerrits ^","username":"arsulegai","ts":"2020-03-09T11:21:51.483Z"}
{"msg":"Has joined the channel.","username":"lucgerrits","ts":"2020-03-09T11:21:51.514Z","type":"uj"}
{"msg":"@rbuysse  ^","username":"agunde","ts":"2020-03-10T12:39:55.644Z"}
{"msg":"@arsulegai sounds good, I'll get that out either tomorrow or monday.","username":"rbuysse","ts":"2020-03-10T16:20:25.355Z"}
{"msg":"Requesting a new patch release of the Sawtooth Rust SDK because of the stabilization of the `transact-compat` feature.","username":"ltseeley","ts":"2020-05-01T18:36:09.058Z"}
{"msg":"Has joined the channel.","username":"RajaramKannan","ts":"2020-05-26T05:36:28.697Z","type":"uj"}
{"msg":"Has joined the channel.","username":"johnfranklin","ts":"2020-06-02T04:33:23.579Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jmbarry","ts":"2020-06-16T17:32:11.227Z","type":"uj"}
{"msg":"I'd like to request a new sawtooth rust sdk release","username":"pschwarz","ts":"2020-07-23T22:13:26.902Z"}
{"msg":"Has joined the channel.","username":"ParitoshPandey","ts":"2020-08-27T17:54:20.429Z","type":"uj"}
{"msg":"Has left the channel.","username":"danintel","ts":"2020-10-06T18:53:16.314Z","type":"ul"}
{"msg":"Has joined the channel.","username":"ajayjadhav","ts":"2020-10-14T19:13:15.383Z","type":"uj"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:59.768Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:59.787Z","type":"room_changed_description"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:35:59.791Z","type":"room_changed_announcement"}
