{"msg":"amundson","username":"rjones","ts":"2018-05-07T20:39:04.873Z","type":"subscription-role-added"}
{"msg":"Has left the channel.","username":"rjones","ts":"2018-05-07T20:39:19.090Z","type":"ul"}
{"msg":"User <em>User_1</em> added by <em>amundson</em>.","username":"amundson","ts":"2018-05-08T01:31:29.191Z","type":"au"}
{"msg":"User <em>User_2</em> added by <em>amundson</em>.","username":"amundson","ts":"2018-05-08T01:31:29.272Z","type":"au"}
{"msg":"User <em>User_3</em> added by <em>amundson</em>.","username":"amundson","ts":"2018-05-08T01:31:29.316Z","type":"au"}
{"msg":"User <em>User_4</em> added by <em>amundson</em>.","username":"amundson","ts":"2018-05-08T01:31:29.343Z","type":"au"}
{"msg":"Has joined the channel.","username":"cliveb","ts":"2018-05-08T18:24:18.525Z","type":"uj"}
{"msg":"Has joined the channel.","username":"grkvlt","ts":"2018-05-08T23:35:40.805Z","type":"uj"}
{"msg":"Has joined the channel.","username":"boydjohnson","ts":"2018-05-10T14:39:54.151Z","type":"uj"}
{"msg":"Sabre Announcement: https://lists.hyperledger.org/g/sawtooth/message/280","username":"amundson","ts":"2018-05-10T22:47:30.371Z"}
{"msg":"Has joined the channel.","username":"pankajgoyal","ts":"2018-05-11T06:09:56.885Z","type":"uj"}
{"msg":"Has joined the channel.","username":"SjirNijssen","ts":"2018-05-11T09:55:06.702Z","type":"uj"}
{"msg":"@amundson Congratulations. Excellent initiative.","username":"SjirNijssen","ts":"2018-05-11T09:55:47.558Z"}
{"msg":"Has joined the channel.","username":"chainsaw","ts":"2018-05-11T14:27:42.065Z","type":"uj"}
{"msg":"@SjirNijssen thanks, we are excited about it","username":"amundson","ts":"2018-05-11T14:37:41.036Z"}
{"msg":"where can I read about the background for this and the elapsed timeline from inception? I am interested in learning who created this, why it was created, design discussions, Hyperledger proposal for acceptance, and background on the submitter(s) and key developers and maintainers. Thanks. ","username":"chainsaw","ts":"2018-05-11T14:42:53.358Z"}
{"msg":"@chainsaw that's a lot of questions. Can you help us understand why you want to know all of those things?","username":"jsmitchell","ts":"2018-05-11T15:12:29.919Z"}
{"msg":"I want to know all of these things so I can understand who to follow and where to go to follow and potentially participate. I want to know all of these things so I can understand how this project was created and why. I want to know who are the influencers and authoritative developers that maintain, guide, and decide what will and will not be accepted.","username":"chainsaw","ts":"2018-05-11T17:46:58.430Z"}
{"msg":"It can be frustrating trying to come put t o speed on Hyperledger projects without first understanding the fundamental concepts, design decisions, participants, assignments, roadmap, etc. -- the rocket chat and the repos do not provide forum in any efficent and effective manner for this discovery and orientation process. ","username":"chainsaw","ts":"2018-05-11T17:51:00.733Z"}
{"msg":"It can be frustrating trying to come up to speed on Hyperledger projects without first understanding the fundamental concepts, design decisions, participants, assignments, roadmap, etc. -- the rocket chat and the repos do not provide forum in any efficent and effective manner for this discovery and orientation process. ","username":"chainsaw","ts":"2018-05-11T17:51:00.733Z"}
{"msg":"It can be frustrating trying to come up to speed on Hyperledger projects without first understanding the fundamental concepts, design decisions, participants, assignments, roadmap, etc. -- the rocket chat and the repos do not provide a forum in any efficent and effective manner for this discovery and orientation process. ","username":"chainsaw","ts":"2018-05-11T17:51:00.733Z"}
{"msg":"Here's the documentation on Sabre which should give you an idea of the design intent: https://sawtooth.hyperledger.org/docs/sabre/releases/latest/","username":"jsmitchell","ts":"2018-05-11T17:54:58.865Z"}
{"msg":"Like for example \"who is jsmitchell? what role does he perform? what projects does he work on? is he work for a hyperledger member? if so which one? This information allows me to determine the who, what and how tp communicate with and potentially collaborate with. Does this make any sense? ","username":"chainsaw","ts":"2018-05-11T17:56:12.086Z"}
{"msg":"There are members of the development team here in this channel that can help answer questions. But, I'm afraid you may be expecting a level of rigor around project documentation and justification that might not be in place.","username":"jsmitchell","ts":"2018-05-11T17:56:18.481Z"}
{"msg":"Sure, it makes sense, but the people here have no obligation to document that or even provide that information. So, don't be too upset if it's not forthcoming.","username":"jsmitchell","ts":"2018-05-11T17:56:56.408Z"}
{"msg":"I work for Bitwise IO -  we've done a lot of work with Intel and Cargill on Hyperledger Sawtooth, in addition to making a number of contributions ourselves. Sawtooth Sabre is a contribution of Cargill, and some members of the team that worked on it are in this channel.","username":"jsmitchell","ts":"2018-05-11T17:59:07.931Z"}
{"msg":"This channel is a great place to collaborate on Sabre","username":"jsmitchell","ts":"2018-05-11T18:00:33.517Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=m8vyuv7Kc957H9nAj) @jsmitchell I thought all projects had to submit a paper or charter to Hyperledger and there was a process (with trackable conversations) regarding the acceptance of the project into Hyperledger--I would like to read the documents and discussion threads for sawtooth-sabre.","username":"chainsaw","ts":"2018-05-11T18:01:09.586Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=m8vyuv7Kc957H9nAj","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=m8vyuv7Kc957H9nAj","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Ah, I see. This is not a separate top-level project. It's part of sawtooth, just managed in its own repository.","username":"jsmitchell","ts":"2018-05-11T18:02:22.231Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=ZwmudbikEqbxirY34) @jsmitchell Super! Is Cargill an Hyperledger member? I could not find them in the member list.","username":"chainsaw","ts":"2018-05-11T18:03:07.491Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=ZwmudbikEqbxirY34","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=ZwmudbikEqbxirY34","remote":true,"fileId":null,"fileName":null}]}
{"msg":"I don't believe they are members. Contributions can come from anywhere, member or not.","username":"jsmitchell","ts":"2018-05-11T18:03:31.071Z"}
{"msg":"Awesome! Thank you @jsmitchell. I hope I have not been a pain or annoyance. I appreciate your patience and informative replies :)","username":"chainsaw","ts":"2018-05-11T18:06:05.861Z"}
{"msg":"no problem! Excited to have you dig in and learn/contribute on Sabre!","username":"jsmitchell","ts":"2018-05-11T18:06:28.214Z"}
{"msg":"So TPs are welcome?","username":"chainsaw","ts":"2018-05-11T18:06:37.263Z"}
{"msg":"TP?","username":"jsmitchell","ts":"2018-05-11T18:06:52.177Z"}
{"msg":"Transaction Processors","username":"chainsaw","ts":"2018-05-11T18:07:06.724Z"}
{"msg":"Well, Sabre _is_ a transaction processor that runs wasm bytecode stored on chain","username":"jsmitchell","ts":"2018-05-11T18:07:33.305Z"}
{"msg":"that's in the repo","username":"jsmitchell","ts":"2018-05-11T18:07:38.251Z"}
{"msg":"https://github.com/hyperledger/sawtooth-sabre","username":"jsmitchell","ts":"2018-05-11T18:08:14.383Z"}
{"msg":"https://github.com/hyperledger/sawtooth-sabre/tree/master/tp/src","username":"jsmitchell","ts":"2018-05-11T18:08:24.459Z"}
{"msg":"written in Rust","username":"jsmitchell","ts":"2018-05-11T18:08:35.654Z"}
{"msg":"the idea is that you import the sdk, write your code, and then compile down to wasm bytecode","username":"jsmitchell","ts":"2018-05-11T18:09:09.510Z"}
{"msg":"that bytecode is then loaded to state in a transaction and then executed later by a different transaction","username":"jsmitchell","ts":"2018-05-11T18:09:33.112Z"}
{"msg":"Yep, so TPs can be contributed, because it seems that TPs are the area where Sawtooth has the greatest opportunity and a rich ecosystem of TPs will propel Sawtooth to the #1 slot.","username":"chainsaw","ts":"2018-05-11T18:09:40.279Z"}
{"msg":"the sabre transaction processor deals with all the complexity of storing, loading, and executing the wasm contracts","username":"jsmitchell","ts":"2018-05-11T18:10:04.578Z"}
{"msg":"yes, absolutely - cool applications which use sabre would be great to see!","username":"jsmitchell","ts":"2018-05-11T18:10:23.985Z"}
{"msg":"here's how to write sabre smart contracts: https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html","username":"jsmitchell","ts":"2018-05-11T18:10:54.572Z"}
{"msg":"I like the WASM approach. Great promise. ","username":"chainsaw","ts":"2018-05-11T18:12:44.358Z"}
{"msg":"I'll clone the repo and get to work :)","username":"chainsaw","ts":"2018-05-11T18:12:59.852Z"}
{"msg":"fantastic!","username":"jsmitchell","ts":"2018-05-11T18:13:14.927Z"}
{"msg":"Thanks @jsmitchell ","username":"chainsaw","ts":"2018-05-11T18:13:17.580Z"}
{"msg":"of course!","username":"jsmitchell","ts":"2018-05-11T18:13:45.454Z"}
{"msg":"Has joined the channel.","username":"BenBetts","ts":"2018-05-11T18:20:43.969Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tkuhrt","ts":"2018-05-11T23:02:08.264Z","type":"uj"}
{"msg":"Has joined the channel.","username":"svanschalkwyk","ts":"2018-05-18T21:13:17.847Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Johnjam","ts":"2018-05-22T07:04:06.419Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kelly_","ts":"2018-05-24T20:11:28.708Z","type":"uj"}
{"msg":"Has joined the channel.","username":"benoit.razet","ts":"2018-05-25T17:48:33.854Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Gandalf","ts":"2018-05-27T04:07:00.264Z","type":"uj"}
{"msg":"Hi, I got the chance to review the RFC for Sabre. It's super interesting! It addresses a number of issues inherent to bare sawtooth, like the governance of smart contracts deployment on a network or the namespace restriction.","username":"benoit.razet","ts":"2018-05-29T20:58:18.346Z"}
{"msg":"@benoit.razet Sawtooth does have a fairly good governance capability for which transaction processors must exist at any given time, which provides the ability to do enterprise-level things like rolling upgrades in a traditional software management sense; but while that is appropriate for sawtooth itself and transaction processors, we definitely wanted an easier way to deploy smart contracts without systems administrator involvement and have them safely executed in a sandboxed vm.","username":"amundson","ts":"2018-05-30T05:20:43.008Z"}
{"msg":"Has joined the channel.","username":"tim-d-blue","ts":"2018-05-31T15:13:58.079Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rys_rahul","ts":"2018-06-08T09:06:55.678Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JonathanLevi","ts":"2018-06-11T17:12:17.942Z","type":"uj"}
{"msg":"Has joined the channel.","username":"markg 17","ts":"2018-06-11T22:39:44.750Z","type":"uj"}
{"msg":"Has joined the channel.","username":"paulananth","ts":"2018-06-15T15:56:02.635Z","type":"uj"}
{"msg":"Has joined the channel.","username":"tungdt_socoboy","ts":"2018-06-21T11:45:42.799Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mengan","ts":"2018-06-27T12:11:48.947Z","type":"uj"}
{"msg":"Has joined the channel.","username":"hanen","ts":"2018-07-05T09:49:56.626Z","type":"uj"}
{"msg":"Has joined the channel.","username":"pschwarz","ts":"2018-07-06T18:43:24.962Z","type":"uj"}
{"msg":"Has joined the channel.","username":"shannynalayna","ts":"2018-07-10T15:50:11.266Z","type":"uj"}
{"msg":"Has joined the channel.","username":"honeyjills","ts":"2018-07-20T05:10:47.978Z","type":"uj"}
{"msg":"Hi everyone , Is it possible  to get the activity information of DApps deployed in Ethereum smart contract into the sawtooth network?. The transaction data will be stored in Sawtooth. I am not sure how the WASM mechanism works. Just a new comer.  ","username":"honeyjills","ts":"2018-07-20T05:13:47.467Z"}
{"msg":"you can load anything you want into the Sawtooth network","username":"zac","ts":"2018-07-20T12:06:53.252Z"}
{"msg":"You'll almost certainly want a client to record that information and feed it into transactions","username":"zac","ts":"2018-07-20T12:07:39.195Z"}
{"msg":"That doesn't really have anything to do with Sabre though. Smart contracts are more a deployment strategy than anything. Do you want to store the business logic of your app on-chain or off-chain? The logic itself can be identical.","username":"zac","ts":"2018-07-20T12:08:41.620Z"}
{"msg":"Has joined the channel.","username":"underbell","ts":"2018-07-24T06:28:45.295Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Gabe","ts":"2018-08-20T04:14:36.682Z","type":"uj"}
{"msg":"Has joined the channel.","username":"alchmeina","ts":"2018-08-23T14:18:17.149Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sureshtedla","ts":"2018-08-31T17:33:13.155Z","type":"uj"}
{"msg":"Hi, I tried to build the sabre-tp image with `docker-compose -f docker-compose-installed.yaml build sabre-tp` and run into docker credential issue","username":"benoit.razet","ts":"2018-09-10T13:12:50.973Z"}
{"msg":"","username":"benoit.razet","ts":"2018-09-10T13:13:23.647Z","attachments":[{"type":"file","title":"Screen Shot 2018-09-10 at 9.12.28 AM.png","title_link":"/file-upload/TmT4XMT7jfx4cY4H8/Screen%20Shot%202018-09-10%20at%209.12.28%20AM.png","image_url":"/file-upload/TmT4XMT7jfx4cY4H8/Screen%20Shot%202018-09-10%20at%209.12.28%20AM.png","image_type":"image/png","image_size":240018,"url":"/file-upload/TmT4XMT7jfx4cY4H8/Screen%20Shot%202018-09-10%20at%209.12.28%20AM.png","remote":false,"fileId":"TmT4XMT7jfx4cY4H8","fileName":"Screen Shot 2018-09-10 at 9.12.28 AM.png"}]}
{"msg":"any idea","username":"benoit.razet","ts":"2018-09-10T13:25:03.506Z"}
{"msg":"any idea?","username":"benoit.razet","ts":"2018-09-10T13:25:03.506Z"}
{"msg":"@benoit.razet @rbuysse is going to take a look when he gets in.","username":"agunde","ts":"2018-09-10T13:26:58.894Z"}
{"msg":"Has joined the channel.","username":"rbuysse","ts":"2018-09-10T13:27:00.827Z","type":"uj"}
{"msg":"thanks!","username":"benoit.razet","ts":"2018-09-10T13:27:12.732Z"}
{"msg":"Hm. can you run `docker logout` and then try again?","username":"rbuysse","ts":"2018-09-10T14:07:47.549Z"}
{"msg":"@rbuysse I `docker logout` and same pb :(","username":"benoit.razet","ts":"2018-09-10T16:30:07.305Z"}
{"msg":"I'm going to look on my side and see if there is anything suspicious with my docker.","username":"benoit.razet","ts":"2018-09-10T16:34:38.455Z"}
{"msg":"it was able to get the hyperledger:1.0 image fine","username":"benoit.razet","ts":"2018-09-10T16:34:59.448Z"}
{"msg":"it was able to get the `hyperledger/sawtooth-validator:1.0` image fine","username":"benoit.razet","ts":"2018-09-10T16:34:59.448Z"}
{"msg":"ok, I have the same pb when building the validator. So it sounds like something on my side.","username":"benoit.razet","ts":"2018-09-10T16:43:26.972Z"}
{"msg":"no really relevant to this channel, but I followed this link https://github.com/docker/docker-credential-helpers/issues/65 and it fixed the issue. Sorry for bothering you with docker related issue","username":"benoit.razet","ts":"2018-09-10T16:52:16.524Z"}
{"msg":"sabre-tp is being built","username":"benoit.razet","ts":"2018-09-10T16:52:48.528Z"}
{"msg":":clap: ","username":"rbuysse","ts":"2018-09-10T16:59:56.733Z"}
{"msg":"Everything went well! I read the docs and followed the tutorial with intkey and intkey-multiply. If I understand correctly, the sabre-sdk allows to produce either a traditional rust TP or a wasm sabre smart contract, that's a cool feature!","username":"benoit.razet","ts":"2018-09-10T19:23:46.297Z"}
{"msg":"all the commands run as expected. The only oops was trying to run some command before the rust compiler was done in the container","username":"benoit.razet","ts":"2018-09-10T19:24:41.014Z"}
{"msg":"@benoit.razet yeah, we aren't sure how to solve that rust-compiler-still-running-but-not-obvious problem","username":"amundson","ts":"2018-09-11T17:29:05.557Z"}
{"msg":"yeah, the program `intkey_multiply` did not exist when I tried to run the command from the docs, so I looked for the binary in other places to see if the path was incorrect or what, and then saw the logs with all-the-things being compiled. All cool! Now I'm looking into writing my first sabre smart contract, a simple one (while keeping an eye on Florence and all the updates)","username":"benoit.razet","ts":"2018-09-11T17:39:36.135Z"}
{"msg":"Has joined the channel.","username":"arsulegai","ts":"2018-09-11T19:00:52.398Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cecchi","ts":"2018-09-12T19:01:33.039Z","type":"uj"}
{"msg":"quick report on my ongoing exploration of sabre. I was able to modify intkey-multiply, to do my own simple (very simple) smart contract, with different namespace permission. I'm surprised it worked pretty well. Once I figured how to please the type system of Rust, it just worked as expected. I think now I'll dig a little more into the details of the framework. ","username":"benoit.razet","ts":"2018-09-14T15:00:43.434Z"}
{"msg":"heh","username":"jsmitchell","ts":"2018-09-14T15:40:07.335Z"}
{"msg":"@benoit.razet cool. I'm all ears in terms of potential features or changes.","username":"amundson","ts":"2018-09-17T15:58:33.418Z"}
{"msg":"@amundson cool! I keep experimenting with the workflow for upload/ns/perm/execute. Looking into the play between the inputs/outputs at the sabre payload level or sawtooth txn level. Right now, I'm looking into the absolute necessity of having inputs/outputs in the ExecuteContractAction, and wondering if in the sabre tp, it would be possible to pass the inputs/outputs from the sawtooth txn itself to check the permission `https://github.com/hyperledger/sawtooth-sabre/blob/master/tp/src/handler.rs#L930` I'm still looking, contemplating the design","username":"benoit.razet","ts":"2018-09-17T16:14:11.755Z"}
{"msg":"Also discovered that in the NamespaceRegistry the Permissions do not include the `version`, only the `name`. At first I thought it was curious because the permission not fine grained upto the `version`. But then I realized it might be a good design, for not having to update the namespace registry at each bump version, if there are no real changes.","username":"benoit.razet","ts":"2018-09-17T16:18:16.155Z"}
{"msg":"Also discovered that in the NamespaceRegistry the Permissions do not include the `version`, only the `name`. At first I thought it was curious because it makes the permission not fine grained upto the `version`. But then I realized it might be a good design, allowing not having to update the namespace registry at each bump version, if there are no real changes.","username":"benoit.razet","ts":"2018-09-17T16:18:16.155Z"}
{"msg":"@benoit.razet the sawtooth txn itself will need to include more than the sabre transaction, since it has to include the inputs/outputs for loading the smart contract from state","username":"amundson","ts":"2018-09-17T16:57:31.267Z"}
{"msg":"though I guess you could subtract those and pass the rest perhaps","username":"amundson","ts":"2018-09-17T16:58:00.718Z"}
{"msg":"the omission of version is is for the reason you mention; we are basically delegating to the owner of the contract, not the specific contract itself (if we did it to the specific contract, we would have used a hash of it)","username":"amundson","ts":"2018-09-17T16:59:57.127Z"}
{"msg":"whether it is a good design, well, that is certainly up for debate","username":"amundson","ts":"2018-09-17T17:00:33.357Z"}
{"msg":"I like to think of it as a good starting point to figure out what we want the design to be.","username":"amundson","ts":"2018-09-17T17:01:43.946Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=q3kgnzsEtEzqcZxEK) that makes sense!","username":"benoit.razet","ts":"2018-09-17T17:14:26.633Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=q3kgnzsEtEzqcZxEK","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=q3kgnzsEtEzqcZxEK","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=cP9Nc9BTxbGd7nHrg) It's a pretty good starting point! A lot of thoughts on the design already. And the implementation looks pretty solid too, taking care of a lot of details and corner cases apparently.","username":"benoit.razet","ts":"2018-09-17T17:16:58.543Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=cP9Nc9BTxbGd7nHrg","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=cP9Nc9BTxbGd7nHrg","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@benoit.razet we have a few items on the roadmap that we want to do. one is solve the halting problem (probably by counting costs of instructions, not unlike the EVM but fixed-\"gas limit\", though we are going to try and stick to the solution Parity uses if we can); and then attempting to address determinism (removing the ability to do truly random code execution) - again, by trying to stick to approaches Parity has taken, if possible.","username":"amundson","ts":"2018-09-17T17:28:44.945Z"}
{"msg":"Ahah, I did not think about the determinism! and that's one that is not so easy to solve, right? How do you prevent side-effecty/probabilistic smart contract. Is there a subset of the wasm machine codes that can identified to be deterministic?","username":"benoit.razet","ts":"2018-09-17T17:31:35.749Z"}
{"msg":"I'm not too concern on our side, because we could still lock the contract registry to the `sawtooth.swa.admin` but it is an interesting problem!","username":"benoit.razet","ts":"2018-09-17T17:33:09.292Z"}
{"msg":"I'm not too concerned on our side, because we could still lock the contract registry to the `sawtooth.swa.admin` but it is an interesting problem!","username":"benoit.razet","ts":"2018-09-17T17:33:09.292Z"}
{"msg":"In principle, I'm sure it's too naive, if there was such a subset of wasm opcodes that is deemed deterministic, then the CreateContractAction tp could analyze the `contract` and fail the transaction if it included an opcode that is deemed nondeterministic. I don't understand yet the boundary between the wasm code and Rust/C, for example whether the get_state and set_state functions are wasm code or rust/C. two pointers I was looking at:\nhttps://github.com/hyperledger/sawtooth-sabre/blob/master/sdk/src/lib.rs#L67\nhttps://github.com/hyperledger/sawtooth-sabre/blob/master/sdk/src/externs.rs#L20","username":"benoit.razet","ts":"2018-09-17T17:47:31.414Z"}
{"msg":"Our first part of that will be research, so we don't have the answer yet. I assume it amounts to making rand() not work or more likely making it predictable based on the context the transaction is run in.","username":"amundson","ts":"2018-09-17T17:48:24.798Z"}
{"msg":"yeah, it could involve rewriting the smart contract like that","username":"amundson","ts":"2018-09-17T17:49:06.703Z"}
{"msg":"@benoit.razet those functions are exposed so that the code running within the WASM container can call them. essentially, you start with a fully sandboxed environment and then you expose specific functions to it. those functions are the most likely attack surface for sabre as a result (for executing untrusted code).","username":"amundson","ts":"2018-09-17T17:50:46.340Z"}
{"msg":"@RyanBanks and @agunde know way more implementation details, so they should call me out if I say something incorrect","username":"amundson","ts":"2018-09-17T17:53:06.907Z"}
{"msg":"Has joined the channel.","username":"RyanBanks","ts":"2018-09-17T17:53:07.001Z","type":"uj"}
{"msg":"Thanks @amundson . All this is very exciting!","username":"benoit.razet","ts":"2018-09-17T18:01:09.189Z"}
{"msg":"Any opinion whether it's too soon to start working on deploying it in a running environment, or it is at the same level of robustness/stability as other sawtooth components?","username":"benoit.razet","ts":"2018-09-17T19:01:47.767Z"}
{"msg":"@benoit.razet we haven't committed to backward compatibility yet (of the permission design for example), but we are trying to use it as much as possible when doing app development so we can uncover problems. we also tend to give ourselves an \"out\" and make apps work as both sabre contracts and TPs... for now.","username":"amundson","ts":"2018-09-18T03:25:07.427Z"}
{"msg":"Thanks @amundson that's helpful information.","username":"benoit.razet","ts":"2018-09-18T11:56:06.953Z"}
{"msg":"While trying to run the example using the `installed` container, I noticed some discrepancies between the bash command starting the validator between ./sawtooth-sabre/docker-compose.yaml` and `./sawtooth/docker-compose-installed.yaml`. The main difference is that in the installed mode, the setting entry `sawtooth.swa.administrators` is not set in the genesis block. Is it on purpose or does it need a shineup?","username":"benoit.razet","ts":"2018-09-24T16:17:09.370Z"}
{"msg":"While trying to run the example using the `installed` container, I noticed some discrepancies between the bash command starting the validator between `./sawtooth-sabre/docker-compose.yaml` and `./sawtooth/docker-compose-installed.yaml`. The main difference is that in the installed mode, the setting entry `sawtooth.swa.administrators` is not set in the genesis block. Is it on purpose or does it need a shineup?","username":"benoit.razet","ts":"2018-09-24T16:17:09.370Z"}
{"msg":"While trying to run the example using the `installed` container, I noticed some discrepancies between the bash command starting the validator between `./sawtooth-sabre/docker-compose.yaml` and `./sawtooth-sabre/docker-compose-installed.yaml`. The main difference is that in the installed mode, the setting entry `sawtooth.swa.administrators` is not set in the genesis block. Is it on purpose or does it need a shineup?","username":"benoit.razet","ts":"2018-09-24T16:17:09.370Z"}
{"msg":"https://github.com/hyperledger/sawtooth-sabre/blob/master/docker-compose.yaml#L33","username":"benoit.razet","ts":"2018-09-24T18:11:33.684Z"}
{"msg":"@rbuysse do you recall if that was intentional? ^","username":"amundson","ts":"2018-09-24T18:53:52.014Z"}
{"msg":"it was not deliberately omitted ","username":"rbuysse","ts":"2018-09-24T18:56:28.694Z"}
{"msg":"I am going to be merging this change shortly https://github.com/hyperledger/sawtooth-sabre/pull/11 so if anyone is using sabre from master you will need to add a step to create the namespace registry first and you need to use the admin key to do so. The docs have been updated for the change. Let me know if you have any questions.","username":"agunde","ts":"2018-09-26T14:17:49.991Z"}
{"msg":"^ that has been merged","username":"agunde","ts":"2018-09-26T19:46:22.457Z"}
{"msg":"Has joined the channel.","username":"Dvi 19","ts":"2018-10-01T07:04:48.166Z","type":"uj"}
{"msg":"I have my Sabre TP running, and also installed the sabre CLI","username":"Dvi 19","ts":"2018-10-01T07:05:15.892Z"}
{"msg":"how can I submit an smart contract to the sawtooth blochchain?","username":"Dvi 19","ts":"2018-10-01T07:06:13.766Z"}
{"msg":"I am reading the intkey tutorial at https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#starting-the-network but I don´t find where you define the action of \"multiply\" values","username":"Dvi 19","ts":"2018-10-01T07:24:47.857Z"}
{"msg":"I have created a contract registry and, with the same key, I try to sabre upload --filename ../example/intkey_multiply/intkey_multiply.yaml --url http://rest-api:9708 but I get the error \"Only owners can submit new versions of contracts\"","username":"Dvi 19","ts":"2018-10-01T11:59:59.606Z"}
{"msg":"And I am the owner","username":"Dvi 19","ts":"2018-10-01T12:08:19.622Z"}
{"msg":"How did you create the contract registry?","username":"agunde","ts":"2018-10-01T13:01:04.761Z"}
{"msg":"./sabre cr --create intkey_multiply --owner /root/.sawtooth/keys/root.priv --url http://127.0.0.1:8008\n","username":"Dvi 19","ts":"2018-10-01T13:13:08.233Z"}
{"msg":"it needs to to be the pub key not the priv key","username":"agunde","ts":"2018-10-01T13:14:19.102Z"}
{"msg":"ok sorry","username":"Dvi 19","ts":"2018-10-01T13:22:01.731Z"}
{"msg":"Its no problem. :)","username":"agunde","ts":"2018-10-01T13:23:16.032Z"}
{"msg":"also invalid message again...","username":"Dvi 19","ts":"2018-10-01T13:28:14.065Z"}
{"msg":"how can I remove the smart contract?","username":"Dvi 19","ts":"2018-10-01T13:31:08.137Z"}
{"msg":"contract registry sorry","username":"Dvi 19","ts":"2018-10-01T13:31:29.418Z"}
{"msg":"or update the keys authorized to this contact registry","username":"Dvi 19","ts":"2018-10-01T13:34:03.669Z"}
{"msg":"sabre cr --delete intkey_multiply","username":"agunde","ts":"2018-10-01T13:34:29.190Z"}
{"msg":"`sabre cr --delete intkey_multiply`","username":"agunde","ts":"2018-10-01T13:34:29.190Z"}
{"msg":"Need to be an owner or admin to do so, and there cannot be any contract versions in the registry.","username":"agunde","ts":"2018-10-01T13:34:48.898Z"}
{"msg":"or `sabre cr --update intkey_multiply --owner<key>` to update owners","username":"agunde","ts":"2018-10-01T13:36:13.075Z"}
{"msg":"thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error(\"invalid type: integer `404`, expected struct Link\", line: 1, column: 3)', libcore/result.rs:945:5\nnote: Run with `RUST_BACKTRACE=1` for a backtrace","username":"Dvi 19","ts":"2018-10-01T13:36:21.419Z"}
{"msg":"Looks like you got an 404 back from the rest-api. Check the rest-api and validator logs for possible reasons. ","username":"agunde","ts":"2018-10-01T13:39:02.227Z"}
{"msg":"I am not the owner of intkey_multiply, but I am a sawtooth.swa.administrators:","username":"Dvi 19","ts":"2018-10-01T13:39:11.856Z"}
{"msg":"so, I could delete the contract registry, isnt it?","username":"Dvi 19","ts":"2018-10-01T13:40:38.037Z"}
{"msg":"so, I could delete the contract registry, correct?","username":"Dvi 19","ts":"2018-10-01T13:45:22.992Z"}
{"msg":"Correct","username":"agunde","ts":"2018-10-01T13:59:06.725Z"}
{"msg":"I will revert my nodes to a previous snapshot","username":"Dvi 19","ts":"2018-10-01T14:00:24.103Z"}
{"msg":"error[E0432]: unresolved import `platform::Signal` when compiling the smart contract, any idea?\n","username":"Dvi 19","ts":"2018-10-01T14:00:56.347Z"}
{"msg":"No, I've never seen that before.","username":"agunde","ts":"2018-10-01T14:03:51.550Z"}
{"msg":"\nerror[E0046]: not all trait items implemented, missing: `encode`\n    --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/serialize.rs:1358:1\n","username":"Dvi 19","ts":"2018-10-01T14:05:55.217Z"}
{"msg":"What are you trying to compile?","username":"agunde","ts":"2018-10-01T14:09:39.708Z"}
{"msg":"in sawtooth-sabre/tp","username":"Dvi 19","ts":"2018-10-01T14:10:54.515Z"}
{"msg":"cargo build --target wasm32-unknown-unknown --release\n","username":"Dvi 19","ts":"2018-10-01T14:11:01.436Z"}
{"msg":"to compile the smart contract","username":"Dvi 19","ts":"2018-10-01T14:13:41.669Z"}
{"msg":"sorry","username":"Dvi 19","ts":"2018-10-01T14:14:17.397Z"}
{"msg":"The sabre tp should not be compiled into wasm. Only the smart contracts (tp) that sabre should run. You should just use cargo build for building the sabre transaction processor. ","username":"agunde","ts":"2018-10-01T14:14:18.888Z"}
{"msg":"I was in the incorrect folder","username":"Dvi 19","ts":"2018-10-01T14:14:20.846Z"}
{"msg":"Now I Have created the contract registry with the public key owner","username":"Dvi 19","ts":"2018-10-01T14:25:37.574Z"}
{"msg":"./sabre cr --create intkey_multiply --owner /root/.sawtooth/keys/root.pub --url http://127.0.0.1:8008 ","username":"Dvi 19","ts":"2018-10-01T14:25:38.252Z"}
{"msg":"and still this message: \"message\": \"Only owners can submit new versions of contracts 03e24f31a20246ac7f4f8d947df7287a53885725be82dff6443744b64206749621\"\n","username":"Dvi 19","ts":"2018-10-01T14:26:27.548Z"}
{"msg":"Looks like you are giving --owners a file path string instead of the public key string. ","username":"agunde","ts":"2018-10-01T14:29:36.076Z"}
{"msg":"umm","username":"Dvi 19","ts":"2018-10-01T14:30:45.166Z"}
{"msg":"its true","username":"Dvi 19","ts":"2018-10-01T14:30:49.516Z"}
{"msg":"I'm pretty sure if you compile the sabre tp into a smart contract and deploy it on sabre, you will open a rift in spacetime","username":"jsmitchell","ts":"2018-10-01T14:35:15.999Z"}
{"msg":"I have upload the contract and set the permissions, now when I execute it y receive","username":"Dvi 19","ts":"2018-10-01T16:06:10.647Z"}
{"msg":"\"message\": \"Wasm contract returned invalid transaction: intkey_multiply, 1.0\"\n","username":"Dvi 19","ts":"2018-10-01T16:06:11.259Z"}
{"msg":"./sabre exec --contract intkey_multiply:1.0 --payload /root/sawtooth-sabre/example/intkey_multiply/cli/target/debug/payload  --inputs  1cf126 --outputs  1cf126 --url http://127.0.0.1:8008\n","username":"Dvi 19","ts":"2018-10-01T16:06:27.306Z"}
{"msg":"Did you pre-populate the intkey state first? ","username":"agunde","ts":"2018-10-01T16:08:07.276Z"}
{"msg":"mmm no","username":"Dvi 19","ts":"2018-10-01T16:10:14.716Z"}
{"msg":"what is the command for it?","username":"Dvi 19","ts":"2018-10-01T16:10:34.991Z"}
{"msg":"Take a look at the Sabre application developer guide it walks through that here: https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#intkey-state","username":"agunde","ts":"2018-10-01T16:13:03.141Z"}
{"msg":"so, I need a intkey transaction processor?","username":"Dvi 19","ts":"2018-10-01T16:15:57.548Z"}
{"msg":"how many transaction processor are necessary to run sabre smart contracts?","username":"Dvi 19","ts":"2018-10-01T16:16:11.646Z"}
{"msg":"Intkey is required to run the intkey_multiply example specifically. If you are running an independent smart contract you would only need settings and sabre currently.","username":"agunde","ts":"2018-10-01T16:19:17.784Z"}
{"msg":"thanks @agunde ","username":"Dvi 19","ts":"2018-10-01T16:26:58.699Z"}
{"msg":"is it possible to know the size of a block? this block contains the upload of a sabre smart contact.","username":"Dvi 19","ts":"2018-10-01T16:45:27.528Z"}
{"msg":"How can I start the intkey transaction processor?","username":"Dvi 19","ts":"2018-10-02T07:44:58.251Z"}
{"msg":"Hi @Dvi 19, it is started by the docker-compose file `example/intkey_multiply/docker-compose.yaml` when the network is started https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#starting-the-network\n","username":"benoit.razet","ts":"2018-10-02T12:10:20.578Z"}
{"msg":"the container for the intkey transaction processor is at https://github.com/hyperledger/sawtooth-sabre/blob/master/example/intkey_multiply/docker-compose.yaml#L18","username":"benoit.razet","ts":"2018-10-02T12:10:55.187Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=ftWRWXG4XcuToz9aD) I'm not sure there is a convenience method to get the exact size of a block, that might be more a question for the #sawtooth channel. Using the rest-api you can get a json version of blocks and get the size of that, which relates to the block originally encoded as protobuff. Otherwise, to bypass the jsonification of the block, it's possible to connect directly to the validator through zmq and get the exact block which is a protobuff.","username":"benoit.razet","ts":"2018-10-02T12:20:05.872Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=ftWRWXG4XcuToz9aD","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=ftWRWXG4XcuToz9aD","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@agunde @amundson does Sabre accept external contribution PRs?","username":"benoit.razet","ts":"2018-10-02T13:40:38.376Z"}
{"msg":"I thought I could put a PR with small tweaks based on my recent experience with Sabre. Nothing major, mostly adjusting the docker-compose-installed.yaml that allows to run the tutorial in installed mode and some minor fixes to the documentation.","username":"benoit.razet","ts":"2018-10-02T13:43:15.364Z"}
{"msg":"by the way I was able to test the latest version master with the new `cr` command on the example I developed and it worked :thumbsup: ","username":"benoit.razet","ts":"2018-10-02T13:47:55.081Z"}
{"msg":"PRs are always welcome","username":"jsmitchell","ts":"2018-10-02T13:51:55.329Z"}
{"msg":"Glad it worked for ya. Yes, As jsmitchell said PRs are always welcome, especially ones that fix the docs. ","username":"agunde","ts":"2018-10-02T13:53:51.662Z"}
{"msg":"here is the PR https://github.com/hyperledger/sawtooth-sabre/pull/20\nI hope it's helpful","username":"benoit.razet","ts":"2018-10-02T19:46:01.619Z"}
{"msg":"what is the difference between sabre and seth for using smart contracts in sawtooth?ç","username":"Dvi 19","ts":"2018-10-14T15:14:52.925Z"}
{"msg":"what do you recommend? what is the easy way of implementing smart contracts?","username":"Dvi 19","ts":"2018-10-15T06:41:50.719Z"}
{"msg":"Sabre uses WASM code for smart contracts and are very simular to a normal Sawtooth Transaction processor. Seth uses EVM smart contracts. If you are familiar with how to write a Sawtooth Transaction processor in Rust it is very easy to convert it to a Sabre smart contract. (Assuming all your dependency can be compiled into WASM). If you are familiar with EVM smart contracts that may be easier for you. ","username":"agunde","ts":"2018-10-15T12:54:05.227Z"}
{"msg":"thanks @agunde ","username":"Dvi 19","ts":"2018-10-15T13:12:37.135Z"}
{"msg":"@grapebaba can you elaborate what you mean by \"the sabre project does not support smart contract transaction family right now\"","username":"agunde","ts":"2018-10-18T15:48:55.329Z"}
{"msg":"Has joined the channel.","username":"grapebaba","ts":"2018-10-18T15:48:55.697Z","type":"uj"}
{"msg":"Has joined the channel.","username":"achenette","ts":"2018-10-18T16:52:16.258Z","type":"uj"}
{"msg":"@agunde i checked code, seems it only implement a interkey transaction family right now? Am I missing something?","username":"grapebaba","ts":"2018-10-19T01:56:48.463Z"}
{"msg":"Has joined the channel.","username":"RealDeanZhao","ts":"2018-10-19T02:37:47.907Z","type":"uj"}
{"msg":"Has joined the channel.","username":"prithvikp","ts":"2018-10-19T19:45:14.192Z","type":"uj"}
{"msg":"@grapebaba Do we have any example with sabre tp and how it can be used with a smart contract. Currently what I see is that example even in documentation needs sabre SDK to compile","username":"prithvikp","ts":"2018-10-19T21:26:09.041Z"}
{"msg":"@grapebaba @prithvikp the provided example is intkey-multiply but you can convert any rust transaction processor easily into a sabre smart contract using the Sabre SDK and following the provided documentation (assuming the dependencies can be converted into wasm). ","username":"agunde","ts":"2018-10-22T13:19:55.380Z"}
{"msg":"Has joined the channel.","username":"Dan","ts":"2018-10-22T14:48:12.630Z","type":"uj"}
{"msg":"I think the question in this thread https://lists.hyperledger.org/g/sawtooth/message/454\nIs about the development model with Sabre. Like what needs to be installed.","username":"Dan","ts":"2018-10-22T14:49:27.306Z"}
{"msg":"Thanks @Dan. @agunde I am aware of example and also have it running. But the development model relies on sabre sdk to be available locally.    ","username":"prithvikp","ts":"2018-10-22T16:43:37.494Z"}
{"msg":"In rust you can add the following line to your Cargo.toml file `sabre-sdk = {git = \"https://github.com/hyperledger/sawtooth-sabre\"}` to fetch it from github so it does not have to be local. Sabre is not at a 1.0 yet so the sdk has not been added as a crate yet.  ","username":"agunde","ts":"2018-10-22T16:49:52.068Z"}
{"msg":"I tried using git and it failed on me. ","username":"prithvikp","ts":"2018-10-22T16:51:25.211Z"}
{"msg":"I will try again.","username":"prithvikp","ts":"2018-10-22T16:51:35.080Z"}
{"msg":"That may have been do to a bug we fixed recently. ","username":"agunde","ts":"2018-10-22T16:52:22.063Z"}
{"msg":"That may have been due to a bug we fixed recently. ","username":"agunde","ts":"2018-10-22T16:52:22.063Z"}
{"msg":"Thanks @agunde I will check it again and see if I can get it up and running without a local copy","username":"prithvikp","ts":"2018-10-22T17:43:52.969Z"}
{"msg":"Once you verify if that works could you post the answer to the list (the bit above about editing the cargo file) ?","username":"Dan","ts":"2018-10-22T18:45:39.042Z"}
{"msg":"sure thanks","username":"prithvikp","ts":"2018-10-22T20:47:54.733Z"}
{"msg":"@agunde I was able to use sabre-sdk and was able to compile. However I am not clear is how to use the smart contract to work with sabre-tp. Do I need to use command line (sabre cli). The documentation also does not give examples with sabre-tp but only about cli ","username":"prithvikp","ts":"2018-10-26T15:51:17.103Z"}
{"msg":"@agunde I was able to use sabre-sdk and was able to use sdk however it is failing at this line `cfg_if!`error: cannot find macro `cfg_if!` in this scope. However I am not clear is how to use the smart contract to work with sabre-tp. Do I need to use command line (sabre cli). The documentation also does not give examples with sabre-tp but only about cli ","username":"prithvikp","ts":"2018-10-26T15:51:17.103Z"}
{"msg":"You need to include cfg_if in your Cargo.toml file `cfg-if = \"0.1\"` or you can use` #[cfg(target_arch = \"wasm32\")]` for every line but that gets hard to read.","username":"agunde","ts":"2018-10-26T16:03:15.126Z"}
{"msg":"You need to include cfg_if in your Cargo.toml file `cfg-if = \"0.1\"`  and add a`#[macro_use]` before the import line or you can use` #[cfg(target_arch = \"wasm32\")]` for every line but that gets hard to read.","username":"agunde","ts":"2018-10-26T16:03:15.126Z"}
{"msg":"You can use the sabre-cli to upload the the contract as described here. https://sawtooth.hyperledger.org/docs/sabre/nightly/master/application_developer_guide.html#uploading-contract","username":"agunde","ts":"2018-10-26T16:04:20.065Z"}
{"msg":"It is not clear to me what information you are looking for when you say \"The documentation also does not give examples with sabre-tp but only about cli\"","username":"agunde","ts":"2018-10-26T16:06:19.500Z"}
{"msg":"The cli is submitting the transactions described in https://sawtooth.hyperledger.org/docs/sabre/nightly/master/sabre_transaction_family.html ","username":"agunde","ts":"2018-10-26T16:06:39.854Z"}
{"msg":"Also note there is working being done to improve the documentation by @achenette. PRs and feed back is welcome. ","username":"agunde","ts":"2018-10-26T16:09:11.775Z"}
{"msg":"Also note there is working being done to improve the documentation by @achenette  . PRs and feed back is welcome. ","username":"agunde","ts":"2018-10-26T16:09:11.775Z"}
{"msg":"Sorry for not being clear. I am actually including cfg-if in cargo.toml. [dependencies]\nclap = \"2\"\nprotobuf = \"2\"\ncfg-if = \"0.1\"\nhex = \"0.3.1\"","username":"prithvikp","ts":"2018-10-26T16:13:46.555Z"}
{"msg":"I just edited the comment to say you also need to add ``#[macro_use]`` above the import line for cfg_if","username":"agunde","ts":"2018-10-26T16:16:16.004Z"}
{"msg":"Regarding documentation I was confused regarding the tp ... So if I read it right then we always use CLI to submit smart contract. I was thinking there is a similar pattern to how sawtooth does with batches wherein you can submit smart contract as part of non cli approach like passing a file name through a rest api ","username":"prithvikp","ts":"2018-10-26T16:17:12.503Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=255wJEJJP8346WwRq) @agunde Thanks will try that","username":"prithvikp","ts":"2018-10-26T16:17:21.530Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=255wJEJJP8346WwRq","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=255wJEJJP8346WwRq","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Sabre does not currently have its own api. The cli currently creates the Sabre Transaction, creates the Batch and Batch List and then submits it to the validator's rest-api. You could create the Transactions/Batch yourself if you wish but the cli makes it easier for you. ","username":"agunde","ts":"2018-10-26T16:24:04.459Z"}
{"msg":"Sabre does not currently have its own rest api. The cli currently creates the Sabre Transaction, creates the Batch and Batch List and then submits it to the validator's rest-api. You could create the Transactions/Batch yourself if you wish but the cli makes it easier for you. ","username":"agunde","ts":"2018-10-26T16:24:04.459Z"}
{"msg":"got it","username":"prithvikp","ts":"2018-10-26T16:25:03.967Z"}
{"msg":"Does the sawtooth rest api have a limit on how large a message it will receive? I am working on the settings-tp rust re-write and testing it with sabre.","username":"boydjohnson","ts":"2018-10-29T20:55:12.454Z"}
{"msg":"When I do the `sabre upload` command I don't see any output in the logs.","username":"boydjohnson","ts":"2018-10-29T20:56:05.786Z"}
{"msg":"the wasm-gc utility reduced the size of the wasm by 10x.","username":"boydjohnson","ts":"2018-10-29T21:02:25.682Z"}
{"msg":"Something I was missing was that in `sabre cr` `--owner` is the public key text and you can't use the public key file, so `--owner $(cat /project/keys/root.pub)` works.","username":"boydjohnson","ts":"2018-10-29T21:26:17.691Z"}
{"msg":"^ yep that is by design because the admin running that command may not have access to the actually key files. Doc clarifications are in the works.","username":"agunde","ts":"2018-10-30T13:11:37.443Z"}
{"msg":"@boydjohnson the rest-api does have a limit but it is configurable. you can set it using --client-max-size with the limit in bytes. default is 10mb.","username":"agunde","ts":"2018-10-30T13:13:51.308Z"}
{"msg":"woot ```sabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::handler] Action: Execute Contract [\"00ec01359aee2c476d2649349d77ade2160e5f4becca4f6e7b0dc95b32a502d9f8d45c\", \"00ec027c521358c33f76dadb83dbbc68f63c9bcf7795b6a4d957a2ccf09c75e55db19d\", \"00ec0064fcc6f6bc7a815041b4db51f00f4bea8e51c13b27f422da0a8522c94641c7e4\", \"000000\"] [\"00ec01359aee2c476d2649349d77ade2160e5f4becca4f6e7b0dc95b32a502d9f8d45c\", \"00ec027c521358c33f76dadb83dbbc68f63c9bcf7795b6a4d957a2ccf09c75e55db19d\", \"00ec0064fcc6f6bc7a815041b4db51f00f4bea8e51c13b27f422da0a8522c94641c7e4\", \"000000\"]\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 265\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"000000a87cb5eafdcca6a8cde0fb0dec1400c5ab274474a6aa82c12840f169a04216b7\"]\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 2 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 445\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"000000a87cb5eafdcca6a8cde0fb0dec1400c5ab274474a6aa82c1918142591ba4e8a7\"]\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 2 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 515\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"000000a87cb5eafdcca6a84f03a060b7eb0329cf8faeb36270e74ce3b0c44298fc1c14\"]\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 13 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to set state, address: 000000a87cb5eafdcca6a84f03a060b7eb0329cf8faeb36270e74ce3b0c44298fc1c14\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] SET_STATE Execution time: 0 secs 2 ms\nsabre-tp       | 2018-10-30 15:09:59 INFO  [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: OK```","username":"boydjohnson","ts":"2018-10-30T15:10:57.523Z"}
{"msg":"I was able to commit a settings transaction.","username":"boydjohnson","ts":"2018-10-30T15:11:10.989Z"}
{"msg":"Nice!","username":"agunde","ts":"2018-10-30T15:13:14.846Z"}
{"msg":"Has joined the channel.","username":"JOYELIN","ts":"2018-11-09T08:01:44.532Z","type":"uj"}
{"msg":"Hey, @agunde. @knkski and I work verifying that Identity works with sabre. Identity makes a get call to settings to find `sawtooth.identity.allowed_keys`. We ran settings as a normal tp and did `sawset proposal create` and our identity transaction is failing after the first get request, so I think it can't find the allowed keys. I am a little ignorant on this. I would guess that we have to run settings as a sabre contract, right?","username":"boydjohnson","ts":"2018-11-13T19:55:41.897Z"}
{"msg":"Has joined the channel.","username":"knkski","ts":"2018-11-13T19:55:42.024Z","type":"uj"}
{"msg":"No, you can run settings as tp. Identity smart contract will be calling into state just like any other tp","username":"agunde","ts":"2018-11-13T19:57:00.014Z"}
{"msg":"Dang. I thought that was the problem.","username":"boydjohnson","ts":"2018-11-13T19:59:23.936Z"}
{"msg":"Does sabre support Golang wasm? Is there any example for this?","username":"RealDeanZhao","ts":"2018-11-19T07:00:52.756Z"}
{"msg":"Has joined the channel.","username":"JayeshJawale2","ts":"2018-11-19T09:12:49.330Z","type":"uj"}
{"msg":"Currently, Rust is the only language that there is a Sabre SDK for. ","username":"agunde","ts":"2018-11-19T13:33:59.081Z"}
{"msg":"thanks for rekicking the test!","username":"benoit.razet","ts":"2018-11-20T19:09:07.325Z"}
{"msg":"np","username":"agunde","ts":"2018-11-20T19:10:19.308Z"}
{"msg":"it looks like the Jenkinsfile is picked up from the master branch and not the PR branch","username":"benoit.razet","ts":"2018-11-20T19:52:43.736Z"}
{"msg":"Has joined the channel.","username":"kc1116","ts":"2018-11-30T16:39:44.302Z","type":"uj"}
{"msg":"is sabre only available for rust right now ? ","username":"kc1116","ts":"2018-11-30T16:39:56.210Z"}
{"msg":"That is the only language we currently have an sdk for, yes.","username":"agunde","ts":"2018-11-30T16:41:43.158Z"}
{"msg":"gotcha thanks ","username":"kc1116","ts":"2018-11-30T16:42:24.652Z"}
{"msg":"@benoit.razet https://github.com/hyperledger/sawtooth-sabre/pull/20 needs a rebase. Once that is done I will give it a final review and we can hopefully get it in. ","username":"agunde","ts":"2018-12-11T13:41:31.533Z"}
{"msg":"Thanks @agunde I did the rebase. Unfortunately the jenkins test failed towards the end in the `Archive Build Artifact` part.","username":"benoit.razet","ts":"2018-12-11T17:48:48.528Z"}
{"msg":"@benoit.razet the build on your pr has been restarted so that it will use your updated jenkinsfile. ","username":"agunde","ts":"2018-12-11T18:15:39.191Z"}
{"msg":"@benoit.razet The build passed. I approved the pr and merged it in. Thanks again for your contribution!","username":"agunde","ts":"2018-12-11T20:18:29.114Z"}
{"msg":"Thanks! I had fun looking into sabre","username":"benoit.razet","ts":"2018-12-11T20:29:55.145Z"}
{"msg":"Has joined the channel.","username":"merq","ts":"2018-12-22T03:41:43.947Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rinor","ts":"2019-01-29T09:49:04.671Z","type":"uj"}
{"msg":"Has joined the channel.","username":"seanyoung","ts":"2019-01-31T11:32:26.279Z","type":"uj"}
{"msg":"Has joined the channel.","username":"manojgop","ts":"2019-02-07T11:22:40.849Z","type":"uj"}
{"msg":"Has joined the channel.","username":"colincmcc","ts":"2019-02-10T19:34:45.016Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ed2dword","ts":"2019-02-15T15:06:37.665Z","type":"uj"}
{"msg":"Has joined the channel.","username":"satelander","ts":"2019-02-26T18:42:30.220Z","type":"uj"}
{"msg":"Has joined the channel.","username":"kodonnel","ts":"2019-02-27T21:37:44.997Z","type":"uj"}
{"msg":"Has joined the channel.","username":"atlantisKing","ts":"2019-03-01T05:35:34.368Z","type":"uj"}
{"msg":"Hi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file   and in the container  intkey-multiply-cli    when i am executing `intkey-multiply multiply A B C --output payload`  it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error\nHi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file and in the container intkey-multiply-cli when i am executing `intkey-multiply multiply A B C --output payload` it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error","username":"atlantisKing","ts":"2019-03-01T05:37:02.557Z"}
{"msg":"Hi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-3-generate-the-payload-file and in the container intkey-multiply-cli when i am executing `intkey-multiply multiply A B C --output payload` it gives an error i `bash: intkey-multiply: command not found` what could be the source of this error","username":"atlantisKing","ts":"2019-03-01T05:37:40.642Z"}
{"msg":"@atlantisKing Ill take a look","username":"agunde","ts":"2019-03-01T14:06:48.231Z"}
{"msg":"@atlantisKing Did you wait for the rust code to finish compiling? It can take a while after the the dockerfiles starts up. You should be able to see this line `intkey-multiply-cli    |     Finished dev [unoptimized + debuginfo] target(s) in 11m 06s`","username":"agunde","ts":"2019-03-01T14:28:38.657Z"}
{"msg":"Thanks @agunde it is working now","username":"atlantisKing","ts":"2019-03-05T06:27:53.752Z"}
{"msg":":thumbsup:","username":"agunde","ts":"2019-03-05T11:52:08.385Z"}
{"msg":"Has joined the channel.","username":"MicaelFerreira","ts":"2019-03-06T12:47:06.489Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ra_w","ts":"2019-03-07T05:52:04.135Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rranjan3","ts":"2019-03-11T09:23:16.193Z","type":"uj"}
{"msg":"Has joined the channel.","username":"raghav.aneja14","ts":"2019-03-11T10:07:39.944Z","type":"uj"}
{"msg":"Hi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#compiling-the-contract and it fails at step  *Compiling intkey-multiply v0.1.0 * .It gives error : failed to run custom build command for `intkey-multiply v0.1.0 (/home/ubuntu/sabre/sawtooth-sabre/example/intkey_multiply/processor)` thread 'main' panicked at 'protoc: Custom { kind: NotFound, error: StringError(\"failed to spawn `\\\"protoc\\\" \\\"--version\\\"`: No such file or directory (os error 2)\") }', src/libcore/result.rs:997:5\n ","username":"raghav.aneja14","ts":"2019-03-12T10:19:31.800Z"}
{"msg":"Hi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#compiling-the-contract and it fails at step  *Compiling intkey-multiply v0.1.0 * .It gives error : failed to run custom build command for `intkey-multiply v0.1.0 (/home/ubuntu/sabre/sawtooth-sabre/example/intkey_multiply/processor)` thread 'main' panicked at 'protoc: Custom { kind: NotFound, error: StringError(\"failed to spawn `\\\"protoc\\\" \\\"--version\\\"`: No such file or directory (os error 2)\") }', src/libcore/result.rs:997:5 .. What could be the possible reason ??\n ","username":"raghav.aneja14","ts":"2019-03-12T10:19:31.800Z"}
{"msg":"Hi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-7-execute-the-smart-contract , It returns invalid transaction saying, unauthorized access to 'cad11d....' , so i had created a namespace registry for 'cad11d' and included the same under inputs option for sabre exec cmd. Now it return me \"Invalid Transaction with message :  Wasm contract returned invalid transaction: intkey_multiply, 1.0\n","username":"raghav.aneja14","ts":"2019-03-13T03:40:38.272Z"}
{"msg":"Hi I am following sawtooth sabre guide and on this step https://sawtooth.hyperledger.org/docs/sabre/releases/latest/application_developer_guide.html#step-7-execute-the-smart-contract , It returns invalid transaction saying, unauthorized access to 'cad11d....' , so i had created a namespace registry for 'cad11d' and included the same under inputs option for sabre exec cmd. Now it return me \"Invalid Transaction with message :  Wasm contract returned invalid transaction: intkey_multiply, 1.0\n.What could be the issue and am i missing anything ?","username":"raghav.aneja14","ts":"2019-03-13T03:40:38.272Z"}
{"msg":"Will the smart contract generated by sabre can be accessed by other peers as well, if it is stored on chain","username":"atlantisKing","ts":"2019-03-13T07:09:55.166Z"}
{"msg":"Will the smart contract generated by sabre can be accessed by other peers as well, if it is stored on chain??","username":"atlantisKing","ts":"2019-03-13T07:09:55.166Z"}
{"msg":"Will the smart contract generated by sabre can be accessed by other peers as well, if it is stored on chain??","username":"atlantisKing","ts":"2019-03-13T07:09:55.166Z"}
{"msg":"Will the smart contract generated by sabre can be accessed by other peers as well, if it is stored on chain ?","username":"atlantisKing","ts":"2019-03-13T07:09:55.166Z"}
{"msg":"Will the smart contract generated by sabre can be accessed and invoked  by other peers as well, if it is stored on chain ?","username":"atlantisKing","ts":"2019-03-13T07:09:55.166Z"}
{"msg":"Following are precisely the steps I have followed referring the documentation and test_sabre.rs file : \n\ndocker-compose -f docker-compose.yaml -f example/intkey_multiply/docker-compose.yaml up\n\ndocker exec -it sabre-shell bash\n  \tintkey set B 10 --url http://rest-api:9708\n  \tintkey set C 5 --url http://rest-api:9708\n  \tintkey list --url http://rest-api:9708\n\ndocker exec -it intkey-multiply-cli bash\n\tcd /project/example/intkey_multiply/cli\n\tintkey-multiply multiply A B C --output payload\n\ndocker exec -it sabre-cli bash\n\tcat /root/.sawtooth/keys/root.pub\n\n\tsabre cr --create pike --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre upload --filename ../contracts/sawtooth-pike/pike.yaml --url http://rest-api:9708\n\tsabre ns --create cad11d --owner test_owner --url http://rest-api:9708\n\tsabre perm cad11d pike --read --write --url http://rest-api:9708\n\t \n\tsabre cr --create intkey_multiply --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre upload --filename ../example/intkey_multiply/intkey_multiply.yaml --url http://rest-api:9708\n\t \n\tsabre ns --create 1cf126 --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre ns --create 00ec03 --owner test_owner --url http://rest-api:9708\n\n\tsabre perm  1cf126 intkey_multiply --read --write --url http://rest-api:9708\n\tsabre perm  cad11d intkey_multiply --read --write --url http://rest-api:9708\n    sabre perm  00ec03 intkey_multiply --read --write --url http://rest-api:9708\n\n\n\tsabre exec --contract intkey_multiply:1.0 \\\n\t  --payload /project/example/intkey_multiply/cli/payload  \\\n\t  --inputs 1cf126 cad11d 00ec03 \\\n\t  --outputs 1cf126 \\\n\t  --url http://rest-api:9708\n\nBut still I am getting invalid transaction error : \n\n\tAttempting to get state, addresses: [\"cad11d0073315e886fc4c5c10fa16d089e1d3d809c72793393447ccac422d35fb772b2\"]\n\tsabre-tp               | 2019-03-13 08:44:29 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 3 ms\n\tsabre-tp               | 2019-03-13 08:44:29 INFO  [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply, 1.0\n\nWhat is it that I am doing wrong or missing ??","username":"raghav.aneja14","ts":"2019-03-13T08:49:38.341Z"}
{"msg":"Following are precisely the steps I have followed referring the documentation and test_sabre.rs file : \n\ndocker-compose -f docker-compose.yaml -f example/intkey_multiply/docker-compose.yaml up\n\ndocker exec -it sabre-shell bash\n  \tintkey set B 10 --url http://rest-api:9708\n  \tintkey set C 5 --url http://rest-api:9708\n  \tintkey list --url http://rest-api:9708\n\ndocker exec -it intkey-multiply-cli bash\n\tcd /project/example/intkey_multiply/cli\n\tintkey-multiply multiply A B C --output payload\n\ndocker exec -it sabre-cli bash\n\tcat /root/.sawtooth/keys/root.pub\n\n\tsabre cr --create pike --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre upload --filename ../contracts/sawtooth-pike/pike.yaml --url http://rest-api:9708\n\tsabre ns --create cad11d --owner test_owner --url http://rest-api:9708\n\tsabre perm cad11d pike --read --write --url http://rest-api:9708\n\t \n\tsabre cr --create intkey_multiply --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre upload --filename ../example/intkey_multiply/intkey_multiply.yaml --url http://rest-api:9708\n\t \n\tsabre ns --create 1cf126 --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre ns --create 00ec03 --owner test_owner --url http://rest-api:9708\n\n\tsabre perm  1cf126 intkey_multiply --read --write --url http://rest-api:9708\n\tsabre perm  cad11d intkey_multiply --read --write --url http://rest-api:9708\n    sabre perm  00ec03 intkey_multiply --read --write --url http://rest-api:9708\n\n\n\tsabre exec --contract intkey_multiply:1.0 \\\n\t  --payload /project/example/intkey_multiply/cli/payload  \\\n\t  --inputs 1cf126 cad11d 00ec03 \\\n\t  --outputs 1cf126 \\\n\t  --url http://rest-api:9708\n\nBut still I am getting invalid transaction error : \n\n\tAttempting to get state, addresses: [\"cad11d0073315e886fc4c5c10fa16d089e1d3d809c72793393447ccac422d35fb772b2\"]\n\tsabre-tp               | 2019-03-13 08:44:29 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 3 ms\n\tsabre-tp               | 2019-03-13 08:44:29 INFO  [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply, 1.0\n\nWhat is it that I am doing wrong or missing ??","username":"raghav.aneja14","ts":"2019-03-13T08:49:38.341Z"}
{"msg":"Hi @agunde  ,,Following are precisely the steps I have followed referring the documentation and test_sabre.rs file : \n\ndocker-compose -f docker-compose.yaml -f example/intkey_multiply/docker-compose.yaml up\n\ndocker exec -it sabre-shell bash\n  \tintkey set B 10 --url http://rest-api:9708\n  \tintkey set C 5 --url http://rest-api:9708\n  \tintkey list --url http://rest-api:9708\n\ndocker exec -it intkey-multiply-cli bash\n\tcd /project/example/intkey_multiply/cli\n\tintkey-multiply multiply A B C --output payload\n\ndocker exec -it sabre-cli bash\n\tcat /root/.sawtooth/keys/root.pub\n\n\tsabre cr --create pike --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre upload --filename ../contracts/sawtooth-pike/pike.yaml --url http://rest-api:9708\n\tsabre ns --create cad11d --owner test_owner --url http://rest-api:9708\n\tsabre perm cad11d pike --read --write --url http://rest-api:9708\n\t \n\tsabre cr --create intkey_multiply --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre upload --filename ../example/intkey_multiply/intkey_multiply.yaml --url http://rest-api:9708\n\t \n\tsabre ns --create 1cf126 --owner 03aa98bd16ba7da4c31a5a9daeee57dba3c469e5c868bc5026297ab6376be3bf88 --url http://rest-api:9708\n\tsabre ns --create 00ec03 --owner test_owner --url http://rest-api:9708\n\n\tsabre perm  1cf126 intkey_multiply --read --write --url http://rest-api:9708\n\tsabre perm  cad11d intkey_multiply --read --write --url http://rest-api:9708\n    sabre perm  00ec03 intkey_multiply --read --write --url http://rest-api:9708\n\n\n\tsabre exec --contract intkey_multiply:1.0 \\\n\t  --payload /project/example/intkey_multiply/cli/payload  \\\n\t  --inputs 1cf126 cad11d 00ec03 \\\n\t  --outputs 1cf126 \\\n\t  --url http://rest-api:9708\n\nBut still I am getting invalid transaction error : \n\n\tAttempting to get state, addresses: [\"cad11d0073315e886fc4c5c10fa16d089e1d3d809c72793393447ccac422d35fb772b2\"]\n\tsabre-tp               | 2019-03-13 08:44:29 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 3 ms\n\tsabre-tp               | 2019-03-13 08:44:29 INFO  [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply, 1.0\n\nWhat is it that I am doing wrong or missing ??","username":"raghav.aneja14","ts":"2019-03-13T08:49:38.341Z"}
{"msg":"There are two commands that were not added to the sabre app dev guide properly they are the following:","username":"agunde","ts":"2019-03-13T13:41:34.857Z"}
{"msg":"@raghav.aneja14 There are two commands that were not added to the sabre app dev guide properly  when smart permissions were added. They are the following:\n\n`sabre exec --contract pike:1.0 --payload /project/integration/payloads/create_org --inputs cad11d --outputs cad11d --url http://rest-api:9708` to create the organization in pike\n\nand \n\n`sabre sp --url http://rest-api:9708 --wait 300 create FooOrg000 test --filename /project/contracts/sawtooth-pike/examples/intkey/target/wasm32-unknown-unknown/release/intkey.wasm` to add the smart permission  used by intkey_multiply.wasm\n\nYou can see that they are used in the test. I will make sure the guide gets updated. ","username":"agunde","ts":"2019-03-13T13:51:40.334Z"}
{"msg":"Note that if you were to write your own smart contract to not use pike, theses steps would not be needed. But intkey_mutiply is an example used to highlight both running a sabre smart contract and using smart permissions within the contract. ","username":"agunde","ts":"2019-03-13T13:53:33.364Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=oCKC2v9vy4jENh3ji) @agunde It worked. Thanks !! \nAnd 1 quick question : Where exactly the changes have to be made if I wish to avoid smart permissions & pike ?","username":"raghav.aneja14","ts":"2019-03-14T04:57:14.423Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=oCKC2v9vy4jENh3ji","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=oCKC2v9vy4jENh3ji","remote":true,"fileId":null,"fileName":null}]}
{"msg":"@raghav.aneja14 you do  not need to set up the pike namespace, upload the  pike contract etc, and then you would not run the above commands.","username":"agunde","ts":"2019-03-14T13:04:04.107Z"}
{"msg":"And you would not include the pike namespace in the inputs for your execute command","username":"agunde","ts":"2019-03-14T13:04:56.200Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=QnSKrASeWxwXMdfim) @agunde got it, I tried the same way and works pretty well","username":"raghav.aneja14","ts":"2019-03-26T04:18:41.957Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=QnSKrASeWxwXMdfim","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=QnSKrASeWxwXMdfim","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=QnSKrASeWxwXMdfim) @agunde got it, I tried the same way and works pretty well.. Thanks!!","username":"raghav.aneja14","ts":"2019-03-26T04:18:41.957Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=QnSKrASeWxwXMdfim","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=QnSKrASeWxwXMdfim","remote":true,"fileId":null,"fileName":null}]}
{"msg":":thumbsup:","username":"agunde","ts":"2019-03-26T12:57:51.490Z"}
{"msg":"","username":"atlantisKing","ts":"2019-03-29T10:27:09.921Z","attachments":[{"type":"file","title":"Clipboard - March 29, 2019 3:56 PM","title_link":"/file-upload/ZeRdJz2MMnjHb4JGz/Clipboard%20-%20March%2029,%202019%203:56%20PM","image_url":"/file-upload/ZeRdJz2MMnjHb4JGz/Clipboard%20-%20March%2029,%202019%203:56%20PM","image_type":"image/png","image_size":17360,"url":"/file-upload/ZeRdJz2MMnjHb4JGz/Clipboard%20-%20March%2029,%202019%203:56%20PM","remote":false,"fileId":"ZeRdJz2MMnjHb4JGz","fileName":"Clipboard - March 29, 2019 3:56 PM"}]}
{"msg":"","username":"atlantisKing","ts":"2019-03-29T12:41:48.167Z","attachments":[{"type":"file","title":"Clipboard - March 29, 2019 6:10 PM","title_link":"/file-upload/r4N43LSG9HRxT3STJ/Clipboard%20-%20March%2029,%202019%206:10%20PM","image_url":"/file-upload/r4N43LSG9HRxT3STJ/Clipboard%20-%20March%2029,%202019%206:10%20PM","image_type":"image/png","image_size":126786,"url":"/file-upload/r4N43LSG9HRxT3STJ/Clipboard%20-%20March%2029,%202019%206:10%20PM","remote":false,"fileId":"r4N43LSG9HRxT3STJ","fileName":"Clipboard - March 29, 2019 6:10 PM"}]}
{"msg":"","username":"atlantisKing","ts":"2019-03-29T12:41:48.167Z","attachments":[{"type":"file","title":"Clipboard - March 29, 2019 6:10 PM","title_link":"/file-upload/r4N43LSG9HRxT3STJ/Clipboard%20-%20March%2029,%202019%206:10%20PM","image_url":"/file-upload/r4N43LSG9HRxT3STJ/Clipboard%20-%20March%2029,%202019%206:10%20PM","image_type":"image/png","image_size":126786,"url":"/file-upload/r4N43LSG9HRxT3STJ/Clipboard%20-%20March%2029,%202019%206:10%20PM","remote":false,"fileId":"r4N43LSG9HRxT3STJ","fileName":"Clipboard - March 29, 2019 6:10 PM"}]}
{"msg":"@agunde ","username":"atlantisKing","ts":"2019-03-29T12:42:15.872Z"}
{"msg":"@atlantisKing what are you trying to execute in sabre?","username":"agunde","ts":"2019-03-29T14:30:22.094Z"}
{"msg":"I am following the developer guide only and followed every step after executing this command ```\n\n``` ","username":"atlantisKing","ts":"2019-03-29T16:44:08.197Z"}
{"msg":"I am following the developer guide only and followed every step after executing this command ```\n\n``` ","username":"atlantisKing","ts":"2019-03-29T16:44:08.197Z"}
{"msg":"I am following the developer guide only and followed every step after executing this command ```\nsabre exec --contract intkey_multiply:1.0 \\\n  --payload /project/example/intkey_multiply/cli/payload  \\\n  --inputs  1cf126 --outputs  1cf126 --url http://rest-api:9708\n``` \n","username":"atlantisKing","ts":"2019-03-29T16:44:08.197Z"}
{"msg":"@agunde  I am following the developer guide only and followed every step after executing this command ```\nsabre exec --contract intkey_multiply:1.0 \\\n  --payload /project/example/intkey_multiply/cli/payload  \\\n  --inputs  1cf126 --outputs  1cf126 --url http://rest-api:9708\n``` \n","username":"atlantisKing","ts":"2019-03-29T16:44:08.197Z"}
{"msg":"Has joined the channel.","username":"kumble","ts":"2019-04-02T07:05:56.185Z","type":"uj"}
{"msg":"There is now a 0-1 branch for Sabre https://github.com/hyperledger/sawtooth-sabre/tree/0-1 . Sabre is going to be updated to work with 0.3 of the Rust SDK (current master of https://github.com/hyperledger/sawtooth-sdk-rust). If you are using the Sabre SDK and are pointing at the github master please update to use the 0-1 branch or the published crate `sabre-sdk = \"0.1.3\"`","username":"agunde","ts":"2019-04-02T19:59:25.157Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB) @agunde code is failing at this snippet of file wasm_module.rs of the to ```\n let result = instance.invoke_export(\n            \"entrypoint\",\n            &vec![\n                RuntimeValue::I32(payload_ptr),\n                RuntimeValue::I32(signer_ptr),\n                RuntimeValue::I32(signature_ptr),\n            ],\n            &mut env,\n        )?;\n``` ","username":"atlantisKing","ts":"2019-04-03T06:19:26.076Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB) @agunde code is failing at this snippet of file wasm_module.rs of tp ```\n let result = instance.invoke_export(\n            \"entrypoint\",\n            &vec![\n                RuntimeValue::I32(payload_ptr),\n                RuntimeValue::I32(signer_ptr),\n                RuntimeValue::I32(signature_ptr),\n            ],\n            &mut env,\n        )?;\n``` ","username":"atlantisKing","ts":"2019-04-03T06:19:26.076Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB) @agunde code is failing at this snippet of file wasm_module.rs of tp/src/wasm_executer line number 52 ```\n let result = instance.invoke_export(\n            \"entrypoint\",\n            &vec![\n                RuntimeValue::I32(payload_ptr),\n                RuntimeValue::I32(signer_ptr),\n                RuntimeValue::I32(signature_ptr),\n            ],\n            &mut env,\n        )?;\n``` ","username":"atlantisKing","ts":"2019-04-03T06:19:26.076Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=GTh3QggbmxYjSRxqB","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Do you know if the intkey_mulitply contract compiled into wasm correctly and was uploaded successfully? I have not run into this issue.","username":"agunde","ts":"2019-04-03T12:28:58.502Z"}
{"msg":"Do you know if the intkey_mulitply contract compiled into wasm correctly and was uploaded successfully? I have not run into this issue with the current master.","username":"agunde","ts":"2019-04-03T12:28:58.502Z"}
{"msg":"Sabre has been updated to work with the newest version of the rust sdk https://github.com/hyperledger/sawtooth-sabre/pull/51 If you have any questions please let me know. This PR also includes some changes to the example intkey_mulitply and application developers guide that allows for running intkey_mutiply without setting pike state and adds two missing commands for setting up the pike namespace. ","username":"agunde","ts":"2019-04-05T16:45:31.127Z"}
{"msg":"Has joined the channel.","username":"achala","ts":"2019-04-10T04:57:55.548Z","type":"uj"}
{"msg":"Hi, I have gone through sawtooth sabre, need some clarification \n1. How sabre is running on blockchain( hyperledger sawttoth)\n2. How to interact with other peers using sabre? or how transaction is happening?\n3. Where it is storing and how can I check the transaction state (running transaction and pervious with peer address)\n4. Where can I get the instruction format to write the contract in Rust","username":"achala","ts":"2019-04-10T05:10:59.908Z"}
{"msg":"Hi, I have gone through sawtooth sabre, need some clarification \n1. How sabre is running on blockchain( hyperledger sawttoth)\n2. How to interact with other peers using sabre? or how transaction is happening?\n3. Where it is storing and how can I check the transaction state (running transaction and pervious with peer address)","username":"achala","ts":"2019-04-10T05:10:59.908Z"}
{"msg":"Hello @AchalaSB. 1. Sabre is a transaction processor and will talk to the Sawtooth Validator as any other transaction processor does. 2. Im not sure exactly what you are asking here but the Sawtooth validators talk to each other over gossip and send the transactions and blocks around for validation. 3. Sabre transaction state is also stored in Sawtooth's global state like any other transactions processed by a stand alone transaction  processor. This is the list of provided endpoints in the Sawtooth Rest API https://sawtooth.hyperledger.org/docs/core/nightly/master/rest_api/endpoint_specs.html 4. Here is the example of how to write a transaction processor in rust https://sawtooth.hyperledger.org/docs/core/nightly/master/app_developers_guide/rust_sdk.html that then explains how to turn it into a Sabre smart contract https://sawtooth.hyperledger.org/docs/sabre/nightly/master/application_developer_guide.html","username":"agunde","ts":"2019-04-10T13:18:42.718Z"}
{"msg":"A new version of the Sabre-sdk has been released on crates https://crates.io/crates/sabre-sdk","username":"agunde","ts":"2019-04-12T12:59:32.896Z"}
{"msg":"Has joined the channel.","username":"madushankaf","ts":"2019-04-24T20:18:50.713Z","type":"uj"}
{"msg":"Has joined the channel.","username":"JMIsham","ts":"2019-04-27T18:02:52.652Z","type":"uj"}
{"msg":"Hi, I'm currently trying to follow sabre intkey_multiply example in a pbft environment. I'm wokring with sabre 0.1.4 version. when I tried to execute the smart contract, I got this error \n\n","username":"JMIsham","ts":"2019-04-27T18:05:19.572Z"}
{"msg":"Hi @agunde , I'm currently trying to follow sabre intkey_multiply example in a pbft environment. I'm wokring with sabre 0.1.4 version. when I tried to execute the smart contract, I got this error \n\n","username":"JMIsham","ts":"2019-04-27T18:05:19.572Z"}
{"msg":"Hi @agunde , I'm currently trying to follow sabre intkey_multiply example in a pbft environment. I'm wokring with sabre `0.1.4` version. when I tried to execute the smart contract, I got this error \n\n","username":"JMIsham","ts":"2019-04-27T18:05:19.572Z"}
{"msg":"`2019-04-27 18:05:56 INFO  [sawtooth_sdk::processor] Message: 2db955fdac794a71acf7afabea8b1616\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::handler] Action: Execute Contract [\"00ec01f82be17e8d9f2168c4684179b4c26d4a0ea86ae505af8a1711d4be48fb265277\", \"00ec02abaf60e2a83b7362aa98b4f929b58b68e606b46fce2b4f5ec236c0f59bba3139\", \"00ec0078fe085f6edb13bbd519c9282dff5d7fc3bc4966867eaac0cf2b21ffd3622ecd\", \"00ec00d4eb478d386d0d216048a54575feda3450f2fcc42b3d15f80e258c16010da412\", \"1cf126\", \"cad11d\"] [\"00ec01f82be17e8d9f2168c4684179b4c26d4a0ea86ae505af8a1711d4be48fb265277\", \"00ec02abaf60e2a83b7362aa98b4f929b58b68e606b46fce2b4f5ec236c0f59bba3139\", \"00ec0078fe085f6edb13bbd519c9282dff5d7fc3bc4966867eaac0cf2b21ffd3622ecd\", \"1cf126\"]\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-27 18:05:56 INFO  [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply2, 1.0\n`","username":"JMIsham","ts":"2019-04-27T18:06:24.212Z"}
{"msg":"```\n\n``` ","username":"JMIsham","ts":"2019-04-27T18:07:04.533Z"}
{"msg":"```2019-04-27 18:05:56 INFO  [sawtooth_sdk::processor] Message: 2db955fdac794a71acf7afabea8b1616\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::handler] Action: Execute Contract [\"00ec01f82be17e8d9f2168c4684179b4c26d4a0ea86ae505af8a1711d4be48fb265277\", \"00ec02abaf60e2a83b7362aa98b4f929b58b68e606b46fce2b4f5ec236c0f59bba3139\", \"00ec0078fe085f6edb13bbd519c9282dff5d7fc3bc4966867eaac0cf2b21ffd3622ecd\", \"00ec00d4eb478d386d0d216048a54575feda3450f2fcc42b3d15f80e258c16010da412\", \"1cf126\", \"cad11d\"] [\"00ec01f82be17e8d9f2168c4684179b4c26d4a0ea86ae505af8a1711d4be48fb265277\", \"00ec02abaf60e2a83b7362aa98b4f929b58b68e606b46fce2b4f5ec236c0f59bba3139\", \"00ec0078fe085f6edb13bbd519c9282dff5d7fc3bc4966867eaac0cf2b21ffd3622ecd\", \"1cf126\"]\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-27 18:05:56 INFO  [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply2, 1.0\n```","username":"JMIsham","ts":"2019-04-27T18:07:33.931Z"}
{"msg":"```2019-04-27 18:05:56 INFO  [sawtooth_sdk::processor] Message: 2db955fdac794a71acf7afabea8b1616\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::handler] Action: Execute Contract [\"00ec01f82be17e8d9f2168c4684179b4c26d4a0ea86ae505af8a1711d4be48fb265277\", \"00ec02abaf60e2a83b7362aa98b4f929b58b68e606b46fce2b4f5ec236c0f59bba3139\", \"00ec0078fe085f6edb13bbd519c9282dff5d7fc3bc4966867eaac0cf2b21ffd3622ecd\", \"00ec00d4eb478d386d0d216048a54575feda3450f2fcc42b3d15f80e258c16010da412\", \"1cf126\", \"cad11d\"] [\"00ec01f82be17e8d9f2168c4684179b4c26d4a0ea86ae505af8a1711d4be48fb265277\", \"00ec02abaf60e2a83b7362aa98b4f929b58b68e606b46fce2b4f5ec236c0f59bba3139\", \"00ec0078fe085f6edb13bbd519c9282dff5d7fc3bc4966867eaac0cf2b21ffd3622ecd\", \"1cf126\"]\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-27 18:05:56 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-27 18:05:56 INFO  [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply, 1.0\n```","username":"JMIsham","ts":"2019-04-27T18:07:33.931Z"}
{"msg":"these are the commands I used \n``` \nintkey set B 5\nintkey set C 10\n\nsabre cr --create intkey_multiply --owner 03e2b277454209d4e358a3cc2df167af859c06807ac67378e5e2807cbf84904ed9 --url http://127.0.0.1:8008\nsabre upload --filename /home/ubuntu/intkey_multiply.yaml  --url http://127.0.0.1:8008 \n\nsabre ns --create 1cf126 --owner 03e2b277454209d4e358a3cc2df167af859c06807ac67378e5e2807cbf84904ed9 --url http://127.0.0.1:8008\nsabre perm  1cf126 intkey_multiply --read --write --url http://127.0.0.1:8008\n\nsabre ns --create cad11d --owner 03e2b277454209d4e358a3cc2df167af859c06807ac67378e5e2807cbf84904ed9 --url http://127.0.0.1:8008\nsabre perm  cad11d intkey_multiply --read --url http://127.0.0.1:8008\n\nsabre exec --contract intkey_multiply:1.0 --payload /home/ubuntu/payload --inputs  1cf126 --inputs cad11d --outputs  1cf126 --url http://127.0.0.1:8008\n```","username":"JMIsham","ts":"2019-04-27T18:17:36.262Z"}
{"msg":"Has joined the channel.","username":"Dipspaw","ts":"2019-04-29T12:38:00.866Z","type":"uj"}
{"msg":"@JMIsham What version of the intkey_multiply transaction are you using, are you on current master of sawtooth-sabre?","username":"agunde","ts":"2019-04-29T13:03:59.344Z"}
{"msg":"@agunde , tag v0.1.4","username":"JMIsham","ts":"2019-04-29T17:34:40.826Z"}
{"msg":"when I installed sawtooh-sabre and abre-cli, that was the version got installed","username":"JMIsham","ts":"2019-04-29T17:35:09.925Z"}
{"msg":"so I also built the wasm from v0.1.4 tag","username":"JMIsham","ts":"2019-04-29T17:35:34.811Z"}
{"msg":"I did not do anything related pike except, setting the read permision for the cad11d namespace ","username":"JMIsham","ts":"2019-04-29T17:36:24.845Z"}
{"msg":"do you think building the sabre, cli and the example from the current master branch would work?","username":"JMIsham","ts":"2019-04-29T17:37:20.465Z"}
{"msg":"only using the above commands ","username":"JMIsham","ts":"2019-04-29T17:37:32.497Z"}
{"msg":"@JMIsham To follow the documentation you need the master version of the intkey_multiple smart contract. The old version enforces that you set up a pike organization (so an agent is created) otherwise the intkey_multiply transaction will be invalid. The new one skips that check if the pike agent is missing. ","username":"agunde","ts":"2019-04-29T18:28:00.854Z"}
{"msg":"Has joined the channel.","username":"shonjs","ts":"2019-04-30T02:19:07.349Z","type":"uj"}
{"msg":"@agunde , I was able to build the tp and the cli from the master. now I'm getting a different error","username":"JMIsham","ts":"2019-04-30T06:38:40.469Z"}
{"msg":"``` 2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 1 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126516bd083bfcce66121a3072646994c8430cc382b8dc543e84880183bf856cff5\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 9 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126439caf5e61ec88c307c7d619195229412eaa73fb2a5ea20d23cc86a9d8f86a0f\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] associating pointers: [410, 480]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Collection found elements in collection: 2\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 0\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 1\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 480\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 484\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126014c48c4384ee5c5a54e7830e45fcd87df7910a7fda77b68c2efdd75f8de25e8\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 4 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 554\n```","username":"JMIsham","ts":"2019-04-30T06:38:58.254Z"}
{"msg":"``` 2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 1 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126516bd083bfcce66121a3072646994c8430cc382b8dc543e84880183bf856cff5\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 9 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126439caf5e61ec88c307c7d619195229412eaa73fb2a5ea20d23cc86a9d8f86a0f\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] associating pointers: [410, 480]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Collection found elements in collection: 2\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 0\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 1\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 480\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 484\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126014c48c4384ee5c5a54e7830e45fcd87df7910a7fda77b68c2efdd75f8de25e8\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 4 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 554\n```","username":"JMIsham","ts":"2019-04-30T06:38:58.254Z"}
{"msg":"``` 2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 1 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126516bd083bfcce66121a3072646994c8430cc382b8dc543e84880183bf856cff5\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 9 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126439caf5e61ec88c307c7d619195229412eaa73fb2a5ea20d23cc86a9d8f86a0f\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] associating pointers: [410, 480]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Collection found elements in collection: 2\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 0\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 1\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 480\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 484\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126014c48c4384ee5c5a54e7830e45fcd87df7910a7fda77b68c2efdd75f8de25e8\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 4 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 554\n```","username":"JMIsham","ts":"2019-04-30T06:38:58.254Z"}
{"msg":"``` 2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 1 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126516bd083bfcce66121a3072646994c8430cc382b8dc543e84880183bf856cff5\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 9 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126439caf5e61ec88c307c7d619195229412eaa73fb2a5ea20d23cc86a9d8f86a0f\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] associating pointers: [410, 480]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Collection found elements in collection: 2\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 0\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 1\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 480\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 484\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126014c48c4384ee5c5a54e7830e45fcd87df7910a7fda77b68c2efdd75f8de25e8\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 4 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 5542019-04-30 06:41:40 INFO  [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply2, 1.0\n\n```\n","username":"JMIsham","ts":"2019-04-30T06:38:58.254Z"}
{"msg":"``` 2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 1 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126516bd083bfcce66121a3072646994c8430cc382b8dc543e84880183bf856cff5\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 9 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126439caf5e61ec88c307c7d619195229412eaa73fb2a5ea20d23cc86a9d8f86a0f\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] associating pointers: [410, 480]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Collection found elements in collection: 2\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 0\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 1\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 480\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 484\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126014c48c4384ee5c5a54e7830e45fcd87df7910a7fda77b68c2efdd75f8de25e8\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 4 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 5542019-04-30 06:41:40 INFO \n [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply2, 1.0\n```\n","username":"JMIsham","ts":"2019-04-30T06:38:58.254Z"}
{"msg":"``` 2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 1 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126516bd083bfcce66121a3072646994c8430cc382b8dc543e84880183bf856cff5\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 9 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126439caf5e61ec88c307c7d619195229412eaa73fb2a5ea20d23cc86a9d8f86a0f\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] associating pointers: [410, 480]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Collection found elements in collection: 2\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 0\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 1\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 480\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 484\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126014c48c4384ee5c5a54e7830e45fcd87df7910a7fda77b68c2efdd75f8de25e8\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 4 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 5542019-04-30 06:41:40 INFO \n [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply2, 1.0\n```\n","username":"JMIsham","ts":"2019-04-30T06:38:58.254Z"}
{"msg":"``` 2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Payload written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signer written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_module] Signature written to memory\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 200\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"cad11d00a4dbd9e65006fc4f580b14eac30479569415462898a45f86414a57a8a010ba\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 1 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 270\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126516bd083bfcce66121a3072646994c8430cc382b8dc543e84880183bf856cff5\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 9 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 340\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126439caf5e61ec88c307c7d619195229412eaa73fb2a5ea20d23cc86a9d8f86a0f\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] associating pointers: [410, 480]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 10 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Collection found elements in collection: 2\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 0\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 410\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving pointer head_ptr: 410 index: 1\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Pointer retrieved: 480\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] ALLOC Execution time: 0 secs 0 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] create_collection: 484\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Attempting to get state, addresses: [\"1cf126014c48c4384ee5c5a54e7830e45fcd87df7910a7fda77b68c2efdd75f8de25e8\"]\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] GET_STATE Execution time: 0 secs 4 ms\n2019-04-30 06:37:47 INFO  [sawtooth_sabre::wasm_executor::wasm_externals] Retrieving collection length. Head pointer 554\n2019-04-30 06:41:40 INFO [sawtooth_sdk::processor] TP_PROCESS_REQUEST sending TpProcessResponse: Wasm contract returned invalid transaction: intkey_multiply2, 1.0\n```\n","username":"JMIsham","ts":"2019-04-30T06:38:58.254Z"}
{"msg":"does it seems like contract doesn't have the permission to write ?","username":"JMIsham","ts":"2019-04-30T06:39:43.293Z"}
{"msg":"does sabre depends on sawtooth-pike? There are some code about pike in sabre repo.","username":"RealDeanZhao","ts":"2019-04-30T08:06:27.467Z"}
{"msg":"when it comes to smart permission we need pike, otherwise we can skip pike ","username":"JMIsham","ts":"2019-04-30T09:33:44.503Z"}
{"msg":"@RealDeanZhao JMIsham is correct, if you wish to use smart permissions then your would use pike to provide the agents and organization. But otherwise you do not need to use pike.","username":"agunde","ts":"2019-04-30T13:06:50.885Z"}
{"msg":"@JMIsham Did you setup the intkey state when you reran the docker-compose file?","username":"agunde","ts":"2019-04-30T13:07:17.450Z"}
{"msg":"@agunde , I'm not using the docker environment ","username":"JMIsham","ts":"2019-04-30T16:38:35.963Z"}
{"msg":"I have 4 aws instance running, and using 4 aws instances with pbft consensus engine  ","username":"JMIsham","ts":"2019-04-30T16:39:44.124Z"}
{"msg":"I have 4 aws instance running, with pbft consensus engine  ","username":"JMIsham","ts":"2019-04-30T16:39:44.124Z"}
{"msg":"can you see what is in intkey state?","username":"agunde","ts":"2019-04-30T16:40:51.033Z"}
{"msg":"u mean `intkey list`","username":"JMIsham","ts":"2019-04-30T16:41:11.425Z"}
{"msg":"yep","username":"agunde","ts":"2019-04-30T16:41:16.869Z"}
{"msg":"?","username":"JMIsham","ts":"2019-04-30T16:41:17.534Z"}
{"msg":"both B and C were set","username":"JMIsham","ts":"2019-04-30T16:41:31.072Z"}
{"msg":"We dont need to initiate A right?","username":"JMIsham","ts":"2019-04-30T16:41:51.373Z"}
{"msg":"And your payload is to set A? No, you should not need to initiate A. ","username":"agunde","ts":"2019-04-30T16:42:29.533Z"}
{"msg":"yeah payload is 'A,B,C`","username":"JMIsham","ts":"2019-04-30T16:43:10.332Z"}
{"msg":"yeah payload is `A,B,C`","username":"JMIsham","ts":"2019-04-30T16:43:10.332Z"}
{"msg":"I just copied the paylod file generated when I was running docker environment and past it in the instance where I'm running the sabre ","username":"JMIsham","ts":"2019-04-30T16:44:04.524Z"}
{"msg":"when we see the logs, it seems attempting to get the last state was failed, isn't it?","username":"JMIsham","ts":"2019-04-30T16:45:03.296Z"}
{"msg":"Yes that what it looks like","username":"agunde","ts":"2019-04-30T16:45:40.262Z"}
{"msg":"FYI, I was able to successfully run it in the docker environment ","username":"JMIsham","ts":"2019-04-30T16:46:17.613Z"}
{"msg":"so the admin key is the one which is generated by `sawdam` right ? ","username":"JMIsham","ts":"2019-04-30T16:46:49.132Z"}
{"msg":"or is it the validator key?","username":"JMIsham","ts":"2019-04-30T16:47:22.638Z"}
{"msg":"sawadm keygen is the validator key. The admin keys should be set to the ones you generated with sawtooth keygen","username":"agunde","ts":"2019-04-30T16:49:38.306Z"}
{"msg":"my bad :P , It was one of the key pair generated by `sawtooth keygen`","username":"JMIsham","ts":"2019-04-30T16:50:40.271Z"}
{"msg":"@agunde , do you guys do any kind of  remote debugging on sabre?","username":"JMIsham","ts":"2019-04-30T17:01:27.651Z"}
{"msg":"is it possible to console log from either the smart contract or the sabre-tp/handler ?","username":"JMIsham","ts":"2019-04-30T17:02:43.971Z"}
{"msg":"Not currently. We do have a plan to add a logging backend for sabre that can provide more insight into what is happening when there is an invalid transaction. The ones that we have tried cannot be compiled into wasm. ","username":"agunde","ts":"2019-04-30T17:03:09.521Z"}
{"msg":"lets say in my case, how do you think I can use logs to identify whats going on.","username":"JMIsham","ts":"2019-04-30T17:05:08.973Z"}
{"msg":"?","username":"JMIsham","ts":"2019-04-30T17:05:10.092Z"}
{"msg":"cuz the error message is returned from the handler class when the result is -3","username":"JMIsham","ts":"2019-04-30T17:05:46.613Z"}
{"msg":"and from the wasm_externals, we are throwing error from various places, is there a way to log the actuall error message from the handler ?","username":"JMIsham","ts":"2019-04-30T17:08:05.614Z"}
{"msg":"@agunde ","username":"JMIsham","ts":"2019-04-30T17:08:30.364Z"}
{"msg":"What i have done in the past is compile it as transaction processor (instead of the wasm smart contract) and connect it as transaction processor and submit the same transaction (not as a sabre transaction). Another option is you can follow along with the apply method in the code and see what get is failing which will give you an idea. These options are obviously not ideal. Hence why we need to improve the debugging process. There is not currently a way to get the error message out from the wasm code. ","username":"agunde","ts":"2019-04-30T17:27:45.097Z"}
{"msg":"@agunde , cool. will try to go to the code level for an in-depth understanding.","username":"JMIsham","ts":"2019-04-30T19:23:23.111Z"}
{"msg":"just want to clarify that if I copy `sawtooth-sabre`, `sabre-cli`, and the `intkey_multiply.wasm` which are built when I was running the docker environment to the aws environment, it should work right?","username":"JMIsham","ts":"2019-04-30T19:25:23.789Z"}
{"msg":"and also do we need to have sawtooth nightly version to work with this current master?","username":"JMIsham","ts":"2019-04-30T19:26:37.669Z"}
{"msg":"@JMIsham I would assume that would work but I have never done so myself. I believe sabre as it is in master would work with older versions of sawtooth. ","username":"agunde","ts":"2019-04-30T19:28:19.809Z"}
{"msg":"cool. I'll also try to make it work. will let you if I find any workarounds. ","username":"JMIsham","ts":"2019-04-30T19:29:14.174Z"}
{"msg":"So you guys never tested sabre with multi peer environment?","username":"JMIsham","ts":"2019-04-30T19:29:45.229Z"}
{"msg":"We have tested it. I believe we run it in docker on aws when we did. @rbuysse would know more. ","username":"agunde","ts":"2019-04-30T19:33:52.255Z"}
{"msg":"@agunde , I was able to run intkey_multiply example on my infrastructure ","username":"JMIsham","ts":"2019-05-04T06:40:35.471Z"}
{"msg":"Now, I'm trying to write my own sabre smart contract ","username":"JMIsham","ts":"2019-05-04T06:40:49.950Z"}
{"msg":"do you have any sabre contract development process","username":"JMIsham","ts":"2019-05-04T06:41:33.204Z"}
{"msg":"?","username":"JMIsham","ts":"2019-05-04T06:41:35.174Z"}
{"msg":"how do you guys test it?","username":"JMIsham","ts":"2019-05-04T06:41:47.060Z"}
{"msg":"@JMIsham Are you familiar with writing a stand alone Rust Transaction Processor? What I usually do is run it as a transaction processor first and when it is finished, I test it as a Sabre smart contract (compiled into WASM). With the updates to the TransactionContext (turned into a trait) in the current version of the sawtooth rust sdk, it is much easier to write unit tests. ","username":"agunde","ts":"2019-05-06T14:28:08.486Z"}
{"msg":"@agunde Where can I found all the commands for sabre ?  (like intkey_multiply what are the other commands exists in sabre)?\nintkey is for interger operations and intkey_multiply is only for multiplication. How can I perform other operations? intkey_add/sub/divide and all are not exist!!!","username":"achala","ts":"2019-06-01T07:36:25.409Z"}
{"msg":"@achala intkey is a transaction processor which is written in Rust and compiled to a WASM target for deployment and execution in Sabre. It is an example. You can write whatever you want. Please don’t make the mistake of assuming that the intkey example represents Sabre opcodes!","username":"jsmitchell","ts":"2019-06-01T14:25:21.659Z"}
{"msg":"What these line represent https://github.com/hyperledger/sawtooth-sabre/blob/master/example/intkey_multiply/processor/src/handler.rs#L133 and #L132 ?","username":"achala","ts":"2019-06-06T09:03:05.872Z"}
{"msg":"This code is used to decode the expected intkey state, which is stored in cbor. When this was written there was not a cbor crate that could be compiled into wasm (at least not one that I could find and was deterministic with the crate used by the intkey transaction processor) Those lines are used to extract the write bytes from the cbor to decode the Name of the entry in state. ","username":"agunde","ts":"2019-06-06T13:15:41.310Z"}
{"msg":"Has joined the channel.","username":"rossth","ts":"2019-06-12T13:35:23.279Z","type":"uj"}
{"msg":"Has joined the channel.","username":"desktophero","ts":"2019-06-18T19:35:31.168Z","type":"uj"}
{"msg":"Has joined the channel.","username":"AmimKnabben","ts":"2019-06-19T22:09:48.826Z","type":"uj"}
{"msg":"Is Sabre pike deprecated? what's the difference between Grid pike and Sabre pike?","username":"RealDeanZhao","ts":"2019-06-27T06:37:01.949Z"}
{"msg":"Grid Pike is Pikes final location. It will eventually be removed from Sabre. @RealDeanZhao ","username":"agunde","ts":"2019-06-27T12:59:38.778Z"}
{"msg":"Has joined the channel.","username":"thodges","ts":"2019-07-03T13:38:37.417Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Imoh","ts":"2019-07-11T06:37:10.766Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jamesbarry","ts":"2019-07-31T16:31:40.380Z","type":"uj"}
{"msg":"I received a question on Java support, in Sabre. Is it in plan?","username":"arsulegai","ts":"2019-08-05T03:41:56.425Z"}
{"msg":"Good languages targeting Sabre would produce minimal WASM bytecode - the JVM would be very heavy weight for this purpose.","username":"jsmitchell","ts":"2019-08-05T04:07:28.395Z"}
{"msg":"@VishalBatra ^","username":"arsulegai","ts":"2019-08-05T04:20:49.538Z"}
{"msg":"Has joined the channel.","username":"VishalBatra","ts":"2019-08-05T04:20:49.607Z","type":"uj"}
{"msg":"ok, thanks @arsulegai ","username":"VishalBatra","ts":"2019-08-05T08:19:08.372Z"}
{"msg":"could maybe be done though - https://github.com/appcypher/awesome-wasm-langs#java","username":"amundson","ts":"2019-08-05T14:57:11.454Z"}
{"msg":"Hmm, TeaVM wins based on stargazers count","username":"arsulegai","ts":"2019-08-05T17:15:38.516Z"}
{"msg":"Has joined the channel.","username":"newhall","ts":"2019-10-17T14:29:48.554Z","type":"uj"}
{"msg":"I seem to be receiving the payload in the `entrypoint` method but the actual payload sent from the client is at the end of this stream of bytes received.","username":"arsulegai","ts":"2019-12-01T08:19:28.524Z"}
{"msg":"@agunde ^ any help? The same TP & client works perfectly fine on Sawtooth","username":"arsulegai","ts":"2019-12-02T13:28:09.882Z"}
{"msg":"@arsulegai when you say the TP and client work on Sawtooth, do you mean as a separate Transaction Processor running without sabre?","username":"agunde","ts":"2019-12-02T14:04:22.398Z"}
{"msg":"Yes","username":"arsulegai","ts":"2019-12-02T14:04:48.893Z"}
{"msg":"Is the client wrapping the payload in a SabreTransaction?","username":"agunde","ts":"2019-12-02T14:05:16.337Z"}
{"msg":"That's interesting question, I was referring to the intkey_multiply example here https://github.com/hyperledger/sawtooth-sabre/blob/master/example/intkey_multiply/cli/src/transaction.rs","username":"arsulegai","ts":"2019-12-02T14:16:10.431Z"}
{"msg":"O to use that cli with sabre you need to save the payload by setting an output and then use the sabre  cli as described here https://sawtooth.hyperledger.org/docs/sabre/nightly/master/application_developer_guide.html#step-3-generate-the-payload-file","username":"agunde","ts":"2019-12-02T14:19:08.663Z"}
{"msg":"https://sawtooth.hyperledger.org/docs/sabre/nightly/master/application_developer_guide.html#step-7-execute-the-smart-contract","username":"agunde","ts":"2019-12-02T14:19:32.811Z"}
{"msg":"That would still be a Sawtooth batch file right?","username":"arsulegai","ts":"2019-12-02T14:23:36.925Z"}
{"msg":"The intkey multiply will save out just the intkey_multiply payload and then the sabre cli will take the payload and wrap it in a Sabre Transaction (which yes goes into a Sawtooth Batch)","username":"agunde","ts":"2019-12-02T14:24:50.562Z"}
{"msg":"I missed this line https://github.com/hyperledger/sawtooth-sabre/blob/322977ded5dc4b1ec9a1ca9876b5a86ce173ff6d/example/intkey_multiply/cli/src/multiply.rs#L40","username":"arsulegai","ts":"2019-12-02T14:27:45.870Z"}
{"msg":"Thanks :)","username":"arsulegai","ts":"2019-12-02T14:27:51.625Z"}
{"msg":"np","username":"agunde","ts":"2019-12-02T14:28:29.130Z"}
{"msg":"Has joined the channel.","username":"slavitch","ts":"2019-12-05T18:56:49.763Z","type":"uj"}
{"msg":"Has joined the channel.","username":"trevormcdonald","ts":"2019-12-12T16:46:22.518Z","type":"uj"}
{"msg":"I'm trying to use Sabre instead of a separate transaction processor and running into an issue whenever I try to send a transaction. Sabre-sdk 0.4, Sabre-cli 0.4, Sawtooth 1.2, Sawtooth-sdk 0.3.\n\nThe log message I get is:\n\n`consensource-validator           | [2019-12-12 16:35:03.320 INFO     processor_manager] waiting for processor type consensource: 0.1 to register`\n\nDid I miss a configuration step to tell the validator to use the Sabre TP for that family?\n\nHere is my contract definition:\n\n```\nname: consensource\nversion: \"0.1\"\nwasm: target/wasm32-unknown-unknown/release/cert-registry-processor.wasm\ninputs:\n  - \"3d0111\"\noutputs:\n  - \"3d0111\"\n``` \n\nHere are the Sabre commands run at start up:\n\n```\n        while true; do curl -s http://sawtooth-rest-api:8008/state | grep -q head; if [ $$? -eq 0 ]; then break; fi; sleep 0.5; done;\n        sabre cr --create consensource --key /shared_data/my_key --owner $$(cat /shared_data/my_key.pub) --url http://sawtooth-rest-api:8008 --wait 30\n        sabre upload --filename /build/processor/consensource.yaml --key /shared_data/my_key --url http://sawtooth-rest-api:8008 --wait 30\n        sabre ns --create 3d0111 --key /shared_data/my_key --owner $$(cat /shared_data/my_key.pub) --url http://sawtooth-rest-api:8008 --wait 30\n        sabre perm 3d0111 consensource --key /shared_data/my_key --read --write --url http://sawtooth-rest-api:8008 --wait 30\n        echo '---------========= consensource contract is loaded =========---------'\n``` \n\nAnd here is the raw batch that is sent:\n\n```\n\u0007\nÇ\u0001\nB022550f49fecc38aeee9993a1625ab8de54ebeaa810935ad3e10c989df76e711cb\u0012\u0001c3ee40961f346064d2fe161b914fc237aa7abf5f16bb323700dc07bf3d9fe7d23d34b7fb62c0c25e437a85f64f61e4a38859812f0c438b975adc5ddcccb47a47\u0012\u0001c0bb56d2ad44d5637ebc300c0a45ef4a355e03c77e1f460b8fd03f9e3fa350a036e7ed92f1b7569de947a804d8e968ed8a5088be12eb542c45f9cfd23e546469\u001aÃ\u0004\n®\u0003\nB022550f49fecc38aeee9993a1625ab8de54ebeaa810935ad3e10c989df76e711cb\u001a\fconsensource\"\u00030.1*F3d011100007aa49839c24c018b1cdfc3d68b8ee202a18a733b354c2c92ba941bb962e8:F3d011100007aa49839c24c018b1cdfc3d68b8ee202a18a733b354c2c92ba941bb962e8J\u0001a509651bc6f13c5d32a45d642167371fae4bb1d9b2958623a1f060efd61ded23ec61b2b18feeda3e7b5e2f225693346730f10f96b4bf31bb11a817ec5302acf1RB022550f49fecc38aeee9993a1625ab8de54ebeaa810935ad3e10c989df76e711cb\u0012\u0001c3ee40961f346064d2fe161b914fc237aa7abf5f16bb323700dc07bf3d9fe7d23d34b7fb62c0c25e437a85f64f61e4a38859812f0c438b975adc5ddcccb47a47\u001a\n\b\u0001\u0012\t\n\u0001q\u0010·ØÉï\u0005\n``` \n\nHere is the branch where the code lives: https://github.com/target/consensource/tree/tmcdonald-sabre\n\nAny ideas as to what I'm missing?","username":"trevormcdonald","ts":"2019-12-12T16:46:24.570Z"}
{"msg":"@trevormcdonald this suggests to me that the transaction you are submitting isn't a sabre transaction, but instead is a \"consensource: 0.1\" transaction. you probably need to update the client to create a sabre transaction and stick the current consensource transaction content inside the sabre transaction.","username":"amundson","ts":"2019-12-12T20:51:04.876Z"}
{"msg":"this is because Sawtooth doesn't know about Sabre, and thus doesn't do the marshaling automatically for you","username":"amundson","ts":"2019-12-12T20:52:02.769Z"}
{"msg":"this is because Sawtooth validator doesn't know about Sabre, and thus doesn't do the marshaling automatically for you","username":"amundson","ts":"2019-12-12T20:52:02.769Z"}
{"msg":"there are some examples in javascript of making it optional (so you can support both sabre and tp transactions), but I can't recall which examples. probably the track and trace example.","username":"amundson","ts":"2019-12-12T20:53:30.170Z"}
{"msg":"Thanks for pointing me there, for reference I believe the example you refer to is here: https://github.com/hyperledger/grid-contrib/tree/master/track_and_trace","username":"trevormcdonald","ts":"2019-12-13T14:27:20.619Z"}
{"msg":"Hello,\nI'm making a start Sabre support on Solang: https://github.com/hyperledger-labs/solang/pull/103 \nNow I'm trying to understand the get_state/set_state externs. Is there any documentation available on this or could someone give me a quick guide to get me started. I'm not sure what the pointer collections are supposed to do.\nThanks\nSean","username":"seanyoung","ts":"2020-02-11T22:09:22.234Z"}
{"msg":"Just reading some more of the code. State is stored at an address which should be a valid utf8 string. Can this be any string?","username":"seanyoung","ts":"2020-02-11T22:26:54.484Z"}
{"msg":"Solidity stores data an slot number which 256 bit. I can just convert this to a hex string for now.","username":"seanyoung","ts":"2020-02-11T22:27:32.858Z"}
{"msg":"Solidity stores data an slot number which a 256 bit unsigned integer. I can just convert this to a hex string for now.","username":"seanyoung","ts":"2020-02-11T22:27:32.858Z"}
{"msg":"Actually it would be nice if the names of the Solidity variables can be used for state address. However this is difficult for arrays/structs/mappings are they are accessed per-element, and purposely designed so that they can hold lots of (sparse) data. That would mean creating addresses for each array element, which can be expensive.","username":"seanyoung","ts":"2020-02-11T22:42:14.861Z"}
{"msg":"A new version (0.5.0) of sawtooth-sabre has been released. You can view the release notes at https://github.com/hyperledger/sawtooth-sabre/blob/v0.5.0/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-12T23:00:18.142Z"}
{"msg":"@seanyoung Saw your question other day and forgot to add this link. This page should give you details on what the address string will have https://sawtooth.hyperledger.org/docs/core/nightly/1-2/architecture/global_state.html#global-state","username":"arsulegai","ts":"2020-02-13T04:32:15.511Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/sawtooth-sabre?msg=G7oq5wHePmNodPMtQ) Thank you, that helps","username":"seanyoung","ts":"2020-02-13T11:05:21.691Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=G7oq5wHePmNodPMtQ","url":"https://chat.hyperledger.org/channel/sawtooth-sabre?msg=G7oq5wHePmNodPMtQ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"A new version (0.5.1) of sawtooth-sabre has been released. You can view the release notes at https://github.com/hyperledger/sawtooth-sabre/blob/v0.5.1/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-13T21:24:57.704Z"}
{"msg":"I've been looking at the externs that sabre exposes for wasm contracts, in order to write Solang target support for sabre. \n- Solang has it's own heap/malloc library. Should it use the alloc extern instead? How about realloc?\n- As I understand it, when entrypoint is called, the payload is written to wasm memory and passes an argument. Should I use get_ptr_len() to get its length?\n- If wasm memory is written by the externs, what do I set the stack pointer to so it doesn't overwrite allocated stuff? What about static compiled data?","username":"seanyoung","ts":"2020-02-15T17:17:07.858Z"}
{"msg":"Is Solang going to be compiled into WASM?","username":"arsulegai","ts":"2020-02-15T21:00:13.751Z"}
{"msg":"Do you mean the Solang compiler itself, or are you asking if the Solang compiler outputs wasm?","username":"seanyoung","ts":"2020-02-15T22:31:30.647Z"}
{"msg":"Solang compiles Solidity into wasm; I would like to make it possible to run Solang-compiled Solidity run on sabre.","username":"seanyoung","ts":"2020-02-15T22:36:18.417Z"}
{"msg":"Solang compiles Solidity into wasm; I would like to make it possible to run Solang-compiled Solidity on sabre","username":"seanyoung","ts":"2020-02-15T22:36:18.417Z"}
{"msg":"Solang is rust, so Solang itself can be compiled into wasm. It require llvm to be compiled to wasm too, which I haven't tried yet.","username":"seanyoung","ts":"2020-02-15T22:37:06.655Z"}
{"msg":"Awesome! When you say run WASM converted Solidity code on Sabre, it makes me curious. Probably need something like #sawtooth-seth?","username":"arsulegai","ts":"2020-02-16T04:48:10.408Z"}
{"msg":"seth runs EVM, not WASM","username":"seanyoung","ts":"2020-02-16T08:36:20.391Z"}
{"msg":"Right","username":"arsulegai","ts":"2020-02-16T08:36:45.748Z"}
{"msg":"I couldn't understand how the context conversion from Sabre to Solidity happen in the PR you pointed earlier. I am curious to learn more.","username":"arsulegai","ts":"2020-02-16T08:49:20.841Z"}
{"msg":"This PR https://github.com/hyperledger-labs/solang/pull/103 I assume?","username":"seanyoung","ts":"2020-02-16T08:50:22.651Z"}
{"msg":"Yes","username":"arsulegai","ts":"2020-02-16T08:50:32.153Z"}
{"msg":"sabre runs wasm smart contracts","username":"seanyoung","ts":"2020-02-16T08:51:04.281Z"}
{"msg":"solang compiles Solidity to wasm","username":"seanyoung","ts":"2020-02-16T08:51:15.746Z"}
{"msg":"However sabre has a set of externs to interact with the blockchain, which are specific to each blockchain (e.g. ewasm). ","username":"seanyoung","ts":"2020-02-16T08:52:26.982Z"}
{"msg":"So Solang needs to be taught a few tricks to make its output run on sabre","username":"seanyoung","ts":"2020-02-16T08:52:48.205Z"}
{"msg":"Yes, this trick is what I wanted to learn  more about","username":"arsulegai","ts":"2020-02-16T08:54:26.405Z"}
{"msg":"What do you want to know?","username":"seanyoung","ts":"2020-02-16T08:55:21.452Z"}
{"msg":"The way Solidity contracts are written is different from how we generally write for Sabre. For example, in sabre if a state has to be stored then we compute the address and store on the global state. But these steps are not generally what we see in a Solidity code.","username":"arsulegai","ts":"2020-02-16T09:18:24.918Z"}
{"msg":"That's where Solang comes in. If contract storage gets assigned then it has to generate some code to set global state.","username":"seanyoung","ts":"2020-02-16T09:19:52.847Z"}
{"msg":"Solidity contract variables each have a 256 bit slot number. That can be converted to a string, and then we can call set_state() on this (generated from Solang).\nHowever, I'm trying to get my head round how the ewasm externs work.","username":"seanyoung","ts":"2020-02-16T09:21:27.862Z"}
{"msg":"It needs to go here: https://github.com/hyperledger-labs/solang/pull/103/files#diff-f27c8a7941fd75514621ba404b78272dR183","username":"seanyoung","ts":"2020-02-16T09:26:48.598Z"}
{"msg":"Ok, I've managed to work it out. I got it working. See  https://solang.readthedocs.io/en/latest/running.html#using-solang-with-sawtooth-sabre","username":"seanyoung","ts":"2020-02-16T21:32:40.497Z"}
{"msg":"Hasn't seen much testing, just got it working.","username":"seanyoung","ts":"2020-02-16T21:36:32.905Z"}
{"msg":"Has joined the channel.","username":"yeiyei","ts":"2020-03-03T15:32:58.667Z","type":"uj"}
{"msg":"I might invest some more time digging into wasm. Anyone have any favorite wasm articles/links?","username":"Dan","ts":"2020-03-09T14:15:22.348Z"}
{"msg":"lots of good content here: https://hacks.mozilla.org/category/webassembly/","username":"jsmitchell","ts":"2020-03-09T14:52:30.232Z"}
{"msg":"sabre uses parity-wasm for sandbox execution: https://github.com/paritytech/parity-wasm","username":"jsmitchell","ts":"2020-03-09T14:56:20.510Z"}
{"msg":"@Dan depending on what you're after, this might be useful: https://webassembly.org/docs/semantics/","username":"seanyoung","ts":"2020-03-09T17:13:29.010Z"}
{"msg":"Thanks!","username":"Dan","ts":"2020-03-09T19:47:02.579Z"}
{"msg":"Incidentally, #private-data-objects has https://github.com/hyperledger-labs/private-data-objects/tree/master/common/interpreter/wawaka_wasm which is based on https://github.com/bytecodealliance/wasm-micro-runtime","username":"Dan","ts":"2020-03-09T19:48:20.986Z"}
{"msg":"great, I was looking for that after talking to @MicBowman ","username":"seanyoung","ts":"2020-03-09T23:15:26.576Z"}
{"msg":"@agunde , May I know is there any plans to implement  sawtooth sabre payload sdk in Assemblyscript SDKs??  like we have in rust (https://github.com/hyperledger/sawtooth-sabre/blob/master/sdks/rust/src/protocol/payload.rs)","username":"JMIsham","ts":"2020-03-10T10:59:01.640Z"}
{"msg":"@agunde , May I know is there any plans to implement  sawtooth sabre payload sdk in Assemblyscript??  like we have in rust (https://github.com/hyperledger/sawtooth-sabre/blob/master/sdks/rust/src/protocol/payload.rs)","username":"JMIsham","ts":"2020-03-10T10:59:01.640Z"}
{"msg":"@JMIsham There are not currently plans to do so.","username":"agunde","ts":"2020-03-10T13:37:03.677Z"}
{"msg":"I'm looking in to create a rest service which takes the application level payload as json, encode it, sign it and send it to the splinter network.","username":"JMIsham","ts":"2020-03-10T13:38:57.673Z"}
{"msg":"I'm looking in to create a rest service which takes the application level payload as json, encode it, sign it and send it to sabre TP","username":"JMIsham","ts":"2020-03-10T13:38:57.673Z"}
{"msg":"thought of doing it using typescript rather going for rust..","username":"JMIsham","ts":"2020-03-10T13:39:23.631Z"}
{"msg":"is it possible for me to start develop those SDKs and contribute to splinter? ","username":"JMIsham","ts":"2020-03-10T13:40:22.632Z"}
{"msg":"is it possible for me to start develop those SDKs and contribute to sawtooth sabre? ","username":"JMIsham","ts":"2020-03-10T13:40:22.632Z"}
{"msg":"@JMIsham yes, and if you need a place to share your work, you can commit it to sawtooth-contrib; then at some point we could figure out were it should go long-term","username":"amundson","ts":"2020-03-10T14:05:04.838Z"}
{"msg":"thank you @amundson  ","username":"JMIsham","ts":"2020-03-10T14:05:56.768Z"}
{"msg":"@JMIsham also, consider contributing to Transact's Javascript SDK - https://github.com/hyperledger/transact-sdk-javascript if it makes sense -- there is code there currently to help build up transactions (including sabre transactions), and this is the code we use in the browser to do that -- https://github.com/hyperledger/transact-sdk-javascript/tree/master/src","username":"amundson","ts":"2020-03-10T14:07:52.895Z"}
{"msg":"Sure. I'll have a look","username":"JMIsham","ts":"2020-03-10T14:08:48.745Z"}
{"msg":"Has joined the channel.","username":"cg223","ts":"2020-04-03T22:16:14.080Z","type":"uj"}
{"msg":"go","username":"cg223","ts":"2020-04-03T22:18:31.016Z"}
{"msg":"@arsulegai https://github.com/hyperledger/sawtooth-sabre/pull/95 was approved and merged. Thanks for the contribution!","username":"agunde","ts":"2020-04-09T17:14:49.394Z"}
{"msg":"Has joined the channel.","username":"jmbarry","ts":"2020-06-16T17:32:47.732Z","type":"uj"}
{"msg":"Has joined the channel.","username":"gusBar","ts":"2021-05-06T05:14:11.125Z","type":"uj"}
{"msg":"Has joined the channel.","username":"LeonardoCarvalho","ts":"2021-07-03T16:46:11.068Z","type":"uj"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:27:11.722Z","type":"room_changed_topic"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:27:11.730Z","type":"room_changed_description"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:27:11.733Z","type":"room_changed_announcement"}
