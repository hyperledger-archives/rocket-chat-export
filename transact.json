{"msg":"User <em>User_1</em> added by <em>rjones</em>.","username":"rjones","ts":"2019-05-07T17:20:37.295Z","type":"au"}
{"msg":"amundson","username":"rjones","ts":"2019-05-07T17:20:44.865Z","type":"subscription-role-added"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-05-07T17:20:54.991Z","type":"ul"}
{"msg":"@rjones thanks!","username":"amundson","ts":"2019-05-07T19:31:37.334Z"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-05-07T19:31:38.016Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mfford","ts":"2019-05-07T19:38:24.788Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rbuysse","ts":"2019-05-07T19:54:12.233Z","type":"uj"}
{"msg":"First topic is project name...","username":"amundson","ts":"2019-05-07T19:55:04.225Z"}
{"msg":"Has joined the channel.","username":"danoprey","ts":"2019-05-07T19:55:15.299Z","type":"uj"}
{"msg":"Some ideas I've received:","username":"amundson","ts":"2019-05-07T19:56:11.751Z"}
{"msg":"Hyperledger Delta - Transforms the state from the smart contracts above to framework below\nHyperledger Transmission - Transmits the power from the smart contract “engine” to the ledger\nHyperledger Torque - Bit catchier on the car/engine theme\nHyperledger Shift - Transition from one state to another\nHyperledger Turing - Because\nHyperledger Edge - Represent transitions from one state to another as caused by the input (feels a bit IoT/edge computing to me though)","username":"amundson","ts":"2019-05-07T19:56:13.909Z"}
{"msg":"they're all brilliant","username":"danoprey","ts":"2019-05-07T19:56:19.090Z"}
{"msg":"^ from @danoprey ","username":"amundson","ts":"2019-05-07T19:56:29.934Z"}
{"msg":"LOL","username":"amundson","ts":"2019-05-07T19:56:31.267Z"}
{"msg":"Hyperledger Mill - processes inputs into outputs, mill city, etc. from @jsmitchell ","username":"amundson","ts":"2019-05-07T19:57:18.925Z"}
{"msg":"Has joined the channel.","username":"jsmitchell","ts":"2019-05-07T19:57:19.032Z","type":"uj"}
{"msg":"Hyperledger Morpheus - from @mfford ","username":"amundson","ts":"2019-05-07T19:57:45.548Z"}
{"msg":"Has joined the channel.","username":"ltseeley","ts":"2019-05-07T19:57:56.686Z","type":"uj"}
{"msg":"we liked 'Hyperledger Particle' but there is another OSS particle project already","username":"amundson","ts":"2019-05-07T19:59:06.057Z"}
{"msg":"Has joined the channel.","username":"pschwarz","ts":"2019-05-07T19:59:10.957Z","type":"uj"}
{"msg":"I've heard some generally good responses to Mill, Morpheus, and Torque","username":"amundson","ts":"2019-05-07T19:59:56.915Z"}
{"msg":"Many still like 'Hyperledger Transact'","username":"amundson","ts":"2019-05-07T20:00:36.032Z"}
{"msg":"Please give opinions and suggest other options!","username":"amundson","ts":"2019-05-07T20:02:26.020Z"}
{"msg":"Has joined the channel.","username":"cecchi","ts":"2019-05-07T20:53:54.774Z","type":"uj"}
{"msg":"i like Transact","username":"cecchi","ts":"2019-05-07T20:53:55.019Z"}
{"msg":"Transact is an implementation of an abstraction, so maybe *Hyperledger Dali* or *Hyperledger Rothko*?","username":"cecchi","ts":"2019-05-07T20:55:23.497Z"}
{"msg":"it's also kind of a \"one thing to rule them all\" - so maybe *Hyperledger Asha* which is a deep cut reference to the largely agreed upon name of the 'ring' in LOTR: _Ash Nazg_","username":"cecchi","ts":"2019-05-07T20:58:11.760Z"}
{"msg":"lastly, a plug for *Hyperledger Cornholio*, someone who always needed TP (transaction processing)","username":"cecchi","ts":"2019-05-07T21:08:25.545Z"}
{"msg":"","username":"jsmitchell","ts":"2019-05-07T21:08:30.843Z","attachments":[{"type":"file","title":"Clipboard - May 7, 2019 4:08 PM","title_link":"/file-upload/cYHbxLcGszTTigbuL/Clipboard%20-%20May%207,%202019%204:08%20PM","image_url":"/file-upload/cYHbxLcGszTTigbuL/Clipboard%20-%20May%207,%202019%204:08%20PM","image_type":"image/png","image_size":104869,"url":"/file-upload/cYHbxLcGszTTigbuL/Clipboard%20-%20May%207,%202019%204:08%20PM","remote":false,"fileId":"cYHbxLcGszTTigbuL","fileName":"Clipboard - May 7, 2019 4:08 PM"}]}
{"msg":"well it's clear we have a winner","username":"cecchi","ts":"2019-05-07T21:09:05.227Z"}
{"msg":"Find me a good clean gif of that and I'll add it as a custom reaction, like :cries: ","username":"rjones","ts":"2019-05-07T21:10:11.307Z"}
{"msg":"@cecchi what a corny suggestion","username":"amundson","ts":"2019-05-07T21:53:50.527Z"}
{"msg":"","username":"danoprey","ts":"2019-05-07T21:57:11.749Z","attachments":[{"type":"file","title":"troll.png","title_link":"/file-upload/XygHDdEEGWH79fofm/troll.png","image_url":"/file-upload/XygHDdEEGWH79fofm/troll.png","image_type":"image/png","image_size":77741,"url":"/file-upload/XygHDdEEGWH79fofm/troll.png","remote":false,"fileId":"XygHDdEEGWH79fofm","fileName":"troll.png"}]}
{"msg":"unfortunately, we will be dropping the TP name. mostly because of the cornholio joke.","username":"amundson","ts":"2019-05-07T22:02:22.811Z"}
{"msg":"smart contract engines forever","username":"amundson","ts":"2019-05-07T22:02:33.401Z"}
{"msg":"I think it substantially raises the bar if we have to submit a graphic with our name suggestions :)","username":"amundson","ts":"2019-05-07T22:03:07.411Z"}
{"msg":"We will need an icon at some point, under this format. but the LF creative team can assist with that","username":"danoprey","ts":"2019-05-07T22:04:11.859Z"}
{"msg":"\"Hyperledger Transact\" is far too generic, unfortunately. I'm not sure there's a blockchain project that couldn't qualify for that name","username":"danoprey","ts":"2019-05-07T22:05:02.498Z"}
{"msg":"Mill isn't bad","username":"danoprey","ts":"2019-05-07T22:05:19.041Z"}
{"msg":"too generic? do you mean too literal?","username":"amundson","ts":"2019-05-07T22:06:05.401Z"}
{"msg":"too literal and too widely applicable","username":"danoprey","ts":"2019-05-07T22:06:32.251Z"}
{"msg":"much less than \"composer\" or \"explorer\" though, if we are using current names as a guide","username":"amundson","ts":"2019-05-07T22:09:57.817Z"}
{"msg":"those were mistakes... to be frank","username":"danoprey","ts":"2019-05-07T22:12:43.076Z"}
{"msg":"Has joined the channel.","username":"amolk","ts":"2019-05-08T02:19:05.771Z","type":"uj"}
{"msg":"[ ](https://chat.hyperledger.org/channel/transact?msg=cM76WAbgJzZKP8PrZ) 'Asha' means 'Hope' in most Indian languages.","username":"amolk","ts":"2019-05-08T02:21:34.438Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/transact?msg=cM76WAbgJzZKP8PrZ","url":"https://chat.hyperledger.org/channel/transact?msg=cM76WAbgJzZKP8PrZ","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Has joined the channel.","username":"RealDeanZhao","ts":"2019-05-08T03:22:29.684Z","type":"uj"}
{"msg":"Has joined the channel.","username":"arsulegai","ts":"2019-05-08T06:41:40.192Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mastersingh24","ts":"2019-05-08T08:06:54.835Z","type":"uj"}
{"msg":"I like the \"engine\" theme ... so just because, I'll throw out two idea:\n\nHyperledger Dynamo\nHyperledger Turbine\n\n;)","username":"mastersingh24","ts":"2019-05-08T08:33:19.091Z"}
{"msg":"I like the \"engine\" theme ... so just because, I'll  toss two into the mix:\n\nHyperledger Dynamo\nHyperledger Turbine\n\n;)","username":"mastersingh24","ts":"2019-05-08T08:33:19.091Z"}
{"msg":"Has joined the channel.","username":"agunde","ts":"2019-05-08T12:59:27.903Z","type":"uj"}
{"msg":"More simpler \"Hyperledger Bind\"","username":"arsulegai","ts":"2019-05-08T14:46:51.793Z"}
{"msg":"Another - \"Hyperledger Evolve\"","username":"arsulegai","ts":"2019-05-08T14:50:37.363Z"}
{"msg":"Has joined the channel.","username":"kodonnel","ts":"2019-05-08T16:49:31.539Z","type":"uj"}
{"msg":"Has joined the channel.","username":"achenette","ts":"2019-05-08T18:30:25.580Z","type":"uj"}
{"msg":"Has joined the channel.","username":"DavidAEdwards","ts":"2019-05-09T07:18:57.664Z","type":"uj"}
{"msg":"Has joined the channel.","username":"cbf","ts":"2019-05-09T14:17:04.841Z","type":"uj"}
{"msg":"Hyperledger käntrakt","username":"cbf","ts":"2019-05-09T14:26:41.526Z"}
{"msg":"(phonetically)","username":"cbf","ts":"2019-05-09T14:27:16.695Z"}
{"msg":"my thoughts on a few of the suggestions:","username":"amundson","ts":"2019-05-09T17:43:10.078Z"}
{"msg":"\nHyperledger Delta - Great from the perspective of state transition functions producing receipts. However, existing database project exists - https://github.com/delta-io/delta.\nHyperledger Transmission - Meh\nHyperledger Torque - Not bad, but there is an existing open source project related to queueing - https://github.com/adaptivecomputing/torque\nHyperledger Shift - Too close to OpenShift\nHyperledger Turing - There is a programming language called 'Turing'.\nHyperledger Edge - Nice, but network layer connotations and 'Microsoft Edge'\n","username":"amundson","ts":"2019-05-09T17:43:12.769Z"}
{"msg":"Hyperledger Cornholio - too corny\nHyperledger käntrakt - non-ASCII characters\nHyperledger Bind - Too close to the DNS server project - https://www.isc.org/downloads/bind/\nHyperledger Dynamo - Another project - https://dynamobim.org/\nHyperledger Morpheus - Associations with https://en.wikipedia.org/wiki/Morpheus_(software)\n","username":"amundson","ts":"2019-05-09T17:50:29.978Z"}
{"msg":"Hyperledger Dali - Another open source project - https://developer.nvidia.com/DALI\nHyperledger Rothko - small open source effort using the name - https://github.com/Haacked/Rothko\nHyperledger Turbine - existing (defunct?) crate - https://crates.io/crates/turbine\n","username":"amundson","ts":"2019-05-09T17:55:00.344Z"}
{"msg":"these didn't have any substantial disqualifications I could find:","username":"amundson","ts":"2019-05-09T17:55:31.054Z"}
{"msg":"Hyperledger Transact\nHyperledger Mill\nHyperledger Asha\nHypereldger Evolve\n","username":"amundson","ts":"2019-05-09T17:55:40.167Z"}
{"msg":"Hyperledger Transact sounds good\nOr inspired by @cbf idea, \"Hyperledger Tract\" is another name I can think of","username":"arsulegai","ts":"2019-05-09T18:07:34.401Z"}
{"msg":":neutral_face: there's already a open source project by that name https://github.com/snipsco/tract","username":"arsulegai","ts":"2019-05-09T18:08:54.271Z"}
{"msg":"@danoprey is opposed to \"Hyperledger Transact\" and is our rep from HL Marketing","username":"amundson","ts":"2019-05-09T18:25:44.971Z"}
{"msg":"I'll post these one per-line so we can get some opinions on them:","username":"amundson","ts":"2019-05-09T18:26:43.674Z"}
{"msg":"Hyperledger Transact","username":"amundson","ts":"2019-05-09T18:26:50.779Z"}
{"msg":"Hyperledger Mill","username":"amundson","ts":"2019-05-09T18:26:56.011Z"}
{"msg":"Hyperledger Asha","username":"amundson","ts":"2019-05-09T18:27:02.279Z"}
{"msg":"Hypereldger Evolve","username":"amundson","ts":"2019-05-09T18:27:07.696Z"}
{"msg":"Has joined the channel.","username":"eloafran","ts":"2019-05-09T18:29:26.030Z","type":"uj"}
{"msg":"Has joined the channel.","username":"satelander","ts":"2019-05-09T18:30:44.772Z","type":"uj"}
{"msg":"Has joined the channel.","username":"dplumb","ts":"2019-05-09T19:02:29.156Z","type":"uj"}
{"msg":"wait just so i'm clear is transact good or not good?","username":"cecchi","ts":"2019-05-09T19:10:23.390Z"}
{"msg":"also how many votes do we get?","username":"cecchi","ts":"2019-05-09T19:10:38.933Z"}
{"msg":"How many different emojis can be interpreted as a vote?  That's how many.","username":"achenette","ts":"2019-05-09T19:12:29.426Z"}
{"msg":"How many different emojis can be interpreted as a vote?  That's how many. :-)","username":"achenette","ts":"2019-05-09T19:12:29.426Z"}
{"msg":"@cecchi vote on as many things as you want","username":"amundson","ts":"2019-05-09T19:18:05.543Z"}
{"msg":"Has joined the channel.","username":"Dan","ts":"2019-05-10T15:01:52.743Z","type":"uj"}
{"msg":"Hyperledger Execution <-- just think of the logo possibilities!","username":"Dan","ts":"2019-05-10T15:01:53.585Z"}
{"msg":"_(there will be consequences for anyone who votes against this ^ name)_","username":"Dan","ts":"2019-05-10T15:06:50.335Z"}
{"msg":"Hmm ... I feel a bit bullied here   LOL","username":"mastersingh24","ts":"2019-05-11T09:09:13.161Z"}
{"msg":"They could be good consequences.\nI wouldn't suggest finding out tho. ","username":"Dan","ts":"2019-05-11T14:20:45.129Z"}
{"msg":"@danoprey \"Hyperledger Transact\" seems universally popular compared to the other names. How strong is HL marketing's position against it? Could we proceed with it?","username":"amundson","ts":"2019-05-13T15:30:58.507Z"}
{"msg":"@amundson would like to get @bbehlendorf 's thoughts on this too. Have send a follow up email to the marketing leadership","username":"danoprey","ts":"2019-05-13T16:15:29.908Z"}
{"msg":"Has joined the channel.","username":"bbehlendorf","ts":"2019-05-13T16:15:30.323Z","type":"uj"}
{"msg":"personally, I still feel this is a less than ideal name from a marketing perspective as it is not unique, gives little sense of what the project does, will be hard to defend if we ever wanted to register as an individual trademark, and will do poorly on SEO. I'd really encourage the team to come up with something they love which has a better back story too it and has more charm. Aries, Burrow, Sawtooth, Ursa are good examples of these.","username":"danoprey","ts":"2019-05-13T16:18:15.655Z"}
{"msg":"Has joined the channel.","username":"mattp","ts":"2019-05-13T16:59:29.794Z","type":"uj"}
{"msg":"However, it is pretty unanimous to go for transact with a pretty big dropoff. So if that's what the community want to go for then no objection to proceeding with Hyperledger Transact","username":"danoprey","ts":"2019-05-13T17:23:23.805Z"}
{"msg":"i voted for Mill and Transact and abstained with my additional unlimited votes due to outrage over lack of Cornholio option","username":"cecchi","ts":"2019-05-14T01:29:50.042Z"}
{"msg":"and to be clear that outrage is deep and legit like the mighty mississip","username":"cecchi","ts":"2019-05-14T01:30:21.928Z"}
{"msg":"@cecchi  - I think you missed your calling ... I feel some mad rhymes coming in your future","username":"mastersingh24","ts":"2019-05-14T08:27:10.376Z"}
{"msg":"Ok, I think we have a couple choices - 1) move forward with 'Hyperledger Transact'; or 2) take another week and try and come up with more options. @mastersingh24 @Dan @cecchi @agunde @jsmitchell @pschwarz - As project sponsors, we should all agree on how to proceed.  While I acknowledge some of the points made against it, I think 'Hyperledger Transact' will be a solid name for a library project. I suggest we move forward with 'Hyperledger Transact'. Please vote.","username":"amundson","ts":"2019-05-14T20:06:21.648Z"}
{"msg":"1) move forward","username":"amundson","ts":"2019-05-14T20:06:26.672Z"}
{"msg":"2) delay","username":"amundson","ts":"2019-05-14T20:06:28.805Z"}
{"msg":"@cecchi please only vote for one this time :)","username":"amundson","ts":"2019-05-14T20:09:21.186Z"}
{"msg":"3) Execute","username":"Dan","ts":"2019-05-14T20:44:26.002Z"}
{"msg":"j/k","username":"Dan","ts":"2019-05-14T20:44:41.862Z"}
{"msg":"4) ABUSE _FORCE MAJEURE_ AND CALL IT CORNHOLIO","username":"rjones","ts":"2019-05-14T20:45:54.383Z"}
{"msg":"I think you mean \"The Great ...\"","username":"Dan","ts":"2019-05-14T20:47:48.447Z"}
{"msg":"AS YOU WISH","username":"rjones","ts":"2019-05-14T20:48:11.865Z"}
{"msg":"Hyperledger TGC","username":"Dan","ts":"2019-05-14T20:48:30.205Z"}
{"msg":"TOTALLY NOT A CHANNEL ABOUT BEAVIS AND BUTTHEAD","username":"rjones","ts":"2019-05-14T20:48:39.317Z","type":"room_changed_topic"}
{"msg":"lol","username":"Dan","ts":"2019-05-14T20:48:46.030Z"}
{"msg":"Dan","username":"rjones","ts":"2019-05-14T20:49:38.010Z","type":"subscription-role-added"}
{"msg":"Don't make me take \"Hyperledger the Great Cornholio\" to a marketing committee vote... I'll do it","username":"danoprey","ts":"2019-05-14T23:00:41.873Z"}
{"msg":"That name is reserved for @Dan’s next project.","username":"amundson","ts":"2019-05-14T23:10:44.286Z"}
{"msg":"Looks like full votes on 1)","username":"pschwarz","ts":"2019-05-15T15:01:45.592Z"}
{"msg":"@danoprey the sponsors want to move forward with the name Hyperledger Transact","username":"amundson","ts":"2019-05-15T16:32:58.677Z"}
{"msg":"@rjones can you create a TRANSACT board in JIRA with the same perms as grid?","username":"amundson","ts":"2019-05-15T17:53:39.088Z"}
{"msg":"@amundson done","username":"rjones","ts":"2019-05-15T18:12:01.541Z"}
{"msg":"@amundson I set @Dan as the project lead so he can get some spam :)","username":"rjones","ts":"2019-05-15T18:12:52.209Z"}
{"msg":"LOL","username":"amundson","ts":"2019-05-15T18:13:01.208Z"}
{"msg":"we have the \"transact\" crate now - https://crates.io/crates/transact","username":"amundson","ts":"2019-05-15T18:16:16.267Z"}
{"msg":"@rjones what's the next step for the rest of the infrastructure (git repo, mailing list, etc.) - should I send an email to community architects, or will it be put in motion automagically?","username":"amundson","ts":"2019-05-15T18:19:22.225Z"}
{"msg":"@amundson send email to c-a please","username":"rjones","ts":"2019-05-15T18:26:05.118Z"}
{"msg":"@amundson we will work through https://wiki.hyperledger.org/display/tools/Transact","username":"rjones","ts":"2019-05-15T18:27:45.307Z"}
{"msg":"awesome","username":"amundson","ts":"2019-05-15T18:33:55.143Z"}
{"msg":"Any thoughts on an icon representing \"Transact\"?","username":"danoprey","ts":"2019-05-15T22:09:42.542Z"}
{"msg":"not yet, but I think it should be pink","username":"amundson","ts":"2019-05-16T14:23:46.895Z"}
{"msg":"did anyone notice Aries and Ursa have the same logo?","username":"amundson","ts":"2019-05-16T14:23:56.575Z"}
{"msg":"Aries logo is changing","username":"rjones","ts":"2019-05-16T14:50:34.330Z"}
{"msg":"It got announced at Consensus with a temporary logo?","username":"jsmitchell","ts":"2019-05-16T15:23:33.736Z"}
{"msg":"weird","username":"jsmitchell","ts":"2019-05-16T15:23:39.831Z"}
{"msg":"now that the naming discussion is done and we are moving along...","username":"amundson","ts":"2019-05-16T15:33:59.777Z"}
{"msg":"we have a bunch of in-progress work going on currently: 1) finishing the serial scheduler (multiple txn per batch); 2) writing the parallel scheduler in Rust; 3) putting together an RFC for a \"command\" transaction family; 4) design related to documentation (what we need in the docs); 5) reworking the context manager's threading approach; 6) adding an Xo execution test (this is a demo of sawtooth-compatibility); 7) work towards a ZMQ execution adapter (for sawtooth compatibility); 8) work towards a SSL (and raw TCP) execution adapter","username":"amundson","ts":"2019-05-16T15:40:40.884Z"}
{"msg":"we have a bunch of in-progress work going on currently: 1) finishing the serial scheduler (multiple txn per batch); 2) writing the parallel scheduler in Rust; 3) putting together an RFC for a \"command\" transaction family; 4) design related to documentation (what we need in the docs); 5) reworking the context manager's threading approach; 6) adding an Xo execution test (this is a demo of sawtooth-compatibility); 7) work towards a ZMQ execution adapter (for sawtooth compatibility); 8 ) work towards a SSL (and raw TCP) execution adapter","username":"amundson","ts":"2019-05-16T15:40:40.884Z"}
{"msg":"we should get this and more into JIRA soon...","username":"amundson","ts":"2019-05-16T15:41:50.231Z"}
{"msg":"@mastersingh24 where should I look to understand the format of read/write sets? (like, the encoding, if that makes sense)","username":"amundson","ts":"2019-05-16T15:52:39.647Z"}
{"msg":"It hit trademark issues","username":"rjones","ts":"2019-05-16T16:19:45.382Z"}
{"msg":"Has joined the channel.","username":"manojgop","ts":"2019-05-20T06:34:35.328Z","type":"uj"}
{"msg":"So, I propose we setup three git repos: \"transact\", \"transact-rfcs\", and \"transact-contrib\". The \"transact\" repo will contain the library. The \"transact-rfcs\" repo will contain RFCs (similar to sawtooth, grid, ursa, etc.). The \"transact-contrib\" repo will contain examples or early-stage work/integrations that aren't yet officially supported.","username":"amundson","ts":"2019-05-21T14:42:44.721Z"}
{"msg":"Has joined the channel.","username":"VishalBatra","ts":"2019-05-21T14:56:54.438Z","type":"uj"}
{"msg":"docs will go in \"transact\" ?","username":"Dan","ts":"2019-05-21T14:59:15.823Z"}
{"msg":"currently, I'm poposing the only docs we have are rust api docs. no sphinx-doc, no website.","username":"amundson","ts":"2019-05-21T15:13:37.699Z"}
{"msg":"(so yes, in the .rs files in \"transact\" repo)","username":"amundson","ts":"2019-05-21T15:14:39.908Z"}
{"msg":"Has joined the channel.","username":"artem.frantsiian","ts":"2019-05-22T06:40:43.890Z","type":"uj"}
{"msg":"Has joined the channel.","username":"knagware9","ts":"2019-05-22T11:00:37.193Z","type":"uj"}
{"msg":"https://lists.hyperledger.org/g/transact","username":"rjones","ts":"2019-05-23T01:52:20.743Z"}
{"msg":"https://wiki.hyperledger.org/display/TRAN/Transact","username":"rjones","ts":"2019-05-23T01:54:05.057Z"}
{"msg":"https://wiki.hyperledger.org/display/transact","username":"rjones","ts":"2019-05-23T01:54:05.057Z"}
{"msg":"can i get `owner` (here so I can update the topic ;) )","username":"Dan","ts":"2019-05-30T13:34:56.745Z"}
{"msg":"can i get `owner` (here so I can update the topic ;) )?","username":"Dan","ts":"2019-05-30T13:34:56.745Z"}
{"msg":"","username":"rjones","ts":"2019-05-30T17:38:59.414Z","type":"room_changed_topic"}
{"msg":"Dan","username":"rjones","ts":"2019-05-30T17:39:28.009Z","type":"subscription-role-added"}
{"msg":"Dan","username":"rjones","ts":"2019-05-30T17:39:31.240Z","type":"subscription-role-removed"}
{"msg":"I'm pretty sure @amundson has the power to grant ownership. I'm not sure","username":"rjones","ts":"2019-05-30T17:40:16.617Z"}
{"msg":"I think it's like IRC +o and +mM","username":"rjones","ts":"2019-05-30T17:41:10.409Z"}
{"msg":"I was trying to figure out the rocketchat interface to do that but couldn't","username":"amundson","ts":"2019-05-30T17:41:19.034Z"}
{"msg":"oh, that had not occurred to me - was looking for a menu","username":"amundson","ts":"2019-05-30T17:41:50.045Z"}
{"msg":"nothing is easy (╯°□°）╯︵ ┻━┻","username":"rjones","ts":"2019-05-30T17:42:20.907Z"}
{"msg":"click the three person icon up top, pick a user,  you should have buttons to \"set as owner\" and \"set as moderator\"","username":"rjones","ts":"2019-05-30T17:43:12.818Z"}
{"msg":"agunde","username":"amundson","ts":"2019-05-30T17:48:15.081Z","type":"subscription-role-added"}
{"msg":"mastersingh24","username":"amundson","ts":"2019-05-30T17:48:44.442Z","type":"subscription-role-added"}
{"msg":"so yes, owners can grant ownership, awesome.","username":"rjones","ts":"2019-05-30T17:53:53.067Z"}
{"msg":"Dan","username":"amundson","ts":"2019-05-30T17:54:35.711Z","type":"subscription-role-removed"}
{"msg":"oh, this is perfect now","username":"amundson","ts":"2019-05-30T17:54:41.956Z"}
{"msg":"jk","username":"amundson","ts":"2019-05-30T17:54:46.946Z"}
{"msg":"Dan","username":"amundson","ts":"2019-05-30T17:54:51.842Z","type":"subscription-role-added"}
{"msg":":O","username":"Dan","ts":"2019-05-30T17:54:52.946Z"}
{"msg":"cecchi","username":"Dan","ts":"2019-05-30T17:57:55.510Z","type":"subscription-role-added"}
{"msg":"jsmitchell","username":"Dan","ts":"2019-05-30T17:58:53.285Z","type":"subscription-role-added"}
{"msg":"pschwarz","username":"Dan","ts":"2019-05-30T17:59:27.637Z","type":"subscription-role-added"}
{"msg":"@JonathanLevi Are you in this room?","username":"Dan","ts":"2019-05-30T18:00:05.616Z"}
{"msg":"Has joined the channel.","username":"JonathanLevi","ts":"2019-05-30T18:00:08.375Z","type":"uj"}
{"msg":"JonathanLevi","username":"Dan","ts":"2019-05-30T18:00:28.812Z","type":"subscription-role-added"}
{"msg":"you are now ","username":"Dan","ts":"2019-05-30T18:00:34.433Z"}
{"msg":"I believe that's all the sponsors now.","username":"Dan","ts":"2019-05-30T18:00:48.244Z"}
{"msg":"test","username":"jsmitchell","ts":"2019-05-30T18:10:31.820Z"}
{"msg":"owner test","username":"jsmitchell","ts":"2019-05-30T18:10:48.613Z"}
{"msg":"Reminder that our first Hyperledger Transact Contributor Meeting will be held Monday, June 3rd at 10am CDT. \n\nThe meeting information can be found on the Hyperledger Community Meetings Calendar located here: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings\n\nHere is the link to the agenda for this meeting: https://wiki.hyperledger.org/pages/viewpage.action?pageId=13862603","username":"mfford","ts":"2019-05-31T15:16:13.887Z"}
{"msg":"Reminder that our first Hyperledger Transact Contributor Meeting will be held today, June 3rd at 10am CDT. \n\nThe meeting information can be found on the Hyperledger Community Meetings Calendar located here: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings\n\nHere is the link to the agenda for this meeting: https://wiki.hyperledger.org/pages/viewpage.action?pageId=13862603","username":"mfford","ts":"2019-06-03T13:44:38.139Z"}
{"msg":"Notes for the Hyperledger Transact Contributor Meeting held today at 10am CDT: https://wiki.hyperledger.org/pages/viewpage.action?pageId=13862773","username":"mfford","ts":"2019-06-03T16:52:16.820Z"}
{"msg":"thanks @mfford ","username":"Dan","ts":"2019-06-03T17:22:50.657Z"}
{"msg":"Has joined the channel.","username":"nhrishi","ts":"2019-06-06T17:01:59.457Z","type":"uj"}
{"msg":"I've a question on Transact, state is made part of it and Blockchain implementation would use the state implementation provided by it. Does it mean in future, there's plan for making Transact pluggable interface for underlying Blockchain frameworks?\n\nI am unable to realise if there's other specific reason behind it.","username":"arsulegai","ts":"2019-06-12T12:10:36.383Z"}
{"msg":"The idea is that Fabric, Sawtooth, etc would use transact as a library. The choice of persistence is up to each blockchain, and transact is going to provide interfaces compatible with those choices. ","username":"Dan","ts":"2019-06-12T12:14:08.009Z"}
{"msg":"There is a trait for State, where it operates on some state id (for example, in Sawtooth, this would be the merkle state root hash), and key/value pairs.  Transact provides an implementation using a Merkle trie, backed by LMDB or an in-memory btree database.  This may be optional, based on a Rust feature, but we're still considering what things are there by default and what are optional.","username":"pschwarz","ts":"2019-06-12T14:21:01.905Z"}
{"msg":"Thanks that clarifies","username":"arsulegai","ts":"2019-06-12T14:58:06.288Z"}
{"msg":"Some potential logos:","username":"amundson","ts":"2019-06-13T17:05:09.259Z"}
{"msg":"","username":"amundson","ts":"2019-06-13T17:05:20.636Z","attachments":[{"type":"file","title":"Clipboard - June 13, 2019 12:05 PM","title_link":"/file-upload/GfrWYZdWRJnszMh8L/Clipboard%20-%20June%2013,%202019%2012:05%20PM","image_url":"/file-upload/GfrWYZdWRJnszMh8L/Clipboard%20-%20June%2013,%202019%2012:05%20PM","image_type":"image/png","image_size":89244,"url":"/file-upload/GfrWYZdWRJnszMh8L/Clipboard%20-%20June%2013,%202019%2012:05%20PM","remote":false,"fileId":"GfrWYZdWRJnszMh8L","fileName":"Clipboard - June 13, 2019 12:05 PM"}]}
{"msg":"","username":"amundson","ts":"2019-06-13T17:05:35.791Z","attachments":[{"type":"file","title":"Clipboard - June 13, 2019 12:05 PM","title_link":"/file-upload/Rdo4MdATDxCjcYsCJ/Clipboard%20-%20June%2013,%202019%2012:05%20PM","image_url":"/file-upload/Rdo4MdATDxCjcYsCJ/Clipboard%20-%20June%2013,%202019%2012:05%20PM","image_type":"image/png","image_size":108890,"url":"/file-upload/Rdo4MdATDxCjcYsCJ/Clipboard%20-%20June%2013,%202019%2012:05%20PM","remote":false,"fileId":"Rdo4MdATDxCjcYsCJ","fileName":"Clipboard - June 13, 2019 12:05 PM"}]}
{"msg":"","username":"amundson","ts":"2019-06-13T17:05:51.276Z","attachments":[{"type":"file","title":"Clipboard - June 13, 2019 12:05 PM","title_link":"/file-upload/ww3c7t6qunwZd54ya/Clipboard%20-%20June%2013,%202019%2012:05%20PM","image_url":"/file-upload/ww3c7t6qunwZd54ya/Clipboard%20-%20June%2013,%202019%2012:05%20PM","image_type":"image/png","image_size":65417,"url":"/file-upload/ww3c7t6qunwZd54ya/Clipboard%20-%20June%2013,%202019%2012:05%20PM","remote":false,"fileId":"ww3c7t6qunwZd54ya","fileName":"Clipboard - June 13, 2019 12:05 PM"}]}
{"msg":"Thoughts?","username":"amundson","ts":"2019-06-13T17:06:08.688Z"}
{"msg":"i think the prism is problematic for a bunch of reasons","username":"jsmitchell","ts":"2019-06-13T17:06:18.226Z"}
{"msg":"i like both of the others, but I like the 'beaker'/delta thing a bit more","username":"jsmitchell","ts":"2019-06-13T17:06:42.343Z"}
{"msg":"+1 on the beaker","username":"rjones","ts":"2019-06-13T17:06:57.657Z"}
{"msg":"i preferred the slightly less complex version of the beaker thingy (the one with fewer lines)","username":"jsmitchell","ts":"2019-06-13T17:07:12.698Z"}
{"msg":"","username":"amundson","ts":"2019-06-13T17:08:10.101Z","attachments":[{"type":"file","title":"Clipboard - June 13, 2019 12:08 PM","title_link":"/file-upload/YBDpEPTreTFiQtqZe/Clipboard%20-%20June%2013,%202019%2012:08%20PM","image_url":"/file-upload/YBDpEPTreTFiQtqZe/Clipboard%20-%20June%2013,%202019%2012:08%20PM","image_type":"image/png","image_size":52832,"url":"/file-upload/YBDpEPTreTFiQtqZe/Clipboard%20-%20June%2013,%202019%2012:08%20PM","remote":false,"fileId":"YBDpEPTreTFiQtqZe","fileName":"Clipboard - June 13, 2019 12:08 PM"}]}
{"msg":"Of these, I probably do like the simple beaker the best","username":"amundson","ts":"2019-06-13T17:10:06.041Z"}
{"msg":"think of a sticker with only the glyph on it - needs to be distinct enough for a sticker, easy to put on a hat, etc. We have some logos right now that are not easy to use.","username":"rjones","ts":"2019-06-13T17:11:34.153Z"}
{"msg":"for instance: https://www.hyperledger.org/wp-content/uploads/2016/09/logo_hl_new.png","username":"rjones","ts":"2019-06-13T17:18:15.867Z"}
{"msg":"Has joined the channel.","username":"benoit.razet","ts":"2019-06-14T14:54:47.711Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MicBowman","ts":"2019-06-19T16:12:09.637Z","type":"uj"}
{"msg":"^ shall we consider that an official vote on the logo?","username":"amundson","ts":"2019-06-20T19:43:22.975Z"}
{"msg":":thumbsup: ","username":"pschwarz","ts":"2019-06-20T19:44:07.178Z"}
{"msg":"","username":"Dan","ts":"2019-06-20T20:02:24.675Z","attachments":[{"type":"file","title":"Clipboard - June 20, 2019 3:02 PM","title_link":"/file-upload/tXWRGCQyCYNa4zzGv/Clipboard%20-%20June%2020,%202019%203:02%20PM","image_url":"/file-upload/tXWRGCQyCYNa4zzGv/Clipboard%20-%20June%2020,%202019%203:02%20PM","image_type":"image/png","image_size":39955,"url":"/file-upload/tXWRGCQyCYNa4zzGv/Clipboard%20-%20June%2020,%202019%203:02%20PM","remote":false,"fileId":"tXWRGCQyCYNa4zzGv","fileName":"Clipboard - June 20, 2019 3:02 PM"}]}
{"msg":"I'm still in favor of one of the original concepts\n","username":"Dan","ts":"2019-06-20T20:02:34.641Z"}
{"msg":"I'm still in favor of one of the original concepts ^\n","username":"Dan","ts":"2019-06-20T20:02:34.641Z"}
{"msg":"That would be a good \"Hyperledger Dan\" logo","username":"amundson","ts":"2019-06-20T20:22:47.601Z"}
{"msg":"Has joined the channel.","username":"huxiangdong","ts":"2019-06-21T09:19:46.316Z","type":"uj"}
{"msg":"Pfff if you can't agree to my logo preference, I don't know if I can collaborate with any of you. :rage: ","username":"Dan","ts":"2019-06-21T16:04:19.942Z"}
{"msg":"Pfff if you can't agree to my logo preference, I don't know if I can collaborate with any of you.","username":"Dan","ts":"2019-06-21T16:04:19.942Z"}
{"msg":"`Hyperledger Dan` will be way better than `Hyperledger Transact`. It's going to be 100% Pascal.","username":"Dan","ts":"2019-06-21T16:06:36.417Z"}
{"msg":"Big talk. Without looking it up, what’s the difference between a function and a procedure?","username":"jsmitchell","ts":"2019-06-21T16:18:30.353Z"}
{"msg":"I think one returns a value. But that's not important right now. All that's important is everyone agreeing with my preferences.","username":"Dan","ts":"2019-06-21T16:37:54.050Z"}
{"msg":"the announcement blog entry is up - https://www.hyperledger.org/blog/2019/06/27/introducing-hyperledger-transact","username":"amundson","ts":"2019-06-27T14:10:21.203Z"}
{"msg":"Has joined the channel.","username":"nicolapaoli","ts":"2019-06-27T14:33:58.130Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mbennett","ts":"2019-06-27T14:43:27.131Z","type":"uj"}
{"msg":"Shared on LI, Facebook, Twitter and the Hyperledger mailing lists!","username":"mbennett","ts":"2019-06-27T14:43:28.956Z"}
{"msg":"Reminder that the Hyperledger Transact Contributor Meeting will be held Monday, July 1st at 10am CDT. \n\nThe meeting information can be found on the Hyperledger Community Meetings Calendar.\n\nWe are finalizing the agenda for this meeting. If you have a topic that you would like to facilitate, please add it to the agenda.\n\nLooking forward to seeing everyone there!\n-Mark Ford","username":"mfford","ts":"2019-06-29T11:36:02.614Z"}
{"msg":"Reminder that the Hyperledger Transact Contributor Meeting will be held Monday, July 1st at 10am CDT. \n\nThe meeting information can be found on the Hyperledger Community Meetings Calendar: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings\n\nWe are finalizing the agenda for this meeting. If you have a topic that you would like to facilitate, please add it to the agenda: https://wiki.hyperledger.org/pages/viewpage.action?pageId=16318947\n","username":"mfford","ts":"2019-06-29T11:36:02.614Z"}
{"msg":"Has joined the channel.","username":"jadhavajay","ts":"2019-06-29T18:09:17.417Z","type":"uj"}
{"msg":"https://zoom.us/j/761947873\n","username":"Dan","ts":"2019-07-01T15:02:20.480Z"}
{"msg":"Has joined the channel.","username":"walmon","ts":"2019-07-01T15:43:34.915Z","type":"uj"}
{"msg":"Notes from the Hyperledger Transact Contributor Meeting this morning: https://wiki.hyperledger.org/pages/viewpage.action?pageId=16320010","username":"mfford","ts":"2019-07-01T16:50:21.023Z"}
{"msg":"Has joined the channel.","username":"Khaled.MH","ts":"2019-07-02T08:49:27.496Z","type":"uj"}
{"msg":"Has joined the channel.","username":"MHBauer","ts":"2019-07-02T20:40:22.617Z","type":"uj"}
{"msg":"Has joined the channel.","username":"fz","ts":"2019-07-05T03:16:58.493Z","type":"uj"}
{"msg":"Has joined the channel.","username":"HLFPOC","ts":"2019-07-08T08:21:45.014Z","type":"uj"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-07-08T17:58:11.597Z","type":"ul"}
{"msg":"Has joined the channel.","username":"pankajgoyal","ts":"2019-07-10T09:47:24.020Z","type":"uj"}
{"msg":"Has joined the channel.","username":"bur","ts":"2019-07-11T12:51:21.068Z","type":"uj"}
{"msg":"Has joined the channel.","username":"ra_w","ts":"2019-07-15T19:31:32.219Z","type":"uj"}
{"msg":"Has joined the channel.","username":"swetha","ts":"2019-07-18T01:13:48.804Z","type":"uj"}
{"msg":"Has joined the channel.","username":"mwklein","ts":"2019-07-25T14:51:43.320Z","type":"uj"}
{"msg":"Reminder that our next Hyperledger Transact Contributor Meeting will be held Monday, August 5th at 10am CDT. \n\nThis meeting can be found on the  Hyperledger Community Meetings Calendar: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings  \nYou can also join the zoom link here:  https://zoom.us/j/761947873  \n \nWe are looking for additional agenda items for this meeting. If you have a topic that you would like to facilitate, please add it to the agenda: https://wiki.hyperledger.org/pages/viewpage.action?pageId=16323258","username":"mfford","ts":"2019-08-01T17:09:42.987Z"}
{"msg":"Has joined the channel.","username":"huxd","ts":"2019-08-02T01:34:31.639Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jamesbarry","ts":"2019-08-02T15:09:39.681Z","type":"uj"}
{"msg":"As we start working on Go bindings for transact and Go transaction/batch building code, we will need a place to put it. I propose we place it in a new repository called \"transact-sdk-go\".","username":"amundson","ts":"2019-08-02T16:00:24.042Z"}
{"msg":"And that, moving forward, would translate into a general transact-sdk-[lang] pattern for any new langauge binding and/or transaction/batch building code we add","username":"amundson","ts":"2019-08-02T16:02:08.856Z"}
{"msg":"Has joined the channel.","username":"wkatsak","ts":"2019-08-02T16:27:21.489Z","type":"uj"}
{"msg":"Reminder that the Hyperledger Transact Contributor Meeting is today at 10am CDT.\n\nThis meeting can be found on the Hyperledger Community Meetings Calendar: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings\nYou can also join the zoom link here: https://zoom.us/j/761947873\n\nIt's not too late to add an agenda topic for this meeting. If you have a topic that you would like to facilitate, please add it to the agenda: https://wiki.hyperledger.org/pages/viewpage.action?pageId=16323258","username":"mfford","ts":"2019-08-05T12:26:25.046Z"}
{"msg":"@mastersingh24 FYI if you are online ^","username":"Dan","ts":"2019-08-05T15:02:36.081Z"}
{"msg":"you were too slow.\nAll I know is there were what sounded like police sirens and then @mfford seemed to think he needed to end the call right away.","username":"Dan","ts":"2019-08-05T15:16:21.550Z"}
{"msg":"I'm on the run. They will never catch me. I always have a plan.","username":"mfford","ts":"2019-08-05T15:17:23.502Z"}
{"msg":"Notes from today's Hyperledger Transact Contributor Meeting: https://wiki.hyperledger.org/pages/viewpage.action?pageId=13862597","username":"mfford","ts":"2019-08-05T20:27:40.795Z"}
{"msg":"Notes from today's Hyperledger Transact Contributor Meeting: https://wiki.hyperledger.org/pages/viewpage.action?pageId=16323805","username":"mfford","ts":"2019-08-05T20:27:40.795Z"}
{"msg":"Has joined the channel.","username":"jeffgarratt","ts":"2019-08-06T15:41:43.603Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rberg2","ts":"2019-08-06T20:08:19.539Z","type":"uj"}
{"msg":"Hello all, transact 0.1.5 has been released to crates.io","username":"rberg2","ts":"2019-08-06T20:08:58.479Z"}
{"msg":"Has joined the channel.","username":"richzhao","ts":"2019-08-09T11:51:13.245Z","type":"uj"}
{"msg":"@mastersingh24 Can you take a peek at this pull request when you have a sec? https://github.com/hyperledger/transact-rfcs/pull/3","username":"rbuysse","ts":"2019-08-21T15:29:31.499Z"}
{"msg":"Has joined the channel.","username":"RedKnight13","ts":"2019-08-22T08:46:42.532Z","type":"uj"}
{"msg":"Has joined the channel.","username":"silasdavis","ts":"2019-08-22T15:03:14.433Z","type":"uj"}
{"msg":"Hi Transact... I was having a look at the transact code with a view to seeing what it would take to expose a sabre-compatible WASM backend in Burrow ","username":"silasdavis","ts":"2019-08-22T15:03:15.301Z"}
{"msg":"any pointers?","username":"silasdavis","ts":"2019-08-22T15:03:18.216Z"}
{"msg":"@silasdavis so, we have started on a 0mq network transport for transact that will allow you to run seth","username":"amundson","ts":"2019-08-22T15:08:58.601Z"}
{"msg":"oh, opposite question :)","username":"amundson","ts":"2019-08-22T15:09:26.792Z"}
{"msg":"ha I think so","username":"silasdavis","ts":"2019-08-22T15:09:32.357Z"}
{"msg":"what I am thinking is - can I compile transact and deploy it as a contract on Burrow","username":"silasdavis","ts":"2019-08-22T15:09:44.268Z"}
{"msg":"thoughts are vague","username":"silasdavis","ts":"2019-08-22T15:10:02.714Z"}
{"msg":"ok, so the barrier initially is going to be Go->Rust; we created a Go repo but haven't started on the bindings yet","username":"amundson","ts":"2019-08-22T15:10:03.750Z"}
{"msg":"does transact run sabre, or does transact run on sabre","username":"silasdavis","ts":"2019-08-22T15:10:30.219Z"}
{"msg":"does transact run sabre, or does transact run on sabre?","username":"silasdavis","ts":"2019-08-22T15:10:30.219Z"}
{"msg":"that might be mistunderstanding number 0","username":"silasdavis","ts":"2019-08-22T15:10:37.398Z"}
{"msg":"that might be misunderstanding number 0","username":"silasdavis","ts":"2019-08-22T15:10:37.398Z"}
{"msg":"think of transact as an API to run transactions through various smart contracts engines, like sabre and seth","username":"amundson","ts":"2019-08-22T15:11:24.866Z"}
{"msg":"(though, it is also the implementation, but from a user perspective, the API is the relevant bit)","username":"amundson","ts":"2019-08-22T15:11:47.257Z"}
{"msg":"So say I have a grid smart contract will that rely on Transact (and transitively sabre, say) or is it more directly dependent on sabre? ","username":"silasdavis","ts":"2019-08-22T15:14:33.161Z"}
{"msg":"It's the smart contracts/objects that work with transact/sabre that I am interested in running directly on Burrow, compiling what I need from rust to WASM","username":"silasdavis","ts":"2019-08-22T15:15:17.629Z"}
{"msg":"(also I'll take the time to actually run transact which might make more of this clear...)","username":"silasdavis","ts":"2019-08-22T15:16:13.671Z"}
{"msg":"so, for example: say you have some initial state S0 (maybe represented as a merkle radix tree or maybe a key/value store). you can create a transact scheduler and feed transactions into it. you then give part of the scheduler to transact's executor, which will use sabre/seth to run the contracts in the context of S0. the results flow back to the application(DLT) in the form of transaction receipts, which are the state transitions necessary. the application(DLT) takes the results and uses them to update state to create a new state S1","username":"amundson","ts":"2019-08-22T15:16:23.489Z"}
{"msg":"Grid smart contracts are compiled against the Sabre SDK. That SDK is currently API-compatible with Sawtooth's transaction processor API. So there is some precedent for multiple compile targets.","username":"amundson","ts":"2019-08-22T15:20:05.910Z"}
{"msg":"When compiled in \"wasm\" mode, we are compiling against a FFI (C) interface to do get/set state, etc.","username":"amundson","ts":"2019-08-22T15:20:54.526Z"}
{"msg":"and then sabre implements the other side as well (the container) that marshalls those calls to sawtooth or transact's state (depending the context)","username":"amundson","ts":"2019-08-22T15:21:45.885Z"}
{"msg":"okay thanks, it sounds like for this particular idea I am interested in exposing state to a sabre contract","username":"silasdavis","ts":"2019-08-22T15:21:56.752Z"}
{"msg":"I noticed the c dependency - so are you just using the C FFI as a calling convention here ","username":"silasdavis","ts":"2019-08-22T15:22:14.820Z"}
{"msg":"you are not calling C code, or rust code via a C binding or anything?","username":"silasdavis","ts":"2019-08-22T15:22:40.997Z"}
{"msg":"right, for the calling convention. basically, it's the interface that allows the sandboxed wasm code to call outside the sandbox. the code is all rust.","username":"amundson","ts":"2019-08-22T15:24:07.987Z"}
{"msg":"we are using the parity wasmi interpreter, so the code outside of the interpreter is basically wasmi->transact(or sawtooth) code","username":"amundson","ts":"2019-08-22T15:25:43.331Z"}
{"msg":"(I keep referring to sawtooth only because Sabre can be compiled against transact or sawtooth.)","username":"amundson","ts":"2019-08-22T15:26:22.832Z"}
{"msg":"ah okay, so sounds like there isn't a direct extern wasm -- https://github.com/rustwasm/team/issues/29","username":"silasdavis","ts":"2019-08-22T15:27:40.343Z"}
{"msg":"so I guess that's why the parity wasm works that way","username":"silasdavis","ts":"2019-08-22T15:27:49.999Z"}
{"msg":"we are using https://github.com/perlin-network/life FWIW\n","username":"silasdavis","ts":"2019-08-22T15:28:09.291Z"}
{"msg":"so, for example, one thing you could do integration-wise is implement a new State definition (it is a trait in Transact) which is backed by something other than the merkle tree implementation, and then use sabre to run the grid smart contracts, and then take the receipts and apply them to your version of state. because your state implementation can have whatever rules for accessing state you want, you have a lot of control.","username":"amundson","ts":"2019-08-22T15:29:20.873Z"}
{"msg":"I wouldn't necessarily suggest replacing Sabre's implementation. we can always modify it if needed, and likely you just want to figure out the challenging state-mapping piece first anyway.","username":"amundson","ts":"2019-08-22T15:31:26.996Z"}
{"msg":"currently Grid is assuming the merkle-radix addresses when creating keys (as do all Sabre contracts currently), and the question becomes, what does that mean if what you want to use a different state design.","username":"amundson","ts":"2019-08-22T15:33:12.089Z"}
{"msg":"I would suggest starting with sawtooth xo if you want to get something working as a proof of concept. it is easy to deploy to wasm and then works like all the grid smart contracts but has easier business logic to reason about.","username":"amundson","ts":"2019-08-22T15:34:53.811Z"}
{"msg":"(you can deploy sawtooth xo into sabre and not use the rest of sawtooth)","username":"amundson","ts":"2019-08-22T15:35:50.132Z"}
{"msg":"to explain the constraint I'm trying to thing through - I'd like to be able to run some of these contracts without introducing another process - run it all in Burrow - ideally in pure go...","username":"silasdavis","ts":"2019-08-22T15:36:11.321Z"}
{"msg":"I'm not sure how feasible that is","username":"silasdavis","ts":"2019-08-22T15:36:17.411Z"}
{"msg":"well, Transact is written in Rust. But the ideas is that we create a good Go wrapper so that from the DLT perspective (burrow, fabric), Transact looks like a Go library (which just happens to be implemented in Rust lower down the stack). Running all in the same process should be fine--today, you compile sabre directly in so it's not a separate process.","username":"amundson","ts":"2019-08-22T15:38:43.012Z"}
{"msg":"yeah but then we become CGO not Go","username":"silasdavis","ts":"2019-08-22T15:39:41.575Z"}
{"msg":"not the end of the world for sure (we are CGO if you compile us with sqlite support for Vent so there is precedent)","username":"silasdavis","ts":"2019-08-22T15:40:04.487Z"}
{"msg":"sure, same basic idea as Ursa","username":"amundson","ts":"2019-08-22T15:40:37.575Z"}
{"msg":"We have machinery in Burrow that is a bit like transact, but it sounds like what you are advancing is the point of transact is to reuse that actual code, not implement something parallel","username":"silasdavis","ts":"2019-08-22T15:41:03.774Z"}
{"msg":"but i was wondering if doing that would still provide us something worthwhile in terms of interop lower down the stack with sabre","username":"silasdavis","ts":"2019-08-22T15:41:44.928Z"}
{"msg":"but perhaps once you take that out it really is just get/set FFI in C","username":"silasdavis","ts":"2019-08-22T15:41:59.512Z"}
{"msg":"but perhaps once you take that out it really is just get/set C FFI","username":"silasdavis","ts":"2019-08-22T15:41:59.512Z"}
{"msg":"which isn't much of an interop","username":"silasdavis","ts":"2019-08-22T15:42:12.159Z"}
{"msg":" so maybe compiling in transact as an option that writes to our merkle state is the more interesting thing to do","username":"silasdavis","ts":"2019-08-22T15:42:30.662Z"}
{"msg":"yes, the idea of transact is a library, not a specification. we could do a sabre-related spec. but I see more collaboration happening with library sharing and using transact. in part, because then you not only get sabre support, but every smart contract engine that ever gets implemented is likely to work (daml for free, for example, and chaincode if we add support for it).","username":"amundson","ts":"2019-08-22T15:47:35.656Z"}
{"msg":"if pure-go is important, we can make transact another system process (which violates the other constraint you mentioned), in which case, it just provides a service that can be used. that approach is why I have referred to transact as a \"library or component\" because it depends on whether you encapsulate it in a process. but if we want to go down that path, we will want to build a transact daemon 'transactd' process that can optionally be used (approach up to the DLT).","username":"amundson","ts":"2019-08-22T15:53:20.689Z"}
{"msg":"what are the disadvantages of cgo?","username":"amundson","ts":"2019-08-22T15:55:13.210Z"}
{"msg":"It's not ruinous, but pure-go is enough of a positive that we try and hang on to it for our standard builds, see: https://dave.cheney.net/2016/01/18/cgo-is-not-go","username":"silasdavis","ts":"2019-08-22T16:00:31.706Z"}
{"msg":"https://about.sourcegraph.com/go/gophercon-2018-adventures-in-cgo-performance","username":"silasdavis","ts":"2019-08-22T16:01:13.298Z"}
{"msg":"It also breaks Go's pprof pretty badly which I use a lot","username":"silasdavis","ts":"2019-08-22T16:01:51.396Z"}
{"msg":"See: https://rakyll.org/pprof-ui/","username":"silasdavis","ts":"2019-08-22T16:02:09.910Z"}
{"msg":"If we wanted to go nuts I suppose I could compile transact to WASM...","username":"silasdavis","ts":"2019-08-22T16:02:42.168Z"}
{"msg":"compiling transact to wasm isn't going to work, because transact is heavily threaded","username":"amundson","ts":"2019-08-22T16:25:15.634Z"}
{"msg":"I assume the dependency list also wouldn't compile with a wasm target","username":"amundson","ts":"2019-08-22T16:25:42.950Z"}
{"msg":"Has joined the channel.","username":"DennisM330","ts":"2019-08-23T11:43:58.040Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2019-08-26T21:36:29.044Z","type":"uj"}
{"msg":"Hi - I broadly updated the CODEOWNERS files in the four Transact repos to reflect the actual permissions. Please review the changes carefully.","username":"rjones","ts":"2019-08-26T21:37:00.860Z"}
{"msg":"https://github.com/hyperledger/transact-sdk-go/pull/2 https://github.com/hyperledger/transact-contrib/pull/3 https://github.com/hyperledger/transact-rfcs/pull/4 https://github.com/hyperledger/transact/pull/13","username":"rjones","ts":"2019-08-26T21:40:28.473Z"}
{"msg":"Has joined the channel.","username":"AlexanderZhovnuvaty","ts":"2019-08-27T10:08:05.898Z","type":"uj"}
{"msg":"hi guys! Need advise on 2 questions: \n\n1) Does this framework support ERCXXX smart contracts? \n2) Can it be used as gateway between Fabric and Sawooth networks? \n\nI have a task where two communities (one work with Fabric, another with Sawtooth) should have subset of common data handled by certain rules. Assume it should be some kind of smart contract which can be used between multiple networks. \n\nHope Transact can cover such requirement. \n\nThanks in advance ","username":"AlexanderZhovnuvaty","ts":"2019-08-27T10:08:06.472Z"}
{"msg":"@rjones I left comments on the https://github.com/hyperledger/transact/pull/13 one","username":"amundson","ts":"2019-08-28T14:19:55.855Z"}
{"msg":"@AlexanderZhovnuvaty 1) after we add a 0mq network execution adapter, it will be possible to use transact to run Sawtooth Seth, which in turn uses Burrow","username":"amundson","ts":"2019-08-28T14:30:25.888Z"}
{"msg":"2) neither Sawtooth or Fabric support Transact yet, it is in-progress; Transact can be used to execute Sawtooth smart contracts today if they are written in Rust, but the use-case would be running them in a separate process (like, if you were implementing another DLT or a tool); when Sawtooth and Fabric do support Transact, it will be possible to write a smart contract and then deploy it to either network (for example, deploying Sabre wasm smart contracts); if what you need to to coordinate between multiple networks, you may want an oracle process instead","username":"amundson","ts":"2019-08-28T14:36:33.663Z"}
{"msg":"[ ](https://chat.hyperledger.org/channel/transact?msg=9YwtvqE22hBndA4qc) Thanks! Pls point me to some documentation about what does \"you may want an oracle process instead\" mean?","username":"AlexanderZhovnuvaty","ts":"2019-08-28T15:25:31.011Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/transact?msg=9YwtvqE22hBndA4qc","url":"https://chat.hyperledger.org/channel/transact?msg=9YwtvqE22hBndA4qc","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Hi! I am looking to get more familiar with Transact and possibly start contributing. I have seen the API docs. Are there any examples/tutorials I can try out? ","username":"swetha","ts":"2019-08-29T17:26:14.589Z"}
{"msg":"@swetha the best \"examples\" in the repo are the test code. the sawtooth.rs code has a couple xo tests (it shows how to run the xo sawtooth transaction processor without modification). in particular, execute_create_xo_game() test has the basic flow.","username":"amundson","ts":"2019-08-29T18:48:29.306Z"}
{"msg":"we should perhaps add some standalone example though, because the tests are not necessarily super accessible.","username":"amundson","ts":"2019-08-29T18:49:36.088Z"}
{"msg":"I will start there then. Are issues generally tracked in JIRA on the Transact board?","username":"swetha","ts":"2019-08-29T18:51:31.473Z"}
{"msg":"that sawtooth.rs module is behind a feature that is off by default, because we don't always want the sawtooth dependency. but if you ignore the compatibility stuff, the rest of it is the same.","username":"amundson","ts":"2019-08-29T18:52:16.566Z"}
{"msg":"Okay, ill play around with that","username":"swetha","ts":"2019-08-29T18:57:13.211Z"}
{"msg":"Thanks for that starting point!","username":"swetha","ts":"2019-08-29T18:57:23.964Z"}
{"msg":"there is also the Command family - in workload::command.rs that is an implementation of a TransactionHandler. we started on an RFC for that which will explain it, I'll see if we can get it submitted to the RFC repo","username":"amundson","ts":"2019-08-29T18:57:31.710Z"}
{"msg":"for JIRA, this is the kanban board we use - https://jira.hyperledger.org/secure/RapidBoard.jspa?rapidView=232&quickFilter=621","username":"amundson","ts":"2019-08-29T18:59:19.986Z"}
{"msg":"this is the backlog view: https://jira.hyperledger.org/secure/RapidBoard.jspa?rapidView=232&view=planning.nodetail&quickFilter=621&epics=visible","username":"amundson","ts":"2019-08-29T18:59:54.172Z"}
{"msg":"these sawtooth docs apply to transact, and potentially we could move over the content: https://sawtooth.hyperledger.org/docs/core/releases/latest/architecture/global_state.html, https://sawtooth.hyperledger.org/docs/core/releases/latest/architecture/transactions_and_batches.html","username":"amundson","ts":"2019-08-29T19:05:30.203Z"}
{"msg":"some, but not all of this applies: https://sawtooth.hyperledger.org/docs/core/releases/latest/architecture/scheduling.html - the chain controller / block publisher stuff doesn't apply and the exact relationships between the components are better in Transact","username":"amundson","ts":"2019-08-29T19:06:28.579Z"}
{"msg":"this has some content related to the receipts: https://sawtooth.hyperledger.org/docs/core/releases/latest/architecture/events_and_transactions_receipts.html","username":"amundson","ts":"2019-08-29T19:07:26.950Z"}
{"msg":"Has left the channel.","username":"mattp","ts":"2019-08-29T19:09:09.553Z","type":"ul"}
{"msg":"when we start pulling together a tutorial, we can use these source sections out of the sawtooth app dev guide, but modify them to match the Transact TransactionHandler API - https://sawtooth.hyperledger.org/docs/core/releases/latest/app_developers_guide/rust_sdk.html, https://sawtooth.hyperledger.org/docs/core/releases/latest/app_developers_guide/address_and_namespace.html, and some select portions of https://sawtooth.hyperledger.org/docs/core/releases/latest/app_developers_guide/event_subscriptions.html","username":"amundson","ts":"2019-08-29T19:10:29.160Z"}
{"msg":"of course, none of that is geared toward the DLT developer, so doesn't cover how to actually use Transact itself, only how to write TransactionHandlers and some client code","username":"amundson","ts":"2019-08-29T19:11:54.152Z"}
{"msg":"Okay, thanks for the resources. I don't see issues marked Help Wanted currently. What is the best way to start contributing to the project?","username":"swetha","ts":"2019-08-29T19:24:34.008Z"}
{"msg":"a couple ideas: create some examples (so the next person doesn't have to dive into testing code), pull some of those docs over into the transact repo, do some performance testing and enhancements, write a state backend that works like Fabric's, start working on go bindings and/or go client code (@wkatsak has a start on Go transaction/batch building code)","username":"amundson","ts":"2019-08-29T19:39:14.088Z"}
{"msg":"then there are several core things we need to reconcile for Fabric support, such as transaction differences and receipt<->rw set/events, which might be more RFCs (\"how to modify the API to support X\") or even a fabric.rs compatibility module for data structure conversation","username":"amundson","ts":"2019-08-29T19:45:55.619Z"}
{"msg":"Thanks Shawn!","username":"swetha","ts":"2019-08-29T20:14:58.703Z"}
{"msg":"+1! Thanks!","username":"cbf","ts":"2019-08-29T20:17:36.210Z"}
{"msg":"where is the \"Go transaction/batch building code\" (or any other material describing this)? seems the transact-sdk-go repo is basically empty? I'm also interested in how transact might work with fabric...","username":"huxd","ts":"2019-08-30T03:26:17.096Z"}
{"msg":"REMINDER: The Hyperledger Transact Contributor Meeting is tomorrow, Wednesday September 4th at 10am CDT. \n\nThis meeting can be found on the Hyperledger Community Meetings Calendar: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings \nYou can also join the zoom link here: https://zoom.us/j/162904513\n\nThere is still time to add items to the agenda for this meeting. If you have a topic that you would like to facilitate, please add it to the agenda: https://wiki.hyperledger.org/pages/viewpage.action?pageId=16326231\n","username":"mfford","ts":"2019-09-03T12:48:52.683Z"}
{"msg":"Has joined the channel.","username":"st","ts":"2019-09-04T12:23:45.365Z","type":"uj"}
{"msg":":transact: ","username":"rjones","ts":"2019-09-04T22:29:17.133Z"}
{"msg":"is that the logo? what is it?","username":"MHBauer","ts":"2019-09-05T02:05:44.723Z"}
{"msg":"yes, it's the Transact logo","username":"rjones","ts":"2019-09-05T02:07:50.383Z"}
{"msg":"I added :fabric: :sawtooth: :transact: :iroha: :besu: :hyperledger: and more","username":"rjones","ts":"2019-09-05T02:08:31.250Z"}
{"msg":"Has joined the channel.","username":"AlbertCL","ts":"2019-09-05T12:18:46.432Z","type":"uj"}
{"msg":"Hi! I've just discovered this project. What is the state of it? Or where I can check the functionalities and the todo list? thanks!","username":"AlbertCL","ts":"2019-09-05T12:18:46.907Z"}
{"msg":"@AlbertCL check out the chat history above (Aug 29), I cover a lot of that","username":"amundson","ts":"2019-09-05T12:54:49.547Z"}
{"msg":"Hi, I am having issues importing the SawtoothToTransactHandlerAdapter. When I add this line: https://github.com/hyperledger/transact/blob/master/libtransact/src/sawtooth.rs#L51 minus the comments, I am getting an\n```\nunresolved import `transact::sawtooth` \n```\nI am new to rust, so I am assuming I am making a mistake in terms of the module structure. Any ideas? I get the same issue if I try importing it internally such as using it in the src/lib.rs in libtransact. But there I try `use sawtooth`.","username":"swetha","ts":"2019-09-09T21:27:27.537Z"}
{"msg":"*Update* Looks like I was missing the the feature enabling.","username":"swetha","ts":"2019-09-09T22:39:50.432Z"}
{"msg":"Transact 0.1.6 has been released! https://crates.io/crates/transact/0.1.6","username":"rbuysse","ts":"2019-09-12T16:32:17.901Z"}
{"msg":"This includes a fix to the sawtooth compat layer, and some better debug output from the protocol objects (no more giant byte vecs)","username":"pschwarz","ts":"2019-09-12T16:36:21.818Z"}
{"msg":"Has left the channel.","username":"rjones","ts":"2019-09-16T15:34:41.504Z","type":"ul"}
{"msg":"Hi, I am trying to extend the sawtooth xo create example to work with multiple transactions. I am having a little difficulty in understanding how the state changes should/are applied to the database. I have been applying the update to the database and though I am able to verify the changes are in the database, the root hash that is generated stays the same. Any ideas/tips?\n\nThe essential steps I am doing:\n```\nlet merkle_db =\n        MerkleRadixTree::new(db.clone_box(), None).expect(\"Cannot initialize merkle database\");\n\n    let initial_state_root = merkle_db.get_merkle_root();\n    let mut writer = db.get_writer().unwrap();\n    writer.put(game_address.as_bytes(), &value).unwrap();\n    assert_eq!(\n        writer.as_reader().get(game_address.as_bytes()).unwrap(),\n        value\n    );\n    writer.commit().unwrap();\n    let merkle_db =\n        MerkleRadixTree::new(db.clone_box(), None).expect(\"Cannot initialize merkle database\");\n\n    let state_root = merkle_db.get_merkle_root();\n    assert_ne!(initial_state_root, state_root);\n```","username":"swetha","ts":"2019-09-18T22:45:51.327Z"}
{"msg":"Hi, I am trying to extend the sawtooth xo create example to work with multiple transactions. I am having a little difficulty in understanding how the state changes should/are applied to the database. I have been applying the update to the database and though I am able to verify the changes are in the database, the root hash that is generated stays the same. Any ideas/tips?\n\nThe essential steps I am doing:\n```\n    let merkle_db =\n        MerkleRadixTree::new(db.clone_box(), None).expect(\"Cannot initialize merkle database\");\n\n    let initial_state_root = merkle_db.get_merkle_root();\n    let mut writer = db.get_writer().unwrap();\n    writer.put(game_address.as_bytes(), &value).unwrap();\n    assert_eq!(\n        writer.as_reader().get(game_address.as_bytes()).unwrap(),\n        value\n    );\n    writer.commit().unwrap();\n    let merkle_db =\n        MerkleRadixTree::new(db.clone_box(), None).expect(\"Cannot initialize merkle database\");\n\n    let state_root = merkle_db.get_merkle_root();\n    assert_ne!(initial_state_root, state_root);\n```","username":"swetha","ts":"2019-09-18T22:45:51.327Z"}
{"msg":"Hi, I am trying to extend the sawtooth xo create example to work with multiple transactions. I am having a little difficulty in understanding how the state changes should/are applied to the database. I have been applying the update to the database and though I am able to verify the changes are in the database, the root hash that is generated stays the same. Any ideas/tips?\n\nThe essential steps I am doing:\n```\n    let db = Box::new(BTreeDatabase::new(&merkle::INDEXES));\n    let merkle_db =\n        MerkleRadixTree::new(db.clone_box(), None).expect(\"Cannot initialize merkle database\");\n\n    let initial_state_root = merkle_db.get_merkle_root();\n    let mut writer = db.get_writer().unwrap();\n    writer.put(game_address.as_bytes(), &value).unwrap();\n    assert_eq!(\n        writer.as_reader().get(game_address.as_bytes()).unwrap(),\n        value\n    );\n    writer.commit().unwrap();\n    let merkle_db =\n        MerkleRadixTree::new(db.clone_box(), None).expect(\"Cannot initialize merkle database\");\n\n    let state_root = merkle_db.get_merkle_root();\n    assert_ne!(initial_state_root, state_root);\n```","username":"swetha","ts":"2019-09-18T22:45:51.327Z"}
{"msg":"Looks like you might need to get_merkle_root() before the second ‘let merkle_db’","username":"jsmitchell","ts":"2019-09-19T00:48:01.682Z"}
{"msg":"Wouldn't that give me the merkle_root of the original tree? Since it was made from a clone of the db? I might also be misunderstanding what db.clone_box() does.","username":"swetha","ts":"2019-09-19T01:05:35.159Z"}
{"msg":"Also in my code these line are actually a helper functions that take in a db. I just copied the one in sawtooth.rs https://github.com/hyperledger/transact/blob/master/libtransact/src/sawtooth.rs#L488-L492","username":"swetha","ts":"2019-09-19T01:07:31.571Z"}
{"msg":"That write commit should mutate the trie instance","username":"jsmitchell","ts":"2019-09-19T01:54:35.736Z"}
{"msg":"If you create a new instance off of the db, that instance won’t have a root set","username":"jsmitchell","ts":"2019-09-19T01:55:18.186Z"}
{"msg":"What is the process of getting the new root? Because merkle_db cloned an earlier version of the tree so it doesn't have the update","username":"swetha","ts":"2019-09-19T03:38:09.250Z"}
{"msg":"@pschwarz should be able to answer this in the morning","username":"jsmitchell","ts":"2019-09-19T05:10:35.484Z"}
{"msg":"@swetha Take a look at the unit tests: https://github.com/hyperledger/transact/blob/master/libtransact/src/state/merkle.rs#L960\n\nTL;DR: the `commit` function on `MerkleRadixTree` returns the new root.  You should be writing your values via the merkle tree, not to the backing database directly.","username":"pschwarz","ts":"2019-09-19T13:27:02.132Z"}
{"msg":"Has joined the channel.","username":"josephnicholas","ts":"2019-09-19T15:51:30.555Z","type":"uj"}
{"msg":"@pschwarz  Thanks! I will try that out. Why does the context manager take in the backing database instead of the MerkleRadixTree? I am following /expanding the example laid out in sawtooth.rs as I try to understand the end to end","username":"swetha","ts":"2019-09-19T16:11:08.032Z"}
{"msg":"It creates MerkleRadixTree instances based on a base state root povided at the beginning of schedule. It can also be operating on multiple state-roots, backed by the same database. Since it's copy-on-write, this is safe.","username":"pschwarz","ts":"2019-09-19T16:34:00.275Z"}
{"msg":"ahh, thanks!","username":"swetha","ts":"2019-09-19T17:09:05.339Z"}
{"msg":"Is there a way to easily convert between the `receipt::StateChange` enum and the `state::StateChange` enum? I was also wondering why there are two enums for StateChange that are essentially the same. I see they have different methods implemented but don't understand why they could not be on the same enum.","username":"swetha","ts":"2019-09-19T17:40:36.058Z"}
{"msg":"I took a look at the test you mentioned above. How does that work outside of that module? Isn't commit not public? I might be missing something simple, I am new to rust. Thanks for your help!","username":"swetha","ts":"2019-09-19T18:14:44.848Z"}
{"msg":"I worked around it by using the MerkleRadixTree. I am not sure that was the right way to update the merkle tree.","username":"swetha","ts":"2019-09-19T18:42:04.886Z"}
{"msg":"It's public via the `transact::state::Write` trait","username":"pschwarz","ts":"2019-09-19T19:06:50.050Z"}
{"msg":"There should be a `From` implementation for those, somewhere.  If not, we should probably add one","username":"pschwarz","ts":"2019-09-19T19:07:39.459Z"}
{"msg":"There should be a `From` implementation for ~those~ the various StateChange structs, somewhere.  If not, we should probably add one","username":"pschwarz","ts":"2019-09-19T19:07:39.459Z"}
{"msg":"@swetha the reason there are multiple StateChange is that the modules are otherwise independent, IIRC--the two APIs don't fundamentally depend upon each other, even if they are working with (essentially) the same data within their respective APIs; trying to keep the interdependencies clean. receipt is basically a data class that is often serialized/deserialized (similar to transaction, batch, etc.) and so emphasis on that code is backward compatibility including the serialized formats; the state code doesn't necessarily have that restriction","username":"amundson","ts":"2019-09-19T19:49:49.780Z"}
{"msg":"Thanks @pschwarz, I didn't realize you need to import the trait specifically.\n\n@amundson Is the `From` implementation that @pschwarz mentioned something that should be added to the implementation ? I understand trying to keep the modules independent, but I see that one would need to convert between the two often? Manually building the struct is not difficult, just seems a little weird if that is the expected process","username":"swetha","ts":"2019-09-19T19:55:03.324Z"}
{"msg":"looking at some code which uses Transact, looks like it is doing the conversion manually. not great. we should add the From for sure, the question is were to put it (receipt or state). @pschwarz and I were discussing this briefly and we think it should probably go in the receipt module.","username":"amundson","ts":"2019-09-19T20:40:33.379Z"}
{"msg":"reasoning is basically: receipt module is already concerned with conversions (to/from protobuf), so it seems more natural that it would support the conversion to state::StateChange. this is probably better (maybe) than introducing a third module.","username":"amundson","ts":"2019-09-19T20:42:28.962Z"}
{"msg":"and, we probably only need receipt->state and not state->receipt","username":"amundson","ts":"2019-09-19T20:44:43.951Z"}
{"msg":"Okay, I would love to send a pr in for that!","username":"swetha","ts":"2019-09-19T20:49:11.463Z"}
{"msg":"I have been working on expanding and extracting the test you pointed me towards earlier : https://github.com/swetharepakula/transact/blob/examples/examples/src/main.rs. I know we discussed adding examples to the repo or the contrib repo when I started looking into this, I was wondering if the example was close to what you were thinking? Any feedback would be great","username":"swetha","ts":"2019-09-19T20:51:36.123Z"}
{"msg":"@swetha yes, though I just took a quick look. I'll try and look deeper later and see if I have any feedback.","username":"amundson","ts":"2019-09-20T15:09:25.234Z"}
{"msg":"Has joined the channel.","username":"adineshreddy1","ts":"2019-09-26T15:04:42.850Z","type":"uj"}
{"msg":"@amundson Have you had a chance to look at the example? Would it be easier if I opened a PR with that?","username":"swetha","ts":"2019-09-26T19:14:17.257Z"}
{"msg":"@swetha I've only glanced at it, haven't had time yet to look over it in detail. opening a PR sounds good. some initial thoughts: a) needs copyright headers; b) not sure examples should be part of the workspace (need more opinions on this); c) we probably want to leave room for multiple examples, so sticking this under examples/simple_xo/ probably makes sense. (where \"simple_xo\" is whatever makes sense to call this one)","username":"amundson","ts":"2019-09-26T20:45:08.453Z"}
{"msg":"@amundson I think where this should exist was what stopped me from making it into a PR initially cause I wasn't sure it should be in the workspace as well. I will rework the directory structure and submit a PR. Thanks! Also wasn't sure what is the typical way Transact tracks issues/PRs. For the other change I made I created a JIRA and put the jira number in the commit title, but I see that other commits don't follow that pattern","username":"swetha","ts":"2019-09-26T20:50:45.844Z"}
{"msg":"ok, just looked at another repo we have w/examples and we do include it in the workspace","username":"amundson","ts":"2019-09-26T20:51:32.073Z"}
{"msg":"@swetha we've generally followed https://chris.beams.io/posts/git-commit/ ","username":"amundson","ts":"2019-09-26T20:57:21.254Z"}
{"msg":"Okay I will keep the examples in the workspace then and just create the simple_xo folder","username":"swetha","ts":"2019-09-26T20:57:23.394Z"}
{"msg":"we don't generally link the commit to a bug/feature ticket, but is you want to you should use the format it suggests there","username":"amundson","ts":"2019-09-26T20:58:34.638Z"}
{"msg":"the expectation is, basically, that the commit message should be good enough in isolation","username":"amundson","ts":"2019-09-26T20:59:35.574Z"}
{"msg":"Thanks! I don't have a strong preference on adding the ticket number. I am used to Fabric and Cloud Foundry where the ticket was always in the title, so just learning what the process is here","username":"swetha","ts":"2019-09-26T21:00:19.941Z"}
{"msg":"for #17, if you update the commit message, likely it will get merged tomorrow","username":"amundson","ts":"2019-09-26T21:01:57.132Z"}
{"msg":"Oh great, will do that now","username":"swetha","ts":"2019-09-26T21:38:21.480Z"}
{"msg":"The Hyperledger Transact Contributor Meeting is tomorrow, Monday October 7th at 10am CDT. \n\nThis meeting can be found on the Hyperledger Community Meetings Calendar. \nYou can also join the zoom link here: https://zoom.us/j/761947873\n\nIf you have a topic that you would like to facilitate, please add it to the agenda: https://wiki.hyperledger.org/pages/viewpage.action?pageId=22380624\n","username":"mfford","ts":"2019-09-30T18:14:09.009Z"}
{"msg":"The Hyperledger Transact Contributor Meeting is, Monday October 7th at 10am CDT. \n\nThis meeting can be found on the Hyperledger Community Meetings Calendar. \nYou can also join the zoom link here: https://zoom.us/j/761947873\n\nIf you have a topic that you would like to facilitate, please add it to the agenda: https://wiki.hyperledger.org/pages/viewpage.action?pageId=22380624\n","username":"mfford","ts":"2019-09-30T18:14:09.009Z"}
{"msg":"The Hyperledger Transact Contributor Meeting is Monday October 7th at 10am CDT. \n\nThis meeting can be found on the Hyperledger Community Meetings Calendar. \nYou can also join the zoom link here: https://zoom.us/j/761947873\n\nIf you have a topic that you would like to facilitate, please add it to the agenda: https://wiki.hyperledger.org/pages/viewpage.action?pageId=22380624\n","username":"mfford","ts":"2019-09-30T18:14:09.009Z"}
{"msg":"At today's Transact contributor meeting, @amundson mentioned his earlier suggestions for Transact projects. Here's a link to that info: https://chat.hyperledger.org/channel/transact?msg=WfEjFtntwX962MEij\n^  @arsulegai ","username":"achenette","ts":"2019-10-07T15:26:25.584Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/transact?msg=WfEjFtntwX962MEij","url":"https://chat.hyperledger.org/channel/transact?msg=WfEjFtntwX962MEij","remote":true,"fileId":null,"fileName":null}]}
{"msg":"He listed \"those docs\" in this post: \nhttps://chat.hyperledger.org/channel/transact?msg=fWWaH4mHp2kevmqTb","username":"achenette","ts":"2019-10-07T15:28:53.764Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/transact?msg=fWWaH4mHp2kevmqTb","url":"https://chat.hyperledger.org/channel/transact?msg=fWWaH4mHp2kevmqTb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"He listed \"those docs\" in this post: \nhttps://chat.hyperledger.org/channel/transact?msg=fWWaH4mHp2kevmqTb\n\n(See the original post for the full list.)","username":"achenette","ts":"2019-10-07T15:28:53.764Z","attachments":[{"message_link":"https://chat.hyperledger.org/channel/transact?msg=fWWaH4mHp2kevmqTb","url":"https://chat.hyperledger.org/channel/transact?msg=fWWaH4mHp2kevmqTb","remote":true,"fileId":null,"fileName":null}]}
{"msg":"Command Family RFC PR: https://github.com/hyperledger/transact-rfcs/pull/6","username":"pschwarz","ts":"2019-10-07T15:29:26.010Z"}
{"msg":"Thanks @achenette @amundson . I will start with an example as well.","username":"arsulegai","ts":"2019-10-07T15:35:17.932Z"}
{"msg":"Notes from Today's HL Transact Contributor Meeting: https://wiki.hyperledger.org/pages/viewpage.action?pageId=22381806","username":"mfford","ts":"2019-10-07T17:57:25.094Z"}
{"msg":"Has joined the channel.","username":"lehors","ts":"2019-10-08T16:16:55.294Z","type":"uj"}
{"msg":"https://docs.google.com/document/d/12ce5XjmNdMF647mk2IyWdyz1mYPEA7MtCrfpKQw0t3c/edit#heading=h.2y5gwh60nerk","username":"jsmitchell","ts":"2019-10-09T17:41:37.435Z"}
{"msg":"working doc for options of aries DID/VCs as an identity source for sawtooth/transact ^\n","username":"jsmitchell","ts":"2019-10-09T17:41:49.481Z"}
{"msg":"@nage ^ in case you didn't already see this","username":"Dan","ts":"2019-10-10T15:29:54.169Z"}
{"msg":"Has joined the channel.","username":"nage","ts":"2019-10-10T15:29:54.211Z","type":"uj"}
{"msg":"The Hyperledger Transact Contributor Meeting is Monday, November 4th at 10am CDT. \n\nThis meeting can be found on the Hyperledger Community Meetings Calendar: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings\nYou can also join the zoom link here: https://zoom.us/j/761947873\n\nIf you have a topic that you would like to facilitate, please add it to the agenda: https://wiki.hyperledger.org/pages/viewpage.action?pageId=24773672","username":"mfford","ts":"2019-10-31T13:42:55.082Z"}
{"msg":"Has joined the channel.","username":"johnfranklin","ts":"2019-11-04T05:01:38.593Z","type":"uj"}
{"msg":"REMINDER: The Hyperledger Transact Contributor Meeting is today at 10am CDT.\n\nThis meeting can be found on the Hyperledger Community Meetings Calendar: https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings\nYou can also join the zoom link here: https://zoom.us/j/761947873\n\nThe agenda for this meeting is located here: https://wiki.hyperledger.org/pages/viewpage.action?pageId=24773672","username":"mfford","ts":"2019-11-04T13:44:38.135Z"}
{"msg":"Has joined the channel.","username":"saanvijay","ts":"2019-11-05T10:03:52.631Z","type":"uj"}
{"msg":"Few questions here https://github.com/hyperledger/transact-rfcs/pull/6","username":"arsulegai","ts":"2019-11-05T13:45:21.265Z"}
{"msg":"Is the work already started on this?","username":"arsulegai","ts":"2019-11-05T13:45:35.006Z"}
{"msg":"You can find the protocols for this here: https://github.com/hyperledger/transact/blob/master/libtransact/src/protocol/command.rs","username":"pschwarz","ts":"2019-11-05T16:16:04.964Z"}
{"msg":"Awesome","username":"arsulegai","ts":"2019-11-05T18:04:01.821Z"}
{"msg":"The handler for it is here: https://github.com/hyperledger/transact/blob/master/libtransact/src/workload/command.rs","username":"pschwarz","ts":"2019-11-05T19:50:51.503Z"}
{"msg":"(I had to take another look for it)","username":"pschwarz","ts":"2019-11-05T19:51:01.382Z"}
{"msg":"Not where I thought it would be","username":"pschwarz","ts":"2019-11-05T19:51:10.944Z"}
{"msg":"Thanks, is there a pending task in that or shall I dig into it to see if there's a need for anything?","username":"arsulegai","ts":"2019-11-06T03:53:58.000Z"}
{"msg":"@arsulegai digging into it would be great","username":"amundson","ts":"2019-11-06T16:19:51.900Z"}
{"msg":"I get this error `the trait `sawtooth_sdk::processor::handler::TransactionHandler` is not implemented for `handler::XYZHandler`` Trying to figure out what could be wrong with it.. Any help?","username":"arsulegai","ts":"2019-11-12T14:57:08.581Z"}
{"msg":"I get this error ```the trait `sawtooth_sdk::processor::handler::TransactionHandler` is not implemented for `handler::XYZHandler```` Trying to figure out what could be wrong with it.. Any help?","username":"arsulegai","ts":"2019-11-12T14:57:08.581Z"}
{"msg":"I get this error ```the trait `sawtooth_sdk::processor::handler::TransactionHandler` is not implemented for `handler::XYZHandler``` ` Trying to figure out what could be wrong with it.. Any help?","username":"arsulegai","ts":"2019-11-12T14:57:08.581Z"}
{"msg":"I get this error ``` the trait `sawtooth_sdk::processor::handler::TransactionHandler` is not implemented for `handler::XYZHandler```  ` Trying to figure out what could be wrong with it.. Any help?","username":"arsulegai","ts":"2019-11-12T14:57:08.581Z"}
{"msg":"The same Handler works well when run on the HL Sawtooth","username":"arsulegai","ts":"2019-11-12T14:58:17.938Z"}
{"msg":"note: required by `transact::sawtooth::SawtoothToTransactHandlerAdapter`","username":"arsulegai","ts":"2019-11-12T15:05:27.779Z"}
{"msg":"Do you have the `sawtooth-compat` feature turned on?","username":"pschwarz","ts":"2019-11-12T15:24:36.704Z"}
{"msg":"In the Cargo.toml file?","username":"arsulegai","ts":"2019-11-12T15:39:34.366Z"}
{"msg":"Yes","username":"pschwarz","ts":"2019-11-12T17:20:01.708Z"}
{"msg":"There may be some compilation discrepancies due to the differing versions of the sawtooth sdk that the transact compat layer uses and your handler.","username":"pschwarz","ts":"2019-11-12T17:20:59.095Z"}
{"msg":"Bingo!","username":"arsulegai","ts":"2019-11-12T17:26:06.385Z"}
{"msg":"0.3.0 version of sawtooth-sdk worked for me","username":"arsulegai","ts":"2019-11-12T17:26:39.713Z"}
{"msg":"I went into an open PR and looked at the splinter code, it's interesting to see how it works in those cases. I'm blank on that","username":"arsulegai","ts":"2019-11-12T17:28:51.524Z"}
{"msg":"Has joined the channel.","username":"AthilGafoor","ts":"2019-11-14T05:15:48.089Z","type":"uj"}
{"msg":"Is there a document/place I can look for to learn how to run Sabre on Transact?","username":"arsulegai","ts":"2019-11-14T09:44:36.811Z"}
{"msg":"Has joined the channel.","username":"AmimKnabben","ts":"2019-11-29T01:10:52.564Z","type":"uj"}
{"msg":"Will we have these calls rescheduled?","username":"arsulegai","ts":"2019-12-02T16:03:40.946Z"}
{"msg":"@arsulegai we should switch to an as-needed meeting model, and try and discuss more items here","username":"amundson","ts":"2019-12-02T16:10:24.076Z"}
{"msg":"No second thoughts on that, agree with you.","username":"arsulegai","ts":"2019-12-02T16:12:48.838Z"}
{"msg":"New feature implementations, planned design changes are the interesting topics to discuss (here/need basis calls). It will align the thoughts on where the community is moving towards.. Just my opinion.","username":"arsulegai","ts":"2019-12-02T16:14:34.331Z"}
{"msg":"Has joined the channel.","username":"slavitch","ts":"2019-12-02T17:27:00.020Z","type":"uj"}
{"msg":"@arsulegai based on your previous feedback, we are adding the ability to store invalid results in the receipt store - https://github.com/hyperledger/transact/pull/26","username":"amundson","ts":"2019-12-02T19:03:43.095Z"}
{"msg":"Storing the invalid results can be optional.. Storing the invalid transaction result becomes underlying blockchain/distributed platform implementation dependent. The end result of this could be a bloated invalid transactions in transaction receipt store.","username":"arsulegai","ts":"2019-12-03T04:44:15.644Z"}
{"msg":"The other alternative could be to time the storage of invalid transactions in the receipt store.","username":"arsulegai","ts":"2019-12-03T04:44:44.462Z"}
{"msg":"Storing the invalid results is an error message that can be used to determine if there is s","username":"slavitch","ts":"2019-12-03T21:32:01.611Z"}
{"msg":"Storing the invalid results is an error message that can be used to determine if there is some kind of attack or error in logic.  A big problem with Hyperledger in particular is the opaque nature of  the system.  An audit trail should have failures as well as successes.","username":"slavitch","ts":"2019-12-03T21:32:01.611Z"}
{"msg":"storing invalid transaction results opens the network up to more DoS attacks that have to be mitigated, which is why Sawtooth's architecture doesn't store them. however, future Sawtooth or Scabbard can make different architectural decisions at that level, so from a Transact perspective, we just want to enable making that decision at the higher level.","username":"amundson","ts":"2019-12-05T16:24:53.417Z"}
{"msg":"@slavitch not sure what you mean by \"Hyperledger\" - did you mean a specific project?","username":"amundson","ts":"2019-12-05T16:26:19.909Z"}
{"msg":"We are planning on starting a transact javascript SDK, waiting on repo creation. initial code is in a splinter PR now, but planning on pushing it down to the Transact layer instead as its useful generally for anyone using Transact.","username":"amundson","ts":"2019-12-05T16:28:23.325Z"}
{"msg":"Is there any documentation on authentication and access control for Transact?   My use case would have to interoperate with an external CA that provides X.509 certificates for humans signed using RSA.","username":"slavitch","ts":"2019-12-05T17:51:13.031Z"}
{"msg":"@slavitch Transact operates at a lower level than those concerns (it handles transaction processing, not not decisions about whether to process the transactions).","username":"amundson","ts":"2019-12-05T18:33:35.609Z"}
{"msg":"So that's done in the Smart Contract Engines?   Can you recommend one that supports RSA signature verification, and support existing RSA-based x.509 certificates without  requiring changes to PKI infrastructure?","username":"slavitch","ts":"2019-12-05T18:46:26.148Z"}
{"msg":"Has joined the channel.","username":"Dipspaw","ts":"2019-12-12T05:41:27.247Z","type":"uj"}
{"msg":"The new experimental addresser feature just went into master - https://github.com/hyperledger/transact/pull/27","username":"amundson","ts":"2019-12-13T17:53:44.244Z"}
{"msg":"Has joined the channel.","username":"harrywright","ts":"2019-12-18T18:13:14.382Z","type":"uj"}
{"msg":"new addressing example - https://github.com/hyperledger/transact/tree/master/examples/address_generator","username":"amundson","ts":"2020-01-03T17:39:03.437Z"}
{"msg":"we should be able to simplify a lot of existing sawtooth smart contracts by updating them to use addressers to handle address calculations instead of doing it manually as done today","username":"amundson","ts":"2020-01-03T17:41:38.763Z"}
{"msg":"Has joined the channel.","username":"Silona","ts":"2020-01-03T21:48:26.021Z","type":"uj"}
{"msg":"Has joined the channel.","username":"raccoonrat","ts":"2020-01-07T03:34:16.425Z","type":"uj"}
{"msg":"Help Us Help you!  Attend the Developer Relationship Meeting with Myself and our Marketing Dept. tomorrow at 9:00am Pacific Time. \n\nFor the agenda and Dial in info\nhttps://wiki.hyperledger.org/display/Marketing/2020-01-15+Meeting+notes ","username":"Silona","ts":"2020-01-14T16:50:59.237Z"}
{"msg":"Calling all Projects!  We will have a special Kiosk setup at Hyperledger Global Forum for Projects.  We are asking that all projects sign up to do 10 minute presentations.  https://wiki.hyperledger.org/display/HGF/Projects+Kiosk  We will close this page on Feb 28 for printing reasons. ","username":"Silona","ts":"2020-01-14T17:01:53.447Z"}
{"msg":"Calling all Projects, SIG, and WG!!!  We will have a Video recording Studio setup at HGF (Hyperledger Global Forum). We are asking that all projects and groups help us create a 5 minute video about your group so that we can promote it afterward. Sign up Here! https://wiki.hyperledger.org/display/HGF/Video+Recording+Schedule","username":"Silona","ts":"2020-01-14T17:06:32.395Z"}
{"msg":"Version 0.1.7 of Transact has been released! ","username":"rbuysse","ts":"2020-01-27T15:48:23.313Z"}
{"msg":"You can view the release notes at https://github.com/hyperledger/transact/blob/v0.1.7/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-01-27T15:48:39.176Z"}
{"msg":"Hi Everyone, We are hoping to hear from everyone as we assess the health of our open source community. Please take 2 minutes to respond here: https://www.surveymonkey.com/r/DCIWGsurvey","username":"Dan","ts":"2020-01-27T20:46:14.499Z"}
{"msg":"we are considering pulling pieces of sabre directly into libtransact as an optional feature, then making sawtooth-sabre depend upon transact for the pieces we move into transact","username":"amundson","ts":"2020-01-27T21:50:43.873Z"}
{"msg":"The Linux Foundation’s CommunityBridge engineers are working on a tool to measure the health of critical open source projects and one of the key areas identified is QA Testing.  They request that our communities provide  honest and detailed information on testing tools and methodologies you use in your projects for us to come up with a detailed analysis, which they will share with all respondents and projects. https://www.surveymonkey.com/r/9H5G2GV. It’s only 5 questions long.  ","username":"Silona","ts":"2020-01-27T22:27:56.237Z"}
{"msg":"Has joined the channel.","username":"Patrick-Erichsen","ts":"2020-01-31T16:47:49.021Z","type":"uj"}
{"msg":"I'd like to request a release for transact. There are number of breaking changes, so this should be v0.2.","username":"ltseeley","ts":"2020-02-04T15:02:39.260Z"}
{"msg":"I'd like to request a release for transact. There are a number of breaking changes, so this should be v0.2.","username":"ltseeley","ts":"2020-02-04T15:02:39.260Z"}
{"msg":"@rbuysse ","username":"pschwarz","ts":"2020-02-04T18:56:09.055Z"}
{"msg":":point_up: ","username":"pschwarz","ts":"2020-02-04T18:56:15.496Z"}
{"msg":"sounds good.","username":"rbuysse","ts":"2020-02-04T19:32:25.799Z"}
{"msg":"A new version (0.2.0) of Transact has been released. You can view the release notes at https://github.com/hyperledger/transact/blob/v0.2.0/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-04T22:16:22.746Z"}
{"msg":"I'd like to request a new release for transact (v0.2.1) to make the changes in https://github.com/hyperledger/transact/pull/43 available","username":"ltseeley","ts":"2020-02-10T15:44:36.043Z"}
{"msg":"@rbuysse ^","username":"amundson","ts":"2020-02-10T15:59:39.211Z"}
{"msg":"A new version (0.2.1) of Transact has been released. You can view the release notes at https://github.com/hyperledger/transact/blob/v0.2.1/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-12T20:37:16.300Z"}
{"msg":"Howdy Contributors and Maintainers!  Are you wondering about tapping into Developer marketing for your group or project?  Do you have a blog post idea?  An awesome announcement? Please attend our Contributor/marketing meeting!  https://wiki.hyperledger.org/display/Marketing/2020-02-19+Meeting+notes","username":"Silona","ts":"2020-02-13T18:26:20.965Z"}
{"msg":"Are you wondering about tapping into Developer marketing for your group or project?  Do you have a blog post idea?  An awesome announcement? Please attend TOMORROW!  https://wiki.hyperledger.org/display/Marketing/2020-02-19+Meeting+notes","username":"Silona","ts":"2020-02-17T22:19:27.968Z"}
{"msg":"Has joined the channel.","username":"mslavitch","ts":"2020-02-17T22:22:39.233Z","type":"uj"}
{"msg":"Requesting a new release of transact (v0.2.2) due to https://github.com/hyperledger/transact/pull/47","username":"ltseeley","ts":"2020-02-18T18:15:12.365Z"}
{"msg":":thumbsup: ","username":"rbuysse","ts":"2020-02-18T20:47:12.867Z"}
{"msg":"A new version (0.2.2) of Transact has been released. You can view the release notes at https://github.com/hyperledger/transact/blob/v0.2.2/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-18T21:31:28.957Z"}
{"msg":"Requesting a v0.2.3 transact release","username":"ltseeley","ts":"2020-02-20T20:00:45.076Z"}
{"msg":"A new version (0.2.3) of Transact has been released. You can view the release notes at https://github.com/hyperledger/transact/blob/v0.2.3/RELEASE_NOTES.md","username":"rbuysse","ts":"2020-02-20T21:16:56.523Z"}
{"msg":"Has left the channel.","username":"Patrick-Erichsen","ts":"2020-02-20T21:17:35.650Z","type":"ul"}
{"msg":"Has joined the channel.","username":"kumar89","ts":"2020-04-07T16:04:49.674Z","type":"uj"}
{"msg":"Has left the channel.","username":"MHBauer","ts":"2020-04-16T21:18:37.547Z","type":"ul"}
{"msg":"we are planning to move the contract-archive feature from experimental to stable. if you want to participate in feature review, now is the time to go look at the code and comment here with suggestions.","username":"amundson","ts":"2020-04-22T14:54:16.921Z"}
{"msg":"How is that planned to be used? Is it a store for blockchain implementation to load and remember contracts uploaded?","username":"arsulegai","ts":"2020-04-23T10:59:41.105Z"}
{"msg":"@arsulegai it's intended as a standard way to package/archive smart contracts. `scar` files will be accepted by tools for uploading smart contracts to Transact.","username":"ltseeley","ts":"2020-04-23T13:33:20.927Z"}
{"msg":"Got it! Thanks..","username":"arsulegai","ts":"2020-04-23T14:26:41.103Z"}
{"msg":"I'd like to request a new patch release for transact","username":"ltseeley","ts":"2020-04-28T18:38:58.267Z"}
{"msg":"Has joined the channel.","username":"sawtooth","ts":"2020-05-13T05:26:23.862Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jmbarry","ts":"2020-05-18T15:01:05.406Z","type":"uj"}
{"msg":"I'd like to request a new patch release of transact, to include the stabilized contract-archive feature.","username":"pschwarz","ts":"2020-05-20T19:31:16.175Z"}
{"msg":"Has joined the channel.","username":"shadab14meb346","ts":"2020-07-09T04:38:58.713Z","type":"uj"}
{"msg":"Is there a quickstart or tour guide or something for transact?  The rust library docs are mostly a pile of facts.  What I am interested in looking at is the feasibility/effort of implementing the 0MQ (IPC based in generally really) based engine","username":"kodonnel","ts":"2020-07-10T16:30:24.823Z"}
{"msg":"not anything that eases you into it, no. a lot of the Sawtooth TEP doc applies at a high-level, and there is some high-level stuff in the project proposal","username":"amundson","ts":"2020-07-10T17:21:25.999Z"}
{"msg":"Swetha contributed the simple_xo example which is fairly simple but also needs some cleaning up in terms of thread handling","username":"amundson","ts":"2020-07-10T17:23:00.448Z"}
{"msg":"this static adapter code is the most relevant piece of the code - https://github.com/hyperledger/transact/blob/master/libtransact/src/execution/adapter/static_adapter.rs","username":"amundson","ts":"2020-07-10T17:24:50.061Z"}
{"msg":"Basically, we would want a ZmqAdapter in addition to that StaticAdapter","username":"amundson","ts":"2020-07-10T17:25:28.096Z"}
{"msg":"Basically, we would want a ZmqExecutionAdapter in addition to that StaticExecutionAdapter","username":"amundson","ts":"2020-07-10T17:25:28.096Z"}
{"msg":"My previous plan was to use libsplinter's Transport code to do this - https://github.com/Cargill/splinter/tree/master/libsplinter/src/transport -- still probably makes sense","username":"amundson","ts":"2020-07-10T17:27:49.771Z"}
{"msg":"there is ZMQ code there already, though it doesn't pass all the tests. I guess that would make it a TransportExecutionAdapter","username":"amundson","ts":"2020-07-10T17:28:19.233Z"}
{"msg":"Has joined the channel.","username":"spore-engineering","ts":"2020-07-10T18:08:18.030Z","type":"uj"}
{"msg":"what happened to your beard man","username":"spore-engineering","ts":"2020-07-10T18:10:50.099Z"}
{"msg":"Cheers, That's sort of along the lines I was thinking.","username":"kodonnel","ts":"2020-07-11T01:50:31.216Z"}
{"msg":"@kodonnel daml has a rust sdk now right?","username":"amundson","ts":"2020-07-24T19:41:01.339Z"}
{"msg":"There's a prototype rust based engine, but it's nowhere near prime time.  Main line is Scala/jvm based. There may be some client sdks out there but that's most likely just the grpc side of things ","username":"kodonnel","ts":"2020-07-24T20:11:49.496Z"}
{"msg":"Has joined the channel.","username":"duncanjw","ts":"2020-07-25T15:42:30.690Z","type":"uj"}
{"msg":"Has joined the channel.","username":"lebdron","ts":"2020-07-31T09:16:15.617Z","type":"uj"}
{"msg":"Has left the channel.","username":"cbf","ts":"2020-08-20T14:27:25.627Z","type":"ul"}
{"msg":"Has joined the channel.","username":"newhall","ts":"2020-08-20T18:46:45.894Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jcldnatv","ts":"2020-08-22T17:30:25.387Z","type":"uj"}
{"msg":"Has joined the channel.","username":"supriya2385","ts":"2020-08-27T07:53:52.532Z","type":"uj"}
{"msg":"is there any sdks apart from rust?","username":"supriya2385","ts":"2020-08-27T07:53:52.907Z"}
{"msg":"is any java sdk available for transact?","username":"supriya2385","ts":"2020-08-27T10:50:45.017Z"}
{"msg":"@supriya2385 no, but there's go client SDK","username":"arsulegai","ts":"2020-08-27T11:20:19.131Z"}
{"msg":"Has joined the channel.","username":"ashlinSajan","ts":"2020-08-27T12:01:48.950Z","type":"uj"}
{"msg":"@amundson I have seen in the transact repo the following lines\n\"The transact-contrib repository contains examples and reference implementations\"\nBut I haven't seen any commands to run or proper code in the transact-contrib repo\nCould you please suggest where the sample implementation is how can I run the same?","username":"ashlinSajan","ts":"2020-08-27T12:06:25.013Z"}
{"msg":"ok","username":"supriya2385","ts":"2020-08-27T14:27:09.110Z"}
{"msg":"@supriya2385 there is also a client sdk for javascript. roadmap-wise, it depends what you want the sdk for. currently there are no SDKs planning for wrapping the core execution code, but there are plans to expand the sdk support for clients and smart contracts","username":"amundson","ts":"2020-08-27T15:22:56.270Z"}
{"msg":"@ashlinSajan it should probably read \"Future home of\" there, but the general idea is that contrib is a space for things that aren't technically part of the transact releases. There are some examples in the main transact repo; if you share a little about your use case I can try and point you in the right direction.","username":"amundson","ts":"2020-08-27T15:26:20.395Z"}
{"msg":"Hi Shawn\nThanks for your reply\nI wanted to explore the transact functionality.If there is a demo example it will be more easily understandable\nIs there a demo example to run and see in the main transact repo","username":"ashlinSajan","ts":"2020-08-28T04:35:31.898Z"}
{"msg":"@ashlinSajan There is an example here, though its handling of threads isn't necessarily the best - https://github.com/hyperledger/transact/tree/master/examples/simple_xo ; if you want a fully working distributed ledger example, you could look at Scabbard, which is a simple DLT written using Transact - https://github.com/Cargill/splinter/tree/master/services/scabbard; there is also a lot of effort/code going in Sawtooth right now to support Transact, though that isn't example-level code as Sawtooth itself is fairly complex.","username":"amundson","ts":"2020-08-28T14:26:51.412Z"}
{"msg":"Has joined the channel.","username":"manoranjith","ts":"2020-10-02T06:23:54.311Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Sandeepk40","ts":"2020-10-07T04:25:52.189Z","type":"uj"}
{"msg":"Has joined the channel.","username":"jaromil","ts":"2020-10-09T00:02:33.833Z","type":"uj"}
{"msg":"hi! is there any documentation on using transact with sawtooth, fabric or any other hyperledger blockchain?","username":"jaromil","ts":"2020-10-09T00:05:29.717Z"}
{"msg":"Not as such, as Transact isn't selected at runtime by a user. Sawtooth's master branch uses Transact and Splinter's Scabbard services uses Transact. In both cases, Transact isn't optional. Both are good examples of how to use Transact, with Scabbard being the simpler of the two.","username":"amundson","ts":"2020-10-09T17:13:06.383Z"}
{"msg":"Has joined the channel.","username":"piyushmaheshwari65","ts":"2020-11-25T04:20:54.751Z","type":"uj"}
{"msg":"Has joined the channel.","username":"Tmermer1","ts":"2021-01-11T10:14:10.891Z","type":"uj"}
{"msg":"Has joined the channel.","username":"rjones","ts":"2021-01-25T18:28:16.250Z","type":"uj"}
{"msg":"Hi, the following repos still use `master` as the default branch: `transact, transact-sdk-go, transact-sdk-javascript`. `main` [is the current guidance for naming](https://github.com/github/renaming).","username":"rjones","ts":"2021-01-25T18:28:16.399Z"}
{"msg":"@rberg2 ^","username":"arsulegai","ts":"2021-01-25T18:30:37.830Z"}
{"msg":"@rjones thanks, we are putting together a plan to roll out that change for Transact. We plan to start with Transact before we do Grid and then Sawtooth.","username":"amundson","ts":"2021-01-27T14:53:53.291Z"}
{"msg":"Has joined the channel.","username":"charith1994","ts":"2021-05-15T17:05:34.352Z","type":"uj"}
{"msg":"Has joined the channel.","username":"sukrutsathaye","ts":"2021-07-26T16:25:26.801Z","type":"uj"}
{"msg":"are there any examples of using Transact with besu?","username":"sukrutsathaye","ts":"2021-08-06T08:31:37.556Z"}
{"msg":"Has joined the channel.","username":"isabeltomb","ts":"2021-08-31T20:51:33.597Z","type":"uj"}
{"msg":"Has joined the channel.","username":"leebradley","ts":"2021-09-03T15:48:05.246Z","type":"uj"}
{"msg":"Has joined the channel.","username":"igorkrupczynski","ts":"2021-09-16T10:15:38.595Z","type":"uj"}
{"msg":"Has joined the channel.","username":"BigmoneyJoe","ts":"2021-12-01T15:57:19.861Z","type":"uj"}
{"msg":"Hello, is the project Quarterly Update available by any chance. Contributors, when can we expect the updates?","username":"BigmoneyJoe","ts":"2021-12-01T15:57:22.108Z"}
{"msg":"The update is going up today. It was delayed due to Thanksgiving.","username":"agunde","ts":"2021-12-01T16:49:27.091Z"}
{"msg":"@agunde. Thanks for posting the project updates.","username":"BigmoneyJoe","ts":"2021-12-02T14:25:20.562Z"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:36:05.945Z","type":"room_changed_description"}
{"msg":"","username":"rjones","ts":"2022-03-23T17:36:05.949Z","type":"room_changed_announcement"}
